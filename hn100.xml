<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 30 Mar 2025 19:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Blue95: a desktop for your childhood home's computer room (208 pts)]]></title>
            <link>https://github.com/winblues/blue95</link>
            <guid>43524937</guid>
            <pubDate>Sun, 30 Mar 2025 15:30:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/winblues/blue95">https://github.com/winblues/blue95</a>, See on <a href="https://news.ycombinator.com/item?id=43524937">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<blockquote>
<p dir="auto">A desktop for your childhood home's computer room.</p>
</blockquote>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/b28273683cb8bd83979141fb1ccc1465b08175d51ad4dfad6d383d7954b8cef3/68747470733a2f2f626c756539352e6e656f6369746965732e6f72672f73637265656e73686f742d77696e616d702e706e67"><img src="https://camo.githubusercontent.com/b28273683cb8bd83979141fb1ccc1465b08175d51ad4dfad6d383d7954b8cef3/68747470733a2f2f626c756539352e6e656f6369746965732e6f72672f73637265656e73686f742d77696e616d702e706e67" alt="main-screenshot" data-canonical-src="https://blue95.neocities.org/screenshot-winamp.png"></a></p>
<p dir="auto">Blue95 is a modern and lightweight desktop experience that is reminiscent of a bygone era of computing.
Based on Fedora Atomic Xfce with the <a href="https://github.com/grassmunk/Chicago95">Chicago95</a> theme.</p>
<p dir="auto">For more screenshots, see <a href="https://github.com/ledif/blue95/blob/main/docs/screenshots.md">screenshots.md</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Try It Out</h2><a id="user-content-try-it-out" aria-label="Permalink: Try It Out" href="#try-it-out"></a></p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">Live CD is a new feature and is still in testing.</p>
</div>
<p dir="auto">We are now creating a <a href="https://pub-969fbc86b5f24e4d81c6d022e8fd8dde.r2.dev/blue95-live-latest.iso" rel="nofollow">Live ISO</a> that can be used to boot into a Blue95 live environment. Test it out without needing to install anything.</p>
<p dir="auto">Note that the included installer is an alpha version and it is recommended to instead install Blue95 via the other methods listed below.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">From ISO</h3><a id="user-content-from-iso" aria-label="Permalink: From ISO" href="#from-iso"></a></p>
<p dir="auto">We are currently having issues with our installer ISOs. The current recommended installation path is though rebasing from a different Fedora Atomic desktop, preferably from an Xfce-based image such as <a href="https://github.com/winblues/vauxite">winblues/vauxite</a>.</p>
<p dir="auto">After installing vauixite, you can rebase directly to this image with:</p>
<div data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-image-signed:docker://ghcr.io/winblues/blue95:latest"><pre><code>rpm-ostree rebase ostree-image-signed:docker://ghcr.io/winblues/blue95:latest
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">From Other Atomic Desktops</h3><a id="user-content-from-other-atomic-desktops" aria-label="Permalink: From Other Atomic Desktops" href="#from-other-atomic-desktops"></a></p>
<p dir="auto">If you are currently using an atomic desktop, you can rebase to the latest blue95 image.</p>
<ul dir="auto">
<li>First rebase to the unsigned image, to get the proper signing keys and policies installed:
<div data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-unverified-registry:ghcr.io/winblues/blue95:latest"><pre><code>rpm-ostree rebase ostree-unverified-registry:ghcr.io/winblues/blue95:latest
</code></pre></div>
</li>
<li>Reboot and then rebase to the signed image, like so:
<div data-snippet-clipboard-copy-content="rpm-ostree rebase ostree-image-signed:docker://ghcr.io/winblues/blue95:latest"><pre><code>rpm-ostree rebase ostree-image-signed:docker://ghcr.io/winblues/blue95:latest
</code></pre></div>
</li>
</ul>
<p dir="auto">It is recommended to create a new user after rebasing.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Project Goals</h2><a id="user-content-project-goals" aria-label="Permalink: Project Goals" href="#project-goals"></a></p>
<ul dir="auto">
<li>Match upstream Fedora Xfce in terms of core system components and update schedule.</li>
<li>Pull in tweaks from <a href="https://github.com/ublue-os">Universal Blue</a> (e.g. codecs, automatic updates, etc) to produce a more usable out-of-the box experience.</li>
<li>Provide an aesthetic rooted in a bygone era of computing.</li>
</ul>
<p dir="auto"><strong>Non goals</strong>:</p>
<ul dir="auto">
<li>Faithful reproduction of design elements from decades old operating systems. Whenever usability and exact replication are at odds, usability and accessibility will generally be preferred.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Shoutouts</h2><a id="user-content-shoutouts" aria-label="Permalink: Shoutouts" href="#shoutouts"></a></p>
<ul dir="auto">
<li><a href="https://github.com/grassmunk">@grassmunk</a>/<a href="https://github.com/dominichayesferen">@dominichayesferen</a> for <a href="https://github.com/grassmunk/Chicago95">Chicago95</a> and <a href="https://github.com/dominichayesferen/Chicagofier">Chicagofier</a> respectively</li>
<li><a href="https://github.com/blue-build">BlueBuild</a>, <a href="https://github.com/ublue-os">Universal Blue</a> and <a href="https://fedoraproject.org/" rel="nofollow">Fedora</a></li>
<li>The <a href="https://www.xfce.org/" rel="nofollow">Xfce</a> team</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Hacker Laws (110 pts)]]></title>
            <link>https://hacker-laws.com/</link>
            <guid>43523974</guid>
            <pubDate>Sun, 30 Mar 2025 13:21:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hacker-laws.com/">https://hacker-laws.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43523974">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
      <p>Laws, Theories, Principles and Patterns that developers will find useful.</p>
    </div><div>
      <!-- Quick links. -->
      <ul>
<li>üìñ Check out my new book <a href="https://effective-shell/">Effective Shell</a> on <a href="https://amzn.to/4ho0F91">Amazon</a></li>
<li>üåç Try <a href="https://hacker-laws.com/">hacker-laws.com</a></li>
<li>üß† Experiment with my new project <a href="https://github.com/dwmkerr/terminal-ai">Terminal AI</a></li>
<li>‚òïÔ∏è Like this project? Consider <a href="https://github.com/sponsors/dwmkerr?frequency=one-time">buying me a coffee with a one-off donation</a></li>
<li>üéß Listen to the podcast <a href="https://changelog.com/podcast/403">The Changelog - Laws for Hackers to Live By</a></li>
<li>üìñ Download the <a href="https://github.com/dwmkerr/hacker-laws/releases/latest/download/hacker-laws.pd">PDF eBook</a></li>
</ul>
      <hr>
      <!-- The table of contents. -->
      <div>
<ul>
<li><a href="#introduction">Introduction</a></li>
<li><a href="#laws">Laws</a><ul>
<li><a href="#9091-principle-1-rule">90‚Äì9‚Äì1 Principle (1% Rule)</a></li>
<li><a href="#9090-rule">90‚Äì90 Rule</a></li>
<li><a href="#amdahls-law">Amdahl's Law</a></li>
<li><a href="#the-broken-windows-theory">The Broken Windows Theory</a></li>
<li><a href="#brooks-law">Brooks' Law</a></li>
<li><a href="#cap-theorem-brewers-theorem">CAP Theorem (Brewer's Theorem)</a></li>
<li><a href="#clarkes-three-laws">Clarke's three laws</a></li>
<li><a href="#conways-law">Conway's Law</a></li>
<li><a href="#cunninghams-law">Cunningham's Law</a></li>
<li><a href="#dunbars-number">Dunbar's Number</a></li>
<li><a href="#the-dunning-kruger-effect">The Dunning-Kruger Effect</a></li>
<li><a href="#fitts-law">Fitts' Law</a></li>
<li><a href="#galls-law">Gall's Law</a></li>
<li><a href="#goodharts-law">Goodhart's Law</a></li>
<li><a href="#hanlons-razor">Hanlon's Razor</a></li>
<li><a href="#hicks-law-hick-hyman-law">Hick's Law (Hick-Hyman Law)</a></li>
<li><a href="#hofstadters-law">Hofstadter's Law</a></li>
<li><a href="#hutbers-law">Hutber's Law</a></li>
<li><a href="#the-hype-cycle-amaras-law">The Hype Cycle &amp; Amara's Law</a></li>
<li><a href="#hyrums-law-the-law-of-implicit-interfaces">Hyrum's Law (The Law of Implicit Interfaces)</a></li>
<li><a href="#input-process-output-ipo">Input-Process-Output (IPO)</a></li>
<li><a href="#kernighans-law">Kernighan's Law</a></li>
<li><a href="#linuss-law">Linus's Law</a></li>
<li><a href="#metcalfes-law">Metcalfe's Law</a></li>
<li><a href="#moores-law">Moore's Law</a></li>
<li><a href="#murphys-law-sods-law">Murphy's Law / Sod's Law</a></li>
<li><a href="#occams-razor">Occam's Razor</a></li>
<li><a href="#parkinsons-law">Parkinson's Law</a></li>
<li><a href="#premature-optimization-effect">Premature Optimization Effect</a></li>
<li><a href="#putts-law">Putt's Law</a></li>
<li><a href="#reeds-law">Reed's Law</a></li>
<li><a href="#the-bitter-lesson">The Bitter Lesson</a></li>
<li><a href="#the-ringelmann-effect">The Ringelmann Effect</a></li>
<li><a href="#the-law-of-conservation-of-complexity-teslers-law">The Law of Conservation of Complexity (Tesler's Law)</a></li>
<li><a href="#the-law-of-demeter">The Law of Demeter</a></li>
<li><a href="#the-law-of-leaky-abstractions">The Law of Leaky Abstractions</a></li>
<li><a href="#the-law-of-the-instrument">The Law of the Instrument</a></li>
<li><a href="#the-law-of-triviality">The Law of Triviality</a></li>
<li><a href="#the-unix-philosophy">The Unix Philosophy</a></li>
<li><a href="#the-scout-rule">The Scout Rule</a></li>
<li><a href="#the-spotify-model">The Spotify Model</a></li>
<li><a href="#the-two-pizza-rule">The Two Pizza Rule</a></li>
<li><a href="#twymans-law">Twyman's law</a></li>
<li><a href="#wadlers-law">Wadler's Law</a></li>
<li><a href="#wheatons-law">Wheaton's Law</a></li>
</ul>
</li>
<li><a href="#principles">Principles</a><ul>
<li><a href="#all-models-are-wrong-george-boxs-law">All Models Are Wrong (George Box's Law)</a></li>
<li><a href="#chestertons-fence">Chesterton's Fence</a></li>
<li><a href="#kerckhoffss-principle">Kerckhoffs's principle</a></li>
<li><a href="#the-dead-sea-effect">The Dead Sea Effect</a></li>
<li><a href="#the-dilbert-principle">The Dilbert Principle</a></li>
<li><a href="#the-pareto-principle-the-8020-rule">The Pareto Principle (The 80/20 Rule)</a></li>
<li><a href="#the-shirky-principle">The Shirky Principle</a></li>
<li><a href="#the-peter-principle">The Peter Principle</a></li>
<li><a href="#the-robustness-principle-postels-law">The Robustness Principle (Postel's Law)</a></li>
<li><a href="#solid">SOLID</a></li>
<li><a href="#the-single-responsibility-principle">The Single Responsibility Principle</a></li>
<li><a href="#the-openclosed-principle">The Open/Closed Principle</a></li>
<li><a href="#the-liskov-substitution-principle">The Liskov Substitution Principle</a></li>
<li><a href="#the-interface-segregation-principle">The Interface Segregation Principle</a></li>
<li><a href="#the-dependency-inversion-principle">The Dependency Inversion Principle</a></li>
<li><a href="#the-dry-principle">The DRY Principle</a></li>
<li><a href="#the-kiss-principle">The KISS principle</a></li>
<li><a href="#yagni">YAGNI</a></li>
<li><a href="#the-fallacies-of-distributed-computing">The Fallacies of Distributed Computing</a></li>
<li><a href="#the-principle-of-least-astonishment">The Principle of Least Astonishment</a></li>
</ul>
</li>
<li><a href="#reading-list">Reading List</a></li>
<li><a href="#online-resources">Online Resources</a></li>
<li><a href="#pdf-ebook">PDF eBook</a></li>
<li><a href="#podcast">Podcast</a></li>
<li><a href="#translations">Translations</a></li>
<li><a href="#related-projects">Related Projects</a></li>
<li><a href="#contributing">Contributing</a></li>
<li><a href="#todo">TODO</a></li>
</ul>
</div>

      <hr>

      <!-- Each of the sections - most of which are laws. -->
      
      <section id="introduction">
        <h2 id="introduction">Introduction</h2>
<p>There are lots of laws which people discuss when talking about development. This repository is a reference and overview of some of the most common ones. Please share and submit PRs!</p>
<p>‚ùó: This repo contains an explanation of some laws, principles and patterns, but does not <em>advocate</em> for any of them. Whether they should be applied will always be a matter of debate, and greatly dependent on what you are working on.</p>
        
      </section>
      
      <section id="laws">
        <h2 id="laws">Laws</h2>
<p>Laws can be opinions on inevitabilities in the world of software engineering, or wry observations on unavoidable realities.</p>
        
      </section>
      
      <section id="90‚Äì9‚Äì1-principle-(1%-rule)">
        <h2 id="9091-principle-1-rule">90‚Äì9‚Äì1 Principle (1% Rule)</h2>
<p><a href="https://en.wikipedia.org/wiki/1%25_rule_(Internet_culture)">1% Rule on Wikipedia</a></p>
<p>The 90-9-1 principle suggests that within an internet community such as a wiki, 90% of participants only consume content, 9% edit or modify content and 1% of participants add content.</p>
<p>Real-world examples:</p>
<ul>
<li>A 2014 study of four digital health social networks found the top 1% created 73% of posts, the next 9% accounted for an average of ~25% and the remaining 90% accounted for an average of 2% (<a href="https://www.jmir.org/2014/2/e33/">Reference</a>)</li>
</ul>
<p>See Also:</p>
<ul>
<li><a href="#the-pareto-principle-the-8020-rule">Pareto principle</a></li>
</ul>
        
      </section>
      
      <section id="90‚Äì90-rule">
        <h2 id="9090-rule">90‚Äì90 Rule</h2>
<p><a href="https://en.wikipedia.org/wiki/Ninety%E2%80%93ninety_rule">90-90 Rule on Wikipedia</a></p>
<blockquote>
<p>The first 90 percent of the code accounts for the first 90 percent of the development time. The remaining 10 percent of the code accounts for the other 90 percent of the development time.</p>
</blockquote>
<p>A wry reinterpretation of the <a href="#the-pareto-principle-the-8020-rule">Pareto Principe (or 80-20 rule)</a> that highlights the real-world challenges of completing engineering work. This sentiment is also echoed in <a href="#hofstadters-law">Hofstadter's Law</a>.</p>
<p>See also:</p>
<ul>
<li><a href="#hofstadters-law">Hofstadter's Law</a></li>
<li><a href="#the-pareto-principle-the-8020-rule">The Pareto Principe</a></li>
</ul>
        
      </section>
      
      <section id="amdahl's-law">
        <h2 id="amdahls-law">Amdahl's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Amdahl%27s_law">Amdahl's Law on Wikipedia</a></p>
<blockquote>
<p>Amdahl's Law is a formula which shows the <em>potential speedup</em> of a computational task which can be achieved by increasing the resources of a system. Normally used in parallel computing, it can predict the actual benefit of increasing the number of processors, which is limited by the parallelisability of the program.</p>
</blockquote>
<p>Best illustrated with an example. If a program is made up of two parts, part A, which must be executed by a single processor, and part B, which can be parallelised, then we see that adding multiple processors to the system executing the program can only have a limited benefit. It can potentially greatly improve the speed of part B - but the speed of part A will remain unchanged.</p>
<p>The diagram below shows some examples of potential improvements in speed:</p>
<p><img width="480px" alt="Diagram: Amdahl's Law" src="https://hacker-laws.com/images/amdahls_law.png"></p>
<p><em>(Image Reference: By Daniels219 at English Wikipedia, Creative Commons Attribution-Share Alike 3.0 Unported, https://en.wikipedia.org/wiki/File:AmdahlsLaw.svg)</em></p>
<p>As can be seen, even a program which is 50% parallelisable will benefit very little beyond 10 processing units, whereas a program which is 95% parallelisable can still achieve significant speed improvements with over a thousand processing units.</p>
<p>As <a href="#moores-law">Moore's Law</a> slows, and the acceleration of individual processor speed slows, parallelisation is key to improving performance. Graphics programming is an excellent example - with modern Shader based computing, individual pixels or fragments can be rendered in parallel - this is why modern graphics cards often have many thousands of processing cores (GPUs or Shader Units).</p>
<p>See also:</p>
<ul>
<li><a href="#brooks-law">Brooks' Law</a></li>
<li><a href="#moores-law">Moore's Law</a></li>
</ul>
        
      </section>
      
      <section id="the-broken-windows-theory">
        <h2 id="the-broken-windows-theory">The Broken Windows Theory</h2>
<p><a href="https://en.wikipedia.org/wiki/Broken_windows_theory">The Broken Windows Theory on Wikipedia</a></p>
<p>The Broken Windows Theory suggests that visible signs of crime (or lack of care of an environment) lead to further and more serious crimes (or further deterioration of the environment).</p>
<p>This theory has been applied to software development, suggesting that poor quality code (or <a href="#TODO">Technical Debt</a>) can lead to a perception that efforts to improve quality may be ignored or undervalued, thus leading to further poor quality code. This effect cascades leading to a great decrease in quality over time.</p>
<p>See also:</p>
<ul>
<li><a href="#TODO">Technical Debt</a></li>
</ul>
<p>Examples:</p>
<ul>
<li><a href="https://flylib.com/books/en/1.315.1.15/1/">The Pragmatic Programming: Software Entropy</a></li>
<li><a href="https://blog.codinghorror.com/the-broken-window-theory/">Coding Horror: The Broken Window Theory</a></li>
<li><a href="https://opensourceforu.com/2011/05/joy-of-programming-broken-window-theory/">OpenSource: Joy of Programming - The Broken Window Theory</a></li>
</ul>
        
      </section>
      
      <section id="brooks'-law">
        <h2 id="brooks-law">Brooks' Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Brooks%27s_law">Brooks' Law on Wikipedia</a></p>
<blockquote>
<p>Adding human resources to a late software development project makes it later.</p>
</blockquote>
<p>This law suggests that in many cases, attempting to accelerate the delivery of a project which is already late, by adding more people, will make the delivery even later. Brooks is clear that this is an over-simplification, however, the general reasoning is that given the ramp-up time of new resources and the communication overheads, in the immediate short-term velocity decreases. Also, many tasks may not be divisible, i.e. easily distributed between more resources, meaning the potential velocity increase is also lower.</p>
<p>The common phrase in delivery "Nine women can't make a baby in one month" relates to Brooks' Law, in particular, the fact that some kinds of work are not divisible or parallelisable.</p>
<p>This is a central theme of the book '<a href="#reading-list">The Mythical Man Month</a>'.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Death March</a></li>
<li><a href="#reading-list">Reading List: The Mythical Man Month</a></li>
</ul>
        
      </section>
      
      <section id="cap-theorem-(brewer's-theorem)">
        <h2 id="cap-theorem-brewers-theorem">CAP Theorem (Brewer's Theorem)</h2>
<p>The CAP Theorem (defined by Eric Brewer) states that for a distributed data store only two out of the following three guarantees (at most) can be made:</p>
<ul>
<li>Consistency: when reading data, every request receives the <em>most recent</em> data or an error is returned</li>
<li>Availability: when reading data, every request receives <em>a non error response</em>, without the guarantee that it is the <em>most recent</em> data</li>
<li>Partition Tolerance: when an arbitrary number of network requests between nodes fail, the system continues to operate as expected</li>
</ul>
<p>The core of the reasoning is as follows. It is impossible to guarantee that a network partition will not occur (see <a href="#the-fallacies-of-distributed-computing">The Fallacies of Distributed Computing</a>). Therefore in the case of a partition we can either cancel the operation (increasing consistency and decreasing availability) or proceed (increasing availability but decreasing consistency).</p>
<p>The name comes from the first letters of the guarantees (Consistency, Availability, Partition Tolerance). Note that it is very important to be aware that this does <em>not</em> relate to <a href="#TODO"><em>ACID</em></a>, which has a different definition of consistency. More recently, <a href="#TODO">PACELC</a> theorem has been developed which adds constraints for latency and consistency when the network is <em>not</em> partitioned (i.e. when the system is operating as expected).</p>
<p>Most modern database platforms acknowledge this theorem implicitly by offering the user of the database the option to choose between whether they want a highly available operation (which might include a 'dirty read') or a highly consistent operation (for example a 'quorum acknowledged write').</p>
<p>Real world examples:</p>
<ul>
<li><a href="https://cloud.google.com/blog/products/gcp/inside-cloud-spanner-and-the-cap-theorem">Inside Google Cloud Spanner and the CAP Theorem</a> - Goes into the details of how Cloud Spanner works, which appears at first to seem like a platform which has <em>all</em> of the guarantees of CAP, but under the hood is essentially a CP system.</li>
</ul>
<p>See also:</p>
<ul>
<li><a href="#TODO">ACID</a></li>
<li><a href="#the-fallacies-of-distributed-computing">The Fallacies of Distributed Computing</a></li>
<li><a href="#TODO">PACELC</a></li>
</ul>
        
      </section>
      
      <section id="clarke's-three-laws">
        <h2 id="clarkes-three-laws">Clarke's three laws</h2>
<p><a href="https://en.wikipedia.org/wiki/Clarke's_three_laws">Clarke's three laws on Wikipedia</a></p>
<p>Arthur C. Clarke, an british science fiction writer, formulated three adages that are known as Clarke's three laws. The third law is the best known and most widely cited.  </p>
<p>These so-called laws are:<br>
- When a distinguished but elderly scientist states that something is possible, they are almost certainly right. When they state that something is impossible, they are very probably wrong.
- The only way of discovering the limits of the possible is to venture a little way past them into the impossible.
- Any sufficiently advanced technology is indistinguishable from magic.</p>
        
      </section>
      
      <section id="conway's-law">
        <h2 id="conways-law">Conway's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Conway%27s_law">Conway's Law on Wikipedia</a></p>
<p>This law suggests that the technical boundaries of a system will reflect the structure of the organisation. It is commonly referred to when looking at organisation improvements, Conway's Law suggests that if an organisation is structured into many small, disconnected units, the software it produces will be. If an organisation is built more around 'verticals' which are oriented around features or services, the software systems will also reflect this.</p>
<p>See also:</p>
<ul>
<li><a href="#the-spotify-model">The Spotify Model</a></li>
</ul>
        
      </section>
      
      <section id="cunningham's-law">
        <h2 id="cunninghams-law">Cunningham's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Ward_Cunningham#Cunningham's_Law">Cunningham's Law on Wikipedia</a></p>
<blockquote>
<p>The best way to get the right answer on the Internet is not to ask a question, it's to post the wrong answer.</p>
</blockquote>
<p>According to Steven McGeady, Ward Cunningham advised him in the early 1980s: "The best way to get the right answer on the Internet is not to ask a question, it's to post the wrong answer." McGeady dubbed this Cunningham's law, though Cunningham denies ownership calling it a "misquote." Although originally referring to interactions on Usenet, the law has been used to describe how other online communities work (e.g., Wikipedia, Reddit, Twitter, Facebook).</p>
<p>See also:</p>
<ul>
<li><a href="https://xkcd.com/386/">XKCD 386: "Duty Calls"</a></li>
</ul>
        
      </section>
      
      <section id="dunbar's-number">
        <h2 id="dunbars-number">Dunbar's Number</h2>
<p><a href="https://en.wikipedia.org/wiki/Dunbar%27s_number">Dunbar's Number on Wikipedia</a></p>
<p>"Dunbar's number is a suggested cognitive limit to the number of people with whom one can maintain stable social relationships‚Äî relationships in which an individual knows who each person is and how each person relates to every other person." There is some disagreement to the exact number. "... [Dunbar] proposed that humans can comfortably maintain only 150 stable relationships." He put the number into a more social context, "the number of people you would not feel embarrassed about joining uninvited for a drink if you happened to bump into them in a bar." Estimates for the number generally lay between 100 and 250.</p>
<p>Like stable relationships between individuals, a developer's relationship with a codebase takes effort to maintain. When faced with large complicated projects, or ownership of many projects, we lean on convention, policy, and modeled procedure to scale. Dunbar's number is not only important to keep in mind as an office grows, but also when setting the scope for team efforts or deciding when a system should invest in tooling to assist in modeling and automating logistical overhead. Putting the number into an engineering context, it is the number of projects (or normalized complexity of a single project) for which you would feel confident in joining an on-call rotation to support.</p>
<p>See also:</p>
<ul>
<li><a href="#conways-law">Conway's Law</a></li>
</ul>
        
      </section>
      
      <section id="the-dunning-kruger-effect">
        <h2 id="the-dunning-kruger-effect">The Dunning-Kruger Effect</h2>
<p><a href="https://en.wikipedia.org/wiki/Dunning%E2%80%93Kruger_effect">The Dunning-Kruger Effect on Wikipedia</a></p>
<blockquote>
<p>If you're incompetent, you can't know you're incompetent... The skills you need to produce a right answer are exactly the skills you need to recognize what a right answer is.</p>
<p>(<a href="https://en.wikipedia.org/wiki/David_Dunning">David Dunning</a>)</p>
</blockquote>
<p>The Dunning‚ÄìKruger effect is a theoretical cognitive bias which was described by David Dunning and Justin Kruger in a 1999 psychological study and paper. The study suggests that people with a low level of ability at a task are likely to overestimate their ability of the task. The proposed reason for this bias is that a sufficient <em>awareness</em> of the complexity of a problem or domain is required for a person to be able to make an informed opinion of their capability to work in that domain.</p>
<p>The Dunning-Kruger effect has sometimes been used to describe a related, but not necessarily implied effect which could be described as "The less a person understands a domain, the more they are likely to believe they can easily solve problems in that domain, as they are more likely to see the domain as <em>simple</em>". This more general effect is highly relevant in technology. It would suggest that people who are less familiar with a domain, such as non-technical team members or less experienced team members, are more likely to <em>underestimate</em> the effort required to solve a problem in this space.</p>
<p>As a person's understanding and experience in a domain grows, they may well encounter another effect, which is that they tend to <em>overestimate</em> the ability of <em>others</em> or <em>underestimate</em> their own ability, as they are have become so experienced in the domain. In all cases these effects are <em>cognitive biases</em>. As with any bias, an understanding that it may be present will often be sufficient to help avoid the challenges ‚Äî as when there is awareness of a bias, more inputs and opinions can be included to attempt to eliminate these biases. A closely related bias is that of <a href="https://en.wikipedia.org/wiki/Illusory_superiority">Illusory superiority</a>.</p>
<p>Real-world examples:</p>
<ul>
<li><a href="https://fortune.com/2016/03/10/apple-fbi-lindsay-graham/">Apple vs. FBI: Why This Anti-Terror Hawk Switched Sides</a> - In 2016 Senator Lindsey Graham changed his stance on Apple creating a 'backdoor' in their encryption of devices. Initially Graham had been critical of Apple challenging a request to create a 'backdoor', which he saw as necessary to investigate potential terrorist plots. However, by Graham's own admission, as he learned more about the technical complexity of the domain, he realised that he had assumed it to be far more simple than he had realised, and that such a backdoor could have serious negative consequences. This could potentially be considered an example of the Dunning-Kruger effect - a cyber-security expert would likely understand immediately how such a backdoor could be exploited, as they have deep understanding of the domain, a layperson might assume that phone security is more similar to <em>physical security</em> where the practice of having a 'master key' for law enforcement is possible, but this analogy does not apply sufficiently well to describe modern encryption in cyber-security. </li>
</ul>
        
      </section>
      
      <section id="fitts'-law">
        <h2 id="fitts-law">Fitts' Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Fitts%27s_law">Fitts' Law on Wikipedia</a></p>
<p>Fitts' law predicts that the time required to move to a target area is a function of the distance to the target divided by the width of the target.</p>
<p><img width="300px" alt="Diagram: Fitts Law" src="https://hacker-laws.com/images/Fitts_Law.svg"></p>
<p><em>(Image Reference: By Foobar628 at English Wikipedia, Creative Commons Attribution-Share Alike 3.0 Unported, https://en.wikipedia.org/wiki/Fitts%27s_law#/media/File:Fitts_Law.svg)</em></p>
<p>The consequences of this law dictate that when designing UX or UI, interactive elements should be as large as possible and the distance between the users attention area and interactive element should be as small as possible. This has consequences on design, such as grouping tasks that are commonly used with one another close.</p>
<p>It also formalises the concept of 'magic corners', the corners of the screen to which a user can 'sweep' their mouse to easily hit - which is where key UI elements can be placed. The Windows Start button is in a magic corner, making it easy to select, and as an interesting contrast, the MacOS 'close window' button is <em>not</em> in a magic corner, making it hard to hit by mistake.</p>
<p>See also:</p>
<ul>
<li><a href="https://www.semanticscholar.org/paper/The-information-capacity-of-the-human-motor-system-Fitts/634c9fde5f1c411e4487658ac738dcf18d98ea8d">The information capacity of the human motor system in controlling the amplitude of movement.</a></li>
</ul>
        
      </section>
      
      <section id="gall's-law">
        <h2 id="galls-law">Gall's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/John_Gall_(author)#Gall's_law">Gall's Law on Wikipedia</a></p>
<blockquote>
<p>A complex system that works is invariably found to have evolved from a simple system that worked. A complex system designed from scratch never works and cannot be patched up to make it work. You have to start over with a working simple system.</p>
<p>(<a href="https://en.wikipedia.org/wiki/John_Gall_(author)">John Gall</a>)</p>
</blockquote>
<p>Gall's Law implies that attempts to <em>design</em> highly complex systems are likely to fail. Highly complex systems are rarely built in one go, but evolve instead from more simple systems.</p>
<p>The classic example is the world-wide-web. In its current state, it is a highly complex system. However, it was defined initially as a simple way to share content between academic institutions. It was very successful in meeting these goals and evolved to become more complex over time.</p>
<p>See also:</p>
<ul>
<li><a href="#the-kiss-principle">KISS (Keep It Simple, Stupid)</a></li>
</ul>
        
      </section>
      
      <section id="goodhart's-law">
        <h2 id="goodharts-law">Goodhart's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Goodhart's_law">The Goodhart's Law on Wikipedia</a></p>
<blockquote>
<p>Any observed statistical regularity will tend to collapse once pressure is placed upon it for control purposes.</p>
<p><em>Charles Goodhart</em></p>
</blockquote>
<p>Also commonly referenced as:</p>
<blockquote>
<p>When a measure becomes a target, it ceases to be a good measure.</p>
<p><em>Marilyn Strathern</em></p>
</blockquote>
<p>The law states that the measure-driven optimizations could lead to devaluation of the measurement outcome itself. Overly selective set of measures (<a href="https://en.wikipedia.org/wiki/Performance_indicator">KPIs</a>) blindly applied to a process results in distorted effect. People tend to optimize locally by "gaming" the system in order to satisfy particular metrics instead of paying attention to holistic outcome of their actions.</p>
<p>Real-world examples:
- Assert-free tests satisfy the code coverage expectation, despite the fact that the metric intent was to create well-tested software.
- Developer performance score indicated by the number of lines committed leads to unjustifiably bloated codebase.</p>
<p>See also:
- <a href="https://coffeeandjunk.com/goodharts-campbells-law/">Goodhart‚Äôs Law: How Measuring The Wrong Things Drive Immoral Behaviour</a>
- <a href="https://dilbert.com/strip/1995-11-13">Dilbert on bug-free software</a></p>
        
      </section>
      
      <section id="hanlon's-razor">
        <h2 id="hanlons-razor">Hanlon's Razor</h2>
<p><a href="https://en.wikipedia.org/wiki/Hanlon%27s_razor">Hanlon's Razor on Wikipedia</a></p>
<blockquote>
<p>Never attribute to malice that which is adequately explained by stupidity.</p>
<p>Robert J. Hanlon</p>
</blockquote>
<p>This principle suggests that actions resulting in a negative outcome were not a result of ill will. Instead the negative outcome is more likely attributed to those actions and/or the impact being not fully understood.</p>
        
      </section>
      
      <section id="hick's-law-(hick-hyman-law)">
        <h2 id="hicks-law-hick-hyman-law">Hick's Law (Hick-Hyman Law)</h2>
<p><a href="https://en.wikipedia.org/wiki/Hick%27s_law">Hick's law on Wikipedia</a></p>
<blockquote>
<p>Decision time grows logarithmically with the number of options you can choose from.</p>
<p>William Edmund Hick and Ray Hyman</p>
</blockquote>
<p>In the equation below, <code>T</code> is the time to make a decision, <code>n</code> is the number of options, and <code>b</code> is a constant which is determined by analysis of the data.</p>
<p><img alt="Hicks law" src="https://hacker-laws.com/images/hicks_law.svg"></p>
<p><em>(Image Reference: Creative Commons Attribution-Share Alike 3.0 Unported, https://en.wikipedia.org/wiki/Hick%27s_law)</em></p>
<p>This law only applies when the number of options is <em>ordered</em>, for example, alphabetically. This is implied in the base two logarithm - which implies the decision maker is essentially performing a <em>binary search</em>. If the options are not well ordered, experiments show the time taken is linear.</p>
<p>This is has significant impact in UI design; ensuring that users can easily search through options leads to faster decision making.</p>
<p>A correlation has also been shown in Hick's Law between IQ and reaction time as shown in <a href="https://www.sciencedirect.com/science/article/pii/S0022440599000369">Speed of Information Processing: Developmental Change and Links to Intelligence</a>.</p>
<p>See also:
- <a href="#fitts-law">Fitts's Law</a></p>
        
      </section>
      
      <section id="hofstadter's-law">
        <h2 id="hofstadters-law">Hofstadter's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Hofstadter%27s_law">Hofstadter's Law on Wikipedia</a></p>
<blockquote>
<p>It always takes longer than you expect, even when you take into account Hofstadter's Law.</p>
<p>(Douglas Hofstadter)</p>
</blockquote>
<p>You might hear this law referred to when looking at estimates for how long something will take. It seems a truism in software development that we tend to not be very good at accurately estimating how long something will take to deliver.</p>
<p>This is from the book '<a href="#reading-list">G√∂del, Escher, Bach: An Eternal Golden Braid</a>'.</p>
<p>See also:</p>
<ul>
<li><a href="#reading-list">Reading List: G√∂del, Escher, Bach: An Eternal Golden Braid</a></li>
</ul>
        
      </section>
      
      <section id="hutber's-law">
        <h2 id="hutbers-law">Hutber's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Hutber%27s_law">Hutber's Law on Wikipedia</a></p>
<blockquote>
<p>Improvement means deterioration.</p>
<p>(<a href="https://en.wikipedia.org/wiki/Patrick_Hutber">Patrick Hutber</a>)</p>
</blockquote>
<p>This law suggests that improvements to a system will lead to deterioration in other parts, or it will hide other deterioration, leading overall to a degradation from the current state of the system.</p>
<p>For example, a decrease in response latency for a particular end-point could cause increased throughput and capacity issues further along in a request flow, affecting an entirely different sub-system.</p>
        
      </section>
      
      <section id="the-hype-cycle-&amp;-amara's-law">
        <h2 id="the-hype-cycle-amaras-law">The Hype Cycle &amp; Amara's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Hype_cycle">The Hype Cycle on Wikipedia</a></p>
<blockquote>
<p>We tend to overestimate the effect of a technology in the short run and underestimate the effect in the long run.</p>
<p>(Roy Amara)</p>
</blockquote>
<p>The Hype Cycle is a visual representation of the excitement and development of technology over time, originally produced by Gartner. It is best shown with a visual:</p>
<p><img alt="The Hype Cycle" src="https://hacker-laws.com/images/gartner_hype_cycle.png"></p>
<p><em>(Image Reference: By Jeremykemp at English Wikipedia, CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=10547051)</em></p>
<p>In short, this cycle suggests that there is typically a burst of excitement around new technology and its potential impact. Teams often jump into these technologies quickly, and sometimes find themselves disappointed with the results. This might be because the technology is not yet mature enough, or real-world applications are not yet fully realised. After a certain amount of time, the capabilities of the technology increase and practical opportunities to use it increase, and teams can finally become productive. Roy Amara's quote sums this up most succinctly - "We tend to overestimate the effect of a technology in the short run and underestimate in the long run".</p>
        
      </section>
      
      <section id="hyrum's-law-(the-law-of-implicit-interfaces)">
        <h2 id="hyrums-law-the-law-of-implicit-interfaces">Hyrum's Law (The Law of Implicit Interfaces)</h2>
<p><a href="http://www.hyrumslaw.com/">Hyrum's Law Online</a></p>
<blockquote>
<p>With a sufficient number of users of an API,
it does not matter what you promise in the contract:
all observable behaviours of your system
will be depended on by somebody.</p>
<p>(Hyrum Wright)</p>
</blockquote>
<p>Hyrum's Law states that when you have a <em>large enough number of consumers</em> of an API, all behaviours of the API (even those not defined as part of a public contract) will eventually come to be depended on by someone. A trivial example may be non-functional elements such as the response time of an API. A more subtle example might be consumers who are relying on applying a regex to an error message to determine the <em>type</em> of error of an API. Even if the public contract of the API states nothing about the contents of the message, indicating users should use an associated error code, <em>some</em> users may use the message, and changing the message essentially breaks the API for those users.</p>
<p>See also:</p>
<ul>
<li><a href="#the-law-of-leaky-abstractions">The Law of Leaky Abstractions</a></li>
<li><a href="https://xkcd.com/1172/">XKCD 1172</a></li>
</ul>
        
      </section>
      
      <section id="input-process-output-(ipo)">
        <h2 id="input-process-output-ipo">Input-Process-Output (IPO)</h2>
<p><a href="https://en.wikipedia.org/wiki/IPO_model">Input‚ÄìProcess‚ÄìOutput on Wikipedia</a></p>
<p>Systems can be incredibly complex, but can typically be broken down into smaller parts that follow a simple pattern:</p>
<ol>
<li>Input is provided</li>
<li>Some kind of processing or transformation is performed</li>
<li>Output is returned</li>
</ol>
<p>A sort function in a programming language or system could be a classic example of the IPO pattern; where arbitrary input is sorted based on a predicate and returned back. A web server could be modelled as an IPO system, where HTTP requests are transformed into HTTP responses. A highly complex Generative AI system could likewise be modelled in this way, with user input being passed through a complex model and a response being generated.</p>
<p>The IPO pattern is present in different forms across almost all technological domains, from <a href="https://en.wikipedia.org/wiki/Functional_programming">functional programming</a> languages that explicitly follow IPO patterns to <a href="#the-unix-philosophy">The Unix Philosophy</a>, which suggests that highly complex systems can be built by chaining together many simple IPO programs.</p>
<p>See also:</p>
<ul>
<li><a href="#the-unix-philosophy">The Unix Philosophy</a></li>
</ul>
        
      </section>
      
      <section id="kernighan's-law">
        <h2 id="kernighans-law">Kernighan's Law</h2>
<blockquote>
<p>Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.</p>
<p>(Brian Kernighan)</p>
</blockquote>
<p>Kernighan's Law is named for <a href="https://en.wikipedia.org/wiki/Brian_Kernighan">Brian Kernighan</a> and derived from a quote from Kernighan and Plauger's book <a href="https://en.wikipedia.org/wiki/The_Elements_of_Programming_Style">The Elements of Programming Style</a>:</p>
<blockquote>
<p>Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?</p>
</blockquote>
<p>While hyperbolic, Kernighan's Law makes the argument that simple code is to be preferred over complex code, because debugging any issues that arise in complex code may be costly or even infeasible.</p>
<p>See also:</p>
<ul>
<li><a href="#the-kiss-principle">The KISS Principle</a></li>
<li><a href="#the-unix-philosophy">The Unix Philosophy</a></li>
<li><a href="#occams-razor">Occam's Razor</a></li>
</ul>
        
      </section>
      
      <section id="linus's-law">
        <h2 id="linuss-law">Linus's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Linus%27s_law">Linus's Law on Wikipedia</a></p>
<blockquote>
<p>Given enough eyeballs, all bugs are shallow.</p>
<p><em>Eric S. Raymond</em></p>
</blockquote>
<p>This law simply states that the more people who can see a problem, the higher the likelihood that someone will have seen and solved the problem before, or something very similar.</p>
<p>Although it was originally used to describe the value of open-source models for projects it can be accepted for any kind of software project. It can also be extended to processes - more code reviews, more static analysis and multi-disciplined test processes will make the problems more visible and easy to identify.</p>
<p>A more formal statement can be:</p>
<blockquote>
<p>Given a large enough beta-tester and co-developer base, almost every problem will be characterized quickly and can be solved by someone who has encountered a similar problem before.</p>
</blockquote>
<p>This law was named in honour of <a href="https://en.wikipedia.org/wiki/Linus_Torvalds">Linus Torvalds</a> in Eric S. Raymond's book "<a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">The Cathedral and the Bazaar</a>".</p>
        
      </section>
      
      <section id="metcalfe's-law">
        <h2 id="metcalfes-law">Metcalfe's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Metcalfe's_law">Metcalfe's Law on Wikipedia</a></p>
<blockquote>
<p>In network theory, the value of a system grows as approximately the square of the number of users of the system.</p>
</blockquote>
<p>This law is based on the number of possible pairwise connections within a system and is closely related to <a href="#reeds-law">Reed's Law</a>. Odlyzko and others have argued that both Reed's Law and Metcalfe's Law overstate the value of the system by not accounting for the limits of human cognition on network effects; see <a href="#dunbars-number">Dunbar's Number</a>.</p>
<p>See also:
- <a href="#reeds-law">Reed's Law</a>
- <a href="#dunbars-number">Dunbar's Number</a></p>
        
      </section>
      
      <section id="moore's-law">
        <h2 id="moores-law">Moore's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Moore%27s_law">Moore's Law on Wikipedia</a></p>
<blockquote>
<p>The number of transistors in an integrated circuit doubles approximately every two years.</p>
</blockquote>
<p>Often used to illustrate the sheer speed at which semiconductor and chip technology has improved, Moore's prediction has proven to be highly accurate over from the 1970s to the late 2000s. In more recent years, the trend has changed slightly, partly due to <a href="https://en.wikipedia.org/wiki/Quantum_tunnelling">physical limitations on the degree to which components can be miniaturised</a>. However, advancements in parallelisation, and potentially revolutionary changes in semiconductor technology and quantum computing may mean that Moore's Law could continue to hold true for decades to come.</p>
        
      </section>
      
      <section id="murphy's-law-/-sod's-law">
        <h2 id="murphys-law-sods-law">Murphy's Law / Sod's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Murphy%27s_law">Murphy's Law on Wikipedia</a></p>
<blockquote>
<p>Anything that can go wrong will go wrong.</p>
</blockquote>
<p>Related to <a href="https://en.wikipedia.org/wiki/Edward_A._Murphy_Jr.">Edward A. Murphy, Jr</a> <em>Murphy's Law</em> states that if a thing can go wrong, it will go wrong.</p>
<p>This is a common adage among developers. Sometimes the unexpected happens when developing, testing or even in production. This can also be related to the (more common in British English) <em>Sod's Law</em>:</p>
<blockquote>
<p>If something can go wrong, it will, at the worst possible time.</p>
</blockquote>
<p>These 'laws' are generally used in a comic sense. However, phenomena such as <a href="#TODO"><em>Confirmation Bias</em></a> and <a href="#TODO"><em>Selection Bias</em></a> can lead people to perhaps over-emphasise these laws (the majority of times when things work, they go unnoticed, failures however are more noticeable and draw more discussion).</p>
<p>See Also:</p>
<ul>
<li><a href="#TODO">Confirmation Bias</a></li>
<li><a href="#TODO">Selection Bias</a></li>
</ul>
        
      </section>
      
      <section id="occam's-razor">
        <h2 id="occams-razor">Occam's Razor</h2>
<p><a href="https://en.wikipedia.org/wiki/Occam's_razor">Occam's Razor on Wikipedia</a></p>
<blockquote>
<p>Entities should not be multiplied without necessity.</p>
<p>William of Ockham</p>
</blockquote>
<p>Occam's razor says that among several possible solutions, the most likely solution is the one with the least number of concepts and assumptions. This solution is the simplest and solves only the given problem, without introducing accidental complexity and possible negative consequences.</p>
<p>See also:</p>
<ul>
<li><a href="#yagni">YAGNI</a></li>
<li><a href="https://en.wikipedia.org/wiki/No_Silver_Bullet">No Silver Bullet: Accidental Complexity and Essential Complexity</a></li>
</ul>
<p>Example:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Lean_software_development#Eliminate_waste">Lean Software Development: Eliminate Waste</a></li>
</ul>
        
      </section>
      
      <section id="parkinson's-law">
        <h2 id="parkinsons-law">Parkinson's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Parkinson%27s_law">Parkinson's Law on Wikipedia</a></p>
<blockquote>
<p>Work expands so as to fill the time available for its completion.</p>
</blockquote>
<p>In its original context, this Law was based on studies of bureaucracies. It may be pessimistically applied to software development initiatives, the theory being that teams will be inefficient until deadlines near, then rush to complete work by the deadline, thus making the actual deadline somewhat arbitrary.</p>
<p>If this law were combined with <a href="#hofstadters-law">Hofstadter's Law</a>, an even more pessimistic viewpoint is reached - work will expand to fill the time available for its completion and <em>still take longer than expected</em>.</p>
<p>See also:</p>
<ul>
<li><a href="#hofstadters-law">Hofstadter's Law</a></li>
</ul>
        
      </section>
      
      <section id="premature-optimization-effect">
        <h2 id="premature-optimization-effect">Premature Optimization Effect</h2>
<p><a href="http://wiki.c2.com/?PrematureOptimization">Premature Optimization on WikiWeb</a></p>
<blockquote>
<p>Premature optimization is the root of all evil.</p>
<p><a href="https://twitter.com/realdonaldknuth?lang=en">(Donald Knuth)</a></p>
</blockquote>
<p>In Donald Knuth's paper <a href="http://wiki.c2.com/?StructuredProgrammingWithGoToStatements">Structured Programming With Go To Statements</a>, he wrote: "Programmers waste enormous amounts of time thinking about, or worrying about, the speed of noncritical parts of their programs, and these attempts at efficiency actually have a strong negative impact when debugging and maintenance are considered. We should forget about small efficiencies, say about 97% of the time: <strong>premature optimization is the root of all evil</strong>. Yet we should not pass up our opportunities in that critical 3%."</p>
<p>However, <em>Premature Optimization</em> can be defined (in less loaded terms) as optimizing before we know that we need to.</p>
        
      </section>
      
      <section id="putt's-law">
        <h2 id="putts-law">Putt's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Putt%27s_Law_and_the_Successful_Technocrat">Putt's Law on Wikipedia</a></p>
<blockquote>
<p>Technology is dominated by two types of people, those who understand what they do not manage and those who manage what they do not understand.</p>
</blockquote>
<p>Putt's Law is often followed by Putt's Corollary:</p>
<blockquote>
<p>Every technical hierarchy, in time, develops a competence inversion.</p>
</blockquote>
<p>These statements suggest that due to various selection criteria and trends in how groups organise, there will be a number of skilled people at working levels of a technical organisations, and a number of people in managerial roles who are not aware of the complexities and challenges of the work they are managing. This can be due to phenomena such as <a href="#the-peter-principle">The Peter Principle</a> or <a href="#the-dilbert-principle">The Dilbert Principle</a>.</p>
<p>However, it should be stressed that Laws such as this are vast generalisations and may apply to <em>some</em> types of organisations, and not apply to others.</p>
<p>See also:</p>
<ul>
<li><a href="#the-peter-principle">The Peter Principle</a></li>
<li><a href="#the-dilbert-principle">The Dilbert Principle</a></li>
</ul>
        
      </section>
      
      <section id="reed's-law">
        <h2 id="reeds-law">Reed's Law</h2>
<p><a href="https://en.wikipedia.org/wiki/Reed's_law">Reed's Law on Wikipedia</a></p>
<blockquote>
<p>The utility of large networks, particularly social networks, scales exponentially with the size of the network.</p>
</blockquote>
<p>This law is based on graph theory, where the utility scales as the number of possible sub-groups, which is faster than the number of participants or the number of possible pairwise connections. Odlyzko and others have argued that Reed's Law overstates the utility of the system by not accounting for the limits of human cognition on network effects; see <a href="#dunbars-number">Dunbar's Number</a>.</p>
<p>See also:
- <a href="#metcalfes-law">Metcalfe's Law</a>
- <a href="#dunbars-number">Dunbar's Number</a></p>
        
      </section>
      
      <section id="the-bitter-lesson">
        <h2 id="the-bitter-lesson">The Bitter Lesson</h2>
<p><a href="http://www.incompleteideas.net/IncIdeas/BitterLesson.html">The Bitter Lesson by Richard S. Sutton</a></p>
<blockquote>
<p>The biggest lesson that can be read from 70 years of AI research is that general methods that leverage computation are ultimately the most effective, and by a large margin.</p>
<p>Richard S. Sutton (2019)</p>
</blockquote>
<p>The "Bitter Lesson", stated by <a href="https://en.wikipedia.org/wiki/Richard_S._Sutton">Rich S. Sutton</a>, says that scale (in terms of both data and computational power) has driven the most significant advancements in AI research, rather than the intricacies of the research methods themselves.</p>
<p>He goes on to suggest that this indicates we should stop trying to build simplified (or even complex) models of the mind as history has shown that these have always in the long term been failures compared to (as an example) scaling the capacity of neural networks and applying existing methods such as convolution.</p>
        
      </section>
      
      <section id="the-ringelmann-effect">
        <h2 id="the-ringelmann-effect">The Ringelmann Effect</h2>
<p><a href="https://en.wikipedia.org/wiki/Ringelmann_effect">The Ringelmann effect on Wikipedia</a></p>
<p>The Ringelmann Effect is the tendency of an individual to become increasingly inefficient as more and more people are involved in a task. In other words, as more individuals are added to a team, the more the average individual performance decreases. Multiple causes are believed to be at work, including loss of motivation ("<a href="https://en.wikipedia.org/wiki/Social_loafing">social loafing</a>") and challenges related to coordination.</p>
<p>See also:
- <a href="#brooks-law">Brooks' Law</a></p>
        
      </section>
      
      <section id="the-law-of-conservation-of-complexity-(tesler's-law)">
        <h2 id="the-law-of-conservation-of-complexity-teslers-law">The Law of Conservation of Complexity (Tesler's Law)</h2>
<p><a href="https://en.wikipedia.org/wiki/Law_of_conservation_of_complexity">The Law of Conservation of Complexity on Wikipedia</a></p>
<p>This law states that there is a certain amount of complexity in a system which cannot be reduced.</p>
<p>Some complexity in a system is 'inadvertent'. It is a consequence of poor structure, mistakes, or just bad modeling of a problem to solve. Inadvertent complexity can be reduced (or eliminated). However, some complexity is 'intrinsic' as a consequence of the complexity inherent in the problem being solved. This complexity can be moved, but not eliminated.</p>
<p>One interesting element to this law is the suggestion that even by simplifying the entire system, the intrinsic complexity is not reduced, it is <em>moved to the user</em>, who must behave in a more complex way.</p>
        
      </section>
      
      <section id="the-law-of-demeter">
        <h2 id="the-law-of-demeter">The Law of Demeter</h2>
<p><a href="https://en.wikipedia.org/wiki/Law_of_Demeter">The Law of Demeter on Wikipedia</a></p>
<blockquote>
<p>Don't talk to strangers.</p>
</blockquote>
<p>The Law of Demeter, also known as "The Principle of Least Knowledge" is a principle for software design, particularly relevant in object orientated languages.</p>
<p>It states that a unit of software should talk only to its immediate collaborators. An object <code>A</code> with a reference to object <code>B</code> can call its methods, but if <code>B</code> has a reference to object <code>C</code>, <code>A</code> should not call <code>C</code>s methods. So, if <code>C</code> has a <code>doThing()</code> method, <code>A</code> should not invoke it directly; <code>B.getC().doThis()</code>.</p>
<p>Following this principal limits the scope of changes, making them easier and safer in future.</p>
        
      </section>
      
      <section id="the-law-of-leaky-abstractions">
        <h2 id="the-law-of-leaky-abstractions">The Law of Leaky Abstractions</h2>
<p><a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">The Law of Leaky Abstractions on Joel on Software</a></p>
<blockquote>
<p>All non-trivial abstractions, to some degree, are leaky.</p>
<p>(<a href="https://twitter.com/spolsky">Joel Spolsky</a>)</p>
</blockquote>
<p>This law states that abstractions, which are generally used in computing to simplify working with complicated systems, will in certain situations 'leak' elements of the underlying system, this making the abstraction behave in an unexpected way.</p>
<p>An example might be loading a file and reading its contents. The file system APIs are an <em>abstraction</em> of the lower level kernel systems, which are themselves an abstraction over the physical processes relating to changing data on a magnetic platter (or flash memory for an SSD). In most cases, the abstraction of treating a file like a stream of binary data will work. However, for a magnetic drive, reading data sequentially will be <em>significantly</em> faster than random access (due to increased overhead of page faults), but for an SSD drive, this overhead will not be present. Underlying details will need to be understood to deal with this case (for example, database index files are structured to reduce the overhead of random access), the abstraction 'leaks' implementation details the developer may need to be aware of.</p>
<p>The example above can become more complex when <em>more</em> abstractions are introduced. The Linux operating system allows files to be accessed over a network but represented locally as 'normal' files. This abstraction will 'leak' if there are network failures. If a developer treats these files as 'normal' files, without considering the fact that they may be subject to network latency and failures, the solutions will be buggy.</p>
<p>The article describing the law suggests that an over-reliance on abstractions, combined with a poor understanding of the underlying processes, actually makes dealing with the problem at hand <em>more</em> complex in some cases.</p>
<p>See also:</p>
<ul>
<li><a href="#hyrums-law-the-law-of-implicit-interfaces">Hyrum's Law</a></li>
</ul>
<p>Real-world examples:</p>
<ul>
<li><a href="https://forums.adobe.com/thread/376152">Photoshop Slow Startup</a> - an issue I encountered in the past. Photoshop would be slow to startup, sometimes taking minutes. It seems the issue was that on startup it reads some information about the current default printer. However, if that printer is actually a network printer, this could take an extremely long time. The <em>abstraction</em> of a network printer being presented to the system similar to a local printer caused an issue for users in poor connectivity situations.</li>
</ul>
        
      </section>
      
      <section id="the-law-of-the-instrument">
        <h2 id="the-law-of-the-instrument">The Law of the Instrument</h2>
<p><a href="https://en.wikipedia.org/wiki/Law_of_the_instrument">The Law of the Instrument</a></p>
<blockquote>
<p>I call it the law of the instrument, and it may be formulated as follows: Give a small boy a hammer, and he will find that everything he encounters needs pounding.</p>
<p><em>Abraham Kaplan</em></p>
<p>If all you have is a hammer, everything looks like a nail.</p>
<p><em>Abraham Maslow</em></p>
</blockquote>
<p>In the context of computer programming, this law suggests that people tend to use tools that are familiar with, rather than the best possible tool. This over-reliance on a familiar tool is an anti-pattern referred to as 'the golden hammer'.</p>
<p>See also:</p>
<ul>
<li><a href="https://josemdev.com/avoiding-the-law-of-the-instrument/">Avoiding the law of the instrument</a></li>
<li><a href="https://archive.org/details/antipatternsrefa0000unse/page/111/mode/2up">Anti-Pattern - The Golden Hammer</a></li>
</ul>
        
      </section>
      
      <section id="the-law-of-triviality">
        <h2 id="the-law-of-triviality">The Law of Triviality</h2>
<p><a href="https://en.wikipedia.org/wiki/Law_of_triviality">The Law of Triviality on Wikipedia</a></p>
<p>This law suggests that groups will give far more time and attention to trivial or cosmetic issues rather than serious and substantial ones.</p>
<p>The common fictional example used is that of a committee approving plans for nuclear power plant, who spend the majority of their time discussing the structure of the bike shed, rather than the far more important design for the power plant itself. It can be difficult to give valuable input on discussions about very large, complex topics without a high degree of subject matter expertise or preparation. However, people want to be seen to be contributing valuable input. Hence a tendency to focus too much time on small details, which can be reasoned about easily, but are not necessarily of particular importance.</p>
<p>The fictional example above led to the usage of the term 'Bike Shedding' as an expression for wasting time on trivial details. A related term is '<a href="https://en.wiktionary.org/wiki/yak_shaving">Yak Shaving</a>,' which connotes a seemingly irrelevant activity that is part of a long chain of prerequisites to the main task.</p>
        
      </section>
      
      <section id="the-unix-philosophy">
        <h2 id="the-unix-philosophy">The Unix Philosophy</h2>
<p><a href="https://en.wikipedia.org/wiki/Unix_philosophy">The Unix Philosophy on Wikipedia</a></p>
<p>The Unix Philosophy is that software components should be small, and focused on doing one specific thing well. This can make it easier to build systems by composing together small, simple, well-defined units, rather than using large, complex, multi-purpose programs.</p>
<p>Modern practices like 'Microservice Architecture' can be thought of as an application of this law, where services are small, focused and do one specific thing, allowing complex behaviour to be composed of simple building blocks.</p>
        
      </section>
      
      <section id="the-scout-rule">
        <h2 id="the-scout-rule">The Scout Rule</h2>
<p><a href="https://www.oreilly.com/library/view/97-things-every/9780596809515/ch08.html">The Scout Rule on O'Reilly</a></p>
<blockquote>
<p>Always leave the code better than you found it.</p>
<p>(Robert C. Martin (Uncle Bob))</p>
</blockquote>
<p>Based on the "Scout Rule", which is "always leave the campground cleaner than you found it", the Scout Rule in programming is simply "always leave the code cleaner than you found it".</p>
<p>This was introduced in the first chapter of the book <a href="https://www.goodreads.com/book/show/3735293-clean-code">Clean Code</a> by Bob Martin. The rule suggests that developers should perform 'optimistic refactoring', which means to endeavour to improve the overall quality of the code when you work on it. If you see a mistake, attempt to fix it or clean it up. However, when making changes to code which seems incorrect, it may be worth remembering <a href="#chestertons-fence">Chesterton's Fence</a>!</p>
<p>See also:</p>
<ul>
<li><a href="#reading-list">Reading List: Clean Code</a></li>
<li><a href="#chestertons-fence">Chesterton's Fence</a></li>
<li><a href="#broken-windows-theory">The Broken Windows Theory</a></li>
</ul>
<p>https://www.amazon.sg/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882</p>
        
      </section>
      
      <section id="the-spotify-model">
        <h2 id="the-spotify-model">The Spotify Model</h2>
<p><a href="https://labs.spotify.com/2014/03/27/spotify-engineering-culture-part-1/">The Spotify Model on Spotify Labs</a></p>
<p>The Spotify Model is an approach to team and organisation structure which has been popularised by 'Spotify'. In this model, teams are organised around features, rather than technologies.</p>
<p>The Spotify Model also popularises the concepts of Tribes, Guilds, Chapters, which are other components of their organisation structure.</p>
<p>Members of the organisation have described that the actual meaning of these groups changes, evolves and is an on-going experiment. The fact that the model is a <em>process in motion</em>, rather than a fixed model continues to lead to varying interpretations of the structure, which may be based on presentations given by employees at conferences. This means 'snapshots' may be 're-packaged' by third parties as a <em>fixed structure</em>, with the fact that the model is dynamic being lost.</p>
        
      </section>
      
      <section id="the-two-pizza-rule">
        <h2 id="the-two-pizza-rule">The Two Pizza Rule</h2>
<blockquote>
<p>If you can't feed a team with two pizzas, it's too large.</p>
<p>(Jeff Bezos)</p>
</blockquote>
<p>This rule suggests that regardless of the size of the company, teams should be small enough to be fed by two pizzas. Attributed to Jeff Bezos and Amazon, this belief suggests that large teams are inherently inefficient. This is supported by the fact that as the team size increases linearly, the links between people increases quadratically; thus the cost of coordinating and communicating also grows quadratically. If this cost of coordination is essentially overhead, then smaller teams should be preferred.</p>
<p>The number of links between people can be expressed as <code>n(n-1)/2</code> where n = number of people.</p>
<p><img width="200px" alt="Complete graph; Links between people" src="https://hacker-laws.com/images/complete_graph.png"></p>
        
      </section>
      
      <section id="twyman's-law">
        <h2 id="twymans-law">Twyman's law</h2>
<p><a href="https://en.wikipedia.org/wiki/Twyman%27s_law">Twyman's Law on Wikipedia</a></p>
<blockquote>
<p>The more unusual or interesting the data, the more likely they are to have been the result of an error of one kind or another.</p>
</blockquote>
<p>This law suggests that when there are particularly unusual data points, it is more likely that they are the result of errors or manipulation. For example, if a dataset of long-jump results from a sporting event showed a maximum value of 20 meters (more than twice the world record), it is more likely to be due to an error (such as recording a value in feet rather than meters) than due to an unusually long jump. It is also more likely in this case that the results could have been manipulated.</p>
<p>See also:</p>
<ul>
<li><a href="#TODO">Sagan Standard</a></li>
</ul>
        
      </section>
      
      <section id="wadler's-law">
        <h2 id="wadlers-law">Wadler's Law</h2>
<p><a href="https://wiki.haskell.org/Wadler's_Law">Wadler's Law on wiki.haskell.org</a></p>
<blockquote>
<p>In any language design, the total time spent discussing a feature in this list is proportional to two raised to the power of its position.</p>
<ol>
<li>Semantics</li>
<li>Syntax</li>
<li>Lexical syntax</li>
<li>Lexical syntax of comments</li>
</ol>
<p>(In short, for every hour spent on semantics, 8 hours will be spent on the syntax of comments).</p>
</blockquote>
<p>Similar to <a href="#the-law-of-triviality">The Law of Triviality</a>, Wadler's Law states what when designing a language, the amount of time spent on language structures is disproportionately high in comparison to the importance of those features.</p>
<p>See also:</p>
<ul>
<li><a href="#the-law-of-triviality">The Law of Triviality</a></li>
</ul>
        
      </section>
      
      <section id="wheaton's-law">
        <h2 id="wheatons-law">Wheaton's Law</h2>
<p><a href="http://www.wheatonslaw.com/">The Link</a></p>
<p><a href="https://dontbeadickday.com/">The Official Day</a></p>
<blockquote>
<p>Don't be a dick.</p>
<p><em>Wil Wheaton</em></p>
</blockquote>
<p>Coined by Wil Wheaton (Star Trek: The Next Generation, The Big Bang Theory), this simple, concise, and powerful law aims for an increase in harmony and respect within a professional organization. It can be applied when speaking with coworkers, performing code reviews, countering other points of view, critiquing, and in general, most professional interactions humans have with each other.</p>
        
      </section>
      
      <section id="principles">
        <h2 id="principles">Principles</h2>
<p>Principles are generally more likely to be guidelines relating to design.</p>
        
      </section>
      
      <section id="all-models-are-wrong-(george-box's-law)">
        <h2 id="all-models-are-wrong-george-boxs-law">All Models Are Wrong (George Box's Law)</h2>
<p><a href="https://en.wikipedia.org/wiki/All_models_are_wrong">All Models Are Wrong</a></p>
<blockquote>
<p>All models are wrong, but some are useful.</p>
<p><em>George Box</em></p>
</blockquote>
<p>This principle suggests that all models of systems are flawed, but that as long as they are not <em>too</em> flawed they may be useful. This principle has its roots in statistics but applies to scientific and computing models as well.</p>
<p>A fundamental requirement of most software is to model a system of some kind. Regardless of whether the system being modeled is a computer network, a library, a graph of social connections or any other kind of system, the designer will have to decide an appropriate level of detail to model. Excessive detail may lead to too much complexity, too little detail may prevent the model from being functional.</p>
<p>See also:</p>
<ul>
<li><a href="#the-law-of-leaky-abstractions">The Law of Leaky Abstractions</a></li>
</ul>
        
      </section>
      
      <section id="chesterton's-fence">
        <h2 id="chestertons-fence">Chesterton's Fence</h2>
<p><a href="https://en.wikipedia.org/wiki/Wikipedia:Chesterton%27s_fence">Chesterton's Fence on Wikipedia</a></p>
<blockquote>
<p>Reforms should not be made until the reasoning behind the existing state of affairs is understood.</p>
</blockquote>
<p>This principle is relevant in software engineering when removing technical debt. Each line of a program was originally written by someone for some reason. Chesterton's Fence suggests that one should try to understand the context and meaning of the code fully, before changing or removing it, even if at first glance it seems redundant or incorrect.</p>
<p>The name of this principle comes from a story by <a href="https://en.wikipedia.org/wiki/G._K._Chesterton">G.K. Chesterton</a>. A man comes across a fence crossing the middle of the road. He complains to the mayor that this useless fence is getting in the way, and asks to remove it. The mayor asks why the fence is there in the first place. When the man says he doesn't know, the mayor says, "If you don't know its purpose, I certainly won't let you remove it. Go and find out the use of it, and then I may let you destroy it."</p>
        
      </section>
      
      <section id="kerckhoffs's-principle">
        <h2 id="kerckhoffss-principle">Kerckhoffs's principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Kerckhoffs%27s_principle">Kerckhoffs's principle on Wikipedia</a></p>
<blockquote>
<p>"...design your system assuming that your opponents know it in detail."</p>
<p><em>Steven M. Bellovin's formulation of Kerckhoff's Principle</em></p>
</blockquote>
<p>This principle of cryptography was an axiom created by cryptographer Auguste Kerckhoffs. He stated that a cryptosystem should be secure, even if everything about the system, except the key, is public knowledge. Not to be confused with <a href="#todo"><em>"security through obscurity"</em></a>.</p>
<p>The gold standard for any secret-keeping system is that implementation details should be publicly distributed, without sacrificing or compromising security of said system.</p>
<p>The history of cryptography has shown that open discussion and analysis of cryptographic systems leads to better and more secure systems - as researchers are able to test for and expose potential vulnerabilities.</p>
<ul>
<li><a href="#todo">Shannon's Maxim</a></li>
</ul>
        
      </section>
      
      <section id="the-dead-sea-effect">
        <h2 id="the-dead-sea-effect">The Dead Sea Effect</h2>
<p><a href="http://brucefwebster.com/2008/04/11/the-wetware-crisis-the-dead-sea-effect/">The Dead Sea Effect on Bruce F. Webster</a></p>
<blockquote>
<p>"... [T]he more talented and effective IT engineers are the ones most likely to leave - to evaporate ... [those who tend to] remain behind [are] the 'residue' ‚Äî the least talented and effective IT engineers."</p>
<p><em>Bruce F. Webster</em></p>
</blockquote>
<p>The "Dead Sea Effect" suggests that in any organisation, the skills/talent/efficacy of engineers is often inversely proportional to their time in the company.</p>
<p>Typically, highly skilled engineers find it easy to gain employment elsewhere and are the first to do so. Engineers who have obsolete or weak skills will tend to remain with the company, as finding employment elsewhere is difficult. This is particularly pronounced if they have gained incremental pay rises over their time in the company, as it can be challenging to get equivalent remuneration elsewhere.</p>
        
      </section>
      
      <section id="the-dilbert-principle">
        <h2 id="the-dilbert-principle">The Dilbert Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Dilbert_principle">The Dilbert Principle on Wikipedia</a></p>
<blockquote>
<p>Companies tend to systematically promote incompetent employees to management to get them out of the workflow.</p>
<p><em>Scott Adams</em></p>
</blockquote>
<p>A management concept developed by Scott Adams (creator of the Dilbert comic strip), the Dilbert Principle is inspired by <a href="#the-peter-principle">The Peter Principle</a>. Under the Dilbert Principle, employees who were never competent are promoted to management in order to limit the damage they can do. Adams first explained the principle in a 1995 Wall Street Journal article, and expanded upon it in his 1996 business book, <a href="#reading-list">The Dilbert Principle</a>.</p>
<p>See Also:</p>
<ul>
<li><a href="#the-peter-principle">The Peter Principle</a></li>
<li><a href="#putts-law">Putt's Law</a></li>
</ul>
        
      </section>
      
      <section id="the-pareto-principle-(the-80/20-rule)">
        <h2 id="the-pareto-principle-the-8020-rule">The Pareto Principle (The 80/20 Rule)</h2>
<p><a href="https://en.wikipedia.org/wiki/Pareto_principle">The Pareto Principle on Wikipedia</a></p>
<blockquote>
<p>Most things in life are not distributed evenly.</p>
</blockquote>
<p>The Pareto Principle suggests that in some cases, the majority of results come from a minority of inputs:</p>
<ul>
<li>80% of a certain piece of software can be written in 20% of the total allocated time (conversely, the hardest 20% of the code takes 80% of the time)</li>
<li>20% of the effort produces 80% of the result</li>
<li>20% of the work creates 80% of the revenue</li>
<li>20% of the bugs cause 80% of the crashes</li>
<li>20% of the features cause 80% of the usage</li>
</ul>
<p>In the 1940s American-Romanian engineer Dr. Joseph Juran, who is widely credited with being the father of quality control, <a href="https://en.wikipedia.org/wiki/Joseph_M._Juran">began to apply the Pareto principle to quality issues</a>.</p>
<p>This principle is also known as: The 80/20 Rule, The Law of the Vital Few, and The Principle of Factor Sparsity.</p>
<p>Real-world examples:</p>
<ul>
<li>In 2002 Microsoft reported that by fixing the top 20% of the most-reported bugs, 80% of the related errors and crashes in windows and office would become eliminated (<a href="https://www.crn.com/news/security/18821726/microsofts-ceo-80-20-rule-applies-to-bugs-not-just-features.htm">Reference</a>).</li>
</ul>
        
      </section>
      
      <section id="the-shirky-principle">
        <h2 id="the-shirky-principle">The Shirky Principle</h2>
<p><a href="https://kk.org/thetechnium/the-shirky-prin/">The Shirky Principle explained</a></p>
<blockquote>
<p>Institutions will try to preserve the problem to which they are the solution.</p>
<p><em>Clay Shirky</em></p>
</blockquote>
<p>The Shirky Principle suggests that complex solutions - a company, an industry, or a technology - can become so focused on the problem that they are solving, that they can inadvertently perpetuate the problem itself. This may be deliberate (a company striving to find new nuances to a problem which justify continued development of a solution), or inadvertent (being unable or unwilling to accept or build a solution which solves the problem completely or obviates it).</p>
<p>Related to:</p>
<ul>
<li>Upton Sinclair's famous line, <em>"It is difficult to get a man to understand something, when his salary depends upon his not understanding it!"</em></li>
<li>Clay Christensen's <em>The Innovator's Dilemma</em></li>
</ul>
<p>See also:</p>
<ul>
<li><a href="#the-pareto-principle-the-8020-rule">Pareto Principle</a></li>
</ul>
        
      </section>
      
      <section id="the-peter-principle">
        <h2 id="the-peter-principle">The Peter Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Peter_principle">The Peter Principle on Wikipedia</a></p>
<blockquote>
<p>People in a hierarchy tend to rise to their "level of incompetence".</p>
<p><em>Laurence J. Peter</em></p>
</blockquote>
<p>A management concept developed by Laurence J. Peter, the Peter Principle observes that people who are good at their jobs are promoted, until they reach a level where they are no longer successful (their "level of incompetence"). At this point, as they are more senior, they are less likely to be removed from the organisation (unless they perform spectacularly badly) and will continue to reside in a role which they have few intrinsic skills at, as their original skills which made them successful are not necessarily the skills required for their new jobs.</p>
<p>This is of particular interest to engineers - who initially start out in deeply technical roles, but often have a career path which leads to <em>managing</em> other engineers - which requires a fundamentally different skill set.</p>
<p>See Also:</p>
<ul>
<li><a href="#the-dilbert-principle">The Dilbert Principle</a></li>
<li><a href="#putts-law">Putt's Law</a></li>
</ul>
        
      </section>
      
      <section id="the-robustness-principle-(postel's-law)">
        <h2 id="the-robustness-principle-postels-law">The Robustness Principle (Postel's Law)</h2>
<p><a href="https://en.wikipedia.org/wiki/Robustness_principle">The Robustness Principle on Wikipedia</a></p>
<blockquote>
<p>Be conservative in what you do, be liberal in what you accept from others.</p>
</blockquote>
<p>Often applied in server application development, this principle states that what you send to others should be as minimal and conformant as possible, but you should aim to allow non-conformant input if it can be processed.</p>
<p>The goal of this principle is to build systems which are robust, as they can handle poorly formed input if the intent can still be understood. However, there are potentially security implications of accepting malformed input, particularly if the processing of such input is not well tested. These implications and other issues are described by Eric Allman in <a href="https://queue.acm.org/detail.cfm?id=1999945">The Robustness Principle Reconsidered</a>.</p>
<p>Allowing non-conformant input, in time, may undermine the ability of protocols to evolve as implementors will eventually rely on this liberality to build their features.</p>
<p>See Also:</p>
<ul>
<li><a href="#hyrums-law-the-law-of-implicit-interfaces">Hyrum's Law</a></li>
</ul>
        
      </section>
      
      <section id="solid">
        <h2 id="solid">SOLID</h2>
<p>This is an acronym, which refers to:</p>
<ul>
<li>S: <a href="#the-single-responsibility-principle">The Single Responsibility Principle</a></li>
<li>O: <a href="#the-openclosed-principle">The Open/Closed Principle</a></li>
<li>L: <a href="#the-liskov-substitution-principle">The Liskov Substitution Principle</a></li>
<li>I: <a href="#the-interface-segregation-principle">The Interface Segregation Principle</a></li>
<li>D: <a href="#the-dependency-inversion-principle">The Dependency Inversion Principle</a></li>
</ul>
<p>These are key principles in <a href="#todo">Object-Oriented Programming</a>. Design principles such as these should be able to aid developers build more maintainable systems.</p>
        
      </section>
      
      <section id="the-single-responsibility-principle">
        <h2 id="the-single-responsibility-principle">The Single Responsibility Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Single_responsibility_principle">The Single Responsibility Principle on Wikipedia</a></p>
<blockquote>
<p>Every module or class should have a single responsibility only.</p>
</blockquote>
<p>The first of the '<a href="#solid">SOLID</a>' principles. This principle suggests that modules or classes should do one thing and one thing only. In more practical terms, this means that a single, small change to a feature of a program should require a change in one component only. For example, changing how a password is validated for complexity should require a change in only one part of the program.</p>
<p>Theoretically, this should make the code more robust, and easier to change. Knowing that a component being changed has a single responsibility only means that <em>testing</em> that change should be easier. Using the earlier example, changing the password complexity component should only be able to affect the features which relate to password complexity. It can be much more difficult to reason about the impact of a change to a component which has many responsibilities.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Object-Oriented Programming</a></li>
<li><a href="#solid">SOLID</a></li>
</ul>
        
      </section>
      
      <section id="the-open/closed-principle">
        <h2 id="the-openclosed-principle">The Open/Closed Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle">The Open/Closed Principle on Wikipedia</a></p>
<blockquote>
<p>Entities should be open for extension and closed for modification.</p>
</blockquote>
<p>The second of the '<a href="#solid">SOLID</a>' principles. This principle states that entities (which could be classes, modules, functions and so on) should be able to have their behaviour <em>extended</em>, but that their <em>existing</em> behaviour should not be able to be modified.</p>
<p>As a hypothetical example, imagine a module which is able to turn a Markdown document into HTML. Now imagine there is a new syntax added to the Markdown specification, which adds support for mathematical equations. The module should be <em>open to extension</em> to implement the new mathematics syntax. However, existing syntax implementations (like paragraphs, bullets, etc) should be <em>closed for modification</em>. They already work, we don't want people to change them.</p>
<p>This principle has particular relevance for object-oriented programming, where we may design objects to be easily extended, but would avoid designing objects which can have their existing behaviour changed in unexpected ways.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Object-Oriented Programming</a></li>
<li><a href="#solid">SOLID</a></li>
</ul>
        
      </section>
      
      <section id="the-liskov-substitution-principle">
        <h2 id="the-liskov-substitution-principle">The Liskov Substitution Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Liskov_substitution_principle">The Liskov Substitution Principle on Wikipedia</a></p>
<blockquote>
<p>It should be possible to replace a type with a subtype, without breaking the system.</p>
</blockquote>
<p>The third of the '<a href="#solid">SOLID</a>' principles. This principle states that if a component relies on a type, then it should be able to use subtypes of that type, without the system failing or having to know the details of what that subtype is.</p>
<p>As an example, imagine we have a method which reads an XML document from a structure which represents a file. If the method uses a base type 'file', then anything which derives from 'file' should be usable in the function. If 'file' supports seeking in reverse, and the XML parser uses that function, but the derived type 'network file' fails when reverse seeking is attempted, then the 'network file' would be violating the principle.</p>
<p>This principle has particular relevance for object-oriented programming, where type hierarchies must be modeled carefully to avoid confusing users of a system.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Object-Oriented Programming</a></li>
<li><a href="#solid">SOLID</a></li>
</ul>
        
      </section>
      
      <section id="the-interface-segregation-principle">
        <h2 id="the-interface-segregation-principle">The Interface Segregation Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Interface_segregation_principle">The Interface Segregation Principle on Wikipedia</a></p>
<blockquote>
<p>No client should be forced to depend on methods it does not use.</p>
</blockquote>
<p>The fourth of the '<a href="#solid">SOLID</a>' principles. This principle states that consumers of a component should not depend on functions of that component which it doesn't actually use.</p>
<p>As an example, imagine we have a method which reads an XML document from a structure which represents a file. It only needs to read bytes, move forwards or move backwards in the file. If this method needs to be updated because an unrelated feature of the file structure changes (such as an update to the permissions model used to represent file security), then the principle has been invalidated. It would be better for the file to implement a 'seekable-stream' interface, and for the XML reader to use that.</p>
<p>This principle has particular relevance for object-oriented programming, where interfaces, hierarchies and abstract types are used to <a href="#todo">minimise the coupling</a> between different components. <a href="#todo">Duck typing</a> is a methodology which enforces this principle by eliminating explicit interfaces.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Object-Oriented Programming</a></li>
<li><a href="#solid">SOLID</a></li>
<li><a href="#todo">Duck Typing</a></li>
<li><a href="#todo">Decoupling</a></li>
</ul>
        
      </section>
      
      <section id="the-dependency-inversion-principle">
        <h2 id="the-dependency-inversion-principle">The Dependency Inversion Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Dependency_inversion_principle">The Dependency Inversion Principle on Wikipedia</a></p>
<blockquote>
<p>High-level modules should not be dependent on low-level implementations.</p>
</blockquote>
<p>The fifth of the '<a href="#solid">SOLID</a>' principles. This principle states that higher-level orchestrating components should not have to know the details of their dependencies.</p>
<p>As an example, imagine we have a program which read metadata from a website. We would assume that the main component would have to know about a component to download the webpage content, then a component which can read the metadata. If we were to take dependency inversion into account, the main component would depend only on an abstract component which can fetch byte data, and then an abstract component which would be able to read metadata from a byte stream. The main component would not know about TCP/IP, HTTP, HTML, etc.</p>
<p>This principle is complex, as it can seem to 'invert' the expected dependencies of a system (hence the name). In practice, it also means that a separate orchestrating component must ensure the correct implementations of abstract types are used (e.g. in the previous example, <em>something</em> must still provide the metadata reader component a HTTP file downloader and HTML meta tag reader). This then touches on patterns such as <a href="#todo">Inversion of Control</a> and <a href="#todo">Dependency Injection</a>.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Object-Oriented Programming</a></li>
<li><a href="#solid">SOLID</a></li>
<li><a href="#todo">Inversion of Control</a></li>
<li><a href="#todo">Dependency Injection</a></li>
</ul>
        
      </section>
      
      <section id="the-dry-principle">
        <h2 id="the-dry-principle">The DRY Principle</h2>
<p><a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself">The DRY Principle on Wikipedia</a></p>
<blockquote>
<p>Every piece of knowledge must have a single, unambiguous, authoritative representation within a system.</p>
</blockquote>
<p>DRY is an acronym for <em>Don't Repeat Yourself</em>. This principle aims to help developers reducing the repetition of code and keep the information in a single place and was cited in 1999 by Andrew Hunt and Dave Thomas in the book <a href="https://en.wikipedia.org/wiki/The_Pragmatic_Programmer">The Pragmatic Programmer</a></p>
<blockquote>
<p>The opposite of DRY would be <em>WET</em> (Write Everything Twice or We Enjoy Typing).</p>
</blockquote>
<p>In practice, if you have the same piece of information in two (or more) different places, you can use DRY to merge them into a single one and reuse it wherever you want/need.</p>
<p>See also:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/The_Pragmatic_Programmer">The Pragmatic Programmer</a></li>
</ul>
        
      </section>
      
      <section id="the-kiss-principle">
        <h2 id="the-kiss-principle">The KISS principle</h2>
<p><a href="https://en.wikipedia.org/wiki/KISS_principle">KISS on Wikipedia</a></p>
<blockquote>
<p>Keep it simple, stupid</p>
</blockquote>
<p>The KISS principle states that most systems work best if they are kept simple rather than made complicated; therefore, simplicity should be a key goal in design, and unnecessary complexity should be avoided.  Originating in the U.S. Navy in 1960, the phrase has been associated with aircraft engineer Kelly Johnson.</p>
<p>The principle is best exemplified by the story of Johnson handing a team of design engineers a handful of tools, with the challenge that the jet aircraft they were designing must be repairable by an average mechanic in the field under combat conditions with only these tools. Hence, the "stupid" refers to the relationship between the way things break and the sophistication of the tools available to repair them, not the capabilities of the engineers themselves.</p>
<p>See also:</p>
<ul>
<li><a href="#galls-law">Gall's Law</a></li>
</ul>
        
      </section>
      
      <section id="yagni">
        <h2 id="yagni">YAGNI</h2>
<p><a href="https://en.wikipedia.org/wiki/You_ain%27t_gonna_need_it">YAGNI on Wikipedia</a></p>
<p>This is an acronym for <em><strong>Y</strong>ou <strong>A</strong>in't <strong>G</strong>onna <strong>N</strong>eed <strong>I</strong>t</em>.</p>
<blockquote>
<p>Always implement things when you actually need them, never when you just foresee that you need them.</p>
<p>(<a href="https://twitter.com/RonJeffries">Ron Jeffries</a>) (XP co-founder and author of the book "Extreme Programming Installed")</p>
</blockquote>
<p>This <em>Extreme Programming</em> (XP) principle suggests developers should only implement functionality that is needed for the immediate requirements, and avoid attempts to predict the future by implementing functionality that might be needed later.</p>
<p>Adhering to this principle should reduce the amount of unused code in the codebase, and avoid time and effort being wasted on functionality that brings no value.</p>
<p>See also:</p>
<ul>
<li><a href="#reading-list">Reading List: Extreme Programming Installed</a></li>
</ul>
        
      </section>
      
      <section id="the-fallacies-of-distributed-computing">
        <h2 id="the-fallacies-of-distributed-computing">The Fallacies of Distributed Computing</h2>
<p><a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing">The Fallacies of Distributed Computing on Wikipedia</a></p>
<p>Also known as <em>Fallacies of Networked Computing</em>, the Fallacies are a list of conjectures (or beliefs) about distributed computing, which can lead to failures in software development. The assumptions are:</p>
<ul>
<li>The network is reliable</li>
<li>Latency is zero</li>
<li>Bandwidth is infinite</li>
<li>The network is secure</li>
<li>Topology doesn't change</li>
<li>There is one administrator</li>
<li>Transport cost is zero</li>
<li>The network is homogeneous</li>
</ul>
<p>The first four items were listed by <a href="https://en.wikipedia.org/wiki/Bill_Joy">Bill Joy</a> and <a href="https://twitter.com/aka_pugs">Tom Lyon</a> around 1991 and first classified by <a href="https://en.wikipedia.org/wiki/James_Gosling">James Gosling</a> as the "Fallacies of Networked Computing". <a href="https://en.wikipedia.org/wiki/L._Peter_Deutsch">L. Peter Deutsch</a> added the 5th, 6th and 7th fallacies. In the late 90's Gosling added the 8th fallacy.</p>
<p>The group was inspired by what was happening at the time inside <a href="https://en.wikipedia.org/wiki/Sun_Microsystems">Sun Microsystems</a>.</p>
<p>These fallacies should be considered carefully when designing code which is resilient; assuming any of these fallacies can lead to flawed logic which fails to deal with the realities and complexities of distributed systems.</p>
<p>See also:</p>
<ul>
<li><a href="https://medium.com/baseds/foraging-for-the-fallacies-of-distributed-computing-part-1-1b35c3b85b53">Foraging for the Fallacies of Distributed Computing (Part 1) - Vaidehi Joshi
 on Medium</a></li>
</ul>
        
      </section>
      
      <section id="the-principle-of-least-astonishment">
        <h2 id="the-principle-of-least-astonishment">The Principle of Least Astonishment</h2>
<p><a href="https://en.wikipedia.org/wiki/Principle_of_least_astonishment">The Principle of Least Astonishment on Wikipedia</a></p>
<blockquote>
<p>People are part of the system. The design should match the user's experience, expectations, and mental models.</p>
<p>Frans Kaashoek</p>
</blockquote>
<p>This principle proposes that systems and interfaces should be designed in a way that features and functionality is easily discovered and matches users expectations. Features that 'surprise' users should be discouraged in favour of features that can be intuitively reasoned about based on existing patterns and practices.</p>
<p>Many examples are present in user interfaces, such as a 'pull down' gesture on a mobile appliation to refresh content. Another example would be command line tools, where many standards exist for how parameters are named, common parameters that should be available and so on.</p>
<p>See also:</p>
<ul>
<li><a href="#todo">Convention Over Configuration</a></li>
</ul>
        
      </section>
      
      <section id="reading-list">
        <h2 id="reading-list">Reading List</h2>
<p>If you have found these concepts interesting, you may enjoy the following books.</p>
<ul>
<li><a href="https://www.goodreads.com/book/show/3735293-clean-code">Clean Code - Robert C. Martin</a> - One of the most well respected books on how to write clean, maintainable code.</li>
<li><a href="https://www.goodreads.com/en/book/show/67834">Extreme Programming Installed - Ron Jeffries, Ann Anderson, Chet Hendrikson</a> - Covers the core principles of Extreme Programming.</li>
<li><a href="https://www.goodreads.com/book/show/24113.G_del_Escher_Bach">G√∂del, Escher, Bach: An Eternal Golden Braid - Douglas R. Hofstadter.</a> - This book is difficult to classify. <a href="#hofstadters-law">Hofstadter's Law</a> is from the book.</li>
<li><a href="https://www.goodreads.com/book/show/43713">Structure and Interpretation of Computer Programs - Harold Abelson, Gerald Jay Sussman, Julie Sussman</a> - If you were a comp sci or electical engineering student at MIT or Cambridge this was your intro to programming. Widely reported as being a turning point in people's lives.</li>
<li><a href="https://en.wikipedia.org/wiki/The_Cathedral_and_the_Bazaar">The Cathedral and the Bazaar - Eric S. Raymond</a> - a collection of essays on open source. This book was the source of <a href="#linuss-law">Linus's Law</a>.</li>
<li><a href="https://www.goodreads.com/book/show/85574.The_Dilbert_Principle">The Dilbert Principle - Scott Adams</a> - A comic look at corporate America, from the author who created the <a href="#the-dilbert-principle">Dilbert Principle</a>.</li>
<li><a href="https://www.goodreads.com/book/show/13629.The_Mythical_Man_Month">The Mythical Man Month - Frederick P. Brooks Jr.</a> - A classic volume on software engineering. <a href="#brooks-law">Brooks' Law</a> is a central theme of the book.</li>
<li><a href="https://www.goodreads.com/book/show/890728.The_Peter_Principle">The Peter Principle - Lawrence J. Peter</a> - Another comic look at the challenges of larger organisations and people management, the source of <a href="#the-peter-principle">The Peter Principle</a>.</li>
</ul>
        
      </section>
      
      <section id="online-resources">
        <h2 id="online-resources">Online Resources</h2>
<p>Some useful resources and reading.</p>
<ul>
<li><a href="https://www.cbinsights.com/research/report/tech-laws-success-failure">CB Insights: 8 Laws Driving Success In Tech: Amazon's 2-Pizza Rule, The 80/20 Principle, &amp; More</a> - an interesting write up of some laws which have been highly influential in technology.</li>
</ul>
        
      </section>
      
      <section id="pdf-ebook">
        <h2 id="pdf-ebook">PDF eBook</h2>
<p>The project is available as a PDF eBook, <a href="https://github.com/dwmkerr/hacker-laws/releases/latest/download/hacker-laws.pdf">download the latest PDF eBook with this link</a> or check the <a href="https://github.com/dwmkerr/hacker-laws/releases">release</a> page for older versions.</p>
<p>A new version of the eBook is created automatically when a new version tag is pushed.</p>
        
      </section>
      
      <section id="podcast">
        <h2 id="podcast">Podcast</h2>
<p>Hacker Laws has been featured in <a href="https://changelog.com/podcast/403">The Changelog</a>, you can check out the Podcast episode with the link below:</p>
<p><a href="https://changelog.com/podcast/403" target="_blank"><img src="https://hacker-laws.com/images/changelog-podcast.png" width="800px" alt="Changelog Podcast Image"></a></p>
        
      </section>
      
      <section id="translations">
        <h2 id="translations">Translations</h2>
<p>Thanks to a number of wonderful contributors, Hacker Laws is available in a number of languages. Please consider sponsoring moderators!</p>
<p>| Language | Moderator | Status |
|----------|-----------|--------|
| <a href="https://hacker-laws.com/translations/ar-AR.md">AR Arabic / Arabic</a> | <a href="https://github.com/a0m0rajab">Abdurrahman Rajab - a0m0rajab</a> | . |
| <a href="https://hacker-laws.com/translations/pt-BR.md">üáÆüá© Bahasa Indonesia / Indonesian</a> | <a href="https://github.com/arywidiantara">arywidiantara</a> | <a href="https://gitlocalize.com/repo/2513/id?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/id/badge.svg"></a> |
| <a href="https://hacker-laws.com/translations/pt-BR.md">üáßüá∑ Brasileiro / Brazilian</a> | <a href="https://github.com/eugenioamn">Eug√™nio Moreira</a>, <a href="https://github.com/leofc97">Leonardo Costa</a> | <a href="https://gitlocalize.com/repo/2513/pt-BR?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/pt-BR/badge.svg"></a> |
| <a href="https://github.com/nusr/hacker-laws-zh">üá®üá≥ ‰∏≠Êñá / Chinese</a> | <a href="https://github.com/nusr">Steve Xu</a> | Partially complete |
| <a href="https://hacker-laws.com/translations/de.md">üá©üá™ Deutsch / German</a> | <a href="https://github.com/viktodergunov">Vikto</a> | <a href="https://gitlocalize.com/repo/2513/de?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/de/badge.svg"></a> |
| <a href="https://hacker-laws.com/translations/fr.md">üá´üá∑ Fran√ßais / French</a> | <a href="https://github.com/KevinBockelandt">Kevin Bockelandt</a> | <a href="https://gitlocalize.com/repo/2513/fr?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/fr/badge.svg"></a> |
| <a href="https://hacker-laws.com/translations/el.md">üá¨üá∑ ŒµŒªŒªŒ∑ŒΩŒπŒ∫Œ¨ / Greek</a> | <a href="https://github.com/0gap">Panagiotis Gourgaris</a> | <a href="https://gitlocalize.com/repo/2513/el?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/el/badge.svg"></a> |
| <a href="https://github.com/csparpa/hacker-laws-it">üáÆüáπ Italiano / Italian</a> | <a href="https://github.com/csparpa">Claudio Sparpaglione</a> | Partially complete |
| <a href="https://hacker-laws.com/translations/jp.md">üáØüáµ JP Êó•Êú¨Ë™û / Japanese</a> | <a href="https://github.com/freddiefujiwara">Fumikazu Fujiwara</a>| <a href="https://gitlocalize.com/repo/2513/ja?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/ja/badge.svg"></a> |
| <a href="https://github.com/codeanddonuts/hacker-laws-kr">üá∞üá∑ ÌïúÍµ≠Ïñ¥ / Korean</a> | <a href="https://github.com/codeanddonuts">Doughnut</a> | Partially complete |
| <a href="https://hacker-laws.com/translations/lv.md">üá±üáª Latvie≈°u Valoda / Latvian</a> | <a href="https://github.com/iegik">Arturs Jansons</a> | <a href="https://gitlocalize.com/repo/2513/lv?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/lv/badge.svg"></a> |
| <a href="https://hacker-laws.com/translations/fa.md">üáÆüá∑ ŸÅÿßÿ±ÿ≥€å / Persian</a> | <a href="https://github.com/MEgooneh">MohammadErfan Gooneh</a> | . |
| <a href="https://hacker-laws.com/translations/pl.md">üáµüá± Polski / Polish</a> | <a href="https://github.com/k0gen">Mariusz Kogen</a> | <a href="https://gitlocalize.com/repo/2513/pl?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/pl/badge.svg"></a> |
| <a href="https://github.com/solarrust/hacker-laws">üá∑üá∫ –†—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è / Russian</a> | <a href="https://github.com/solarrust">Alena Batitskaya</a> | Partially complete |
| <a href="https://hacker-laws.com/translations/es-ES.md">üá™üá∏ Castellano / Spanish</a> | <a href="https://github.com/manuel-rubio">Manuel Rubio</a> (<a href="https://github.com/sponsors/manuel-rubio">Sponsor</a>) | Partially complete |
| <a href="https://github.com/umutphp/hacker-laws-tr">üáπüá∑ T√ºrk√ße / Turkish</a> | <a href="https://github.com/umutphp">Umut I≈üƒ±k</a> | <a href="https://gitlocalize.com/repo/2513/tr?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/tr/badge.svg"></a> |
| <a href="https://hacker-laws.com/translations/uk.md">üá∫üá¶ —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞ –º–æ–≤–∞ / Ukrainian</a> | <a href="https://github.com/troyane">Nazar</a>, <a href="https://github.com/HelgaLastivka">Helga Lastivka</a> | <a href="https://gitlocalize.com/repo/2513/uk?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/uk/badge.svg"></a> |
| <a href="https://hacker-laws.com/translations/vu.md">üáªüá≥ Ti·∫øng Vi·ªát / Vietnamese</a>                      | <a href="https://github.com/truonghoangnguyen">Nguy√™n</a>, <a href="https://github.com/truonghoangnguyen">Tr∆∞∆°ng Ho√†ng</a> | <a href="https://gitlocalize.com/repo/2513/vi?utm_source=badge"><img alt="gitlocalized " src="https://gitlocalize.com/repo/2513/vi/badge.svg"></a> |</p>
<p>If you would like to update a translation, follow the <a href="https://github.com/dwmkerr/hacker-laws/blob/main/.github/contributing.md#translations">Translators Contributor Guide</a>.</p>
        
      </section>
      
      
      
      <section id="contributing">
        <h2 id="contributing">Contributing</h2>
<p>Please do contribute! <a href="https://github.com/dwmkerr/hacker-laws/issues/new">Raise an issue</a> if you'd like to suggest an addition or change, or <a href="https://github.com/dwmkerr/hacker-laws/compare">Open a pull request</a> to propose your own changes.</p>
<p>Please be sure to read the <a href="https://hacker-laws.com/.github/contributing.md">Contributing Guidelines</a> for requirements on text, style and so on. Please be aware of the <a href="https://hacker-laws.com/.github/CODE_OF_CONDUCT.md">Code of Conduct</a> when engaging in discussions on the project.</p>
        
      </section>
      
      <section id="todo">
        <h2 id="todo">TODO</h2>
<p>Hi! If you land here, you've clicked on a link to a topic I've not written up yet, sorry about this - this is work in progress!</p>
<p>Feel free to <a href="https://github.com/dwmkerr/hacker-laws/issues">Raise an Issue</a> requesting more details, or <a href="https://github.com/dwmkerr/hacker-laws/pulls">Open a Pull Request</a> to submit your proposed definition of the topic.</p>
        
      </section>
      

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rust Any part 3: we have upcasts (140 pts)]]></title>
            <link>https://lucumr.pocoo.org/2025/3/27/any-upcast/</link>
            <guid>43523238</guid>
            <pubDate>Sun, 30 Mar 2025 11:15:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lucumr.pocoo.org/2025/3/27/any-upcast/">https://lucumr.pocoo.org/2025/3/27/any-upcast/</a>, See on <a href="https://news.ycombinator.com/item?id=43523238">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
  

  
  <p data-date="2025-03-27T00:00:00">written on Thursday, March 27, 2025</p>
  

  <p>Three years ago I shared the <a href="https://lucumr.pocoo.org/2022/1/7/as-any-hack/">As-Any Hack</a> on
this blog.  That hack is a way to get upcasting to supertraits working on
stable Rust.  To refresh your memory, the goal was to make something like
this work:</p>
<div><pre><span></span><span>#[derive(Debug)]</span><span></span>
<span>struct</span> <span>AnyBox</span><span>(</span><span>Box</span><span>&lt;</span><span>dyn</span><span> </span><span>DebugAny</span><span>&gt;</span><span>);</span><span></span>

<span>trait</span><span> </span><span>DebugAny</span>: <span>Any</span><span> </span><span>+</span><span> </span><span>Debug</span><span> </span><span>{}</span><span></span>

<span>impl</span><span>&lt;</span><span>T</span>: <span>Any</span><span> </span><span>+</span><span> </span><span>Debug</span><span> </span><span>+</span><span> </span><span>'</span><span>static</span><span>&gt;</span><span> </span><span>DebugAny</span><span> </span><span>for</span><span> </span><span>T</span><span> </span><span>{}</span><span></span>
</pre></div>
<p>The problem? Even though <cite>DebugAny</cite> inherits from <cite>Any</cite>, Rust wouldn't let you
use methods from <cite>Any</cite> on a <cite>dyn DebugAny</cite>.  So while you could call
<cite>DebugAny</cite> methods just fine, trying to use <cite>downcast_ref</cite> from <cite>Any</cite> (the
reason to use Any in the first place) would fail:</p>
<div><pre><span></span><span>fn</span> <span>main</span><span>()</span><span> </span><span>{</span><span></span>
<span>    </span><span>let</span><span> </span><span>any_box</span><span> </span><span>=</span><span> </span><span>AnyBox</span><span>(</span><span>Box</span>::<span>new</span><span>(</span><span>42</span><span>i32</span><span>));</span><span></span>
<span>    </span><span>dbg!</span><span>(</span><span>any_box</span><span>.</span><span>0.</span><span>downcast_ref</span>::<span>&lt;</span><span>i32</span><span>&gt;</span><span>());</span><span>  </span><span>// Compile error</span>
<span>}</span><span></span>
</pre></div>
<p>The same would happen if we tried to cast it into an <cite>&amp;dyn Any</cite>?  A
compile error again:</p>
<div><pre><span></span><span>fn</span> <span>main</span><span>()</span><span> </span><span>{</span><span></span>
<span>    </span><span>let</span><span> </span><span>any_box</span><span> </span><span>=</span><span> </span><span>AnyBox</span><span>(</span><span>Box</span>::<span>new</span><span>(</span><span>42</span><span>i32</span><span>));</span><span></span>
<span>    </span><span>let</span><span> </span><span>any</span><span> </span><span>=</span><span> </span><span>&amp;*</span><span>any_box</span><span>.</span><span>0</span><span> </span><span>as</span><span> </span><span>&amp;</span><span>dyn</span><span> </span><span>Any</span><span>;</span><span></span>
<span>    </span><span>dbg!</span><span>(</span><span>any</span><span>.</span><span>downcast_ref</span>::<span>&lt;</span><span>i32</span><span>&gt;</span><span>());</span><span></span>
<span>}</span><span></span>
</pre></div>
<p>But there is good news!  As of Rust 1.86, this is finally fixed. The cast
now works:</p>
<pre>[src/main.rs:14:5] any.downcast_ref::&lt;i32&gt;() = Some(
    42,
)
</pre>
<p>At the time of writing, this fix is in the beta channel, but stable
release is just around the corner.  That means a lot of old hacks can
finally be retired.  At least once your MSRV moves up.</p>
<p>Thank you so much to everyone who <a href="https://github.com/rust-lang/rust/issues/65991">worked on this</a> to make it work!</p>


  
  <p>This entry was tagged
    
      <a href="https://lucumr.pocoo.org/tags/rust/">rust</a>
  

      </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The average college student today (115 pts)]]></title>
            <link>https://hilariusbookbinder.substack.com/p/the-average-college-student-today</link>
            <guid>43522966</guid>
            <pubDate>Sun, 30 Mar 2025 10:20:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hilariusbookbinder.substack.com/p/the-average-college-student-today">https://hilariusbookbinder.substack.com/p/the-average-college-student-today</a>, See on <a href="https://news.ycombinator.com/item?id=43522966">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><span>I‚Äôm Gen X. I was pretty young when I earned my PhD, so I‚Äôve been a professor for a long time‚Äîover 30 years. If you‚Äôre not in academia, or it‚Äôs been awhile since you were in college, you might not know this: the students are not what they used to be. The problem with even talking about this topic at all is the knee-jerk response of, ‚Äúyeah, just another old man complaining about the kids today, the same way everyone has since Gilgamesh. Shake your fist at the clouds, dude.‚Äù</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-159700143" href="https://hilariusbookbinder.substack.com/p/the-average-college-student-today#footnote-1-159700143" target="_self" rel="">1</a></span><span> So yes, I‚Äôm ready to hear that. Go right ahead. Because people need to know. </span></p><p><span>First, some context. I teach at a regional public university in the US. Our students are  average on just about any dimension you care to name‚Äîaspirations, intellect, socio-economic status, physical fitness. They wear hoodies and yoga pants and like Buffalo wings. They listen to Zach Bryan and Taylor Swift. That‚Äôs in no way a put-down: I firmly believe that the average citizen deserves a shot at a good education and even more importantly a shot at a good life. All I mean is that our students are </span><em>representative</em><span>; they‚Äôre neither the bottom of the academic barrel nor the cream off the top. </span></p><p>As with every college we get a range of students, and our best philosophy majors have gone on to earn PhDs or go to law school. We‚Äôre also an NCAA Division 2 school and I watched one of our graduates become an All-Pro lineman for the Saints. These are exceptions, and what I say here does not apply to every single student. But what I‚Äôm about to describe are the average students at Average State U.</p><p><span>Most of our students are functionally illiterate. This is not a joke. By ‚Äúfunctionally illiterate‚Äù I mean ‚Äúunable to read and comprehend adult novels by people like Barbara Kingsolver, Colson Whitehead, and Richard Powers.‚Äù I picked those three authors because they are all recent Pulitzer Prize winners, an objective standard of ‚Äúserious adult novel.‚Äù Furthermore, I‚Äôve read them all and can testify that they are brilliant, captivating writers; we‚Äôre not talking about </span><em>Finnegans Wake</em><span> here. But at the same time they aren‚Äôt YA, romantasy, or Harry Potter either. </span></p><p><span>I‚Äôm not saying our students just prefer genre books or graphic novels or whatever. No, our average graduate literally could not read a serious adult novel cover-to-cover and understand what they read. They just couldn‚Äôt do it. They don‚Äôt have the desire to try, the vocabulary to grasp what they read,</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-159700143" href="https://hilariusbookbinder.substack.com/p/the-average-college-student-today#footnote-2-159700143" target="_self" rel="">2</a></span><span> and most certainly not the attention span to finish. For them to sit down and try to read a book like </span><em>The Overstory</em><span> might as well be me attempting an Iron Man triathlon: much suffering with zero chance of success. </span></p><p>Students are not absolutely illiterate in the sense of being unable to sound out any words whatsoever. Reading bores them, though. They are impatient to get through whatever burden of reading they have to, and move their eyes over the words just to get it done. They‚Äôre like me clicking through a mandatory online HR training. Students get exam questions wrong simply because they didn't even take the time to read the question properly. Reading anything more than a menu is a chore and to be avoided.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg" width="700" height="525" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/b7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:525,&quot;width&quot;:700,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:53906,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://hilariusbookbinder.substack.com/i/159700143?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fb7bf2e1d-e9da-41fc-b39b-f39291ded07c_700x525.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>The Buffalo wings look good</figcaption></figure></div><p><span>They also lie about it. I wrote the textbook for a course I regularly teach. It‚Äôs a fairly popular textbook, so I‚Äôm assuming it is not terribly written. I did everything I could to make the writing lively and packed with my most engaging examples. The majority of students don‚Äôt read it. Oh, they will come to my office hours (occasionally) because they are bombing the course, and </span><em>tell</em><span> me that they have been doing the reading, but it‚Äôs obvious they are lying. The most charitable interpretation is that they looked at some of the words, didn‚Äôt understand anything, pretended that counted as reading, and returned to looking at TikTok. </span></p><p><span>This </span><a href="https://pirg.org/wp-content/uploads/2021/02/Fixing-the-Broken-Textbook-Market-3e-February-2021.pdf" rel="">study</a><span> says that 65% of college students reported that they skipped buying or renting a textbook because of cost. I believe they didn‚Äôt buy the books, but I‚Äôm skeptical that cost is the true reason, as opposed to just the excuse they offer. Yes, I know some texts, especially in the sciences, are expensive. However, the books I assign are low-priced. All texts combined for one of my courses is between $35-$100 and they still don‚Äôt buy them. Why buy what you aren‚Äôt going to read anyway? Just google it. </span></p><p><span>Even in upper-division courses that students supposedly take out of genuine interest they won‚Äôt read. I‚Äôm teaching Existentialism this semester. It is entirely primary texts‚ÄîDostoevsky, Kierkegaard, Nietzsche, Camus, Sartre. The reading ranges from accessible but challenging to extremely difficult but we‚Äôre making a go of it anyway (looking at you, </span><em>Being and Nothingness</em><span>). This is a close textual analysis course. My students come to class without the books, which they probably do not own and definitely did not read. </span></p><p>Their writing skills are at the 8th-grade level. Spelling is atrocious, grammar is random, and the correct use of apostrophes is cause for celebration. Worse is the resistance to original thought. What I mean is the reflexive submission of the cheapest clich√© as novel insight. </p><blockquote><p><em>Exam question</em><span>: Describe the attitude of Dostoevsky‚Äôs Underground Man towards acting in one‚Äôs own self-interest, and how this is connected to his concerns about free will. Are his views self-contradictory?</span></p><p><em>Student</em><span>: With the UGM its all about our journey in life, not the destination. He beleives we need to take time to enjoy the little things becuase life is short and you never gonna know what happens. Sometimes he contradicts himself cause sometimes you say one thing but then you think something else later. It‚Äôs all relative.</span></p></blockquote><p>You probably think that‚Äôs satire. Either that, or it looks like this:</p><blockquote><p><em>Exam question</em><span>: Describe the attitude of Dostoevsky‚Äôs Underground Man towards acting in one‚Äôs own self-interest, and how this is connected to his concerns about free will. Are his views self-contradictory?</span></p><p><em>Student</em><span>: Dostoevsky‚Äôs </span><em>Underground Man</em><span> paradoxically rejects the idea that people always act in their own self-interest, arguing instead that humans often behave irrationally to assert their free will. He criticizes rationalist philosophies like utilitarianism, which he sees as reducing individuals to predictable mechanisms, and insists that people may choose suffering just to prove their autonomy. However, his stance is self-contradictory‚Äîwhile he champions free will, he is paralyzed by inaction and self-loathing, trapped in a cycle of bitterness. Through this, Dostoevsky explores the tension between reason, free will, and self-interest, exposing the complexities of human motivation.</span></p></blockquote><p><span>That‚Äôs right, ChatGPT. The students cheat. I‚Äôve written about cheating in ‚Äú</span><a href="https://hilariusbookbinder.substack.com/p/why-ai-is-destroying-academic-integrity?r=epq8m" rel="">Why AI is Destroying Academic Integrity</a><span>,‚Äù so I won‚Äôt repeat it here, but the cheating tsunami has definitely changed what assignments I give. I can‚Äôt assign papers any more because I‚Äôll just get AI back, and there‚Äôs nothing I can do to make it stop. Sadly, not writing exacerbates their illiteracy; writing is a muscle and dedicated writing is a workout for the mind as well as the pen.</span></p><p>I‚Äôm less informed to speak out on this one, but my math prof friends tell me that their students are increasingly less capable and less willing to put in the effort. As a result they have had to make their tests easier with fewer hard problems. When I was a first semester freshman (at a private SLAC, yes, but it wasn‚Äôt CalTech) I took Calculus 1. Second semester I took Calculus 2. I don‚Äôt think pre-calculus was even a thing back then. Now apparently pre-calc counts as an advanced content course. My psych prof friends who teach statistics have similarly lamented having to water down the content over time.</p><p><span>Symbolic Logic was a requirement when I was a grad student. The course was a cross-listed upper-division undergrad/grad class. Jaegwon Kim taught the course, and our sole textbook was W. V. Quine‚Äôs </span><em>Methods of Logic</em><span>, which we worked through in its entirety. I think we spent two weeks on propositional logic before moving on to the predicate calculus. We proved compactness, soundness, and completeness, and probably some other theorems I forget. There is no possible way our students, unless they were math or computer science majors, would survive that class.</span></p><p>The average student has seen college as basically transactional for as long as I‚Äôve been doing this. They go through the motions and maybe learn something along the way, but it is all in service to the only conception of the good life they can imagine: a job with middle-class wages. I‚Äôve mostly made my peace with that, do my best to give them a taste of the life of the mind, and celebrate the successes.</p><p><span>Things have changed. Ted Gioia </span><a href="https://www.honest-broker.com/p/whats-happening-to-students" rel="">describes</a><span> modern students as checked-out, phone-addicted zombies. Troy Jollimore </span><a href="https://thewalrus.ca/i-used-to-teach-students-now-i-catch-chatgpt-cheats" rel="">writes</a><span>, ‚ÄúI once believed my students and I were in this together, engaged in a shared intellectual pursuit. That faith has been obliterated over the past few semesters.‚Äù Faculty have seen a </span><a href="https://www.chronicle.com/article/a-stunning-level-of-student-disconnection?" rel="">stunning level of disconnection</a><span>. </span></p><p>What has changed exactly? </p><ul><li><p>Chronic absenteeism. As a friend in Sociology put it, ‚ÄúAttendance is a HUGE problem‚Äîmany just treat class as optional.‚Äù Last semester across all sections, my average student missed two weeks of class. Actually it was more than that, since I‚Äôm not counting excused absences or students who eventually withdrew. A friend in Mathematics told me, ‚ÄúStudents are less respectful of the university experience ‚Äîattendance, lateness, e-mails to me about nonsense, less sense of responsibility.‚Äù </p></li><li><p>Disappearing students. Students routinely just vanish at some point during the semester. They don‚Äôt officially drop or withdraw from the course, they simply quit coming. No email, no notification to anyone in authority about some problem. They just pull an Amelia Earhart. It‚Äôs gotten to the point that on the first day of class, especially in lower-division, I tell the students, ‚Äúlook to your right. Now look to your left. One of you will be gone by the end of the semester. Don‚Äôt let it be you.‚Äù</p></li><li><p>They can‚Äôt sit in a seat for 50 minutes. Students routinely get up during a 50 minute class, sometimes just 15 minutes in, and leave the classroom. I‚Äôm supposed to believe that they suddenly, urgently need the toilet, but the reality is that they are going to look at their phones. They know I‚Äôll call them out on it in class, so instead they walk out. I‚Äôve even told them to plan ahead and pee before class, like you tell a small child before a road trip, but it has no effect. They can‚Äôt make it an hour without getting their phone fix.</p></li><li><p>They want me to do their work for them. During the Covid lockdown, faculty bent over backwards in every way we knew how to accommodate students during an unprecedented (in our lifetimes) health crisis. Now students expect that as a matter of routine. I am frequently asked for my PowerPoint slides, which basically function for me as lecture notes. It is unimaginable to me that I would have ever asked one of my professors for their own lecture notes. No, you can‚Äôt have my slides. Get the notes from a classmate. Read the book. Come to office hours for a conversation if you are still confused after the preceding steps. Last week I had an email from a student who essentially asked me to recap an entire week‚Äôs worth of lecture material for him prior to yesterday‚Äôs midterm. No, I‚Äôm not doing that. I‚Äôm not writing you a 3000-word email. Try coming to class.</p></li><li><p><span>Pretending to type notes in their laptops. I hate laptops in class, but if I try to ban them the students will just run to Accommodative Services and get them to tell me that the student </span><em>must</em><span> use a laptop or they will explode into tiny pieces. But I know for a fact that note-taking is at best a small part of what they are doing. Last semester I had a good student tell me, ‚Äúhey you know that kid who sits in front of me with the laptop? Yeah, I thought you should know that all he does in class is gamble on his computer.‚Äù Gambling, looking at the socials, whatever, they are not listening to me or participating in discussion. They are staring at a screen.</span></p></li><li><p>Indifference. Like everyone else, I allow students to make up missed work if they have an excused absence. No, you can‚Äôt make up the midterm because you were  hungover and slept through your alarm, but you can if you had Covid. Then they just don‚Äôt show up. A missed quiz from a month ago might as well have happened in the Stone Age; students can‚Äôt be bothered to make it up or even talk to me about it because they just don‚Äôt care.</p></li><li><p><a href="https://magdalene.substack.com/p/its-obviously-the-phones" rel="">It‚Äôs the phones, stupid</a><span>. They are absolutely addicted to their phones. When I go work out at the Campus Rec Center, easily half of the students there are just sitting on the machines scrolling on their phones. I was talking with a retired faculty member at the Rec this morning who works out all the time. He said he has done six sets waiting for a student to put down their phone and get off the machine he wanted. The students can‚Äôt get off their phones for an hour to do a voluntary activity they chose for fun. Sometimes I‚Äôm amazed they ever leave their </span><a href="https://www.urbandictionary.com/define.php?term=goon" rel="">goon caves</a><span> at all.</span></p></li></ul><p>I don‚Äôt blame K-12 teachers. This is not an educational system problem, this is a societal problem. What am I supposed to do? Keep standards high and fail them all? That‚Äôs not an option for untenured faculty who would like to keep their jobs. I‚Äôm a tenured full professor. I could probably get away with that for a while, but sooner or later the Dean‚Äôs going to bring me in for a sit-down. Plus, if we flunk out half the student body and drive the university into bankruptcy, all we‚Äôre doing is depriving the good students of an education. </p><p>We‚Äôre told to meet the students where they are, flip the classroom, use multimedia, just be more entertaining, get better. As if rearranging the deck chairs just the right way will stop the Titanic from going down. As if it is somehow the fault of the faculty. It‚Äôs not our fault. We‚Äôre doing the best we can with what we‚Äôve been given.</p><p>All this might sound like an angry rant. I‚Äôm not sure. I‚Äôm not angry, though, not at all. I‚Äôm just sad. One thing all faculty have to learn is that the students are not us. We can‚Äôt expect them all to burn with the sacred fire we have for our disciplines, to see philosophy, psychology, math, physics, sociology or economics as the divine light of reason in a world of shadow. Our job is to kindle that flame, and we‚Äôre trying to get that spark to catch, but it is getting harder and harder and we don‚Äôt know what to do.</p><div data-attrs="{&quot;url&quot;:&quot;https://hilariusbookbinder.substack.com/p/the-average-college-student-today?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="CaptionedButtonToDOM"><p>Thanks for reading Scriptorium Philosophia! This post is public so feel free to share it.</p><p data-attrs="{&quot;url&quot;:&quot;https://hilariusbookbinder.substack.com/p/the-average-college-student-today?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share&quot;,&quot;text&quot;:&quot;Share&quot;}" data-component-name="ButtonCreateButton"><a href="https://hilariusbookbinder.substack.com/p/the-average-college-student-today?utm_source=substack&amp;utm_medium=email&amp;utm_content=share&amp;action=share" rel=""><span>Share</span></a></p></div></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Four Lectures on Standard ML (1989) [pdf] (110 pts)]]></title>
            <link>https://www.cs.tufts.edu/~nr/cs257/archive/mads-tofte/four-lectures.pdf</link>
            <guid>43522363</guid>
            <pubDate>Sun, 30 Mar 2025 08:14:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cs.tufts.edu/~nr/cs257/archive/mads-tofte/four-lectures.pdf">https://www.cs.tufts.edu/~nr/cs257/archive/mads-tofte/four-lectures.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=43522363">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Cloud-Ready Postgres MCP Server (147 pts)]]></title>
            <link>https://github.com/stuzero/pg-mcp</link>
            <guid>43520953</guid>
            <pubDate>Sun, 30 Mar 2025 03:14:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/stuzero/pg-mcp">https://github.com/stuzero/pg-mcp</a>, See on <a href="https://news.ycombinator.com/item?id=43520953">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">PostgreSQL Model Context Protocol (PG-MCP) Server</h2><a id="user-content-postgresql-model-context-protocol-pg-mcp-server" aria-label="Permalink: PostgreSQL Model Context Protocol (PG-MCP) Server" href="#postgresql-model-context-protocol-pg-mcp-server"></a></p>
<p dir="auto">A Model Context Protocol (MCP) server for PostgreSQL databases with enhanced capabilities for AI agents.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Overview</h2><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">PG-MCP is a server implementation of the <a href="https://github.com/modelcontextprotocol/mcp">Model Context Protocol</a> for PostgreSQL databases. It provides a comprehensive API for AI agents to discover, connect to, query, and understand PostgreSQL databases through MCP's resource-oriented architecture.</p>
<p dir="auto">This implementation builds upon and extends the <a href="https://github.com/modelcontextprotocol/servers/tree/main/src/postgres">reference Postgres MCP implementation</a> with several key enhancements:</p>
<ol dir="auto">
<li><strong>Full Server Implementation</strong>: Built as a complete server with SSE transport for production use</li>
<li><strong>Multi-database Support</strong>: Connect to multiple PostgreSQL databases simultaneously</li>
<li><strong>Rich Catalog Information</strong>: Extracts and exposes table/column descriptions from the database catalog</li>
<li><strong>Extension Context</strong>: Provides detailed YAML-based knowledge about PostgreSQL extensions like PostGIS and pgvector</li>
<li><strong>Query Explanation</strong>: Includes a dedicated tool for analyzing query execution plans</li>
<li><strong>Robust Connection Management</strong>: Proper lifecycle for database connections with secure connection ID handling</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Connection Management</h3><a id="user-content-connection-management" aria-label="Permalink: Connection Management" href="#connection-management"></a></p>
<ul dir="auto">
<li><strong>Connect Tool</strong>: Register PostgreSQL connection strings and get a secure connection ID</li>
<li><strong>Disconnect Tool</strong>: Explicitly close database connections when done</li>
<li><strong>Connection Pooling</strong>: Efficient connection management with pooling</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Query Tools</h3><a id="user-content-query-tools" aria-label="Permalink: Query Tools" href="#query-tools"></a></p>
<ul dir="auto">
<li><strong>pg_query</strong>: Execute read-only SQL queries using a connection ID</li>
<li><strong>pg_explain</strong>: Analyze query execution plans in JSON format</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Schema Discovery Resources</h3><a id="user-content-schema-discovery-resources" aria-label="Permalink: Schema Discovery Resources" href="#schema-discovery-resources"></a></p>
<ul dir="auto">
<li>List schemas with descriptions</li>
<li>List tables with descriptions and row counts</li>
<li>Get column details with data types and descriptions</li>
<li>View table constraints and indexes</li>
<li>Explore database extensions</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Data Access Resources</h3><a id="user-content-data-access-resources" aria-label="Permalink: Data Access Resources" href="#data-access-resources"></a></p>
<ul dir="auto">
<li>Sample table data (with pagination)</li>
<li>Get approximate row counts</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Extension Context</h3><a id="user-content-extension-context" aria-label="Permalink: Extension Context" href="#extension-context"></a></p>
<p dir="auto">Built-in contextual information for PostgreSQL extensions like:</p>
<ul dir="auto">
<li><strong>PostGIS</strong>: Spatial data types, functions, and examples</li>
<li><strong>pgvector</strong>: Vector similarity search functions and best practices</li>
</ul>
<p dir="auto">Additional extensions can be easily added via YAML config files.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<ul dir="auto">
<li>Python 3.13+</li>
<li>PostgreSQL database(s)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using Docker</h3><a id="user-content-using-docker" aria-label="Permalink: Using Docker" href="#using-docker"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Clone the repository
git clone https://github.com/stuzero/pg-mcp.git
cd pg-mcp

# Build and run with Docker Compose
docker-compose up -d"><pre><span><span>#</span> Clone the repository</span>
git clone https://github.com/stuzero/pg-mcp.git
<span>cd</span> pg-mcp

<span><span>#</span> Build and run with Docker Compose</span>
docker-compose up -d</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Manual Installation</h3><a id="user-content-manual-installation" aria-label="Permalink: Manual Installation" href="#manual-installation"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="# Clone the repository
git clone https://github.com/stuzero/pg-mcp.git
cd pg-mcp

# Create and activate a virtual environment
python -m venv .venv
source .venv/bin/activate  # On Windows: .venv\Scripts\activate

# Install using uv
uv sync --frozen

# Run the server
python -m server.app"><pre><span><span>#</span> Clone the repository</span>
git clone https://github.com/stuzero/pg-mcp.git
<span>cd</span> pg-mcp

<span><span>#</span> Create and activate a virtual environment</span>
python -m venv .venv
<span>source</span> .venv/bin/activate  <span><span>#</span> On Windows: .venv\Scripts\activate</span>

<span><span>#</span> Install using uv</span>
uv sync --frozen

<span><span>#</span> Run the server</span>
python -m server.app</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Testing the Server</h3><a id="user-content-testing-the-server" aria-label="Permalink: Testing the Server" href="#testing-the-server"></a></p>
<p dir="auto">The repository includes test scripts to verify server functionality:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Basic server functionality test
python test.py &quot;postgresql://username:password@hostname:port/database&quot;

# Claude-powered natural language to SQL conversion
python client/claude_cli.py &quot;Show me the top 5 customers by total sales&quot;"><pre><span><span>#</span> Basic server functionality test</span>
python test.py <span><span>"</span>postgresql://username:password@hostname:port/database<span>"</span></span>

<span><span>#</span> Claude-powered natural language to SQL conversion</span>
python client/claude_cli.py <span><span>"</span>Show me the top 5 customers by total sales<span>"</span></span></pre></div>
<p dir="auto">The <code>claude_cli.py</code> script requires environment variables:</p>
<div data-snippet-clipboard-copy-content="# .env file
DATABASE_URL=postgresql://username:password@hostname:port/database
ANTHROPIC_API_KEY=your-anthropic-api-key
PG_MCP_URL=http://localhost:8000/sse"><pre><code># .env file
DATABASE_URL=postgresql://username:password@hostname:port/database
ANTHROPIC_API_KEY=your-anthropic-api-key
PG_MCP_URL=http://localhost:8000/sse
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">For AI Agents</h3><a id="user-content-for-ai-agents" aria-label="Permalink: For AI Agents" href="#for-ai-agents"></a></p>
<p dir="auto">Example prompt for use with agents:</p>
<div data-snippet-clipboard-copy-content="Use the PostgreSQL MCP server to analyze the database. 
Available tools:
- connect: Register a database connection string and get a connection ID
- disconnect: Close a database connection
- pg_query: Execute SQL queries using a connection ID
- pg_explain: Get query execution plans

You can explore schema resources via:
pgmcp://{conn_id}/schemas
pgmcp://{conn_id}/schemas/{schema}/tables
pgmcp://{conn_id}/schemas/{schema}/tables/{table}/columns"><pre><code>Use the PostgreSQL MCP server to analyze the database. 
Available tools:
- connect: Register a database connection string and get a connection ID
- disconnect: Close a database connection
- pg_query: Execute SQL queries using a connection ID
- pg_explain: Get query execution plans

You can explore schema resources via:
pgmcp://{conn_id}/schemas
pgmcp://{conn_id}/schemas/{schema}/tables
pgmcp://{conn_id}/schemas/{schema}/tables/{table}/columns
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Architecture</h2><a id="user-content-architecture" aria-label="Permalink: Architecture" href="#architecture"></a></p>
<p dir="auto">This server is built on:</p>
<ul dir="auto">
<li><strong>MCP</strong>: The Model Context Protocol foundation</li>
<li><strong>FastMCP</strong>: Python library for MCP</li>
<li><strong>asyncpg</strong>: Asynchronous PostgreSQL client</li>
<li><strong>YAML</strong>: For extension context information</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Security Considerations</h2><a id="user-content-security-considerations" aria-label="Permalink: Security Considerations" href="#security-considerations"></a></p>
<ul dir="auto">
<li>The server runs in read-only mode by default (enforced via transaction settings)</li>
<li>Connection details are never exposed in resource URLs, only opaque connection IDs</li>
<li>Database credentials only need to be sent once during the initial connection</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Contributions are welcome! Areas for expansion:</p>
<ul dir="auto">
<li>Additional PostgreSQL extension context files</li>
<li>More schema introspection resources</li>
<li>Query optimization suggestions</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trump suggests Tesla vandals should face 20 years jail, be sent to El Salvador (128 pts)]]></title>
            <link>https://abc7.com/post/president-trump-suggests-tesla-vandals-should-face-20-years-jail-sent-el-salvador/16064219/</link>
            <guid>43520632</guid>
            <pubDate>Sun, 30 Mar 2025 02:13:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://abc7.com/post/president-trump-suggests-tesla-vandals-should-face-20-years-jail-sent-el-salvador/16064219/">https://abc7.com/post/president-trump-suggests-tesla-vandals-should-face-20-years-jail-sent-el-salvador/16064219/</a>, See on <a href="https://news.ycombinator.com/item?id=43520632">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-testid="prism-article-body"><p><a data-testid="prism-linkbase" href="https://abc7.com/tag/donald-trump/">President Donald Trump</a> seemed to issue a warning to individuals who participate in <a data-testid="prism-linkbase" href="https://abc7.com/tag/tesla/">Tesla</a> vandalisms, as reports of destruction to vehicles, dealerships and charging stations surge across the country.</p><p>Early Friday morning, Trump posted on his social media platform: "People that get caught sabotaging Teslas will stand a very good chance of going to jail for up to twenty years, and that includes funders. WE ARE LOOKING FOR YOU!!!"</p><p>He also suggested those found guilty of participating in Tesla-related crimes could be sent to prison in El Salvador, referring to the administration's controversial move to deport alleged gang members to the country after Trump signed a proclamation invoking the <a data-testid="prism-linkbase" href="https://abc7.com/post/president-donald-trump-invokes-wartime-alien-enemies-act-1798-declare-invasion-gangs-speed-deportations/16028956/" target="_blank">Alien Enemies Act</a> even though a court order temporarily blocked the authority.</p><p>"I look forward to watching the sick terrorist thugs get 20 year jail sentences for what they are doing to Elon Musk and Tesla," Trump said in a <a data-testid="prism-linkbase" href="https://truthsocial.com/@realDonaldTrump/114200244380161257" target="_blank">posting</a>. "Perhaps they would serve them in the prisons of El Salvador, which have become so recently famous for such lovely conditions."</p><p>Recent attacks aimed at Tesla have been reported in Seattle, Kansas City, Las Vegas, Charleston and other cities across the United States since <a data-testid="prism-linkbase" href="https://abc7.com/tag/elon-musk/">Tesla CEO Elon Musk</a> began his role with the Trump administration's Department of Government Efficiency, or DOGE.</p><p>In a public announcement Friday evening, the FBI said incidents targeting Teslas have been recorded in at least nine states since January, including arson, gunfire and graffiti.</p><p>"These criminal actions appear to have been conducted by lone offenders, and all known incidents occurred at night," the FBI said in the public service announcement. "Individuals require little planning to use rudimentary tactics, such as improvised incendiary devices and firearms, and may perceive these attacks as victimless property crimes."</p><p>The FBI urged the public to be vigilant and to look out for suspicious activity in areas around Tesla dealerships.</p><p>When asked about his comments at the White House on Friday afternoon, Trump called the vandalism suspects "terrorists" and <a data-testid="prism-linkbase" href="https://abc7.com/post/donald-trump-calls-tesla-vandalism-suspects-terrorists-compares-actions-jan-6-vowing-send-el-salvador-prisons/16063808/">appeared to argue what was happening with Tesla vehicles was worse than what happened during the Jan. 6 riots at the Capitol.</a></p><p>"You didn't have that on Jan. 6, I can tell you. You didn't have anything like that on Jan. 6, which is sort of amazing," Trump said.</p><p>Three people have been charged for their alleged involvement in recent attacks against Tesla properties in Salem, Oregon; Loveland, Colorado; and North Charleston, South Carolina. <a data-testid="prism-linkbase" href="https://www.justice.gov/usao-or/pr/salem-man-faces-federal-charge-illegally-possessing-molotov-cocktails" target="_blank">Adam Lansky</a> of Salem was charged with illegally possessing an unregistered destructive device on March 5, <a data-testid="prism-linkbase" href="https://www.justice.gov/usao-co/pr/lyons-resident-charged-connection-series-incidents-loveland-tesla-dealership#::text=DENVER%20%E2%80%93%20The%20United%20States%20Attorney's,Tesla%20dealership%20in%20Loveland%2C%20Colorado." target="_blank">Lucy Grace Nelson</a> of Lyons, Colorado, was charged with one count of malicious destruction of property on Feb. 27 and <a data-testid="prism-linkbase" href="https://www.justice.gov/usao-sc/pr/james-island-man-charged-arson-n-charleston-tesla-charging-station" target="_blank">Daniel Clarke-Pounder</a> of North Charleston was charged with arson on March 15, according to federal prosecutors.</p><p>Both Lansky and Clarke-Pounder have not entered any pleas, but Nelson pleaded not guilty on March 11, according to court records.</p><p>Attorney General Pam Bondi also spoke out against the Tesla vandalisms, saying on Thursday the three suspects will face the "full force of the law" for allegedly using Molotov cocktails to set fire to the electric vehicles and charging stations.</p><p>"The days of committing crimes without consequence have ended," Bondi said in a statement. "Let this be a warning: if you join this wave of domestic terrorism against Tesla properties, the Department of Justice will put you behind bars."</p><p><strong>RELATED: </strong><a data-testid="prism-linkbase" href="https://abc7.com/post/attorney-general-calls-tesla-arson-attacks-nothing-short-domestic-terrorism/16044517/" target="_blank"> Attorney general calls Tesla arson attacks 'nothing short of domestic terrorism'</a></p><p>More Tesla incidents continue to pop up across the country, with the latest occurring in Fargo, North Dakota, early Friday morning, where fire crews found "a small fire in wood chips at the base of the electric vehicle chargers in the parking lot," according to the Fargo Fire Department.</p><p>Officials said the fire is considered "suspicious" and the cause of the fire is under investigation. It is unclear whether the fire damaged the chargers, authorities said.</p><p>The New York City Police Department is also asking for the public's help in identifying two men who spray-painted a swastika on a Cyber Truck on Thursday. The incident is being investigated by the NYPD's Hate Crime Task Force.</p><p>In addition to the company dealing with the recent attacks, Tesla's stocks have tumbled nearly 48% this year and in recent weeks, four top officers at the company have sold off $100 million in stock, according to filings with the U.S. Securities and Exchange Commission.</p><p>Musk, the owner of X, reposted reactions to Trump's comments on Friday, <a data-testid="prism-linkbase" href="https://x.com/Rothmus/status/1902928588959064525" target="_blank">including one</a> that said "ESPECIALLY the funders" should be held responsible for these attacks.</p><p>A spokesperson for Tesla did not immediately respond to ABC News' request for comment.</p></div><p>Copyright ¬© 2025 KABC Television, LLC. All rights reserved.</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My TV started playing a video in full screen by itself. What happened? (357 pts)]]></title>
            <link>https://support.vizio.com/s/article/Ambient-or-Scenic-Mode-showing-on-my-TV?language=en_US</link>
            <guid>43520074</guid>
            <pubDate>Sun, 30 Mar 2025 00:41:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://support.vizio.com/s/article/Ambient-or-Scenic-Mode-showing-on-my-TV?language=en_US">https://support.vizio.com/s/article/Ambient-or-Scenic-Mode-showing-on-my-TV?language=en_US</a>, See on <a href="https://news.ycombinator.com/item?id=43520074">Hacker News</a></p>
Couldn't get https://support.vizio.com/s/article/Ambient-or-Scenic-Mode-showing-on-my-TV?language=en_US: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Buy once, use forever A directory of one-time purchase software. Add yours (214 pts)]]></title>
            <link>https://buyoncesoftware.com/</link>
            <guid>43519998</guid>
            <pubDate>Sun, 30 Mar 2025 00:28:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://buyoncesoftware.com/">https://buyoncesoftware.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43519998">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Trump's Police Are Now Disappearing Students for Their Op-Eds (153 pts)]]></title>
            <link>https://www.techdirt.com/2025/03/27/trumps-secret-police-are-now-disappearing-students-for-their-op-eds/</link>
            <guid>43519864</guid>
            <pubDate>Sun, 30 Mar 2025 00:00:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techdirt.com/2025/03/27/trumps-secret-police-are-now-disappearing-students-for-their-op-eds/">https://www.techdirt.com/2025/03/27/trumps-secret-police-are-now-disappearing-students-for-their-op-eds/</a>, See on <a href="https://news.ycombinator.com/item?id=43519864">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storywrap-487790">

				


				


				<h3>from the <i>found-the-campus-free-speech-crisis</i> dept</h3>
				


				<p>For years, we‚Äôve been hearing breathless warnings about a ‚Äúcampus free speech crisis‚Äù from self-proclaimed free speech warriors. Their evidence? College students doing what college students have done for generations: protesting speakers they disagree with, challenging institutional policies, and yes, sometimes attempting to create heckler‚Äôs vetoes.</p>
<p>This kind of campus activism ‚Äî while occasionally messy and uncomfortable ‚Äî has been a feature of American higher education since the 1960s. It‚Äôs how young people learn to engage with ideas and exercise their own speech rights. Sometimes that activism is silly and sometimes it‚Äôs righteous. Often it‚Äôs somewhere in between, but it‚Äôs kind of a part of being a college student, and learning what you believe in.</p>
<p>But now we face an <em>actual</em> free speech crisis on campus that goes beyond just speech. It‚Äôs an attack on personal freedoms, due process, and liberty. The federal government isn‚Äôt just pressuring universities over speech ‚Äî it‚Äôs <strong>literally disappearing students for their political expression</strong>. If you support actual free speech, now is the time to speak up.</p>
<p>The latest example of this authoritarian overreach is particularly chilling: Rumeysa Ozturk, a Turkish PhD student at Tufts who was here legally on a student visa, <a href="https://www.wgbh.org/news/local/2025-03-26/tufts-international-graduate-student-taken-into-ice-custody">was abducted by masked agents</a> in broad daylight. She was disappeared without due process or explanation ‚Äî only later did we learn she had been renditioned to a detention center in Louisiana.</p>
<p>The video of her kidnapping (because that‚Äôs what it was) is terrifying enough:</p>
<p><iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/YGDVKBdq3Gw?si=GwMrd-S7oC94zfDS" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p>
<p>If you listen, you hear her quite understandably surprised reaction with a scream, and then she asks to call the police, only to be told ‚Äúwe‚Äôre the police.‚Äù None of them are in uniforms. Most of them are masked.</p>
<p>Her supposed crime? A year ago, she co-authored an op-ed in The Tufts Daily <a href="https://www.tuftsdaily.com/article/2024/03/4ftk27sm6jkj">criticizing her university administration‚Äôs stance</a> on the Israel-Palestine conflict. Not advocating violence. Not supporting terrorism. Not even criticizing the U.S. government. Just exercising core First Amendment rights by publishing criticism of her own university‚Äôs policies in a student newspaper.</p>
<p>The government has attempted to justify similar renditions (and there is a growing list of victims) by falsely painting targets as ‚Äúterrorist supporters‚Äù ‚Äî a dangerous conflation of political speech supporting Palestinian rights with support for terrorism. But even those cases typically involved people involved in public protests, which are themselves constitutionally protected activities. This case goes even further: disappearing someone over an innocuous piece of student journalism published a year ago.</p>
<p>Everyone should be alarmed. <em>Everyone</em> should be demanding that she (and others) be released and that ICE and DHS stop this horrifying and unconscionable practice. <em>Everyone</em> should be demanding that Trump and Marco Rubio and Kristi Noem stop this Gestapo bullshit.</p>
<p>Even if ‚Äî <em>especially</em> if ‚Äî you disagree with her views on Israel and Palestine. This isn‚Äôt about that. This is about the very concept of freedom. The rights everyone ‚Äî even visitors ‚Äî are supposed to have in this country. The right to speak your mind, even if (especially if!) it is opposed to those in power. The right to walk down a street without being kidnapped. The right to due process.</p>
<p>If the government genuinely believed Ozturk had violated immigration law or her visa terms (she hadn‚Äôt), there are established legal procedures to address such issues. Instead, they chose to send masked goons to disappear her without warning or due process ‚Äî a chilling message to every other international student that their supposed right to express political opinions comes with the risk of rendition.</p>
<p>And, of course, the implied threat is that this won‚Äôt stop at international students.</p>
<p>But the Trump administration believes not in fundamental rights. It only believes in the cowardly authoritarian displays of theatrical power. Because they are weak and insecure. They are so frightened by a random college student op-ed or a protest, they are taking to disappearing people with no due process for their speech.</p>
<p>This won‚Äôt stop unless everyone speaks up and demands that the government respect the rights of everyone. These are bullying and intimidation tactics of weak insecure bullies, who know they cannot win in the marketplace of ideas. They are scared and pathetic, knowing that their beliefs are bad, and that the public doesn‚Äôt support them. Thus, their only response is an impotent rage, an attempt to replace respect and fair treatment with authoritarian tactics in hopes of intimidating people into silence and capitulation.</p>
<p>These are scary times, but people need to stop cowering. They need to speak up. They need to show up. They need to say that this is not the America any of us were taught to believe in. This is not the America of freedom and rights.</p>
<p>This is a desecration of the high (and often unmet) ideals of what America is supposed to be striving for. This is spitting on the fundamental concepts of the American project.</p>
<p>And where are all those self-proclaimed defenders of campus free speech now? The same voices who treated student protesters as an existential threat to academic freedom are conspicuously silent as government agents literally kidnap students for their political expression. Their silence exposes their previous concerns as purely performative.</p>
<p>This isn‚Äôt just about free speech anymore ‚Äî it‚Äôs about whether we‚Äôll allow the government to normalize disappearing people for their political views. Everyone who claims to care about constitutional rights and academic freedom needs to speak up now. Because those who remain silent in the face of such clear authoritarian overreach are complicit.</p>

				
<p>

	Filed Under: <a href="https://www.techdirt.com/tag/1st-amendment/" rel="tag">1st amendment</a>, <a href="https://www.techdirt.com/tag/campus-speech/" rel="tag">campus speech</a>, <a href="https://www.techdirt.com/tag/dhs/" rel="tag">dhs</a>, <a href="https://www.techdirt.com/tag/donald-trump/" rel="tag">donald trump</a>, <a href="https://www.techdirt.com/tag/free-speech/" rel="tag">free speech</a>, <a href="https://www.techdirt.com/tag/ice/" rel="tag">ice</a>, <a href="https://www.techdirt.com/tag/kidnapping/" rel="tag">kidnapping</a>, <a href="https://www.techdirt.com/tag/kristi-noem/" rel="tag">kristi noem</a>, <a href="https://www.techdirt.com/tag/marco-rubio/" rel="tag">marco rubio</a>, <a href="https://www.techdirt.com/tag/op-ed/" rel="tag">op-ed</a>, <a href="https://www.techdirt.com/tag/rendition/" rel="tag">rendition</a>, <a href="https://www.techdirt.com/tag/rumeysa-ozturk/" rel="tag">rumeysa ozturk</a>
	<br>

	
</p>

			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Towards fearless SIMD, 7 years later (170 pts)]]></title>
            <link>https://linebender.org/blog/towards-fearless-simd/</link>
            <guid>43519823</guid>
            <pubDate>Sat, 29 Mar 2025 23:52:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://linebender.org/blog/towards-fearless-simd/">https://linebender.org/blog/towards-fearless-simd/</a>, See on <a href="https://news.ycombinator.com/item?id=43519823">Hacker News</a></p>
<div id="readability-page-1" class="page"><div aria-label="Content">
                

<h3>Raph Levien, March 29, 2025</h3>
<p>Seven years ago I wrote a blog post <a href="https://raphlinus.github.io/rust/simd/2018/10/19/fearless-simd.html">Towards fearless SIMD</a>, outlining a vision for Rust as a compelling language for writing fast SIMD programs.
Where are we now?</p>
<p>Unfortunately, the present-day experience of writing SIMD in Rust is still pretty rough, though there has been progress, and there are promising efforts underway.
As in the previous post, this post will outline a possible vision.</p>
<p>Up to now, Linebender projects have not used SIMD, but that is changing.
As we work on CPU/GPU hybrid rendering techniques, it's clear that we need SIMD to get maximal performance of the CPU side.
We also see opportunities in faster color conversion and accelerated 2D geometry primitives.</p>
<p>This blog post is also a companion to a <a href="https://www.youtube.com/watch?v=y0WcCUKxk50">podcast</a> I recorded recently with Andr√© Popovitch.
That podcast is a good introduction to SIMD concepts, while this blog post focuses more on future directions.</p>
<h2 id="a-simple-example">A simple example</h2>
<p>As a running example, we'll compute a <a href="https://raphlinus.github.io/audio/2018/09/05/sigmoid.html">sigmoid</a> function for a vector of 4 values.
The scalar version is as follows:</p>
<pre data-lang="rust"><code data-lang="rust"><span>fn </span><span>sigmoid</span><span>(</span><span>x</span><span>: [</span><span>f32</span><span>; 4]) -&gt; [</span><span>f32</span><span>; </span><span>4</span><span>] {
</span><span>    x.</span><span>map</span><span>(|</span><span>y</span><span>| y / (</span><span>1.0 </span><span>+ y * y).</span><span>sqrt</span><span>())
</span><span>}
</span></code></pre>
<p>This particular simple code autovectorizes nicely (<a href="https://rust.godbolt.org/z/TfThE5r33">Godbolt link</a>), but more complex examples often fail to autovectorize, often because of subtle differences in floating point semantics.
(Editorial note: a previous version of this post didn't autovectorize (<a href="https://rust.godbolt.org/z/GoTEK3KT3">Godbolt</a>) because optimization level was set at <code>-O</code>, which is less aggressive than <code>-C opt-level=3</code>, the latter of which is the default for release builds)</p>
<h2 id="safety">Safety</h2>
<p>One of the biggest problems with writing SIMD in Rust is that all exposed SIMD intrinsics are marked as <code>unsafe</code>, even in cases where they can be used safely.
The reason is that support for SIMD features varies widely, and executing a SIMD instruction on a CPU that does not support it is undefined behavior ‚Äì the chip can crash, ignore the instruction, or do something unexpected.
To be used safely, there must be some other mechanism to establish that the CPU does support the feature.</p>
<p>Here's the running example in hand-written intrinsic code, showing the need to write <code>unsafe</code> to access SIMD intrinsics at all:</p>
<pre data-lang="rust"><code data-lang="rust"><span>#[</span><span>cfg</span><span>(target_arch = "</span><span>aarch64</span><span>")]
</span><span>fn </span><span>sigmoid_neon</span><span>(</span><span>x</span><span>: [</span><span>f32</span><span>; 4]) -&gt; [</span><span>f32</span><span>; </span><span>4</span><span>] {
</span><span>    </span><span>use </span><span>core::arch::aarch64::*;
</span><span>    </span><span>unsafe </span><span>{
</span><span>        </span><span>let</span><span> x_simd = core::mem::transmute(x);
</span><span>        </span><span>let</span><span> x_squared = </span><span>vmulq_f32</span><span>(x_simd, x_simd);
</span><span>        </span><span>let</span><span> ones = </span><span>vdupq_n_f32</span><span>(</span><span>1.0</span><span>);
</span><span>        </span><span>let</span><span> sum = </span><span>vaddq_f32</span><span>(ones, x_squared);
</span><span>        </span><span>let</span><span> sqrt = </span><span>vsqrtq_f32</span><span>(sum);
</span><span>        </span><span>let</span><span> ratio = </span><span>vdivq_f32</span><span>(x_simd, sqrt);
</span><span>        core::mem::transmute(ratio)
</span><span>    }
</span><span>}
</span><span>
</span><span>#[</span><span>cfg</span><span>(target_arch = "</span><span>x86_64</span><span>")]
</span><span>fn </span><span>sigmoid_sse2</span><span>(</span><span>x</span><span>: [</span><span>f32</span><span>; 4]) -&gt; [</span><span>f32</span><span>; </span><span>4</span><span>] {
</span><span>    </span><span>use </span><span>core::arch::x86_64::*;
</span><span>    </span><span>unsafe </span><span>{
</span><span>        </span><span>let</span><span> x_simd = core::mem::transmute(x);
</span><span>        </span><span>let</span><span> x_squared = </span><span>_mm_mul_ps</span><span>(x_simd, x_simd);
</span><span>        </span><span>let</span><span> ones = </span><span>_mm_set1_ps</span><span>(</span><span>1.0</span><span>);
</span><span>        </span><span>let</span><span> sum = </span><span>_mm_add_ps</span><span>(ones, x_squared);
</span><span>        </span><span>let</span><span> sqrt = </span><span>_mm_sqrt_ps</span><span>(sum);
</span><span>        </span><span>let</span><span> ratio = </span><span>_mm_div_ps</span><span>(x_simd, sqrt);
</span><span>        core::mem::transmute(ratio)
</span><span>    }
</span><span>}
</span></code></pre>
<p>This is quite a simplified example.
For one, the SIMD width is fixed at 4 lanes (128 bits).
Most likely, in practice you'd iterate over a larger slice, taking chunks equal to the natural SIMD width.</p>
<h2 id="multiversioning">Multiversioning</h2>
<p>A central problem important for SIMD is multiversioning and runtime dispatch.
In some cases, you know the exact CPU target, for example when compiling a binary you'll run only on your machine (in which case <code>target-cpu=native</code> is appropriate).
But when distributing software more widely, there may be a range of capabilities.
For highest performance, it's necessary to compile multiple versions of the code, and do runtime detection to dispatch to the best SIMD code the hardware can run.
This problem was expressed in the original fearless SIMD blog post, and there hasn't been significant advance at the Rust language level since then.</p>
<p>In the C++ world, the <a href="https://github.com/google/highway">Highway</a> library provides excellent SIMD support for a very wide range of targets, and also solves the multiversioning problem.
Among other uses are the codecs for the JPEG-XL image format.
Such codecs are an ideal use case for SIMD programming in general, and shipping them in a browser requires a good solution to multiversioning.
Highway has a really good explanation of <a href="https://github.com/kfjahnke/zimt/blob/multi_isa/examples/multi_isa_example/multi_simd_isa.md">their approach to multiversioning</a>.
It will be useful to study it carefully to see how they've solved various problems.
And a concise way of saying what I'd like to see is "Highway for Rust."</p>
<p>One possible approach is a crate called <a href="https://docs.rs/multiversion/latest/multiversion/">multiversion</a>, which uses macros to replicate the code for multiple versions.
A more recent macro-based approach is <a href="https://github.com/a4lg/rust-target-feature-dispatch">rust-target-feature-dispatch</a>.
It is generally a similar approach to multiversion, and the specific differences are set out in that crate's <a href="https://github.com/a4lg/rust-target-feature-dispatch/blob/main/src/README.md">README</a>.</p>
<p>Another approach, as I believe first advocated in my 2018 blog post, is to write functions polymorphic on a zero-sized type representing the SIMD capabilities, then rely on monomorphization to create the various versions.
One motivation for this approach is to encode safety in Rust's type system.
Having the zero-sized token is proof of the underlying CPU having a certain level of SIMD capability, so calling those intrinsics is safe.
A major library that uses this approach is <a href="https://docs.rs/pulp/latest/pulp/">pulp</a>, which also powers the <a href="https://docs.rs/faer/latest/faer/">faer</a> linear algebra library.</p>
<p>I started putting together a pulp version of the running example, but ran into the immediate problem that it lacks a <code>sqrt</code> intrinsic (this would be easy enough to add, however).
It also works a bit differently, in that it only supports vectors of the natural width, not ones of a fixed width.
For general linear algebra, that's fine, but for some other applications it adds friction, for example colors with alpha are naturally chunks of 4 scalars.
To see an example of pulp code, as well as some discussion, see this <a href="https://xi.zulipchat.com/#narrow/channel/255911-rust/topic/Rust.20SIMD.20thoughts/near/489370476">Zulip thread</a>.</p>
<p>In <a href="https://github.com/raphlinus/fearless_simd/pull/2">fearless_simd#2</a> I propose a prototype of reasonably-ergonomic SIMD multiversioning.
Like the original fearless_simd prototype, vector data types are polymorphic on SIMD level.
The new prototype goes beyond that in several important ways.
For one, arithmetic traits in std::ops are implemented for vector types, so it's possible to add two vectors together, multiply vectors by scalars, etc.</p>
<p>Here's what the running example looks like in that prototype:</p>
<pre data-lang="rust"><code data-lang="rust"><span>#[</span><span>inline</span><span>(always)]
</span><span>fn </span><span>sigmoid_impl</span><span>&lt;S: Simd&gt;(</span><span>simd</span><span>: S, </span><span>x</span><span>: [</span><span>f32</span><span>; 4]) -&gt; [</span><span>f32</span><span>; </span><span>4</span><span>] {
</span><span>    </span><span>let</span><span> x_simd: f32x4&lt;S&gt; = x.</span><span>simd_into</span><span>(simd);
</span><span>    (x_simd / (</span><span>1.0 </span><span>+ x_simd * x_simd).</span><span>sqrt</span><span>()).</span><span>into</span><span>()
</span><span>}
</span><span>
</span><span>simd_dispatch!(</span><span>sigmoid</span><span>(level, rgba: [</span><span>f32</span><span>; </span><span>4</span><span>]) -&gt; [</span><span>f32</span><span>; </span><span>4</span><span>] = sigmoid_impl);
</span></code></pre>
<p>An advantage of the fearless_simd#2 prototype over pulp is a feature for downcasting based on SIMD level, so it's possible to write different code optimized for different chips.
See the <a href="https://github.com/raphlinus/fearless_simd/pull/2/files#diff-be8aece917a9235076ff8ec42749b1f1a803d2a3cbc2ccdd5425b405c74f7436">srgb example</a> in that pull request for more detail.
Though there are clear advantages, at this point I'm not sure whether this is the direction to go.
It would be a lot of work to build out all the needed types and operations, with potentially a large amount of repetitive boilerplate code in the library, which in turn may cause issues with compile time.
Another possible direction is a smarter, compiler-like proc macro which synthesizes the SIMD intrinsics as needed based on the types and operations in the source program.</p>
<p>One additional consideration for Rust is that the implementation of runtime feature detection is <a href="https://internals.rust-lang.org/t/better-codegen-for-cpu-feature-detection/22083">slower than it should be</a>.
Thus, feature detection and dispatch shouldn't be done at every function call.
A good working solution is to do feature detection once, at the start of the program, then pass that token down through function calls.
It's workable but definitely an ergonomic paper cut.</p>
<h2 id="fp16-and-avx-512">FP16 and AVX-512</h2>
<p>A general trend in parallel computation, really fueled by AI workloads, is smaller scalars with higher throughputs.
While not yet common on x86_64, the FP16 extension is supported on all Apple Silicon desktop CPUs and most recent high-ish end ARM-based phones.
Since Neon is only 128 bits wide, having 8 lanes is welcome.
I find the f16 format to be especially useful for pixel values, as it can encode color values with more than enough precision to avoid visual artifacts (8 bits is not quite enough, though it is good enough for some applications, as long as you're not trying to do HDR).</p>
<p>Native Rust support for the <code>f16</code> type has not yet landed (tracked in <a href="https://github.com/rust-lang/rust/issues/125440">rust#125440</a>), which makes use of this scalar size harder.
However, there is some support in the <a href="https://docs.rs/half/latest/half/">half</a> library, and also the <a href="https://github.com/raphlinus/fearless_simd/pull/2">fearless_simd#2</a> prototype exports a number of FP16 Neon instructions through inline assembly.
When true f16 support lands, it will be possible to switch over to intrinsics, which will have better optimization and ergonomics (for example, the same method will splat constants converted to <code>f16</code> at compile time and <code>f32</code> variables to be converted at runtime).</p>
<p>AVX-512 is a somewhat controversial SIMD capability.
It first appeared in the ill-fated Larrabee project, which shipped in limited numbers as the Xeon Phi starting in 2010, and has since appeared in scattered Intel CPUs, but with compromises.
In particular, sprinkling even a small amount of AVX-512 code into a program could result in downclocking, reducing performance for all workloads (see <a href="https://stackoverflow.com/questions/56852812/simd-instructions-lowering-cpu-frequency#comment100256395_56852812">Stack Overflow thread on throttling</a> for more details).
These days, the most likely way to get a CPU with AVX-512 is an AMD Zen 4 or Zen 5; it is on their strength that AVX-512 makes up about 16% of computers in the Steam hardware survey.</p>
<p>The increased width is not the main reason to be enthusiastic about AVX-512.
Indeed, on Zen 4 and most Zen 5 chips, the datapath is 256 bits so full 512 bit instructions are "double pumped." The most exciting aspect is predication based on masks, a common implementation technique on GPUs.
In particular, memory load and store operations are safe when the mask bit is zero, which is especially helpful for using SIMD efficiently on strings.
Without predication, a common technique is to write two loops, the first handling only even multiples of the SIMD width, and a second, usually written as scalars, to handle the odd-size "tail".
There are lots of problems with this - code bloat, worse branch prediction, inability to exploit SIMD for chunks slightly less than the natural SIMD width (which gets worse as SIMD grows wider), and risks that the two loops don't have exactly the same behavior.</p>
<p>Going forward, Intel has proposed AVX10, and will hopefully ship AVX 10.2 chips in the next few years.
This extension has pretty much all of the features of AVX-512, with some cleanups and new features (until recently, AVX10 was defined has having a 256 bit base width and optionally 512, but 512 is now the baseline).
In addition, AVX10.2 will include 16-bit floats (currently available only in the Sapphire Rapids high-end server and workstation chips).</p>
<h2 id="about-std-simd">About std::simd</h2>
<p>The "portable SIMD" work has been going on for many years and currently has a home as the nightly <a href="https://doc.rust-lang.org/std/simd/index.html">std::simd</a>.
While I think it will be very useful in many applications, I am not personally very excited about it for my applications.
For one, because it emphasizes portability, it encourages a "lowest common denominator" approach, while I believe that for certain use cases it will be important to tune algorithms to best use the specific quirks of the different SIMD implementations.
For two, std::simd does not itself solve the multiversion problem.
From my perspective, it's probably best to consider it as a souped-up version of autovectorization.</p>
<h2 id="language-evolution">Language evolution</h2>
<p>Rust's out of the box support for SIMD is still quite rough, especially the need to use <code>unsafe</code> extensively.
While some of the gap can be filled with libraries, arguably it should be a goal of the language itself to support safe SIMD code.
There is progress in this direction.</p>
<p>First, the original version of <code>target_feature</code> requires <code>unsafe</code> to call into <em>any</em> function annotated with <code>#[target_feature]</code>.
A proposal to relax that so that functions already under a target_feature gate can call safely call into another function with the same gate is called "<a href="https://rust-lang.github.io/rfcs/2396-target-feature-1.1.html">target_feature 1.1</a>" and is scheduled to ship in 1.86.
Closely related, once inside the suitable target_feature gate, the majority of SIMD intrinsics (broadly, those that don't do memory access through pointers) should be considered safe by the compiler, and that feature (safe intrinsics in core::arch) is also in flight.</p>
<p>There's more that can be done to help the Rust compiler recognize when SIMD use is safe, in particular to allow target_features when a concrete witness to the SIMD level is passed in as a function argument.
The "struct target_features" proposal (<a href="https://github.com/rust-lang/rfcs/pull/3525">RFC 3525</a>) enables target_feature in such cases, and is one of the proposals considered in the proposed Rust project goal <a href="https://rust-lang.github.io/rust-project-goals/2025h1/simd-multiversioning.html">Nightly support for ergonomic SIMD multiversioning</a>.</p>
<p>In general, improving Rust SIMD support will require both libraries and support in the Rust language.
Different approaches at the library level may indicate different language features to best support them.</p>
<h2 id="looking-forward">Looking forward</h2>
<p>My main goal in putting these prototypes forward, as well as writing these blog posts, is to spark conversation on how best to support SIMD programming in Rust.
If done well, it is a great opportunity for the language, and fits in with its focus on performance and portability.</p>
<p>As we build out the <a href="https://xi.zulipchat.com/#narrow/channel/197075-vello/topic/Potato.20-.20a.20paper.20design.20for.20a.20CPU.2FGPU.20hybrid.20renderer">Vello hybrid CPU/GPU renderer</a>, performance of the CPU components will rely heavily on SIMD, so we need to invest in writing a lot of SIMD code.
The most conservative approach would be hand-writing unsafe intrinsics-based code for all targets, but that's a lot of work and the use of unsafe is unappealing.
I'd love for the Rust ecosystem can come together and build good infrastructure, competitive with Highway.
For now, I think it's time to carefully consider the design space and try to come to consensus on what that should look like.</p>
<!-- TODO: not sure if this is the best link, we don't really have a project page for this -->


            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Self-contained Python scripts with uv (282 pts)]]></title>
            <link>http://blog.dusktreader.dev/2025/03/29/self-contained-python-scripts-with-uv/</link>
            <guid>43519669</guid>
            <pubDate>Sat, 29 Mar 2025 23:22:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://blog.dusktreader.dev/2025/03/29/self-contained-python-scripts-with-uv/">http://blog.dusktreader.dev/2025/03/29/self-contained-python-scripts-with-uv/</a>, See on <a href="https://news.ycombinator.com/item?id=43519669">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-md-component="container">
      
      
        
          
        
      
      <main data-md-component="main">
        <div data-md-component="content">
    
    <article>
      
        
  


  <nav>
    
      
      
      
        <span>Python</span>
      
    
      
      
      
        <span>uv</span>
      
    
  </nav>


  
  



<div>
<p>TLDR</p>
<p>You can add uv into the shebang line for a Python script to make it a self-contained executable.</p>
</div>
<p>I am working on a Go project to better learn the language. It's a simple API backed by a postgres database.</p>
<p>When I need to test out an endpoint, I prefer to use the <a href="https://www.python-httpx.org/">httpx</a> python package inside an
<a href="https://ipython.org/">ipython</a> REPL over making curl requests. It's nice to be able to introspect responses and easily
package payloads with dicts instead of writing out JSON.</p>
<p>Anyway, I decided to write a script to upsert some user data so that I can beat on my <code>/users</code> endpoint.</p>
<!-- more -->

<p>My <code>jam_users.py</code> script looks like this:</p>
<div><pre><span></span><code><span id="__span-0-1"><a id="__codelineno-0-1" name="__codelineno-0-1" href="#__codelineno-0-1"></a><span>import</span><span> </span><span>httpx</span>
</span><span id="__span-0-2"><a id="__codelineno-0-2" name="__codelineno-0-2" href="#__codelineno-0-2"></a><span>import</span><span> </span><span>IPython</span>
</span><span id="__span-0-3"><a id="__codelineno-0-3" name="__codelineno-0-3" href="#__codelineno-0-3"></a><span>from</span><span> </span><span>loguru</span><span> </span><span>import</span> <span>logger</span>
</span><span id="__span-0-4"><a id="__codelineno-0-4" name="__codelineno-0-4" href="#__codelineno-0-4"></a>
</span><span id="__span-0-5"><a id="__codelineno-0-5" name="__codelineno-0-5" href="#__codelineno-0-5"></a><span>users</span> <span>=</span> <span>[</span>
</span><span id="__span-0-6"><a id="__codelineno-0-6" name="__codelineno-0-6" href="#__codelineno-0-6"></a>    <span>dict</span><span>(</span><span>name</span><span>=</span><span>"The Dude"</span><span>,</span> <span>email</span><span>=</span><span>"the.dude@abides.com"</span><span>,</span> <span>password</span><span>=</span><span>"thedudeabides"</span><span>),</span>
</span><span id="__span-0-7"><a id="__codelineno-0-7" name="__codelineno-0-7" href="#__codelineno-0-7"></a>    <span>dict</span><span>(</span><span>name</span><span>=</span><span>"Walter Sobchak"</span><span>,</span> <span>email</span><span>=</span><span>"walter@sobchak-security.com"</span><span>,</span> <span>password</span><span>=</span><span>"vietnamvet"</span><span>),</span>
</span><span id="__span-0-8"><a id="__codelineno-0-8" name="__codelineno-0-8" href="#__codelineno-0-8"></a>    <span>dict</span><span>(</span><span>name</span><span>=</span><span>"Donnie"</span><span>,</span> <span>email</span><span>=</span><span>"donniesurfs@yahoo.com"</span><span>,</span> <span>password</span><span>=</span><span>"iamthewalrus"</span><span>),</span>
</span><span id="__span-0-9"><a id="__codelineno-0-9" name="__codelineno-0-9" href="#__codelineno-0-9"></a>    <span>dict</span><span>(</span><span>name</span><span>=</span><span>"Maude"</span><span>,</span> <span>email</span><span>=</span><span>"mauddie@avant-guard.com"</span><span>,</span> <span>password</span><span>=</span><span>"goodmanandthorough"</span><span>),</span>
</span><span id="__span-0-10"><a id="__codelineno-0-10" name="__codelineno-0-10" href="#__codelineno-0-10"></a><span>]</span>
</span><span id="__span-0-11"><a id="__codelineno-0-11" name="__codelineno-0-11" href="#__codelineno-0-11"></a>
</span><span id="__span-0-12"><a id="__codelineno-0-12" name="__codelineno-0-12" href="#__codelineno-0-12"></a><span>r</span> <span>=</span> <span>httpx</span><span>.</span><span>get</span><span>(</span><span>"http://localhost:4000/v1/users"</span><span>)</span>
</span><span id="__span-0-13"><a id="__codelineno-0-13" name="__codelineno-0-13" href="#__codelineno-0-13"></a><span>r</span><span>.</span><span>raise_for_status</span><span>()</span>
</span><span id="__span-0-14"><a id="__codelineno-0-14" name="__codelineno-0-14" href="#__codelineno-0-14"></a>
</span><span id="__span-0-15"><a id="__codelineno-0-15" name="__codelineno-0-15" href="#__codelineno-0-15"></a><span>for</span> <span>user</span> <span>in</span> <span>r</span><span>.</span><span>json</span><span>()[</span><span>"users"</span><span>]:</span>
</span><span id="__span-0-16"><a id="__codelineno-0-16" name="__codelineno-0-16" href="#__codelineno-0-16"></a>    <span>logger</span><span>.</span><span>info</span><span>(</span><span>f</span><span>"Deleting: </span><span>{</span><span>user</span><span>[</span><span>'name'</span><span>]</span><span>}</span><span>"</span><span>)</span>
</span><span id="__span-0-17"><a id="__codelineno-0-17" name="__codelineno-0-17" href="#__codelineno-0-17"></a>    <span>r</span> <span>=</span> <span>httpx</span><span>.</span><span>delete</span><span>(</span><span>f</span><span>"http://localhost:4000/v1/users/</span><span>{</span><span>user</span><span>[</span><span>'id'</span><span>]</span><span>}</span><span>"</span><span>)</span>
</span><span id="__span-0-18"><a id="__codelineno-0-18" name="__codelineno-0-18" href="#__codelineno-0-18"></a>    <span>r</span><span>.</span><span>raise_for_status</span><span>()</span>
</span><span id="__span-0-19"><a id="__codelineno-0-19" name="__codelineno-0-19" href="#__codelineno-0-19"></a>
</span><span id="__span-0-20"><a id="__codelineno-0-20" name="__codelineno-0-20" href="#__codelineno-0-20"></a><span>for</span> <span>user</span> <span>in</span> <span>users</span><span>:</span>
</span><span id="__span-0-21"><a id="__codelineno-0-21" name="__codelineno-0-21" href="#__codelineno-0-21"></a>    <span>r</span> <span>=</span> <span>httpx</span><span>.</span><span>post</span><span>(</span><span>"http://localhost:4000/v1/users"</span><span>,</span> <span>json</span><span>=</span><span>user</span><span>)</span>
</span><span id="__span-0-22"><a id="__codelineno-0-22" name="__codelineno-0-22" href="#__codelineno-0-22"></a>    <span>r</span><span>.</span><span>raise_for_status</span><span>()</span>
</span><span id="__span-0-23"><a id="__codelineno-0-23" name="__codelineno-0-23" href="#__codelineno-0-23"></a>    <span>logger</span><span>.</span><span>info</span><span>(</span><span>f</span><span>"Created: </span><span>{</span><span>r</span><span>.</span><span>json</span><span>()</span><span>}</span><span>"</span><span>)</span>
</span><span id="__span-0-24"><a id="__codelineno-0-24" name="__codelineno-0-24" href="#__codelineno-0-24"></a>
</span><span id="__span-0-25"><a id="__codelineno-0-25" name="__codelineno-0-25" href="#__codelineno-0-25"></a><span>IPython</span><span>.</span><span>embed</span><span>()</span>
</span></code></pre></div>
<p>This is really straight-forward. It will clear out any existing users and then insert these test users. Right after
that, I get dropped into an <code>ipython</code> repl to do what I need for testing. All I have to do is run:</p>

<p>However, if I want to run the script as-is, I will need to choose one of these approaches:</p>
<ul>
<li>Install the dependencies <code>httpx</code>, <code>IPython</code>, and <code>loguru</code> globally in my system python</li>
<li>Create a virtual environment, activate it, install deps, and run my script while the venv is activated</li>
</ul>
<p>These are both not great options in my opinion. These approaches also rely on having a system python installed that is
compatible with these packages. This isn't as big of a problem, but something to consider anyway.</p>
<p>I've been using <a href="https://github.com/astral-sh/uv">uv</a> a lot lately, and I'm becoming quite enamoured with its usefulness
as a package manager, efficiency as a pip replacement, and abilities for isolated python executables. One thing that I
haven't used much yet are the special <code># /// script</code> tags in a python script.</p>
<p>When I first read about this functionality, I was pretty skeptical. I'm not particularly keen on embedding syntax into
comments. However, this seemed like the perfect application. So, updated my script to include the deps in the script
header like so:</p>
<div><pre><span></span><code><span id="__span-2-1"><a id="__codelineno-2-1" name="__codelineno-2-1" href="#__codelineno-2-1"></a><span># /// script</span>
</span><span id="__span-2-2"><a id="__codelineno-2-2" name="__codelineno-2-2" href="#__codelineno-2-2"></a><span># dependencies = ["ipython", "httpx", "loguru"]</span>
</span><span id="__span-2-3"><a id="__codelineno-2-3" name="__codelineno-2-3" href="#__codelineno-2-3"></a><span># ///</span>
</span><span id="__span-2-4"><a id="__codelineno-2-4" name="__codelineno-2-4" href="#__codelineno-2-4"></a><span>import</span><span> </span><span>httpx</span>
</span><span id="__span-2-5"><a id="__codelineno-2-5" name="__codelineno-2-5" href="#__codelineno-2-5"></a><span>import</span><span> </span><span>IPython</span>
</span><span id="__span-2-6"><a id="__codelineno-2-6" name="__codelineno-2-6" href="#__codelineno-2-6"></a><span>from</span><span> </span><span>loguru</span><span> </span><span>import</span> <span>logger</span>
</span><span id="__span-2-7"><a id="__codelineno-2-7" name="__codelineno-2-7" href="#__codelineno-2-7"></a>
</span><span id="__span-2-8"><a id="__codelineno-2-8" name="__codelineno-2-8" href="#__codelineno-2-8"></a><span>...</span>
</span></code></pre></div>
<p>With this added, now I can run the script really easily with <code>uv</code>:</p>

<p>Great! Now, <code>uv</code> will create an isolated virtual environment for the script, download the dependencies and install them,
and then run my script in the context of that venv! I don't have to manage the virtual environment myself nor worry
about cluttering my system python with packages that I will invariably forget to remove later.</p>
<p>One nice thing about a regular Python script, though, is that you can make it executable with a shebang line:</p>
<div><pre><span></span><code><span id="__span-4-1"><a id="__codelineno-4-1" name="__codelineno-4-1" href="#__codelineno-4-1"></a><span>#!/usr/bin/env python</span>
</span><span id="__span-4-2"><a id="__codelineno-4-2" name="__codelineno-4-2" href="#__codelineno-4-2"></a><span>...</span>
</span></code></pre></div>
<p>Now, if I make the script executable (<code>chmod +x jam_users.py</code>), I can invoke it directly as an executable script!
However, this won't take advantage of the <code>uv</code> script header because Python itself will just ignore the comment.</p>
<p>So, I did some digging and found out that you can actually embed the invocation of the uv command right in the shebang
line like so:</p>
<div><pre><span></span><code><span id="__span-5-1"><a id="__codelineno-5-1" name="__codelineno-5-1" href="#__codelineno-5-1"></a><span>#!/usr/bin/env -S uv run --script</span>
</span><span id="__span-5-2"><a id="__codelineno-5-2" name="__codelineno-5-2" href="#__codelineno-5-2"></a><span># /// script</span>
</span><span id="__span-5-3"><a id="__codelineno-5-3" name="__codelineno-5-3" href="#__codelineno-5-3"></a><span># dependencies = ["ipython", "httpx", "loguru"]</span>
</span><span id="__span-5-4"><a id="__codelineno-5-4" name="__codelineno-5-4" href="#__codelineno-5-4"></a><span># ///</span>
</span><span id="__span-5-5"><a id="__codelineno-5-5" name="__codelineno-5-5" href="#__codelineno-5-5"></a><span>import</span><span> </span><span>httpx</span>
</span><span id="__span-5-6"><a id="__codelineno-5-6" name="__codelineno-5-6" href="#__codelineno-5-6"></a><span>import</span><span> </span><span>IPython</span>
</span><span id="__span-5-7"><a id="__codelineno-5-7" name="__codelineno-5-7" href="#__codelineno-5-7"></a><span>from</span><span> </span><span>loguru</span><span> </span><span>import</span> <span>logger</span>
</span><span id="__span-5-8"><a id="__codelineno-5-8" name="__codelineno-5-8" href="#__codelineno-5-8"></a>
</span><span id="__span-5-9"><a id="__codelineno-5-9" name="__codelineno-5-9" href="#__codelineno-5-9"></a><span>...</span>
</span></code></pre></div>
<p>This works because the <code>-S</code> flag tells the system to split everything after it into separate arguments before passing it
to the system's <code>env</code>.</p>
<p>Now (after <code>chmod +x jam_users.py</code>, of course), I can execute my script directly:</p>

<p>That's it! What's even better is that I can run this script on any (Unix) system that has <code>uv</code> installed without needing
to do ANY dependency or virtual environment management.</p>
<p>Now, this script itself is really trivial and not much more than a toy example. However, in my past I have written
rather complex scripts that I needed to hand off to other users to run. Of course, this always came with a long
explanation of how to <em>prepare</em> their system just to run the script. This approach solves that problem instantly and
painlessly (as long as they have <code>uv</code> installed).</p>
<p>Take it for a spin, and let me know your thoughts.</p>
<p>Thanks for reading!</p>







  
  




  



  

  

  

      
    </article>
  </div>
        
      </main>
      
        
      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Convert Linux to Windows (319 pts)]]></title>
            <link>https://philipbohun.com/blog/0007.html</link>
            <guid>43518917</guid>
            <pubDate>Sat, 29 Mar 2025 21:34:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://philipbohun.com/blog/0007.html">https://philipbohun.com/blog/0007.html</a>, See on <a href="https://news.ycombinator.com/item?id=43518917">Hacker News</a></p>
<div id="readability-page-1" class="page">

	

	<span>
	
	</span>

        <hr>
        <a href="https://philipbohun.com/blog/index.html">blog</a>
        <a id="style-toggle" href="#" onclick="toggleLightmode()">dark mode</a>
        <hr>

        <h2>Convert Linux to Windows</h2>
        <span>2025-03-29</span>
		<p>
		Thesis: We should create a distro of Linux that runs Windows binaries by default via Wine.
		</p>
		<h3>The Linux Environment is Unstable</h3>
		<p>
		I can pull down a 20 year old exe and still run it today on Windows.
		Try doing the same with a Linux binary that's just a year old.
		There's no guarantee that it will be able to run based off some update that has happened. 
		There's also no guarantee that a binary produced today on Linux will even work on the various distributions of Linux today due to the same installed library version problem. 
		</p>
		<p>
		While the Linux syscalls themselves are very stable and reliable, the c library on top of them <a href="https://jangafx.com/insights/Linux-binary-compatibility">is not</a>.
		Practically all of userland is based on libc, and therefore by proxy Linux itself has a binary compatibility problem.
		</p>

		<h3>Binary Distribution is a Problem</h3>
		<p>
		Because of the problems listed above (and more), there is no good way to distribute binaries for Linux. 
		There are four (yes four!) major ways to distribute binaries, and they all have problems:
		</p><ol>
			<li>The raw binary. If this worked, we wouldn't need the other solutions.</li>
			<li>AppImage. Completely self-contained artifact that bundles all dependencies in with the binary.</li>
			<li>Flatpak. A package manager that provides a sandbox for each application.</li>
			<li>Snaps. Yet another package manager that runs applications in a sandbox.</li>
		</ol>
		
		<p>
		There are even more ways of distributing binaries, but these are the major ones. 
		What's crazy is that all four methods can be used at once on a system, each with their own methods of installing, updating, and deleting applications.
		I won't go into the pros and cons of each method here, but there are arguments about each.
		</p>
		<p>
		A major downside for all these methods is that application preservation is essentially non-existant for all of them. 
		Can a person archive an application for 20 years, pull it from the dustbin, and execute it with no other effort?
		Maybe for AppImage? Who knows? 
		It's a definite "no" for the other three methods.
		</p>

		<h3>Win32 is the Answer</h3>
		<p>
		A few years ago, Arek Hiler wrote a blog post, <a href="https://blog.hiler.eu/win32-the-only-stable-abi/">Win32 Is The Only Stable ABI On Linux</a>.
		He is absolutely right, and I believe this insight holds the answer to Linux's compatibility problem. 
		This is actually made possible by a genius decision for the design of Win32.
		</p>
		<p>
		In Linux, you can make system calls directly. 
		Just fill up some registers and make a syscall interrupt.
		</p>
		<p>
		In Windows, you do not make system calls directly. 
		Instead, you dynamically link to libraries that make the system calls for you. 
		This allows Microsoft to do all sorts of shenanigans at the kernal level while providing a stable API to userspace.
		This little stroke of genius allows us to have both Linux and Windows on the same machine at the same time. 
		</p>
		<p>
		If you think about it, there are only two major differences between a Windows app and a Linux app. 
		One, they use different executable formats.
		Two, Windows uses dynamic libraries to make system calls.
		Just use a PE format instead of ELF, load a couple libraries, and you essentially have a Windows application!
		We also already have a simple way to run Windows applications, Wine.
		</p>
		<p>
		Wine is a miraculous project.
		It provides amazing compatibility with Windows applications going all the way back to the 32-bit Windows 95 era. 
		It even implements DirectX!
		The difference between what Windows supports and Wine supports is approaching zero over time (especially if you stick to Win32).
		Wine is the magic we can use to fix our problem.
		</p>

		<h3>A New Distro</h3>
		<p>
		Imagine we made a new Linux distro. 
		This distro would provide a desktop environment that looks close enough to Windows that a Windows user could use it without training. 
		You could install and run Windows applications exactly as you do on Windows; no extra work needed.
		How would this work?
		</p>
		<p>
		The distro would come with Wine pre-installed, and there would be some small patches to the Linux kernel.
		A small modification to the "exec" family of system calls to dispatch on executble type would allow any Linux application to fork an exec a Windows application with no effort. 
		</p>
		<p>
		A wine prefix could be setup for each user, and the desktop environment would work off of that prefix, presenting a Windows-like file system to the user, and to user applications. 
		Linux as we know it would still be available, but hidden for the normal GUI desktop user. 
		</p>

		<h3>True Multiplatform</h3>
		Wine works on Linux, FreeBSD, ReactOS, macOS, Android, and Haiku. 
		If we published all our applications as Windows/Win32 apps we could achive multiplatform compatibility without any extra effort.

		<h3>The Looming Future</h3>
		<p>
		The two major commercial operating systems, MacOS and Windows, are heading in the same direction. 
		These OSs are becoming more locked down, violating privacy, and removing control user's have over their own computing environment. 
		Both OSs are arguably building in outright spyware into their operating systems. 
		Windows is going to take <a href="https://support.microsoft.com/en-us/windows/retrace-your-steps-with-recall-aa03f8a0-a78b-4b3e-b0a1-2eb8ac48701c">screenshots</a> of your screen every few seconds and have an AI analyze it.
		MacOS has a feature called <a href="https://support.apple.com/en-us/102445">Gatekeeper</a>, which limits what software you can run on your Mac to only those applications that Apple approves.
		Both Apple and Microsoft are in the process of adding the ability to scan your computer for "illegal" files and report you to the authorities. 
		</p>
		<p>
		These features are done in the name of convenience and "child safety", but the net effect is that billions of users lose their agency and control over their own computers. 
		What happens when you no longer have any control over your computer? 
		What happens when your operating system is a subscription?
		What happens when you do something these companies don't like and you are banned from using any computer?
		</p>
		<p>
		Microsoft is already <a href="https://arstechnica.com/gadgets/2025/03/new-windows-11-build-makes-mandatory-microsoft-account-sign-in-even-more-mandatory/">removing the ability</a> to run Windows without an online account.
		If you lose your account, even for a mistake, you lose the ability to run a computer. 
		</p>
		<p>
		<em><strong>NOTE:</strong> I am not against Apple or Microsoft. They have amazing engineers! I don't think they're being malicious. Rather, I think the incentives for these companies are improperly aligned. Economic and governmental forces are guiding them down this path. They could absolutely change tack and try to empower users, but I think we shouldn't assume that will happen naturally.</em>
		</p>
		<p>
		This is why I think we need a "Windows" distro of Linux.
		Not only does it solve our binary compatibility problem, it also provides an onramp to Windows users who will be forced to "upgrade" to Windows 11 in October of this year.
		Wouldn't it be great to have a painless way to switch Linux?
		</p>

		<p>
		Just a thought.
		</p>
        
    

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Everyone knows all the apps on your phone (990 pts)]]></title>
            <link>https://peabee.substack.com/p/everyone-knows-what-apps-you-use</link>
            <guid>43518866</guid>
            <pubDate>Sat, 29 Mar 2025 21:26:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://peabee.substack.com/p/everyone-knows-what-apps-you-use">https://peabee.substack.com/p/everyone-knows-what-apps-you-use</a>, See on <a href="https://news.ycombinator.com/item?id=43518866">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>Until a few years ago, any app you installed on an Android device could see all other apps on your phone without your permission. </p><p><span>Since 2022, with Android 11, Google removed this access from app developers. Under their new package visibility policy, apps </span><em>should</em><span> only see other installed apps if it‚Äôs essential to their core functionality. Developers must also explicitly declare these apps in the AndroidManifest.xml file - a required configuration file for all Android apps.</span></p><p><span>For extremely specific use cases such as file managers, browsers or antivirus apps, Google grants an exception by allowing </span><code>QUERY_ALL_PACKAGES</code><span> permission, which provides full visibility into installed apps. </span></p><p>I don‚Äôt use Android as my primary phone, but I have a spare one and I was really curious to find out which apps from Indian companies had checks to see what other apps I had installed.</p><p>So I downloaded a few dozen Indian apps I could think of on top of my head and started reading their manifest files. Surely they will be respectful of my privacy and will only query apps essential to their app's core functionality? üôÉ</p><p>It's worth acknowledging that there are some legitimate reasons for an app to check which other apps are installed on your phone. For example, an app might check which UPI apps are installed to show relevant payment options. Most of the manifest files I examined included checks for these apps. Some also looked for app cloning or multi-account apps, likely for security and fraud detection. All acceptable use cases.</p><p>But a few Indian companies went above and beyond with these checks. Let‚Äôs start with Swiggy. It has a staggering 154 package names listed in its manifest file, allowing it to query those apps on my phone. Here‚Äôs the full list:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png" width="728" height="1082.5" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;normal&quot;,&quot;height&quot;:2165,&quot;width&quot;:1456,&quot;resizeWidth&quot;:728,&quot;bytes&quot;:1052070,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F10e241bb-cc5e-44aa-ab3d-0f8585c6882f_1802x2680.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>I don‚Äôt even know where to begin unpacking this madness. How is knowing whether I have the Xbox or the Playstation app installed on my phone essential to their Swiggy's core functionality? How will knowing if I have the Naukri or Upstox app help them deliver groceries to my doorstep?</p><p><span>The wide range of categories of apps in this list strongly suggests Swiggy is collecting installed apps data for user profiling and to build a behavioural profile of their customers. This seems to be against Play Store's policies which considers the list of installed apps to be </span><a href="https://developer.android.com/training/package-visibility" rel="">personal and sensitive user data</a><span>.</span></p><p>This reminded me of that ppt from Blume Ventures - the one that blue tick twitter accounts living in certain pin codes of Bengaluru passionately discuss amongst themselves for a week every year. It had this interesting slide on apps used by different Indias:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png" width="1456" height="694" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:694,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1140458,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2a470d41-db94-472b-8fac-67f3035bf5f1_1608x766.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Swiggy queries most of these apps and more on your phone. It not only knows which India you belong to, but it can pinpoint exactly where you fall within it.</p><p>Let's talk about another app now, and it's the usual suspect, the undisputed champion of asshole design - Zepto. They have listed 165 apps to check for on your device.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png" width="1456" height="2419" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/f3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:2419,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1248569,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ff3019e68-c93d-4e25-ab43-b553b5e78a0f_1842x3060.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>ÔøºFrom Netflix to Bumble to Binance, the list includes nearly every popular app across all categories. There were </span><a href="https://www.thehindu.com/sci-tech/technology/zepto-charges-iphone-users-more-for-fruits-and-vegetables-compared-to-android-users/article69145795.ece" rel="">recent reports</a><span> of Zepto displaying different prices for iOS and Android users. With the help of this data, they can also show different pricing for different Android phones, which some customers are </span><a href="https://www.reddit.com/r/StartUpIndia/comments/1j86r09/zepto_scam/" rel="">already seeing</a><span>.</span></p><p>Even though Swiggy and Zepto have to declare these apps to query in the manifest file, as a user, you have no visibility into this list when you download their apps from the Play Store.</p><p>I also analyzed Swiggy and Zepto's apps for their delivery riders. The app query list is different from their consumer apps. Both include checks to see which other companies their riders work for. Here‚Äôs Zepto's list:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png" width="1456" height="589" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:589,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:450946,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F2c6d0dbb-8c82-4fb4-9bad-93a6f73f64e5_1670x676.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>But Swiggy takes it a step further - it also checks for personal loan apps, personal finance apps, and even keeps tabs on apps like like Ludo King or Carrom Pool on their delivery riders' phones.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png" width="1456" height="1302" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1302,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:1355225,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4615c168-84a3-47f8-af3f-8160eafc2057_1816x1624.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Can't we even play Ludo in peace without being spied on by our employers? Does even downtime need to be tracked by Swiggy? It‚Äôs embarrassing that Swiggy feels the need to include these ridiculous app queries on their delivery riders' phones.</p><p><span>Speaking of personal loan apps in India, their predatory practices are </span><a href="https://www.aljazeera.com/economy/2023/12/25/the-dark-world-of-illegal-loan-apps-in-india" rel="">well documented</a><span>. A couple of years ago, there was a major crackdown that led to the removal of thousands of such apps from the Play Store. I took a look at some that still exist. </span></p><p><span>Kreditbee is listed as one of the top apps in the personal loans space on the play store with over 50 million downloads. And can you believe their app checks for </span><strong>860</strong><span> apps installed on your phone? </span><strong>860</strong><span>!!! I am sorry you may have to squint or zoom in a little to view this list. </span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_2400,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png" width="1200" height="3884.3406593406594" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;large&quot;,&quot;height&quot;:4713,&quot;width&quot;:1456,&quot;resizeWidth&quot;:1200,&quot;bytes&quot;:2698261,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F444ce3c0-72f4-44b0-9384-f804eff9371e_2254x7296.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><p><span>ÔøºI only skimmed through this list - there are just too many apps. I hope someone reading this can do a thorough analysis. It's probably because of the bubble I live in, but I hadn‚Äôt even heard of most of these apps. Even though most of them have tens of millions of downloads.</span></p><p><span>Beyond the usual categories, I see there are checks for apps like Tamil Calendar, Odia Calendar, Qibla Direction Finder, mandir apps, astrology apps. They know what they‚Äôre doing.</span></p></div><p>There is "Jodii for Diploma, +2,10 below", a matrimony app for those who haven‚Äôt graduated high school. It has 10M+ downloads.</p><p>Then there is also "‡§ó‡§æ‡§Ø ‡§≠‡•à‡§Ç‡§∏ ‡§ñ‡§∞‡•Ä‡§¶‡•á‡§Ç ‡§¨‡•á‡§ö‡•á‡§Ç Animall" (cow buy/sell marketplace?) which also has more than 10M downloads.</p><p>This list of apps is a window into how a large part of India uses their phones - their daily lives, habits, and priorities. </p><p><span>Another leading personal loan app, Moneyview, with over 50 million downloads, has included checks for a staggering </span><strong>944</strong><span> apps in its manifest file - the highest among all the apps I examined. I am not including it in this post, you can read the </span><a href="https://github.com/pea1bee/android-manifest-files/blob/main/Moneyview-AndroidManifest.xml" rel="">full list here</a><span>. </span></p><p><span>I'm surprised KreditBee and Moneyview apps passed the Play Store's review. Play Store policy </span><a href="https://support.google.com/googleplay/android-developer/answer/10158779#zippy=%2Cexceptions" rel="">explicitly restricts</a><span> personal loan apps from using the </span><code>QUERY_ALL_PACKAGES</code><span> permission.  But these apps are bypassing this restriction by individually listing every app they want to detect in their manifest file instead.</span></p><p><span>I found only one manifest file which had the high-risk and sensitive </span><code>QUERY_ALL_PACKAGES</code><span> permission - it was Cred‚Äôs. Play Store grants a "temporary exception" to include this permission if apps have ‚Äúa verifiable core purpose facilitating financial-transactions involving financially regulated instruments‚Äù.  </span></p><p>But none of the other apps in the same segment as Cred I analyzed like PhonePe or PayTM had this permission in their manifest files. In fact, Cred offers personal loans too which as per Play Store‚Äôs Personal loans policy, is not eligible for this exception. Not sure how Cred is still allowed to keep this permission, which lets it see all the apps on your phone without any disclosures.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png" width="634" height="358" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:358,&quot;width&quot;:634,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:75001,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4cfbfc7d-5585-454d-8f07-d428f03b15b9_634x358.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>I read the manifest files of around 50 popular apps from Indian companies. Apart from Swiggy, Zepto, Cred, and a couple of personal loan apps, most had fairly reasonable and respectful app query lists. </p><p>Guess I expected worse. Maybe I am too cynical about these apps - could they actually be the good guys? üôÉ</p><p>As I was about to conclude this exercise, I noticed a couple of interesting lines when I was skimming through the manifest file of one of the apps:</p><pre><code>&lt;queries&gt;
  [...]
  &lt;intent&gt;
    &lt;action android:name="android.intent.action.MAIN" /&gt;
  &lt;/intent&gt;
  [...]
&lt;/queries&gt;</code></pre><p>I am no expert in Android development, but from what I understand, the "ACTION_MAIN" filter in the configuration above allows visibility to all installed apps that, simply put, have a screen.</p><p><span>Since most installed apps run in the foreground and have a user interface, this filter grants developers access to see all the apps on your phone - without needing the </span><code>QUERY_ALL_PACKAGES</code><span> permission!</span></p><p>To be sure, I vibe co -- I can't say it without wincing -- I vibe coded a basic android app and added the same "ACTION_MAIN" filter in my manifest file. And when I queried for installed packages, just as expected, this little hack returned a list of all the apps on my phone!!!</p><p>This seems like a massive privacy loophole in Android. Surely Play Store would reject apps that use this hack as this is a blatant violation of their store's user data policy? </p><p>Out of 47 Indian apps I randomly analyzed, 31 of them used the "ACTION_MAIN" filter - giving them access to see all the apps on your phone without any disclosure. That's 2 out of 3 apps.</p><p>Apps using this hack: </p><blockquote><p><em>Astrotalk, Axis Mobile, Bajaj Finserv, BookMyShow, Cars24, Cure.fit, Fibe, Groww, Housing, Instamart, Ixigo, JioHotstar, KreditBee, KukuTV, LazyPay, Ludo King, Meesho, MoneyTap, Moneyview, Navi, NoBroker, Nykaa, Ola, PhonePe, PhysicsWallah, Slice, Spinny, Swiggy, Swiggy Delivery, Tata Neu, and Zomato.</em></p></blockquote><p>Apps that don't use this hack: </p><blockquote><p><em>Airtel Thanks, Blinkit, Byju‚Äôs, MyGate, Dream11, Flipkart, HDFC Mobile, Healthify, INDmoney, MyJio, Paytm, PaisaBazaar, ShareChat, Unacademy, Vedantu, Zepto</em></p></blockquote><p>Even fucking Ludo King has this in its manifest file. So most Indian companies can actually see all the apps on your phone - they're just sneakier about it than the likes of Swiggy and Zepto. So much for being the good guys.</p><div><p><span>In fact, Swiggy has got this filter config too, yet it still chooses to explicitly lists the apps it queries when it could just as easily do this discreetly behind closed doors like others. But I‚Äôm not complaining. This oversight from them gives a glimpse into Swiggy‚Äôs data collection practices. If Google had enforced this policy properly, we might have had similar visibility into other companies as well.</span></p><p><span>All the manifest files I read are in </span><a href="https://github.com/pea1bee/android-manifest-files" rel="">my Github</a><span>. The majority were downloaded on March 18 or 19.</span></p></div><p><span>This hack isn‚Äôt exclusively used by apps from Indian companies. I checked the manifest files of some other popular apps. </span><em>Facebook, Instagram, Snapchat, Subway Surfers, and Truecaller</em><span> all have this config. Meanwhile, </span><em>Amazon, Spotify, X, Discord, and WhatsApp</em><span> didn‚Äôt. I didn‚Äôt investigate further beyond these.</span></p><p>This makes me wonder, what was the whole purpose of Google's package visibility policy? It was supposed to protect users, yet most apps seem to have found ways around it anyway.</p><p><span>And installed app data is very sensitive and personal. In 2022, </span><a href="https://www.vice.com/en/article/data-marketplace-selling-clue-period-tracking-data/" rel="">Vice reported</a><span> that a data marketplace called Narrative was selling data on users who had downloaded period-tracking apps right after news emerged that Roe v. Wade (which had federally protected abortion rights in the U.S.) could be overturned. This is frightening to even think about. </span></p><p>Installed apps data is one data point. The extensive set of permissions each and every one of these apps have included in their manifest files, often far beyond what‚Äôs necessary is another can of worm for someone else to open. </p><p><span>I‚Äôll conclude this post with a tiny example from Zepto. They ask for </span><code>READ_SMS</code><span> permission. You can deny it, but it‚Äôs mandatory if you sign up for Zepto Postpaid. </span></p><p>When you grant the permission, this is the list of sender IDs they check for in your inbox:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png" width="588" height="184" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:184,&quot;width&quot;:588,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:52980,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:&quot;https://peabee.substack.com/i/159986160?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd062bfa0-bcea-41e9-b754-24f85d5c4ca5_588x184.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Most of them are TRAI sender IDs of banks. They're likely reading these for their Postpaid plan eligibility check. They can still read this even if you never opt for it. And look how they've sneaked in SMSes from Blinkit, Swiggy, Bigbasket, Flipkart too.</p><p>Their competitors are probably doing the same, they just didn‚Äôt leave behind such an obvious trail of evidence in the app itself. </p><p><span>The point is when any app gets permissions like </span><code>READ_SMS</code><span>, as users, we have no visibility over when or what it‚Äôs accessing.</span></p><p>Please remember the next time you casually install an app on your Android device, this information is being broadcast to the whole world. Data brokers will use it to profile you, cross-reference it with data about you from other ad networks and eventually it will be used to decide how much you‚Äôll be asked to pay the next time you order a samosa.</p><div><p><span>Thank you for reading. In case you subscribed to this newsletter after reading the "What's inside this QR code menu at this cafe?" post and can't find it anymore. </span><a href="https://x.com/prstb/status/1838179660959465596" rel="">Here's my tweet about it</a><span>.</span></p><p><span>I am also on </span><a href="https://bsky.app/profile/peabee.foo" rel="">Bluesky</a><span>.</span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple's AI isn't a letdown. AI is the letdown (138 pts)]]></title>
            <link>https://www.cnn.com/2025/03/27/tech/apple-ai-artificial-intelligence/index.html</link>
            <guid>43518576</guid>
            <pubDate>Sat, 29 Mar 2025 20:45:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2025/03/27/tech/apple-ai-artificial-intelligence/index.html">https://www.cnn.com/2025/03/27/tech/apple-ai-artificial-intelligence/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=43518576">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300, &quot;image--eq-large&quot;: 660}" data-uri="cms.cnn.com/_components/image/instances/cm8qceweh0001356mak2nd6ez@published" data-name="GettyImages-2201185379.jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.667" data-original-height="1334" data-original-width="2000" data-url="https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-2201185379.jpg?c=original" data-editable="lede" data-freewheel-lede="true">
       <picture><source height="383" width="680" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-2201185379.jpg?c=16x9&amp;q=h_383,w_680,c_fill/f_webp" type="image/webp"><source height="653" width="1160" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-2201185379.jpg?c=16x9&amp;q=h_653,w_1160,c_fill/f_webp" type="image/webp"><source height="605" width="1075" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-2201185379.jpg?c=16x9&amp;q=h_605,w_1075,c_fill/f_webp" type="image/webp"><source height="833" width="1480" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-2201185379.jpg?c=16x9&amp;q=h_833,w_1480,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/gettyimages-2201185379.jpg?c=16x9&amp;q=h_833,w_1480,c_fill" alt="The Apple brand is perhaps the most meticulously controlled corporate identity on the planet." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1334" width="2000"></picture>
    </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                  
<p data-uri="cms.cnn.com/_components/editor-note/instances/cm8qed2dl00013b6mrtzq1cwe@published" data-editable="text" data-component-name="editor-note" data-article-gutter="true">
    <em>A version of this story appeared in CNN Business‚Äô Nightcap newsletter. To get it in your inbox, sign up for free </em><a href="https://www.cnn.com/newsletters/nightcap?source=nl-acq_article"><em>here</em></a>.
</p>

<p><cite>
      <span data-editable="location">New York</span>
      <span data-editable="source">CNN</span>
        &nbsp;‚Äî&nbsp;
    </cite>
</p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa31sl002u26qabope380h@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Apple has been getting hammered in tech and <a href="https://www.wsj.com/tech/ai/apple-ai-siri-development-behind-9ea65ee8" target="_blank">financial media</a> for its uncharacteristically messy foray into artificial intelligence. After <a href="https://www.cnn.com/2024/09/10/business/apple-iphone-ai-nightcap/index.html">a June event</a> heralding a new AI-powered Siri, the company has delayed its release indefinitely. The AI features Apple has rolled out, including text message summaries, are <a href="https://www.theverge.com/2024/11/12/24289939/apple-intelligence-ai-notification-summaries-awkward-funny-bad" target="_blank">comically unhelpful.</a>
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000023b6mcen6hxba@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The critique of Apple‚Äôs halting rollout is not entirely unfair. Though it is, at times, missing the point.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000033b6mnlq2kulb@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Apple, like every other big player in tech, is scrambling to find ways to inject AI into its products. Why? <em>Well, it‚Äôs the</em> <em>future!</em> What problems is it solving? <em>Well, so far that‚Äôs not clear! </em>Are customers demanding it? <em>LOL, no. </em>In fact, last year the backlash against one of Apple‚Äôs early ads for its AI <a href="https://www.cnn.com/2024/05/10/business/ai-dystopia-silicon-valley-nightcap/index.html">was so hostile</a> the company had to pull the commercial.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000043b6mot1qkp2m@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The real reason companies are doing this is because <a href="https://www.cnn.com/2024/08/02/tech/wall-street-asks-big-tech-will-ai-ever-make-money/index.html">Wall Street wants them</a> to. Investors have been salivating for an Apple ‚Äúsuper cycle‚Äù ‚Äî a tech upgrade so enticing that consumers will rush to get their hands on the new model.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000053b6mho638mhc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            In a rush to please shareholders, <a href="https://www.cnn.com/2025/03/19/tech/apple-iphone-siri-delay/index.html">Apple made a rare stumble</a>. The company is owning its error, it seems, and has said the delayed features would roll out ‚Äúin the coming year.‚Äù
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qamz4a000r3b6mhs1zabph@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Of course, the cryptic delay has only given oxygen to the narrative that Apple has become a laggard in the Most Important Tech Advancement in decades.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000063b6m10i0ad52@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            And that is where the Apple-AI narrative goes off the rails.
    </p>

  

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000073b6meyw25nve@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            There‚Äôs a popular adage in policy circles: ‚ÄúThe party can never fail, it can only be failed.‚Äù It is meant as a critique of the ideological gatekeepers who may, for example, blame voters for their party‚Äôs failings rather than the party itself.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000083b6mjdo3761k@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            That same fallacy is taking root among AI‚Äôs biggest backers. AI can never fail, it can only be failed. Failed by you and me, the smooth-brained Luddites who just don‚Äôt<em> get </em>it. (To be sure, even AI proponents will acknowledge available models‚Äô shortcomings ‚Äî no one would argue that <a href="https://www.cnn.com/2024/09/03/tech/facebook-spam-ai-meta/index.html">the AI slop clogging Facebook</a> is anything but, well, slop ‚Äî but there is a dominant narrative within tech that AI is both inevitable and revolutionary.)
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az000093b6m4acgr0ky@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Tech columnists such as the New York Times‚Äô Kevin Roose have <a href="https://www.nytimes.com/2025/03/14/podcasts/hardfork-siri-starlink.html" target="_blank">suggested recently</a> that Apple has failed AI, rather than the other way around.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000a3b6m4rgos4q9@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            ‚ÄúApple is not meeting the moment in AI,‚Äù Roose said on his podcast, <a href="https://www.nytimes.com/2025/03/14/podcasts/hardfork-siri-starlink.html" target="_blank">Hard Fork</a>, earlier this month. ‚ÄúI just think that when you‚Äôre building products with generative AI built into it, you do just need to be more comfortable with error, with mistakes, with things that are a little rough around the edges.‚Äù
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000b3b6mvgb984ue@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            To which I would counter, respectfully: Absolutely not.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000c3b6m2qgep4or@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Roose is right that Apple is, to put it mildly, a fastidious creator of consumer products. It is, after all, the $3-trillion empire built by the notoriously detail-obsessed Steve Jobs.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000d3b6mh49730hy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            The Apple brand is perhaps the most meticulously controlled corporate identity on the planet. Its ‚Äúwalled garden‚Äù of iOS ‚Äî despised by developers and fair game for accusations of monopolistic behavior, to be sure ‚Äî is also part of the reason one billion people have learned to trust Apple with their sensitive personal data.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qasy7j000v3b6mhqnxkij0@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Apple‚Äôs obsession with privacy and security is the reason most of us don‚Äôt think twice to scan our faces, store bank account information or share our real-time location via our phones.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000e3b6mr3i4kljx@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            And not only do we trust Apple to keep our data safe, we trust it to design things that are accessible out of the box. You can buy a new iPhone, AirPods or Apple Watch and trust that the moment you turn it on, a user-friendly system will hold your hand through the setup and seamlessly sync it<strong> </strong>with your other devices. You will almost never need a user manual filled with tiny print. Even your Boomer parents will be able to navigate FaceTime calls with minimal effort.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000f3b6mcfdfxote@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Roose contends, at one point in the episode, that ‚Äúthere are people who use AI systems who know that they are not perfect<s>,</s>‚Äù and that those regular users understand there‚Äôs a right way and a wrong way to query a chatbot.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000g3b6m4nmp2jxc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            This is where we, the people, are apparently failing AI. Because in addition to being humans with jobs and social lives and laundry to fold and art to make and kids to raise, we should also learn how to tiptoe around the limitations of large language models that may or <a href="https://www.cnn.com/2025/01/14/business/wikipedia-meta-x-fact-check-nightcap/index.html">may not return accurate information</a> to us.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000h3b6m1rj2mlnc@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Apple, Roose says, should keep pushing AI into its products and just get used to the idea that those features may be unpolished and a little too advanced for the average user.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000i3b6m8kcfg0zr@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            And again, respectfully, I would ask: To what end?
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000j3b6mxrwlz1pg@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            As Hard Fork co-host Casey Newton notes in the same episode, it‚Äôs not as if Google or Amazon has figured out some incredible use case that‚Äôs making users rush to buy a new Pixel phone or an Echo speaker.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000k3b6m9zjd4hmv@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            ‚ÄúAI is still so much more of a science and research story than it is a product story,‚Äù Newton notes.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000l3b6mxvkckit0@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            In other words: Large language models are fascinating science. They are an academic wonder with huge potential and some early commercial successes, such as OpenAI‚Äôs ChatGPT and Anthropic‚Äôs Claude. But a bot that‚Äôs 80% accurate ‚Äî a figure Newton made up, but we‚Äôll go with it ‚Äî isn‚Äôt a very useful consumer product.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000m3b6mjlxs78d3@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Back in June, Apple floated a compelling scenario for its newfangled Siri. Imagine yourself, frazzled and running late for work, simply saying into your phone: Hey Siri, what time does my mom‚Äôs flight land? And is it at JFK or LaGuardia? In theory, Siri could scan your email and texts with your mom and give you an answer. That saves you several annoying steps of opening your email to find the flight number, copying it, then pasting it into Google to find the flight‚Äôs status.
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000n3b6ms0wuv5mg@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            If it‚Äôs 100% accurate, it‚Äôs a fantastic time saver. If it is anything less than 100% accurate, it‚Äôs useless. Because even if there‚Äôs a 2% chance it‚Äôs wrong, there‚Äôs a 2% chance you‚Äôre stranding mom at the airport, and mom will be, rightly, very disappointed. Our moms deserve better!
    </p>

    <p data-uri="cms.cnn.com/_components/paragraph/instances/cm8qa3az0000o3b6m1frk2vxm@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
            Bottom line: Apple is not the laggard in AI. AI is the laggard in AI.
    </p>

              </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Atop 2.11 heap problems (161 pts)]]></title>
            <link>https://openwall.com/lists/oss-security/2025/03/29/1</link>
            <guid>43518560</guid>
            <pubDate>Sat, 29 Mar 2025 20:43:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openwall.com/lists/oss-security/2025/03/29/1">https://openwall.com/lists/oss-security/2025/03/29/1</a>, See on <a href="https://news.ycombinator.com/item?id=43518560">Hacker News</a></p>
<div id="readability-page-1" class="page">


<table>
<tbody><tr>

<td>
<a href="https://openwall.com/"><img src="https://openwall.com/logo.png" width="182" height="80" alt="Openwall"></a>
</td><td>
<div>
<ul>
<li><a href="https://openwall.com/">Products</a>
<ul>
<li><a href="https://openwall.com/Owl/">Openwall GNU/*/Linux &nbsp; <i>server OS</i></a>
</li><li><a href="https://openwall.com/lkrg/">Linux Kernel Runtime Guard</a>
</li><li><a href="https://openwall.com/john/">John the Ripper &nbsp; <i>password cracker</i></a>
<ul>
<li><a href="https://openwall.com/john/">Free &amp; Open Source for any platform</a>
</li><li><a href="https://openwall.com/john/cloud/">in the cloud</a>
</li><li><a href="https://openwall.com/john/pro/linux/">Pro for Linux</a>
</li><li><a href="https://openwall.com/john/pro/macosx/">Pro for macOS</a>
</li></ul>
</li><li><a href="https://openwall.com/wordlists/">Wordlists &nbsp; <i>for password cracking</i></a>
</li><li><a href="https://openwall.com/passwdqc/">passwdqc &nbsp; <i>policy enforcement</i></a>
<ul>
<li><a href="https://openwall.com/passwdqc/">Free &amp; Open Source for Unix</a>
</li><li><a href="https://openwall.com/passwdqc/windows/">Pro for Windows (Active Directory)</a>
</li></ul>
</li><li><a href="https://openwall.com/yescrypt/">yescrypt &nbsp; <i>KDF &amp; password hashing</i></a>
</li><li><a href="https://openwall.com/yespower/">yespower &nbsp; <i>Proof-of-Work (PoW)</i></a>
</li><li><a href="https://openwall.com/crypt/">crypt_blowfish &nbsp; <i>password hashing</i></a>
</li><li><a href="https://openwall.com/phpass/">phpass &nbsp; <i>ditto in PHP</i></a>
</li><li><a href="https://openwall.com/tcb/">tcb &nbsp; <i>better password shadowing</i></a>
</li><li><a href="https://openwall.com/pam/">Pluggable Authentication Modules</a>
</li><li><a href="https://openwall.com/scanlogd/">scanlogd &nbsp; <i>port scan detector</i></a>
</li><li><a href="https://openwall.com/popa3d/">popa3d &nbsp; <i>tiny POP3 daemon</i></a>
</li><li><a href="https://openwall.com/blists/">blists &nbsp; <i>web interface to mailing lists</i></a>
</li><li><a href="https://openwall.com/msulogin/">msulogin &nbsp; <i>single user mode login</i></a>
</li><li><a href="https://openwall.com/php_mt_seed/">php_mt_seed &nbsp; <i>mt_rand() cracker</i></a>
</li></ul>
</li><li><a href="https://openwall.com/services/">Services</a>
</li><li id="narrow-li-1"><a>Publications</a>
<ul>
<li><a href="https://openwall.com/articles/">Articles</a>
</li><li><a href="https://openwall.com/presentations/">Presentations</a>
</li></ul>
</li><li><a>Resources</a>
<ul>
<li><a href="https://openwall.com/lists/">Mailing lists</a>
</li><li><a href="https://openwall.info/wiki/">Community wiki</a>
</li><li><a href="https://github.com/openwall">Source code repositories (GitHub)</a>
</li><li><a href="https://cvsweb.openwall.com/">Source code repositories (CVSweb)</a>
</li><li><a href="https://openwall.com/mirrors/">File archive &amp; mirrors</a>
</li><li><a href="https://openwall.com/signatures/">How to verify digital signatures</a>
</li><li><a href="https://openwall.com/ove/">OVE IDs</a>
</li></ul>
</li><li id="last-li"><a href="https://openwall.com/news">What's new</a>
</li></ul>
</div>


</td></tr></tbody></table>




<a href="https://openwall.com/lists/oss-security/2025/03/28/2">[&lt;prev]</a> <a href="https://openwall.com/lists/oss-security/2025/03/28/2">[&lt;thread-prev]</a> <a href="https://openwall.com/lists/oss-security/2025/03/29/">[day]</a> <a href="https://openwall.com/lists/oss-security/2025/03/">[month]</a> <a href="https://openwall.com/lists/oss-security/2025/">[year]</a> <a href="https://openwall.com/lists/oss-security/">[list]</a>
<pre>Message-ID: &lt;53411a5a-3b7f-4993-a66e-8e93cd2efb1c@atoptool.nl&gt;
Date: Sat, 29 Mar 2025 18:39:29 +0100
From: Gerlof Langeveld &lt;gerlof.langeveld@...ptool.nl&gt;
To: oss-security@...ts.openwall.com
Subject: CVE-2025-31160 Atop 2.11 heap problems

Introduction:
Atop mainly reads the system level and process level from the /proc and
/sys directories. However, certain counters might be obtained from other
optional sources, that have to be activated explicitly.

One of these sources is the 'atopgpud' daemon, which permanently gathers
metrics about the utilization of GPUs. It offers a local TCP port to which
atop can connect to retrieve GPU-related counters. These counters are
provided as strings that have to be parsed by atop.


Vulnerability:
The vulnerability is caused by the fact that atop always tries to connect
to the TCP port of 'atopgpud' during initialization. When another local
program has been started (instead of 'atopgpud') that listens to this TCP
port, atop connects to that program. Such program is able then to send
unexpected strings that may lead to parsing failures in atop. These failures
result in heap problems and segmentation faults.

Although no additional information has been received about these heap
problems, the described heap problems were reproduced with a custom
developed test program.

The vulnerability is present since the introduction of 'atopgpud'
in atop 2.4.0.


Solution:
1) Most systems will not explicitly activate the 'atopgpud' daemon.
 &nbsp;&nbsp; Therefore, the default behavior of atop is now not to connect to the TCP
 &nbsp;&nbsp; port at all. Only when atop is started with the '-k' flag it will try to
 &nbsp;&nbsp; connect to the TCP port (in case you know that 'atopgpud' is running).

2) When the '-k' flag is used, the parsing of the strings is improved to
 &nbsp;&nbsp; avoid that heap problems can occur.

3) Another optional source for atop might be 'netatop' or 'netatop-bpf'.
 &nbsp;&nbsp; Since most systems will not explicitly install/use these sources, 
the default
 &nbsp;&nbsp; behavior of atop is now not to try to find these sources. Only when 
atop is
 &nbsp;&nbsp; started with the '-K' flag it will try to find 'netatop' or 
'netatop-bpf'.

</pre>
<p><a href="https://www.openwall.com/blists/">Powered by blists</a> - <a href="https://lists.openwall.net/">more mailing lists</a>


</p><p>
Please check out the
<a href="https://oss-security.openwall.org/wiki/">
Open Source Software Security Wiki</a>, which is counterpart to this
<a href="https://oss-security.openwall.org/wiki/mailing-lists/oss-security">mailing list</a>.
</p><p>
Confused about <a href="https://openwall.com/lists/">mailing lists</a> and their use?
<a href="https://en.wikipedia.org/wiki/Electronic_mailing_list">Read about mailing lists on Wikipedia</a>
and check out these
<a href="https://www.complang.tuwien.ac.at/anton/mail-news-errors.html">guidelines on proper formatting of your messages</a>.
</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Commercials that David Lynch directed (2018) (156 pts)]]></title>
            <link>https://www.openculture.com/2018/07/watch-commercials-david-lynch-directed-big-30-minute-compilation.html</link>
            <guid>43518466</guid>
            <pubDate>Sat, 29 Mar 2025 20:31:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openculture.com/2018/07/watch-commercials-david-lynch-directed-big-30-minute-compilation.html">https://www.openculture.com/2018/07/watch-commercials-david-lynch-directed-big-30-minute-compilation.html</a>, See on <a href="https://news.ycombinator.com/item?id=43518466">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<div>
<p><span><iframe title="YouTube video player" type="text/html" width="640" height="505" src="//www.youtube.com/embed/RoCYbQBTmlY?wmode=transparent&amp;fs=1&amp;hl=en&amp;showsearch=0&amp;rel=0&amp;theme=dark" frameborder="0" allowfullscreen="" loading="lazy"></iframe></span>
	</p>
</div>

<p>Some film¬≠mak¬≠ers start in com¬≠mer¬≠cials, hon¬≠ing their chops in antic¬≠i¬≠pa¬≠tion of mak¬≠ing per¬≠son¬≠al projects lat¬≠er. A select few go in the oth¬≠er direc¬≠tion, real¬≠iz¬≠ing their dis¬≠tinc¬≠tive vision before field¬≠ing offers from com¬≠pa¬≠nies who want a piece of that vision‚Äôs cul¬≠tur¬≠al cur¬≠ren¬≠cy. Any¬≠one who‚Äôs seen David Lynch‚Äôs most acclaimed work&nbsp;will sus¬≠pect, cor¬≠rect¬≠ly, that Lynch belongs in the lat¬≠ter group. With 1977‚Äôs cult hit&nbsp;<em>Eraser¬≠head</em>, he showed cin¬≠e¬≠ma what it means to be <a href="http://www.openculture.com/2017/11/what-makes-a-david-lynch-film-lynchian-a-video-essay.html">Lynchi¬≠an</a>. This brought him the atten¬≠tion of Hol¬≠ly¬≠wood, lead¬≠ing to the respectable suc¬≠cess of&nbsp;<em>The Ele¬≠phant Man&nbsp;</em>and&nbsp;the dis¬≠as¬≠ter that was&nbsp;<em>Dune</em>. Only in 1986, with&nbsp;<em>Blue Vel¬≠vet</em>, could Lynch make a tru¬≠ly, even trou¬≠bling¬≠ly per¬≠son¬≠al film that hit the zeit¬≠geist at just the right moment.</p>
<p>Nat¬≠u¬≠ral¬≠ly, Madi¬≠son Avenue came call¬≠ing soon there¬≠after. ‚ÄúWith the smash <em>Blue Vel¬≠vet</em>, a Palme d‚Äôor at Cannes for <em>Wild at Heart</em>, and then the nation¬≠al phe¬≠nom¬≠e¬≠non of <em>Twin Peaks</em>‚Äô first sea¬≠son, David Lynch clear¬≠ly estab¬≠lished him¬≠self as the U.S.A.‚Äòs fore¬≠most com¬≠mer¬≠cial¬≠ly viable avant-garde-‚Äòoffbeat‚Äô direc¬≠tor,‚Äù wrote David Fos¬≠ter Wal¬≠lace in <a href="http://www.lynchnet.com/lh/lhpremiere.html">a 1997 piece on the film¬≠mak¬≠er</a>.</p>


<p>‚ÄúFor a while there it looked like he might be able to sin¬≠gle-hand¬≠ed¬≠ly bro¬≠ker a new mar¬≠riage between art and com¬≠merce in U.S. movies, open¬≠ing for¬≠mu¬≠la-frozen Hol¬≠ly¬≠wood to some of the eccen¬≠tric¬≠i¬≠ty and vig¬≠or of art film.‚Äù&nbsp;<span>Lynch‚Äôs fans in tele¬≠vi¬≠sion adver¬≠tis¬≠ing must have imag¬≠ined that he could do the same for their indus¬≠try, and you can watch the fruits of that hunch in the </span><a href="https://www.youtube.com/watch?v=RoCYbQBTmlY">half-hour com¬≠pi¬≠la¬≠tion of Lynch-direct¬≠ed com¬≠mer¬≠cials</a><span> above.</span></p>
<p>Lynch has worked for some star¬≠tling¬≠ly big brands, begin¬≠ning with Calvin Klein: his <a href="http://www.openculture.com/2014/01/david-lynchs-literary-perfume-ads.html">trio of spots for the fra¬≠grance&nbsp;Obses¬≠sion</a> take as their basis the writ¬≠ing of F. Scott Fitzger¬≠ald, Ernest Hem¬≠ing¬≠way, and D.H. Lawrence. A few years lat¬≠er he direct¬≠ed a humor¬≠ous <a href="http://www.openculture.com/2015/11/david-lynch-directs-a-mini-season-of-twin-peaks-in-the-form-of-japanese-coffee-commercials.html">mini-sea¬≠son of <em>Twin Peaks</em> to pro¬≠mote Geor¬≠gia Cof¬≠fee</a>, one of the top brands of canned cof¬≠fee in the&nbsp;Lynch-lov¬≠ing coun¬≠try of&nbsp;Japan. The New York Depart¬≠ment of San¬≠i¬≠ta¬≠tion engaged Lynch‚Äôs ser¬≠vices to imbue their anti-lit¬≠ter¬≠ing cam¬≠paign with his sig¬≠na¬≠ture high-con¬≠trast omi¬≠nous¬≠ness, a mood also sought by fash¬≠ion-indus¬≠try titans like Armani, Yves Saint Lau¬≠rent, Guc¬≠ci, and Dior. The mar¬≠keters of hum¬≠bler goods like Alka-Seltzer, Bar¬≠il¬≠la Pas¬≠ta (a seem¬≠ing¬≠ly auteur-aware brand that <a href="http://www.openculture.com/2012/07/wim_wenders_sells_beer_stella_artois_pasta_barilla_and_more_beer_carling.html">has also hired Wim Wen¬≠ders</a> and <a href="http://www.openculture.com/2012/01/fellinis_fantastic_tv_commercials.html">Felli¬≠ni</a>), and Clear Blue Easy home preg¬≠nan¬≠cy tests have also gone in for a touch of the Lynchi¬≠an.</p>
<p>Quite a few of these com¬≠mer¬≠cials orig¬≠i¬≠nal¬≠ly aired only out¬≠side Amer¬≠i¬≠ca, which may reflect the sup¬≠pos¬≠ed¬≠ly more endur¬≠ing appre¬≠ci¬≠a¬≠tion of Lynch‚Äôs work that exists in Europe and Asia. But for all Lynch‚Äôs artis¬≠tic dar¬≠ing, the man him¬≠self has always come off as an enthu¬≠si¬≠ast of unre¬≠con¬≠struct¬≠ed Amer¬≠i¬≠can plea¬≠sures. To this day he remains a stead¬≠fast smok¬≠er, and in 1998 brought that per¬≠son¬≠al cred¬≠i¬≠bil¬≠i¬≠ty to the Swiss cig¬≠a¬≠rette brand Parisi¬≠enne. The result¬≠ing spot fea¬≠tures men in ties, show¬≠ers of sparks, dead fish, back¬≠wards talk¬≠ing, a for¬≠bid¬≠ding¬≠ly illu¬≠mi¬≠nat¬≠ed shack, and apoc¬≠a¬≠lyp¬≠tic flames:&nbsp;Parisi¬≠enne, in oth¬≠er words, must have got exact¬≠ly what they paid for.</p>
<p><strong>Relat¬≠ed Con¬≠tent:</strong></p>
<p><a href="http://www.openculture.com/2017/11/what-makes-a-david-lynch-film-lynchian-a-video-essay.html">What Makes a David Lynch Film Lynchi¬≠an: A Video Essay</a></p>
<p><a href="http://www.openculture.com/2018/05/david-lynch-made-a-disturbing-web-sitcom-called-rabbits.html">David Lynch Made a Dis¬≠turb¬≠ing Web Sit¬≠com Called ‚ÄúRab¬≠bits‚Äù: It‚Äôs Now Used by Psy¬≠chol¬≠o¬≠gists to Induce a Sense of Exis¬≠ten¬≠tial Cri¬≠sis in Research Sub¬≠jects</a></p>
<p><a href="http://www.openculture.com/2016/12/the-surreal-filmmaking-of-david-lynch-explained-in-nine-video-essays.html">The Sur¬≠re¬≠al Film¬≠mak¬≠ing of David Lynch Explained in 9 Video Essays</a></p>
<p><a href="http://www.openculture.com/2012/07/wim_wenders_sells_beer_stella_artois_pasta_barilla_and_more_beer_carling.html">Wim Wen¬≠ders Cre¬≠ates Ads to Sell Beer (Stel¬≠la Artois), Pas¬≠ta (Bar¬≠il¬≠la), and More Beer (Car¬≠ling)</a></p>
<p><a href="http://www.openculture.com/2011/12/spike_jonzes_imaginative_tv_ads.html">Spike Jonze‚Äôs Imag¬≠i¬≠na¬≠tive TV Ads</a></p>
<p><a title="Permanent Link to Fellini‚Äôs Fantastic TV Commercials" href="http://www.openculture.com/2012/01/fellinis_fantastic_tv_commercials.html" rel="bookmark">Fellini‚Äôs Fan¬≠tas¬≠tic TV Com¬≠mer¬≠cials</a></p>
<p><a title="Permanent Link to Ingmar Bergman‚Äôs 1950s Soap Commercials Wash Away the Existential Despair" href="http://www.openculture.com/2017/10/ingmar-bergmans-1950s-soap-commercials-wash-away-all-the-existential-despair.html" rel="bookmark">Ing¬≠mar Bergman‚Äôs 1950s Soap Com¬≠mer¬≠cials Wash Away the Exis¬≠ten¬≠tial Despair</a></p>
<p><em>Based in Seoul,&nbsp;<a href="http://blog.colinmarshall.org/">Col¬≠in Mar¬≠shall</a>&nbsp;writes and broad¬≠casts&nbsp;on cities and cul¬≠ture.&nbsp;His projects include the book&nbsp;</em>The State¬≠less City: a Walk through 21st-Cen¬≠tu¬≠ry Los Ange¬≠les&nbsp;<em>and the video series&nbsp;</em><a href="https://vimeo.com/channels/thecityincinema">The City in Cin¬≠e¬≠ma</a><em>. Fol¬≠low him on Twit¬≠ter at&nbsp;<a href="https://twitter.com/#%21/colinmarshall" rel="nofollow">@colinmarshall</a>&nbsp;or on&nbsp;<a href="https://www.facebook.com/colinmarshallessayist">Face¬≠boo</a><a href="https://www.facebook.com/colinmarshallessayist">k</a>.</em></p>
<br>		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Matrix Calculus (For Machine Learning and Beyond) (163 pts)]]></title>
            <link>https://arxiv.org/abs/2501.14787</link>
            <guid>43518220</guid>
            <pubDate>Sat, 29 Mar 2025 20:00:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2501.14787">https://arxiv.org/abs/2501.14787</a>, See on <a href="https://news.ycombinator.com/item?id=43518220">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2501.14787">View PDF</a>
    <a href="https://arxiv.org/html/2501.14787v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>  This course, intended for undergraduates familiar with elementary calculus and linear algebra, introduces the extension of differential calculus to functions on more general vector spaces, such as functions that take as input a matrix and return a matrix inverse or factorization, derivatives of ODE solutions, and even stochastic derivatives of random functions. It emphasizes practical computational applications, such as large-scale optimization and machine learning, where derivatives must be re-imagined in order to be propagated through complicated calculations. The class also discusses efficiency concerns leading to "adjoint" or "reverse-mode" differentiation (a.k.a. "backpropagation"), and gives a gentle introduction to modern automatic differentiation (AD) techniques.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Steven G. Johnson [<a href="https://arxiv.org/show-email/182cbc52/2501.14787" rel="nofollow">view email</a>]      <br>    <strong>[v1]</strong>
        Tue, 7 Jan 2025 18:38:35 UTC (938 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Candid Naivety of Geeks (151 pts)]]></title>
            <link>https://ploum.net/2025-03-28-geeks-naivety.html</link>
            <guid>43518087</guid>
            <pubDate>Sat, 29 Mar 2025 19:45:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ploum.net/2025-03-28-geeks-naivety.html">https://ploum.net/2025-03-28-geeks-naivety.html</a>, See on <a href="https://news.ycombinator.com/item?id=43518087">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>


<p>by <a href="https://fr.wikipedia.org/wiki/Ploum">Ploum</a> on 2025-03-28</p><h2 id="soustitre-1">I mean, come on!</h2>
<p>Amazon recently announced that, from now on, everything you say to Alexa will be sent to their server.</p>
<ul>
<li><a href="https://pluralistic.net/2025/03/15/altering-the-deal/">Pluralistic: Amazon annihilates Alexa privacy settings, turns on continuous, nonconsensual audio uploading (15 Mar 2025) (pluralistic.net)</a></li>
</ul>
<p>What surprised me the most with this announcement is how it was met with surprise and harsh reactions. People felt betrayed.</p>
<p>I mean, come on!</p>
<p>Did you really think that Amazon was not listening to you before that? Did you really buy an Alexa trusting Amazon to "protect your privacy"?</p>
<p>Recently, I came across a comment on Hacker News where the poster defended Apple as protecting privacy of its users because "They market their product as protecting our privacy".</p>
<p>I mean, once again, come on!</p>
<p>Did you really think that "marketing" is telling the truth? Are you a freshly debarked Thermian? (In case you missed it, this is a Galaxy Quest reference.)</p>
<p>The whole point of marketing is to lie, lie and lie again. </p>
<h2 id="soustitre-2">What is the purpose of that gadget?</h2>
<p>The whole point of the whole Amazon Alexa tech stack is to send information to Amazon. That‚Äôs the main goal of the thing. The fact that it is sometimes useful to you is a direct consequence of the thing sending information to Amazon. Just like Facebook linking you with friends is a consequence of you giving your information to Meta. Usefulness is only a byproduct of privacy invasion.</p>
<p>Having a fine-grained setting enabling "do not send all information to Amazon please" is, at best, wishful thinking. We had the same in the browser ("do-not-track"). It didn‚Äôt work. </p>
<p>I‚Äôve always been convinced that the tech geeks who bought an Amazon Alexa perfectly knew what they were doing. One of my friends has a Google Echo and justify it with "Google already knows everything about our family through our phones, so I‚Äôm trading only a bit more of our privacy for convenience". I don‚Äôt agree with him but, at the very least, it‚Äôs a logical opinion.</p>
<p>We all know that what can be done with a tool will be done eventually. And you should prepare for it. On a side note, I also postulate that the reason Amazon removed that setting is because they were already gathering too much data to justify its existence in case there‚Äôs a complaint or an investigation in the future."How did you manage to get those data while your product says it will not send data?". </p>
<p>But, once again, any tech person knows that pushing a button in an interface is not a proof of anything in the underlying software. </p>
<h2 id="soustitre-3">Please stop being naive about Apple</h2>
<p>That‚Äôs also the point with Apple: Apple is such a big company that the right hand has no idea about what the left hand is doing. Some privacy people are working at Apple and doing good job. But their work is continuously diluted through the interests of quick and cheap production, marketing, release, new features, gathering data for advertising purpose. Apple is not a privacy company and has never been: it is an opportunistic company which advertise privacy when it feels it could help sell more iPhones. But deeply inside, they absolutely don‚Äôt care and they will absolutely trade the (very little) privacy they have if it means selling more.</p>
<p>Sometimes, geek naivety is embarrassingly stupid. Like "brand loyalty". Marketing lies to you. As a rule of thumb, the bigger the company, the bigger the lie. In tech, there‚Äôs no way for a big company to not lie because marketers have no real understanding of they are selling. Do you really think that people who chose to advertise "privacy" at Apple have any strong knowledge about "privacy"? That they could simply give you a definition of "privacy"?</p>
<p>I know that intelligent people go to great intellectual contortions to justify buying the latest overpriced spying shiny coloured screen with an apple logo. It looks like most humans actively look to see their freedom restricted. Seirdy calls it "the domestication of users".</p>
<ul>
<li><a href="https://seirdy.one/posts/2021/01/27/whatsapp-and-the-domestication-of-users/">WhatsApp and the domestication of users (seirdy.one)</a></li>
</ul>
<p>And that‚Äôs why I see Apple as a cult: most tech people cannot be reasoned about it.</p>
<ul>
<li><a href="https://ploum.net/the-cost-of-being-convinced/index.html">The Cost of Being Convinced (ploum.net)</a></li>
</ul>
<h2 id="soustitre-4">You can‚Äôt find a technical solution to a lie</h2>
<p>Bill Cole, contributor to Spamassassin, recently posted on Mastodon that the whole DNS stack to protect spammers was not working.</p>
<blockquote> spammers are more consistent at making SPF, DKIM, and DMARC correct than are legitimate senders.<br></blockquote>
<ul>
<li><a href="https://toad.social/@grumpybozo/114213600922816869">üÜòBill Cole üá∫üá¶: "@jwz@mastodon.social The stats we collect for the‚Ä¶" (toad.social)</a></li>
</ul>
<p>It is, once again, a naive approach to spam. The whole stack was designed with the mindset "bad spammers will try to hide themselves". But was is happening in your inbox, really?</p>
<p>Most spam is not "black hat spam". It is what I call "white-collar spam": perfectly legitimate company, sending you emails from legitimate address. You slept in a hotel during a business trip? Now you will receive weekly emails about our hotel for the rest of your life. And it is the same for any shop, any outlet, anything you have done. Your inbox is filled with "white-collar" junk. And they know this perfectly well. </p>
<p>In Europe, we have a rule, the RGPD, which forbid businesses to keep your data without your express consent. I did the experiment for several months to send a legal threat to every single white-collar spam I received. Guess what: they always replied that it was a mistake, that I was now removed, that it should not have happened, that I checked the box (which was false but how could I prove it?) or even, on one occasion, that they restored a backup containing my email before I unsubscribed (I unsubscribed from that one 10 years before, which makes it very unlikely).</p>
<p>In short, they lied. All of them. All of them are spammers and they lie pretending that "they thought you were interested".</p>
<p>In one notable case, they told me that they had erased all my data while, still having the cookie on my laptop, I could see and use my account. Thirty days later, I was still connected and I figured that they simply managed to change my user id from "ploum" to "deleted_ploum" in the database. While answering me straight in the face that they had no information about me in their database.</p>
<p>Corporations are lying. You must treat every corporate word as a straight lie until proved otherwise. </p>
<h2 id="soustitre-5">But Ploum, if all marketing is a lie, why trusting Signal?</h2>
<p>If you can‚Äôt trust marketing, why do I‚ÄØuse Signal and Protonmail?</p>
<p>First of all, Signal is open source. And, yes, I‚Äôve read some of the source code for some feature I was interested in. I‚Äôve also read through some very deep audit of Signal source code.</p>
<ul>
<li><a href="https://soatok.blog/2025/02/18/reviewing-the-cryptography-used-by-signal/">Reviewing the Cryptography Used by Signal (soatok.blog)</a></li>
</ul>
<p>I‚Äôm also trusting the people behind Signal. I‚Äôm trusting people who recommend Signal. I‚Äôm trusting the way Signal is built. </p>
<p>But most importantly, Signal sole existence is to protect privacy of its users. It‚Äôs not even a corporation and, yes, this is important.</p>
<p>Yes, they could lie in their marketing. Like Telegram did (and still does AFAIK). But this would undermine their sole reason to exist.</p>
<p>I don‚Äôt say that Signal is perfect: I say I trust them to believe themselves what they announce. For now.</p>
<h2 id="soustitre-6">What about Protonmail?</h2>
<p>For the same reasons, Protonmail can, to some extent, be trusted. Technically, they can access most of the emails of their customers (because those emails arrive unencrypted to PM‚Äôs servers). But I trust Protonmail not to sell any data because if there‚Äôs any doubt that they do it, the whole business will crumble. They have a strong commercial incentive to do everything they can to protect my data. I pay them for that. It‚Äôs not a "checkbox" they could remove, it‚Äôs their whole raison d‚Äô√™tre.</p>
<p>This is also why I pay for Kagi as my search engine: their business incentive is to provide me the best search results with less slop, less advertising. As soon as they start doing some kind of advertising, I will stop paying them and they know it. Or if Kagi starts becoming to AI centric for my taste, like they did for Lori:</p>
<ul>
<li><a href="https://d-shoot.net/kagi.html">Why I Lost Faith in Kagi (d-shoot.net)</a></li>
</ul>
<p>I don‚Äôt blindly trust companies. Paying them is not a commitment to obey them, au contraire. Every relation with a commercial entity is, by essence, temporary. I pay for a service with strings attached. If the service degrade, if my conditions are not respected, I stop paying. If I‚Äôm not convinced they can be trusted, I stop paying them. I know I can pay and still be the product. If I have any doubt, I don‚Äôt pay. I try to find an alternative and migrate to it. Email being critical to me, I always have two accounts on two different trustable providers with an easy migrating path (which boils down to changing my DNS config).</p>
<h2 id="soustitre-7">Fighting the Androidification</h2>
<p>Cory Doctorow speaks a lot about enshitification. Where users are more and more exploited. But one key component of a good enshitification is what I call "Androidification".</p>
<p>Androidification is not about degrading the user experience. It‚Äôs about closing doors, removing special use cases, being less and less transparent. It‚Äôs about taking open source software and frog boiling it to a full closed proprietary state while killing all the competition in the process. </p>
<p>Android was, at first, an Open Source project. With each release, it became more closed, more proprietary. As I explain in my "20 years of Linux on the Desktop" essay, I believe it has always been part of the plan. Besides the Linux kernel, Google was always wary not to include any GPL or LGPL licensed library in Android.</p>
<ul>
<li><a href="https://ploum.net/2025-03-08-linux_desktop3.html">20 years of Linux on the Desktop (part 3) (ploum.net)</a></li>
</ul>
<p>It took them 15 years but they finally achieved killing the Android Open Source Project:</p>
<ul>
<li><a href="https://www.androidauthority.com/google-android-development-aosp-3538503/">Google will develop the Android OS fully in private, here's why (www.androidauthority.com)</a></li>
</ul>
<p>This is why I‚Äôm deeply concerned by the motivation of Canonical to switch Ubuntu‚Äôs coreutils to an MIT licensed version.</p>
<ul>
<li><a href="https://go.theregister.com/feed/www.theregister.com/2025/03/19/ubuntu_2510_rust/">Ubuntu 25.10 plans to swap GNU coreutils for Rust (go.theregister.com)</a></li>
</ul>
<p>This is why I‚Äôm deeply concerned that Protonmail quietly removed the issue tracker from its Protonmail Bridge Github page (making the development completely opaque for what is an essential tool for technical Protonmail users).</p>
<h2 id="soustitre-8">I mean, commons!</h2>
<p>This whole naivety is also why I‚Äôm deeply concerned by very intelligent and smart tech people not understanding what "copyleft" is, why it is different from "open source" and why they should care.</p>
<ul>
<li><a href="https://ploum.net/2023-06-19-more-rms.html">We need more of Richard Stallman, not less (ploum.net)</a></li>
</ul>
<p>Corporations are not your friend. They never were. They lie. The only possible relationship with them is an opportunistic one. And if you want to build commons that they cannot steal, you need strong copyleft.</p>
<ul>
<li><a href="https://ploum.net/2024-07-01-opensource_sustainability.html">On Open Source and the Sustainability of the Commons (ploum.net)</a></li>
</ul>
<p>But firstly, my fellow geeks, you need to lose your candid naivety.</p>
<p>I mean, come on, let‚Äôs build the commons!</p>

<div><p>I‚Äôm <a href="https://fr.wikipedia.org/wiki/Ploum">Ploum</a>, a writer and an engineer. I like to explore how technology impacts society. You can subscribe <a href="https://listes.ploum.net/mailman3/lists/en.listes.ploum.net/">by email</a> or <a href="https://ploum.net/atom_en.xml">by rss</a>. I value privacy and never share your adress.</p>
<p>I write <a href="https://pvh-editions.com/ploum">science-fiction novels in French</a>. For <a href="https://bikepunk.fr/">Bikepunk</a>, my new post-apocalyptic-cyclist book, my publisher is looking for contacts in other countries to distribute it in languages other than French. If you can help, <a href="https://ploum.net/about.html">contact me</a>!</p> 

</div>
</article></div>]]></description>
        </item>
    </channel>
</rss>