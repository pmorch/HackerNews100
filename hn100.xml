<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 04 May 2025 02:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Gorgeous-GRUB: collection of decent community-made GRUB themes (102 pts)]]></title>
            <link>https://github.com/Jacksaur/Gorgeous-GRUB</link>
            <guid>43883040</guid>
            <pubDate>Sat, 03 May 2025 22:57:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Jacksaur/Gorgeous-GRUB">https://github.com/Jacksaur/Gorgeous-GRUB</a>, See on <a href="https://news.ycombinator.com/item?id=43883040">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">üöÄ Intro</h2><a id="user-content--intro" aria-label="Permalink: üöÄ Intro" href="#-intro"></a></p>
<p dir="auto">There are many great community made GRUB themes to spice up your bootloader before booting into your system proper. Unfortunately, they're spread across multiple sites and it can be difficult to find good ones. As another user told me, the majority of themes on Pling (the largest host of GRUB themes currently) are fairly low effort and can be boring to trawl through. Hence, I decided to put together this page to bring attention to some decent themes I've found around the internet over time. They aren't all absolute masterpieces of course: But they've all at least had a fair amount of effort put into them, with custom backgrounds, fonts, and colours.</p>
<p dir="auto">And don't forget, <strong>themes are extremely easy to customize!</strong> Like a theme's layout but prefer a different background? Just replace the image in its folder with one of your own. Don't like the positioning of a theme's elements? Open the theme.txt and change their values. Want a different colour scheme? They're all set by HEX Values, which you can swap out in seconds. You can even convert almost any font to the type GRUB uses with the grub-mkfont command, then change the <code>item_font</code> line in the theme.txt to use it.
There's loads of potential for customization, you just have to work creatively around the limitations.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üåü Useful Links</h2><a id="user-content--useful-links" aria-label="Permalink: üåü Useful Links" href="#-useful-links"></a></p>
<p dir="auto"><a href="https://kinolien.github.io/gitzip/" rel="nofollow">GitZip</a> - Download individual folders and files from Github repositories without having to download the entire repo. Asks for a Token, but seems to work without just fine.</p>
<p dir="auto"><a href="https://github.com/VandalByte/grub-tweaks">GRUB-Tweaks</a> - Multiple guides on various tweaks and additions you can make to further customize, or repair, your GRUB install.</p>
<p dir="auto"><a href="http://web.archive.org/web/20241209100014/http://wiki.rosalab.ru/en/index.php/Grub2_theme_tutorial" rel="nofollow">Theme Tutorial</a> and <a href="http://web.archive.org/web/20241209094940/http://wiki.rosalab.ru/en/index.php/Grub2_theme_/_reference" rel="nofollow">Theme References</a> - Pretty complex, but the best set of information I've managed to find so far. It may be easier to start by taking an existing theme and making edits to it yourself, rather than diving straight in and starting from scratch.</p>
<p dir="auto"><a href="https://github.com/Jacksaur/GRUB-Background-Cycler">Background Cycler</a> - Script I made that will cycle a theme to a different background each time your system is rebooted. The Cron job can be modified to run at specific amounts of time instead if desired.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üõ†Ô∏è <a href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Installation.md">Installing a theme</a></h2><a id="user-content-Ô∏è-installing-a-theme" aria-label="Permalink: üõ†Ô∏è Installing a theme" href="#Ô∏è-installing-a-theme"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üëç <a href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Contributing.md">How to contribute</a></h2><a id="user-content--how-to-contribute" aria-label="Permalink: üëç How to contribute" href="#-how-to-contribute"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">üé® Themes</h2><a id="user-content--themes" aria-label="Permalink: üé® Themes" href="#-themes"></a></p>
<blockquote>
<p dir="auto">If you like a theme, please do consider giving it a rating on Pling or starring its repo on Github. It's very rare for anyone to rate on Pling and that's half the reason good themes are so hard to find. Plus, it always feels nice to see that people are enjoying the product you created.</p>
</blockquote>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Minegrub.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Minegrub.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Descent.jpg"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Descent.jpg" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/SteamOS.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/SteamOS.png" width="247"></a></td>
</tr>
<tr>
<td><strong><a href="https://github.com/Lxtharia/minegrub-theme">Minegrub (Cycling Text)</a> + <a href="https://github.com/Lxtharia/double-minegrub-menu">Combined Version!</a></strong></td>
<td><a href="https://www.pling.com/p/1000083/" rel="nofollow"><strong>Descent</strong></a></td>
<td><a href="https://github.com/LegendaryBibo/Steam-Big-Picture-Grub-Theme"><strong>SteamOS (Personalized)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Virtuaverse.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Virtuaverse.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Yorha.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Yorha.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CRT-Amber.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CRT-Amber.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/Patato777/dotfiles/tree/main/grub"><strong>Virtuaverse</strong></a></td>
<td><a href="https://github.com/OliveThePuffin/yorha-grub-theme"><strong>YoRHa</strong></a></td>
<td><a href="https://www.pling.com/p/1727268/" rel="nofollow"><strong>CRT-Amber</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Minegrub-World.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Minegrub-World.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Dedsec.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Dedsec.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Sekiro.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Sekiro.png" width="247"></a></td>
</tr>
<tr>
<td><strong><a href="https://github.com/Lxtharia/minegrub-world-sel-theme">Minegrub World Select</a> + <a href="https://github.com/Lxtharia/double-minegrub-menu">Combined Version!</a></strong></td>
<td><a href="https://www.pling.com/p/1569525/" rel="nofollow"><strong>DedSec (Set)</strong></a></td>
<td><a href="https://github.com/semimqmo/sekiro_grub_theme"><strong>Sekiro</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/HyperFluent.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/HyperFluent.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Persona5.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Persona5.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/ULTRAKILL.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/ULTRAKILL.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/2133341/" rel="nofollow"><strong>HyperFluent (Set)</strong></a></td>
<td><a href="https://www.pling.com/p/2122684" rel="nofollow"><strong>Persona 5 Royal (Set)</strong></a></td>
<td><a href="https://www.pling.com/p/2217746" rel="nofollow"><strong>ULTRAKILL</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Framework.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Framework.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Sayonara.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Sayonara.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/LiteMint.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/LiteMint.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/HeinrichZurHorstMeyer/Framework-Grub-Theme"><strong>Framework</strong></a></td>
<td><strong><a href="https://github.com/samoht9277/dotfiles/tree/55455eec2c2df83be5373b1095915bb7086b1dab/grub/themes/sayonara">Sayonara</a> + <a href="https://www.dropbox.com/s/il0dxjq5u65t0pt/Font.zip?dl=0" rel="nofollow">Improved Font</a></strong></td>
<td><a href="https://www.pling.com/p/1906415" rel="nofollow"><strong>Neumorphic</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Crossgrub.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Crossgrub.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Arcade.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Arcade.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/DOOM.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/DOOM.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/krypciak/crossgrub"><strong>Crossgrub</strong></a></td>
<td><a href="https://github.com/nobreDaniel/dotfile"><strong>Arcade</strong></a></td>
<td><a href="https://github.com/Lxtharia/doomgrub-theme"><strong>DOOM</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/OldBIOS.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/OldBIOS.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Wuthering_Waves.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Wuthering_Waves.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Graphite.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Graphite.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/2072033" rel="nofollow"><strong>OldBIOS</strong></a></td>
<td><a href="https://www.pling.com/p/2184155" rel="nofollow"><strong>Wuthering Waves (Set)</strong></a></td>
<td><a href="https://www.pling.com/p/1676418/" rel="nofollow"><strong>Graphite</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Linux_Mind.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Linux_Mind.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Fallout.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Fallout.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberEXS.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberEXS.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1397139/" rel="nofollow"><strong>Linux Mind</strong></a></td>
<td><a href="https://www.pling.com/p/1230882/" rel="nofollow"><strong>Fallout</strong></a></td>
<td><a href="https://www.pling.com/p/1968990" rel="nofollow"><strong>CyberEXS</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Dark_Matter.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Dark_Matter.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Aero.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Aero.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Elegant.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Elegant.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1603282/" rel="nofollow"><strong>Dark Matter (Set)</strong></a></td>
<td><a href="https://github.com/mcarneir0/Aero-GRUB2-Theme"><strong>Aero</strong></a></td>
<td><a href="https://github.com/vinceliuice/Elegant-grub2-themes"><strong>Elegant (Big Set!)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Cyberpunk2077.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Cyberpunk2077.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberRe.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberRe.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Cyberpunk.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Cyberpunk.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1515662/" rel="nofollow"><strong>Cyberpunk 2077</strong></a></td>
<td><a href="https://www.pling.com/p/1420727/" rel="nofollow"><strong>CyberRe</strong></a></td>
<td><a href="https://www.pling.com/p/1429443/" rel="nofollow"><strong>Cyberpunk</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Standby.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Standby.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Axiom.jpg"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Axiom.jpg" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Solarized-Dark.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Solarized-Dark.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1172610/" rel="nofollow"><strong>Standby</strong></a></td>
<td><a href="https://github.com/user-attachments/files/17193972/Axiom.tar.gz"><strong>Axiom</strong></a></td>
<td><a href="https://www.pling.com/p/1177401/" rel="nofollow"><strong>Solarized-Dark</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Retro_GRUB.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Retro_GRUB.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/BigSur.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/BigSur.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Distro.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Distro.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1568741/" rel="nofollow"><strong>Retro GRUB</strong></a></td>
<td><a href="https://www.pling.com/p/1443844/" rel="nofollow"><strong>BigSur</strong></a></td>
<td><a href="https://www.pling.com/p/1482847/" rel="nofollow"><strong>Distro Themes (Set)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Poly.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Poly.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Atomic.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Atomic.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Plasma.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Plasma.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><strong>Poly (<a href="https://www.pling.com/p/1176413/" rel="nofollow">Light</a>/<a href="https://www.pling.com/p/1230780/" rel="nofollow">Dark</a>)</strong></td>
<td><a href="https://www.pling.com/p/1200710/" rel="nofollow"><strong>Atomic</strong></a></td>
<td><strong>Plasma (<a href="https://www.pling.com/p/1197062/" rel="nofollow">Light</a>/<a href="https://www.pling.com/p/1195799/" rel="nofollow">Dark</a>)</strong></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/BSOL.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/BSOL.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Sleek.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Sleek.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Grubby_Terminal.jpg"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Grubby_Terminal.jpg" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.github.com/harishnkr/bsol"><strong>BSOL</strong></a></td>
<td><a href="https://www.pling.com/p/1414997/" rel="nofollow"><strong>Sleek (Set + Personalized)</strong></a></td>
<td><a href="https://gitlab.com/perthshiretim/grubby-terminal" rel="nofollow"><strong>Grubby Terminal</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Billys_Agent.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Billys_Agent.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Matter.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Matter.gif" width="247" data-animated-image=""></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Modern.gif"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Modern.gif" width="247" data-animated-image=""></a></td>
</tr>
<tr>
<td><a href="https://gitlab.com/Drorago/billys-agent-grub2-theme" rel="nofollow"><strong>Billy's Agent</strong></a></td>
<td><a href="https://github.com/mateosss/matter#download"><strong>Matter (Customizable)</strong></a></td>
<td><a href="https://github.com/vinceliuice/grub2-themes"><strong>Modern Design Themes (Set)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Deadora.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Deadora.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Breeze.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Breeze.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/GutsBlack-ArchLinux.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/GutsBlack-ArchLinux.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.deviantart.com/glacto/art/Deadora-600784822" rel="nofollow"><strong>Deadora</strong></a></td>
<td><a href="https://www.pling.com/p/1000111/" rel="nofollow"><strong>Breeze</strong></a></td>
<td><a href="https://forums.archlinux.fr/viewtopic.php?t=11361" rel="nofollow"><strong>Gutsblack Archlinux</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberXero.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberXero.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/GTG.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/GTG.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Catppuccin.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Catppuccin.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://www.pling.com/p/1502415/" rel="nofollow"><strong>CyberXero</strong></a></td>
<td><a href="https://www.gnome-look.org/p/2064031" rel="nofollow"><strong>Grand Theft Gentoo</strong></a></td>
<td><a href="https://github.com/catppuccin/grub"><strong>Catppuccin (Set)</strong></a></td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/CyberGRUB-2077.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/CyberGRUB-2077.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Placeholder.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Placeholder.png" width="247"></a></td>
<td><a target="_blank" rel="noopener noreferrer" href="https://github.com/Jacksaur/Gorgeous-GRUB/blob/main/Images/Placeholder.png"><img src="https://github.com/Jacksaur/Gorgeous-GRUB/raw/main/Images/Placeholder.png" width="247"></a></td>
</tr>
<tr>
<td><a href="https://github.com/adnksharp/CyberGRUB-2077"><strong>CyberGRUB-2077</strong></a></td>
<td>-</td>
<td>-</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When Flat Rate Movers Won't Answer Your Calls (125 pts)]]></title>
            <link>https://aphyr.com/posts/381-when-flat-rate-movers-wont-answer-your-calls</link>
            <guid>43882150</guid>
            <pubDate>Sat, 03 May 2025 20:44:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aphyr.com/posts/381-when-flat-rate-movers-wont-answer-your-calls">https://aphyr.com/posts/381-when-flat-rate-movers-wont-answer-your-calls</a>, See on <a href="https://news.ycombinator.com/item?id=43882150">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p>Back in 2023 I went through an inter-state move with <a href="https://www.flatrate.com/moving/">Flat Rate Movers,
LTD.</a> (US DOT 488466, MC 254356). They bungled the job, damaged my stuff
and my house, and then refused to talk to me or their own insurance company. I
placed dozens of calls, wrote letters, emails, nothing worked. I finally got
some money for the damage by working with their insurer directly. I know a lot
of folks struggle with moving companies, and figured I‚Äôd write up a bit of this
story in case it helps. You can <a href="#finding-their-insurance">skip ahead</a> if you
just want to know about the FMCSA insurer database.</p>
<p>In November 2022 I scheduled the move with Flat Rate. We took a detailed video
inventory of everything to be moved. I paid over $14,000 for an ‚Äúall inclusive
move‚Äù, which, per the move plan, included full packing services, blankets for furniture, boxes for electronics, lamps, and bicycles, a custom crate for a tabletop, and ‚Äúextended valuation coverage‚Äù‚Äîtheir insurance policy.</p>
<p>A few days before the move in March 2023, Flat Rate called to tell me a
five-person team would arrive. When the crew arrived, it wasn‚Äôt Flat Rate. It
was a team of two from <a href="https://www.esquiremoving.com/">Esquire Moving Inc</a> (US DOT 2820253, MC 940499). They had
no idea they were supposed to provide packing services. The crate I paid for was nowhere to be found. They didn‚Äôt have enough boxes or blankets. I had to have everything out that day, so
there wasn‚Äôt any choice‚ÄîI worked alongside the team for thirteen hours to
complete the packing and move-out.</p>
<p>I let the team handle furniture protection and loading the truck, which was a
mistake. As they unloaded a few days later, I realized much of the furniture had
been completely unprotected. My bicycle wasn‚Äôt boxed. Lamps were tossed in
loose. There was extensive damage to furniture, art, books, and my home: I
watched the crew rip a doorframe off the wall. The crew provided me with a
backdated bill of lading only on delivery.</p>
<p>I called Flat Rate a couple days later to discuss my concerns. Their
representive apologized and acknowledged that a crew of two was insufficient. I
sent Flat Rate a detailed email explaining their failure to provide promised
services, accompanied by photographs of the move process and the resulting
damage. I asked for a partial refund, and for Flat Rate to pay for the damage
they caused. I received only an out-of-office auto-response.</p>
<p>On March 21st, I received a generic form letter from Flat Rate‚Äôs claims
department. I filled out the claim forms and submitted them on March 25th, and
repeated that I needed more than an insurance claim: Flat Rate obviously failed
to provide the services I‚Äôd paid for.</p>
<p>Then things got weird. I placed call after call to the claims department. They
didn‚Äôt answer. I left voicemail after voicemail. On April 28th I reached an
actual human, but their computers were apparently down, and no supervisor was
in the building‚Äîthe representative couldn‚Äôt do anything but take down a note
to call me back. They never did. I left another voicemail on May 5th. Again on
May 23rd. Again on August 4th. August 8th. I began to realize that Flat Rate‚Äôs
strategy was simply to never answer the phone.</p>
<p>On August 14th, a new hire in the claims department called me: she‚Äôd just been
hired and was taking over my case. She dispatched a local furniture company
to inspect the damages and help complete the claim. The inspectors agreed: the
movers had done extensive damage. I provided them with documentation and photos
as well.</p>
<p>On September 14 I called the furniture company and confirmed that yes, they had
submitted their report to Flat Rate. However, the furniture company had a
confidentiality agreement with Flat Rate, and could not release their report to
me. I called their contact at Flat Rate, who didn‚Äôt answer, and left a
voicemail. I called the claims representative‚Äôs direct line: her number was no
longer in service. On September 19th I got a call from the claims
representative, who promised she‚Äôd have a decision by the end of the day. Flat Rate never talked to me again.</p>
<p>I called again and again, but got voicemail every time. I tried a letter from
my lawyers, an arbitration request with the <a href="https://trucking.org/arbitration-loss-and-damages">American Trucking
Association</a>, complaints with the <a href="https://www.usa.gov/agencies/federal-motor-carrier-safety-administration">Federal Motor Carrier Safety
Administration</a>,
the <a href="https://www.dot.ny.gov/index">New York Department of Transportation</a>‚Äôs
Motor Carrier complaint department, and the <a href="https://www.dfs.ny.gov/">New York State Department of
Financial Services</a>; none of this went anywhere.</p>
<h2><a href="#finding-their-insurance" id="finding-their-insurance">Finding Their Insurance</a></h2>
<p>Here‚Äôs the thing: movers offer coverage, they have claims departments, and they do many insurance-like things in house. But for complicated reasons, they are not actually insurance companies, and are not regulated as such. Their coverage is backstopped by separate, real insurance companies. I eventually discovered I could bypass Flat Rate and talk to their backing insurance company directly. The Federal Motor Carrier Safety
Administration maintains <a href="https://li-public.fmcsa.dot.gov/LIVIEW/pkg_carrquery.prc_getdetail">a public database of moving companies</a>. Putting in their US DOT number
(488466) yields a page with some basic info. At the bottom are links with their
active and pending insurance, and the history of their insurers.</p>
<p><img src="https://aphyr.com/data/posts/381/fmcsa.png" alt="A screenshot of the FMCSA page, with links at the bottom" title="A screenshot of the FMCSA page, with links at the bottom"></p>
<p><img src="https://aphyr.com/data/posts/381/insurance-history.png" alt="A screenshot of their insurer history" title="A screenshot of their insurer history"></p>
<p>The insurance history told me their cargo insurer at the time of my move was
Hanover Insurance Company, with policy RHX H706231. The database also had
Hanover‚Äôs phone number. I was able to call Hanover and ask about the
policy‚Äîit took a few tries, but I got through to a claims adjuster there who
was able to confirm that yes, I could file a claim directly with Hanover. I
sent over a package of documentation, including the photos and the story so
far.</p>
<p>Hanover Insurance informed me they‚Äôd never heard anything about my claim, and
called Flat Rate to check. Over the next few days we discovered that Flat Rate
wasn‚Äôt just refusing to answer my calls‚Äîthey wouldn‚Äôt answer calls from their insurance company either. Hanover wasn‚Äôt able to obtain the report from the furniture company, but they did agree, on the basis of the photos, to pay a reasonable amount for the damage to cargo. I had a check a few days later.</p>
<p>I‚Äôm still unhappy with Flat Rate: they charged me a good deal of money for services
they failed to deliver, and never paid for damage to the house. I was gearing up for small claims court‚Äîbut during the tail end of this fiasco I was entering a fresh hell of home renovation, and got distracted. If you‚Äôre reading this, Flat Rate, you still owe me.</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DuckDB is probably the most important geospatial software of the last decade (173 pts)]]></title>
            <link>https://www.dbreunig.com/2025/05/03/duckdb-is-the-most-impactful-geospatial-software-in-a-decade.html</link>
            <guid>43881468</guid>
            <pubDate>Sat, 03 May 2025 19:30:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dbreunig.com/2025/05/03/duckdb-is-the-most-impactful-geospatial-software-in-a-decade.html">https://www.dbreunig.com/2025/05/03/duckdb-is-the-most-impactful-geospatial-software-in-a-decade.html</a>, See on <a href="https://news.ycombinator.com/item?id=43881468">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
    <p>What happens when you embed geospatial capabilities in generalist data tools? More people engaging with geo data.</p>

<p>I just returned from the inaugural <a href="https://conference.cloudnativegeo.org/CNGConference2025">Cloud-Native Geospatial conference</a>. It was fantastic, I highly recommend you jump in if Jed and team organized another.</p>

<p>One of the core questions discussed in the breakouts and in the halls was how to broaden the geospatial audience. How can we better communicate geo data‚Äôs utility, in all industries and domains? Many tactics and case studies were debated, but the one I kept coming back to is that of DuckDB.</p>

<p><img src="https://www.dbreunig.com/img/geo_duckdb.jpeg" alt="Google Search Trends showing the term 'geospatial' flat-lining for years before turning upward in late 2023. This was probably helped by DuckDB, whose rise in this data closely matches the 'geospatial' line."></p>

<p>This chart could‚Äôve been pretty bleak! Interest in ‚Äúgeospatial‚Äù (a term that functions well as a proxy for similar terms) declined and flatlined until late 2023 ‚Äì right when DuckDB released their <a href="https://duckdb.org/docs/stable/extensions/spatial/overview.html">spatial extension</a>.</p>

<p>Now, all the standard caveats about correlation and causation apply, but I‚Äôm inclined to believe this chart.</p>

<p>DuckDB lowers the barriers to working with geo data to <em>two lines</em>:</p>

<div><pre><code><span>install</span> <span>spatial</span><span>;</span> 
<span>load</span> <span>spatial</span><span>;</span>
</code></pre></div>

<p>If the extension is already installed, it‚Äôs only <em>one</em> line.</p>

<p>Prior to this, getting up and running from a cold-start might‚Äôve required installing or even compiling severall OSS packages, carefully noting path locations, standing up a specialized database‚Ä¶ Enough work that a data generalist might not have bothered, or their IT department might not have supported it.</p>

<p>With DuckDB spatial, it became possible for casual geospatial work to occur. All within SQL‚Ä¶ And that makes the ecosystem bigger.</p>

<p>As I discussed the spatial extension and this chart between sessions at the Cloud Native Geospatial conference, I wondered: would <a href="https://overturemaps.org/">Overture Maps Foundation </a> have the usage it has today without DuckDB spatial? Maybe‚Ä¶but probably not.</p>

<p>I‚Äôm excited to help those spikes at the end of the chart continue upward.</p>



  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Deadly Screwworm Parasite's Comeback Threatens Texas Cattle, US Beef Supply (106 pts)]]></title>
            <link>http://www.bloomberg.com/news/features/2025-05-02/deadly-screwworm-parasite-s-comeback-threatens-texas-cattle-us-beef-supply</link>
            <guid>43881065</guid>
            <pubDate>Sat, 03 May 2025 18:29:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.bloomberg.com/news/features/2025-05-02/deadly-screwworm-parasite-s-comeback-threatens-texas-cattle-us-beef-supply">http://www.bloomberg.com/news/features/2025-05-02/deadly-screwworm-parasite-s-comeback-threatens-texas-cattle-us-beef-supply</a>, See on <a href="https://news.ycombinator.com/item?id=43881065">Hacker News</a></p>
Couldn't get http://www.bloomberg.com/news/features/2025-05-02/deadly-screwworm-parasite-s-comeback-threatens-texas-cattle-us-beef-supply: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[We Fell Out of Love with Next.js and Back in Love with Ruby on Rails (289 pts)]]></title>
            <link>https://hardcover.app/blog/part-1-how-we-fell-out-of-love-with-next-js-and-back-in-love-with-ruby-on-rails-inertia-js</link>
            <guid>43881035</guid>
            <pubDate>Sat, 03 May 2025 18:26:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hardcover.app/blog/part-1-how-we-fell-out-of-love-with-next-js-and-back-in-love-with-ruby-on-rails-inertia-js">https://hardcover.app/blog/part-1-how-we-fell-out-of-love-with-next-js-and-back-in-love-with-ruby-on-rails-inertia-js</a>, See on <a href="https://news.ycombinator.com/item?id=43881035">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<figure><img loading="lazy" decoding="async" width="1024" height="585" src="https://wp.hardcover.app/wp-content/uploads/2025/04/Technical-Article-Title-1024x585.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2025/04/Technical-Article-Title-1024x585.png 1024w, https://wp.hardcover.app/wp-content/uploads/2025/04/Technical-Article-Title-300x171.png 300w, https://wp.hardcover.app/wp-content/uploads/2025/04/Technical-Article-Title-768x439.png 768w, https://wp.hardcover.app/wp-content/uploads/2025/04/Technical-Article-Title-1200x686.png 1200w, https://wp.hardcover.app/wp-content/uploads/2025/04/Technical-Article-Title.png 1400w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></figure>



<p>This is <strong>part 1</strong> of a series documenting <a href="https://hardcover.app/blog/alexandria-release" data-type="post" data-id="2089">Hardcover‚Äôs Alexandria release</a>. We recently migrated our codebase from Next.js to Ruby on Rails, and it‚Äôs been amazing so far! It was a learning experience, and I‚Äôm excited to share some of our takeaways. I‚Äôll link each article here as it‚Äôs written.</p>



<ul>
<li><a href="https://hardcover.app/blog/alexandria-release" data-type="post" data-id="2089">Introducing Alexandria: Faster, Smoother, Smarter</a></li>



<li>Part 1: How we fell out of love with Next.js and back in love with Ruby on Rails &amp; Inertia.js</li>



<li>Part 2: Moving from the Cloud to the Server ‚Äì Google &amp; AWS to Digital Ocean and Kamal</li>



<li>Part 3: How we use Puppeteer to generate OpenGraph images</li>



<li>Part 4: Speeding up Ruby on Rails with Solid Cache, server side rendering, Sidekiq, and Brick</li>



<li>Part 5: Securing and Speeding up our API Server</li>
</ul>



<p>Today‚Äôs focus is on the main reason for the move from Next.js to Ruby on Rails. This is the first question anyone asks, and the most important one. So let‚Äôs dive into it.</p>



<p>Just a side note: this is going to be a software development related post, not a book related posts. If you‚Äôre here for the Book Vibes, I‚Äôd encourage you read about the <a href="https://hardcover.app/blog/alexandria-release" data-type="post" data-id="2089">release first</a>.</p>



<h2>How We Got Here</h2>



<p>When Hardcover started, I was primarily a Ruby on Rails developer. I had experience with JS frontends, but Rails was my <em>jam</em>. I‚Äôve been building things in it since before Rails 1.0, worked at multiple startups that use it, built courses to teach it, spoken at meetups about it, and been to conferences.</p>



<p>I‚Äôve been <em>all in</em> with Rails for a while.</p>



<p>In the late 2010s, single page applications broke out as an alternative way to create applications. It was the JavaScript framework Cambrian Explosion ‚Äì with jQuery as the common ancestor (in spirit at least).</p>



<p>We had Backbone.js, Ember.js, Angular.js, Vue.js, React.js and many more. I‚Äôve shipped code in each of these frameworks that have been seen by millions people (which is easier than it sounds! I‚Äôve heard you can just <em>do stuff</em> ‚Äì especially on the Internet).</p>



<p>The biggest point of friction with these frameworks was always how they would integrate with Ruby on Rails. Rails has gone down a different route for it‚Äôs sanctioned front-end path ‚Äì using <a href="https://jasonformat.com/islands-architecture/">Islands Architecture</a>, Stimulus Controllers and other solutions (which are all preferred to Rails previous .rjs syntax).</p>



<p>I‚Äôll be honest: I haven‚Äôt spent the time to fully learn this architecture. I can‚Äôt criticize it, other than that the code looks <em>weird</em> to me. It does have advantages over JS frameworks, but you‚Äôre still writing JS either way.</p>



<p>For most of the past decade, using these popular frameworks in Rails has meant giving up <strong>Server Side Rendering</strong>. In 2021 when I started Hardcover, that one fact alone meant it was out. We knew we‚Äôd need to rely on SEO to find new readers and I didn‚Äôt want to sacrifice that.</p>



<h3>Enter Next.js</h3>



<p>Right as I was deciding on what framework to use that would allow for SEO + JavaScript, Next.js announced version 9.5  ‚Äì adding incremental static regeneration and other features that would allow us to render pages with SSR and expire the cache. It sounded perfect.</p>



<p>I setup the initial architecture of Hardcover using Next.js with the pages router, hitting a GraphQL API (Hasura) for getting data, and caching as much as possible using Incremental Static Revalidation. The first load was often a bit slow, but caching helped.</p>



<p>One decision I made during this phase would come back to haunt me: <strong>cache facts on the server, fetch user data in the browser</strong>.</p>



<p>For instance, if you‚Äôre viewing a Readers profile, <em>everything</em> we show there would be fetched client-side from our GraphQL API. Our API returns different results depending on your relationship with the reader you‚Äôre viewing. Someone can mark a book, list or goal as public, private or only people you follow ‚Äì which all determine what other readers can see.</p>



<p>This approach left that logic to the API, allowing the front-end to be dumb and just show whatever was returned. It <em>worked</em>.</p>



<p>Behind the scenes we were still using Ruby on Rails for the entire backend. This is what the architecture looked like at the time.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="599" src="https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1024x599.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1024x599.png 1024w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-300x175.png 300w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-768x449.png 768w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1536x898.png 1536w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-2048x1198.png 2048w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1200x702.png 1200w, https://wp.hardcover.app/wp-content/uploads/2024/08/Server-Diagram-1980x1158.png 1980w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></figure>



<p>From 2021 to 2022 we continued on building like this. Some pages were getting slower, but we were able to ship fast. We continued innovating, but the app kept getting slower. As more readers joined, we were hitting our API servers <em>hard</em>, and we couldn‚Äôt cache anything at that level. If we wanted server side caching, we needed to move that to the server.</p>



<h3>An Wild App Router Appears</h3>



<p>In mid-2022, Next.js launched the App Router ‚Äì a new way to server side render Next.js apps. I loved the idea. It felt more like Rails which I was used to. We immediately starting migrating Hardcover to this approach.</p>



<p>We switched to fetching all data about facts and users to be fetched on the server using the app directory and React Server Components. This went surprisingly smooth! There were some rough days with next-auth and Apollo to get everything working, but we made it through.</p>



<p>At this point, we used the users API token on the server side to make request to the API ‚Äì&nbsp;the same token used on the client side. This ensured they would only see data they had access to. In my misunderstanding of Next.js‚Äôs caching, I thought those requests would be cached. Since Apollo‚Äôs GraphQL requests are POST requests, they weren‚Äôt (üò±).</p>



<p>Next.js had (has?) no clear tools to understand what was being cached. I could use log statements to debug this, but since Next.js was overriding <code>fetch</code> for their caching, all of my code would be run whether or not it was cached or not.</p>



<p>When the application was migrated from the Pages router to the App router in April 2024, it didn‚Äôt speed up as much as I hoped. Now I know it was because the cache wasn‚Äôt being used. Back then I didn‚Äôt know that. It wasn‚Äôt the massive improvement I was hoping for.</p>



<p>Two other things happened around this time that increased our frustration with Next.js and Vercel.</p>



<p>When we moved to the App router, our bill increased ‚Äì which was anticipated. What we didn‚Äôt expect was for a <a href="https://vercel.com/blog/improved-infrastructure-pricing">Pricing Change</a> the month we launched after months of building.</p>



<p>Our hosting bill grew from $30 in April to $142 by June, $354 in August. Hardcover was growing, but 10x cost increase in a few months was too much.</p>



<p>We tried using the <a href="https://www.npmjs.com/package/@neshca/cache-handler">@neshca/cache-handler</a> Redis cache handler for Next.js ‚Äì which did give us the most insight into what was being cached that we‚Äôd seen up until that point. However our bill continued to rise.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="334" src="https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09%E2%80%AFAM-1024x334.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09‚ÄØhttps://hardcover.app/blog/AM-1024x334.png 1024w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09‚ÄØhttps://hardcover.app/blog/AM-300x98.png 300w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09‚ÄØhttps://hardcover.app/blog/AM-768x250.png 768w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09‚ÄØhttps://hardcover.app/blog/AM-1536x500.png 1536w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09‚ÄØhttps://hardcover.app/blog/AM-1200x391.png 1200w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-11.51.09‚ÄØhttps://hardcover.app/blog/AM.png 1854w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></figure>



<p>We migrated to Google Cloud Run to see if it would be cheaper. For the first month or two is was! Our Google Cloud Bills dropped to $311, and then $286. but then continued to climb to $524 in February 2025.</p>



<p><em>Side note: the big orange charge was when someone attempted to download <a href="https://hardcover.app/blog/how-we-survived-10k-requests-second-switching-to-signed-urls" data-type="post" data-id="1801">every image from Google Cloud Storage</a>, which resulted in us moving from Google Cloud Storage to CloudFlare R2.</em></p>



<p>This chart wasn‚Äôt looking great if we wanted to reach profitability as a team. Alongside this, our application had gotten significantly slower ‚Äì both in development and on production. We‚Äôd started to using <code>&lt;Suspense&gt;</code> with code splitting for larger JS scripts, but our bundle size wasn‚Äôt budging without major changes.</p>



<p>On the local development side things were worse. As new team members joined, I‚Äôd have to apologize for how long it would take to load a single page ‚Äì often up to <em>a minute</em>. That was all compilation time on the Next.js server for our test page.</p>



<p>Next.js must‚Äôve been hearing this same feedback from other developers because they started working on <a href="https://nextjs.org/docs/app/api-reference/turbopack">Turbopack</a>, which speeds up compilation. I tried this every month or so, but I was never able to get it to work with Hardcover. I <a href="https://www.reddit.com/r/rails/comments/1i56kmn/comment/m81aom0/?utm_source=share&amp;utm_medium=web3x&amp;utm_name=web3xcss&amp;utm_term=1&amp;utm_content=share_button">hear it‚Äôs stable</a> as of the latest version, but we were already deep into the migration by that point.</p>



<p>At this point, we had the following problems with Next.js:</p>



<ul>
<li><strong>Unclear caching</strong>, which would need a large rewrite to change.</li>



<li><strong>Growing and unpredictable bills</strong> due to serverless architecture</li>



<li><strong>Slow development speeds</strong>, making even small changes take a long time.</li>
</ul>



<p>One additional problem wasn‚Äôt Next.js specific, but architecture related: I wanted to switch to getting server side data directly from a database connection rather than through GraphQL. I looked into Prisma, TypeORM and Sequelize to switch.</p>



<p>I had concerns about this approach with a serverless architecture. Our database has a connection limit, which meant we‚Äôd need a serverless limit anyways to make sure our database connection pool is sufficient. Either that or move to a cloud database like <a href="https://neon.tech/">Neon</a>, but at our DB size that would be $700/month minimum.</p>



<p>This was a realistic option to speed things up, but the slow development times and higher costs would have continued.</p>



<h2>If Not Next.js, What?</h2>



<p>By August 2024, after 3 years of development with Next.js, I wasn‚Äôt optimistic about the issues I‚Äôd encountered being addressed. I started looking into alternatives.</p>



<p>My goals for a ‚Äúbetter‚Äù version were ambitious:</p>



<ul>
<li>Continue to render everything on the server ‚Äì we need SSR for SEO.</li>



<li>Switch to direct database connection for fetching all data.</li>



<li>Continue to use React.js for the front-end.</li>
</ul>



<p>This led to two real options: Remix or Ruby on Rails. I looked into Remix for about one day before I realized the learning curve was more than I‚Äôd be comfortable with for this type of a migration.</p>



<p>When it came to running React with Rails, I found three options:</p>



<ul>
<li>The <a href="https://github.com/reactjs/react-rails">react-rails</a> gem</li>



<li>The <a href="https://github.com/shakacode/react_on_rails">react_on_rails</a> gem</li>



<li>The <a href="https://github.com/inertiajs/inertia-rails">inertia-rails</a> gem</li>
</ul>



<p>I gave each of these a try, building a proof of concept with each. There were parts of each I loved. I think <a href="https://github.com/shakacode/react_on_rails">react_on_rails</a> has the chance at being the fastest of these for the user ‚Äì but may need the pro version and some support.<br></p>



<h2>Enter Inertia.js</h2>



<p><a href="https://inertiajs.com/">Inertia.js</a> landed in the sweet spot of performance, SSR and just <em>getting out the way</em>. If you follow me on <a href="https://bsky.app/profile/adamfortuna.com">BlueSky</a>, you‚Äôve no doubt heard me talking about Inertia over the last few months. üòÇ</p>



<p>I wasn‚Äôt expecting a <a href="https://laravel.com/">Laravel</a> project, which was inspired by Rails, to end up developing something I loved more than The Rails Way. DHH‚Äôs software choices have usually been in step with my own (<em>emphasis on software</em>), but we differ when it comes to TypeScript and the front-end. The direction Laravel went with Inertia.js is such a great choice, and I really enjoy building with this paradigm. Here‚Äôs how it works in practice:</p>



<p>Before breaking into the individual parts, let‚Äôs look at Inertia.js at a high level to get a better idea of what it even does. Here‚Äôs how that works in practice for a request ‚Äì in this example, I‚Äôll use the <a href="https://hardcover.app/">Hardcover homepage</a>.</p>



<p>This page shows a bunch of static data, trending books, a prompt, a Hardcover Live and a few blog posts. All of this data can change whenever, but it makes sense to cache it. Here‚Äôs what that entire request looks like:</p>



<h3>A Rails + Inertia.js Request</h3>



<p>At the controller level we do exactly what you‚Äôd expect from a Rails application. We have a route which handles this endpoint:</p>



<div>
<p>config/routes.rb</p>


<pre aria-describedby="shcb-language-1" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code>Rails.application.routes.draw <span>do</span>
  namespace <span>:clientverse</span>, <span>path:</span> <span>"/"</span> <span>do</span>
    namespace <span>:pages</span>, <span>path:</span> <span>"/"</span> <span>do</span>
      get <span>:home</span>
    <span>end</span>
  <span>end</span>
<span>end</span></code></span><small id="shcb-language-1"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>We also scope everything that‚Äôs shown to the user under a ‚Äúclientverse‚Äù namespace. That allows us to have a <code>pages_controller.rb</code> which extends from a <code>base_controller.rb</code> for all Inertia.js generated pages.</p>



<p>That <code>base_controller.rb</code> is relatively small.</p>



<div>
<p>app/controllers/clientverse/base_controller.rb</p>


<pre aria-describedby="shcb-language-2" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code><span><span>module</span> <span>Clientverse</span></span>
  <span><span>class</span> <span>BaseController</span> &lt; ApplicationController</span>
    <span>include</span> ApplicationHelper
    <span>include</span> ReduxHelper
    <span>include</span> UserHelper
    <span>include</span> ErrorHelper

    before_action <span>:confirm_user</span>
    before_action <span>:confirm_onboarding</span>
    before_bugsnag_notify <span>:add_user_info_to_bugsnag</span>

    helper_method <span>:global_variables</span>
    helper_method <span>:metadata</span>
    helper_method <span>:html_attribute</span>
    helper_method <span>:theme</span>

    inertia_share <span>do</span>
      {
        <span>generatedAt:</span> Time.now.to_i,
        <span>pathName:</span> request.path,
        <span>metadata:</span> default_metadata,
        <span>rootState:</span> root_store,
        <span>userBookStatusMap:</span> InertiaRails.optional { user_books_status_map },
        <span>flash:</span> flash.to_h <span>||</span> {}
      }
    <span>end</span>
  <span>end</span>
<span>end</span></code></span><small id="shcb-language-2"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>Most of these helpers aren‚Äôt important for this example, but they‚Äôve come in handy. The important one here is the <code>inertia_share</code> call. That allows us to add that data to <em>every</em> Inertia request that comes in. The userBookStatusMap includes the logged in readers status on every book, which we only use that when requested.</p>



<p>The <code>pages_controller.rb</code> extends from this.</p>



<div>
<p>app/controllers/clientverse/pages_controller.rb</p>


<pre aria-describedby="shcb-language-3" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code><span><span>module</span> <span>Clientverse</span></span>
  <span><span>class</span> <span>PagesController</span> &lt; BaseController</span>
    <span><span>def</span> <span>home</span></span>
      render <span>inertia:</span> <span>'clientverse/pages/home'</span>, <span>props:</span> home_props
    <span>end</span>

    private

    <span><span>def</span> <span>home_props</span></span>
      Rails.cache.fetch(<span>"pages/home"</span>, <span>expires_in:</span> <span>1</span>.hour) <span>do</span> 
        lives = WordPressService.new.lives(<span>limit:</span> <span>1</span>)
        {
          <span>featuredPrompt:</span> PromptSerializers::PromptSerializer.one(Prompt.find_by(<span>slug:</span> <span>"what-are-your-favorite-books-of-all-time"</span>)),
          <span>trendingBooks:</span> BookSerializers::BookBylineSerializer.many(TrendingBookService.<span>for</span>(<span>start_date:</span> <span>1</span>.month.ago, <span>limit:</span> <span>12</span>)),
          <span>live:</span> lives.empty? ? <span>nil</span> : WordPressSerializers::LiveSerializer.one(lives.first),
          <span>posts:</span> WordPressSerializers::PostSerializer.many(WordPressService.new.posts(<span>limit:</span> <span>3</span>)),
          <span>metadata:</span> default_metadata
        }
      <span>end</span>
    <span>end</span>
  <span>end</span>
<span>end</span></code></span><small id="shcb-language-3"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>When the root <code>/</code> route is accessed, this <code>home</code> method will be called. That will render the React.js component at <code>clientverse/pages/home.tsx</code> passing in the props returned from <code>home_props</code>.</p>



<p>The entire props are wrapped in a <code>Rails.cache.fetch</code> block. This decade (+) old feature of Rails still feels like magic. It‚Äôll check the cache (in our case Solid Cache stored in Postgres) for the cache key ‚Äúpages/home‚Äù within the expiration. If it exists, it‚Äôll return that and <strong>never run the code in the block</strong>.</p>



<p>If that cache key doesn‚Äôt exist, or it‚Äôs past the expiration date, it‚Äôll run the code, save it to cache and return it.</p>



<p><strong>The end result is that loading the entire homepage only takes one query</strong> (if you‚Äôre logged out). This makes it super quick.</p>



<p>Ok, we know what to render for this specific page. But we need a place to render this! For that we use what you‚Äôd expect for any Rails app: the <code>app/views/application_layout.html.erb</code> file.</p>



<div>
<p><code>app/views/application_layout.html.erb</code></p>


<pre aria-describedby="shcb-language-4" data-shcb-language-name="Ruby" data-shcb-language-slug="ruby"><span><code>&lt;!DOCTYPE html&gt;
&lt;html lang=<span>"en"</span> <span><span>class</span>="<span>h</span>-<span>full</span> <span>antialiased</span> &lt;%= <span>theme</span> === "<span>dark</span>" ? "<span>dark</span>" : "" %&gt;"&gt;</span>
  &lt;head&gt;
    &lt;title inertia&gt;&lt;%= metadata[<span>:title</span>] ? <span>"<span>#{metadata[<span>:title</span>]}</span><span>#{metadata[<span>:title_template</span>]}</span>"</span> : metadata[<span>:title_default</span>] %&gt;&lt;<span>/title&gt;
    
    &lt;%= csp_meta_tag %&gt;
    &lt;%= csrf_meta_tags %&gt;
    &lt;%= inertia_ssr_head %&gt;
    &lt;%= vite_client_tag %&gt;
    &lt;%= vite_javascript_tag "application.tsx", async: true %&gt;
    &lt;%= vite_stylesheet_tag "application" %&gt;
    &lt;%= vite_react_refresh_tag %&gt;
  &lt;/head</span>&gt;
  &lt;body&gt;
    &lt;%= <span>yield</span> %&gt;
  &lt;<span>/body&gt;
&lt;/html</span>&gt;</code></span><small id="shcb-language-4"><span>Code language:</span> <span>Ruby</span> <span>(</span><span>ruby</span><span>)</span></small></pre></div>



<p>This file still feels a bit magical to me. There are CSRF protection, hot module reloading, SSR hacks, and other custom scripts to work with React.</p>



<p>I expected to need a root element here, but that‚Äôs not the case. The entire page you render will be filled into the <code>&lt;%= yield %&gt;</code> section.</p>



<p>For what shows up there, that‚Äôs the file we rendered from the&nbsp;controller, in this case <code>app/javascript/pages/clientverse/pages/home.tsx</code>. Here‚Äôs what that looks like for us:</p>



<div>
<p><code>app/javascript/pages/clientverse/pages/home.tsx</code>.</p>


<pre aria-describedby="shcb-language-5" data-shcb-language-name="TypeScript" data-shcb-language-slug="typescript"><span><code><span>import</span> Hero <span>from</span> <span>"components/marketing/home/Hero"</span>;
<span>import</span> SubHeaderFeatures <span>from</span> <span>"components/marketing/home/SubHeaderFeatures"</span>;
<span>import</span> TrendingBooks <span>from</span> <span>"components/marketing/home/TrendingBooks"</span>;
<span>import</span> TrackBooks <span>from</span> <span>"components/marketing/home/TrackBooks"</span>;
<span>import</span> { DefaultLayoutWrapper } <span>from</span> <span>"layouts/DefaultLayout"</span>;
<span>import</span> AdditionalSections <span>from</span> <span>"components/marketing/home/AdditionalSections"</span>;

<span><span>function</span> <span>HomeIndex</span>(<span></span>) </span>{
  <span>return</span> (
    &lt;main&gt;
      &lt;Hero /&gt;

      &lt;div className=<span>"h-4"</span> /&gt;

      &lt;SubHeaderFeatures /&gt;

      &lt;div className=<span>"h-2"</span> /&gt;

      &lt;TrendingBooks /&gt;

      &lt;div className=<span>"h-12"</span> /&gt;

      &lt;TrackBooks /&gt;

      &lt;div className=<span>"h-6"</span> /&gt;

      &lt;AdditionalSections /&gt;
    &lt;<span>/main&gt;
  );
}

HomeIndex.layout = DefaultLayoutWrapper;
export default HomeIndex;
</span></code></span><small id="shcb-language-5"><span>Code language:</span> <span>TypeScript</span> <span>(</span><span>typescript</span><span>)</span></small></pre></div>



<p>That DefaultLayoutWrapper is doing a lot of work of wrapping the the entire application. We have that code in almost every root page shown. This is one area of Inertia.js I haven‚Äôt found a good solution for. According to the docs, it‚Äôs supposed to be possible to set a default layout, but I haven‚Äôt gotten that to work (yet).</p>



<p>We‚Äôve found it‚Äôs helpful to create a Type for everything that‚Äôs passed into React for each request as well. This could use <a href="https://github.com/ElMassimo/oj_serializers">Oj Serializers</a> (my preferred serialization library), or written by hand. I prefer written by hand, that way the <code>home.props.ts</code> file can live right next to the <code>home.tsx</code> file.</p>



<div>
<p>app/javascript/pages/home.props.ts</p>


<pre aria-describedby="shcb-language-6" data-shcb-language-name="TypeScript" data-shcb-language-slug="typescript"><span><code><span>import</span> BlogPostType, { BlogLiveType } <span>from</span> <span>"types/BlogPostType"</span>;
<span>import</span> { BookSerializersBookByline, PromptSerializersPrompt } <span>from</span> <span>"types/serializers"</span>;

<span>type</span> HomeProps = {
  featuredPrompt: PromptSerializersPrompt;
  live: BlogLiveType;
  posts: BlogPostType[];
  trendingBooks: BookSerializersBookByline[];
}
<span>export</span> <span>default</span> HomeProps;</code></span><small id="shcb-language-6"><span>Code language:</span> <span>TypeScript</span> <span>(</span><span>typescript</span><span>)</span></small></pre></div>



<p>Side note: We use the Ruby <a href="https://github.com/ElMassimo/types_from_serializers">types_from_serializers</a> gem to generate TypeScript types for all serializers. That allows us to set a type in a serializer and see it across the entire stack. ü§Ø I owe <a href="https://github.com/ElMassimo">M√°ximo Mussini</a> big for how much time this has saved (and he wrote <a href="https://github.com/ElMassimo/vite_ruby">vite_ruby</a> too! A real Ruby Hero).</p>



<p>In this component we‚Äôre not actually accepting any of these props! We passed them, but we didn‚Äôt use them. We can use them wherever we need them. For example, in the <code>&lt;TrendingBooks /&gt;</code> component:</p>



<div>
<p>app/javascript/components/marketing/home/TrendingBooks</p>


<pre aria-describedby="shcb-language-7" data-shcb-language-name="TypeScript" data-shcb-language-slug="typescript"><span><code><span>import</span> { usePage } <span>from</span> <span>"@inertiajs/react"</span>;
<span>import</span> BookTrendingGroup <span>from</span> <span>"components/BookGroup/groups/BookTrendingGroup"</span>;
<span>import</span> { BookTrendingContextType } <span>from</span> <span>"components/BookGroup/types"</span>;
<span>import</span> Container <span>from</span> <span>"hardcover-ui/components/Container"</span>;
<span>import</span> HomeProps <span>from</span> <span>"pages/clientverse/pages/home.props"</span>;

<span>const</span> context: BookTrendingContextType = {
  link: <span>"/trending/recent"</span>,
  duration: <span>"90day"</span>,
};

<span>export</span> <span>default</span> <span><span>function</span> <span>TrendingBooks</span>(<span></span>) </span>{
  <span>const</span> { trendingBooks } = usePage&lt;HomeProps&gt;().props;
  <span>if</span> (trendingBooks.length === <span>0</span>) {
    <span>return</span> <span>false</span>;
  }

  <span>return</span> (
    &lt;Container size=<span>"md"</span> variant=<span>"layout"</span> className=<span>"mt-12 overflow-hidden"</span>&gt;
      &lt;BookTrendingGroup size=<span>"lg"</span> books={trendingBooks} context={context} /&gt;
    &lt;<span>/Container&gt;
  );
}
</span></code></span><small id="shcb-language-7"><span>Code language:</span> <span>TypeScript</span> <span>(</span><span>typescript</span><span>)</span></small></pre></div>



<p>The <code>usePage</code> hook will grab that argument from the passed in props at the highest level and use them. The same can be done in our Layout page to get the users data, like when we show the current users avatar when logged in.</p>



<p>This covers most of the render cycle. The one missing piece is the entry point ‚Äì that <code>application.tsx</code> script included in the layout. This script gave me some of the most headaches, so I‚Äôm going to include our exact one here in case it helps someone else.</p>



<div>
<p>app/javascript/entrypoints/application.tsx</p>


<pre aria-describedby="shcb-language-8" data-shcb-language-name="TypeScript" data-shcb-language-slug="typescript"><span><code><span>// Add this polyfill to fix a warning with Redux</span>
<span>import</span> <span>'symbol-observable'</span>;
<span>import</span> { createInertiaApp } <span>from</span> <span>'@inertiajs/react'</span>;
<span>import</span> { createElement } <span>from</span> <span>'react'</span>
<span>import</span> { createRoot, hydrateRoot } <span>from</span> <span>'react-dom/client'</span>

createInertiaApp({
  resolve: <span>(<span><span>name</span></span>) =&gt;</span> {
    <span>const</span> pages = <span>import</span>.meta.glob(<span>'../pages/**/*.tsx'</span>)
    <span>return</span> pages[<span>`../pages/<span>${name}</span>.tsx`</span>]();
  },

  setup({ el, App, props }) {
    <span>if</span>(<span>import</span>.meta.env.VITE_SSR) {
      hydrateRoot(el <span>as</span> unknown <span>as</span> Element, &lt;App {...props} /&gt; <span>as</span> unknown <span>as</span> <span>any</span>) 
    } <span>else</span> {
      <span>const</span> root = createRoot(el)
      root.render(createElement(App, props) <span>as</span> unknown <span>as</span> <span>any</span>)
    }
  },
});</code></span><small id="shcb-language-8"><span>Code language:</span> <span>TypeScript</span> <span>(</span><span>typescript</span><span>)</span></small></pre></div>



<p>This will make every page available and render it. In production, we set the VITE_SSR variable, which switches this to hydrate mode. Just ignore the <code>unknown as any</code> statement. üòÇ</p>



<p>If you‚Äôve had success with other solutions here, I‚Äôd love to chat.</p>



<h3>The Vite Server</h3>



<p>Inertia works extremely well with Vite. In our case, we have a separate Vite process that runs a Vite server locally. Here‚Äôs our local <code>docker-compose.yml</code> file for this.</p>



<div>
<p>docker-compose.yml</p>


<pre aria-describedby="shcb-language-9" data-shcb-language-name="PHP" data-shcb-language-slug="php"><span><code>services:
  rails:
    build:
      context: ./rails
    depends_on:
      - postgres
      - redis
      - typesense
    healthcheck:
      test: [<span>"CMD-SHELL"</span>, <span>"wget -qO- http://localhost:3000/up || exit 1"</span>]
      interval: <span>5</span>s
      timeout: <span>3</span>s
      retries: <span>5</span>
    container_name: hardcover-rails
    command: bash -c <span>"bundle install &amp;&amp; yarn install &amp;&amp; rm -f tmp/pids/server.pid &amp;&amp; bundle exec rake db:migrate &amp;&amp; bin/rails s -p 3000 -b '0.0.0.0'"</span>
    stdin_open: <span>true</span>
    tty: <span>true</span>
    environment:
      RAILS_PRIMARY_KEY: ${RAILS_PRIMARY_KEY}
      VITE_RUBY_HOST: <span>"vite"</span>
    restart: always
    ports:
      - <span>3000</span>:<span>3000</span>
    volumes:
      - ./rails:/app

  vite:
    build:
      context: ./rails
    container_name: hardcover-vite
    command: bash -c <span>"yarn install &amp;&amp; bin/vite dev"</span>
    environment:
      VITE_ENV: development
      VITE_RUBY_HOST: <span>0.0</span><span>.0</span><span>.0</span>
    restart: always
    ports:
      - <span>3036</span>:<span>3036</span>
    volumes:
      - ./rails:/app</code></span><small id="shcb-language-9"><span>Code language:</span> <span>PHP</span> <span>(</span><span>php</span><span>)</span></small></pre></div>



<p>On production, the Vite server runs alongside Rails as an accessory deployed through Kamal.</p>



<div>
<p>config/deploy.production.yml</p>


<pre aria-describedby="shcb-language-10" data-shcb-language-name="PHP" data-shcb-language-slug="php"><span><code><span># Name of the container image.</span>
image: registry.digitalocean.com/hardcover/rails-production

<span># Configure builder setup.</span>
builder:
  arch: amd64
  dockerfile: Dockerfile.production

<span># Deploy to these servers (production servers).</span>
servers:
  web:
    hosts:
      - <span>1.2</span><span>.3</span><span>.1</span> <span># app-1</span>
      - <span>1.2</span><span>.3</span><span>.2</span> <span># app-2</span>
      - <span>1.2</span><span>.3</span><span>.3</span> <span># app-3</span>
      - <span>1.2</span><span>.3</span><span>.4</span> <span># app-4</span>
    cmd: ./bin/rails server -b <span>0.0</span><span>.0</span><span>.0</span> -p <span>80</span>
    options:
      memory: <span>2</span>g
  vite:
    hosts:
      - <span>1.2</span><span>.3</span><span>.1</span> <span># app-1</span>
      - <span>1.2</span><span>.3</span><span>.2</span> <span># app-2</span>
      - <span>1.2</span><span>.3</span><span>.3</span> <span># app-3</span>
      - <span>1.2</span><span>.3</span><span>.4</span> <span># app-4</span>
    cmd: bin/vite ssr
    options:
      network-alias: vite_ssr
      memory: <span>1</span>g
  worker:
    hosts:
      - <span>4.3</span><span>.2</span><span>.1</span> <span># production-worker-1</span>
    cmd: bundle exec sidekiq -e production -C config/sidekiq.yml
    proxy: <span>false</span>
    options:
      memory: <span>4</span>g
    env:
      clear:
        RUN_MIGRATIONS: <span>true</span>
        SIDEKIQ_CONCURRENCY: <span>50</span>
  workers:
    hosts:
      - <span>4.3</span><span>.2</span><span>.2</span> <span># production-worker-2</span>
    cmd: bundle exec sidekiq -e production -C config/sidekiq.yml
    proxy: <span>false</span>
    options:
      memory: <span>4</span>g
    env:
      clear:
        RUN_MIGRATIONS: <span>false</span>
        SIDEKIQ_CONCURRENCY: <span>25</span>

proxy: 
  ssl: <span>false</span>
  app_port: <span>80</span>
  healthcheck:
    path: /up
    interval: <span>3</span>
    timeout: <span>120</span>

<span># Environment variables specific to production.</span>
env:
  clear:
    RAILS_MAX_THREADS: <span>6</span>
    RAILS_ENV: production
    PORT: <span>80</span>
    VITE_RUBY_HOST: vite_ssr
    VITE_ENV: production
    VITE_SSR: <span>true</span>
  secret:
    - RAILS_PRIMARY_KEY</code></span><small id="shcb-language-10"><span>Code language:</span> <span>PHP</span> <span>(</span><span>php</span><span>)</span></small></pre></div>



<p>Combined that with a production Docker image that runs <code>VITE_SSR</code>=‚Äùtrue‚Äù <code>./bin/vite build --ssr</code> on deploy, and we only need to generate the main assets once.</p>



<p>This setup allows the Rails server to talk to the Vite server to get what it needs. Sometimes that‚Äôs generating a page using SSR, other could mean just providing the CSS and JS needed to run the page.</p>



<p>Similar to any Rails Application, we set an asset host which all JS and CSS goes through ( <code>config.asset_host = "https://static.hardcover.app"</code> ). This host is cached at the CloudFlare level with long-expiration dates.</p>



<p>You might also notice the <code>RUN_MIGRATIONS</code> part there. That‚Äôs used within our <code>bin/docker-entrypoint</code> script to determine which server runs migrations ‚Äì which only needs to happen on one server.</p>



<div>
<p>bin/docker-entrypoint</p>


<pre aria-describedby="shcb-language-11" data-shcb-language-name="PHP" data-shcb-language-slug="php"><span><code><span>#!/bin/bash -e</span>

<span># Enable jemalloc for reduced memory usage and latency</span>
<span>if</span> [ -z <span>"${LD_PRELOAD+x}"</span> ]; then
    LD_PRELOAD=$(find /usr/lib -name libjemalloc.so<span>.2</span> -<span>print</span> -quit)
    export LD_PRELOAD
fi

<span># Only run database migrations on a specific server</span>
<span>if</span> [ <span>"$RUN_MIGRATIONS"</span> = <span>"true"</span> ]; then
  <span>echo</span> <span>"Preparing database..."</span>
  ./bin/rails db:prepare
<span>else</span>
  <span>echo</span> <span>"Skipping database preparation on this server."</span>
fi

exec <span>"$@"</span>
</code></span><small id="shcb-language-11"><span>Code language:</span> <span>PHP</span> <span>(</span><span>php</span><span>)</span></small></pre></div>



<p>Lastly, we have our Dockerfile that connects everything.</p>



<div>
<p>config/Dockerfile.production</p>


<pre aria-describedby="shcb-language-12" data-shcb-language-name="PHP" data-shcb-language-slug="php"><span><code><span># syntax=docker/dockerfile:1</span>
<span># check=error=true</span>

<span># This Dockerfile is designed for production, not development. Use with Kamal or build'n'run by hand:</span>
<span># docker build -t hardcover .</span>
<span># docker run -d -p 80:80 -e RAILS_PRIMARY_KEY=&lt;value from config/credentials/production.key&gt; --name hardcover-rails-production hardcover-rails-production</span>

<span># For a containerized dev environment, see Dev Containers: https://guides.rubyonrails.org/getting_started_with_devcontainer.html</span>

<span># Make sure RUBY_VERSION matches the Ruby version in .ruby-version</span>
ARG RUBY_VERSION=<span>3.3</span><span>.5</span>
FROM docker.io/library/ruby:$RUBY_VERSION <span>AS</span> base

<span># Rails app lives here</span>
WORKDIR /rails

<span># Install base packages</span>
RUN apt-get update -qq &amp;&amp; \
    apt-get install --no-install-recommends -y curl libjemalloc2 libvips sqlite3 libpq-dev &amp;&amp; \
    rm -rf /<span>var</span>/lib/apt/lists /<span>var</span>/cache/apt/archives

<span># Set production environment</span>
ENV RAILS_ENV=<span>"production"</span> \
    BUNDLE_DEPLOYMENT=<span>"1"</span> \
    BUNDLE_PATH=<span>"/usr/local/bundle"</span> \
    BUNDLE_WITHOUT=<span>"development:test"</span>

    <span># Install JavaScript dependencies</span>
ARG NODE_VERSION=<span>22.11</span><span>.0</span>
ARG YARN_VERSION=<span>1.22</span><span>.22</span>
ENV PATH=/usr/local/node/bin:$PATH
RUN curl -sL https:<span>//github.com/nodenv/node-build/archive/master.tar.gz | tar xz -C /tmp/ &amp;&amp; \</span>
    /tmp/node-build-master/bin/node-build <span>"${NODE_VERSION}"</span> /usr/local/node &amp;&amp; \
    npm install -g yarn@$YARN_VERSION &amp;&amp; \
    rm -rf /tmp/node-build-master

<span># Throw-away build stage to reduce size of final image</span>
FROM base <span>AS</span> build

<span># Install packages needed to build gems</span>
RUN apt-get update -qq &amp;&amp; \
    apt-get install --no-install-recommends -y build-essential git libpq-dev node-gyp pkg-config &amp;&amp; \
    rm -rf /<span>var</span>/lib/apt/lists /<span>var</span>/cache/apt/archives

<span># Install application gems</span>
COPY Gemfile Gemfile.lock ./
COPY gems/ ./gems
RUN bundle install &amp;&amp; \
    rm -rf ~/.bundle/ <span>"${BUNDLE_PATH}"</span>/ruby<span>/*/cache "${BUNDLE_PATH}"/ruby/*/</span>bundler/gems<span>/*/.git &amp;&amp; \
    bundle exec bootsnap precompile --gemfile


# Install node modules // [!code ++]
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Copy application code
COPY . .

# Precompile bootsnap code for faster boot times
RUN bundle exec bootsnap precompile app/ lib/

# Precompiling assets for production without requiring secret RAILS_PRIMARY_KEY
RUN SECRET_KEY_BASE_DUMMY=1 VITE_RUBY_HOST="vite_ssr" VITE_ASSET_URL="https://storage.googleapis.com/hardcover" VITE_BUGSNAG_KEY="2667973d1eae42fd4fa3049d0abc7274" VITE_CDN_URL="https://assets.hardcover.app" VITE_ENV="production" VITE_GRAPHQL_URL="https://api.hardcover.app/v1/graphql" VITE_RESIZE_URL="https://img.hardcover.app" VITE_SSR="true" VITE_TYPESENSE_KEY="7JRcb63AvYIo2WJvE3IzH4f8j1z9fHcC" VITE_TYPESENSE_URL="https://search.hardcover.app" ./bin/rails assets:precompile
RUN SECRET_KEY_BASE_DUMMY=1 VITE_RUBY_HOST="vite_ssr" VITE_ASSET_URL="https://storage.googleapis.com/hardcover" VITE_BUGSNAG_KEY="2667973d1eae42fd4fa3049d0abc7274" VITE_CDN_URL="https://assets.hardcover.app" VITE_ENV="production" VITE_GRAPHQL_URL="https://api.hardcover.app/v1/graphql" VITE_RESIZE_URL="https://img.hardcover.app" VITE_SSR="true" VITE_TYPESENSE_KEY="7JRcb63AvYIo2WJvE3IzH4f8j1z9fHcC" VITE_TYPESENSE_URL="https://search.hardcover.app" ./bin/vite build --ssr

# Disable deleting node modules to test puppeteer
# RUN rm -rf node_modules

# Final stage for app image
FROM base

# Copy built artifacts: gems, application
COPY --from=build "${BUNDLE_PATH}" "${BUNDLE_PATH}"
COPY --from=build /rails /rails
COPY public/robots.production.txt public/robots.txt

# Run and own only the runtime files as a non-root user for security
RUN groupadd --system --gid 1000 rails &amp;&amp; \
    useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash &amp;&amp; \
    chown -R rails:rails db log storage tmp
USER 1000:1000

# Entrypoint prepares the database.
ENTRYPOINT ["/rails/bin/docker-entrypoint"]

# Start server
EXPOSE 80
</span></code></span><small id="shcb-language-12"><span>Code language:</span> <span>PHP</span> <span>(</span><span>php</span><span>)</span></small></pre></div>



<p>I don‚Äôt love this, but it works. We have a staging one that‚Äôs pretty similar. I suspect there would be better ways to send over the VITE public variables. I compile the docker image and upload it as part of a Kamal release using the command:</p>


<pre><span><code>kamal deploy build --push -d production</code></span></pre>


<p>I switched to to a Makefile command and added deployment to it.</p>



<div>
<p>Makefile</p>


<pre aria-describedby="shcb-language-13" data-shcb-language-name="CSS" data-shcb-language-slug="css"><span><code># <span>.PHONY</span>: <span>deploy</span>

<span>deploy</span>:
	<span>kamal</span> <span>deploy</span> <span>build</span> <span>--push</span> <span>-d</span> <span>production</span> &amp;&amp; <span>kamal</span> <span>deploy</span> <span>-d</span> <span>production</span>
<span>deploy-staging</span>:
	<span>kamal</span> <span>deploy</span> <span>build</span> <span>--push</span> <span>-d</span> <span>staging</span> &amp;&amp; <span>kamal</span> <span>deploy</span> <span>-d</span> <span>staging</span>
</code></span><small id="shcb-language-13"><span>Code language:</span> <span>CSS</span> <span>(</span><span>css</span><span>)</span></small></pre></div>



<p>With this, I can run <code>make</code> or <code>make deploy</code> to deploy the app to production, or <code>make deploy-staging </code>to send my local workspace there.</p>



<p>Since this upload happens from my computer rather than a post commit hook, it does need to be run locally. Eventually I‚Äôll move this to a GitHub action.</p>



<h2>Still Room For Improvement</h2>



<p>This setup isn‚Äôt perfect. There are a few parts that still are a little rough around the edges.</p>



<p>As I mentioned earlier, I haven‚Äôt successfully gotten <strong><a href="https://inertia-rails.dev/guide/pages#default-layouts">shared layouts</a></strong> to work. That does mean each request will re-rendering the entire page ‚Äì not just the subparts relevant to the current route. That was OK for us, since most route changes are an entire page update. It does mean the header/footer get re-rendered. This happens client-side, so it‚Äôs not a full page reload, just a content reload. It‚Äôs more of a React component re-render than a full reload.</p>



<p><strong>SSR mode</strong> has been tough to debug. I haven‚Äôt found a way to easily get it running without doing a full compile, setting a bunch of variables and reproducing production. This makes debugging SSR hydration errors on productions tricky.</p>



<p>There‚Äôs <strong>limited documentation</strong> for Inertia.js and especially Ruby on Rails with Inertia. The <a href="https://inertia-rails.dev/">Inertia Rails gem docs</a> are AMAZING and did handle just about all of my questions. Sometimes it‚Äôs tricky to understand if a problem is in Rails, Inertia-Rails, Inertia.js, React.js or Vite. The Inertia.js Discord has been GREAT. Each time I‚Äôve asked a question I‚Äôve had an answer within minutes (which were always my problem, not a framework issue).</p>



<p>Switching from using <strong>Promises</strong> to control <code><strong>Suspense</strong></code> layers to <code>InertiaRails.optional</code> with <code>import { Deferred } from '@inertiajs/react'</code> has felt a bit weird. It‚Äôs effectively the same, but it‚Äôs the React Way. I guess I‚Äôm already abandoning the Ruby Way, so I can‚Äôt be dogmatic about the React Way either. üòÖ</p>



<h2>Railsy React</h2>



<p>What I love about this setup is that I‚Äôm able to generate everything using familiar Ruby and Rails tools, and then use React.js for the entire front-end. There‚Äôs a lot I didn‚Äôt have to do. There‚Äôs no React Router, since it uses the Ruby on Rails Router. In our case, we just needed to change from using <code>next/link</code> to <code>import { Link } from '@inertiajs/react'</code> and it just worked.</p>



<p>I‚Äôm excited to use the <code>InertiaRails.optional</code> feature more. For example, on a Book Page we could send down all information about the book immediately (from a cache), then generate everything user-specific and send that down later. This is the Inertia.js equivalent of a streaming response. It‚Äôs managed by JS, so it wouldn‚Äôt quite by Streaming SSR (which is handled by the server), but it‚Äôs close. If you‚Äôre only using it for non-SEO data (as we are) then it effectively the same.</p>



<p>One thing we‚Äôre not doing is hitting our Rails API directly from the front-end (except in a few Devise-related cases). We have a Hasura GraphQL API that handles most requests. This means we‚Äôre not leveraging many other wonderful Inertia.js options ‚Äì forms, flashes, file uploads and many other things that begin with F.</p>


<div>
<figure><img loading="lazy" decoding="async" width="1024" height="784" src="https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13%E2%80%AFPM-1024x784.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-1024x784.png 1024w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-300x230.png 300w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-768x588.png 768w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-1536x1176.png 1536w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-2048x1568.png 2048w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-1200x919.png 1200w, https://wp.hardcover.app/wp-content/uploads/2025/03/Screenshot-2025-03-27-at-4.20.13‚ÄØhttps://hardcover.app/blog/PM-1980x1516.png 1980w" sizes="auto, (max-width: 1024px) 100vw, 1024px"><figcaption>The architecture we‚Äôre building to. We‚Äôre here now aside from the 2nd API server and Follower database.</figcaption></figure></div>


<p>This is where we‚Äôre headed to from an infrastructure level. We‚Äôre not quite there yet, but we‚Äôre close!</p>



<h2>How‚Äôd This Change Impact Hardcover?</h2>



<p>We deployed this migration from Next.js to Rails on March 18, 2025. I‚Äôd already setup all the servers, making for an easier migration than I expected. We‚Äôve had a bunch of bugs I‚Äôve been working on, but that‚Äôll be fixed in time.</p>



<p>Almost immediately Google stated showing Hardcover to more readers. That was a sudden, and welcomed surprise.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="316" src="https://wp.hardcover.app/wp-content/uploads/2025/04/Performance-1024x316.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2025/04/Performance-1024x316.png 1024w, https://wp.hardcover.app/wp-content/uploads/2025/04/Performance-300x93.png 300w, https://wp.hardcover.app/wp-content/uploads/2025/04/Performance-768x237.png 768w, https://wp.hardcover.app/wp-content/uploads/2025/04/Performance-1536x474.png 1536w, https://wp.hardcover.app/wp-content/uploads/2025/04/Performance-1200x370.png 1200w, https://wp.hardcover.app/wp-content/uploads/2025/04/Performance.png 1634w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></figure>



<p>That was likely because of our increased Google Pagespeed score.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="877" src="https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34%E2%80%AFAM-1024x877.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34‚ÄØhttps://hardcover.app/blog/AM-1024x877.png 1024w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34‚ÄØhttps://hardcover.app/blog/AM-300x257.png 300w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34‚ÄØhttps://hardcover.app/blog/AM-768x658.png 768w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34‚ÄØhttps://hardcover.app/blog/AM-1536x1315.png 1536w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34‚ÄØhttps://hardcover.app/blog/AM-1200x1027.png 1200w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.41.34‚ÄØhttps://hardcover.app/blog/AM.png 1766w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></figure>



<p>This was <em>considerably</em> faster than Next.js (I should‚Äôve taken a screenshot before!). The Total Blocking Time was usually over one second ‚Äì which was one part we couldn‚Äôt seem to improve. When we moved from Vercel to Google Cloud Run that Total Blocking time even went up a bit ‚Äì likely because of Vercel‚Äôs distributed cloud (I think?). Seeing this go down has been amazing. ü§Ø</p>



<p>We‚Äôre still figuring out how these changes impact readers. As we fix bugs, the site is becoming more stable and just <em>fun to use</em>. Over the last few days we‚Äôve seen visit duration spike to almost 6 minutes ‚Äì up from 3 minutes. It‚Äôs too soon to see if this is a long-term trend, but it‚Äôs nice to see this move in that direction.</p>



<figure><img loading="lazy" decoding="async" width="1024" height="515" src="https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14%E2%80%AFAM-1024x515.png" alt="" srcset="https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-1024x515.png 1024w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-300x151.png 300w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-768x386.png 768w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-1536x772.png 1536w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-2048x1029.png 2048w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-1200x603.png 1200w, https://wp.hardcover.app/wp-content/uploads/2025/04/Screenshot-2025-04-05-at-11.44.14‚ÄØhttps://hardcover.app/blog/AM-1980x995.png 1980w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></figure>



<p>The number of readers signing up for Hardcover has been stable throughout this migration ‚Äì which is good news. Considering traffic has been similar, I‚Äôd expect signups to be similar as well.</p>



<p>Next steps will be fixing more bugs, cleaning up a few slow pages, and a lot more marketing so more readers can find us. If you can share Hardcover or this post, that would be a huge help. üìö</p>



<h2>Next Article</h2>



<p>In the next article in this series, I‚Äôll talk about Moving from the Cloud to the Server ‚Äì Google &amp; AWS to <a href="https://m.do.co/c/90c45966d897">Digital Ocean</a> (affiliate link) and Kamal.</p>



<p>If you‚Äôre using Inertia.js or Ruby on Rails and would be interested in contributing to Hardcover, you should <a href="https://discord.gg/edGpYN8ym8">join our Discord</a>! We‚Äôre preparing to open source, and looking for some developers to be part of shaping how we collaborate with volunteers and the community.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Warren Buffett to Step Down from Berkshire Hathaway at Year-End (292 pts)]]></title>
            <link>https://www.bloomberg.com/news/articles/2025-05-03/warren-buffett-to-step-down-from-berkshire-hathaway-at-year-end</link>
            <guid>43880973</guid>
            <pubDate>Sat, 03 May 2025 18:16:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/articles/2025-05-03/warren-buffett-to-step-down-from-berkshire-hathaway-at-year-end">https://www.bloomberg.com/news/articles/2025-05-03/warren-buffett-to-step-down-from-berkshire-hathaway-at-year-end</a>, See on <a href="https://news.ycombinator.com/item?id=43880973">Hacker News</a></p>
Couldn't get https://www.bloomberg.com/news/articles/2025-05-03/warren-buffett-to-step-down-from-berkshire-hathaway-at-year-end: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Free, in-browser PDF editor (348 pts)]]></title>
            <link>https://breezepdf.com</link>
            <guid>43880962</guid>
            <pubDate>Sat, 03 May 2025 18:15:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://breezepdf.com">https://breezepdf.com</a>, See on <a href="https://news.ycombinator.com/item?id=43880962">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <div id="editor-start">
                <h2>Edit PDFs Freely &amp; Privately,<br>Right in Your Browser.</h2>
                <p>Breeze PDF is a powerful, free PDF editor that works entirely offline in your browser. No uploads, 100% privacy guaranteed.</p>
                <p><a href="https://breezepdf.com/editor" id="main-cta-button">
                    <i></i> Open PDF Editor
                </a></p><p><i></i> Your files never leave your computer.</p>
            </div>

        <div id="features">
                <h2>Powerful Features, Zero Compromise</h2>
                <p>Everything you need to manage your PDFs, securely and easily.</p>
                <div>
                    <!-- Feature Cards -->
                    <div>
                        <h3>Add Text</h3>
                        <p>Easily type and add text anywhere on your PDF document.</p>
                    </div>
                    <div>
                        <h3>Add Images</h3>
                        <p>Insert images (JPG, PNG) directly into your PDF pages.</p>
                    </div>
                    <div>
                        <h3>Add Signature</h3>
                        <p>Sign documents digitally by drawing, typing, or uploading.</p>
                    </div>
                    <div>
                        <h3>Form Fields</h3>
                        <p>Add interactive text input boxes for fillable forms.</p>
                    </div>
                    <div>
                        <h3>Merge PDFs</h3>
                        <p>Combine multiple PDF files into a single document.</p>
                    </div>
                    <div>
                        <h3>Delete Pages</h3>
                        <p>Remove unwanted pages from your PDF file easily.</p>
                    </div>
                     <div>
                        <h3>Password Protect</h3>
                        <p>Secure your sensitive PDFs with strong password encryption.</p>
                    </div>
                     <div>
                        <h3>Browser Based</h3>
                        <p>Works offline directly in your web browser. No installation needed.</p>
                    </div>
                </div>
            </div>

        <div id="privacy">
                 <h2>Your Privacy is Paramount</h2>
                 <p>With Breeze PDF, your documents are processed locally in *your* browser using JavaScript. They are never uploaded to any server. This means complete confidentiality and control over your sensitive information. What happens on your computer, stays on your computer.</p>
            </div>
<div id="faq">
        <h2>Frequently Asked Questions</h2>
        <p>Quick answers to common questions.</p>
        <div>
            <details>
                <summary>Is Breeze PDF free?</summary>
                <p>Yes, it‚Äôs 100% free with no hidden fees or limits on file usage.</p>
            </details>
            <details>
                <summary>How is my privacy protected?</summary>
                <p>Your files stay on your device‚Äîprocessed locally in your browser, never uploaded to a server.</p>
            </details>
            <details>
                <summary>Do I need to install anything?</summary>
                <p>No, it‚Äôs web-based. Just use a modern browser; editing works offline after loading.</p>
            </details>
            <details>
                <summary>What can I do with Breeze PDF?</summary>
                <p>Add text, images, signatures, form fields, merge PDFs, delete pages, and password-protect files.</p>
            </details>
            <details>
                <summary>Does it work on mobile?</summary>
                <p>Best on desktop, but usable on mobile browsers‚Äîscreen size may affect experience.</p>
            </details>
            <details>
                <summary>Are there file size limits?</summary>
                <p>No set limits, but large files depend on your device‚Äôs RAM and CPU for smooth processing.</p>
            </details>
        </div>
    </div>

        <div>
                <h2>Ready to Breeze Through Your PDFs?</h2>
                <p>Get started now with the most private and free PDF editor online.</p>
                <p><a href="https://breezepdf.com/editor" target="_blank" id="secondary-cta-button">
                    <i></i> Launch Breeze PDF
                </a>
            </p></div>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How LWN is faring in 2025 (118 pts)]]></title>
            <link>https://lwn.net/Articles/1019217/</link>
            <guid>43880068</guid>
            <pubDate>Sat, 03 May 2025 16:20:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/Articles/1019217/">https://lwn.net/Articles/1019217/</a>, See on <a href="https://news.ycombinator.com/item?id=43880068">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>
Just over six months ago, The Economist described the US economy as "<a href="https://www.economist.com/special-report/2024-10-19">the envy of the
world</a>".  That headline would be unlikely to appear now.  The economic
boom referenced in that article feels like a distant memory, markets are
falling, and uncertainty is at an all-time high.  Like everybody else, LWN
is affected by the current turbulence in the political and economic
spheres; we expect to get through this period, but there will be some
challenges.
</p><p>
To put it bluntly: starting around the beginning of March, we have observed
a distinct drop in both new subscriptions and renewals.  That timing
roughly corresponds with the US administration's increasing attacks on the
global system of trade and the economic downturn that has been its result.
As it stands, this subscription drop does not pose an existential threat to
LWN ‚Äî or to the salaries of its writers ‚Äî but it is a matter of concern.
</p><p>
We are responding by tightening our belt where we can, but otherwise
working to provide the best coverage of the Linux and free-software
communities, as we always have.  Readers can help, of course, by <a href="https://lwn.net/subscribe/">subscribing</a> if they have not already done so.
Encouraging your employer to set up a <a href="https://lwn.net/op/CorporateSubscriptions.lwn">group subscription</a> is especially
helpful.  Subscriptions are the only thing that has kept LWN operating for
all these years.
</p><p>
Beyond the immediate situation, there are a number of potential problems to
be concerned about.  For example, inflation did not stop after our price
increase in 2022, with the result that subscription dollars buy
significantly less then they once did.  We are <i>not</i> considering a
price increase at this time but, if the situation worsens, we may have to
go there.
</p><p>
For better or worse, LWN is a US-based company, but a large portion of
our subscription sales come from outside the country.  If the backlash
against US companies grows, we are unlikely to escape its effects entirely.
Further attacks on global trade could make it more difficult for us to
accept payments from outside the country, even when the buyer is willing.
In a truly terrible world, there may be attempts to reduce US participation
in (and support for) free software; the probability of that seems low, but
not zero.
</p><p>
Those are all future worries, though. For now, we will focus on getting
through the current economic storms.  The good news is that LWN has been
here since 1998, which is long enough to have been through more than one
difficult cycle.  We are still here, thanks entirely to the steady support
from you, our readers.  Our subscribers, especially, have our gratitude; if
you have not yet subscribed to LWN, please consider doing so now.
</p><p>
Meanwhile our primary focus will remain being worthy of the support you all
have given us since the beginning.  It is the least we can do for all of
you who have made our existence possible for the last 27&nbsp;years.<br clear="all"></p><hr>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[QModem 4.51 Source Code (162 pts)]]></title>
            <link>https://github.com/AaronFriel/qmodem-4.51</link>
            <guid>43879715</guid>
            <pubDate>Sat, 03 May 2025 15:30:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/AaronFriel/qmodem-4.51">https://github.com/AaronFriel/qmodem-4.51</a>, See on <a href="https://news.ycombinator.com/item?id=43879715">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">QModem 4.51 Source Code</h2><a id="user-content-qmodem-451-source-code" aria-label="Permalink: QModem 4.51 Source Code" href="#qmodem-451-source-code"></a></p>
<p dir="auto">The source code release of <strong>QModem 4.51</strong>, an MS-DOS telecommunications program authored by John Friel III (1960‚Äì2024). This source snapshot reflects the state of QModem "Test-Drive" edition, version 4.51, as it existed in early 1992. The release is presented in the hope it may prove valuable as a historical artifact, for telecommunications enthusiasts, retrocomputing hobbyists, or anyone interested in the inner workings of a classic DOS comms package.</p>
<p dir="auto">QModem was a widely-used terminal communications program for MS-DOS, supporting a rich array of modem protocols, scripting, user customization, modem auto-configuration, and even a "Host Mode" for basic BBS-like operation.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Historical Overview</h2><a id="user-content-historical-overview" aria-label="Permalink: Historical Overview" href="#historical-overview"></a></p>
<p dir="auto"><strong>QModem</strong> was developed throughout the 1980s and early 1990s as a competitor to programs such as Procomm, Telix, and others. It provided robust support for:</p>
<ul dir="auto">
<li>Many modem speeds and hardware types (8250, 16450, 16550 UARTs, and special hardware)</li>
<li>Internal and external file transfer protocols: XMODEM, YMODEM, ZMODEM, and user-defined protocol support via external drivers</li>
<li>Full-screen dialing directory (the <code>.FON</code> phonebook)</li>
<li>Extensive scripting and automation via its built-in script language</li>
<li>In-program configuration via a full-featured setup menu (<code>Alt-N</code>)</li>
<li>ANSI/VT100/TTY/Avatar terminal emulations</li>
<li>Host Mode: a mini BBS server included in the client!</li>
<li>Scrollback buffer, split screen terminal</li>
<li>Mouse support, custom keyboard macros, and more</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">File Layout and Project Structure</h2><a id="user-content-file-layout-and-project-structure" aria-label="Permalink: File Layout and Project Structure" href="#file-layout-and-project-structure"></a></p>
<p dir="auto">This repository contains the complete Turbo Pascal source code, as well as supporting assembler, batch, and utility files.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Main Directories and Files</h3><a id="user-content-main-directories-and-files" aria-label="Permalink: Main Directories and Files" href="#main-directories-and-files"></a></p>
<ul dir="auto">
<li><strong>.PAS</strong> ‚Äî Turbo Pascal source files implementing the main program, modules, and utilities</li>
<li><strong>.ASM</strong> ‚Äî x86 assembler routines for performance-critical sections and hardware interfacing</li>
<li><strong>.BAT</strong> ‚Äî DOS batch files for building, testing, and packaging</li>
<li><strong>.OBJ, .INC</strong> ‚Äî Included binaries and Pascal include files</li>
<li><strong>.KEY, .FON, .CNF, etc.</strong> ‚Äî Sample data, key, configuration, or phonebook files</li>
</ul>
<p dir="auto">Significant modules include:</p>
<ul dir="auto">
<li><code>QMODEM.PAS</code> ‚Äî Main entry point</li>
<li><code>QMMAIN.PAS</code> ‚Äî Main application logic</li>
<li><code>INITIAL.PAS</code> ‚Äî Global configuration, terminal, and comm settings</li>
<li><code>COMM.PAS</code> / <code>COMM2.PAS</code> ‚Äî Serial communications support</li>
<li><code>DOWNLD*.PAS</code> / <code>UPLD*.PAS</code> ‚Äî File transfer protocol implementations</li>
<li><code>TP*</code>, <code>OP*</code> ‚Äî Support code, likely Turbo Professional or custom libraries</li>
<li><code>HOST.PAS</code> ‚Äî Host Mode/BBS functionality</li>
<li><code>FONESTUF.PAS</code>, <code>QDIAL.PAS</code>, etc. ‚Äî Dialing directory and phonebook features</li>
<li><code>SCRIPTS*.PAS</code> ‚Äî Script engine and automation</li>
<li><code>INSTALL*.PAS</code>, <code>QINSTALL.PAS</code>, <code>RUNQINST.PAS</code> ‚Äî On-disk configuration and setup utility</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building QModem</h2><a id="user-content-building-qmodem" aria-label="Permalink: Building QModem" href="#building-qmodem"></a></p>
<p dir="auto"><strong>This is a historical codebase.</strong> QModem 4.51 targets MS-DOS using Turbo Pascal 5.x/6.0, with Turbo Professional and potentially other Borland or third-party libraries.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Potential Build Approaches</h3><a id="user-content-potential-build-approaches" aria-label="Permalink: Potential Build Approaches" href="#potential-build-approaches"></a></p>
<ul dir="auto">
<li>
<p dir="auto"><strong>Turbo Pascal 5.5/6.0</strong> (MS-DOS or DOSBox): This is almost certainly the original toolchain. If you have a copy, opening <code>QMODEM.PAS</code> as the project and compiling (after possibly setting appropriate memory and overlay paths) may work. Some makefiles or batch files, e.g. <code>BUILD.BAT</code>, may be helpful, but will need adaptation to your environment.</p>
</li>
<li>
<p dir="auto"><strong>TP/BP Emulation or Cross-Compilers</strong>: <a href="https://www.freepascal.org/" rel="nofollow">Free Pascal</a> includes some support for Turbo Pascal compatibility, but differences are likely extensive (including use of inline assembler, overlays, and third-party libraries).</p>
</li>
<li>
<p dir="auto"><strong>Turbo Professional &amp; Dependencies</strong>: Many of the <code>TP*</code> units (e.g. <code>TpDos</code>, <code>TpCrt</code>, etc.) are from the <a href="https://en.wikipedia.org/wiki/Turbo_Professional" rel="nofollow">Turbo Professional library</a>. You'll need the corresponding TPUs and sources for your compiler version.</p>
</li>
<li>
<p dir="auto"><strong>Manual Assembly of .ASM Files</strong>: Assembler files need to be assembled (e.g. with TURBO assembler or MASM) and linked or compiled as .OBJ for use with Turbo Pascal.</p>
</li>
<li>
<p dir="auto"><strong>Overlay Management</strong>: Note the project extensively uses Borland/Turbo Pascal overlays (<code>.OVR</code> files, see <code>OVR01.INC</code> and overlay units). Disk layout and path settings for overlays must be matched as the original program expects.</p>
</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Build Scripts</h4><a id="user-content-build-scripts" aria-label="Permalink: Build Scripts" href="#build-scripts"></a></p>
<p dir="auto">Several build-automation batch files are included, such as:</p>
<ul dir="auto">
<li><code>BUILD.BAT</code></li>
<li><code>BUILDOVR.BAT</code></li>
<li><code>BUG.BAT</code></li>
<li><code>DEBUGOVR.BAT</code></li>
</ul>
<p dir="auto">Inspect and adapt these scripts as necessary for your own environment.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Modernization Caveats</h3><a id="user-content-modernization-caveats" aria-label="Permalink: Modernization Caveats" href="#modernization-caveats"></a></p>
<ul dir="auto">
<li><strong>No supported modern environment</strong> targets this code directly. Efforts to port or run on anything but MS-DOS/Turbo Pascal 5.x/6.x are purely experimental and will require code and/or dependency adaptation.</li>
<li><strong>Third-party libraries</strong> (Turbo Professional, OpKey, possibly others) are required.</li>
<li><strong>Hardware-dependence</strong>: Much code assumes direct access to PC hardware, BIOS, and serial port interrupts.</li>
<li><strong>Overlay management</strong>: The overlay system (<code>OVERLAY.PAS</code>, etc.) must be supported as originally intended.</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">This repository is for study, education, restoration, and historical curiosity. See the original QModem documentation (not included here) for user guidance. The commands, batch files, and source code reflect MS-DOS conventions and expectations.</p>
<hr>
<p dir="auto"><strong>John Friel III, 1960‚Äì2024</strong></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Run LLMs on Apple Neural Engine (ANE) (218 pts)]]></title>
            <link>https://github.com/Anemll/Anemll</link>
            <guid>43879702</guid>
            <pubDate>Sat, 03 May 2025 15:29:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Anemll/Anemll">https://github.com/Anemll/Anemll</a>, See on <a href="https://news.ycombinator.com/item?id=43879702">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">ANEMLL</h2><a id="user-content-anemll" aria-label="Permalink: ANEMLL" href="#anemll"></a></p>
<p dir="auto">ANEMLL (pronounced like "animal") is an open-source project focused on accelerating the porting of Large Language Models (LLMs) to tensor processors, starting with the Apple Neural Engine (ANE).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Goals</h2><a id="user-content-goals" aria-label="Permalink: Goals" href="#goals"></a></p>
<blockquote>
<p dir="auto">The goal is to provide a fully open-source pipeline from model conversion to inference for common LLM architectures running on ANE.
This enables seamless integration and on-device inference for low-power applications on edge devices, ensuring maximum privacy and security.
This is critical for autonomous applications, where models run directly on the device without requiring an internet connection.</p>
<p dir="auto">We aim to:</p>
<ul dir="auto">
<li>Provide flexible and easy to use library/framework to port LLMs to ANE directly from Hugging Face models</li>
<li>Provide on-device examples for iOS and macOS swift or C/C++ Applications</li>
</ul>
</blockquote>
<p dir="auto">See update <a href="https://github.com/Anemll/Anemll/blob/main/docs/Roadmap.md">Roadmap.md</a> for more details</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Main Components in 0.3.0 Alpha Release</h2><a id="user-content-main-components-in-030-alpha-release" aria-label="Permalink: Main Components in 0.3.0 Alpha Release" href="#main-components-in-030-alpha-release"></a></p>
<p dir="auto">ANEMLL provides five main components for Apple Neural Engine inference development:</p>
<ol dir="auto">
<li>
<p dir="auto"><a href="https://github.com/Anemll/Anemll/blob/main/docs/convert.md">LLM Conversion Tools</a> - Scripts and code to convert models directly from Hugging Face weights</p>
<ul dir="auto">
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/convert_model.md">Single-shot Conversion Script</a></li>
</ul>
</li>
<li>
<p dir="auto"><a href="https://github.com/Anemll/Anemll/blob/main/docs/swift_cli.md">Swift Reference Implementation</a> - Optimized inference code for Swift applications</p>
<ul dir="auto">
<li>Sample CLI application in <code>anemll-swift-cli</code></li>
<li>Core inference engine implementation</li>
</ul>
</li>
<li>
<p dir="auto"><a href="https://github.com/Anemll/Anemll/blob/main/docs/chat.md">Python Sample Code</a> - Reference implementation and testing tools</p>
<ul dir="auto">
<li>Basic chat interface (<code>chat.py</code>)</li>
<li>Advanced conversation management (<code>chat_full.py</code>)</li>
</ul>
</li>
<li>
<p dir="auto"><a href="https://github.com/Anemll/Anemll/blob/main/docs/sample_apps.md">iOS/macOS Sample Applications</a> - Ready-to-use example applications (Alpha, now on TestFlight)</p>
<ul dir="auto">
<li>SwiftUI Chat interface</li>
<li>Model Downloads and integration example</li>
<li>Conversation management</li>
</ul>
</li>
<li>
<p dir="auto"><a href="https://github.com/anemll/anemll-bench">ANEMLL-BENCH</a> - Apple Neural Engine Benchmarking</p>
<ul dir="auto">
<li>Performance testing and comparison</li>
<li>Model optimization metrics</li>
<li>Hardware-specific benchmarks</li>
<li><a href="https://github.com/anemll/anemll-bench">GitHub Repository</a></li>
</ul>
</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Pre-converted Models</h3><a id="user-content-pre-converted-models" aria-label="Permalink: Pre-converted Models" href="#pre-converted-models"></a></p>
<p dir="auto">We provide sample converted models ready for use:</p>
<ul dir="auto">
<li>LLAMA 3.1 (1B and 8B variants) including iOS "friendly builds"</li>
<li>DeepSeek  distilled models</li>
<li>DeepHermes distilled models</li>
</ul>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">Please note that Quantization should be improved. LUT4 quality is fairly low due to lack of Block Quantization on Apple Neural Engine.
Some GPTQ and Spin Quant should greatly improve LUT4 models.</p>
</div>
<p dir="auto">Visit our <a href="https://huggingface.co/anemll" rel="nofollow">Hugging Face repository</a> for the latest converted models.</p>
<div dir="auto"><p dir="auto">Important</p><p dir="auto">This is Alpha Release 0.3.0 for the library. It is designed to process Model Weights directly from Hugging Face models and convert them to the CoreML format for Apple Neural Engine (ANE for short).
This is Alpha Release 0.3.0 for the library. It is designed to process Model Weights directly from Hugging Face models and convert them to the CoreML format for Apple Neural Engine (ANE for short).</p>
<ul dir="auto">
<li>This release only supports LLAMA models including DeepSeek and DeepHermes distilled models on LLaMA 3.1 architecture</li>
<li>The future release will add support for more models and architectures</li>
<li>Please visit <a href="https://huggingface.co/anemll" rel="nofollow">https://huggingface.co/anemll</a> where we upload the latest models and X: <a href="https://x.com/anemll" rel="nofollow">@anemll</a> for updates</li>
<li>Please star this repo to support the project!</li>
</ul>
</div>
<p dir="auto"><h3 tabindex="-1" dir="auto">New in 0.3.0 üöÄ</h3><a id="user-content-new-in-030-" aria-label="Permalink: New in 0.3.0 üöÄ" href="#new-in-030-"></a></p>
<p dir="auto">Swift UI Sample Code</p>
<ul dir="auto">
<li>Sample iOS/macOS inference Chat-Bot App (Alpha)</li>
<li>Updates to Model conversion and upload scripts</li>
<li>Updates to Swift Package and CLI App</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Sample iOS/macOS Applications</h3><a id="user-content-sample-iosmacos-applications" aria-label="Permalink: Sample iOS/macOS Applications" href="#sample-iosmacos-applications"></a></p>
<ul dir="auto">
<li>Downloads reference or custom models from HuggingFace</li>
<li>Inference / chat implementation use Swift Library</li>
<li>Sample TestFlight App for a quick test</li>
<li>See <a href="https://github.com/Anemll/Anemll/blob/main/docs/sample_apps.md">iOS/macOS Sample Applications Guide</a> for details</li>
</ul>

<p dir="auto"><h2 tabindex="-1" dir="auto">Swift CLI Reference Implementation</h2><a id="user-content-swift-cli-reference-implementation" aria-label="Permalink: Swift CLI Reference Implementation" href="#swift-cli-reference-implementation"></a></p>
<p dir="auto">The Swift CLI provides a reference implementation for running models on Apple Neural Engine. For detailed documentation, see <a href="https://github.com/Anemll/Anemll/blob/main/docs/swift_cli.md">Swift CLI Guide</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Quick Start</h3><a id="user-content-quick-start" aria-label="Permalink: Quick Start" href="#quick-start"></a></p>
<ol dir="auto">
<li>Download a model from <a href="https://huggingface.co/anemll" rel="nofollow">Hugging Face</a></li>
<li>Convert the model using our single-shot conversion script:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="./anemll/utils/convert_model.sh --model <path_to_model> --output <output_directory>"><pre>./anemll/utils/convert_model.sh --model <span>&lt;</span>path_to_model<span>&gt;</span> --output <span>&lt;</span>output_directory<span>&gt;</span></pre></div>
<ol start="3" dir="auto">
<li>Run the model using our sample code:</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="python ./tests/chat.py --meta <output_directory>/meta.yaml"><pre>python ./tests/chat.py --meta <span>&lt;</span>output_directory<span>&gt;</span>/meta.yaml</pre></div>
<p dir="auto">For detailed conversion steps and advanced options, see:</p>
<ul dir="auto">
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/convert.md">Model Conversion Guide</a></li>
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/convert_model.md">Single-shot Conversion Script</a></li>
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/ConvertingDeepSeek.md">DeepSeek Model Guide</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Testing with Python</h2><a id="user-content-testing-with-python" aria-label="Permalink: Testing with Python" href="#testing-with-python"></a></p>
<p dir="auto">We provide two chat interfaces:</p>
<ul dir="auto">
<li><code>chat.py</code> - Basic chat interface for quick testing</li>
<li><code>chat_full.py</code> - Advanced chat with conversation history management</li>
</ul>
<p dir="auto">Features of chat_full.py:</p>
<ul dir="auto">
<li>Maintains full conversation history within context window</li>
<li>Automatically truncates older messages when needed</li>
<li>Shifts context window dynamically during long responses</li>
<li>Shows generation speed and token statistics</li>
<li>Better handles multi-turn conversations</li>
</ul>
<p dir="auto">Example running Chats:</p>
<div dir="auto" data-snippet-clipboard-copy-content="# Basic chat
python ./tests/chat.py --meta ./converted_models/meta.yaml

# Full conversation mode
python ./tests/chat_full.py --meta ./converted_models/meta.yaml"><pre><span><span>#</span> Basic chat</span>
python ./tests/chat.py --meta ./converted_models/meta.yaml

<span><span>#</span> Full conversation mode</span>
python ./tests/chat_full.py --meta ./converted_models/meta.yaml</pre></div>
<p dir="auto">See <a href="https://github.com/Anemll/Anemll/blob/main/docs/chat.md">chat.md</a> for more details</p>
<blockquote>
<p dir="auto">[Note]
The first time the model loads, macOS will take some time to place it on the device. Subsequent loads will be instantaneous. Use Ctrl-D to exit, Ctrl-C to interrupt inference.</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">System Requirements</h3><a id="user-content-system-requirements" aria-label="Permalink: System Requirements" href="#system-requirements"></a></p>
<ul dir="auto">
<li>macOS Sequoia with Apple Neural Engine</li>
<li>Minimum 16GB RAM</li>
<li>Python 3.9</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setup Steps</h3><a id="user-content-setup-steps" aria-label="Permalink: Setup Steps" href="#setup-steps"></a></p>
<ol dir="auto">
<li>Install ANEMLL:
We recommend creating a new virtual environment for this project.</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="python -m venv anemll-env
source anemll-env/bin/activate
pip install -r requirements.txt
# pip install anemll
# due to Alpha Release, we do not recommend installing ANEMLL as a package yet"><pre>python -m venv anemll-env
<span>source</span> anemll-env/bin/activate
pip install -r requirements.txt
<span><span>#</span> pip install anemll</span>
<span><span>#</span> due to Alpha Release, we do not recommend installing ANEMLL as a package yet</span></pre></div>
<p dir="auto">CoreML compiler is required to compile the model. It is part of the Xcode command line tools.</p>
<ul dir="auto">
<li>Ensure that Xcode Command Line Tools are installed, as they include <code>coremlcompiler</code>.</li>
<li>You can install them by running <code>xcode-select --install</code>.</li>
<li>Verify that the <code>xcrun</code> command is available and correctly configured in your PATH.</li>
<li>Use <code>xcrun --find coremlcompiler</code> to verify the installation.</li>
<li>If above fails, please try following steps:</li>
<li>Download Xcode from the App Store.</li>
<li>Run <code>sudo xcode-select --switch /Applications/Xcode.app/Contents/Developer/</code> to set the path.</li>
<li>Use <code>xcrun --find coremlcompiler</code> to verify the installation.</li>
<li>Run <code>sudo xcodebuild -license</code> and agree to the license.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Model Support</h2><a id="user-content-model-support" aria-label="Permalink: Model Support" href="#model-support"></a></p>
<p dir="auto">Currently optimized for:</p>
<ul dir="auto">
<li>Meta's LLaMA 3.2 1B and 8B (1024 context) model including DeepSeek R1 8B distilled model, DeepHermes 3B and 8B models</li>
<li>More models are coming soon</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Core Technologies</h3><a id="user-content-core-technologies" aria-label="Permalink: Core Technologies" href="#core-technologies"></a></p>
<ul dir="auto">
<li>Thanks to <a href="https://apple.com/" rel="nofollow">@apple</a> for developing the Apple Neural Engine</li>
<li>Thanks to Apple CoreML Tools team for providing the tools <a href="https://github.com/apple/coremltools">https://github.com/apple/coremltools</a></li>
<li>Thanks to <a href="https://huggingface.co/" rel="nofollow">@huggingface</a> for providing the transformers library and models</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Inspirations, feedback and other resources</h3><a id="user-content-inspirations-feedback-and-other-resources" aria-label="Permalink: Inspirations, feedback and other resources" href="#inspirations-feedback-and-other-resources"></a></p>
<ul dir="auto">
<li>Stephen Panaro <a href="https://x.com/flat" rel="nofollow">https://x.com/flat</a> for feedback and coreml-llm-cli <a href="https://github.com/smpanaro/coreml-llm-cli">https://github.com/smpanaro/coreml-llm-cli</a></li>
<li>Seba <a href="https://x.com/CulStory" rel="nofollow">https://x.com/CulStory</a> for inspiration with fast ANE models. <a href="https://huggingface.co/seba" rel="nofollow">https://huggingface.co/seba</a></li>
<li>Maynard Handley <a href="https://x.com/handleym99" rel="nofollow">https://x.com/handleym99</a> For indepth ANE resources <a href="https://github.com/name99-org/AArch64-Explore/blob/main/vol7%20ANE.nb.pdf">https://github.com/name99-org/AArch64-Explore/blob/main/vol7%20ANE.nb.pdf</a> and feedback</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">We welcome contributions! Please read our contributing guidelines before submitting PRs.</p>
</div>
<p dir="auto">Feel free to submit issues and pull requests to improve <strong>ANEMLL</strong>!</p>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">If you're using ANEMLL in your project, please submit a PR to add it to this list.
We love to showcase how the community is using ANEMLL!</p>
</div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Third-Party Applications Using ANEMLL</h3><a id="user-content-third-party-applications-using-anemll" aria-label="Permalink: Third-Party Applications Using ANEMLL" href="#third-party-applications-using-anemll"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Open Source Projects</h3><a id="user-content-open-source-projects" aria-label="Permalink: Open Source Projects" href="#open-source-projects"></a></p>
<ul dir="auto">
<li><a href="https://github.com/alexgusevski/anemll-server">anemll-server</a> - Server implementation of ANEMLL inference</li>
</ul>
<div dir="auto"><p dir="auto">Note</p><p dir="auto">If you're using ANEMLL in your project, please submit a PR to add it to this list.
We love to showcase how the community is using ANEMLL!</p>
</div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Integration Examples</h3><a id="user-content-integration-examples" aria-label="Permalink: Integration Examples" href="#integration-examples"></a></p>
<p dir="auto">For examples of how to integrate ANEMLL into your projects, see:</p>
<ul dir="auto">
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/sample_apps.md">iOS Integration Guide</a></li>
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/swift_cli.md">Swift CLI Reference</a></li>
<li><a href="https://github.com/Anemll/Anemll/blob/main/docs/chat.md">Python Sample Code</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Links &amp; Resources</h2><a id="user-content-links--resources" aria-label="Permalink: Links &amp; Resources" href="#links--resources"></a></p>
<ul dir="auto">
<li>üåê Website: <a href="https://anemll.com/" rel="nofollow">anemll.com</a></li>
<li>ü§ó Models: <a href="https://huggingface.co/anemll" rel="nofollow">huggingface.co/anemll</a></li>
<li>üì± X: <a href="https://x.com/anemll" rel="nofollow">@anemll</a></li>
<li>üíª GitHub: <a href="https://github.com/anemll">github.com/anemll</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contact</h2><a id="user-content-contact" aria-label="Permalink: Contact" href="#contact"></a></p>
<p dir="auto">For any questions or support, reach out to us at <a href="mailto:realanemll@gmail.com">realanemll@gmail.com</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Star History</h2><a id="user-content-star-history" aria-label="Permalink: Star History" href="#star-history"></a></p>
<p dir="auto"><a href="https://star-history.com/#Anemll/Anemll&amp;Date" rel="nofollow"><img src="https://camo.githubusercontent.com/200a27825878277c33d174496724949c919d7f6732dec03f96522a745107393b/68747470733a2f2f6170692e737461722d686973746f72792e636f6d2f7376673f7265706f733d416e656d6c6c2f416e656d6c6c26747970653d44617465" alt="Star History Chart" data-canonical-src="https://api.star-history.com/svg?repos=Anemll/Anemll&amp;type=Date"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">ANEMLL is licensed under the MIT License.
<a href="https://opensource.org/license/mit" rel="nofollow">https://opensource.org/license/mit</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[N8n ‚Äì Flexible AI workflow automation for technical teams (167 pts)]]></title>
            <link>https://n8n.io/</link>
            <guid>43879282</guid>
            <pubDate>Sat, 03 May 2025 14:31:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://n8n.io/">https://n8n.io/</a>, See on <a href="https://news.ycombinator.com/item?id=43879282">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__nuxt"><!--[--><header data-v-a81ec1af=""></header><!--[--><!--[--><div data-v-f28ea7eb=""><div data-v-f28ea7eb=""><p><span data-v-f28ea7eb=""></span><span data-v-f28ea7eb=""></span><img onerror="this.setAttribute('data-error', 1)" alt="Hero image" data-nuxt-img="" srcset="https://n8n.io/images/hero-bg.png 1x, https://n8n.io/images/hero-bg.png 2x" src="https://n8n.io/images/hero-bg.png" data-v-f28ea7eb=""></p><video preload="none" muted="" loop="" autoplay="" playsinline="" data-v-f28ea7eb=""></video></div><div data-v-f28ea7eb=""><h2 data-v-f28ea7eb="" data-v-ca591f9f=""><!--[--><!--[-->Flexible AI workflow automation <span data-v-f28ea7eb="" data-v-ca591f9f=""><!--[--><!--[-->for technical teams<!--]--><!--]--></span><!--]--><!--]--></h2><p data-v-f28ea7eb=""><!--[-->Build with the precision of code or the speed of drag-n-drop. Host with on-prem control or in-the-cloud convenience. n8n gives you more freedom to implement multi-step AI agents and integrate apps than any other tool.<!--]--></p><p data-v-f28ea7eb=""><!--[--><a href="https://app.n8n.cloud/register" rel="noopener noreferrer" target="_blank" data-v-f28ea7eb="" data-v-7393b429=""><!--[--><span data-v-7393b429=""><!--[--><!--[-->Get started for free<!--]--><!--]--></span><!--]--></a><a href="https://n8n-community.typeform.com/to/y9X2YuGa" rel="noopener noreferrer" target="_blank" data-v-f28ea7eb="" data-v-7393b429=""><!--[--><span data-v-7393b429=""><!--[--><!--[-->Talk to sales<!--]--><!--]--></span><!--]--></a><!--]--></p></div></div><div data-v-73df4b90="" data-v-a5e08149=""><!--[--><p><img onerror="this.setAttribute('data-error', 1)" alt="" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Darker_Home_4699f79534.webp 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Darker_Home_4699f79534.webp 2x" data-v-a5e08149="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Darker_Home_4699f79534.webp"></p><!--]--></div><div data-v-2d2471e8=""><p data-v-2d2471e8=""><!--[-->The world's most popular workflow automation platform for technical teams including<!--]--></p></div><div data-v-4f1bd3f8=""><header data-v-4f1bd3f8=""><!--[--><h2 data-v-4f1bd3f8="" data-v-ca591f9f=""><!--[--><!--[--><!----> Plug AI into your own data &amp; <span data-v-4f1bd3f8="" data-v-ca591f9f=""><!--[--><!--[-->over 400 integrations<!--]--><!--]--></span><!--]--><!--]--></h2><!----><!--]--></header></div><div data-v-879e64c5=""><!--[--><header data-v-879e64c5=""><!--[--><h2 data-v-879e64c5="" data-v-ca591f9f=""><!--[--><!--[-->The fast way to actually <span data-v-879e64c5="" data-v-ca591f9f=""><!--[--><!--[-->get AI working in your business<!--]--><!--]--></span><!--]--><!--]--></h2><!--]--></header><p><img onerror="this.setAttribute('data-error', 1)" width="1115" height="284" alt="Stars" data-nuxt-img="" srcset="https://n8n.io/images/stars-bg.svg 1x, https://n8n.io/images/stars-bg.svg 2x" src="https://n8n.io/images/stars-bg.svg" data-v-879e64c5=""></p><div data-v-879e64c5=""><div data-v-879e64c5="" data-v-a3327423=""><header data-v-879e64c5=""><h4 data-v-879e64c5="" data-v-ca591f9f=""><!--[--><!--[-->Build multi-step agents calling custom tools<!--]--><!--]--></h4><p data-v-879e64c5=""><!--[-->Create agentic systems on a single screen. Integrate any LLM into your workflows as fast as you can drag-n-drop.<!--]--></p></header><div data-v-879e64c5=""><p><img onerror="this.setAttribute('data-error', 1)" alt="Teams of agents, calling custom tools" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/teams_of_agents_0f5c0edc24.png 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/teams_of_agents_0f5c0edc24.png 2x" data-v-879e64c5="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/teams_of_agents_0f5c0edc24.png"></p><div data-v-879e64c5=""><p><span data-v-879e64c5=""><span><!--[--><!--]--></span><!--[--> Update Detected<!--]--></span><span data-v-879e64c5=""><span><!--[--><!--]--></span><!--[--> Running Custom Unit Testing<!--]--></span><span data-v-879e64c5=""><span><!--[--><!--]--></span><!--[--> Update Rolled Back Automatically<!--]--></span></p><p><span data-v-879e64c5=""><span><!--[--><!--]--></span><!--[--> IT Team Notified of New Ticket<!--]--></span><span data-v-879e64c5=""><span><!--[--><!--]--></span><!--[--> Custom Unit Testing Failed<!--]--></span><span data-v-879e64c5=""><span><!--[--><!--]--></span><!--[--> Update Installed<!--]--></span></p></div></div></div><div data-v-879e64c5="" data-v-a3327423=""><div data-v-879e64c5=""><p><img onerror="this.setAttribute('data-error', 1)" alt="Local AI" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/local_ai_ef742e1e67.png 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/local_ai_ef742e1e67.png 2x" data-v-879e64c5="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/local_ai_ef742e1e67.png"><img onerror="this.setAttribute('data-error', 1)" alt="Fully self-hostable" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/self_hostable_9b0acce2c7.png 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/self_hostable_9b0acce2c7.png 2x" data-v-879e64c5="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/self_hostable_9b0acce2c7.png"></p></div><div data-v-879e64c5=""><header data-v-879e64c5=""><h4 data-v-879e64c5="" data-v-ca591f9f=""><!--[--><!--[-->Self-host everything  ‚Äì including AI models<!--]--><!--]--></h4><p data-v-879e64c5=""><!--[-->Protect your data by deploying on-prem.<!--]--></p></header><div data-v-879e64c5=""><ul data-v-879e64c5=""><!--[--><li data-v-879e64c5=""></li><li data-v-879e64c5=""><div data-v-879e64c5=""><p>Access the entire source code on Github</p></div></li><li data-v-879e64c5=""><div data-v-879e64c5=""><p>Hosted version also available</p></div></li><!--]--></ul></div></div></div><div data-v-879e64c5="" data-v-a3327423=""><header data-v-879e64c5=""><h4 data-v-879e64c5="" data-v-ca591f9f=""><!--[--><!--[-->Chat with your own data<!--]--><!--]--></h4><p data-v-879e64c5=""><!--[-->Use Slack, Teams, SMS, voice, or our embedded chat interface to get accurate answers from your data, create tasks, and complete workflows.<!--]--></p></header><div data-v-879e64c5=""><!--[--><p><span>Who held meetings with SpaceX last week?</span></p><p><span>On Wednesday, Joe updated the status to "won" in Salesforce after a Zoom call.</span></p><p><span>On Thursday, Sue provided on-site setup and closed the ServiceNow ticket.</span></p><p><span>Create a task in Asana...</span></p><!--]--></div></div></div><!--]--></div><div><div data-v-03927e5d=""><p><img onerror="this.setAttribute('data-error', 1)" width="798" height="549" alt="Code / UI" data-nuxt-img="" srcset="https://n8n.io/images/code.webp 1x, https://n8n.io/images/code.webp 2x" src="https://n8n.io/images/code.webp" data-v-03927e5d=""></p><div data-v-03927e5d=""><h2 data-v-03927e5d="" data-v-ca591f9f=""><!--[--><!--[-->Code when you need it, UI when you don't<!--]--><!--]--></h2><p data-v-03927e5d=""><!--[-->Other tools limit you to either a visual building experience, or code. With n8n, you get the best of both worlds.<!--]--></p><ul data-v-03927e5d=""><!--[--><li data-v-03927e5d=""><div data-v-03927e5d=""><p><strong>Write JavaScript or Python</strong> - you can always fall back to code</p></div></li><li data-v-03927e5d=""><div data-v-03927e5d=""><p><strong>Add libraries</strong> from npm or Python for even more power</p></div></li><li data-v-03927e5d=""><div data-v-03927e5d=""><p><strong>Paste cURL requests</strong> into your workflow</p></div></li><li data-v-03927e5d=""><div data-v-03927e5d=""><p><strong>Merge workflow branches</strong>, don‚Äôt just split them</p></div></li><!--]--></ul></div></div><div data-v-598a288a=""><div data-v-598a288a=""><p><img onerror="this.setAttribute('data-error', 1)" width="417" height="417" alt="Thunder" data-nuxt-img="" srcset="https://n8n.io/images/thunder.webp 1x, https://n8n.io/images/thunder.webp 2x" src="https://n8n.io/images/thunder.webp" data-v-598a288a=""></p></div><div data-v-598a288a=""><h2 data-v-598a288a="" data-v-ca591f9f=""><!--[--><!--[-->Run. Tweak. Repeat<!--]--><!--]--></h2><p data-v-598a288a=""><!--[-->The same short feedback loops that make you smile at your scripts. <!--]--></p><ul data-v-598a288a=""><!--[--><li data-v-598a288a=""><div data-v-598a288a=""><p><strong>Re-run single steps</strong> without re-running the whole workflow</p></div></li><li data-v-598a288a=""><div data-v-598a288a=""><p><strong>Replay or mock data</strong> to avoid waiting for external systems</p></div></li><li data-v-598a288a=""><div data-v-598a288a=""><p><strong>Debug fast</strong>, with logs in line with your code</p></div></li><li data-v-598a288a=""><div data-v-598a288a=""><p><strong>Use 1700+ templates</strong> to jump-start your project</p></div></li><!--]--></ul><p data-v-598a288a=""><a href="https://n8n.io/features/" data-v-598a288a="" data-v-7393b429=""><!--[--><!--[--><!--[-->See full product overview<!--]--><!--]--><!--]--></a></p></div></div></div><div data-v-1e8fe4d4=""><!--[--><header data-v-1e8fe4d4=""><!--[--><p><span data-v-5e037a06=""><!--[--><!--]--></span><span data-v-5e037a06=""><!--[--> See The Results<!--]--></span></p><h2 data-v-1e8fe4d4="" data-v-ca591f9f=""><!--[--><!--[-->Case Studies<!--]--><!--]--></h2><!--]--></header><div data-v-1e8fe4d4=""><!--[--><div data-v-1e8fe4d4="" data-v-a3327423=""><p><img onerror="this.setAttribute('data-error', 1)" alt="Delivery Hero" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/delivery_hero_6337bb5dc8.webp 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/delivery_hero_6337bb5dc8.webp 2x" data-v-1e8fe4d4="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/delivery_hero_6337bb5dc8.webp"></p><div data-v-1e8fe4d4=""><p>How Delivery Hero saved <strong>200 hours each month</strong> with a single ITOps workflow</p></div><hr data-v-1e8fe4d4=""><p data-v-1e8fe4d4=""><!--[-->‚ÄúWe‚Äôve sped up our integration of data sources by 25X. It takes me 2 hours max to connect up APIs and transform the data we need. You can‚Äôt do this that fast in code.‚Äù<!--]--></p><div data-v-1e8fe4d4=""><!--[--><p><img onerror="this.setAttribute('data-error', 1)" alt="" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/E02996_YDSAK_U4_TEE_6_AAW_8f94f206d022_512_9956afea32_5cf58d57e3.jpeg 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/E02996_YDSAK_U4_TEE_6_AAW_8f94f206d022_512_9956afea32_5cf58d57e3.jpeg 2x" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/E02996_YDSAK_U4_TEE_6_AAW_8f94f206d022_512_9956afea32_5cf58d57e3.jpeg"></p><!--]--><div><p><!--[--><!--[-->Dennis Zahrt<!--]--><!--]--></p><div data-v-1e8fe4d4=""><p>Director of Global IT Service Delivery</p></div></div></div><a href="https://n8n.io/case-studies/delivery-hero/" data-v-1e8fe4d4="" data-v-7393b429=""><!--[--><!--[--><!--[-->Read Case Study<!--]--><!--]--><!--]--></a></div><div data-v-1e8fe4d4="" data-v-a3327423=""><p><img onerror="this.setAttribute('data-error', 1)" alt="The Stepstone Group" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/the_stepstone_group_6dccc5eb32.webp 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/the_stepstone_group_6dccc5eb32.webp 2x" data-v-1e8fe4d4="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/the_stepstone_group_6dccc5eb32.webp"></p><div data-v-1e8fe4d4=""><p>How StepStone finishes <strong>2 weeks‚Äô work in only 2 hours</strong> with n8n workflows</p></div><hr data-v-1e8fe4d4=""><p data-v-1e8fe4d4=""><!--[-->"We have seen drastic efficiency improvements since we started using n8n. It's incredibly powerful, but also simple to use"<!--]--></p><div data-v-1e8fe4d4=""><!--[--><p><img onerror="this.setAttribute('data-error', 1)" alt="" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Luka_Pilic_Stepstone_443e0351bf_4dbe30dafe.jpeg 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Luka_Pilic_Stepstone_443e0351bf_4dbe30dafe.jpeg 2x" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Luka_Pilic_Stepstone_443e0351bf_4dbe30dafe.jpeg"></p><!--]--></div><a href="https://n8n.io/case-studies/stepstone/" data-v-1e8fe4d4="" data-v-7393b429=""><!--[--><!--[--><!--[-->Read Case Study<!--]--><!--]--><!--]--></a></div><!--]--></div><!--]--></div><div data-v-38f6c8c7=""><div data-v-38f6c8c7=""><p><img onerror="this.setAttribute('data-error', 1)" width="1784" height="1358" alt="Server" data-nuxt-img="" srcset="https://n8n.io/images/server.png 1x, https://n8n.io/images/server.png 2x" src="https://n8n.io/images/server.png" data-v-38f6c8c7=""></p><div data-v-38f6c8c7=""><header data-v-38f6c8c7=""><!--[--><p><span data-v-5e037a06=""><!--[--><!--]--></span><span data-v-5e037a06=""><!--[--> Enterprise-ready<!--]--></span></p><h2 data-v-38f6c8c7="" data-v-ca591f9f=""><!--[--><!--[-->Secure. Reliable. Collaborative.<!--]--><!--]--></h2><p data-v-38f6c8c7=""><!--[-->Remove inefficiencies across your org by rolling out automation as reliably as you deploy code. Run n8n air-gapped on your servers or on our secure cloud-based solution.<!--]--></p><!--]--></header><!----><p data-v-38f6c8c7=""><!--[--><a href="https://n8n.io/enterprise/" data-v-38f6c8c7="" data-v-7393b429=""><!--[--><!--[--><!--[-->Explore n8n for enterprise<!--]--><!--]--><!--]--></a><a href="https://n8n-community.typeform.com/to/y9X2YuGa" rel="noopener noreferrer" target="_blank" data-v-38f6c8c7="" data-v-7393b429=""><!--[--><span data-v-7393b429=""><!--[--><!--[-->Talk to sales<!--]--><!--]--></span><!--]--></a><!--]--></p><ul data-v-38f6c8c7=""><!--[--><li data-v-38f6c8c7=""><h3 data-v-38f6c8c7=""><!--[-->Security<!--]--></h3><p data-v-38f6c8c7=""><!--[-->Fully on-prem option, SSO SAML, and LDAP, encrypted secret stores, version control, advanced RBAC permissions.<!--]--></p></li><li data-v-38f6c8c7=""><h3 data-v-38f6c8c7=""><!--[-->Performance<!--]--></h3><p data-v-38f6c8c7=""><!--[-->Audit logs &amp; log streaming to 3rd party, workflow history, custom variables, external storage.<!--]--></p></li><li data-v-38f6c8c7=""><h3 data-v-38f6c8c7=""><!--[-->Collaboration<!--]--></h3><p data-v-38f6c8c7=""><!--[-->Git Control,  isolated environments, multi-user workflows.<!--]--></p></li><!--]--></ul><hr data-v-38f6c8c7=""></div><div data-v-a3327423="" data-v-38f6c8c7=""><!--[--><p data-v-38f6c8c7=""><!--[-->"The idea is that everybody in the organization can use n8n to manage data retrieval or data transformation."<!--]--></p><div data-v-38f6c8c7=""><!--[--><p><img onerror="this.setAttribute('data-error', 1)" alt="Martino Bonfiglioni" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Martino_Bonfiglioni_9a3bf848b3.jpeg 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Martino_Bonfiglioni_9a3bf848b3.jpeg 2x" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/Martino_Bonfiglioni_9a3bf848b3.jpeg"></p><!--]--></div><a href="https://n8n.io/case-studies/musixmatch/" data-v-38f6c8c7="" data-v-7393b429=""><!--[--><!--[--><!--[-->See the case <!--]--><!--]--><!--]--></a><!--]--></div></div><p><img onerror="this.setAttribute('data-error', 1)" alt="" data-nuxt-img="" srcset="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/SOC_2_badge_150px_1c485c7e5c.png 1x, https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/SOC_2_badge_150px_1c485c7e5c.png 2x" data-v-38f6c8c7="" src="https://n8niostorageaccount.blob.core.windows.net/n8nio-strapi-blobs-prod/assets/SOC_2_badge_150px_1c485c7e5c.png"></p></div><div data-v-13cd5715="" data-v-61f73446=""><p><img onerror="this.setAttribute('data-error', 1)" width="1856" height="470" alt="Automation" data-nuxt-img="" srcset="https://n8n.io/images/embed-automation.webp 1x, https://n8n.io/images/embed-automation.webp 2x" src="https://n8n.io/images/embed-automation.webp" data-v-13cd5715=""></p><div data-v-13cd5715=""><header data-v-13cd5715=""><!--[--><p><span data-v-5e037a06=""><!--[--><!--]--></span><span data-v-5e037a06=""><!--[--> n8n embed<!--]--></span></p><h2 data-v-13cd5715=""><!--[-->Automation for your customers<!--]--></h2><p data-v-13cd5715=""><!--[-->Wow your customers with access to 400+ app integrations to automate their own workflows. Your branding. Our white-labelled tech. 
<!--]--></p><!--]--></header><p data-v-13cd5715=""><a href="https://n8n.io/embed/" data-v-13cd5715="" data-v-7393b429=""><!--[--><!--[-->Explore n8n embed<!--]--><!--]--></a></p></div></div><!--]--><!--]--><!--]--></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why I stopped angel investing after 15 years (and what I'm doing instead) (150 pts)]]></title>
            <link>https://halletecco.substack.com/p/why-i-stopped-angel-investing-after</link>
            <guid>43878878</guid>
            <pubDate>Sat, 03 May 2025 13:22:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://halletecco.substack.com/p/why-i-stopped-angel-investing-after">https://halletecco.substack.com/p/why-i-stopped-angel-investing-after</a>, See on <a href="https://news.ycombinator.com/item?id=43878878">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p><em>I‚Äôm testing out putting the entire article in the email vs making you click through to my blog. I think it will be easier for you to read (let‚Äôs just hope I don‚Äôt have any post-send edits). Let me know what you think by forwarding to a friend to subscribe </em><span>üôè</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png" width="1456" height="971" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:971,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:5009251,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://halletecco.substack.com/i/161291920?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe64b0a65-5bbe-4121-a6e1-4121c7b8f012_1890x1260.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>After 15 consecutive years of angel investing, I hit pause in 2024. It's now been a full 12 months without writing a check, marking the longest hiatus in my angel "career." </p><p><span>There isn't enough transparency in angel investing, and my past </span><a href="https://www.halletecco.com/blog/angel-investing-part-1" rel="">posts</a><span> on the topic have been reader favorites. So I decided to share why I stepped back from angel investing after backing 54 companies and what I'm doing instead. </span><em>Next week, I'll follow up with the cold, hard data on my portfolio performance.</em></p><p>A few years ago, people were trying to convince me to raise a fund. There was a lot of money going around for emerging fund managers, and I had enough of a track record to make a reasonable VC. I thought seriously about the opportunity and what it would mean for me personally and professionally. I talked to potential partners and colleagues. I did the math on what size fund we‚Äôd need to raise. </p><p>During this exercise, I reflected on why I began angel investing in the first place:</p><ol><li><p><strong>For fun</strong><span>: I </span><em>really</em><span> enjoyed working with founders</span></p></li><li><p><strong>To learn</strong><span>: I wanted the unparalleled opportunity of being at the forefront of innovation and trends</span></p></li><li><p><strong>For the money:</strong><span> I liked investing, and I wanted to put my money to work </span></p></li></ol><p><span>Ultimately, I decided running a VC fund was </span><em>not</em><span> how I wanted to spend my time. In fact, I realized I didn‚Äôt even want to spend my time angel investing anymore. Through this exercise, it became clear to me that there were better ways to achieve those goals.</span></p><p>Angel investing follows basic portfolio theory principles‚Äîeach individual investment carries extreme risk, so you need to build a diverse portfolio. The standard advice is that you need 20-30 investments minimum to have a statistically viable chance of finding a company that returns your entire fund.</p><p>But it‚Äôs this same diversification that spreads you too thin. My portfolio became too broad to meaningfully support. I couldn't provide the kind of value that initially drew me to angel investing: working closely with founders to help them succeed.</p><p>What started as a few hours a month quickly grew into a full-time (unpaid) job. When you back 50+ companies, even minor requests add up on a daily basis:</p><ul><li><p>One company needs you to help close a key hire</p></li><li><p>Another is raising a bridge round and wants your input on the deck</p></li><li><p>A third is struggling with a co-founder conflict and needs advice</p></li><li><p>An investor calls asking you to vouch for a portfolio company they‚Äôre considering backing</p></li></ul><p>All this happens while new pitches continue to flood your inbox. The result was increasingly shallow interactions with more and more companies, exactly the opposite of what drew me to angel investing in the first place.</p><p>When I started angel investing, one of my primary motivations was to learn. I convinced myself that being on cap tables would give me special insight and keep me current in the industry.</p><p>But when I really thought about it, I realized that angel investing provides surprisingly limited learning opportunities compared to other outlets. Following industry news, hosting a podcast, teaching, writing a book, starting companies, attending conferences, having coffee with founders (without the pressure to invest), and joining advisory boards were equally, if not more, effective ways to learn about the industry.</p><p>I still believe there‚Äôs something ‚ú® magical ‚ú® you soak in working alongside founders. I just don‚Äôt think investing is the only way to get that experience. In fact, I've found that advisory roles and board positions often provide deeper insights than passive investing because you're more actively involved. The reality is that most angel investors get sanitized quarterly updates (if that), which barely scratch the surface of what's really happening in a company. When you're more deeply engaged‚Äîeven without a financial stake‚Äîyou get to see the unfiltered challenges and strategic decisions that drive real learning.</p><p>The math simply stopped mathing ‚Äì especially when weighed against my other priorities.</p><p>Unlike VCs, who are compensated for their work through management fees, angels do it for free while also taking 100% of the financial risk. </p><p>Angel investors also face the longest time horizon for liquidity of any investor. Private equity aims for 3-5 year returns, and VCs typically run 7-10 year fund cycles, but angels usually wait 10+ years for exits. This means angels aren‚Äôt just taking company-specific risk, but also the risk of facing more macroeconomic cycles.</p><p>Think about all that's happened since 2009 when I started: multiple presidential administrations, a global pandemic, zero interest rates, and now high inflation and higher interest rates. My investments have had to withstand all of these shifts, and many didn't make it through.</p><p>The post-ZIRP era (2023-2024) created headwinds that even well-positioned startups struggled to navigate. Just since 2023, I have had:</p><ul><li><p><span>One company that raised over $100M, with my shares at one point valued at over $1M on paper, acquired in a fire sale that returned </span><em>zero</em><span> to early investors</span></p></li><li><p>Two others that were also ‚Äúacquired‚Äù with some fanfare in the media, but returned nothing to early investors</p></li><li><p>Four companies shut down after being unable to get to profitability or fundraise</p></li><li><p>Four others that raised money but with painful recapitalizations that effectively wiped out early shareholders</p></li></ul><p>That last bullet was the nail in the coffin for me. For new investors to come in and wipe out early investors just because the market was in their favor was painful. It felt like opportunistic resets that enriched later investors at the expense of early supporters (not to mention early employees).</p><p>It‚Äôs also worth noting I've made more money building companies than I have investing in them. Some of that is luck, but founding a company provides something angel investing doesn't: the ability to directly influence outcomes.</p><p>When you account for the opportunity cost of capital, the extreme time horizon, the macro risks, and the possibility of having your ownership severely diluted, the potential returns need to be astronomical to justify the investment. And as my portfolio data shows (which I'll share next week), those returns simply aren‚Äôt materializing at the rate needed to offset these risks.</p><p>So what's filling the startup-shaped hole in my life now that I've stopped writing angel checks? I've pivoted to approaches that better align with my original goals:</p><p><em><strong>Depth over breadth</strong></em><br><span>For deeper founder relationships, I joined the board of growth-stage company </span><a href="https://collectivehealth.com/" rel="">Collective Health</a><span>, a startup we invested in over a decade ago at Rock Health. I also helped start </span><a href="http://cofertility.com/" rel="">Cofertility</a><span>, where I serve as Board Chair. </span></p><p><em><strong>Learning out loud</strong></em><br><span>For continued learning, I'm doing all the fun things like hosting a podcast and writing this newsletter/blog. I also teach two courses a year, one at Columbia Business School and one virtually at Harvard Medical School. As Phil Collins said, ‚ÄúIn learning, you will teach, and in teaching, you will learn.‚Äù  </span></p><p><em><strong><span>Professional capital deployment</span><br></strong></em><span>Lastly, I became a Limited Partner (LP) in a handful of VC funds, basically paying professionals to do the investing on our behalf. It's been three years, so it's still early, but it will be interesting to see if the VC returns are better than direct investing. </span></p><p>I haven't closed the door permanently on angel investing, but any return would look different from my previous approach. For now, I'm enjoying the clarity that comes from a more concentrated focus. Sometimes the best investment decision is deciding not to invest at all.</p><p><em>Next week, I'll share the complete data on my 54 startup investments over 15 years</em><span>‚Äî</span><em>including returns, losses, and current portfolio status. </em></p><p data-attrs="{&quot;url&quot;:&quot;https://www.halletecco.com/blog/why-i-stopped-angel-investing&quot;,&quot;text&quot;:&quot;Read on my blog&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://www.halletecco.com/blog/why-i-stopped-angel-investing" rel=""><span>Read on my blog</span></a></p><p>Health insurance has a Net Promoter Score (NPS) of around 0-10 industry-wide, one of the lowest ratings of any industry. This is exactly why the founders of Oscar Health, with no background in healthcare and a distaste for the industry, started the company in 2012. Since then, Oscar has grown to 1.7 million members, gone public, and achieved profitability‚Äîall while receiving an NPS significantly higher than the industry average.</p><p>In this episode, I interviewed Mario Schlosser, co-founder and CTO of Oscar Health, about building a tech-first health insurance company in an industry notorious for poor customer experiences.</p><p>We cover:</p><p><span>üè• Why outsiders without healthcare backgrounds decided to tackle the insurance industry</span><br><span>üí∞ How Oscar grew to 1.7 million members while maintaining a 60+ NPS score in a hard-to-please industry</span><br><span>üìä The balance between denying unnecessary care and empathetically supporting members</span><br><span>‚öôÔ∏è How ICHRAs (Individual Coverage Health Reimbursement Arrangements) are disrupting traditional employer-sponsored healthcare</span><br><span>üß∂ The beginning of the unraveling of the employer markets</span><br><span>üíº The changing employer healthcare market and why small businesses are seeking alternatives</span></p><p><span>Tune in wherever you listen to podcasts! </span><a href="https://podcasts.apple.com/us/podcast/the-heart-of-healthcare-a-digital-health-podcast/id1575404727?i=1000701537530" rel="">Apple</a><span> | </span><a href="https://open.spotify.com/episode/5sSLOIhovvF2RsQa5HyyYS?si=0ax3qLZ4SwmPRE0I8iBQ9A" rel="">Spotify</a></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg" width="1456" height="619" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:619,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;No alternative text description for this image&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="No alternative text description for this image" title="No alternative text description for this image" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1214e832-8ef4-4b59-aae3-f9248f6b66cc_2048x870.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><div><p><span>They say you‚Äôre not supposed to celebrate a fundraise. Just get back to work. But‚Ä¶</span></p><p><span>‚û°Ô∏è Women‚Äôs health companies get less than 5% of digital health funding. </span><br><span>‚û°Ô∏è Women-led companies get under 2% of venture funding.</span></p><p><span>So when a woman-led women‚Äôs health company breaks through these odds‚Äîlet us do a little dance to celebrate before getting back to work.</span></p></div><p>Congratulations to the Cofertility team on this next milestone. PS: We‚Äôre hiring!</p><p><strong>Want to support my work?</strong></p><blockquote><p><span>‚≠êÔ∏è Leave a review for the </span><a href="https://podcasts.apple.com/us/podcast/the-heart-of-healthcare-with-halle-tecco/id1575404727" rel="">Heart of Healthcare podcast</a><span>. It takes just five seconds!</span><br><span>üíª Download a copy of my </span><a href="https://halletecco.gumroad.com/l/digital-health-startups" rel="">digital health startup database</a><span>.</span><br><span>ü´∂ Share this email with a digital health friend.</span><br><span>üí∏ Reach out to collaborate.</span></p></blockquote></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Time saved by AI offset by new work created, study suggests (209 pts)]]></title>
            <link>https://arstechnica.com/ai/2025/05/time-saved-by-ai-offset-by-new-work-created-study-suggests/</link>
            <guid>43878850</guid>
            <pubDate>Sat, 03 May 2025 13:14:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/ai/2025/05/time-saved-by-ai-offset-by-new-work-created-study-suggests/">https://arstechnica.com/ai/2025/05/time-saved-by-ai-offset-by-new-work-created-study-suggests/</a>, See on <a href="https://news.ycombinator.com/item?id=43878850">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                      
                      
          <p>A <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=5219933">new study</a> analyzing the Danish labor market in 2023 and 2024 suggests that generative AI models like <a href="https://arstechnica.com/information-technology/2023/11/chatgpt-was-the-spark-that-lit-the-fire-under-generative-ai-one-year-ago-today/">ChatGPT</a> have had almost no significant impact on overall wages or employment yet, despite rapid adoption in some workplaces. The findings, detailed in a <a href="https://papers.ssrn.com/sol3/papers.cfm?abstract_id=5219933">working paper</a> by economists from the University of Chicago and the University of Copenhagen, provide an early, large-scale empirical look at AI's transformative potential.</p>
<p>In "Large Language Models, Small Labor Market Effects," economists <a href="https://www.andershumlum.com/">Anders Humlum</a> and <a href="https://www.economics.ku.dk/staff/phd_kopi/?pure=en/persons/655200">Emilie Vestergaard</a> focused specifically on the impact of AI chatbots across 11 occupations often considered vulnerable to automation, including accountants, software developers, and customer support specialists. Their analysis covered data from 25,000 workers and 7,000 workplaces in Denmark.</p>
<p>Despite finding widespread and often employer-encouraged adoption of these tools, the study concluded that "AI chatbots have had no significant impact on earnings or recorded hours in any occupation" during the period studied. The confidence intervals in their statistical analysis ruled out average effects larger than 1 percent.</p>
<p>"The adoption of these chatbots has been remarkably fast," Humlum told <a href="https://www.theregister.com/2025/04/29/generative_ai_no_effect_jobs_wages/">The Register</a> about the study. "Most workers in the exposed occupations have now adopted these chatbots... But then when we look at the economic outcomes, it really has not moved the needle."</p>
<h2>AI creating more work?</h2>
<p>During the study, the researchers investigated how company investment in AI affected worker adoption and how chatbots changed workplace processes. While corporate investment boosted AI tool adoption‚Äîsaving time for 64 to 90 percent of users across studied occupations‚Äîthe actual benefits were less substantial than expected.</p>
<p>The study revealed that AI chatbots actually created new job tasks for 8.4 percent of workers, including some who did not use the tools themselves, offsetting potential time savings. For example, many teachers now spend time detecting whether students use ChatGPT for homework, while other workers review AI output quality or attempt to craft effective prompts.</p>

          
                      
                  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why can't HTML alone do includes? (237 pts)]]></title>
            <link>https://frontendmasters.com/blog/seeking-an-answer-why-cant-html-alone-do-includes/</link>
            <guid>43878728</guid>
            <pubDate>Sat, 03 May 2025 12:50:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://frontendmasters.com/blog/seeking-an-answer-why-cant-html-alone-do-includes/">https://frontendmasters.com/blog/seeking-an-answer-why-cant-html-alone-do-includes/</a>, See on <a href="https://news.ycombinator.com/item?id=43878728">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
    
<p><img width="1024" height="607" src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/includes.jpg?fit=1024%2C607&amp;ssl=1" alt="" decoding="async" fetchpriority="high" srcset="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/includes.jpg?w=1140&amp;ssl=1 1140w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/includes.jpg?resize=300%2C178&amp;ssl=1 300w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/includes.jpg?resize=1024%2C607&amp;ssl=1 1024w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/includes.jpg?resize=768%2C455&amp;ssl=1 768w" sizes="(max-width: 1024px) 100vw, 1024px"></p>

<main>

  <article id="post-5713">

    
      
    

    

    <div>
      
<p>I‚Äôm obsessed with this basic web need. </p>



<p>You‚Äôve got three pages:</p>



<ul>
<li>index.html</li>



<li>about.html</li>



<li>contact.html</li>
</ul>



<p>You need to put <strong>the same</strong> header on all three pages. </p>



<p>Our developer brains scream at us to ensure that we‚Äôre not copying the exact code three times, we‚Äôre creating the header <strong>once<em> </em></strong>then ‚Äúincluding‚Äù it on the three (or a thousand) other pages.</p>



<figure><img data-recalc-dims="1" decoding="async" width="1024" height="551" src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/Screenshot-2025-04-29-at-11.34.15%E2%80%AFAM.png?resize=1024%2C551&amp;ssl=1" alt="" srcset="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/Screenshot-2025-04-29-at-11.34.15%E2%80%AFAM-scaled.png?resize=1024%2C551&amp;ssl=1 1024w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/Screenshot-2025-04-29-at-11.34.15%E2%80%AFAM-scaled.png?resize=300%2C162&amp;ssl=1 300w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/Screenshot-2025-04-29-at-11.34.15%E2%80%AFAM-scaled.png?resize=768%2C414&amp;ssl=1 768w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/Screenshot-2025-04-29-at-11.34.15%E2%80%AFAM-scaled.png?resize=1536%2C827&amp;ssl=1 1536w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2025/04/Screenshot-2025-04-29-at-11.34.15%E2%80%AFAM-scaled.png?resize=2048%2C1103&amp;ssl=1 2048w" sizes="(max-width: 1000px) 100vw, 1000px"></figure>



<h2>There are so many solutions to this problem</h2>



<p>We don‚Äôt need to list them all here. I <a href="https://css-tricks.com/the-simplest-ways-to-handle-html-includes/">documented <em>some</em> of them</a> one time, but there are many more. </p>



<p>We‚Äôve got JavaScript to go <a href="https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch">fetch</a> the HTML and <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/insertAdjacentElement">insert</a> it. We‚Äôve got <a href="https://httpd.apache.org/docs/2.4/howto/ssi.html">old school web server directives</a>. Any <a href="https://jekyllrb.com/docs/includes/">static site generator</a> can do it. <a href="https://www.npmjs.com/package/gulp-include">Task runners</a> can do it. <a href="https://handlebarsjs.com/guide/partials.html">Templating languages</a> tend to have include functionality. Any <a href="https://www.php.net/manual/en/function.include.php">backend language</a> can generate HTML on the fly. I‚Äôve seen several <a href="https://www.keithcirkel.co.uk/i-html/">Web Components</a> purpose-built for this. We‚Äôve got <code>&lt;iframe&gt;</code>, which technically is a pure HTML solution, but they are bad for overall performance, accessibility, and generally extremely awkward here, but we <a href="https://www.filamentgroup.com/lab/html-includes/#another-demo%3A-including-another-html-file">can extract them</a>. We can just not worry about includes at all and trust our code editors powerful find and replace tools.</p>



<h2>But none of the solutions is HTML</h2>



<p>None of these are a straightforward HTML tag. None of these are just some HTML way of saying ‚Äúgo get this HTML and put it here‚Äù, like <code>&lt;img&gt;</code> is for ‚Äúgo get this image and put it here. </p>



<h2>Why?</h2>



<p>No, really, <em>why?</em></p>



<p>CSS can import CSS. JavaScript can import JavaScript. HTML cannot import HTML.</p>



<p>I‚Äôm sure there are reasons. Normally, web standards and browsers are all about ‚Äúpaving the cowpaths‚Äù, that is, providing solutions around what developers are already doing. We were reaching for third-party JavaScript to help with dates, so <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Temporal">the web platform stepped in</a>. We were using frameworks for page transitions, so <a href="https://developer.mozilla.org/en-US/docs/Web/API/View_Transition_API">the web platform stepped in</a>. We used libraries for positioning elements next to each other safely, so <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_anchor_positioning">the web platform stepped in</a>. There are countless examples like this.</p>



<p>I‚Äôd wager (counts fingers) pretty much <em>all</em> websites need this ability, and all of them reach for different additional non-web-standard tooling to get it done. That‚Äôs <em>weird</em>.</p>



<p>So what are those reasons?</p>



<ul>
<li>Does it wreck the <a href="https://web.dev/articles/preload-scanner">preload scanner</a>? As in, it could have very bad web performance issues?</li>



<li>Would it have to be async and thus have issues with jerky/shifty loading experiences?</li>



<li>Does it introduce some kind of complexity that harms the purity of HTML or something?</li>



<li>Is it the difficulty of handling nested includes? Circular includes?</li>



<li>Is it pushback from web hosting that a feature like this would increase web requests dramatically?</li>



<li>Would the restrictions be too strict to make it useful? Like for whatever reason it‚Äôs cool to load images and CSS and JS from other domains, but HTML would likely be restricted.</li>



<li>Is there something problematic about the idea that I haven‚Äôt listed here?</li>



<li>Is there actually no real desire for this and I‚Äôm just a weirdo thinking there is?</li>
</ul>



<p>If anyone has been a part of these discussions or knows exactly why this is, or you just have general thoughts, leave a comment!</p>
    </div>
    
  </article>

  

  

  
</main>

  
    <fem-contributions>
      <header slot="header">
        <h2>Did you know?</h2>
        <p>Frontend Masters Donates to open source projects. $363,806 contributed to date.</p>
      </header>
      
    </fem-contributions>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Minimum Viable Blog (295 pts)]]></title>
            <link>https://ostwilkens.se/blog/setting-up-blog</link>
            <guid>43877797</guid>
            <pubDate>Sat, 03 May 2025 09:08:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ostwilkens.se/blog/setting-up-blog">https://ostwilkens.se/blog/setting-up-blog</a>, See on <a href="https://news.ycombinator.com/item?id=43877797">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<pre><span></span><code><span>&lt;!DOCTYPE html&gt;</span>
<span>&lt;</span><span>html</span> <span>lang</span><span>=</span><span>"en"</span><span>&gt;</span>

<span>&lt;</span><span>head</span><span>&gt;</span>
    <span>&lt;</span><span>meta</span> <span>charset</span><span>=</span><span>"UTF-8"</span> <span>/&gt;</span>
    <span>&lt;</span><span>meta</span> <span>name</span><span>=</span><span>"viewport"</span> <span>content</span><span>=</span><span>"width=device-width, initial-scale=1.0"</span> <span>/&gt;</span>
    <span>&lt;</span><span>title</span><span>&gt;</span>Carl √ñst Wilkens' Blog<span>&lt;/</span><span>title</span><span>&gt;</span>
    <span>&lt;</span><span>style</span><span>&gt;</span>
<span>        </span><span>:</span><span>root</span><span> </span><span>{</span>
<span>            </span><span>color-scheme</span><span>:</span><span> </span><span>light</span><span> </span><span>dark</span><span>;</span>
<span>        </span><span>}</span>
<span>        </span><span>html</span><span> </span><span>{</span>
<span>            </span><span>font-family</span><span>:</span><span> </span><span>system-ui</span><span>,</span><span> </span><span>sans-serif</span><span>;</span>
<span>            </span><span>max-width</span><span>:</span><span> </span><span>70</span><span>ch</span><span>;</span>
<span>            </span><span>padding</span><span>:</span><span> </span><span>3</span><span>em</span><span> </span><span>1</span><span>em</span><span>;</span>
<span>            </span><span>margin</span><span>:</span><span> </span><span>auto</span><span>;</span>
<span>            </span><span>line-height</span><span>:</span><span> </span><span>1.5</span><span>;</span>
<span>            </span><span>font-size</span><span>:</span><span> </span><span>1.25</span><span>em</span><span>;</span>
<span>        </span><span>}</span>
<span>    </span><span>&lt;/</span><span>style</span><span>&gt;</span>
<span>&lt;/</span><span>head</span><span>&gt;</span>

<span>&lt;</span><span>body</span><span>&gt;</span>
    <span>&lt;</span><span>a</span> <span>href</span><span>=</span><span>"/"</span> <span>id</span><span>=</span><span>"head-link"</span><span>&gt;</span>Carl √ñst Wilkens' Blog<span>&lt;/</span><span>a</span><span>&gt;</span>
    {{ content }}
<span>&lt;/</span><span>body</span><span>&gt;</span>

<span>&lt;/</span><span>html</span><span>&gt;</span>
</code></pre>
</div><div>
<pre><span></span><code><span>import</span><span> </span><span>os</span>
<span>import</span><span> </span><span>markdown2</span>


<span>def</span><span> </span><span>main</span><span>():</span>
    <span># Define the directory containing the Markdown files</span>
    <span>posts_dir</span> <span>=</span> <span>'./posts'</span>
    <span>output_dir</span> <span>=</span> <span>'./blog'</span>

    <span># Read template.html</span>
    <span>with</span> <span>open</span><span>(</span><span>"template.html"</span><span>,</span> <span>'r'</span><span>,</span> <span>encoding</span><span>=</span><span>'utf-8'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
        <span>template</span> <span>=</span> <span>file</span><span>.</span><span>read</span><span>()</span>

    <span># Create output directory if it doesn't exist</span>
    <span>os</span><span>.</span><span>makedirs</span><span>(</span><span>output_dir</span><span>,</span> <span>exist_ok</span><span>=</span><span>True</span><span>)</span>

    <span># Iterate over all dirs in the posts directory</span>
    <span>for</span> <span>post_directory</span> <span>in</span> <span>os</span><span>.</span><span>listdir</span><span>(</span><span>posts_dir</span><span>):</span>
        <span>post_code</span> <span>=</span> <span>post_directory</span>

        <span># Construct full file path</span>
        <span>file_path</span> <span>=</span> <span>os</span><span>.</span><span>path</span><span>.</span><span>join</span><span>(</span><span>posts_dir</span><span>,</span> <span>post_directory</span><span>,</span> <span>'eng.md'</span><span>)</span>

        <span># Read the Markdown file</span>
        <span>with</span> <span>open</span><span>(</span><span>file_path</span><span>,</span> <span>'r'</span><span>,</span> <span>encoding</span><span>=</span><span>'utf-8'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
            <span>md_content</span> <span>=</span> <span>file</span><span>.</span><span>read</span><span>()</span>

        <span># Find first line which contains "# "</span>
        <span>title</span> <span>=</span> <span>md_content</span><span>.</span><span>split</span><span>(</span><span>"# "</span><span>,</span> <span>1</span><span>)</span><span>.</span><span>pop</span><span>(</span><span>1</span><span>)</span><span>.</span><span>split</span><span>(</span><span>"</span><span>\n</span><span>"</span><span>)</span><span>.</span><span>pop</span><span>(</span><span>0</span><span>)</span>

        <span># Convert Markdown to HTML</span>
        <span>html_content</span> <span>=</span> <span>markdown2</span><span>.</span><span>markdown</span><span>(</span><span>md_content</span><span>,</span> <span>extras</span><span>=</span><span>[</span><span>'fenced-code-blocks'</span><span>,</span> <span>"header-ids"</span><span>])</span>
        <span>html_content</span> <span>=</span> <span>html_content</span><span>.</span><span>replace</span><span>(</span><span>'&lt;img src="'</span><span>,</span> <span>f</span><span>'&lt;img src="/posts/</span><span>{</span><span>post_code</span><span>}</span><span>/'</span><span>)</span>
        <span>html_content</span> <span>=</span> <span>template</span><span>.</span><span>replace</span><span>(</span><span>'{{ content }}'</span><span>,</span> <span>html_content</span><span>)</span>
        <span>html_content</span> <span>=</span> <span>html_content</span><span>.</span><span>replace</span><span>(</span><span>'Minimum viable blog'</span><span>,</span> <span>title</span><span>)</span>

        <span># Construct HTML file path</span>
        <span>html_filename</span> <span>=</span> <span>post_code</span> <span>+</span> <span>'.html'</span>  <span># Replace .md with .html</span>
        <span>html_path</span> <span>=</span> <span>os</span><span>.</span><span>path</span><span>.</span><span>join</span><span>(</span><span>output_dir</span><span>,</span> <span>html_filename</span><span>)</span>

        <span># Save the HTML file</span>
        <span>with</span> <span>open</span><span>(</span><span>html_path</span><span>,</span> <span>'w'</span><span>,</span> <span>encoding</span><span>=</span><span>'utf-8'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
            <span>file</span><span>.</span><span>write</span><span>(</span><span>html_content</span><span>)</span>
        <span>print</span><span>(</span><span>f</span><span>"Rendered </span><span>{</span><span>post_code</span><span>}</span><span> to </span><span>{</span><span>html_filename</span><span>}</span><span>"</span><span>)</span>

    <span># Render index.html</span>
    <span>index_html</span> <span>=</span> <span>""</span>

    <span># Load greetings.md</span>
    <span>with</span> <span>open</span><span>(</span><span>"greetings.md"</span><span>,</span> <span>'r'</span><span>,</span> <span>encoding</span><span>=</span><span>'utf-8'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
        <span>md_content</span> <span>=</span> <span>file</span><span>.</span><span>read</span><span>()</span>
    <span>index_html</span> <span>=</span> <span>markdown2</span><span>.</span><span>markdown</span><span>(</span><span>md_content</span><span>,</span> <span>extras</span><span>=</span><span>[</span><span>'fenced-code-blocks'</span><span>,</span> <span>"header-ids"</span><span>])</span>

    <span>for</span> <span>post_directory</span> <span>in</span> <span>os</span><span>.</span><span>listdir</span><span>(</span><span>posts_dir</span><span>):</span>
        <span>post_code</span> <span>=</span> <span>post_directory</span>
        <span>file_path</span> <span>=</span> <span>os</span><span>.</span><span>path</span><span>.</span><span>join</span><span>(</span><span>posts_dir</span><span>,</span> <span>post_directory</span><span>,</span> <span>'eng.md'</span><span>)</span>
        <span>with</span> <span>open</span><span>(</span><span>file_path</span><span>,</span> <span>'r'</span><span>,</span> <span>encoding</span><span>=</span><span>'utf-8'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
            <span>md_content</span> <span>=</span> <span>file</span><span>.</span><span>read</span><span>()</span>
        <span>title</span> <span>=</span> <span>md_content</span><span>.</span><span>split</span><span>(</span><span>"# "</span><span>,</span> <span>1</span><span>)</span><span>.</span><span>pop</span><span>(</span><span>1</span><span>)</span><span>.</span><span>split</span><span>(</span><span>"</span><span>\n</span><span>"</span><span>)</span><span>.</span><span>pop</span><span>(</span><span>0</span><span>)</span>
        <span>index_html</span> <span>+=</span> <span>f</span><span>'&lt;li&gt;&lt;a href="/blog/</span><span>{</span><span>post_code</span><span>}</span><span>.html"&gt;</span><span>{</span><span>title</span><span>}</span><span>&lt;/a&gt;&lt;/li&gt;'</span>
    <span>index_html</span> <span>=</span> <span>template</span><span>.</span><span>replace</span><span>(</span><span>'{{ content }}'</span><span>,</span> <span>index_html</span><span>)</span>
    <span>index_html</span> <span>=</span> <span>index_html</span><span>.</span><span>replace</span><span>(</span><span>'Minimum viable blog'</span><span>,</span> <span>"Index"</span><span>)</span>
    <span>index_path</span> <span>=</span> <span>"index.html"</span>
    <span>with</span> <span>open</span><span>(</span><span>index_path</span><span>,</span> <span>'w'</span><span>,</span> <span>encoding</span><span>=</span><span>'utf-8'</span><span>)</span> <span>as</span> <span>file</span><span>:</span>
        <span>file</span><span>.</span><span>write</span><span>(</span><span>index_html</span><span>)</span>
    <span>print</span><span>(</span><span>f</span><span>"Rendered index.html"</span><span>)</span>

<span>main</span><span>()</span>
</code></pre>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Accountability Sinks (537 pts)]]></title>
            <link>https://250bpm.substack.com/p/accountability-sinks</link>
            <guid>43877301</guid>
            <pubDate>Sat, 03 May 2025 06:45:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://250bpm.substack.com/p/accountability-sinks">https://250bpm.substack.com/p/accountability-sinks</a>, See on <a href="https://news.ycombinator.com/item?id=43877301">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png" width="1271" height="949" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:949,&quot;width&quot;:1271,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2598130,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://250bpm.substack.com/i/161787939?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png&quot;,&quot;isProcessing&quot;:false,&quot;align&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F1c8264d4-0df6-4038-b3db-fecc83488367_1271x949.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><blockquote><p>Back in the 1990s, ground squirrels were briefly fashionable pets, but their popularity came to an abrupt end after an incident at Schiphol Airport on the outskirts of Amsterdam. In April 1999, a cargo of 440 of the rodents arrived on a KLM flight from Beijing, without the necessary import papers. Because of this, they could not be forwarded on to the customer in Athens. But nobody was able to correct the error and send them back either. What could be done with them? It‚Äôs hard to think there wasn‚Äôt a better solution than the one that was carried out; faced with the paperwork issue, airport staff threw all 440 squirrels into an industrial shredder.</p><p>[...]</p><p>It turned out that the order to destroy the squirrels had come from the Dutch government‚Äôs Department of Agriculture, Environment Management and Fishing. However, KLM‚Äôs management, with the benefit of hindsight, said that ‚Äòthis order, in this form and without feasible alternatives,* was unethical‚Äô. The employees had acted ‚Äòformally correctly‚Äô by obeying the order, but KLM acknowledged that they had made an ‚Äòassessment mistake‚Äô in doing so. The company‚Äôs board expressed ‚Äòsincere regret‚Äô for the way things had turned out, and there‚Äôs no reason to doubt their sincerity.</p><p>[...]</p><p>In so far as it is possible to reconstruct the reasoning, it was presumed that the destruction of living creatures would be rare, more used as a threat to encourage people to take care over their paperwork rather than something that would happen to hundreds of significantly larger mammals than the newborn chicks for which the shredder had been designed.</p><p>The characterisation of the employees‚Äô decision as an ‚Äòassessment mistake‚Äô is revealing; in retrospect, the only safeguard in this system was the nebulous expectation that the people tasked with disposing of the animals might decide to disobey direct instructions if the consequences of following them looked sufficiently grotesque. It‚Äôs doubtful whether it had ever been communicated to them that they were meant to be second-guessing their instructions on ethical grounds; most of the time, people who work in sheds aren‚Äôt given the authority to overrule the government. In any case, it is neither psychologically plausible nor managerially realistic to expect someone to follow orders 99 per cent of the time and then suddenly act independently on the hundredth instance.</p></blockquote><p><span>‚Äî </span><a href="https://www.amazon.com/Unaccountability-Machine-Systems-Terrible-Decisions/dp/0226843084" rel="">Dan Davies: The Unaccountability Machine</a></p><p>***</p><blockquote><p>Someone ‚Äì an airline gate attendant, for example ‚Äì tells you some bad news; perhaps you‚Äôve been bumped from the flight in favour of someone with more frequent flyer points. You start to complain and point out how much you paid for your ticket, but you‚Äôre brought up short by the undeniable fact that the gate attendant can‚Äôt do anything about it. You ask to speak to someone who can do something about it, but you‚Äôre told that‚Äôs not company policy.</p><p>The unsettling thing about this conversation is that you progressively realise that the human being you are speaking to is only allowed to follow a set of processes and rules that pass on decisions made at a higher level of the corporate hierarchy. It‚Äôs often a frustrating experience; you want to get angry, but you can‚Äôt really blame the person you‚Äôre talking to. Somehow, the airline has constructed a state of affairs where it can speak to you with the anonymous voice of an amorphous corporation, but you have to talk back to it as if it were a person like yourself.</p><p>Bad people react to this by getting angry at the gate attendant; good people walk away stewing with thwarted rage.</p></blockquote><p>‚Äî ibid.</p><p>***</p><p>A credit company used to issue plastic cards to its clients, allowing them to make purchases. Each card had the client‚Äôs name printed on it.</p><p>Eventually, employees noticed a problem: The card design only allowed for 24 characters, but some applicants had names longer than that. They raised the issue with the business team.</p><p>The answer they've got was that since only a tiny percentage of people have names that long, rather than redesigning the card, those applications would simply be rejected.</p><p>You may be in a perfectly good standing, but you'll never get a credit. And you are not even told why. There's nobody accountable and there's nobody to complain to. A technical dysfunction got papered over with process.</p><p>***</p><p>Holocaust researchers keep stressing one point: The large-scale genocide was possible only by turning the popular hatred, that would otherwise discharge in few pogroms, into a formalized administrative process.</p><p>For example, separating the Jews from the rest of the population and concentrating them at one place was a crucial step on the way to the extermination.</p><p>In Bulgaria, Jews weren't gathered in ghettos or local "labor camps", but rather sent out to rural areas to help at farms. Once they were dispersed throughout the country there was no way to proceed with the subsequent steps, such as loading them on trains and sending them to the concentration camps.</p><p>Concentrating the Jews was thus crucial to the success of the genocide. Yet, bureaucrats working on the task haven't felt like they were personally killing anybody. They were just doing their everyday, boring, administrative work.</p><p><span>The point is made more salient when reading about Nuremberg trials. Apparently, nobody was responsible for anything. Everybody was just following the </span><s>process </s><span>orders.</span></p><p><span>To be fair, the accused often acted on their own rather than following the orders. And it turns out that the German soldiers faced </span><a href="https://www.jstor.org/stable/1429971?fbclid=IwY2xjawJxTzRleHRuA2FlbQIxMQABHtoYHERmDvqIXSioHoGK97cefmIGwTaXxbCrhvQnYiJG5Grx5hqIBQrfQf2e_aem_8Ylqq2WH9-JtsZnHJkBvPQ" rel="">surprisingly mild consequences</a><span> for disobeying unlawful orders. So it's not like the high-ups would be severely hurt if they just walked away or even tried to mitigate the damage.</span></p><p>Yet, the vague feeling of arbitrariness about Nuremberg trials persists. Why blame these guys and not the others? There were literally hundreds of thousands involved in implementing the final solution. The feeling gets even worse when contemplating German denazification trials in 1960's:</p><blockquote><p>Today they bring even 96-year-olds or even centenarians to justice just because they worked somewhere in an office or sat in a watchtower. But if it had been done like that in 1965, more than 300,000 German men and women would have had to be imprisoned for life for aiding and abetting murder. [...] It had to be kept under control and suppressed, because otherwise it would have been impossible to start anew. [...] There was a secretary at the Wannsee Conference and no one considered putting her in jail. And yet all these terrible orders were not typed by those who issued them. They were typed by women.</p></blockquote><p><span>‚Äî </span><a href="https://www.youtube.com/watch?v=9KJsevJjABg" rel="">Interview with historian G√∂tz Aly</a><span> (in German)</span></p><p>***</p><p>At the first glance, this might seem like a problem unique to large organizations. But it doesn't take a massive bureaucracy to end up in the same kind of dysfunction. You can get there with just two people in an informal setting.</p><p>Say a couple perpetually quarrels about who's going to do the dishes. To prevent further squabbles they decide to split the chores on weekly, alternating basis.</p><p>Everything works well, until one of the spouses falls ill. The dishes pile up in the kitchen sink, but the other spouse does not feel responsible for the mess. It‚Äôs not their turn. And yes, there's nobody to blame.</p><p>***</p><p><span>This is what </span><a href="https://backofmind.substack.com/" rel="">Dan Davies</a><span>, in his book </span><a href="https://www.amazon.com/Unaccountability-Machine-Systems-Terrible-Decisions/dp/0226843084" rel="">The Unaccountability Machine: Why Big Systems Make Terrible Decisions ‚Äî and How the World Lost Its Mind</a><span>, calls "accountability sinks".</span></p><p>Something that used to be a matter of human judgement gets replaced by a formal process. Suddenly, nobody makes any deliberate decisions. Instead, a formal process is followed. In fact, the process may be executed on a computer, with no human involvement at all. There's nobody to blame for anything. There‚Äôs nobody to complain to when the process goes awry. Everybody‚Äôs ass is safely covered.</p><p>In any organization, incentives to replace human judgement by process are strong. Decisions may be controversial. More often than not someone's interests are at play and any decision is going to cause at least some bitterness, resentment and pushback. Introducing a non-personal process allows the decision to be made in automated manner, without anyone being responsible, without anyone having to feel guilty for hurting other people.</p><p><span>The one most important contribution of Davies' book is simply giving this phenomenon, that we all know and </span><s>love</s><span>hate, a name. </span></p><p>And a name, at that, which highlights the crux of the matter, the crux that all too often goes unsaid: Formal processes may be great for improving efficiency. The decision is made once and then applied over and over again, getting the economies of scale.</p><p>Formal processes may improve safety, as when a pilot goes over a check list before the take-off. Are flight controls free and correct? Are all the doors and windows locked? And so further and so on.</p><p>Processes also serve as repositories of institutional memory. They carry lessons from countless past cases, often unknown to the person following the process. Problems once encountered, solutions once devised, all of that is encoded into a set of steps.</p><p>But in the end, deep in the heart of any bureaucracy, the process is about responsibility and the ways to avoid it. It's not an efficiency measure, it‚Äôs an accountability management technique.</p><p>***</p><p><span>Once you grasp the idea, it‚Äôs hard to unsee it. There's a strange mix of enlightenment and dread. Of </span><em>course</em><span> it's about accountability sinks!</span></p><p>All of the popular discontent in the West today is fueled by exactly this: A growing rage at being trapped in systems that treat people not as humans, but as cogs in a machine. Processes, not people, make the decisions. And if the process fails you, there's no one to turn to, no one to explain and no one to take responsibility.</p><p>This is why even the well-off feel anxious and restless. We may have democracy by name, but if the systems we interact with, be it the state or private companies, surrender accountability to the desiccated, inhuman processes and give us no recourse, then the democracy is just a hollow concept with no inner meaning.</p><p>You can't steer your own life anymore. The pursuit of happiness is dead. Even your past achievements can be taken away from you by some faceless process. And when that happens, there‚Äôs no recourse. The future, in this light, begins to feel less hopeful and more ominous.</p><p>It‚Äôs eerie how much of today‚Äôs political unrest begins to make sense through this lens.</p><p>The backlash against experts? Understandable. After all, they‚Äôre seen as the architects of these inhuman systems. The skepticism toward judges? It fits. They often seem more devoted to procedure than to justice. Even the growing tolerance for corruption starts to look different. Yes, it‚Äôs bad, but at least it‚Äôs human. A decision made by someone with a name and a face. Someone you might persuade, or pressure, or hold to account. A real person, not an algorithm.</p><p><span>And every time you‚Äôre stuck on the phone, trapped in an automated loop, listening to </span><em>The Entertainer</em><span> for the hundredth time or navigating endless menus while desperately trying to reach a human being who could actually help, the sense of doom grows a bit stronger.</span></p><p>***</p><p>But let's not get carried away.</p><p>First, as already mentioned, formal processes are, more often than not, good and useful. They increase efficiency and safety. They act as a store of tacit organizational knowledge. Getting rid of them would make the society collapse.</p><p>Second, limiting the accountability if often exactly the thing you want.</p><p>Take the institution of academic tenure. By making a scientist essentially unfireable, it grants them the freedom to pursue any line of research, no matter how risky or unconventional. They don‚Äôt need to justify their work to college administrators, deliver tangible results on a schedule, or apologize for failure.</p><p>The same pattern emerges when looking at successful research institutions such as Xerox PARC, Bell Labs, or DARPA. Time and again, you find a crucial figure in the background: A manager who deliberately shielded researchers from demands for immediate utility, from bureaucratic oversight, and from the constant need to justify their work to higher-ups.</p><p>Yet again, venture capital model of funding new companies relies on relaxed accountability for the startup founders. The founders are expected to try to succeed, but nobody holds them accountable if they do not. The risk is already priced in by the VC. Similarly to the role of the Bell Labs manager, the VC firm acts like a accountability sink between the owners of the capital and startup founders.</p><p>***</p><p>On October 1st, 2017, a hospital emergency department in Las Vegas faced a crisis: A mass shooting at a concert sent hundreds of people with gunshot wounds flooding into the ER at once. The staff managed to handle the emergency in a great way, violating all the established rules and processes along the way:</p><blockquote><p>At that point, one of the nurses came running out into the ambulance bay and just yelled, ‚ÄúMenes! You need to get inside! They‚Äôre getting behind!‚Äù I turned to Deb Bowerman, the RN who had been with me triaging and said, ‚ÄúYou saw what I‚Äôve been doing. Put these people in the right places.‚Äù She said, ‚ÄúI got it.‚Äù And so I turned triage over to a nurse. The textbook says that triage should be run by the most experienced doctor, but at that point what else could we do?</p></blockquote><blockquote><p>Up until then, the nurses would go over to the Pyxis, put their finger on the scanner, and we would wait. Right then, I realized a flow issue. I needed these medications now. I turned to our ED pharmacist and asked for every vial of etomidate and succinylcholine in the hospital. I told one of the trauma nurses that we need every unit of 0 negative up here now. The blood bank gave us every unit they had. In order to increase the flow through the resuscitation process, nurses had Etomidate, Succinylcholine, and units of 0 negative in their pockets or nearby.</p></blockquote><blockquote><p>Around that time the respiratory therapist, said, ‚ÄúMenes, we don‚Äôt have any more ventilators.‚Äù I said, ‚ÄúIt‚Äôs fine,‚Äù and requested some Y tubing. Dr. Greg Neyman, a resident a year ahead of me in residency, had done a study on the use of ventilators in a mass casualty situation. What he came up with was that if you have two people who are roughly the same size and tidal volume, you can just double the tidal volume and stick them on Y tubing on one ventilator.</p></blockquote><p><span>‚Äî </span><a href="https://epmonthly.com/article/not-heroes-wear-capes-one-las-vegas-ed-saved-hundreds-lives-worst-mass-shooting-u-s-history/" rel="">How One Las Vegas ED Saved Hundreds of Lives After the Worst Mass Shooting in U.S. History</a></p><p>As one of the commenters noted: "Amazing! The guy broke every possible rule. If he wasn't a fucking hero, he would be fired on the spot."</p><p>***</p><p>Once, I used to work as an SRE for Gmail. SREs are people responsible for the site being up and running. If there's a problem, you get alerted and it's up to you to fix it, whatever it takes.</p><p>What surprised me the most when I joined the team was the lack of enforced processes. The SREs were accountable to the higher ups for the service being up. But other than that they are not expected to follow any prescribed process while dealing with the outages.</p><p>Yes, we used a lot of processes. But these were processes we chose for ourselves, more like guidelines or recommendations than hard-and-fast rules. And in an aftermath of an outage, adjusting the process became as much a part of the response as fixing the software itself.</p><p>There is even an explicit rule limiting the accountability of individual SREs. The postmortem, i.e. the report about an outage, should be written in a specific way:</p><blockquote><p>Blameless postmortems are a tenet of SRE culture. For a postmortem to be truly blameless, it must focus on identifying the contributing causes of the incident without indicting any individual or team for bad or inappropriate behavior. A blamelessly written postmortem assumes that everyone involved in an incident had good intentions and did the right thing with the information they had. If a culture of finger pointing and shaming individuals or teams for doing the "wrong" thing prevails, people will not bring issues to light for fear of punishment.</p></blockquote><p><span>‚Äî </span><a href="https://sre.google/sre-book/postmortem-culture/" rel="">Site Reliability Engineering, How Google runs production systems</a></p><p>***</p><p>On February 1, 1991, a jetliner crashed into a smaller, commuter propeller plane on the runway at Los Angeles International Airport. The impact killed twelve people instantly. The small plane, which was pushing the larger one ahead at a speed of one hundred and fifty kilometers, exploded in the fuel tank and caught fire. Passengers tried to get out of the burning plane, but not everyone succeeded. The death toll eventually rose to thirty-five.</p><p><span>Here's a </span><a href="https://asteriskmag.com/issues/05/why-you-ve-never-been-in-a-plane-crash" rel="">great article from Asterisk</a><span> about the event:</span></p><blockquote><p>At the LAX control tower, local controller Robin Lee Wascher was taken off duty‚Äâ‚Äî‚Äâas is standard practice after a crash. After hearing about the propeller, she knew she must have cleared USAir flight 1493 to land on an occupied runway. As tower supervisors searched for any sign of a missing commuter flight, Wascher left the room. Replaying the events in her mind, she realized that the missing plane was SkyWest flight 5569, a 19-seat Fairchild Metroliner twin turboprop bound for Palmdale. Several minutes before clearing the USAir jet to land, she had told flight 5569 to ‚Äútaxi into position and hold‚Äù on runway 24L. But she could not recall having cleared it for takeoff. The plane was probably still sitting ‚Äúin position‚Äù on the runway waiting for her instructions when the USAir 737 plowed into it from behind. It was a devastating realization, but an important one, so in an act of great bravery, she returned to the tower, pointed to flight 5569, and told her supervisor, ‚ÄúThis is what I believe USAir hit.‚Äù</p><p>[...]</p><p>The fact that Wascher made a mistake was self-evident, as was the fact that that mistake led, more or less directly, to the deaths of 35 people. The media and the public began to question the fate of Ms. Wascher. Should she be punished? Should she lose her job? Did she commit an offense? </p><p>[...]</p><p>Cutting straight to the case, Wascher was not punished in any way. At first, after being escorted, inconsolable, from the tower premises, her colleagues took her to a hotel and stood guard outside her room to keep the media at bay. Months later, Wascher testified before the NTSB hearings, providing a faithful and earnest recounting of the events as she recalled them. She was even given the opportunity to return to the control tower, but she declined. No one was ever charged with a crime.</p><p>[...]</p><p>If you listen to the tower tapes, you can easily identify the moment Wascher cleared two planes to use the same runway. But if you remove her from the equation, you haven‚Äôt made anything safer. That‚Äôs because there was nothing special about Wascher‚Äâ‚Äî‚Äâshe was simply an average controller with an average record, who came into work that day thinking she would safely control planes for a few hours and then go home. That‚Äôs why in interviews with national media her colleagues hammered home a fundamental truth: that what happened to her could have happened to any of them. And if that was the case, then the true cause of the disaster lay somewhere higher, with the way air traffic control was handled at LAX on a systemic level.</p></blockquote><p>When you read the report of the investigation, your perspective suddenly changes. Suddenly, there is no evil controller Wascher who needs to be publicly punished. Instead, there is a team of controllers who, despite all the broken radars, poor visibility and distracting duties, heroically ensure that planes do not collide day in, day out.</p><p>And if the result of Washer giving a honest report about the incident is that a second ground radar is purchased, that the interfering lights are relocated, or that various less important auxiliary tasks are not performed by the flight controller in charge, the effect on air traffic safety is a much bigger than what could be achieved by firing Wascher. Quite the opposite: Punishing her would have a chilling effect on other experienced controllers. At least some of them would be unwilling to take responsibility for things beyond their control and would eventually leave just to be replaced by less experienced ones.</p><p>***</p><p><span>Some of my former colleagues at Google were part of the effort to save Obamacare after the website that people were supposed to use to subscribe to the program turned out not be working. Here's </span><a href="https://en.wikipedia.org/wiki/HealthCare.gov#Issues_during_launch" rel="">Wikipedia</a><span>:</span></p><blockquote><p>The HealthCare.gov website was launched on the scheduled date of October 1, 2013. Although the government shutdown began on the same day, HealthCare.gov was one of the federal government websites that remained open through the events. Although it appeared to be up and running normally, visitors quickly encountered numerous types of technical problems, and, by some estimates, only 1% of interested people were able to enroll to the site in the first week of its operations.</p></blockquote><p><span>Suddenly, a website was in the center of attention of both the media and the administration, even the president himself. As </span><a href="https://www.eatingpolicy.com/" rel="">Jennifer Pahlka</a><span> writes in her excellent book </span><a href="https://www.amazon.com/Recoding-America-Government-Failing-Digital/dp/1250266777" rel="">Recoding America: Why Government Is Failing in the Digital Age and How We Can Do Better</a><span>:</span></p><blockquote><p>If the site failed, Obama‚Äôs signature policy would likely go down with it. With this threat looming, suddenly the most important policy of the administration would live or die by its implementation. It was the first time the highest priority of the White House was the performance of a website.</p></blockquote><p>Having the support from the highest places, the people in what was to become US Digital Service, outlined a plan:</p><blockquote><p>He had a straightforward two-step plan. Step one was to recruit a small team of technologists with relevant experiences and skills [to fix the website]. Through a trusted network, he reached out to a set of remarkable individuals who signed up to jump into the fire with him. Step two was to win the trust of CMS‚Äîan agency [responsible for implementation of the website] that, like all other agencies, really, was highly skeptical of people from outside and resistant to their interference. The situation was tense, but Todd made it clear that he and everyone who came with him were not there to assign blame. They were there to help. The result was the opposite of the usual response to failure. Instead of the hardening that tends to come with increased oversight‚Äîof the kind Weaver would later experience working on satellite software, further limiting what he could do‚Äîthe CMS team suddenly found themselves with something they hadn‚Äôt realized they needed: a group of smart nerds they could trust. Like most other agencies, they knew how to acquire technology and technology services; after all, they‚Äôd issued those sixty separate contracts for healthcare.gov alone. But now they had people on their team who could look at the code, not the contract terms. That, it turned out, made all the difference.</p></blockquote><p>‚Äî ibid.</p><p>Again, sidestepping accountability had a beneficial effect. It managed to cut through the seemingly unsolvable internal hurdles and unstuck a stuck system.</p><p>***</p><p><span>Dominic Cummings, chief advisor to Boris Johnson during the COVID crisis, </span><a href="https://www.dwarkesh.com/p/dominic-cummings" rel="">recounts</a><span>:</span></p><blockquote><p>At the peak of COVID craziness in March 2020, on the day itself that the PM tested positive for CoVID, a bunch of people come into Number 10 sit around the table and we have a meeting and it‚Äôs about supplies of PPE to the NHS.</p><p>They say, ‚ÄúNone of this PPE that we‚Äôve ordered is going to be here until the summer.‚Äù</p><p>‚ÄúBut the peak demand is over the next three to four weeks.‚Äù</p><p>‚ÄúSorry, Dominic, but it‚Äôs not going to be here.‚Äù</p><p>‚ÄúWhy not?‚Äù</p><p>‚ÄúWell, because that‚Äôs how long it takes to ship from China.‚Äù</p><p>‚ÄúWhy are you shipping from China?‚Äù</p><p>‚ÄúWell, because that‚Äôs what we always do. We ship it from China.‚Äù</p><p>But A, we need it now and B, all of the airlines are grounded. No one‚Äôs flying anything.</p><p>‚ÄúSo call up the airlines, tell them that we‚Äôre taking their planes, we‚Äôre flying all the planes to China, we‚Äôre picking up all our shit, we‚Äôre bringing it back here. Do that now. Do that today. Send the planes today.‚Äù</p><p>We did that. But only the Prime Minister could actually cut through all the bureaucracy and say, Ignore these EU rules on Blah. Ignore treasury guidance on Blah. Ignore this. Ignore that. ‚ÄúI am personally saying do this and I will accept full legal responsibility for everything.‚Äù</p></blockquote><p>By taking over responsibility, Johnson loosened the accountability of the civil servants and allowed them to actually solve the problem instead of being stuck following the rigid formal process.</p><p>***</p><p>Finally, consider the mother of all accountability sinks: The free market.</p><p>We want government to enforce the rule of law, to enforce the contracts and generally make sure that the market operates freely. But we also explicitly don‚Äôt want government interference in the day-to-day workings of the market beyond ensuring compliance with the law and taxes.</p><p>Much has been written about how markets act as information-processing machines, how they gather dispersed data from across society and use it to optimize the allocation of scarce resources.</p><p>Much less is known about how the lack of accountability gives entrepreneurs the ability to take huge risks. If your company fails, the blame is yours and yours only. No one will come after you. There‚Äôs no need to play it safe.</p><p>While ignoring the law of supply and demand may have been the primary cause for the failure of communist economies, the fact that the management of every company was accountable to the higher-ups and eventually to the communist party must have meant that they tried to avoid any risks at any cost, which eventually led to terrible performance in implementation of new technologies ‚Äî even if they were discovered by the scientists ‚Äî and business practices and to the overall economic stagnation.</p><p>***</p><p>By now, you probably have a few ideas of your own about how accountability sinks can be creatively incorporated into institutional design.</p><p>But before I wrap up, let me make a few basic observations:</p><ol><li><p>Formal processes are mostly beneficial and they‚Äôre not going anywhere. Any complex modern society would collapse without them.</p></li><li><p>Not every formal process is an accountability sink. A process you design and impose upon yourself doesn‚Äôt absolve you of responsibility when things go wrong. You remain accountable. On the other hand, a process imposed upon you from above often incentivizes blind adherence, even when it‚Äôs hurting the stated goals.</p></li><li><p>Not every accountability sink leads to rigidity and cover-ups.  A process can be designed in such a way as to shield those affected from the accountability, but at the same time not to impose any pre-canned solutions upon them. (E.g. blameless postmortems.)</p></li></ol></div></article></div><div id="discussion"><h4>Discussion about this post</h4></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Connomore64: Cycle exact emulation of the C64 using parallel microcontrollers (195 pts)]]></title>
            <link>https://github.com/c1570/Connomore64</link>
            <guid>43876566</guid>
            <pubDate>Sat, 03 May 2025 03:04:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/c1570/Connomore64">https://github.com/c1570/Connomore64</a>, See on <a href="https://news.ycombinator.com/item?id=43876566">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Connomore64</h2><a id="user-content-connomore64" aria-label="Permalink: Connomore64" href="#connomore64"></a></p>
<p dir="auto"><a href="https://github.com/c1570/Connomore64">https://github.com/c1570/Connomore64</a></p>
<p dir="auto">Realtime cycle exact emulation of the <a href="https://en.wikipedia.org/wiki/Commodore_64" rel="nofollow">Commodore 64</a> using multiple microcontrollers in parallel.</p>
<p dir="auto"><strong>This is a proof of concept and not end user ready.</strong></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/c1570/Connomore64/blob/main/images/CNM64_Breadbox_v0_prototype.jpg"><img src="https://github.com/c1570/Connomore64/raw/main/images/CNM64_Breadbox_v0_prototype.jpg" alt="Connomore64 breadbox v0 prototype"></a></p>
<p dir="auto"><strong><a href="https://github.com/c1570/Connomore64/blob/main/2024-07-Connomore64_poster.pdf">July 2024 poster</a></strong> (old prototype)</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">In a nutshell, this is (or aims to be)‚Ä¶</h2><a id="user-content-in-a-nutshell-this-is-or-aims-to-be" aria-label="Permalink: In a nutshell, this is (or aims to be)‚Ä¶" href="#in-a-nutshell-this-is-or-aims-to-be"></a></p>
<ul dir="auto">
<li>‚Ä¶a <strong>cycle exact Commodore 64 homecomputer emulator</strong>‚Ä¶</li>
<li>‚Ä¶an (almost) chip-by-chip rebuild using multiple <a href="https://en.wikipedia.org/wiki/RP2040" rel="nofollow">RP2040</a>/<a href="https://en.wikipedia.org/wiki/RP2350" rel="nofollow">RP2350</a> microcontrollers (&lt;1‚Ç¨ per chip!)‚Ä¶</li>
<li>‚Ä¶interconnected using a multiplexed <strong>8 bit bus</strong> running at about 8 MHz effectively‚Ä¶</li>
<li>‚Ä¶using <strong>DVI/HDMI</strong> as video and audio output‚Ä¶</li>
<li>‚Ä¶with microsecond exact true to original real world signal timing‚Ä¶</li>
<li>‚Ä¶able to <strong>interface with original hardware</strong>‚Ä¶
<ul dir="auto">
<li>‚Ä¶such as the C1541 floppy drive, including fastloaders‚Ä¶</li>
<li>‚Ä¶as well as userport and (some) expansion port based hardware.</li>
</ul>
</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Additionally, this is‚Ä¶</h3><a id="user-content-additionally-this-is" aria-label="Permalink: Additionally, this is‚Ä¶" href="#additionally-this-is"></a></p>
<ul dir="auto">
<li>‚Ä¶an example of running <strong>compute intensive software on cheap low powered interconnected microcontrollers</strong>‚Ä¶</li>
<li>‚Ä¶an <strong>emulation framework</strong> to test and debug projects using several RP2040/RP2350s in parallel on a PC.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">But why?</h2><a id="user-content-but-why" aria-label="Permalink: But why?" href="#but-why"></a></p>
<ul dir="auto">
<li>First and foremost, this was started as a holiday project (‚Äúporting an existing C64 emulator to a 400MHz ARM platform cannot take that long, can it?‚Äù) with a focus on playing a bit with the RP2040 microcontroller and getting an idea of what its PIOs (i.e., its GPIO handling coprocessors) are capable of.
<ul dir="auto">
<li>The holiday of this ‚Äúholiday project‚Äù was christmas 2022, and it turns out a single 400MHz M0+ core is definitely not enough to emulate a C64, if accuracy is some priority‚Ä¶</li>
</ul>
</li>
<li>While a C64 emulator on the RP2040 already <a href="https://github.com/silvervest/c64pico">exists</a>, it is using an extremely simplified model of the C64, e.g., not emulating the exact steps and timing of MOS 6510 CPU opcodes, and not emulating the VIC-II video chip exactly but doing video line based emulation instead which limits compatibility.</li>
<li>PC based emulators (VICE, BMC etc.) reach high emulation quality but do not feature perfect realtime timing. That means you cannot use physical retro hardware (floppy drives, etc.) with those emulators in general.</li>
<li>FPGA based emulators of the C64 reach high emulation quality and realtime accuracy, but those platforms strike yours truly as quite overpowered and expensive, not as hackable as would be nice, and typically come with a rather unwieldy (and typically closed source) toolchain.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building Blocks</h2><a id="user-content-building-blocks" aria-label="Permalink: Building Blocks" href="#building-blocks"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">RP2040/RP2350 Emulator</h3><a id="user-content-rp2040rp2350-emulator" aria-label="Permalink: RP2040/RP2350 Emulator" href="#rp2040rp2350-emulator"></a></p>
<p dir="auto">For developing this project, the <a href="https://github.com/wokwi/rp2040js">rp2040js</a> emulator project by Uri Shaked of <a href="https://wokwi.com/" rel="nofollow">Wokwi.com</a> fame has been extended. Very little debugging on real hardware happened. No logic analyzers were necessary at all!</p>
<p dir="auto">You can find my fork of rp2040js <a href="https://github.com/c1570/rp2040js/">here</a>. It features:</p>
<ul dir="auto">
<li>RP2350 support (RISC-V/Hazard3 only)</li>
<li>cycle exact timing of PIOs</li>
<li><a href="https://en.wikipedia.org/wiki/Value_change_dump" rel="nofollow">VCD</a> trace files can get generated for the GPIO signals</li>
<li>a simple framework for running multiple chip emulation instances interfacing to each other (<a href="https://github.com/c1570/rp2040js/blob/rp2350js/WIP/demo/ntc-run.ts">WIP code</a>)</li>
<li>simulation of input/output latency of GPIOs</li>
<li>functionality to output statistics and monitor any PIO stalls is present in the emulation runner that has been customized for this project</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">C64 Emulator Code</h3><a id="user-content-c64-emulator-code" aria-label="Permalink: C64 Emulator Code" href="#c64-emulator-code"></a></p>
<p dir="auto">The C64 emulation code is based on the ‚Äú<a href="https://github.com/floooh/chips">chips</a>‚Äù emulation library by Andre Weissflog. A lot of optimizations have been done:</p>
<ul dir="auto">
<li>speed optimized VIC-II code
<ul dir="auto">
<li>rewritten graphics rendering code (running 5-10 times as fast as the previous code while sacrificing some compatibility)</li>
<li>rendering bitmap/text mode is done using PIO/DMA</li>
<li>rewritten Sprite rendering (in contrast to the original VIC-II, sprites are rendered into a buffer in the offscreen time)</li>
</ul>
</li>
<li>fixed a few <a href="https://github.com/floooh/chips/issues/99" data-hovercard-type="issue" data-hovercard-url="/floooh/chips/issues/99/hovercard">VIC-II emulation bugs</a> (VSP/AGSP works now)</li>
<li>faster CIA emulation using look up tables</li>
<li>replaced <code>uint64_t pins</code> interface with 32 bits pins/direct variables</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Video Output</h3><a id="user-content-video-output" aria-label="Permalink: Video Output" href="#video-output"></a></p>
<p dir="auto">HDMI/DVI output is based on the <a href="https://github.com/Wren6991/PicoDVI">PicoDVI</a> library by Luke Wren.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Audio Output</h3><a id="user-content-audio-output" aria-label="Permalink: Audio Output" href="#audio-output"></a></p>
<p dir="auto">Provided by a port of the <a href="https://github.com/frntc/SIDKick-pico">SIDKick pico</a> firmware (by Carsten Dachsbacher, using reSID by Dag Lem) to the Connomore64 bus system.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hardware</h2><a id="user-content-hardware" aria-label="Permalink: Hardware" href="#hardware"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Breadbox v0 prototype (latest)</h3><a id="user-content-breadbox-v0-prototype-latest" aria-label="Permalink: Breadbox v0 prototype (latest)" href="#breadbox-v0-prototype-latest"></a></p>
<p dir="auto">This is a custom PCB that fits into the C64 case (shown on top of the page).
It comes with the usual C64 ports (userport, IEC, expansion port, joystick ports) plus HDMI and audio jack.
Currently, the userport, IEC, and joystick ports are functional.
Support for select expansion port cartridges (e.g., Magic Desk) is upcoming.</p>
<p dir="auto">Goals of this prototype:</p>
<ul dir="auto">
<li>All original C64 connectors available</li>
<li>Simple to build</li>
<li>Easy migration to RP2350 in development</li>
<li>Testbed for SWD-based firmware handling</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Stacked Pico boards (early prototype)</h3><a id="user-content-stacked-pico-boards-early-prototype" aria-label="Permalink: Stacked Pico boards (early prototype)" href="#stacked-pico-boards-early-prototype"></a></p>
<p dir="auto">The first prototype was several stacked RP2040 boards.
Video output is done using a passive DVISock adapter.
Using a small passive ‚Äúhat‚Äù, it can connect to an original C64 keyboard, joysticks, as well as a floppy drive.
Loading programs from the drive is possible using the original CBM routines as well as the much faster JiffyDOS or other speeders.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/c1570/Connomore64/blob/main/images/CNM64_Prototype_1.jpg"><img src="https://github.com/c1570/Connomore64/raw/main/images/CNM64_Prototype_1.jpg" alt="Early prototype"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">General</h3><a id="user-content-general" aria-label="Permalink: General" href="#general"></a></p>
<p dir="auto">Smaller custom PCBs for the Connomore are possible.
Those could be made very cheap and small as only one flash chip and crystal would be needed, and setting up the microcontrollers could be done via SWD.
Total cost below 20‚Ç¨ might be possible.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Status</h2><a id="user-content-status" aria-label="Permalink: Status" href="#status"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Compatibility</h3><a id="user-content-compatibility" aria-label="Permalink: Compatibility" href="#compatibility"></a></p>
<ul dir="auto">
<li>Runs almost all games just fine
<ul dir="auto">
<li>Mayhem in Monsterland, Hawkeye, Armalyte, Katakis, R-Type, Bubble Bobble, Turrican, ...</li>
</ul>
</li>
<li>Runs a good portion of demos (e.g., Layers)</li>
<li>Fastloaders work just fine (tested with JiffyDOS and <a href="https://www.c64-wiki.com/wiki/Transwarp" rel="nofollow">Transwarp</a>)</li>
<li>User port hardware works (tested with WiC64)</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Missing Features</h3><a id="user-content-missing-features" aria-label="Permalink: Missing Features" href="#missing-features"></a></p>
<ul dir="auto">
<li>Only the CPU half of each C64 cycle is emulated, limiting potential compatibility with C64 expansion port cartridges.
<ul dir="auto">
<li>There is code for Phi low but RP2040/RP2350s are not fast enough for that.</li>
</ul>
</li>
<li>Expansion port firmware and hardware is not done (needs some thought)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">At the moment, the project and code is in no way release ready.
I'll likely release it as (possibly non commercial) strong copyleft open source code at some point.
If you are interested in the project or in contributing, please contact me.</p>
</article></div></div>]]></description>
        </item>
    </channel>
</rss>