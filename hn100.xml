<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 19 May 2025 03:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[France Becomes First Government to Endorse UN Open Source Principles (305 pts)]]></title>
            <link>https://social.numerique.gouv.fr/@codegouvfr/114529954373492878</link>
            <guid>44024759</guid>
            <pubDate>Sun, 18 May 2025 22:27:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://social.numerique.gouv.fr/@codegouvfr/114529954373492878">https://social.numerique.gouv.fr/@codegouvfr/114529954373492878</a>, See on <a href="https://news.ycombinator.com/item?id=44024759">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Vaev – A browser engine built from scratch (It renders google.com) (144 pts)]]></title>
            <link>https://github.com/skift-org/vaev</link>
            <guid>44023144</guid>
            <pubDate>Sun, 18 May 2025 17:54:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/skift-org/vaev">https://github.com/skift-org/vaev</a>, See on <a href="https://news.ycombinator.com/item?id=44023144">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto">
    <a target="_blank" rel="noopener noreferrer" href="https://github.com/skift-org/vaev/blob/main/doc/assets/vaev.png"><img src="https://github.com/skift-org/vaev/raw/main/doc/assets/vaev.png" width="320"></a>
</p>
<p dir="auto">
    An experimental web browser engine
</p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/skift-org/vaev/blob/main/doc/assets/capture.png"><img src="https://github.com/skift-org/vaev/raw/main/doc/assets/capture.png" alt=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<p dir="auto">Veav currently supports a subset of web standards, including:</p>
<ul dir="auto">
<li>Most display types (excluding grid)</li>
<li>Standard CSS cascade behavior</li>
<li>Pagination using @page rules</li>
<li>Print-to-PDF output</li>
<li>All CSS units, including percentages, var(), and calc()</li>
<li>Loading of HTML and XHTML documents</li>
<li>Very basic networking, only <code>http://</code> and <code>file://</code> is supported</li>
</ul>
<p dir="auto">For detailed compatibility and feature tracking, see our <a href="https://vaev-org.github.io/wpt-status/" rel="nofollow">WPT status page</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Trying It Out</h2><a id="user-content-trying-it-out" aria-label="Permalink: Trying It Out" href="#trying-it-out"></a></p>
<p dir="auto">You can try out Veav by running the following command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="pacman -S base-devel git ninja sdl2 nasm gcc-multilib liburing clang libseccomp

# We need llvm 20 and arch doesn't have it yet
yay -S clang-prefixed-release

git clone https://github.com/skift-org/vaev.git

cd vaev

pip install git+https://github.com/cute-engineering/cutekit

python -m ck run --release vaev-browser -- file.html"><pre>pacman -S base-devel git ninja sdl2 nasm gcc-multilib liburing clang libseccomp

<span><span>#</span> We need llvm 20 and arch doesn't have it yet</span>
yay -S clang-prefixed-release

git clone https://github.com/skift-org/vaev.git

<span>cd</span> vaev

pip install git+https://github.com/cute-engineering/cutekit

python -m ck run --release vaev-browser -- file.html</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Architecture</h2><a id="user-content-architecture" aria-label="Permalink: Architecture" href="#architecture"></a></p>
<p dir="auto">An <a href="https://github.com/skift-org/vaev/blob/main/doc/diagrams.tldr">architecture diagram</a> is available next to this file. It's in the tldraw format.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Authors</h2><a id="user-content-authors" aria-label="Permalink: Authors" href="#authors"></a></p>
<ul dir="auto">
<li><a href="https://github.com/Louciole">Lou !</a></li>
<li><a href="https://github.com/LuneMercier">LuneMercier</a></li>
<li><a href="https://github.com/pauloamed">Paulo Medeiros</a></li>
<li><a href="https://github.com/sleepy-monax">Sleepy Monax</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[$30 Homebrew Automated Blinds Opener (206 pts)]]></title>
            <link>https://sifter.org/~simon/journal/20240718.html</link>
            <guid>44022758</guid>
            <pubDate>Sun, 18 May 2025 17:05:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sifter.org/~simon/journal/20240718.html">https://sifter.org/~simon/journal/20240718.html</a>, See on <a href="https://news.ycombinator.com/item?id=44022758">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<center>
[<a href="https://sifter.org/~simon/journal/20240308.h.html">&lt;&lt;</a> | 
<a href="https://sifter.org/~simon/journal/20240703.html">Prev</a> | 
<a href="https://sifter.org/~simon/journal/index.html">Index</a> | 
<a href="https://sifter.org/~simon/journal/20241113.html">Next</a> | 
<a href="https://sifter.org/~simon/journal/indexh.html">&gt;&gt;</a>]

<h2>Thursday, July 18, 2024</h2>
<h4><em>$30 Homebrew Automated Blinds Opener</em></h4>
</center>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/closeup.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/closeup.jpg"></a></p>
<p>
In the spirit of my <a href="https://sifter.org/~simon/journal/20210531.html">thermostat</a> and <a href="https://sifter.org/~simon/journal/20200706.html">dishwasher controller</a>,
I managed to cobble together a decent blinds opener in a short weekend almost entirely from spare parts on
hand.  This design is very much what I could do quickly with what I had, so probably not worth copying, but
perhaps it can be an inspiration.
</p>
<p>
It is intentionally the world's slowest blinds opener:  It's purpose is to open the blinds very gradually
(and silently!) in the morning (because at this latitude, natural sunrise is wayy too early this time of year).
Right now it takes about 8 minutes running at full speed, and can easily be slowed down just by running for,
say, 30 seconds at a time between pauses.
</p>
<p>
One key component is the silicone(?) motor mount, which I had previously salvaged from a dead
Phillips water flosser and happened to be close enough to the right size for the geared motor
I bought.  That's the one hard-to-find component, and not included in the cost breakdown.
The rest I very-quickly threw together in freecad and 3d printed for negligible cost.  Only the magnet cuff required
two takes (magnet was too loose) -- the rest I lucked out and got right on the first go.  So
the whole thing came together in a day and a half including software (helped that it only took
minutes to integrate into <a href="https://sifter.org/~simon/journal/20240412.html">my home automation system</a>).
</p>
<p>
In the order I designed/printed things:
</p>
<p>
The cuff (and cap) that holds the magnet to the motor's butt (note this does <em>not</em> rotate
with the motor shaft--it only measures the small rotation of the whole motor within the silicone
mount shown below, from which we can infer the torque and detect when the blinds are closed).  Ignore
the other water flosser guts in the background:
</p>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/cuff.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/cuff.jpg"></a></p>
<p>
The mount that holds the motor and encoder.  Chose to solder the wires on the encoder so I didn't have to worry about push-connectors vibrating loose:
</p>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/mount.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/mount.jpg"></a></p>
<p>
Two double-throw relays.  The motor terminals go to the center, and +5v and ground go to the NO and NC respectively.  In
that config, one relay runs the motor forward, and the other reverse.  And if you accidentally have both on at the same
time, it just connects both motor terminals to 5v, which is harmless:
</p>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/relays.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/relays.jpg"></a></p>
<p>
The mount above has an extra ridge (not really visible) which slots into this wall bracket:
</p>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/bracket.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/bracket.jpg"></a></p>
<p>
I tossed a box over the electronics until I have the time to make a more aesthetic cover for the whole shebang:
</p>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/installed.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/installed.jpg"></a></p>
<p>
The whole design ended up shockingly simple.   I thought I might need more components, but the 12v motor
runs fine (and quietly!) on 5v and only draws about 50mA, and the encoder has pull-up resistors (for I2C)
built in, and the relays work fine w/3.3v signals on 5v power, so it was truly just a matter of wiring
everything together using the 5v and 3.3v pins of the ESP to tap power from the USB.
</p>
<p>
Motor w/gearbox: <a href="https://www.amazon.com/dp/B09XV5R7FN">$15</a>
<br>
Magnetic angle encoder: <a href="https://www.amazon.com/gp/product/B09LMB3PTZ">$2</a>
<br>
Relays x2: &lt;$4
<br>
ESP8266: ~<a href="https://www.amazon.com/gp/product/B07HF44GBT">$5</a>
<br>
Spare USB power supply and cable: $?
<br>
Wires and ferrules: trivial
</p>
<p>
I connected the motor to the blinds wand with some surgical tubing (and some other random
flexy tubing I had to pad the motor shaft up a bit) which mostly worked (and helps maintain
vibration isolation for noise), but it's not quite strong enough to really cinch the blinds
tight at the end so I wrapped a few turns of silicone tape over that and then some blue tape
just to cover up the sticky.  Probably this would have been better solved with one more layer
of a larger diameter tubing, but I didn't have any on hand.
</p>
<p>
The other issue is, not surprisingly, the motor doesn't just rotate around its axis within
its mount, it twists in various ways which move the magnet off-center from the encoder,
which the encoder really doesn't like.  The result is very non-monotonic (bad) and path-dependent
(surprising, and very bad), <em>but</em> there was enough signal coming through I was still
able to ballpark the torque and get it to shut off when the blinds are the right amount of
tight.  (And for opening them it's easy -- just run for 8 minutes and that puts them pretty
reliably at mid position.)
</p>
<p>
Here at 7000 seconds, the blinds are cinched closed, and then I opened them a bit:
</p>
<p>
<a href="https://sifter.org/~simon/journal/ims/20240718/chart.jpg"><img src="https://sifter.org/~simon/journal/ims/20240718/chart.jpg"></a></p>
<p>
So I would <em>not</em> recommend the magnetic encoder approach.  I just used it because
I bought a 5 pack a while back and never used them.  But I <em>do</em> like the torque
as the main feedback mechanism, since it's the most important thing to know:  You really
do want it to stop if the torque goes high, no matter the reason.  And once you have that,
you can detect the closed position (in either direction) by "feel", and can find intermediate
positions well enough just with timing.  Not sure how else I could (so easily) measure the
torque, though--if you have any suggestions, let me know.
</p>
<p>
With the soft mount, the motor vibration is totally isolated, and it all runs nearly
silently.  The relays are a bit loud, but the box muffles them pretty well, and right
now there's just one faint click when it first turns on.  The blinds themselves creak
a bit when they're turned this slow, but quieter than typical rain sounds.  Right now
the occasional creaking of the blinds is the only way I even know it's running--it's
that quiet!
</p>
<p>
So now I just send a target percent-open to my blinds on my HA network (or push the
open or close button I added to my phone panel), and there they go.
(And by default they close at dusk and open at desired-dawn.)
</p>
<p>
Not bad for a short-weekend project.  (Though just gathering the photos, links, and writing this entry has extended that into a long-weekend.  Ugh.)
</p>
<center>[<a href="https://sifter.org/~simon/journal/20240308.h.html">&lt;&lt;</a> | 
<a href="https://sifter.org/~simon/journal/20240703.html">Prev</a> | 
<a href="https://sifter.org/~simon/journal/index.html">Index</a> | 
<a href="https://sifter.org/~simon/journal/20241113.html">Next</a> | 
<a href="https://sifter.org/~simon/journal/indexh.html">&gt;&gt;</a>]
</center>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ditching Obsidian and building my own (264 pts)]]></title>
            <link>https://amberwilliams.io/blogs/building-my-own-pkms</link>
            <guid>44022448</guid>
            <pubDate>Sun, 18 May 2025 16:21:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://amberwilliams.io/blogs/building-my-own-pkms">https://amberwilliams.io/blogs/building-my-own-pkms</a>, See on <a href="https://news.ycombinator.com/item?id=44022448">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><blockquote><p>"You can’t really know where you are going until you know where you have been." - Maya Angelou. </p></blockquote><p>The age-old mission to capture and make sense of our knowledge and experiences echoes through history, from Thomas Jefferson's Commonplace book detailing his ideas on government to Marcus Aurelius's Meditations saturated with quotations and personal reflections.</p><p>However, this pursuit to preserve knowledge isn't without its own set of fears. Are our deepest thoughts private? Are we spending a disproportionate time customizing our notes system than benefiting from it? Will our preferred notes system last the sands of time? </p><p>These were the questions that motivated me to step outside conventional offerings and build my own solution. I'm sharing my story here not to prescribe, but to demonstrate it's okay to color outside the lines. Perhaps my journey to create a simple, secure, and lasting 'note vault' will spark ideas for how you can better cultivate your own knowledge garden.</p><h2 id="conventional-knowledge-gardens"><span>Conventional<!-- --> </span><span>knowledge<!-- --> </span><span>gardens<!-- --> </span></h2><p>A personal knowledge management systems (PKMS), also known as "second brain" is are central repositories for actively collecting one's meaningful insights, ideas and inspirations encountered throughout life. The benefit of decades of notes accruing and reinforcing knowledge is immense. That is why critically analyzing what you need your PKMS to achieve is crucial. </p><p>The most commonly used PKMS or note-taking apps today are Notion, Obsidian, Evernote and Logseq. The problem is that PKMS come and go. Could you see yourself using your note-taking app you use today in 30 years? Probably not. Do you ever have concerns around the privacy of your notes? Are you spending more time setting up your notes system rather than managing your notes? What does an effective and timeless PKMS even look like?</p><h2 id="pulling-at-a-thread"><span>Pulling<!-- --> </span><span>at<!-- --> </span><span>a<!-- --> </span><span>thread<!-- --> </span></h2><p>My PKMS journey started with Obsidian. For those unfamiliar with Obsidian, it's a digital notebook that lives only on your computer. Its special feature is letting you internally link related notes together similar to Wikipedia. Beyond linking, its true power comes from the huge range of plugins. Out of all the great community plugins, Dataview is my personal favorite. <a target="_blank" rel="noreferrer" href="https://obsidian.rocks/dataview-in-obsidian-a-beginners-guide/">Dataview</a> is a powerful scripting tool which pulls data from markdown notes to generate tables, graphs, and other insights.</p><p>Obsidian was a great tool for me personally for a long time. But I felt frustrated when I wanted to access my notes on my phone while on-the-go and saw that I had to pay for this feature. Obsidian charges $8 a month to access the same notes across multiple devices. While not a huge amount for such a useful app, it adds up to an eye-watering amount - almost $1,000 if I planned to use Obsidian for a decade. I was surprised at this fee because I thought Obsidian was open-source. I later realized that the Obsidian community plugins are open-source, but Obsidian itself is, in fact, not. These were the same plugins I was spending an inordinate abount of time <a target="_blank" rel="noreferrer" href="https://github.com/s-blu/obsidian_dataview_example_vault/blob/b6740b4d8a7e0b408669563e1b3c4028df36e207/20%20Dataview%20Queries/Show%20a%20Goals%20Overview%20with%20progress%20bars%20for%20included%20projects%20and%20overall%20progress.md">personalizing Obsidian with</a>, rather than being productive.</p><p>I started to have concerns about the longevity of the plugins and app itself. Some of you may remember when Evernote aggressively limited free users to <a target="_blank" rel="noreferrer" href="https://henry-chong.com/blog/the-downfall-of-evernote/">50 notes</a>, many users migrated their notes elsewhere. I was one of those users.</p><p>After some mental gymnastics weighing if I should continue with Obsidian, I found solace when asking myself <em>"Can I see myself using this in 20 years?"</em>. I couldn't. The thought of cyclically migrating notes from one PKMS to another every 5 years, as I had done from Evernote to Notion to Obsidian, made me feel tired. So I grabbed some coffee and began my search for the digital equivalent of the <a target="_blank" rel="noreferrer" href="https://en.wikipedia.org/wiki/Svalbard_Global_Seed_Vault">Svalbard Global Seed Vault</a>, but for my notes.</p><h2 id="my-perfect-note-vault"><span>My<!-- --> </span><span>perfect<!-- --> </span><span>note<!-- --> </span><span>vault<!-- --> </span></h2><p>Key requirements were that my new PKMS needed to be easy to use, offer a plugin-like experience and be secure. Privacy and security were paramount. I didn't want my innermost thoughts being exposed to a <a target="_blank" rel="noreferrer" href="https://en.wikipedia.org/wiki/23andMe_data_leak">23andMe data leak</a> scenario. Data security aside, I have a hard time trusting for-profit companies will keep their hands out of the cookie jar. I can imagine there's a killing to be made from targeted advertisements online using your notes or for them to be used to train AI. I wanted to know with certainty that I control my data. Entrusting a company to store my notes for free, couldn't give me that assurance.</p><p>Being a full-stack software engineer, the answer was obvious. I should step outside the commercial-PKM ecosystem entirely - I should build my own.</p><p>But if it's so obvious, why aren't other developers rolling out their own PKMS? Perhaps I'm the first to discover this or perhaps developers aren't writing about their custom PKMS. My guess is that commercial note-taking apps have larger, more vocal communities that drown out the murmurings of other DIY solutions.</p><p>It was here I decided to pull the trigger to build and host my own PKMS. It felt pertinent to write about it so others feel confident to do so too. Spoiler - it sounds like a daunting feat, but in reality it was so comically easy my only regret is that I hadn't done it years ago.</p><h2 id="the-note-vault"><span>The<!-- --> </span><span>note<!-- --> </span><span>vault<!-- --> </span></h2><p>Here's how my PKMS looks as of writing. I can create a note, update it in markdown format and then preview what the note looks like in rendered markdown.</p><p><img alt="gif using the PKMS's markdown editor" src="https://notes.holeytriangle.com/assets/0f1cfdfb-ed3d-450e-8701-8ef7a9f2d7a5"></p><p>Finally, I can access my notes from my phone too, right where I left off. No monthly fees for this feature either.</p><p><img alt="Using the PKMS from my phone with a thumbs up sign" src="https://notes.holeytriangle.com/assets/e12f4587-b8a5-4739-9b16-7e925037ac9b"></p><p>Since my PKMS is hosted online to manage notes across devices, I have multiple layers of security to ensure my notes are kept private.</p><p><img alt="the PKMS's login screen with an empty form" src="https://notes.holeytriangle.com/assets/c42ab6b2-4eae-4956-b886-50d70aacba70"></p><p>And if I ever want to move to greener pastures, all my notes are stored in Markdown so I can export them with two command lines to my terminal. Here's an under-the-hood view of how my notes are stored in the database - just text! <a target="_self" rel="noreferrer" href="#1"><sup>1</sup></a></p><p><img alt="shows the markdown output from a database query" src="https://notes.holeytriangle.com/assets/2847aa38-5356-4e1d-80d9-feb5e738eee2"></p><h2 id="benefits-of-a-note-vault"><span>Benefits<!-- --> </span><span>of<!-- --> </span><span>a<!-- --> </span><span>note<!-- --> </span><span>vault<!-- --> </span></h2><p>I've found that consistently collecting and reviewing valuable information promotes a deeper engagement with ideas. As a result, I've noticed my memory improving, and I started seeing surprising links between seemingly unrelated topics. Plus, it's created this incredible record of my learning and personal growth.</p><p>I found Ryan Holiday's take on the <a target="_blank" rel="noreferrer" href="https://ryanholiday.net/how-and-why-to-keep-a-commonplace-book/">Commonplace Book</a> particularly insightful for efficiently using a PKM. While Ryan advocates for analog notes, the same principles can be applied to digital notes. While physical writing has its merits, digital notes provide superior search capabilities and flexible organization. Ryan himself states how impracticability of a physical PKMS - "Because mine is a physical box with literally thousands of cards, I don’t carry the whole thing with me". </p><p><img alt="Illustration featuring a system for filing notes" src="https://notes.holeytriangle.com/assets/85ba3989-f61c-4f4f-8764-b1f8c267cbaa"></p><p><small><center>Image sourced from Houghton Library, Public domain, via Wikimedia Commons</center></small></p><p>And that's the beauty of a digital PKMS – it all fits on my phone!</p><p>Additonally, now with AI code generation creating custom PKMS plugins are more accessible than ever before. No longer do we need to install a random developer's plugin that sends our private thoughts who knows where. We can vibe-code our own or use open-source tooling. I used to use an Obsidian plugin to pull uncompleted tasks from todo checklists that were scattered around various notes, but after 10 minutes of prompting Anthropic's Claude, I had my own private equivalent tool.</p><h2 id="a-look-inside"><span>A<!-- --> </span><span>look<!-- --> </span><span>inside<!-- --> </span></h2><p>Using essentially a wrapper around a database made creating my PKMS easy. This wrapper does the heavy lifting, keeping things simple and secure. I went with an open-source platform called <a target="_blank" rel="noreferrer" href="https://directus.io/">Directus</a>, which can be used as a PKMS amongst other things such as a CMS. Directus has authentication and security layers already included, so I was able to start using it in less than a day.</p><p>For readers who have worked with SQL databases or docker containers - I wrote a <a target="_blank" rel="noreferrer" href="https://amberwilliams.io/blogs/the-last-note-system">step-by-step guide on building my own PKMS with Directus</a>.</p><h2 id="a-final-note"><span>A<!-- --> </span><span>final<!-- --> </span><span>note<!-- --> </span></h2><p>I’ve always believed that, much like a garden, how we manage our own knowledge system needs cultivation and continuity to flourish. My own knowledge garden was cultivated from a deep dive into the subject of note systems, driven by a search for a solution to those nagging frustrations I think many of us feel with commercialized systems.</p><p>A knowledge garden isn't always straightforward, and I'll be the first to admit I’ve been guilty of spending considerably more time fiddling with a system, rather than actually using it. It's easy  to fall into analysis paralysis with these system as well as become plagued with paranoia worrying about privacy. So for any system to stick, it has to be genuinely secure and simple.</p><p>There isn't a one-size-fits-all approach to a sizeable amount of things in life, knowledge management being one of these. Inquisitive individuals are likely to be rewarded for exploring different avenues, even unconventional ones, as they lead to a system tailored to one's personal way of thinking and working.</p><p>The path I eventually took, building my own, put an end to exhausting cyclical migrations. It helped me reclaim control over my privacy, and significantly cut down on recurring costs. Especially because it's ran from <a target="_blank" rel="noreferrer" href="https://amberwilliams.io/blogs/vps-for-web-apps">my own VPS</a>. Commercial apps certainly offer out-of-the-box convenience, but by stepping back and focusing on what mattered to me, I found a way that worked profoundly better. <a target="_blank" rel="noreferrer" href="https://amberwilliams.io/blogs/the-last-note-system">Here's how I built my PKMS step-by-step</a>. </p><p>After dogfooding my PKMS for over a year now, I'm capturing and connecting ideas more efficiently than I ever managed with commercial apps. While I sometimes miss the community around commercial apps, I'm hopeful I'll find a niche community of like minded individuals one day. </p><p>If my PKMS journey has resonated with you, or if you're on a similar path, I'd genuinely love to connect. You can find me at any of the socials in the footer.</p><hr>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I modeled the Voynich Manuscript with SBERT to test for structure (291 pts)]]></title>
            <link>https://github.com/brianmg/voynich-nlp-analysis</link>
            <guid>44022353</guid>
            <pubDate>Sun, 18 May 2025 16:09:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/brianmg/voynich-nlp-analysis">https://github.com/brianmg/voynich-nlp-analysis</a>, See on <a href="https://news.ycombinator.com/item?id=44022353">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">📜 Voynich Manuscript Structural Analysis</h2><a id="user-content--voynich-manuscript-structural-analysis" aria-label="Permalink: 📜 Voynich Manuscript Structural Analysis" href="#-voynich-manuscript-structural-analysis"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔍 Overview</h2><a id="user-content--overview" aria-label="Permalink: 🔍 Overview" href="#-overview"></a></p>
<p dir="auto">This started as a personal challenge to figure out what modern NLP could tell us about the Voynich Manuscript — without falling into translation speculation or pattern hallucination. I'm not a linguist or cryptographer. I just wanted to see if something as strange as Voynichese would hold up under real language modeling: clustering, POS inference, Markov transitions, and section-specific patterns.</p>
<p dir="auto">Spoiler: it kinda did.</p>
<p dir="auto">This repo walks through everything — from suffix stripping to SBERT embeddings to building a lexicon hypothesis. No magic, no GPT guessing. Just a skeptical test of whether the manuscript has <em>structure that behaves like language</em>, even if we don’t know what it’s saying.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🧠 Why This Matters</h2><a id="user-content--why-this-matters" aria-label="Permalink: 🧠 Why This Matters" href="#-why-this-matters"></a></p>
<p dir="auto">The Voynich Manuscript remains undeciphered, with no agreed linguistic or cryptographic solution. Traditional analyses often fall into two camps: <em>statistical entropy checks</em> or <em>wild guesswork</em>. This project offers a middle path — using computational linguistics to assess whether the manuscript encodes real, structured language-like behavior.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📁 Project Structure</h2><a id="user-content--project-structure" aria-label="Permalink: 📁 Project Structure" href="#-project-structure"></a></p>
<div data-snippet-clipboard-copy-content="/data/
  AB.docx                         # Full transliteration with folio/line tags
  voynichese/                     # Root word .txt files
  stripped_cluster_lookup.json    # Cluster ID per stripped root
  unique_stripped_words.json      # All stripped root forms
  voynich_line_clusters.csv       # Cluster sequences per line

/scripts/
  cluster_roots.py                # SBERT clustering + suffix stripping
  map_lines_to_clusters.py        # Maps manuscript lines to cluster IDs
  pos_model.py                    # Infers grammatical roles from cluster behavior
  transition_matrix.py            # Builds and visualizes cluster transitions
  lexicon_builder.py              # Creates a candidate lexicon by section and role
  cluster_language_similarity.py  # (Optional) Compares clusters to real-world languages

/results/
  Figure_1.png                    # SBERT clusters (PCA reduced)
  transition_matrix_heatmap.png  # Markov transition matrix
  cluster_role_summary.csv
  cluster_transition_matrix.csv
  lexicon_candidates.csv"><pre><code>/data/
  AB.docx                         # Full transliteration with folio/line tags
  voynichese/                     # Root word .txt files
  stripped_cluster_lookup.json    # Cluster ID per stripped root
  unique_stripped_words.json      # All stripped root forms
  voynich_line_clusters.csv       # Cluster sequences per line

/scripts/
  cluster_roots.py                # SBERT clustering + suffix stripping
  map_lines_to_clusters.py        # Maps manuscript lines to cluster IDs
  pos_model.py                    # Infers grammatical roles from cluster behavior
  transition_matrix.py            # Builds and visualizes cluster transitions
  lexicon_builder.py              # Creates a candidate lexicon by section and role
  cluster_language_similarity.py  # (Optional) Compares clusters to real-world languages

/results/
  Figure_1.png                    # SBERT clusters (PCA reduced)
  transition_matrix_heatmap.png  # Markov transition matrix
  cluster_role_summary.csv
  cluster_transition_matrix.csv
  lexicon_candidates.csv
</code></pre></div>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">✅ Key Contributions</h2><a id="user-content--key-contributions" aria-label="Permalink: ✅ Key Contributions" href="#-key-contributions"></a></p>
<ul dir="auto">
<li>Clustering of stripped root words using multilingual SBERT</li>
<li>Identification of function-word-like vs. content-word-like clusters</li>
<li>Markov-style transition modeling of cluster sequences</li>
<li>Folio-based syntactic structure mapping (Botanical, Biological, etc.)</li>
<li>Generation of a data-driven lexicon hypothesis table</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔧 Preprocessing Choices</h2><a id="user-content--preprocessing-choices" aria-label="Permalink: 🔧 Preprocessing Choices" href="#-preprocessing-choices"></a></p>
<p dir="auto">One of the most important assumptions I made was about how to handle the Voynich words before clustering. Specifically: I stripped a set of recurring suffix-like endings from each word — things like aiin, dy, chy, and similar variants. The goal was to isolate what looked like root forms that repeated with variation, under the assumption that these suffixes might be:</p>
<ul dir="auto">
<li>Phonetic padding</li>
<li>Grammatical particles</li>
<li>Chant-like or mnemonic repetition</li>
<li>Or… just noise</li>
</ul>
<p dir="auto">This definitely improved the clustering behavior — similar stems grouped more tightly, and the transition matrix showed cleaner structural patterns. But it's also a strong preprocessing decision that may have:</p>
<ul dir="auto">
<li>Removed actual morphological information</li>
<li>Disguised meaningful inflectional variants</li>
<li>Introduced a bias toward function over content</li>
</ul>
<p dir="auto">So it’s not neutral — it helped, but it also shaped the results.
If someone wants to fork this repo and re-run the pipeline without suffix stripping — or treat suffixes as their own token class — I’d be genuinely interested in the comparison.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📈 Key Findings</h2><a id="user-content--key-findings" aria-label="Permalink: 📈 Key Findings" href="#-key-findings"></a></p>
<ul dir="auto">
<li><strong>Cluster 8</strong> exhibits high frequency, low diversity, and frequent line-starts — likely a <em>function word group</em></li>
<li><strong>Cluster 3</strong> has high diversity and flexible positioning — likely a <em>root content class</em></li>
<li><strong>Transition matrix</strong> shows strong internal structure, far from random</li>
<li>Cluster usage and POS patterns differ by <em>manuscript section</em> (e.g., Biological vs Botanical)</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🧬 Hypothesis</h2><a id="user-content--hypothesis" aria-label="Permalink: 🧬 Hypothesis" href="#-hypothesis"></a></p>
<p dir="auto">The manuscript encodes a structured constructed or mnemonic language using syllabic padding and positional repetition. It exhibits syntax, function/content separation, and section-aware linguistic shifts — even in the absence of direct translation.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto"><g-emoji alias="arrow_forward">▶️</g-emoji> How to Reproduce</h2><a id="user-content-️-how-to-reproduce" aria-label="Permalink: ▶️ How to Reproduce" href="#️-how-to-reproduce"></a></p>
<div data-snippet-clipboard-copy-content="# 1. Install dependencies
pip install -r requirements.txt

# 2. Run each stage of the pipeline
python scripts/cluster_roots.py
python scripts/map_lines_to_clusters.py
python scripts/pos_model.py
python scripts/transition_matrix.py
python scripts/lexicon_builder.py"><pre><code># 1. Install dependencies
pip install -r requirements.txt

# 2. Run each stage of the pipeline
python scripts/cluster_roots.py
python scripts/map_lines_to_clusters.py
python scripts/pos_model.py
python scripts/transition_matrix.py
python scripts/lexicon_builder.py
</code></pre></div>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📊 Example Visualizations</h2><a id="user-content--example-visualizations" aria-label="Permalink: 📊 Example Visualizations" href="#-example-visualizations"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">📌 Figure 1: SBERT cluster embeddings (PCA-reduced)</h4><a id="user-content--figure-1-sbert-cluster-embeddings-pca-reduced" aria-label="Permalink: 📌 Figure 1: SBERT cluster embeddings (PCA-reduced)" href="#-figure-1-sbert-cluster-embeddings-pca-reduced"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/brianmg/voynich-nlp-analysis/blob/main/results/Figure_1.png"><img src="https://github.com/brianmg/voynich-nlp-analysis/raw/main/results/Figure_1.png" alt="Cluster visualization"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">📌 Figure 2: Transition Matrix Heatmap</h4><a id="user-content--figure-2-transition-matrix-heatmap" aria-label="Permalink: 📌 Figure 2: Transition Matrix Heatmap" href="#-figure-2-transition-matrix-heatmap"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/brianmg/voynich-nlp-analysis/blob/main/results/transition_matrix_heatmap.png"><img src="https://github.com/brianmg/voynich-nlp-analysis/raw/main/results/transition_matrix_heatmap.png" alt="Transition matrix heatmap"></a></p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">📌 Limitations</h2><a id="user-content--limitations" aria-label="Permalink: 📌 Limitations" href="#-limitations"></a></p>
<ul dir="auto">
<li>Cluster-to-word mappings are indirect — frequency estimates may overlap</li>
<li>Suffix stripping is heuristic and may remove meaningful endings</li>
<li>No semantic translation attempted — only structural modeling</li>
</ul>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">✍️ Authors Note</h2><a id="user-content-️-authors-note" aria-label="Permalink: ✍️ Authors Note" href="#️-authors-note"></a></p>
<p dir="auto">This project was built as a way to learn — about AI, NLP, and how far structured analysis can get you without assuming what you're looking at. I’m not here to crack the Voynich. But I do believe that modeling its structure with modern tools is a better path than either wishful translation or academic dismissal.</p>
<p dir="auto">So if you're here for a Rosetta Stone, you're out of luck.</p>
<p dir="auto">If you're here to model a language that may not want to be modeled — welcome.</p>
<hr>
<p dir="auto"><h2 tabindex="-1" dir="auto">🤝 Contributions Welcome</h2><a id="user-content--contributions-welcome" aria-label="Permalink: 🤝 Contributions Welcome" href="#-contributions-welcome"></a></p>
<p dir="auto">This project is open to extensions, critiques, and collaboration — especially from linguists, cryptographers, conlang enthusiasts, and computational language researchers.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spaced Repetition Memory System (179 pts)]]></title>
            <link>https://notes.andymatuschak.org/Spaced_repetition_memory_system</link>
            <guid>44022225</guid>
            <pubDate>Sun, 18 May 2025 15:48:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://notes.andymatuschak.org/Spaced_repetition_memory_system">https://notes.andymatuschak.org/Spaced_repetition_memory_system</a>, See on <a href="https://news.ycombinator.com/item?id=44022225">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>A spaced-repetition memory system combines the <a href="https://notes.andymatuschak.org/zTpJdbe6ub7uhBFLuHkFsrT"><span>Testing effect</span></a> and the <a href="https://notes.andymatuschak.org/z4KScVkQCD2XmVwvSDUbZtn"><span>Spacing effect</span></a> to enable efficient memorization of many thousands of facts (<a href="https://notes.andymatuschak.org/z64yjxVfMvJTSAjWFpyEtnA"><span>Spaced repetition memory systems are extremely efficient</span></a>). Some people also use them for a broader set of tasks (see below). <a href="https://notes.andymatuschak.org/zSTqsQ4ATXB61k3Z43TforN"><span>Spaced repetition memory systems make memory a choice</span></a>, but they’re not just for rote facts: <a href="https://notes.andymatuschak.org/z9Vi7YVx7NzxU2wawNgsJbk"><span>Spaced repetition memory systems can be used to develop conceptual understanding</span></a>.</p><p>The first consumer system of this kind was <a href="https://notes.andymatuschak.org/z2oUypiCEtPaDqNjbUsawCj"><span>Supermemo</span></a>, created by <a href="https://notes.andymatuschak.org/zT8N3LTbePn2LVD7ZhJ5TLr"><span>Piotr Wozniak</span></a>. It adopted and popularized the term “spaced repetition”; prior literature had used a variety of terms (often referring to more specific facets of the underlying phenomenon).</p><ul><li>Related systems and possibilities:<ul><li><a href="https://notes.andymatuschak.org/zHfGyWHe5JaMW3874CHqf69"><span>Differences in my approach to spaced repetition systems</span></a></li><li>Implementations:</li><li>Traditional: <a href="https://notes.andymatuschak.org/z2oUypiCEtPaDqNjbUsawCj"><span>Supermemo</span></a>, <a href="https://notes.andymatuschak.org/zJJX5DtJFGkgWTtPmkgR3ih"><span>Mnemosyne</span></a>, <a href="https://notes.andymatuschak.org/z9HA7vGGZbu1QBUKc41eYm1"><span>Anki</span></a></li><li>Unusual variations:<ul><li><a href="https://notes.andymatuschak.org/zKPv6qkSErdRGqyryvgS2wS"><span>Mnemonic medium</span></a></li><li><a href="https://notes.andymatuschak.org/zSsjk5UvNPGrYp8B6DEFCMS"><span>Execute Program</span></a></li><li><a href="https://notes.andymatuschak.org/zvZiz35n9aN8RJSEoa4yE5"><span>RemNote</span></a></li><li><a href="https://notes.andymatuschak.org/zMxXQHmTuLN9mKA46RPpqJs"><span>Mochi</span></a></li><li><a href="https://notes.andymatuschak.org/zAt1K9ARQYguinoHH8cfaqQ"><span>Readwise</span></a></li><li><a href="https://notes.andymatuschak.org/zDr94hP6bG3jJYrdYy8B5hx"><span>Chessable MoveTrainer</span></a></li><li><a href="https://notes.andymatuschak.org/zHFCJHPFLdVLSP2uHjEZAKY"><span>Revuu</span></a></li></ul></li><li><a href="https://notes.andymatuschak.org/z8v56RCUFx6Zp6sBG6mTL95"><span>Unusual applications of spaced repetition memory systems</span></a></li><li><a href="https://notes.andymatuschak.org/zB92WZZ5baBHKZPPbWMbYEv"><span>Spaced repetition systems can be used to program attention</span></a></li><li><a href="https://notes.andymatuschak.org/zPtcwHaKGoLEZRzSoScYXha"><span>Spaced repetition systems as catechism</span></a></li><li><a href="https://notes.andymatuschak.org/z4KxfCZPkVEf2R8nayLJZBG"><span>Spaced repetition memory systems can be used to prompt application, synthesis, and creation</span></a></li><li><a href="https://notes.andymatuschak.org/zKa9YkyLmK8ynFKCWZBDBpk"><span>Prefer “memory system” to “spaced repetition system”</span></a>; <a href="https://notes.andymatuschak.org/zUdBBp4QwMGcUujgfbyBZcC"><span>Perhaps “practice systems”, not “memory systems”</span></a></li></ul></li><li>On properties of memory systems:<ul><li><a href="https://notes.andymatuschak.org/zQQjjGJKWXbiA67R4jhzvz8"><span>What’s the maximum intake rate of an efficient spaced repetition memory system?</span></a></li><li><a href="https://notes.andymatuschak.org/zYK41LaWjuWkRmv3ZGnNmoF"><span>Optimizing spaced repetition system schedules</span></a></li><li><a href="https://notes.andymatuschak.org/zScaVuH9r2pwo24iD3f39bU"><span>Self-grading vs. machine-grading in spaced repetition memory systems</span></a></li><li><a href="https://notes.andymatuschak.org/zAEV61QhJaiWLYQ8vZF36uT"><span>To what extent does spaced repetition memory system practice constitute deliberate practice?</span></a></li><li><a href="https://notes.andymatuschak.org/zHkEUb5tTkCJSYgmbDFqcMq"><span>SRS retry mechanism</span></a></li></ul></li><li>Barriers to adoption<ul><li><a href="https://notes.andymatuschak.org/z3R2EmEqQz6CVZifHWYMB7B"><span>Many people view memory as unimportant to deep creative work</span></a></li><li><a href="https://notes.andymatuschak.org/zKy4FsHTcf8LdkgXkMueeGL"><span>Writing good spaced repetition memory prompts is hard</span></a></li><li><a href="https://notes.andymatuschak.org/z9xavmmNq7xvNqzpnJ3HFXx"><span>Important attributes of good spaced repetition memory prompts</span></a></li><li><a href="https://notes.andymatuschak.org/zAPNwLWboaoymgEAPyUwjnT"><span>Studying another person’s spaced repetition memory prompts is usually ineffective</span></a></li><li><a href="https://notes.andymatuschak.org/z2ySBuuMjHwuewNBi65YmXD"><span>The limiting factor in spaced repetition system capacity is writing enough good prompts</span></a></li><li><a href="https://notes.andymatuschak.org/zBjh9jUahGSm7VpFtEjvKqT"><span>Using machine learning to generate good spaced repetition prompts from explanatory text</span></a></li><li><a href="https://notes.andymatuschak.org/zPiRwRHQxGfF9Zej765PB8M"><span>The critical thing to optimize in spaced repetition memory systems is emotional connection to the review session and its contents</span></a></li><li><a href="https://notes.andymatuschak.org/zEmEnm29YT9Lp4mnWzPVQZJ"><span>Memory system practice sessions are too disconnected from activities you actually care about</span></a></li><li><a href="https://notes.andymatuschak.org/z3DiwZKDuLxMV17mt2nWH7y"><span>Regular spaced repetition memory practice is an onerous habit to adopt</span></a><ul><li><a href="https://notes.andymatuschak.org/z8a6SPMmmTjzDGkbCmJP75Y"><span>Spaced repetition memory systems don’t rapidly demonstrate their benefits</span></a></li><li><a href="https://notes.andymatuschak.org/z7eDbmw9aUV7FCYYVstUQz4"><span>Spaced repetition memory systems make you feel like your memory is worse than it really is</span></a></li></ul></li><li><a href="https://notes.andymatuschak.org/zgpG2pyVtsVgvoXTj1dfDU"><span>Spaced repetition review sessions often become boring and detached without a steady stream of new prompts</span></a></li><li><a href="https://notes.andymatuschak.org/z4ULp2KUgq3hBCJMWTUnLDX"><span>The dominant culture around spaced repetition memory systems is fixated on meaningless goals</span></a></li></ul></li><li>Responses to common objections<ul><li>SRS are only relevant for rote learning of facts: “school learning”</li><li><a href="https://notes.andymatuschak.org/zBH2vhMvD5xqMRocpFU7xux"><span>People underrate the importance of memory because of bad experiences with rote memorization in school</span></a></li><li>Existing SRS are almost exclusively used for simple declarative knowledge, contra <a href="https://notes.andymatuschak.org/z9Vi7YVx7NzxU2wawNgsJbk"><span>Spaced repetition memory systems can be used to develop conceptual understanding</span></a></li><li><a href="https://notes.andymatuschak.org/zXZus2qnrjqQMMRGAfvWJxv"><span>Memory systems help you focus on deeper engagement by automating away rote memorization</span></a></li><li><a href="https://notes.andymatuschak.org/zQKe7JZs1CYqHBnLyDhMQYQ"><span>Memory augmentation can accelerate the unpleasant early stages of learning a subject</span></a></li><li>(caveat: it’s hard to write prompts for conceptual understanding!)</li><li>SRS are only for material you don’t care about enough to remember “naturally.” Better to “learn by doing.”</li><li>External memory aids are sufficient</li><li>Mnemonic techniques obviate SRS</li><li>Knowledge learned through SRS doesn’t transfer</li><li>The real value in SRS comes from making one’s own prompts</li><li>Maybe! <a href="https://notes.andymatuschak.org/zV7ho8fLnyvPCGV3zpLFTHb"><span>How important is it to write your own spaced repetition memory prompts?</span></a></li></ul></li><li>On algorithms<ul><li><a href="https://notes.andymatuschak.org/zKmMYFJ7xhbddLaxTfLYgdB"><span>Simple spaced repetition algorithms mistreat expected failures</span></a></li><li><a href="https://notes.andymatuschak.org/zHkEUb5tTkCJSYgmbDFqcMq"><span>SRS retry mechanism</span></a></li><li><a href="https://notes.andymatuschak.org/zYK41LaWjuWkRmv3ZGnNmoF"><span>Optimizing spaced repetition system schedules</span></a></li></ul></li><li>Adoption stories<ul><li><a href="https://notes.andymatuschak.org/z3YDGbq68pHnAkpo9bjKFZg"><span>Using spaced repetition with young children</span></a></li></ul></li></ul><hr><h2>References</h2><p>Branwen, G. (2009). Spaced Repetition for Efficient Learning. Retrieved December 16, 2019, from <a href="https://www.gwern.net/Spaced-repetition">https://www.gwern.net/Spaced-repetition</a></p><p><a href="https://supermemo.guru/wiki/Who_invented_the_name:_spaced_repetition%3F">Who invented the name: spaced repetition? - supermemo.guru</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Building my childhood dream PC (153 pts)]]></title>
            <link>https://fabiensanglard.net/2168/index.html</link>
            <guid>44021824</guid>
            <pubDate>Sun, 18 May 2025 14:52:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fabiensanglard.net/2168/index.html">https://fabiensanglard.net/2168/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=44021824">Hacker News</a></p>
<div id="readability-page-1" class="page"><br><center>
    

</center><p>
May 1, 2025</p>
<p>Building my childhood dream PC</p><hr>
 

<!-- <p>When I first got involved with the PC scene, in 1993, the machine I desperately wanted was an IBM PS/1 2168.</p> -->
<p>In 1993, I was 14 and already passionate about computers<a name="back_1" href="#footnote_1"><sup>[1]</sup></a>. That year my mother managed to buy a PC for the household. That was quite an effort for a single mother. My brother Aurelien and I spent every waking hour on this machine, staying up all night on weekends.</p>

<p>Discovering the architecture of the PC, learning to program it, exploring how to manage its memory with <code>CONFIG.SYS</code> and <code>AUTOEXEC.BAT</code>, installing isa cards, drawing with Deluxe Paint, and of course playing games like Dune II, Syndicate, or Day of the Tentacle was so much fun. That time period sets us both on a trajectory towards prolific engineering careers.</p>


<p> One year later we found out the Conforama salesman had tricked us. The <a href="https://en.wikipedia.org/wiki/Cyrix_Cx486SLC">Cyrix 486SLC-25Mhz</a> he sold us was just a 386 which could <a href="https://fabiensanglard.net/2168/sc_flies_on_dx2.webp">barely run</a> games like DOOM and Strike Commander in stamp size at minimal details level. Of course the neighbor had an IBM PS/1 2168 486DX2-66Mhz where these games ran butter-smooth at 25fps.</p>

<img loading="lazy" src="https://fabiensanglard.net/2168/2168.webp" width="1000" height="598">

<p>That IBM PC was as gorgeous as it was insanely expensive. Adjusted to inflation it fetched close to $6,000. By the time I was old enough to pick up strawberries during the summer to make my own money, Big Blue had been defeated by PC clones. They exited the desktop market shortly after their Aptiva line flopped. I never got a chance to own that IBM<a name="back_2" href="#footnote_2"><sup>[2]</sup></a>.</p>

<p>During the winter of 2024 I went back in time and gave that 14-year-old the means to acquire his dream PC. This is the story of how I restored an IBM 2168 and maxed out DOOM.</p>

<p>Parts</p><hr><p>
  <a href="https://fabiensanglard.net/2168/">Part 1: Introduction</a><br>
  <a href="https://fabiensanglard.net/2168/unboxing">Part 2: Unboxing</a><br>
  <a href="https://fabiensanglard.net/2168/keyboard">Part 3: Picking a keyboard</a><br>
  <a href="https://fabiensanglard.net/2168/screen">Part 4: Picking a screen</a><br>
  <a href="https://fabiensanglard.net/2168/capture">Part 5: Capturing the screen</a><br>
  <a href="https://fabiensanglard.net/2168/pcdos">Part 6: Installing PC-DOS 7</a><br>
  <a href="https://fabiensanglard.net/2168/fdd">Part 7: Problems with the FDD</a><br>
  <a href="https://fabiensanglard.net/2168/network">Part 9: Networking</a><br>
  <a href="https://fabiensanglard.net/2168/sound-card">Part A: Sound card</a><br>
  <a href="https://fabiensanglard.net/2168/cdrom">Part B: CD-ROM</a><br>
  <a href="https://fabiensanglard.net/2168/midi">Part C: MIDI musics</a><br>
  <a href="https://fabiensanglard.net/2168/speakers">Part D: Speakers</a><br>
  <!-- <a href="pack">Part E: Software essentials</a><br/> -->
  <a href="https://fabiensanglard.net/2168/doom">Part E: DOOM</a><br>
  <a href="https://fabiensanglard.net/2168/more-games">Part F: More games</a><br>
  <a href="https://fabiensanglard.net/2168/L2">Part G: Upgrading the L2 cache</a><br>
  <a href="https://fabiensanglard.net/2168/cpu">Part H: Upgrading the CPU</a><br>
  <a href="https://fabiensanglard.net/2168/epilogue">Part I: Epilogue</a><br>
</p>




<p>A design screaming "excellence"</p><hr>
<p>Announced in March 1993<a name="back_3" href="#footnote_3"><sup>[3]</sup></a><a name="back_4" href="#footnote_4"><sup>[4]</sup></a>, the 2168 was part of IBM's 30-model line. While other models like the PS/1 2133 came in standard horizontal form-factor, the 2168 was a "Mini-Tower".</p>

<img loading="lazy" src="https://fabiensanglard.net/2168/ad.webp" width="1600" height="877">
<p> I loved the idea of having a handle on the top to make it easy to carry to LAN parties. This is a feature I have always enjoyed and contributed to my appreciation of later machines such as the <a href="https://fabiensanglard.net/fd_proxy/ssd/step6.webp">Apple Mac Pro 2009</a> and the <a href="https://fabiensanglard.net/2168/p620.webp">Lenovo ThinkStation P690</a>.</p>

<p>The user friendliness did not stop at the handle. Unlike many boxy PCs of the era, the PS/1 featured rounded corners on the monitor and system unit, giving it a softer, more approachable look.</p>


<img loading="lazy" src="https://fabiensanglard.net/2168/french.webp" width="721" height="472"> 
<p>The front panel was cleverly designed with a slider to hide the disgracious 5.25" floppy drive and CD drive while leaving the most frequently used 3½" FDD available. An optional grey base offered more stability while completing the signature IBM color palette made of beige, dark grey, and blue.</p>

<p>These many subtle touches made the IBM PS/1 2168 a polished product screaming <i>excellence</i><a name="back_5" href="#footnote_5"><sup>[5]</sup></a>.
</p>





<p>Clicky Keyboard</p><hr>
<p>Another immensely appealing aspect of the IBM PS/1 computer is that they usually came with 
what is considered by many the best keyboard of all time. The overall quality and unmistakable clicky sound of the model M re-enforced the impression of a rock solid, well-built computer.</p>

<img loading="lazy" src="https://fabiensanglard.net/2168/m.webp" width="1625" height="1139">
<p>Big blue even manufactured a Space Saving version (SSK) devoid of a keypad which I found even more beautiful than the full size model. I revisit the topic of the keyboard in another page but will leave the reader with <a href="https://www.clickykeyboards.com/">clickykeyboard.com</a> and the Wikipedia page<a name="back_6" href="#footnote_6"><sup>[6]</sup></a> to learn more.</p>

<div><p>8BitDo makes a fantastic modern keyboard inspired by the M looks and feel.</p><p><a href="https://fabiensanglard.net/2168/8bitdo.webp"><img loading="lazy" src="https://fabiensanglard.net/2168/8bitdo.webp" width="1920" height="1050"></a></p></div>



<p>Documentation</p><hr><p>While most clone PCs came with zero documentation, the IBM PS/1 featured stellar manuals explaining in detail how to maintain and upgrade the machine.</p>

<a href="https://fabiensanglard.net/2168/doc_example1.webp"><img loading="lazy" src="https://fabiensanglard.net/2168/doc_example1.webp" width="1940" height="1228"></a><br>
<a href="https://fabiensanglard.net/2168/doc_example2.webp"><img loading="lazy" src="https://fabiensanglard.net/2168/doc_example2.webp" width="1940" height="1238"></a><br>
<a href="https://fabiensanglard.net/2168/doc_example3.webp"><img loading="lazy" src="https://fabiensanglard.net/2168/doc_example3.webp" width="1940" height="1266"></a>











<p>Expandability</p><hr><p>Another advantage of these IBM PS/1 is that they were upgradable. Contrary to PC clones where everything was often soldered, these came with an Intel Overdrive socket to upgrade the CPU, and extra slots to increase the L1 cache, RAM, and VRAM.</p>

<img loading="lazy" src="https://fabiensanglard.net/2168/2168ad_clean.webp" width="655" height="488">

<p>Expandability via HDDs and ISA cards was provisioned from the ground up and indicated via the computer's codename. The 6 and 8 in 21<b>68</b> respectively refer to the available bays (6) and ISA expansion slots (8).</p>
<img loading="lazy" src="https://fabiensanglard.net/2168/68.webp" width="1290" height="821">
<p>Accordingly, the horizontal form factor PS/1 2133 had three (3) ISA slots and three (3) bays.</p>

<p>Finding a 2168</p><hr><p>As I embarked on the journey to acquire an IBM PS/1 2168 and restore it, it dawned on me this was going to be harder than originally envisioned.</p>

<p>Not only was I going after a thirty-year old machine which most models had been damaged, discarded, or plainly stopped working, I was also going after a popular model. As a proof of its sought-after status, I found many people proudly displaying their setup.</p>

<img loading="lazy" src="https://fabiensanglard.net/2168/2168_fan2.webp" width="1024" height="683"><img loading="lazy" src="https://fabiensanglard.net/2168/2168_fan1.webp" width="4032" height="3024">
<p>Some loved their machine so much they even kept the original, thirty-years-old receipt.</p>

<a href="https://fabiensanglard.net/2168/2168_fan3_receipt.webp"><img loading="lazy" src="https://fabiensanglard.net/2168/2168_fan3_receipt.webp" width="800" height="1024"></a>
<img loading="lazy" src="https://fabiensanglard.net/2168/2168_fan3.webp" width="800" height="528">
<p>In one particular instance one fan enjoyed the 2168 form-factor so much they <a href="https://au.pcpartpicker.com/b/vCHNnQ">gutted</a> the inside to replace it with modern components.</p>

<p>Beyond the problem introduced by scarcity, I upped the difficulty with two criteria.</p>

<ol>
  <li>I wanted a machine which could still boot.</li>
  <li>Having learned from Epictronics's series<a name="back_7" href="#footnote_7"><sup>[7]</sup></a><a name="back_8" href="#footnote_8"><sup>[8]</sup></a><a name="back_9" href="#footnote_9"><sup>[9]</sup></a><a name="back_10" href="#footnote_10"><sup>[10]</sup></a> that the motherboard frequency was not jumper-adjustable, I wanted a 33Mhz model. This limited the range further down to models with 486SX-33, 486DX-33, and 486DX2-66 CPUs.</li>
</ol>


<p>Crawling eBay</p><hr>
<p>As luck would have it, I found a PS/1 2168-594<a name="back_11" href="#footnote_11"><sup>[11]</sup></a> DX2-66Mhz within a week of searching. It was located in Finland and came with all the original boxes, manuals, and even the dark grey base. The listing showed the machine running Windows 3.1.</p>

<img loading="lazy" src="https://fabiensanglard.net/2168/ebay.webp" width="2826" height="1326">
<p> The seller had it in a lot with two CRTs (one broken, and one for PS/2) that I did not want. After a short negotiation we reached an agreement involving the central unit only.</p>

<p>Having the original box was almost as important as getting the PC. I explained this remote concept to the seller who eventually agreed not to slap a stamp on the PS/1 box. I payed and started praying the seller would pack it well.</p>



<p>Next</p><hr><p><a href="https://fabiensanglard.net/2168/unboxing/">Part 2: Unboxing</a></p>
<p>References</p><hr><p id="paperbox"><table><tbody><tr><td><a name="footnote_1"></a><a href="#back_1">^</a></td><td> [ 1]</td><td>I wrote my first loop when I was 7 using the  Logo programming language (a.k.a Turtle) on a Thomson MO5. My school was part of the 1985 'Plan Informatique pour tous'.</td></tr><tr><td><a name="footnote_2"></a><a href="#back_2">^</a></td><td> [ 2]</td><td>Decades later I would treat myself to a dreamy Thinkpad T42.</td></tr><tr><td><a name="footnote_3"></a><a href="#back_3">^</a></td><td> [ 3]</td><td><a href="https://archive.is/apaoc#selection-839.254-839.289">PERSONAL COMPUTERS; From Stepchild to Favorite Son</a></td></tr><tr><td><a name="footnote_4"></a><a href="#back_4">^</a></td><td> [ 4]</td><td><a href="https://archive.is/qXiE0#selection-913.123-913.131">IBM UNVEILS NEW PS/1 COMPUTER LINE</a></td></tr><tr><td><a name="footnote_5"></a><a href="#back_5">^</a></td><td> [ 5]</td><td><a href="https://www.youtube.com/watch?v=P5m8hvQ8JLw">IBM Aptiva 2168 review Retro PC Build</a></td></tr><tr><td><a name="footnote_6"></a><a href="#back_6">^</a></td><td> [ 6]</td><td><a href="https://en.wikipedia.org/wiki/Model_M_keyboard">Model M keyboard</a></td></tr><tr><td><a name="footnote_7"></a><a href="#back_7">^</a></td><td> [ 7]</td><td><a href="https://www.youtube.com/watch?v=49ZOxgc2pXI">Epictronics: The Priest Gaming Rig</a></td></tr><tr><td><a name="footnote_8"></a><a href="#back_8">^</a></td><td> [ 8]</td><td><a href="https://www.youtube.com/watch?v=kxbkkpe6wfM">Epictronics: 2x faster DOOM Hack</a></td></tr><tr><td><a name="footnote_9"></a><a href="#back_9">^</a></td><td> [ 9]</td><td><a href="https://www.youtube.com/watch?v=ScpSBcMMuX4">Epictronics: 3.6X faster DOOM</a></td></tr><tr><td><a name="footnote_10"></a><a href="#back_10">^</a></td><td> [10]</td><td><a href="https://www.youtube.com/watch?v=31VCP71FxWc">Epictronics: Overclocking IBM PS/1 486</a></td></tr><tr><td><a name="footnote_11"></a><a href="#back_11">^</a></td><td> [11]</td><td><a href="https://en.wikipedia.org/wiki/IBM_PS/1#:~:text=models%2C%20French%20model-,Model%202168,-%5Bedit%20source">The IBM PS/1 came in various configurations identified by a three alphanumerical suffix</a></td></tr></tbody></table></p> <hr>
 <center>*</center></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple Card Disabled My iCloud, App Store, and Apple ID Accounts (2021) (136 pts)]]></title>
            <link>https://dcurt.is/apple-card-can-disable-your-icloud-account</link>
            <guid>44021792</guid>
            <pubDate>Sun, 18 May 2025 14:47:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dcurt.is/apple-card-can-disable-your-icloud-account">https://dcurt.is/apple-card-can-disable-your-icloud-account</a>, See on <a href="https://news.ycombinator.com/item?id=44021792">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="container">
  <article id="joY8W3tvZQnd4STUybDLAs">
	<time datetime="2021-03-01">March  1, 2021</time>
  <h2>
    <a href="https://dcurt.is/apple-card-can-disable-your-icloud-account">Apple Card disabled my iCloud, App Store, and Apple ID accounts</a>
  </h2>
	<p>About ten days ago, when I went to update a few apps in the App Store on my Mac, I was met with a curious error.</p>

<p><a href="https://svbtleusercontent.com/qest5zgsbPZ36zkUp7CHo40xspap.png"><img src="https://svbtleusercontent.com/qest5zgsbPZ36zkUp7CHo40xspap_small.png" alt="mac_app_store.png"></a></p>

<p>The internet is filled with stories from people whose Google accounts were locked for unexplained reasons, causing them to lose all of their data, including years of email, so I was somewhat concerned. But I’d never heard of similar cases involving Apple’s services, and I wouldn’t expect such behavior from a customer-focused company like Apple, so I figured it was a glitch and made a mental note to try again later.</p>

<p>The next day, Music.app stopped working.</p>

<p><a href="https://svbtleusercontent.com/oyQJaCT4RtgroGwU2afbHb0xspap.png"><img src="https://svbtleusercontent.com/oyQJaCT4RtgroGwU2afbHb0xspap_small.png" alt="mac_music_app.png"></a></p>

<p>Now I was genuinely worried. I checked my phone and neither the App Store nor Apple Music would work there, either. A few minutes later, Calendar popped up an error – it had stopped syncing. I immediately tried to call Apple Support from my Mac, but Apple’s Handoff feature had been disabled as well. </p>

<p>The first person I spoke to at Apple spent a while researching the issue and then told me there was nothing she could do but escalate the issue, and that I should expect a call <em>“hopefully”</em> within the next day. I asked what the problem might be, and she seemed as confused as I was. Although some Apple services were still working, like iMessage (thank God) and Photos, I was terrified that more services would suddenly become inaccessible or that I would lose the considerable amount of data I have stored in iCloud.</p>

<p>A couple of days later, I became impatient and contacted Apple Support again. This time, the representative mumbled something about Apple Card before saying that he also had no power to help me. Apple ID was a different department, he said, and they could only be contacted by email. He emailed them. I continued to wait.</p>

<p>The next time I tried to use my Apple Card, it was declined. Strange. I checked the Wallet app, and the balance was below the limit. I remembered the Apple support representative mumbling about Apple Card, so I did some digging through my email to see if I could find a connection.</p>

<hr>

<p>As it turns out, my bank account number changed in January, causing Apple Card autopay to fail. Then the Apple Store made a charge on the card. Less than fifteen days after that, my App Store, iCloud, Apple Music, and Apple ID accounts had all been disabled by Apple Card. </p>

<hr>
<h3 id="so-what-happened_3">So what happened? <a href="#so-what-happened_3">#</a></h3>
<p>In mid-January, I bought an M1 MacBook Pro. The checkout flow offered a trade-in credit for an old MacBook Pro I had laying around. The Apple Store said I would receive a “trade-in kit” by mail and then have two weeks to send the old MacBook to Apple. Sounds easy, and definitely a very Apple-like experience. </p>

<p>But the trade-in kit never arrived. I had forgotten about it. When I received an email in mid-February asking about the trade-in, I responded (as it had invited me to do) explaining that I never received the kit and asked for another one. I didn’t get a response.</p>

<p>Very soon after, it seems that Apple simply added the amount of the credit I received when I purchased the M1 MacBook Pro to my Apple Card balance. Normally, this wouldn’t be a problem. Imagine if I had used any other credit card – it would have just been an ordinary charge. But because it was the Apple Store and Apple Card, apparently, things escalated very quickly.</p>

<p>On February 15th, Apple sent me this email:</p>
<blockquote><p><strong>Action Required: Apple Card</strong></p>

<p>From: Apple <a href="mailto:payment@apple.com">payment@apple.com</a><br>
Reply-to: <a href="mailto:preceivables@apple.com">preceivables@apple.com</a></p>

<p>We’ve been unable to collect full payment for your new iPhone. As a result, we will block the device on the order from further access to the Apple iTunes and Mac App stores, and disable all accounts associated with the device purchased on the order.</p>

<p>To resolve this issue, please call 1-877-255-5923 to speak with an Apple Card Specialist at Goldman Sachs. Once the issue has been resolved, reply to this email so we can charge your card for the difference in value.</p>

<p>For your protection, do not submit credit card information via email.</p>
</blockquote>
<p>It appears as though charges from Apple are special, and if your account is not 100% current, Apple will quickly take drastic action. Unfortunately, this email got lost in my inbox and I didn’t see it until I went looking. But it is extremely concerning for several reasons.</p>

<ul>
<li>Apple says it will hold my Apple accounts hostage in order to collect a payment.</li>
<li>It says it is related to an iPhone when it was actually regarding a MacBook Pro. And iTunes no longer exists. The lack of attention to detail is not great given the seriousness of the threat that follows.</li>
<li>It was sent when Apple Card was only a few days past due.</li>
<li>It suggests that charges by Apple on Apple Card are different from other purchases, and this can have serious consequences. (Also: the Apple Card agreement does not mention this technicality.)</li>
</ul>

<p>After fixing the Apple Card issue, I replied to the email as it says, and received this in response: </p>

<p><a href="https://svbtleusercontent.com/7SNnHHaXX7jK7ewzeX4WLC0xspap.png"><img src="https://svbtleusercontent.com/7SNnHHaXX7jK7ewzeX4WLC0xspap_small.png" alt="bounce.png"></a></p>

<p>Great. </p>

<p>By this point, Apple Support had been unable to help me – or to even identify the issue. My App Store, Apple Music, iCloud, and Apple ID accounts were disabled. Replying to the email as instructed resulted in a bounce. </p>

<p>So I used Apple Business Chat to talk with Goldman Sachs. The representative there seemed confused, asked me to wait for quite a while, and then said the only way to reactivate my Apple ID was for him to email a department at Apple and wait for a call back within “a few days”. </p>

<p>Earlier today, I received a call from someone at Apple who explained that I had found the right department – finally! – but that the Apple account re-activation team can only be contacted by email and the process takes <em>at least 3-5 business days</em>. He emailed them.</p>

<p>And now I am once again waiting. </p>

<hr>

<p><strong>Update:</strong> My accounts have been reactivated. </p>

  <figure id="kudo_joY8W3tvZQnd4STUybDLAs">
    <a href="#kudo">
      
    </a>
    <p>2,340</p>
    <p>Kudos</p>
  </figure>
  <figure id="kudo_side_joY8W3tvZQnd4STUybDLAs">
    <a href="#kudo">
      
    </a>
    <p>2,340</p>
    <p>Kudos</p>
  </figure>
</article>

</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Logo Ligature Bug (125 pts)]]></title>
            <link>https://www.jefftk.com/p/google-logo-ligature-bug</link>
            <guid>44021028</guid>
            <pubDate>Sun, 18 May 2025 12:51:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jefftk.com/p/google-logo-ligature-bug">https://www.jefftk.com/p/google-logo-ligature-bug</a>, See on <a href="https://news.ycombinator.com/item?id=44021028">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<div>

    <p><span>

Jeffrey Yasskin recently </span><a href="https://hachyderm.io/@jyasskin/114520767683101962">pointed
out</a> an <a href="https://issues.chromium.org/issues/391788835">interesting
security bug</a>:

</p><p>

<a href="https://www.jefftk.com/google-logo-ligature-example-big.png"><img src="https://www.jefftk.com/google-logo-ligature-example.png" width="550" height="1152" srcset="https://www.jefftk.com/google-logo-ligature-example.png 550w,https://www.jefftk.com/google-logo-ligature-example-2x.png 1100w"></a></p>


<p>

The idea is, if you had registered <code>googlelogoligature.net</code>
then Chrome on Android (and possibly other Google products) would have
displayed it as <code>Google.net</code>, potentially tricking users
into thinking they were really interacting with Google.

</p>
<p>

To see how this worked, you can try searching Google for <a href="https://www.google.com/search?q=%22googlelogoligature%22">["googlelogoligature"]</a>,
and you'll see it shows up as "Google":

</p>
<p>

<a href="https://www.jefftk.com/google-logo-ligature-devtools-big.png"><img src="https://www.jefftk.com/google-logo-ligature-devtools.png" width="550" height="376" srcset="https://www.jefftk.com/google-logo-ligature-devtools.png 550w,https://www.jefftk.com/google-logo-ligature-devtools-2x.png 1100w"></a></p>


<p>

Poking in devtools, this is dependent on the specific font they're
using, "Google Sans".  If I turn that off my "googlelogoligature"
shows just as I typed it:

</p>
<p>

<a href="https://www.jefftk.com/google-logo-ligature-devtools-off-big.png"><img src="https://www.jefftk.com/google-logo-ligature-devtools-off.png" width="550" height="376" srcset="https://www.jefftk.com/google-logo-ligature-devtools-off.png 550w,https://www.jefftk.com/google-logo-ligature-devtools-off-2x.png 1100w"></a></p>


<p>

Fonts can include "ligatures", which let font designers special-case
specific combinations of letters.  These were intended to support
things like "f" followed by "i" blending into "fi" nicely, but the
feature has been (ab)used for many other things, including <a href="https://type.today/en/journal/emoji01">complex emoji</a>.  In
this case, Google Sans has a specific way of drawing
"googlelogoligature" that looks like a mildly stylized "Google".

</p>
<p>

Using a ligature to get the Google logo into text-only interfaces is a
reasonable product decision, but it shouldn't have been added to a
general-purpose font.  And especially shouldn't have been added to a
font used for rendering attacker-controlled text in
security-sensitive contexts.

</p>
<p>

(When I first saw it I thought this might be an example of a <a href="https://www.jefftk.com/p/is-unicode-safe">unicode-driven
vulnerability</a>, but sadly not.)

  </p>
</div>


  
<p>Comment via: <a href="https://www.facebook.com/jefftk/posts/pfbid0y9mmbyqjWm6bVhAVH8MUmQKuirGiCkxEfFnL2QGrcrDkQqCv1HtvuukqqrYcJsTpl">facebook</a>, <a href="https://lesswrong.com/posts/MGGm8B7StJtbhQs56">lesswrong</a>, <a href="https://mastodon.mit.edu/@jefftk/114526485794379433">mastodon</a>, <a href="https://bsky.app/profile/jefftk.com/post/3lpfzcbfi4c2w">bluesky</a></p>

</div><section>
  <h3>Recent posts on blogs I like:</h3>
  <section>
    
    <div>
      <h4>
        <a href="https://thingofthings.substack.com/p/brief-solution-focused-therapy">Solution-Focused Brief Therapy</a>
      </h4>
      <p>Look! A therapy technique people don't already know!</p>
      <p><small>
        via <a href="https://thingofthings.substack.com/">Thing of Things</a>
      </small>
      <small>May 14, 2025</small>
    </p></div>
    
    <div>
      <h4>
        <a href="https://lincolnquirk.com/2025/04/30/workshop.html">Workshop House case study</a>
      </h4>
      <p>Lauren Hoffman interviewed me about Workshop House and wrote this post about a community I’m working on building in DC.</p>
      <p><small>
        via <a href="https://lincolnquirk.com/">Home</a>
      </small>
      <small>April 30, 2025</small>
    </p></div>
    
    <div>
      <h4>
        <a href="https://www.benkuhn.net/impact/">Impact, agency, and taste</a>
      </h4>
      <p>understand + work backwards from the root goal • don’t rely too much on permission or encouragement • make success inevitable • find your angle • think real hard • reflect on your thinking</p>
      <p><small>
        via <a href="https://www.benkuhn.net/">benkuhn.net</a>
      </small>
      <small>April 19, 2025</small>
    </p></div>
    
  </section>
  <p>
    <a href="https://www.jefftk.com/ring">more</a>
    &nbsp;&nbsp;&nbsp;
    (<a href="https://git.sr.ht/~sircmpwn/openring">via openring</a>)
  </p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Hardtime.nvim – break bad habits and master Vim motions (173 pts)]]></title>
            <link>https://github.com/m4xshen/hardtime.nvim</link>
            <guid>44020734</guid>
            <pubDate>Sun, 18 May 2025 12:08:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/m4xshen/hardtime.nvim">https://github.com/m4xshen/hardtime.nvim</a>, See on <a href="https://news.ycombinator.com/item?id=44020734">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<div dir="auto">
<p dir="auto"><h2 tabindex="-1" dir="auto">hardtime.nvim</h2><a id="user-content-hardtimenvim" aria-label="Permalink: hardtime.nvim" href="#hardtimenvim"></a></p>
<p dir="auto">Break bad habits, master Vim motions</p>
<p dir="auto"><a href="https://github.com/m4xshen/hardtime.nvim/actions/workflows/tests.yml"><img src="https://camo.githubusercontent.com/d1d6f981bc21b383754af8e2007357bcebf9fa94a61e704fb36ced25b03ecafd/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f616374696f6e732f776f726b666c6f772f7374617475732f6d34787368656e2f6861726474696d652e6e76696d2f74657374732e796d6c3f6c6162656c3d427573746564266c6f676f3d4c7561" alt="Busted" data-canonical-src="https://img.shields.io/github/actions/workflow/status/m4xshen/hardtime.nvim/tests.yml?label=Busted&amp;logo=Lua"></a> <a target="_blank" rel="noopener noreferrer nofollow" href="https://camo.githubusercontent.com/6c6dbaf22b36ec46ba00d8ce883e3a9a2cc67afcb30003102b68997329e1374f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e656f76696d2d302e31302d3537413134333f6c6f676f3d6e656f76696d"><img src="https://camo.githubusercontent.com/6c6dbaf22b36ec46ba00d8ce883e3a9a2cc67afcb30003102b68997329e1374f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4e656f76696d2d302e31302d3537413134333f6c6f676f3d6e656f76696d" alt="Neovim version" data-canonical-src="https://img.shields.io/badge/Neovim-0.10-57A143?logo=neovim"></a></p>
<p dir="auto"><a href="#-features">Features</a> • <a href="#-installation">Installation</a> • <a href="#-usage">Usage</a> • <a href="#-configuration">Configuration</a></p>
<details open="">
  <summary>
    
    <span aria-label="Video description RestrictKeys.mov">RestrictKeys.mov</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/74842863/444841941-3cc1bcdd-1ace-40f0-b295-f84a78051d6a.mov?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc1ODk3MDMsIm5iZiI6MTc0NzU4OTQwMywicGF0aCI6Ii83NDg0Mjg2My80NDQ4NDE5NDEtM2NjMWJjZGQtMWFjZS00MGYwLWIyOTUtZjg0YTc4MDUxZDZhLm1vdj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTE4VDE3MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWIxN2Y1Y2FjOWZkZDI4M2UwYjM2NjNkNjA3ZTNjNzU3YzJmMGNkMWMxNDA2MGVjYWFmNWE1OTQwOGY0M2JlOTcmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.9Vl5wDOOcPw9P92HLI-yGgdQWhss_LpNDSNssrSVrME" data-canonical-src="https://private-user-images.githubusercontent.com/74842863/444841941-3cc1bcdd-1ace-40f0-b295-f84a78051d6a.mov?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc1ODk3MDMsIm5iZiI6MTc0NzU4OTQwMywicGF0aCI6Ii83NDg0Mjg2My80NDQ4NDE5NDEtM2NjMWJjZGQtMWFjZS00MGYwLWIyOTUtZjg0YTc4MDUxZDZhLm1vdj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTE4VDE3MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWIxN2Y1Y2FjOWZkZDI4M2UwYjM2NjNkNjA3ZTNjNzU3YzJmMGNkMWMxNDA2MGVjYWFmNWE1OTQwOGY0M2JlOTcmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.9Vl5wDOOcPw9P92HLI-yGgdQWhss_LpNDSNssrSVrME" controls="controls" muted="muted">

  </video>
</details>

<details open="">
  <summary>
    
    <span aria-label="Video description Hints.mov">Hints.mov</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/74842863/444842107-1c120fe5-c57d-4cb3-8313-25f2395e95fa.mov?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc1ODk3MDMsIm5iZiI6MTc0NzU4OTQwMywicGF0aCI6Ii83NDg0Mjg2My80NDQ4NDIxMDctMWMxMjBmZTUtYzU3ZC00Y2IzLTgzMTMtMjVmMjM5NWU5NWZhLm1vdj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTE4VDE3MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTljN2I2M2YzNTZiZmZiOWU2OTA0Y2U3YmNiNzQ2ZjlmYzkwMDNiNmVjNzQxNzE1NmViMDk5MTNiMDJlOTEwYmUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.CauNmeTwvQH90Lkauit5kDtDIc0lJs3LmvCwtL8YgcE" data-canonical-src="https://private-user-images.githubusercontent.com/74842863/444842107-1c120fe5-c57d-4cb3-8313-25f2395e95fa.mov?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc1ODk3MDMsIm5iZiI6MTc0NzU4OTQwMywicGF0aCI6Ii83NDg0Mjg2My80NDQ4NDIxMDctMWMxMjBmZTUtYzU3ZC00Y2IzLTgzMTMtMjVmMjM5NWU5NWZhLm1vdj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTA1MTglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwNTE4VDE3MzAwM1omWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTljN2I2M2YzNTZiZmZiOWU2OTA0Y2U3YmNiNzQ2ZjlmYzkwMDNiNmVjNzQxNzE1NmViMDk5MTNiMDJlOTEwYmUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.CauNmeTwvQH90Lkauit5kDtDIc0lJs3LmvCwtL8YgcE" controls="controls" muted="muted">

  </video>
</details>

</div>
<p dir="auto"><h2 tabindex="-1" dir="auto">✨ Features</h2><a id="user-content--features" aria-label="Permalink: ✨ Features" href="#-features"></a></p>
<ul dir="auto">
<li>Block repeated keys within a short period of time</li>
<li>Provide hints for faster Vim motion</li>
<li>Get report of your most common bad habits</li>
</ul>

<p dir="auto"><h2 tabindex="-1" dir="auto">👍🏻 Recommended workflow</h2><a id="user-content--recommended-workflow" aria-label="Permalink: 👍🏻 Recommended workflow" href="#-recommended-workflow"></a></p>
<p dir="auto">Instead of only relying on <code>hjkl</code>, arrow keys and mouse, you should:</p>
<ol dir="auto">
<li>Use relative jump (eg: <code>5j</code> <code>12-</code>) for vertical movement within the screen.</li>
<li>Use <code>CTRL-U</code> <code>CTRL-D</code> <code>CTRL-B</code> <code>CTRL-F</code> <code>gg</code> <code>G</code> for vertical movement outside the screen.</li>
<li>Use word-motion (<code>w</code> <code>W</code> <code>b</code> <code>B</code> <code>e</code> <code>E</code> <code>ge</code> <code>gE</code>) for short-distance horizontal movement.</li>
<li>Use <code>f</code> <code>F</code> <code>t</code> <code>T</code> <code>,</code> <code>;</code> <code>0</code> <code>^</code> <code>$</code> for medium to long-distance horizontal movement.</li>
<li>Use operator + motion/text-object (eg: <code>ci{</code> <code>y5j</code> <code>dap</code>) whenever possible.</li>
<li>Use <code>%</code> and square bracket commands (see <code>:h [</code>) to jump between brackets.</li>
</ol>
<p dir="auto">Learn more in this <a href="https://m4xshen.dev/posts/vim-command-workflow/" rel="nofollow">blog post</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">⚡ Requirements</h2><a id="user-content--requirements" aria-label="Permalink: ⚡ Requirements" href="#-requirements"></a></p>
<ul dir="auto">
<li>Neovim &gt;= <a href="https://github.com/neovim/neovim/releases/tag/v0.10.0">v0.10.0</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">📦 Installation</h2><a id="user-content--installation" aria-label="Permalink: 📦 Installation" href="#-installation"></a></p>
<ol dir="auto">
<li>Install via your favorite package manager.</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="{
   &quot;m4xshen/hardtime.nvim&quot;,
   lazy = false,
   dependencies = { &quot;MunifTanjim/nui.nvim&quot; },
   opts = {},
},"><pre>{
   <span><span>"</span>m4xshen/hardtime.nvim<span>"</span></span>,
   <span>lazy</span> <span>=</span> <span>false</span>,
   <span>dependencies</span> <span>=</span> { <span><span>"</span>MunifTanjim/nui.nvim<span>" </span></span>},
   <span>opts</span> <span>=</span> {},
},</pre></div>
<ol start="2" dir="auto">
<li>Setup the plugin in your <code>init.lua</code>. This step is not needed with lazy.nvim if <code>opts</code> is set as above.</li>
</ol>
<div dir="auto" data-snippet-clipboard-copy-content="require(&quot;hardtime&quot;).setup()"><pre><span>require</span>(<span><span>"</span>hardtime<span>"</span></span>).<span>setup</span>()</pre></div>
<p dir="auto">If you want to see the hint messages in insert and visual mode, set the <code>'showmode'</code> to false.</p>
<p dir="auto">But if you want to see both the hint message and current mode you can setup with one of the following methods:</p>
<ul dir="auto">
<li>Display the mode on status line and set <code>'showmode'</code> to false. You can do this with some statusline plugin such as lualine.nvim.</li>
<li>Set the <code>'cmdheight'</code> to 2 so that the hint message won't be replaced by mode message.</li>
<li>Use nvim-notify to display hint messages on the right top corner instead of commandline.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🚀 Usage</h2><a id="user-content--usage" aria-label="Permalink: 🚀 Usage" href="#-usage"></a></p>
<p dir="auto">Hardtime is enabled by default. You can change its state with the following commands:</p>
<ul dir="auto">
<li><code>:Hardtime enable</code> enable Hardtime</li>
<li><code>:Hardtime disable</code> disable Hardtime</li>
<li><code>:Hardtime toggle</code> toggle Hardtime</li>
</ul>
<p dir="auto">You can view the most frequently seen hints with <code>:Hardtime report</code>.</p>
<p dir="auto">Your log file is at <code>~/.local/state/nvim/hardtime.nvim.log</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🔧 Configuration</h2><a id="user-content--configuration" aria-label="Permalink: 🔧 Configuration" href="#-configuration"></a></p>
<p dir="auto">You can pass your config table into the <code>setup()</code> function or <code>opts</code> if you use lazy.nvim.</p>
<p dir="auto">If the option is a table (<code>key = value</code> pair), you can set <code>value</code> to <code>false</code> to disable the default value.</p>
<p dir="auto">Examples:</p>
<div dir="auto" data-snippet-clipboard-copy-content="disabled_keys = {
   [&quot;<Up>&quot;] = false, -- Allow <Up> key
   [&quot;<Space>&quot;] = { &quot;n&quot;, &quot;x&quot; }, -- Disable <Space> key in normal and visual mode
},"><pre><span>disabled_keys</span> <span>=</span> {
   [<span><span>"</span>&lt;Up&gt;<span>"</span></span>] <span>=</span> <span>false</span>, <span><span>--</span> Allow &lt;Up&gt; key</span>
   [<span><span>"</span>&lt;Space&gt;<span>"</span></span>] <span>=</span> { <span><span>"</span>n<span>"</span></span>, <span><span>"</span>x<span>" </span></span>}, <span><span>--</span> Disable &lt;Space&gt; key in normal and visual mode</span>
},</pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="disabled_filetypes = { 
   lazy = false, -- Enable Hardtime in lazy filetype
   [&quot;dapui*&quot;] = false, -- Enable Hardtime in filetype starting with dapui
},"><pre><span>disabled_filetypes</span> <span>=</span> { 
   <span>lazy</span> <span>=</span> <span>false</span>, <span><span>--</span> Enable Hardtime in lazy filetype</span>
   [<span><span>"</span>dapui*<span>"</span></span>] <span>=</span> <span>false</span>, <span><span>--</span> Enable Hardtime in filetype starting with dapui</span>
},</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Options</h3><a id="user-content-options" aria-label="Permalink: Options" href="#options"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Option Name</th>
<th>Type</th>
<th>Default Value</th>
<th>Meaning</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>max_time</code></td>
<td>number</td>
<td><code>1000</code></td>
<td>Maximum time (in milliseconds) to consider key presses as repeated.</td>
</tr>
<tr>
<td><code>max_count</code></td>
<td>number</td>
<td><code>3</code></td>
<td>Maximum count of repeated key presses allowed within the <code>max_time</code> period.</td>
</tr>
<tr>
<td><code>disable_mouse</code></td>
<td>boolean</td>
<td><code>true</code></td>
<td>Disable mouse support.</td>
</tr>
<tr>
<td><code>hint</code></td>
<td>boolean</td>
<td><code>true</code></td>
<td>Enable hint messages for better commands.</td>
</tr>
<tr>
<td><code>notification</code></td>
<td>boolean</td>
<td><code>true</code></td>
<td>Enable notification messages for restricted and disabled keys.</td>
</tr>
<tr>
<td><code>timeout</code></td>
<td>number or boolean</td>
<td><code>3000</code></td>
<td>Time to show notification in milliseconds, set to <code>false</code> to disable timeout.</td>
</tr>
<tr>
<td><code>allow_different_key</code></td>
<td>boolean</td>
<td><code>true</code></td>
<td>Allow different keys to reset the count.</td>
</tr>
<tr>
<td><code>enabled</code></td>
<td>boolean</td>
<td><code>true</code></td>
<td>Whether the plugin is enabled by default or not.</td>
</tr>
<tr>
<td><code>resetting_keys</code></td>
<td>table</td>
<td><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">See Config</a></td>
<td>Keys in what modes that reset the count.</td>
</tr>
<tr>
<td><code>restricted_keys</code></td>
<td>table</td>
<td><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">See Config</a></td>
<td>Keys in what modes triggering the count mechanism.</td>
</tr>
<tr>
<td><code>restriction_mode</code></td>
<td>string (<code>"block" or "hint"</code>)</td>
<td><code>"block"</code></td>
<td>The behavior when <code>restricted_keys</code> trigger count mechanism.</td>
</tr>
<tr>
<td><code>disabled_keys</code></td>
<td>table</td>
<td><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">See Config</a></td>
<td>Keys in what modes are disabled.</td>
</tr>
<tr>
<td><code>disabled_filetypes</code></td>
<td>table</td>
<td><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">See Config</a></td>
<td>Hardtime is disabled under these filetypes.</td>
</tr>
<tr>
<td><code>hints</code></td>
<td>table</td>
<td><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">See Config</a></td>
<td><code>key</code> is a string pattern you want to match, <code>value</code> is a table of hint message and pattern length. Learn more about <a href="https://www.lua.org/pil/20.2.html" rel="nofollow">Lua string pattern</a>.</td>
</tr>
<tr>
<td><code>callback</code></td>
<td>function(text)</td>
<td><code>vim.notify</code></td>
<td><code>callback</code> function can be used to override the default notification behavior.</td>
</tr>
<tr>
<td><code>force_exit_insert_mode</code></td>
<td>boolean</td>
<td><code>false</code></td>
<td>Enable forcing exit Insert mode if user is inactive in Insert mode.</td>
</tr>
<tr>
<td><code>max_insert_idle_ms</code></td>
<td>number</td>
<td><code>5000</code></td>
<td>Maximum amount of idle time, in milliseconds, allowed in Insert mode.</td>
</tr>
<tr>
<td><code>ui</code></td>
<td>table of strings/table pair</td>
<td><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">See Config</a></td>
<td>An option to customize the popup for the <code>Hardtime report</code>.</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h3 tabindex="-1" dir="auto"><code>hints</code> example</h3><a id="user-content-hints-example" aria-label="Permalink: hints example" href="#hints-example"></a></p>
<p dir="auto">These are two default hints:</p>
<div dir="auto" data-snippet-clipboard-copy-content="hints = {
   [&quot;k%^&quot;] = {
      message = function()
         return &quot;Use - instead of k^&quot; -- return the hint message you want to display
      end,
      length = 2, -- the length of actual key strokes that matches this pattern
   },
   [&quot;d[tTfF].i&quot;] = { -- this matches d + {t/T/f/F} + {any character} + i
      message = function(keys) -- keys is a string of key strokes that matches the pattern
         return &quot;Use &quot; .. &quot;c&quot; .. keys:sub(2, 3) .. &quot; instead of &quot; .. keys
         -- example: Use ct( instead of dt(i
      end,
      length = 4,
   },
}"><pre><span>hints</span> <span>=</span> {
   [<span><span>"</span>k%^<span>"</span></span>] <span>=</span> {
      <span>message</span> <span>=</span> <span>function</span>()
         <span>return</span> <span><span>"</span>Use - instead of k^<span>" </span></span><span><span>--</span> return the hint message you want to display</span>
      <span>end</span>,
      <span>length</span> <span>=</span> <span>2</span>, <span><span>--</span> the length of actual key strokes that matches this pattern</span>
   },
   [<span><span>"</span>d[tTfF].i<span>"</span></span>] <span>=</span> { <span><span>--</span> this matches d + {t/T/f/F} + {any character} + i</span>
      <span>message</span> <span>=</span> <span>function</span>(<span>keys</span>) <span><span>--</span> keys is a string of key strokes that matches the pattern</span>
         <span>return</span> <span><span>"</span>Use <span>" </span></span><span>..</span> <span><span>"</span>c<span>" </span></span><span>..</span> <span>keys</span>:<span>sub</span>(<span>2</span>, <span>3</span>) <span>..</span> <span><span>"</span> instead of <span>" </span></span><span>..</span> <span>keys</span>
         <span><span>--</span> example: Use ct( instead of dt(i</span>
      <span>end</span>,
      <span>length</span> <span>=</span> <span>4</span>,
   },
}</pre></div>
<p dir="auto">Check out some examples of custom hint in <a href="https://github.com/m4xshen/hardtime.nvim/discussions/categories/custom-hints">discussion</a>!</p>
<p dir="auto"><h3 tabindex="-1" dir="auto"><a href="https://github.com/m4xshen/hardtime.nvim/blob/main/lua/hardtime/config.lua">Default config</a></h3><a id="user-content-default-config" aria-label="Permalink: Default config" href="#default-config"></a></p>

<p dir="auto"><h2 tabindex="-1" dir="auto">🦾 Contributing</h2><a id="user-content--contributing" aria-label="Permalink: 🦾 Contributing" href="#-contributing"></a></p>
<p dir="auto">Please read <a href="https://github.com/m4xshen/hardtime.nvim/blob/main/CONTRIBUTING.md">CONTRIBUTING.md</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">👥 Contributors</h2><a id="user-content--contributors" aria-label="Permalink: 👥 Contributors" href="#-contributors"></a></p>
<a href="https://github.com/m4xshen/hardtime.nvim/graphs/contributors">
  <img src="https://camo.githubusercontent.com/a5e5f82d81b6692ac12ae01ee2265b3e0a1bbf86afb62a4baecf0778ad6ae557/68747470733a2f2f636f6e747269622e726f636b732f696d6167653f7265706f3d6d34787368656e2f6861726474696d652e6e76696d" data-canonical-src="https://contrib.rocks/image?repo=m4xshen/hardtime.nvim">
</a>

</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Thank you Google for breaking my YouTube addiction (107 pts)]]></title>
            <link>https://rakhim.exotext.com/thank-you-google-for-breaking-my-youtube-addiction</link>
            <guid>44020653</guid>
            <pubDate>Sun, 18 May 2025 11:55:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rakhim.exotext.com/thank-you-google-for-breaking-my-youtube-addiction">https://rakhim.exotext.com/thank-you-google-for-breaking-my-youtube-addiction</a>, See on <a href="https://news.ycombinator.com/item?id=44020653">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <p>Over the past few years, Google has done a surprisingly great job of making YouTube less interesting and engaging — and in turn, less addictive. Maybe they've got some ethical guidelines in the top management now? If so, well done, Google.</p>
<p>Back in the day, when YouTube was mostly about your subscriptions, it was mildly addictive. You’d watch a C++ talk, and the sidebar would actually show you other useful C++ videos. It was relevant, and it kept you watching without feeling like you were drowning in content.</p>
<p>Then they introduced the algorithmic home feed, and that’s when things got intense. You’d open YouTube and get hit with an endless grid of videos tailored to your weird, eclectic mix of interests. Every refresh was like, “Oh, wow, more stuff I didn’t even know I wanted to watch!” It was like YouTube was infinite. </p>
<p>Now? Now it feels like YouTube is trying to bore us into logging off. The homepage just recycles the same 10-20 videos for weeks. It's like a kid in high school trying really hard to expand two sentences into a required 2-page essay by <a href="https://jayd.ml/2025/04/30/someone-at-youtube-needs-glasses.html">increasing the line height and font size</a>, and re-phrasing the same point over and over again.</p>
<p><img src="https://img.exotext.com/1/qcCGARM0puK0m-pSLhwkR.jpg" alt="">
<em>YouTube app on Apple TV feels particularly empty. The same few videos shuffled on each row.</em></p>
<p>Watch two bee videos, and suddenly YouTube decides you’re a bee person for life. Over a decade of watch history, interests, searches, playlists — none of that matters anymore. The user is into bees now. </p>
<p>The search now serves up a couple of videos from channels you've interacted with, prioritizing them over the actual relevance, throws in completely unrelated recommendations, and then sprinkles random Shorts on top. It’s like they’re trying to convince you there’s nothing good left to watch.</p>
<p><img src="https://img.exotext.com/1/PVnazyRa12Es4UyRKeozA.jpg" alt="">
<em>Interested in nautical route planning algorithms? Sure, but what about sexy girls and cars?</em></p>
<p>Honestly, it’s kind of brilliant. If you wanted to make YouTube less addictive, this is how you’d do it — by making it feel pointless and lame. So, thanks, Google. You're actually doing the "don't be evil" thing!</p>

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A web browser agent in your Chrome side panel (131 pts)]]></title>
            <link>https://github.com/parsaghaffari/browserbee</link>
            <guid>44020626</guid>
            <pubDate>Sun, 18 May 2025 11:48:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/parsaghaffari/browserbee">https://github.com/parsaghaffari/browserbee</a>, See on <a href="https://news.ycombinator.com/item?id=44020626">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">BrowserBee 🐝</h2><a id="user-content-browserbee-" aria-label="Permalink: BrowserBee 🐝" href="#browserbee-"></a></p>
<p dir="auto"><em>Your in-browser AI assistant. Control the web with natural language.</em></p>
<details open="">
  <summary>
    
    <span aria-label="Video description BrowserBee.mp4">BrowserBee.mp4</span>
    <span></span>
  </summary>

  <video src="https://private-user-images.githubusercontent.com/3098913/444794185-209c7042-6d54-4fce-92a7-ddf8519156c6.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc1OTY5MDEsIm5iZiI6MTc0NzU5NjYwMSwicGF0aCI6Ii8zMDk4OTEzLzQ0NDc5NDE4NS0yMDljNzA0Mi02ZDU0LTRmY2UtOTJhNy1kZGY4NTE5MTU2YzYubXA0P1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDUxOCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTA1MThUMTkzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NTNlMWM1NjExYzNhOTMwODc4Yzg5NTA0NTBkMzdmZDUzNTFiZTQ1YzM5YzRlZGZlZTEzNWM1ZmQ2ZTE5N2I4NiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.N5YjxKDp4BysxgpsacneRd-JQGb6wVCwuHgTzwhruIA" data-canonical-src="https://private-user-images.githubusercontent.com/3098913/444794185-209c7042-6d54-4fce-92a7-ddf8519156c6.mp4?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc1OTY5MDEsIm5iZiI6MTc0NzU5NjYwMSwicGF0aCI6Ii8zMDk4OTEzLzQ0NDc5NDE4NS0yMDljNzA0Mi02ZDU0LTRmY2UtOTJhNy1kZGY4NTE5MTU2YzYubXA0P1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDUxOCUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTA1MThUMTkzMDAxWiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9NTNlMWM1NjExYzNhOTMwODc4Yzg5NTA0NTBkMzdmZDUzNTFiZTQ1YzM5YzRlZGZlZTEzNWM1ZmQ2ZTE5N2I4NiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.N5YjxKDp4BysxgpsacneRd-JQGb6wVCwuHgTzwhruIA" controls="controls" muted="muted">

  </video>
</details>

<p dir="auto">BrowserBee is a privacy-first open source Chrome extension that lets you control your browser using natural language. It combines the power of an LLM for instruction parsing &amp; planning, and Playwright for robust browser automation to accomplish tasks.</p>
<p dir="auto">Since BrowserBee runs entirely within your browser (with the exception of the LLM), it can safely interact with logged-in websites, like your social media accounts or email, without compromising security or requiring backend infrastructure. This makes it more convenient for personal use than other "browser use" type products out there.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🎲 Features</h2><a id="user-content--features" aria-label="Permalink: 🎲 Features" href="#-features"></a></p>
<ul dir="auto">
<li>Supports major LLM providers such as <strong>Anthropic</strong>, <strong>OpenAI</strong>, <strong>Gemini</strong>, and <strong>Ollama</strong> with more coming soon</li>
<li>Tracks <strong>token use</strong> and <strong>price</strong> so you know how much you're spending on each task</li>
<li>Has access to a wide range of <strong>🕹️ browser tools</strong> (listed below) for interacting and understanding browser state</li>
<li>Uses <strong>Playwright</strong> in the background which is a robust browser automation tool</li>
<li>The <strong>memory</strong> feature captures useful tool use sequences and stores them locally to make future use more efficient</li>
<li>The agent knows when to ask for user's <strong>approval</strong>, e.g. for purchases or posting updates on social media</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🕹️ Supported tools</h2><a id="user-content-️-supported-tools" aria-label="Permalink: 🕹️ Supported tools" href="#️-supported-tools"></a></p>
<details>
<summary><b>Navigation Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_navigate</strong></p>
<ul dir="auto">
<li>Navigate the browser to a specific URL. Input must be a full URL, e.g. <a href="https://example.com/" rel="nofollow">https://example.com</a></li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_wait_for_navigation</strong></p>
<ul dir="auto">
<li>Wait until network is idle (Playwright).</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_navigate_back</strong></p>
<ul dir="auto">
<li>Go back to the previous page (history.back()). No input.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_navigate_forward</strong></p>
<ul dir="auto">
<li>Go forward to the next page (history.forward()). No input.</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Tab Context Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_get_active_tab</strong></p>
<ul dir="auto">
<li>Returns information about the currently active tab, including its index, URL, and title.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_navigate_tab</strong></p>
<ul dir="auto">
<li>Navigate a specific tab to a URL. Input format: 'tabIndex|url' (e.g., '1|<a href="https://example.com/" rel="nofollow">https://example.com</a>')</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_screenshot_tab</strong></p>
<ul dir="auto">
<li>Take a screenshot of a specific tab by index. Input format: 'tabIndex[,flags]' (e.g., '1,full')</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Interaction Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_click</strong></p>
<ul dir="auto">
<li>Click an element. Input may be a CSS selector or literal text to match on the page.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_type</strong></p>
<ul dir="auto">
<li>Type text. Format: selector|text (e.g. input[name="q"]|hello)</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_handle_dialog</strong></p>
<ul dir="auto">
<li>Accept or dismiss the most recent alert/confirm/prompt dialog. Input <code>accept</code> or <code>dismiss</code>. For prompt dialogs you may append <code>|text</code> to supply response text.</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Observation Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_get_title</strong></p>
<ul dir="auto">
<li>Return the current page title.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_snapshot_dom</strong></p>
<ul dir="auto">
<li>Capture DOM snapshot of the current page with options for selector, clean, structure, and limit.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_query</strong></p>
<ul dir="auto">
<li>Return up to 10 outerHTML snippets for a CSS selector you provide.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_accessible_tree</strong></p>
<ul dir="auto">
<li>Return the AX accessibility tree JSON (default: interesting‑only). Input 'all' to dump full tree.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_read_text</strong></p>
<ul dir="auto">
<li>Return all visible text on the page, concatenated in DOM order.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_screenshot</strong></p>
<ul dir="auto">
<li>Take a screenshot of the current page with options for full page capture.</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Mouse Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_move_mouse</strong></p>
<ul dir="auto">
<li>Move the mouse cursor to absolute screen coordinates. Input format: <code>x|y</code> (example: <code>250|380</code>)</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_click_xy</strong></p>
<ul dir="auto">
<li>Left‑click at absolute coordinates. Input format: <code>x|y</code> (example: <code>250|380</code>)</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_drag</strong></p>
<ul dir="auto">
<li>Drag‑and‑drop with the left button. Input format: <code>startX|startY|endX|endY</code> (example: <code>100|200|300|400</code>)</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Keyboard Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_press_key</strong></p>
<ul dir="auto">
<li>Press a single key. Input is the key name (e.g. <code>Enter</code>, <code>ArrowLeft</code>, <code>a</code>).</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_keyboard_type</strong></p>
<ul dir="auto">
<li>Type arbitrary text at the current focus location. Input is the literal text to type. Use <code>\n</code> for new lines.</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Tab Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>browser_tab_list</strong></p>
<ul dir="auto">
<li>Return a list of open tabs with their indexes and URLs.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_tab_new</strong></p>
<ul dir="auto">
<li>Open a new tab. Optional input = URL to navigate to (otherwise blank tab).</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_tab_select</strong></p>
<ul dir="auto">
<li>Switch focus to a tab by index. Input = integer index from browser_tab_list.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>browser_tab_close</strong></p>
<ul dir="auto">
<li>Close a tab. Input = index to close (defaults to current tab if blank).</li>
</ul>
</li>
</ul>
</details>
<details>
<summary><b>Memory Tools</b></summary>
<ul dir="auto">
<li>
<p dir="auto"><strong>save_memory</strong></p>
<ul dir="auto">
<li>Save a memory of how to accomplish a specific task on a website. Use this when you want to remember a useful sequence of actions for future reference.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>lookup_memories</strong></p>
<ul dir="auto">
<li>Look up stored memories for a specific website domain. Use this as your FIRST step when starting a task on a website to check if there are any saved patterns you can reuse.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>get_all_memories</strong></p>
<ul dir="auto">
<li>Retrieve all stored memories across all domains. Use this when you want to see all available memories.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>delete_memory</strong></p>
<ul dir="auto">
<li>Delete a specific memory by its ID. Use this when a memory is no longer useful or accurate.</li>
</ul>
</li>
<li>
<p dir="auto"><strong>clear_all_memories</strong></p>
<ul dir="auto">
<li>Clear all stored memories. Use this with caution as it will delete all memories across all domains.</li>
</ul>
</li>
</ul>
</details>
<p dir="auto"><h2 tabindex="-1" dir="auto">✅ Use Cases</h2><a id="user-content--use-cases" aria-label="Permalink: ✅ Use Cases" href="#-use-cases"></a></p>
<ul dir="auto">
<li><strong>Social media butler</strong>: Checks your social media accounts, summarizes notifications and messages, and helps you respond.</li>
<li><strong>News curator</strong>: Gathers and summarizes the latest headlines from your preferred news sources and blogs, giving you a quick, personalized briefing.</li>
<li><strong>Personal assistant</strong>: Helps with everyday tasks like reading and sending emails and messages, booking flights, finding products, and more.</li>
<li><strong>Research assistant</strong>: Assists with deep dives into topics like companies, job listings, market trends, and academic publications by gathering and organizing information.</li>
<li><strong>Knowledge bookmarking &amp; summarization</strong>: Quickly summarizes articles, extracts key information, and saves useful insights for later reference.</li>
<li><strong>Chat with any website</strong>: Ask questions, generate summaries, fill out forms, etc.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">🛫 Roadmap</h2><a id="user-content--roadmap" aria-label="Permalink: 🛫 Roadmap" href="#-roadmap"></a></p>
<p dir="auto">Please refer to <a href="https://github.com/parsaghaffari/browserbee/blob/main/ROADMAP.md">ROADMAP.md</a> for an up to date list of features we're aiming to add to BrowserBee.</p>
<ul dir="auto">
<li>Support for saving and replaying sessions (macros)</li>
<li>Ability to memorize key information as needed (in your local Chrome instance using <a href="https://developer.chrome.com/docs/devtools/storage/indexeddb" rel="nofollow">IndexedDB</a>)</li>
<li>Scheduled task execution (e.g. check news and social media every morning)</li>
</ul>
<p dir="auto">If you're interested in contributing to build any of these features or to improve BrowserBee in any way, please head over to <a href="https://github.com/parsaghaffari/browserbee/blob/main/CONTRIBUTING.md">CONTRIBUTING.md</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto"><g-emoji alias="arrow_forward">▶️</g-emoji> Installation</h2><a id="user-content-️-installation" aria-label="Permalink: ▶️ Installation" href="#️-installation"></a></p>
<p dir="auto">You have three options to install BrowserBee:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 1: Download the latest release (Recommended)</h3><a id="user-content-option-1-download-the-latest-release-recommended" aria-label="Permalink: Option 1: Download the latest release (Recommended)" href="#option-1-download-the-latest-release-recommended"></a></p>
<ol dir="auto">
<li>Download the latest release from <a href="https://github.com/parsaghaffari/browserbee/releases/tag/v0.2.0-beta">GitHub Releases</a></li>
<li>Unzip the downloaded file</li>
<li>Load the extension in Chrome:
<ul dir="auto">
<li>Go to <code>chrome://extensions/</code></li>
<li>Enable "Developer mode" (toggle in the top-right corner)</li>
<li>Click "Load unpacked" and select the unzipped directory</li>
<li>Set your LLM API key(s) for Anthropic, OpenAI, Gemini, and/or configure Ollama in the options page that pops up</li>
</ul>
</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 2: Build from source</h3><a id="user-content-option-2-build-from-source" aria-label="Permalink: Option 2: Build from source" href="#option-2-build-from-source"></a></p>
<ol dir="auto">
<li>Clone this repository</li>
<li>Install dependencies with <code>npm install</code> or <code>pnpm install</code> (this takes ~3 minutes)</li>
<li>Build the extension with <code>npm run build</code> or <code>pnpm build</code></li>
<li>Load the extension in Chrome:
<ul dir="auto">
<li>Go to <code>chrome://extensions/</code></li>
<li>Enable "Developer mode"</li>
<li>Click "Load unpacked" and select the <code>dist</code> directory</li>
<li>Set your LLM API key(s) for Anthropic, OpenAI, Gemini, and/or configure Ollama in the options page that pops up</li>
</ul>
</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Option 3: Chrome Web Store (Coming Soon)</h3><a id="user-content-option-3-chrome-web-store-coming-soon" aria-label="Permalink: Option 3: Chrome Web Store (Coming Soon)" href="#option-3-chrome-web-store-coming-soon"></a></p>
<p dir="auto">BrowserBee will soon be available on the Chrome Web Store, pending review. Once approved, you'll be able to install it directly from the store with a single click.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">🏃‍♂️ Usage</h2><a id="user-content-️-usage" aria-label="Permalink: 🏃‍♂️ Usage" href="#️-usage"></a></p>
<ol dir="auto">
<li>Click the BrowserBee icon in your Chrome toolbar, or press <em>Alt+Shift+B</em>, to open the side panel</li>
<li>Type your instruction (e.g., <em>"Go to Google, search for Cicero, and click the first result"</em>)</li>
<li>Hit Enter and watch BrowserBee go to work 🐝</li>
</ol>
<p dir="auto"><strong>Note:</strong></p>
<ol dir="auto">
<li>Since BrowserBee uses Chrome DevTools Protocol (CDP) to attach to tabs, it's best to leave it attached to a base tab that you leave open throughout your session (BrowserBee can open new tabs if needed). If you close the attached tab, use the <a target="_blank" rel="noopener noreferrer" href="https://github.com/parsaghaffari/browserbee/blob/main/reattach-button.png"><img src="https://github.com/parsaghaffari/browserbee/raw/main/reattach-button.png" alt="reattach button"></a> button to reattach to a new tab.</li>
<li>You can have one instance of BrowserBee running per Chrome window and the instances will be working in isolation from one another.</li>
<li>BrowserBee can't attach to tabs without a URL (e.g. a new tab), or with URLs starting with 'chrome://' or 'chrome-extension://'.</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">🫂 Acknowledgements</h2><a id="user-content--acknowledgements" aria-label="Permalink: 🫂 Acknowledgements" href="#-acknowledgements"></a></p>
<p dir="auto">BrowserBee is built using these amazing open source projects:</p>
<ul dir="auto">
<li><a href="https://github.com/cline/cline">Cline</a> enabled us to vibe-code the first version of BrowserBee and inspired me to build a "Cline for the web"</li>
<li><a href="https://github.com/ruifigueira/playwright-crx">playwright-crx</a> by <a href="https://github.com/ruifigueira">@ruifigueira</a> for in-browser use of Playwright</li>
<li><a href="https://github.com/microsoft/playwright-mcp">playwright-mcp</a> for the browser tool implementations</li>
<li><a href="https://daisyui.com/" rel="nofollow">daisyUI</a> 🌼 for the <del>pollen and nectar</del> UI components :)</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">💡 Learnings &amp; what's worth stealing</h2><a id="user-content--learnings--whats-worth-stealing" aria-label="Permalink: 💡 Learnings &amp; what's worth stealing" href="#-learnings--whats-worth-stealing"></a></p>
<ol dir="auto">
<li><strong>Running Playwright in the browser.</strong> Playwright provides a robust and standard interface to LLMs for interacting with modern websites and web apps. Most "browser use" approaches I've come across like <a href="https://github.com/browser-use">Browser Use</a> and <a href="https://github.com/microsoft/playwright-mcp">Playwright MCP</a> are primarily designed for controlling a browser remotely in a backend service-browser fashion which is powerful for enterprise automations, whereas <a href="https://github.com/ruifigueira">@ruifigueira</a> has shown we can neatly wrap Playwright with a browser extension and reduce complexity for end-user use cases.</li>
<li><strong>"Reflect and learn" memory pattern.</strong> Certain setups are rich in feedback for AI agents. This is one of them, where the agent not only has a broad range of tools available to interact with the environment, but also has powerful observation abilities to understand the impact of its actions on the environment. For example, if the agent is tasked with completing a product purchase, where there is a good chance it's able to brute force its way to the end goal by using different tools (such as mouse and keyboard interactions), it can usually tell whether it has succeeded in the task or not by regularly taking screenshots. There is a valuable learning signal here for the agent and by invoking the agent to encode and memorise these learnings we can enhance future performance and increase efficiency on similar tasks, especially for smaller less capable models. In my limited testing, we can sometimes reduce the number of tokens needed (and therefore cost) for a task by 5x or more if we memorize the optimal tool sequence.</li>
<li><strong>Interacting with web pages remains a hard task for LLM-powered agents.</strong> DOMs and screenshots are complex, low-information-density modalities that are slow, expensive, and challenging to process for LLMs. Compare a web page to a piece code for instance: each token in a piece of code carries a lot more information on average than a token in an HTML page or pixels in a screenshot. Therefore we need a combination of cleverly simplified representations as well as cheaper/faster models for this type of product to become fully feasible.</li>
<li><strong>Why use an LLM at all?</strong>. The core value that an LLM agent can provide in this context is in <em>discovering</em> a path or a sequence of actions to accomplish a task which can then be encoded as a set of tool calls, or in fact plain JavaScript (see <a href="https://playwright.dev/docs/codegen" rel="nofollow">Playwright Codegen</a>); once a sequence is already known, it's trivial to follow - no LLM needed.</li>
<li><strong>Privacy-first personal AI tools are the way to go.</strong> There is no doubt that most of us will have some form of an always-on AI servant in the future, and I think the only way we can get there safely is through open source software that interacts transparently with our data and with LLMs. There is a lot of scope for building this type of software, and business models to support it (e.g. offering a hosted version), so I really hope to see and use more robust open source AI assistants.</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">📜 License</h2><a id="user-content--license" aria-label="Permalink: 📜 License" href="#-license"></a></p>
<p dir="auto"><a href="https://github.com/parsaghaffari/browserbee/blob/main/LICENSE">Apache 2.0</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spaced repetition systems have gotten way better (742 pts)]]></title>
            <link>https://domenic.me/fsrs/</link>
            <guid>44020591</guid>
            <pubDate>Sun, 18 May 2025 11:42:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://domenic.me/fsrs/">https://domenic.me/fsrs/</a>, See on <a href="https://news.ycombinator.com/item?id=44020591">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post">
<article itemscope="" itemtype="http://schema.org/BlogPosting">
  

  <div itemprop="articleBody">
<h3 id="spaced-repetition-recap">Spaced repetition recap</h3>
<p>Mastering any subject is built on a foundation of knowledge: knowledge of facts, of heuristics, or of problem-solving tactics. If a subject is part of your full-time job, then you’ll likely master it through repeated exposure to this knowledge. But for something you’re working on part-time—like myself <a href="https://domenic.me/part-time-japanese">learning Japanese</a>—it’s very difficult to get that level of practice.</p>
<p>The same goes for subjects in school: a few hours of class or homework a week is rarely enough to build up an enduring knowledge base, especially in fact-heavy subjects like history or medicine. Even parts of your life that you might not think of as learning-related can be seen through this lens: wouldn’t all those podcasts and Hacker News articles feel more worthwhile, if you retained the information you gathered from them indefinitely?</p>
<p>Spaced repetition systems are one of the most-developed answers to this problem. They’re software programs which essentially display flashcards, with the prompt on the front of the card asking you to recall the information on the back of the card. You can read more about them <a href="https://notes.andymatuschak.org/Spaced_repetition_memory_system">in Andy’s notes</a>, or get a flavor from the images below drawn from my personal collection:</p>
<figure>
  <img src="https://domenic.me/images/fsrs-flashcard-sample-1-front.webp" width="912" height="1839" alt="A flashcard front containing the Japanese word 眼科医">
  <img src="https://domenic.me/images/fsrs-flashcard-sample-1-back.webp" width="912" height="1839" alt="A flashcard back containing the pronunciation of 眼科医, as well as its meaning and an example sentence">
  <img src="https://domenic.me/images/fsrs-flashcard-sample-2-front.webp" width="912" height="1839" alt="A flashcard front containing the prompt &quot;Number of neurons in a typical human brain&quot;">
  <img src="https://domenic.me/images/fsrs-flashcard-sample-2-back.webp" width="912" height="1839" alt="A flashcard back containing the answer &quot;86 billion&quot;">
</figure>
<p>What gives these programs their name is how they space out repeatedly prompting you to review the same card, depending on how you self-grade your response. Increasing intervals after correct answers prevents daily reviews from piling up. This is how you can, for example, learn 10 new second-language words a day (3,650 per year!) with only 20 minutes of daily review time.</p>
<p>(If you’re still unconvinced and have some time to spare, I suggest Michael Nielsen’s post <a href="https://augmentingcognition.com/ltm.html">Augmenting Long-term Memory</a>.)</p>
<h3 id="improving-the-scheduling-algorithm">Improving the scheduling algorithm</h3>
<p>So far, this is all well-known. But what’s less widely known is that a quiet revolution has greatly improved spaced repetition systems over the last couple of years, making them significantly more efficient and less frustrating to use. The magic ingredient is a new scheduling algorithm known as <a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/ABC-of-FSRS">FSRS</a>, by <a href="https://l-m-sherlock.github.io/">Jarrett Ye</a>.</p>
<p>To understand how these systems have improved, first let’s consider how they used to work. Roughly speaking, you’d get shown a card one day after creating it. If you got it right, you’d get shown it again after 6 days. If you get it right a second time, it’d be next scheduled for 15 days later. If you get the card right three times in a row, then it’s 37.5 days later. In general, after the 6-day interval, there’s an exponential backoff, defaulting to 6&nbsp;×&nbsp;2.5<sup>times&nbsp;correct&nbsp;+&nbsp;1</sup>. You can see how, if you keep getting the card right, this can lead to a large knowledge base, with only a small number of reviews per day!</p>
<p>But what if you get it wrong? Then, you’d reset back to day 1! You’d see the card again the next day, then 6 days after that, and so on. (Although missing the card can also adjust its “ease factor”, i.e. the base in the exponential that is by default set to 2.5.) This can be a fairly frustrating experience, as you experience a card ping-ponging between long and short intervals.</p>
<p>If we step back, we realize that this scheduling system (called “SuperMemo-2”) is pretty arbitrary. Where does the rule of 1, 6, 2.5<sup>times&nbsp;correct&nbsp;+&nbsp;1</sup>, reset back on failure come from? It turns out it was <a href="https://super-memory.com/english/ol/sm2.htm">developed by a college student in 1987</a> based on his personal experiments. Can’t we do better?</p>
<p>Recall <a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/Spaced-Repetition-Algorithm:-A-Three%E2%80%90Day-Journey-from-Novice-to-Expert#spaced-repetition">the theory behind spaced repetition</a>: we’re trying to beat the “forgetting curve”, by testing ourselves on the material “just before we were about to forget it”. It seems pretty unlikely that the forgetting curve for every single piece of knowledge is the same: that no matter what I’m learning, I’ll be just about to forget it after 1 day, then 6 more days, then 15, etc. And sure, we can throw in some modifications to the ease factor, but it’s still pretty unlikely that the ideal review schedule is a perfect exponential, even if you let the base vary a bit in response to feedback.</p>
<figure>
  <img src="https://domenic.me/images/fsrs-forgetting-curve.webp" width="1813" height="1019" alt="An illustration of the forgetting curve as a graph, with retention on the y-axis and time on the x-axis. You learn something on day 0, and your retention decays over time according to the forgetting curve, but reviewing it periodically spikes the retention back upward.">
  <figcaption>One of many illustrations of the forgetting curve. This one seems to have originated in <a href="https://www.osmosis.org/learn/Spaced_repetition">a lecture on osmosis.org</a>.</figcaption>
</figure>
<p>The insight of the FSRS algorithm is to concretize our goal (testing “just before we are about to forget”) as a prediction problem: <em>when does the probability of recalling a card drop to 90%?</em>. And this sort of prediction problem is something that machine learning systems excel at.</p>
<h3 id="some-neat-facts-about-how-fsrs-works">Some neat facts about how FSRS works</h3>
<p>The above insight—let’s apply machine learning to find the right intervals, instead of using an arbitrary formula—is the core of FSRS. You don’t really need to know how it works to benefit from it. But here’s a brief explanation of some of the details, since I think they’re cool.</p>
<p>FSRS calls itself a “three-component” model because it uses machine learning to fit curves for three main functions:</p>
<ul>
<li>Difficulty, a per-card number between 1 and 10 roughly representing how difficult the card is</li>
<li>Stability, which is how long a card takes to fall from 100% probability of recall to 90% probability of recall</li>
<li>Retrievability, which is the probability of recall after a given number of days</li>
</ul>
<p>For each card, it computes values for these based on <a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-Algorithm">various formulas</a>. For example, the retrievability curve has been <a href="https://expertium.github.io/Algorithm.html#r-retrievability">tweaked over time</a> from an exponential to a power function, to better fit observed data.</p>
<p>The curve-fitting is done using 21 parameters. These parameters start with values derived to fit the curves from tens of thousands of reviews people have previously done. But the best results are found when you run the FSRS optimizer over your own set of reviews, which will adjust the parameters to fit your personal difficulty/stability/retrievability functions. (This parameter adjustment is where the machine learning comes in: the parameter values <a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-mechanism-of-optimization">are found</a> using techniques you may have heard of, like maximum likelihood estimation and stochastic gradient descent.)</p>
<p>Although the core FSRS algorithm concerns itself with predicting these three functions, as a user what you care about is card scheduling. For that, FSRS lets you pick a desired retention rate, with a default of 90%, and then uses those three functions to calculate the next time you’ll see a card, after you review it and grade yourself.</p>
<p>But if you want, you can change this desired retention rate. And because FSRS has detailed models of how you retain information, with its difficulty/stability/retrievability functions, it can simulate what your workload will be for any given rate. The maintainers <a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-Optimal-Retention">suggest</a> that you set the desired retention to minimize your workload-to-knowledge ratio.</p>
<p>This can have fairly dramatic effects: below we see two simulations for my personal Japanese vocab deck, with the orange line being the default 90% desired retention, and the blue line being the 70% desired retention which FSRS has suggested I use to minimize the workload-to-knowledge ratio. The simulation runs for 365 days, adding 10 new cards per day as long as I have less than 200 reviews. As you can see, the 70% desired retention settings have dramatically fewer reviews per day, in less time, while ending with many more cards memorized (because it doesn’t hit the 200 card limit that caps new cards).</p>
<figure>
  <img src="https://domenic.me/images/fsrs-simulation-reviews.webp" width="751" height="367" alt="A graph with the orange line (90% target retention) quickly reaching 200, occasionally dropping below it for a day or two but always coming back, whereas the blue line (70% target retention) slowly trends up from around 60 at the start to 130 by the end.">
  <figcaption>Reviews per day</figcaption>
</figure>
<figure>
  <img src="https://domenic.me/images/fsrs-simulation-time.webp" width="751" height="367" alt="A graph with the orange line (90% target retention) oscillating around 24 minutes, whereas the blue line (70% target retention) slowly trends up from around 13 minutes at the start to 23 minutes by the end.">
  <figcaption>Time spent per day</figcaption>
</figure>
<figure>
  <img src="https://domenic.me/images/fsrs-simulation-memorized.webp" width="751" height="367" alt="A graph with the orange line (90% target retention) growing in a logarithmic fashion from 1639 cards memorized to 2602 cards memorized, whereas the blue line (70% target retention) trends more linearly from 1639 to 4476.">
  <figcaption>Number of cards memorized</figcaption></figure>

<p>(Note that the 90% number used when calculating the stability function is not the same as desired retention. It’s just used to predict the shape of the forgetting curve. The <a href="https://dl.acm.org/doi/pdf/10.1145/3534678.3539081">original paper</a> used half-life, i.e. how long until the card reaches 50% probability of recall, since that’s more academic.)</p>
<h3 id="fsrs-in-practice">FSRS in practice</h3>
<p>If you want to use FSRS, instead of other <a href="https://github.com/open-spaced-repetition/srs-benchmark/blob/main/README.md#superiority">outperformed</a> algorithms, you have to use software that supports it. Thankfully, the leading spaced repetition software, <a href="https://apps.ankiweb.net/">Anki</a>, has incorporated FSRS as its default scheduling algorithm since version 23.10, released in 2023-11. You might already be using it!</p>
<p>(The <a href="https://l-m-sherlock.notion.site/The-History-of-FSRS-for-Anki-1e6c250163a180a4bfd7fb1fee2a3043">story</a> of how it got into Anki, by the way, is pretty cool. The creator of FSRS, <a href="https://medium.com/@JarrettYe/how-did-i-publish-a-paper-in-acmkdd-as-an-undergraduate-c0199baddf31">an undergrad at the time</a>, posted on the Anki subreddit about his new algorithm. A commenter challenged him to go implement his algorithm in software, instead of just publishing a paper. He first implemented it as an Anki add-on, and its growing popularity eventually convinced the Anki developers to bring it into the core code!)</p>
<p>Subjectively, I’ve found FSRS to be a huge upgrade to my quality of reviews over the previous, SuperMemo-2–derived Anki algorithm. The review load is much lighter. The feeling of despair when missing a card is significantly minimized, since doing so no longer resets you back to day 1. And the better statistical modeling FSRS provides gives me much more confidence that the cards Anki counts me as having learned, are actually sticking in my brain.</p>
<p>For Japanese language learning specifically, the advantages of FSRS are even stronger when you compare them to the “algorithms” used by two popular subscription services. <a href="https://www.wanikani.com/">WaniKani</a>, a kanji/vocab-learning site, and <a href="https://bunpro.jp/">Bunpro</a>, a grammar-learning site, use <em>extremely</em> unfortunate algorithms, even worse than the 1, 6, 2.5<sup>times&nbsp;correct&nbsp;+&nbsp;1</sup> rule from SuperMemo-2. They instead have picked out other interval patterns, seemingly from thin air:</p>
<ul>
<li><a href="https://knowledge.wanikani.com/wanikani/srs-stages/">For WaniKani</a>: 4 hours, 8 hours, 1 day, 2 days, 7 days, 14 days, 1 month, 4 months, never seen again</li>
<li><a href="https://community.bunpro.jp/t/bunpro-faq-frequently-asked-questions/876/1#heading--21">For Bunpro</a>: 4 hours, 8 hours, 1 day, 2 days, 4 days, 8 days, 2 weeks, 1 month, 2 months, 4 months, 6 months, never seen again</li>
</ul>
<p>These intervals don’t change per user or per card: they don’t even have an adjustable difficulty factor like the 2.5 base. And the idea that you’ll literally never see a card again after the last interval is terrifying, as it means you’re constantly losing knowledge.</p>
<p>But these aren’t even the worst part: the worst thing about these sites’ algorithms is that failing a card <em>moves it down one or two steps in the interval ladder</em>, instead of resetting to the first interval like SuperMemo-2, or predicting the best next interval using machine learning like FSRS. This greatly sabotages retention, wastes a lot of user time, and in general transforms these sites into a daily ritual of feeling bad about what you’ve forgotten, instead of feeling good about what you’ve retained. I wrote about this <a href="https://community.bunpro.jp/t/bunpros-bad-srs-algorithm-is-discouraging/90066">on the Bunpro forums</a> when I decided to ragequit about a year ago, in favor of Anki.</p>
<p>Stepping back, my takeaway from this experience is that Anki is king. People complain about how its UI is created by developers instead of designers, or how you have to find or make your own decks instead of using prepackaged ones. These are all fair complaints. But Anki is maintained by people who actually care about learning efficiently. It receives <a href="https://github.com/ankitects/anki/releases">frequent updates</a> that make it better at that goal. And it’s flexible enough to carry you through any stage of your knowledge-acquisition journey. Putting in the time to master it will provide a foundation that lasts you a literal lifetime.</p>
<h3 id="learn-more">Learn more</h3>
<p>If you’d like to learn more about this area, here are some of the links I recommend:</p>
<ul>
<li>Understanding the value of spaced repetition in general:
<ul>
<li><a href="https://augmentingcognition.com/ltm.html">Augmenting Long-term Memory</a> explains how the author uses Anki to “make memory a choice”, across all areas of his life.</li>
<li><a href="https://notes.andymatuschak.org/z2D1qPwddPktBjpNuwYFVva">Spaced repetition memory system</a> in Andy’s notes links to a variety of musings and resources on the subject.</li>
</ul>
</li>
<li>More on the story of spaced repetition
<ul>
<li><a href="https://expertium.github.io/History.html">Abridged history of spaced repetition</a> gives a short overview of how spaced repetition algorithms have evolved over time, mostly to highlight the big gap between SuperMemo-2 and FSRS.</li>
<li><a href="https://medium.com/@JarrettYe/how-did-i-publish-a-paper-in-acmkdd-as-an-undergraduate-c0199baddf31">How did I publish a paper in ACMKDD as an undergraduate?</a> is Jarrett’s first-person explanation of how he got interested in this space and ended up publishing.</li>
<li><a href="https://l-m-sherlock.notion.site/The-History-of-FSRS-for-Anki-1e6c250163a180a4bfd7fb1fee2a3043">The History of FSRS for Anki</a> is Jarrett’s account of how FSRS ended up in Anki, and how its integration has evolved over time.</li>
</ul>
</li>
<li>Details of how FSRS works:
<ul>
<li><a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/Spaced-Repetition-Algorithm:-A-Three%E2%80%90Day-Journey-from-Novice-to-Expert">Spaced repetition algorithm: a three-day journey from novice to expert</a> goes into more detail on the forgetting curve and other models behind creating a good spaced repetition algorithm.</li>
<li><a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-Algorithm">The algorithm</a> gives the full details of the FSRS algorithm, and how it’s changed over time. (It’s best read bottom to top.)</li>
<li><a href="https://expertium.github.io/Algorithm.html">A technical explanation of FSRS</a> is a more-understandable-to-me explanation of the FSRS algorithm.</li>
<li><a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-mechanism-of-optimization">The mechanism of optimization</a> explains the exact training process for the FSRS parameters, in more detail than just “use machine learning”.</li>
<li><a href="https://github.com/open-spaced-repetition/fsrs4anki/wiki/The-Optimal-Retention">The optimal retention</a> discusses the knowledge acquisition vs. workload tradeoff.</li>
<li><a href="https://www.reddit.com/r/Anki/comments/1h9g1n7/clarifications_about_fsrs5_shortterm_memory_and/">Clarifications about FSRS-5, short-term memory and learning steps</a> dives into the extent to which FSRS can be used for short-term cramming, despite its design focused around long-term memory.</li>
<li><a href="https://dl.acm.org/doi/pdf/10.1145/3534678.3539081">A Stochastic Shortest Path Algorithm for Optimizing Spaced Repetition Scheduling</a> is the original paper that kicked this all off. Although the exact algorithm has been updated since then, it has all the usual academic paper goodies like comparison to previous work and pretty figures.</li>
</ul>
</li>
<li><a href="https://github.com/open-spaced-repetition/awesome-fsrs">open-spaced-repetition/awesome-fsrs</a> lists FSRS implementations in many programming languages, as well as flashcard and note-taking software that uses FSRS.</li>
<li><a href="https://github.com/open-spaced-repetition/srs-benchmark">open-spaced-repetition/srs-benchmark</a> benchmarks FSRS against a bunch of other systems, including SuperMemo-2, previous versions of FSRS, the Duolingo algorithm, and more. (Interestingly, the only consistent winner against FSRS is a LSTM neural network, based on OpenAI’s <a href="https://openai.com/index/reptile/">Reptile algorithm</a>. I’d love to learn more about that.)</li>
</ul>
<p><em>Thanks to <a href="https://expertium.github.io/">Expertium</a> who reviewed an earlier draft of this essay for their comments and corrections.</em></p>
<!--
  Removed for now because it's too old. Add back when it gets updated.

  * [Compare Anki's built in scheduler and FSRS](https://github.com/open-spaced-repetition/fsrs4anki/wiki/Compare-Anki's-built-in-scheduler-and-FSRS) gives a more detailed comparison of Anki's previous SuperMemo-2 algorithm with FSRS, taking into account the fact that the user can rate cards on a 1-4 difficulty scale, and that Anki has slightly tweaked its formula from the original SuperMemo-2 one discussed above.
-->

  </div>
</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mexican Navy ship crashes into Brooklyn Bridge leaving two people dead (136 pts)]]></title>
            <link>https://www.theguardian.com/us-news/2025/may/18/mexican-navy-ship-hits-brooklyn-bridge-during-promotional-tour</link>
            <guid>44019386</guid>
            <pubDate>Sun, 18 May 2025 06:23:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/us-news/2025/may/18/mexican-navy-ship-hits-brooklyn-bridge-during-promotional-tour">https://www.theguardian.com/us-news/2025/may/18/mexican-navy-ship-hits-brooklyn-bridge-during-promotional-tour</a>, See on <a href="https://news.ycombinator.com/item?id=44019386">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>Two sailors from the Mexican navy were killed and another 11 critically hurt when a sailing ship taking part in a promotional tour in New York City collided with the iconic <a href="https://www.theguardian.com/us-news/brooklyn" data-link-name="in body link" data-component="auto-linked-tag">Brooklyn</a> Bridge, Mexico’s president Claudia Sheinbaum said.</p><p>The crash happened on Saturday night when the Cuauhtémoc – an academy training vessel with 277 people on board who shares a name with the last Aztec ruler – lost power and struck the bridge. <a href="https://x.com/newsnoteworthy/status/1923928821088108804?s=42" data-link-name="in body link">Eyewitness videos</a> showed dozens of sailors in ceremonial uniforms spread across yardarms shortly before the collision, which snapped the Cuauhtémoc’s three masts.</p><p>In an update <a href="https://x.com/Claudiashein/status/1923970585484267628" data-link-name="in body link">posted to X</a> on Sunday morning, Sheinbaum said: “We are deeply saddened by the loss of two crew members of the training ship Cuauhtémoc, who lost their lives in the unfortunate accident in New York.</p><p>“Our solidarity and support go out to their families. The ministry of the navy, with the support of local authorities, is currently attending to the wounded.”</p><p>A Mexican <a href="https://www.gob.mx/semar/prensa/la-secretaria-de-marina-informa-sobre-los-hechos-ocurridos-con-el-buque-escuela-velero-cuauhtemoc?idiom=es" data-link-name="in body link">government bulletin</a> said 22 crew members were injured, 11 of them critically, with nine in a stable condition. It confirmed that the two who died were navy cadets – and that officials were taking steps to reunite survivors with their families.</p><figure id="37764ae5-dd90-4521-a265-ca9658dda087" data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.ImageBlockElement"><div id="img-1"><picture><source srcset="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=620&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 660px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 660px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=620&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 660px)"><source srcset="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=605&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 480px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 480px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=605&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 480px)"><source srcset="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=445&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 320px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 320px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=445&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 320px)"><img alt="The New York Fire Department confirmed authorities were responding to injuries but had no details about how many people might have been hurt." src="https://i.guim.co.uk/img/media/16ec2375cac0d9937d754dece0e846bb478305a8/0_0_3000_2000/master/3000.jpg?width=445&amp;dpr=1&amp;s=none&amp;crop=none" width="445" height="296.66666666666663" loading="lazy"></picture></div><figcaption data-spacefinder-role="inline"><span><svg width="18" height="13" viewBox="0 0 18 13"><path d="M18 3.5v8l-1.5 1.5h-15l-1.5-1.5v-8l1.5-1.5h3.5l2-2h4l2 2h3.5l1.5 1.5zm-9 7.5c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5z"></path></svg></span><span>Pedestrians walking along Brooklyn Bridge Park look on as a masted Mexican Navy training ship sits stranded near the Manhattan Bridge after colliding with the Brooklyn Bridge, Saturday.</span> Photograph: Nick Corso/AP</figcaption></figure><p>“The navy, aware of the risks naval personnel face in their operations, deeply regrets what happened and reaffirms its commitment to the crew’s families to provide timely attention and follow-up to the investigations into the events that occurred to accurately determine the causes of this incident,” the bulletin said.</p><p>The extent of the damage became apparent at first light on Sunday when images showed the vessel docked on the East River with the tops of two masts splintered – and a third dangling at a 45-degree angle.</p><p>Seven uniformed navy members were spotted boarding the ship, CNN reported.</p><p>Multiple videos of the crash showed the masts snapping and partially collapsing as they crashed into the deck of the bridge. There was heavy traffic on the bridge at the time of the collision.</p><p>The vessel, which was flying a giant green, white and red Mexican flag, then drifted toward the edge of the river as onlookers scrambled away from shore. Nobody was reported injured on the bridge, which was undamaged, said Eric Adams, the mayor of New York City, <a href="https://www.facebook.com/NYCMayor/posts/pfbid02pZzWkEVvQpnebCuW7W7YNrVUaR2dZfNGZEo37FMhJedpvzvEteaaJiamAEKY86m8l?__cft__[0]=AZXo-JFYY3Jt6RxrdPpvEDcZRiOb6MfB5QWjVFaQWOO7IUSJEZ8f8EO6zEGjwOK7Dq4Y_MnAqL2e83DjcB19OhQu-JH7YYqLCgI7Wj1cukYH5Bvf_d5cePfbjb7QD3IhUPL4X6sMEjtD__qUvMYKUf4PIyzZ8jIPx-bmRzUisZeeYw&amp;__tn__=%2CO%2CP-R" data-link-name="in body link">in a Facebook post</a>.</p><p>An earlier statement <a href="https://www.gob.mx/semar/prensa/por-la-exaltacion-del-espiritu-marinero-zarpa-el-buque-escuela-cuauhtemoc-para-iniciar-el-crucero-de-instruccion-consolidacion-de-la-independencia-de-mexico-2025?idiom=es" data-link-name="in body link">posted by the Mexican navy</a> said the Cuauhtémoc would be prevented from continuing its scheduled 254-day voyage. It was taking part in an ongoing celebration of the 200th anniversary of the independence of Mexico – achieved from Spain in 1821 – and was to have visited 22 ports in 15 countries to “carry the message of peace and goodwill of the Mexican people to the seas and ports of the world”.</p><p>It sailed from Acapulco on Mexico’s Pacific coast on 6 April and was due to make stops in a succession of countries around the Caribbean before crossing the Atlantic to Europe, including stopovers in Aberdeen and London.</p><p>Its crew consisted of 64 women and 213 men.</p><div><p>Sydney Neidell and Lily Katz told the Associated Press they were sitting outside to watch the sunset when they saw the vessel strike the bridge and one of its masts snap. </p><p>
 “We saw someone dangling, and I couldn’t tell if it was just blurry or my eyes, and we were able to zoom in on our phone and there was someone dangling from the harness from the top for like at least like 15 minutes before they were able to rescue them,” Katz said.</p><p>
 They said they saw two people removed from the ship on stretchers on to smaller boats.</p></div><p>The Brooklyn Bridge, which opened in 1883, has a nearly 1,600-foot (490 metres) main span that is supported by two masonry towers. More than 100,000 vehicles and an estimated 32,000 pedestrians cross every day, according to the city’s transportation department, and its walkway is a major tourist attraction.</p><p>The Cuauhtémoc – about 297 feet long and 40 feet wide (90.5 metres long and 12 metres wide), according to the Mexican navy – sailed for the first time in 1982. Each year it sets out at the end of classes at the naval military school to finish cadets’ training.</p><ul>
 <li>
  <p><em>The Associated Press contributed to this report</em></p></li>
</ul><figure id="b61b72b4-8ddb-4860-937e-3cb003e4919a" data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.ImageBlockElement"><div id="img-2"><picture><source srcset="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=620&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 660px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 660px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=620&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 660px)"><source srcset="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=605&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 480px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 480px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=605&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 480px)"><source srcset="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=445&amp;dpr=2&amp;s=none&amp;crop=none" media="(min-width: 320px) and (-webkit-min-device-pixel-ratio: 1.25), (min-width: 320px) and (min-resolution: 120dpi)"><source srcset="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=445&amp;dpr=1&amp;s=none&amp;crop=none" media="(min-width: 320px)"><img alt="Multiple people stand in front of a rocky outcrop looking at a damaged vessel." src="https://i.guim.co.uk/img/media/732638f1bf6077766f3cbb1bfd0c6f1f3d979ef6/0_0_3000_2001/master/3000.jpg?width=445&amp;dpr=1&amp;s=none&amp;crop=none" width="445" height="296.815" loading="lazy"></picture></div><figcaption data-spacefinder-role="inline"><span><svg width="18" height="13" viewBox="0 0 18 13"><path d="M18 3.5v8l-1.5 1.5h-15l-1.5-1.5v-8l1.5-1.5h3.5l2-2h4l2 2h3.5l1.5 1.5zm-9 7.5c1.9 0 3.5-1.6 3.5-3.5s-1.6-3.5-3.5-3.5-3.5 1.6-3.5 3.5 1.6 3.5 3.5 3.5z"></path></svg></span><span>Pedestrians walking along Brooklyn Bridge Park look on as the training ship sits stranded near the Manhattan Bridge.</span> Photograph: Yuki Iwamura/AP</figcaption></figure></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Chat with 19 years of HN (129 pts)]]></title>
            <link>https://app.camelai.com/log-in?next=/hn/</link>
            <guid>44018886</guid>
            <pubDate>Sun, 18 May 2025 03:52:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://app.camelai.com/log-in?next=/hn/">https://app.camelai.com/log-in?next=/hn/</a>, See on <a href="https://news.ycombinator.com/item?id=44018886">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> 
            <p><img src="https://app.camelai.com/static/images/qaml-white.3278d3af7046.png" alt="Camel logo">
            </p>
            <h2>Welcome</h2>
            <p>Log in to camelAI to continue to camelAI.</p>
            
            
            
            <div>
                <a href="https://app.camelai.com/google-login?next=/hn/">
                    <img src="https://app.camelai.com/static/images/google-login-logo.fbc9913ca8d6.png" alt="Google logo">
                    <p>Continue with Google</p>
                </a>
            </div>
            
            <div>
                <hr>
                <p><span>OR</span></p><hr>
            </div>
            
            <form method="post" action="/magic-link/request">
                
                
                
                
            </form>
            
            <p>
                By clicking "Continue", you agree to our <a href="https://camelai.com/privacy-policy" target="_blank">privacy policy</a> and <a href="https://camelai.com/terms" target="_blank">terms of service</a>.
            </p>            
        </div></div>]]></description>
        </item>
    </channel>
</rss>