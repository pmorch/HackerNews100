<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 04 Nov 2023 22:00:06 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Bevy 0.12 (187 pts)]]></title>
            <link>https://bevyengine.org/news/bevy-0-12/</link>
            <guid>38144417</guid>
            <pubDate>Sat, 04 Nov 2023 19:39:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bevyengine.org/news/bevy-0-12/">https://bevyengine.org/news/bevy-0-12/</a>, See on <a href="https://news.ycombinator.com/item?id=38144417">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p><img src="https://bevyengine.org/news/bevy-0-12/cover.gif"></p>
    
    
  </div><div><p>Thanks to <strong>185</strong> contributors, <strong>567</strong> pull requests, community reviewers, and our <a href="https://bevyengine.org/community/donate"><strong>generous sponsors</strong></a>, we're happy to announce the <strong>Bevy 0.12</strong> release on <a href="https://crates.io/crates/bevy">crates.io</a>!</p>
<p>For those who don't know, Bevy is a refreshingly simple data-driven game engine built in Rust. You can check out our <a href="https://bevyengine.org/learn/book/getting-started/">Quick Start Guide</a> to try it today. It's free and open source forever! You can grab the full <a href="https://github.com/bevyengine/bevy">source code</a> on GitHub. Check out <a href="https://bevyengine.org/assets">Bevy Assets</a> for a collection of community-developed plugins, games, and learning resources.</p>
<p>To update an existing Bevy App or Plugin to <strong>Bevy 0.12</strong>, check out our <a href="https://bevyengine.org/learn/migration-guides/0.11-0.12/">0.11 to 0.12 Migration Guide</a>.</p>
<p>Since our last release a few months ago we've added a <em>ton</em> of new features, bug fixes, and quality of life tweaks, but here are some of the highlights:</p>
<ul>
<li><strong>Deferred Rendering</strong>: (Optional) support for rendering in a Deferred style, which complements Bevy's existing Forward+ renderer by adding support for new effects and different performance tradeoffs. Bevy is now a "hybrid" renderer, meaning you can use both at the same time!</li>
<li><strong>Bevy Asset V2</strong>: A brand new asset system that adds support for asset preprocessing, asset configuration (via .meta files), multiple asset sources, recursive dependency load tracking, and more!</li>
<li><strong>PCF Shadow Filtering</strong>: Bevy now has smoother shadows thanks to Percentage-Closer Filtering.</li>
<li><strong>StandardMaterial Light Transmission</strong>: Bevy's PBR material now supports light transmission, making it possible to simulate materials like glass, water, plastic, foliage, paper, wax, marble, etc.</li>
<li><strong>Material Extensions</strong>: Materials can now build on other materials. You can now easily write shaders that build on existing materials, such as Bevy's PBR StandardMaterial.</li>
<li><strong>Rusty Shader Imports</strong>: Bevy's granular shader import system now uses Rust-style imports, expanding the capabilities and usability of the import system.</li>
<li><strong>Suspend and Resume on Android</strong>: Bevy now supports suspend and resume events on Android, which was the last big missing piece in our Android story. Bevy now supports Android!</li>
<li><strong>Automatic Batching and Instancing of Draw Commands</strong>: Draw commands are now automatically batched / instanced when possible, yielding significant render performance wins.</li>
<li><strong>Renderer Optimizations</strong>: Bevy's renderer dataflow has been reworked to squeeze out more performance and prepare the way for future GPU-driven rendering.</li>
<li><strong>One Shot Systems</strong>: ECS Systems can now be run on-demand from other systems!</li>
<li><strong>UI Materials</strong>: Add custom material shaders to Bevy UI nodes.</li>
</ul>
<h2 id="deferred-rendering">Deferred Rendering
<a href="#deferred-rendering">#</a>
</h2>

<p>The two most popular "rendering styles" are:</p>
<ul>
<li><strong>Forward Rendering</strong>: do all material/lighting calculations in a single render pass
<ul>
<li><strong>Pros</strong>: Simpler to work with. Works on / performs better on more hardware. Supports MSAA. Handles transparency nicely.</li>
<li><strong>Cons</strong>: Lighting is more expensive / fewer lights supported in a scene, some rendering effects are impossible (or harder) without a prepass</li>
</ul>
</li>
<li><strong>Deferred Rendering</strong>: do one or more pre-passes that collect relevant information about a scene, then do material/lighting calculations in <em>screen space</em> in a final pass after that.
<ul>
<li><strong>Pros</strong>: Enables some rendering effects that are not possible in forward rendering. This is especially important for GI techniques, cuts down on shading cost by only shading visible fragments, can support more lights in a scene</li>
<li><strong>Cons</strong>: More complicated to work with. Requires doing prepasses, which can be more expensive than an equivalent forward renderer in some situations (although the reverse can also be true), uses more texture bandwidth (which can be prohibitive on some devices), doesn't support MSAA, transparency is harder / less straightforward.</li>
</ul>
</li>
</ul>
<p>Bevy's renderer has historically been a "forward renderer". More specifically, it is a <a href="https://bevyengine.org/news/bevy-0-7/#unlimited-point-lights">Clustered Forward / Forward+</a> renderer, which means we break the view frustum up into clusters and assign lights to those clusters, allowing us to render many more lights than a traditional forward renderer.</p>
<p>However, as Bevy has grown, it has slowly moved into "hybrid renderer" territory. In previous releases, we added a <a href="https://bevyengine.org/news/bevy-0-10/#depth-and-normal-prepass">Depth and Normal Prepass</a> to enable <a href="https://bevyengine.org/news/bevy-0-11/#temporal-anti-aliasing">TAA</a>, <a href="https://bevyengine.org/news/bevy-0-11/#screen-space-ambient-occlusion">SSAO</a>, and <a href="https://bevyengine.org/news/bevy-0-10/#shadow-mapping-using-prepass-shaders">Alpha Texture Shadow Maps</a>. We also added a Motion Vector Prepass to enable TAA.</p>
<p>In <strong>Bevy 0.12</strong> we added optional support for Deferred Rendering (building on the existing prepass work). Each material can choose whether it will go through the forward or deferred path, and this can be configured per-material-instance. Bevy also has a new <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.DefaultOpaqueRendererMethod.html"><code>DefaultOpaqueRendererMethod</code></a> resource, which configures the global default. This is set to "forward" by default. The global default can be overridden per-material.</p>
<p>Lets break down the components of this deferred render:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/deferred.png" alt="deferred"></p>
<p>When deferred is enabled for the PBR <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.StandardMaterial.html"><code>StandardMaterial</code></a>, the deferred prepass packs PBR information into the Gbuffer, which can be broken up into:</p>
<p><strong>Base Color</strong>
<img src="https://bevyengine.org/news/bevy-0-12/base_color.png" alt="base color"></p>
<p><strong>Depth</strong>
<img src="https://bevyengine.org/news/bevy-0-12/depth.png" alt="depth"></p>
<p><strong>Normals</strong>
<img src="https://bevyengine.org/news/bevy-0-12/normals.png" alt="normals"></p>
<p><strong>Perceptual Roughness</strong>
<img src="https://bevyengine.org/news/bevy-0-12/perceptual_roughness.png" alt="perceptual roughness"></p>
<p><strong>Metallic</strong>
<img src="https://bevyengine.org/news/bevy-0-12/metallic.png" alt="metallic"></p>
<p>The deferred prepass also produces a "deferred lighting pass ID" texture, which determines what lighting shader to run for the fragment:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/deferred_pass2.png" alt="lighting pass ID texture"></p>
<p>These are passed into the final deferred lighting shader.</p>
<p>Note that the cube in front of the flight helmet model and the ground plane are using forward rendering, which is why they are black in both of the deferred lighting textures above. This illustrates that you can use both forward and deferred materials in the same scene!</p>
<p>Note that for most use cases, we recommend using forward by default, unless a feature explicitly needs deferred or your rendering conditions benefit from deferred style. Forward has the fewest surprises and will work better on more devices.</p>
<h2 id="pcf-shadow-filtering">PCF Shadow Filtering
<a href="#pcf-shadow-filtering">#</a>
</h2>
<p>authors: @superdump (Rob Swain), @JMS55</p>
<p>Shadow aliasing is a very common problem in 3D apps:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/no_pcf.png" alt="no pcf"></p>
<p>Those "jagged lines" in the shadow are the result of the shadow map being "too small" to accurately represent the shadow from this perspective. The shadow map above is stored in a 512x512 texture, which is a lower resolution than most people will use for most of their shadows. This was selected to show a "bad" case of jaggies. Note that Bevy defaults to 2048x2048 shadowmaps.</p>
<p>One "solution" is to bump up the resolution. Here is what it looks like with a 4096x4096 shadow map.</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/no_pcf_high.png" alt="no pcf high resolution"></p>
<p>Looking better! However this still isn't a perfect solution. Large shadowmaps aren't feasible on all hardware. They are significantly more expensive. And even if you can afford super high resolution shadows, you can still encounter this issue if you place an object in the wrong place, or point your light in the wrong direction. You can use Bevy's <a href="https://bevyengine.org/news/bevy-0-10/#cascaded-shadow-maps">Cascaded Shadow Maps</a> (which are enabled by default) to cover a larger area, with higher detail close to the camera and less detail farther away. However even under these conditions, you will still probably encounter these aliasing issues.</p>
<p><strong>Bevy 0.12</strong> introduces <strong>PCF Shadow Filtering</strong> (Percentage-Closer Filtering), which is a popular technique that takes multiple samples from the shadow map and compares with an interpolated mesh surface depth-projected into the frame of reference of the light. It then calculates the percentage of samples in the depth buffer that are closer to the light than the mesh surface. In short, this creates a "blur" effect that improves shadow quality, which is especially evident when a given shadow doesn't have enough "shadow map detail".</p>
<p><strong>Bevy 0.12</strong>'s default PCF approach is the <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/enum.ShadowFilteringMethod.html#variant.Castano13"><code>ShadowMapFilter::Castano13</code></a> method by Ignacio Castaño (used in The Witness). Here it is with a 512x512 shadow map:</p>
<p><b>Drag this image to compare (Castano)</b></p>
<p><img alt="PCF On" src="https://bevyengine.org/news/bevy-0-12/pcf_castano.png">
  <img alt="PCF Off" src="https://bevyengine.org/news/bevy-0-12/no_pcf.png">
</p>
<p>Much better!</p>
<p>We also implemented the <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/enum.ShadowFilteringMethod.html#variant.Jimenez14"><code>ShadowMapFilter::Jimenez14</code></a> method by Jorge Jimenez (used in Call of Duty Advanced Warfare). This can be slightly cheaper than Castano, but it can flicker. It benefits from <a href="https://bevyengine.org/news/bevy-0-11/#temporal-anti-aliasing">Temporal Anti-Aliasing (TAA)</a> which can reduce the flickering. It can also blend shadow cascades a bit more smoothly than Castano.</p>
<p><b>Drag this image to compare (Jimenez)</b></p>
<p><img alt="PCF On" src="https://bevyengine.org/news/bevy-0-12/pcf_jimenez.png">
  <img alt="PCF Off" src="https://bevyengine.org/news/bevy-0-12/no_pcf.png">
</p>
<h2 id="standardmaterial-light-transmission"><code>StandardMaterial</code> Light Transmission
<a href="#standardmaterial-light-transmission">#</a>
</h2>
<p>author: Marco Buono (@coreh)</p>
<p>The <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.StandardMaterial.html"><code>StandardMaterial</code></a> now supports a number of light transmission-related properties:</p>
<ul>
<li><code>specular_transmission</code></li>
<li><code>diffuse_transmission</code></li>
<li><code>thickness</code></li>
<li><code>ior</code></li>
<li><code>attenuation_color</code></li>
<li><code>attenuation_distance</code></li>
</ul>
<p>These allow you to more realistically represent a wide variety of physical materials, including <strong>clear and frosted glass, water, plastic, foliage, paper, wax, marble, porcelain and more</strong>.</p>
<p>Diffuse transmission is an inexpensive addition to the PBR lighting model, while specular transmission is a somewhat more resource-intensive screen-space effect, that can accurately model refraction and blur effects.</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/transmission.jpg" alt="transmission"></p>
<p>
    Different light transmission properties and their interactions with existing PBR properties.
</p>
<p>To complement the new transmission properties, a new <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.TransmittedShadowReceiver.html"><code>TransmittedShadowReceiver</code></a> component has been introduced, which can be added to entities with diffuse transmissive materials to receive shadows cast from the opposite side of the mesh. This is most useful for rendering thin, two-sided translucent objects like tree leaves or paper.</p>
<p>Additionally, two extra fields have been added to the <a href="https://docs.rs/bevy/0.12.0/bevy/core_pipeline/core_3d/struct.Camera3d.html"><code>Camera3d</code></a> component: <code>screen_space_specular_transmission_quality</code> and <code>screen_space_specular_transmission_steps</code>. These are used to control the quality of the screen-space specular transmission effect (number of taps), and how many “layers of transparency” are supported when multiple transmissive objects are in front of each other.</p>
<blockquote>
<p><strong>Important:</strong> Each additional “layer of transparency” incurs in a texture copy behind the scenes, adding to the bandwidth cost, so it's recommended to keep this value as low as possible.</p>
</blockquote>
<p>Finally, importer support for the following glTF extensions has been added:</p>
<ul>
<li><code>KHR_materials_transmission</code></li>
<li><code>KHR_materials_ior</code></li>
<li><code>KHR_materials_volume</code></li>
</ul>
<p><a href="https://www.youtube.com/watch?v=t1XdxZKZ-us">Check out this video</a> to see it in action!</p>
<h3 id="compatibility">Compatibility
<a href="#compatibility">#</a>
</h3>
<p>Both specular and diffuse transmission are compatible with all supported platforms, including mobile and Web.</p>
<p>The optional <code>pbr_transmission_textures</code> Cargo feature allows using textures to modulate the <code>specular_transmission</code>, <code>diffuse_transmission</code> and <code>thickness</code> properties. It's disabled by default in order to reduce the number of texture bindings used by the standard material. (These are
severely constrained on lower-end platforms and older GPUs!)</p>
<p><a href="https://docs.rs/bevy/0.12.0/bevy/core_pipeline/prepass/struct.DepthPrepass.html"><code>DepthPrepass</code></a> and TAA can greatly improve the quality of the screen-space specular transmission effect, and are recommended to be used with it, on the platforms where they are supported.</p>
<h3 id="implementation-details">Implementation Details
<a href="#implementation-details">#</a>
</h3>
<p>Specular transmission is implemented via a new <code>Transmissive3d</code> screen space refraction phase, which joins the existing <code>Opaque3d</code>, <code>AlphaMask3d</code> and <code>Transparent3d</code> phases. During this phase, one or more snapshots of the main texture are taken, which are used as “backgrounds” for the refraction effects.</p>
<p>Each fragment's surface normal and IOR used along with the view direction to calculate a refracted ray. (Via Snell's law.)
This ray is then propagated through the mesh's volume (by a distance controlled by the <code>thickness</code> property), producing an exit point.
The “background” texture is then sampled at that point. Perceptual roughness is used along with interleaved gradient noise and multiple spiral taps, to produce a blur effect.</p>
<p>Diffuse transmission is implemented via a second, reversed and displaced fully-diffuse Lambertian lobe, which is added to the existing PBR lighting calculations. This is a simple and relatively cheap approximation, but works reasonably well.</p>
<h2 id="bevy-asset-v2">Bevy Asset V2
<a href="#bevy-asset-v2">#</a>
</h2>
<p>authors: @cart</p>
<p>Asset pipelines are a central part of the gamedev process. Bevy's old asset system was suitable for some classes of app, but it had a number of limitations that prevented it from serving the needs of other classes, especially higher end 3D apps.</p>
<p>Bevy Asset V2 is a completely new asset system that learns from the best parts of Bevy Asset V1 while adding support for a number of important scenarios: <strong>Asset Importing/Preprocessing</strong>, <strong>Asset Meta Files</strong>, <strong>Multiple Asset Sources</strong>, <strong>Recursive Asset Dependency Load Events</strong>, <strong>Async Asset I/O</strong>, <strong>Faster and More Featureful Asset Handles</strong>, and more!</p>
<p>Most existing user-facing asset code will either require no changes at all, or minimal changes. Custom <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> or <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/trait.AssetReader.html"><code>AssetReader</code></a> code will need to change slightly, but generally the changes should be very minimal. Bevy Asset V2 (despite being a completely new implementation) largely just expands what Bevy is capable of.</p>
<h3 id="asset-preprocessing">Asset Preprocessing
<a href="#asset-preprocessing">#</a>
</h3>
<p><img src="https://bevyengine.org/news/bevy-0-12/image_process.png" alt="image process diagram"></p>
<p>Asset preprocessing is the ability to take an input asset of a given type, process it in some way (generally during development time), and then use the result as the final asset in your application. Think of it as an "asset compiler".</p>
<p>This enables a number of scenarios:</p>
<ul>
<li><strong>Reduce Work In Released Apps</strong>: Many assets aren't <em>composed</em> in their ideal form for release. Scenes might be defined in a human-readable text format that is slower to load. Images might be defined in formats that require more work to decode and upload to the GPU, or take up more space on the GPU when compared to GPU-friendly formats (ex: PNG images vs Basis Universal). Preprocessing enables developers to convert to release-optimal formats ahead of time, making apps start up faster, take up fewer resources, and perform better. It also enables moving computation work that <em>would</em> have been done at runtime to development time. For example, generating mipmaps for images.</li>
<li><strong>Compression</strong>: Minimize the disk space and/or bandwidth that an asset takes up in deployed apps</li>
<li><strong>Transformation</strong>: Some "asset source files" aren't in the right format by default. You can have an asset of type <code>A</code> and transform it into type <code>B</code>.</li>
</ul>
<p>If you are building an app that tests the limits of your hardware with optimal formats ... or you just want to cut down on startup / loading times, asset preprocessing is for you.</p>
<p>For an in-depth technical breakdown of the implementation we chose, check out the <a href="https://github.com/bevyengine/bevy/pull/8624">Bevy Asset V2 pull request</a>.</p>
<h3 id="enabling-pre-processing">Enabling Pre-Processing
<a href="#enabling-pre-processing">#</a>
</h3>
<p>To enable asset pre-processing, just configure your <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPlugin.html"><code>AssetPlugin</code></a> like this:</p>
<pre data-lang="rust"><code data-lang="rust"><span>app<span>.</span><span>add_plugins</span><span><span>(</span>DefaultPlugins<span>.</span><span>set</span><span><span>(</span>
    AssetPlugin <span><span>{</span>
        mode<span>:</span> <span>AssetMode<span>::</span></span>Processed<span>,</span>
        <span>..</span><span>default</span><span><span>(</span></span><span><span>)</span></span>
    </span><span><span>}</span></span>
</span><span><span>)</span></span></span><span><span>)</span></span>
</span></code></pre>
<p>This will configure the asset system to look for assets in the <code>imported_assets</code> folder instead of the <code>assets</code> "source folder". During development, enable the <code>asset_processor</code> cargo feature flag like this:</p>
<pre data-lang="sh"><code data-lang="sh"><span><span><span>cargo</span></span><span> run<span><span> --</span>features</span> bevy/asset_processor</span>
</span></code></pre>
<p>This will start the <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.AssetProcessor.html"><code>AssetProcessor</code></a> in parallel with your app. It will run until all assets are read from their source (defaults to the <code>assets</code> folder), processed, and the results have been written to their destination (defaults to the <code>imported_assets</code> folder). This pairs with asset hot-reloading. If you make a change, this will be detected by the <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.AssetProcessor.html"><code>AssetProcessor</code></a>, the asset will be reprocessed, and the result will be hot-reloaded in your app.</p>
<h3 id="should-you-enable-pre-processing-today">Should You Enable Pre-Processing Today?
<a href="#should-you-enable-pre-processing-today">#</a>
</h3>
<p>In future Bevy releases we will recommended enabling processing for the majority of apps. We don't <em>yet</em> recommend it for most use cases for a few reasons:</p>
<ol>
<li>Most of our built-in assets don't have processors implemented for them yet. The <a href="https://docs.rs/bevy/0.12.0/bevy/render/texture/struct.CompressedImageSaver.html"><code>CompressedImageSaver</code></a> is the only built-in processor and it has a bare-minimum set of features.</li>
<li>We have not implemented "asset migrations" yet. Whenever an asset changes its settings format (which is used in meta files), we need to be able to automatically migrate existing asset meta files to the new version.</li>
<li>As people adopt processing, we expect some flux as we respond to feedback.</li>
</ol>
<h3 id="incremental-and-dependency-aware">Incremental and Dependency Aware
<a href="#incremental-and-dependency-aware">#</a>
</h3>
<p><strong>Bevy Asset V2</strong> will only process assets that have changed. To accomplish this, it computes and stores hashes of each asset source file:</p>
<pre data-lang="rust"><code data-lang="rust"><span>hash<span>:</span> <span><span>(</span><span>132</span><span>,</span> <span>61</span><span>,</span> <span>201</span><span>,</span> <span>41</span><span>,</span> <span>85</span><span>,</span> <span>80</span><span>,</span> <span>72</span><span>,</span> <span>189</span><span>,</span> <span>132</span><span>,</span> <span>81</span><span>,</span> <span>252</span><span>,</span> <span>156</span><span>,</span> <span>4</span><span>,</span> <span>227</span><span>,</span> <span>196</span><span>,</span> <span>207</span></span><span><span>)</span></span><span>,</span>
</span></code></pre>
<p>It also tracks the asset dependencies used when processing an asset. If a dependency has changed, the dependant asset will also be re-processed!</p>
<h3 id="transactional-and-reliable">Transactional and Reliable
<a href="#transactional-and-reliable">#</a>
</h3>
<p><strong>Bevy Asset V2</strong> uses write-ahead logging (a technique commonly used by databases) to recover from crashes / forced exists. Whenever possible it avoids full-reprocessing and only reprocesses incomplete transactions.</p>
<p>The <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.AssetProcessor.html"><code>AssetProcessor</code></a> can close (either intentionally or unintentionally) at any point in time and it will pick up right where it left off!</p>
<p>If a Bevy App asks to load an asset that is currently being processed (or re-processed), the load will asynchronously wait until both the processed asset and its meta file have been written. This ensures that a loaded asset file and meta file always "match" for a given load.</p>
<h3 id="asset-meta-files">Asset Meta Files
<a href="#asset-meta-files">#</a>
</h3>
<p>Assets now support (optional) <code>.meta</code> files. This enables configuring things like:</p>
<ul>
<li><strong>The asset "action"</strong>
<ul>
<li>This configures how Bevy's asset system should handle the asset:
<ul>
<li><code>Load</code>: Load the asset without processing</li>
<li><code>Process</code>: Pre-process the asset prior to loading</li>
<li><code>Ignore</code>: Do not process or load the asset</li>
</ul>
</li>
</ul>
</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> settings</strong>
<ul>
<li>You can use meta files to set any <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> you want</li>
<li>Configure loader settings like "how to filter an image", "adjusting the up axis in 3D scenes", etc</li>
</ul>
</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/trait.Process.html"><code>Process</code></a> settings</strong> (if using the <code>Process</code> action)
<ul>
<li>You can use meta files to set any <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/trait.Process.html"><code>Process</code></a> implementation you want</li>
<li>Configure processor settings like "what type of compression to use", "whether or not to generate mipmaps", etc</li>
</ul>
</li>
</ul>
<p>A meta file for an unprocessed image looks like this:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>(</span>
    meta_format_version<span>:</span> <span><span>"</span>1.0<span>"</span></span><span>,</span>
    asset<span>:</span> Load<span><span>(</span>
        loader<span>:</span> <span><span>"</span>bevy_render::texture::image_loader::ImageLoader<span>"</span></span><span>,</span>
        settings<span>:</span> <span><span>(</span>
            format<span>:</span> FromExtension<span>,</span>
            is_srgb<span>:</span> <span>true</span><span>,</span>
            sampler<span>:</span> <span>Default</span><span>,</span>
        </span><span><span>)</span></span><span>,</span>
    </span><span><span>)</span></span><span>,</span>
</span><span><span>)</span></span>
</span></code></pre>
<p>A meta file for an image configured to be processed looks like this:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>(</span>
    meta_format_version<span>:</span> <span><span>"</span>1.0<span>"</span></span><span>,</span>
    asset<span>:</span> Process<span><span>(</span>
        processor<span>:</span> <span><span>"</span>bevy_asset::processor::process::LoadAndSave&lt;bevy_render::texture::image_loader::ImageLoader, bevy_render::texture::compressed_image_saver::CompressedImageSaver&gt;<span>"</span></span><span>,</span>
        settings<span>:</span> <span><span>(</span>
            loader_settings<span>:</span> <span><span>(</span>
                format<span>:</span> FromExtension<span>,</span>
                is_srgb<span>:</span> <span>true</span><span>,</span>
                sampler<span>:</span> <span>Default</span><span>,</span>
            </span><span><span>)</span></span><span>,</span>
            saver_settings<span>:</span> <span><span>(</span></span><span><span>)</span></span><span>,</span>
        </span><span><span>)</span></span><span>,</span>
    </span><span><span>)</span></span><span>,</span>
</span><span><span>)</span></span>
</span></code></pre>
<p>If the asset processor is enabled, meta files will be automatically generated for assets.</p>
<p>The final "output" metadata for the processed image looks like this:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>(</span>
    meta_format_version<span>:</span> <span><span>"</span>1.0<span>"</span></span><span>,</span>
    processed_info<span>:</span> <span>Some</span><span><span>(</span><span><span>(</span>
        hash<span>:</span> <span><span>(</span><span>132</span><span>,</span> <span>61</span><span>,</span> <span>201</span><span>,</span> <span>41</span><span>,</span> <span>85</span><span>,</span> <span>80</span><span>,</span> <span>72</span><span>,</span> <span>189</span><span>,</span> <span>132</span><span>,</span> <span>81</span><span>,</span> <span>252</span><span>,</span> <span>156</span><span>,</span> <span>4</span><span>,</span> <span>227</span><span>,</span> <span>196</span><span>,</span> <span>207</span></span><span><span>)</span></span><span>,</span>
        full_hash<span>:</span> <span><span>(</span><span>81</span><span>,</span> <span>90</span><span>,</span> <span>244</span><span>,</span> <span>190</span><span>,</span> <span>16</span><span>,</span> <span>134</span><span>,</span> <span>202</span><span>,</span> <span>154</span><span>,</span> <span>3</span><span>,</span> <span>211</span><span>,</span> <span>78</span><span>,</span> <span>199</span><span>,</span> <span>216</span><span>,</span> <span>21</span><span>,</span> <span>132</span><span>,</span> <span>216</span></span><span><span>)</span></span><span>,</span>
        process_dependencies<span>:</span> <span><span>[</span><span>]</span></span><span>,</span>
    </span><span><span>)</span></span></span><span><span>)</span></span><span>,</span>
    asset<span>:</span> Load<span><span>(</span>
        loader<span>:</span> <span><span>"</span>bevy_render::texture::image_loader::ImageLoader<span>"</span></span><span>,</span>
        settings<span>:</span> <span><span>(</span>
            format<span>:</span> Format<span><span>(</span>Basis</span><span><span>)</span></span><span>,</span>
            is_srgb<span>:</span> <span>true</span><span>,</span>
            sampler<span>:</span> <span>Default</span><span>,</span>
        </span><span><span>)</span></span><span>,</span>
    </span><span><span>)</span></span><span>,</span>
</span><span><span>)</span></span>
</span></code></pre>
<p>This is what is written to the <code>imported_assets</code> folder.</p>
<p>Note that the <code>Process</code> asset mode has changed to <code>Load</code>. This is because in the released app, we will load the final processed image "normally" like any other image asset. Note that in this case, the input and the output asset <em>both</em> use <a href="https://docs.rs/bevy/0.12.0/bevy/render/texture/struct.ImageLoader.html"><code>ImageLoader</code></a>. However the processed asset <em>can</em> use a different loader if the context demands it. Also note the addition of the <code>processed_info</code> metadata, which is used to determine if an asset needs to be reprocessed.</p>
<p>The final processed asset and metadata files can be viewed and interacted with like any other file. However they are intended to be read-only. Configuration should happen on the <em>source asset</em>, not the <em>final processed asset</em>.</p>
<h3 id="compressedimagesaver"><code>CompressedImageSaver</code>
<a href="#compressedimagesaver">#</a>
</h3>
<p><img src="https://bevyengine.org/news/bevy-0-12/processed_sponza.png" alt="processed sponza"></p>
<p>Sponza scene with textures processed into Basis Universal (with mipmaps) using Bevy Asset V2</p>
<p><strong>Bevy 0.12</strong> ships with a barebones <a href="https://docs.rs/bevy/0.12.0/bevy/render/texture/struct.CompressedImageSaver.html"><code>CompressedImageSaver</code></a> that writes images to <a href="https://github.com/BinomialLLC/basis_universal">Basis Universal</a> (a GPU-friendly image interchange format) and generates <a href="https://en.wikipedia.org/wiki/Mipmap">mipmaps</a>. Mipmaps reduce aliasing artifacts when sampling images from different distances. This fills an important gap, as Bevy previously had no way to generate mipmaps on its own (it relied on external tooling). This can be enabled with the <code>basis-universal</code> cargo feature.</p>
<h3 id="preprocessing-is-optional">Preprocessing is Optional!
<a href="#preprocessing-is-optional">#</a>
</h3>
<p>Despite eventually (<a href="https://bevyengine.org/news/bevy-0-12/#should-you-enable-pre-processing-today">in future Bevy releases</a>) recommending that most people enable asset processing, we also acknowledge that Bevy is used in a variety of applications. Asset processing introduces additional complexity and workflow changes that some people will not want!</p>
<p>This is why Bevy offers two asset modes:</p>
<ul>
<li><a href="https://docs.rs/bevy/0.12.0/bevy/asset/enum.AssetMode.html"><code>AssetMode::Unprocessed</code></a>: Assets will be loaded directly from the asset source folder (defaults to <code>assets</code>) without any preprocessing. They are assumed to be in their "final format". This is the mode/workflow Bevy users are currently used to.</li>
<li><a href="https://docs.rs/bevy/0.12.0/bevy/asset/enum.AssetMode.html"><code>AssetMode::Processed</code></a>: Assets will be pre-processed at development time. They will be read from their source folder (defaults to <code>assets</code>) and then written to their destination folder (defaults to <code>imported_assets</code>).</li>
</ul>
<p>To enable this, Bevy uses a novel approach to assets: the difference between a processed and unprocessed asset is perspective. They both use the same <code>.meta</code> format and they use the same <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> interface.</p>
<p>A <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/trait.Process.html"><code>Process</code></a> implementation can be defined using arbitrary logic, but we heavily encourage using the <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.LoadAndSave.html"><code>LoadAndSave</code></a> <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/trait.Process.html"><code>Process</code></a> implementation. <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.LoadAndSave.html"><code>LoadAndSave</code></a> takes any <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> and passes the results to an <a href="https://docs.rs/bevy/0.12.0/bevy/asset/saver/trait.AssetSaver.html"><code>AssetSaver</code></a>.</p>
<p>That means if you already have an <a href="https://docs.rs/bevy/0.12.0/bevy/render/texture/struct.ImageLoader.html"><code>ImageLoader</code></a>, which loads images, all you need to do is write some <code>ImageSaver</code> which will write the image in some optimized format. This both saves development work and makes it easy to support both processed and unprocessed scenarios.</p>
<h3 id="built-to-run-anywhere">Built To Run Anywhere
<a href="#built-to-run-anywhere">#</a>
</h3>
<p>Unlike many other asset processors in the gamedev space, Bevy Asset V2's <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.AssetProcessor.html"><code>AssetProcessor</code></a> is intentionally architected to run on any platform. It doesn't use platform-limited databases or require the ability/permission to run a networked server. It can be deployed alongside a released app if your application logic requires processing at runtime.</p>
<p>One notable exception: we still need to make a few changes before it can run on the web, but it was built with web support in mind.</p>
<h3 id="recursive-asset-dependency-load-events">Recursive Asset Dependency Load Events
<a href="#recursive-asset-dependency-load-events">#</a>
</h3>
<p>The <a href="https://docs.rs/bevy/0.12.0/bevy/asset/enum.AssetEvent.html"><code>AssetEvent</code></a> enum now has an <a href="https://docs.rs/bevy/0.12.0/bevy/asset/enum.AssetEvent.html"><code>AssetEvent::LoadedWithDependencies</code></a> variant. This is emitted when an <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.Asset.html"><code>Asset</code></a>, its dependencies, and all descendant / recursive dependencies have loaded.</p>
<p>This makes it easy to wait until an <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.Asset.html"><code>Asset</code></a> is "fully loaded" before doing something.</p>
<h3 id="multiple-asset-sources">Multiple Asset Sources
<a href="#multiple-asset-sources">#</a>
</h3>
<p>It is now possible to register more than one <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> (which replaces the old monolithic "asset provider" system).</p>
<p>Loading from the "default" <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> looks exactly like it does in previous Bevy versions:</p>
<pre data-lang="rust"><code data-lang="rust"><span>sprite<span>.</span>texture <span>=</span> assets<span>.</span><span>load</span><span><span>(</span><span><span>"</span>path/to/sprite.png<span>"</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>But in <strong>Bevy 0.12</strong> you can now register named <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> entries. For example you could register a <code>remote</code> <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> that loads assets from an HTTP server:</p>
<pre data-lang="rust"><code data-lang="rust"><span>sprite<span>.</span>texture <span>=</span> assets<span>.</span><span>load</span><span><span>(</span><span><span>"</span>remote://path/to/sprite.png<span>"</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>Features like hot-reloading, meta files, and asset processing are supported across all sources.</p>
<p>You can register a new <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> like this:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> reads assets from the "other" folder, rather than the default "assets" folder
</span>app<span>.</span><span>register_asset_source</span><span><span>(</span>
    <span><span>//</span> This is the "name" of the new source, used in asset paths.
</span>    <span><span>//</span> Ex: "other://path/to/sprite.png"
</span>    <span><span>"</span>other<span>"</span></span><span>,</span>
    <span><span>//</span> This is a repeatable source builder. You can configure readers, writers,
</span>    <span><span>//</span> processed readers, processed writers, asset watchers, etc.
</span>    <span>AssetSource<span>::</span></span>build<span><span>(</span></span><span><span>)</span></span>
        <span>.</span><span>with_reader</span><span><span>(</span><span><span><span>|</span></span></span><span><span><span>|</span></span> </span><span><span>Box</span><span><span>::</span></span>new<span><span>(</span><span>FileAssetReader<span>::</span></span>new<span><span>(</span><span><span>"</span>other<span>"</span></span></span><span><span>)</span></span></span><span><span>)</span></span></span></span><span><span>)</span></span>
    </span><span><span>)</span></span>
)
</span></code></pre>
<h3 id="embedded-assets">Embedded Assets
<a href="#embedded-assets">#</a>
</h3>
<p>One of the features motivating <strong>Multiple Asset Sources</strong> was improving our "embedded-in-binary" asset loading. The old <code>load_internal_asset!</code> approach had a number of issues (see the relevant section in <a href="https://github.com/bevyengine/bevy/pull/9885">this PR</a>).</p>
<p>The old system looked like this:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>pub</span> <span>const</span> <span>MESH_SHADER_HANDLE</span><span>:</span> <span>Handle<span>&lt;</span>Shader<span>&gt;</span></span> <span>=</span> <span>Handle<span>::</span></span>weak_from_u128<span><span>(</span><span>3252377289100772450</span></span><span><span>)</span></span><span>;</span>

<span>load_internal_asset!</span><span><span>(</span>app<span>,</span> <span>MESH_SHADER_HANDLE</span><span>,</span> <span><span>"</span>mesh.wgsl<span>"</span></span><span>,</span> <span>Shader<span>::</span></span>from_wgsl</span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>This required a lot of boilerplate and didn't integrate cleanly with the rest of the asset system. The <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetServer.html"><code>AssetServer</code></a> was not aware of these assets, hot-reloading required a special-cased second <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetServer.html"><code>AssetServer</code></a>, and you couldn't load assets using an <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> (they had to be constructed in memory). Not ideal!</p>
<p>To prove out the <strong>Multiple Asset Sources</strong> implementation, we built a new <code>embedded</code> <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a>, which replaces the old <code>load_interal_asset!</code> system with something that naturally fits into the asset system:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Called in `crates/bevy_pbr/src/render/mesh.rs`
</span><span>embedded_asset!</span><span><span>(</span>app<span>,</span> <span><span>"</span>mesh.wgsl<span>"</span></span></span><span><span>)</span></span><span>;</span>

<span><span>//</span> later in the app
</span><span>let</span> shader<span>:</span> <span>Handle<span>&lt;</span>Shader<span>&gt;</span></span> <span>=</span> asset_server<span>.</span><span>load</span><span><span>(</span><span><span>"</span>embedded://bevy_pbr/render/mesh.wgsl<span>"</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>That is a lot less boilerplate than the old approach!</p>
<p>And because the <code>embedded</code> source is just like any other asset source, it can support hot-reloading cleanly ... unlike the old system. To hot-reload assets embedded in the binary (ex: to get live updates on a shader you have embedded in the binary), just enable the new <code>embedded_watcher</code> cargo feature.</p>
<p>Much better!</p>
<h3 id="extendable">Extendable
<a href="#extendable">#</a>
</h3>
<p>Almost everything in <strong>Bevy Asset V2</strong> can be extended with trait impls:</p>
<ul>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.Asset.html"><code>Asset</code></a></strong>: Define new asset types</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/trait.AssetReader.html"><code>AssetReader</code></a></strong>: Define custom <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> read logic</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/trait.AssetWriter.html"><code>AssetWriter</code></a></strong>: Define custom <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> write logic</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/trait.AssetWatcher.html"><code>AssetWatcher</code></a></strong>: Define custom <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/struct.AssetSource.html"><code>AssetSource</code></a> watching / hot-reloading logic</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a></strong>: Define custom load logic for a given <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.Asset.html"><code>Asset</code></a> type</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/saver/trait.AssetSaver.html"><code>AssetSaver</code></a></strong>: Define custom save logic for a given <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.Asset.html"><code>Asset</code></a> type</li>
<li><strong><a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/trait.Process.html"><code>Process</code></a></strong>: Define fully bespoke processor logic (or use the more opinionated <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.LoadAndSave.html"><code>LoadAndSave</code></a> <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/trait.Process.html"><code>Process</code></a> impl)</li>
</ul>
<h3 id="async-asset-i-o">Async Asset I/O
<a href="#async-asset-i-o">#</a>
</h3>
<p>The new <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/trait.AssetReader.html"><code>AssetReader</code></a> and <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/trait.AssetWriter.html"><code>AssetWriter</code></a> APIs are async! This means naturally async backends (like networked APIs) can directly call <code>await</code> on futures.</p>
<p>The filesystem impls (such as <a href="https://docs.rs/bevy/0.12.0/bevy/asset/io/file/struct.FileAssetReader.html"><code>FileAssetReader</code></a>) offload file IO to a separate thread and the future resolves when the file operation has finished.</p>
<h3 id="improved-hot-reloading-workflow">Improved Hot-Reloading Workflow
<a href="#improved-hot-reloading-workflow">#</a>
</h3>
<p>Previous versions of Bevy required manually enabling asset hot-reloading in your app code (in addition to enabling the <code>filesystem_watcher</code> cargo feature):</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Enabling hot reloading in old versions of Bevy
</span>app<span>.</span><span>add_plugins</span><span><span>(</span>DefaultPlugins<span>.</span><span>set</span><span><span>(</span><span>AssetPlugin<span>::</span></span>default<span><span>(</span></span><span><span>)</span></span><span>.</span><span>watch_for_changes</span><span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span></span><span><span>)</span></span>
</span></code></pre>
<p>This was suboptimal because released versions of apps generally don't want filesystem watching enabled.</p>
<p>In <strong>Bevy 0.12</strong> we've improved this workflow by making the new <code>file_watcher</code> cargo feature enable file watching in your app by default. During development, just run your app with the feature enabled:</p>
<pre data-lang="sh"><code data-lang="sh"><span><span><span>cargo</span></span><span> run<span><span> --</span>features</span> bevy/file_watcher</span>
</span></code></pre>
<p>When releasing, just omit that feature. No code changes required!</p>
<pre data-lang="sh"><code data-lang="sh"><span><span><span>cargo</span></span><span> build<span><span> --</span>release</span></span>
</span></code></pre>
<h3 id="better-asset-handles">Better Asset Handles
<a href="#better-asset-handles">#</a>
</h3>
<p>Asset handles now use a single <a href="https://doc.rust-lang.org/std/sync/struct.Arc.html"><code>Arc</code></a> at their core to manage the lifetime of an asset. This simplifies the internals significantly and also enables us to make more asset information available directly from handles.</p>
<p>Notably, in <strong>Bevy 0.12</strong> we use this to provide direct <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a> access from the <a href="https://docs.rs/bevy/0.12.0/bevy/asset/enum.Handle.html"><code>Handle</code></a>:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Previous version of Bevy
</span><span>let</span> path <span>=</span> asset_server<span>.</span><span>get_handle_path</span><span><span>(</span><span>&amp;</span>handle</span><span><span>)</span></span><span>;</span>

<span><span>//</span> Bevy 0.12
</span><span>let</span> path <span>=</span> handle<span>.</span><span>path</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>Handles now also use a smaller / cheaper-to-look-up <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetIndex.html"><code>AssetIndex</code></a> internally, which uses generational indices to look up assets in dense storage.</p>
<h3 id="true-copy-on-write-asset-paths">True Copy-on-Write Asset Paths
<a href="#true-copy-on-write-asset-paths">#</a>
</h3>
<p>The <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetServer.html"><code>AssetServer</code></a> and <a href="https://docs.rs/bevy/0.12.0/bevy/asset/processor/struct.AssetProcessor.html"><code>AssetProcessor</code></a> do a lot of <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a> cloning (across many threads). In previous versions of Bevy, <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a> was backed by Rust's <a href="https://doc.rust-lang.org/std/borrow/enum.Cow.html"><code>Cow</code></a> type. However in Rust, cloning an "owned" <a href="https://doc.rust-lang.org/std/borrow/enum.Cow.html"><code>Cow</code></a> results in a clone of the internal value. This is <em>not</em> the "clone on write" behavior we want for <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a>. We use <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a> across threads, so we <em>need</em> to start with an "owned" value.</p>
<p>To prevent all of this cloning and re-allocating of strings, we've built our own <a href="https://docs.rs/bevy/0.12.0/bevy/utils/enum.CowArc.html"><code>CowArc</code></a> type, which <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a> uses internally. It has two tricks up its sleeve:</p>
<ol>
<li>The "owned" variant is an <code>Arc&lt;str&gt;</code>, which we can cheaply clone without reallocating the string.</li>
<li>Almost <em>all</em> <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a> values defined in code come from a <code>&amp;'static str</code>. We've created a special <a href="https://docs.rs/bevy/0.12.0/bevy/utils/enum.CowArc.html#variant.Static"><code>CowArc::Static</code></a> variant that retains this static-ness, meaning we do <em>zero</em> allocations even when turning a borrow into an "owned <a href="https://docs.rs/bevy/0.12.0/bevy/asset/struct.AssetPath.html"><code>AssetPath</code></a>".</li>
</ol>
<h2 id="suspend-and-resume-on-android">Suspend and Resume on Android
<a href="#suspend-and-resume-on-android">#</a>
</h2>
<p>authors: @mockersf</p>
<p>On Android, applications no longer crash on suspend. Instead, they are paused, and no systems
will run until the application is resumed.</p>
<p>This resolves the last "big" showstopper for Android apps! Bevy now supports Android!</p>

<p>Background tasks working in other threads, like playing audio, won't be stopped. When the
application will be suspended, a <a href="https://docs.rs/bevy/0.12.0/bevy/window/enum.Lifetime.html"><code>Lifetime</code></a> event <code>ApplicationLifetime::Suspended</code> is sent,
corresponding to the <a href="https://developer.android.com/reference/android/app/Activity#onStop()"><code>onStop()</code></a> callback. You should take care to pause tasks that shouldn't
run in the background, and resume them when receiving the <code>ApplicationLifetime::Resumed</code> event
(corresponding to the <a href="https://developer.android.com/reference/android/app/Activity#onRestart()"><code>onRestart()</code></a> callback).</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span><span>fn</span> </span><span>handle_lifetime_events</span></span><span><span><span>(</span>
    <span>mut</span> <span>lifetime_events</span><span>:</span> <span>EventReader<span>&lt;</span>ApplicationLifetime<span>&gt;</span></span>,
    <span>music_controller</span><span>:</span> <span>Query<span>&lt;</span><span>&amp;</span>AudioSink<span>&gt;</span></span>,
</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>for</span> event <span>in</span> lifetime_events<span>.</span><span>read</span><span><span>(</span></span><span><span>)</span></span> <span><span>{</span>
        <span>match</span> event <span><span>{</span>
            <span><span>//</span> Upon receiving the `Suspended` event, the application has 1 frame before it is paused
</span>            <span><span>//</span> As audio happens in an independent thread, it needs to be stopped
</span>            <span>ApplicationLifetime<span>::</span></span>Suspended <span>=&gt;</span> music_controller<span>.</span><span>single</span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>pause</span><span><span>(</span></span><span><span>)</span></span><span>,</span>
            <span><span>//</span> On `Resumed``, audio can continue playing
</span>            <span>ApplicationLifetime<span>::</span></span>Resumed <span>=&gt;</span> music_controller<span>.</span><span>single</span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>play</span><span><span>(</span></span><span><span>)</span></span><span>,</span>
            <span><span>//</span> `Started` is the only other event for now, more to come in the next Bevy version
</span>            <span>_</span> <span>=&gt;</span> <span><span>(</span></span><span><span>)</span></span><span>,</span>
        </span><span><span>}</span></span>
    </span><span><span>}</span></span>
</span><span><span>}</span></span></span>
</span></code></pre>
<h2 id="material-extensions">Material Extensions
<a href="#material-extensions">#</a>
</h2>
<p>authors: @robtfm</p>
<p>Bevy has a powerful shader import system, allowing modular (and granular) shader code reuse. In previous versions of Bevy, this meant that in theory, you could import Bevy's PBR shader logic and use it in your own shaders. However in practice this was challenging, as you had to re-wire everything up yourself, which required intimate knowledge of the base material. For complicated materials like Bevy's PBR <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.StandardMaterial.html"><code>StandardMaterial</code></a>, this was full of boilerplate, resulted in code duplication, and was prone to errors.</p>
<p>In <strong>Bevy 0.12</strong>, we've built a <strong>Material Extensions</strong> system, which enables defining new materials that build on existing materials:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/material_extension.png" alt="material extension"></p>
<p>This is accomplished via a new <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.ExtendedMaterial.html"><code>ExtendedMaterial</code></a> type:</p>
<pre data-lang="rust"><code data-lang="rust"><span>app<span>.</span><span>add_plugin</span><span><span>(</span>
    <span>MaterialPlugin<span>::</span></span><span><span>&lt;</span><span>ExtendedMaterial<span>&lt;</span>StandardMaterial, QuantizedMaterial<span>&gt;</span></span><span>&gt;</span></span><span><span>::</span></span>default<span><span>(</span></span><span><span>)</span></span>
</span><span><span>)</span></span><span>;</span>

<span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Asset<span>,</span> AsBindGroup<span>,</span> TypePath<span>,</span> Debug<span>,</span> Clone</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>QuantizedMaterial</span> </span><span><span><span>{</span>
    <span><span>//</span> Start at a high binding number to ensure bindings don't conflict
</span>    <span><span>//</span> with the base material
</span>    <span><span>#</span><span>[</span><span>uniform</span><span><span><span>(</span></span></span><span><span>100</span></span><span><span><span>)</span></span></span><span>]</span></span>
    <span>quantize_steps</span><span>:</span> <span>u32</span>,
</span><span><span>}</span></span></span>

<span><span>impl</span> </span><span>MaterialExtension <span>for</span></span><span> <span>QuantizedMaterial</span> </span><span><span><span>{</span>
    <span><span><span>fn</span> </span><span>fragment_shader</span></span><span><span><span>(</span></span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> ShaderRef</span> </span><span><span><span>{</span>
        <span><span>"</span>quantized_material.wgsl<span>"</span></span><span>.</span><span>into</span><span><span>(</span></span><span><span>)</span></span>
    </span><span><span>}</span></span></span>
</span><span><span>}</span></span></span>

<span>let</span> material <span>=</span> <span>ExtendedMaterial<span>&lt;</span>StandardMaterial, QuantizedMaterial<span>&gt;</span></span> <span><span>{</span>
    base<span>:</span> <span>StandardMaterial<span>::</span></span>from<span><span>(</span><span>Color<span>::</span></span>rgb<span><span>(</span><span>0.</span><span>1</span><span>,</span> <span>0.</span><span>1</span><span>,</span> <span>0.</span><span>8</span></span><span><span>)</span></span></span><span><span>)</span></span><span>,</span>
    extension<span>:</span> QuantizedMaterial <span><span>{</span> quantize_steps<span>:</span> <span>2</span> </span><span><span>}</span></span><span>,</span>
</span><span><span>}</span></span><span>;</span>
</span></code></pre>
<p>We also paired this with some <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/struct.StandardMaterial.html"><code>StandardMaterial</code></a> shader refactors to make it much easier to pick and choose which parts you want:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> quantized_material.wgsl
</span>
<span><span>struct</span> </span><span><span>QuantizedMaterial</span> </span><span><span><span>{</span>
    <span>quantize_steps</span><span>:</span> <span>u32</span>,
</span><span><span>}</span></span></span>

<span>@</span><span>group</span><span><span>(</span><span>1</span></span><span><span>)</span></span> <span>@</span><span>binding</span><span><span>(</span><span>100</span></span><span><span>)</span></span>
<span>var<span>&lt;</span>uniform<span>&gt;</span></span> my_extended_material<span>:</span> QuantizedMaterial<span>;</span>

<span>@</span>fragment
<span><span><span>fn</span> </span><span>fragment</span></span><span><span><span>(</span>
    <span>input</span><span>:</span> VertexOutput,
    @builtin<span><span>(</span></span><span><span>front_facing</span></span><span><span>)</span></span> <span>is_front</span><span>:</span> <span>bool</span>,
</span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> FragmentOutput</span> </span><span><span><span>{</span>
    <span><span>//</span> Generate a PbrInput struct from the StandardMaterial bindings
</span>    var pbr_input <span>=</span> <span>pbr_input_from_standard_material</span><span><span>(</span>input<span>,</span> is_front</span><span><span>)</span></span><span>;</span>

    <span><span>//</span> Alpha discard
</span>    pbr_input<span>.</span>material<span>.</span>base_color <span>=</span> <span>alpha_discard</span><span><span>(</span>
        pbr_input<span>.</span>material<span>,</span>
        pbr_input<span>.</span>material<span>.</span>base_color
    </span><span><span>)</span></span><span>;</span>

    var out<span>:</span> FragmentOutput<span>;</span>

    <span><span>//</span> Apply lighting
</span>    out<span>.</span>color <span>=</span> <span>apply_pbr_lighting</span><span><span>(</span>pbr_input</span><span><span>)</span></span><span>;</span>

    <span><span>//</span> Our "quantize" effect
</span>    out<span>.</span>color <span>=</span> <span>vec4<span>&lt;</span><span>f32</span><span>&gt;</span></span><span><span>(</span><span>vec4<span>&lt;</span><span>u32</span><span>&gt;</span></span><span><span>(</span>out<span>.</span>color <span>*</span> <span>f32</span><span><span>(</span>my_extended_material<span>.</span>quantize_steps</span><span><span>)</span></span></span><span><span>)</span></span></span><span><span>)</span></span> <span>/</span> <span>f32</span><span><span>(</span>my_extended_material<span>.</span>quantize_steps</span><span><span>)</span></span><span>;</span>

    <span><span>//</span> Apply in-shader post processing.
</span>    <span><span>//</span> Ex: fog, alpha-premultiply, etc. For non-hdr cameras: tonemapping and debanding
</span>    out<span>.</span>color <span>=</span> <span>main_pass_post_lighting_processing</span><span><span>(</span>pbr_input<span>,</span> out<span>.</span>color</span><span><span>)</span></span><span>;</span>

    <span>return</span> out<span>;</span>
</span><span><span>}</span></span></span>
</span></code></pre>
<p>This <em>vastly</em> simplifies writing custom PBR materials, making it accessible to pretty much everyone!</p>
<h2 id="automatic-batching-and-instancing-of-draw-commands">Automatic Batching and Instancing of Draw Commands
<a href="#automatic-batching-and-instancing-of-draw-commands">#</a>
</h2>
<p>authors: @superdump (Rob Swain)</p>
<p><strong>Bevy 0.12</strong> now automatically batches/instances draw commands where possible. This cuts down the number of draw calls, which yields significant performance wins!</p>
<p>This required a number of architectural changes, including how we store and access per-entity mesh data (more on this later).</p>
<p>Here are some benches of the old unbatched approach (0.11) to the new batched approach (0.12):</p>
<h3 id="2d-mesh-bevymark-frames-per-second-more-is-better">2D Mesh Bevymark (frames per second, more is better)
<a href="#2d-mesh-bevymark-frames-per-second-more-is-better">#</a>
</h3>
<p>This renders 160,000 entities with textured quad meshes (160 groups of 1,000 entities each, each group sharing a material). This means we can batch each group, resulting in only 160 instanced draw calls when batching is enabled.</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/0.12-2DMeshes.svg" alt="0.12-2DMeshes"></p>
<p>Tested on an M1 Max, limiting the BatchedUniformBuffer batch size to 1 versus how it works in 0.12.</p>
<h3 id="3d-mesh-many-cubes-frames-per-second-more-is-better">3D Mesh "Many Cubes" (frames per second, more is better)
<a href="#3d-mesh-many-cubes-frames-per-second-more-is-better">#</a>
</h3>
<p>This renders 160,000 cubes, of which ~11,700 are visible in the view. These are drawn using a single instanced draw of all visible cubes which enables up to <strong>100% increase in frame rate (2x)</strong>!</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/0.12-3DMeshes.svg" alt="0.12-3DMeshes"></p>
<p>Tested on an M1 Max, limiting the BatchedUniformBuffer batch size to 1 versus how it works in 0.12.</p>
<p>These performance benefits can be leveraged on all platforms, including WebGL2!</p>
<h3 id="what-can-be-batched">What can be batched?
<a href="#what-can-be-batched">#</a>
</h3>
<p>Batching/Instancing can only happen for GPU data that doesn't require "rebinding" (binding is making data available to shaders / pipelines, which incurs a runtime cost). This means if something like a pipeline (shaders), bind group (shader-accessible bound data), vertex / index buffer (mesh) is different, it cannot be batched.</p>
<p>From a high level, currently entities with the same material and mesh can be batched.</p>
<p>We are investigating ways to make more data accessible without rebinds, such as bindless textures, combining meshes into larger buffers, etc.</p>
<h3 id="opting-out">Opting Out
<a href="#opting-out">#</a>
</h3>
<p>If you would like to opt out an entity from automatic batching, you can add the new <a href="https://docs.rs/bevy/0.12.0/bevy/render/batching/struct.NoAutomaticBatching.html"><code>NoAutomaticBatching</code></a> component to it.</p>
<p>This is generally for cases where you are doing custom, non-standard renderer features that don't play nicely with batching's assumptions. For example, it assumes view bindings are constant across draws and that Bevy's-built-in entity batching logic is used.</p>
<h2 id="the-road-to-gpu-driven-rendering">The Road to GPU-driven Rendering
<a href="#the-road-to-gpu-driven-rendering">#</a>
</h2>
<p>authors: @superdump (Rob Swain), @james-j-obrien, @JMS55, @inodentry, @robtfm, @nicopap, @teoxoy, @IceSentry, @Elabajaba</p>
<p>Bevy's renderer performance for 2D and 3D meshes can improve a lot. There are bottlenecks on both the CPU and GPU side, which can be lessened to give significantly higher frame rates. As always with Bevy, we want to make the most of the platforms you use, from the constraints of WebGL2 and mobile devices, to the highest-end native discrete graphics cards. A solid foundation can support all of this.</p>
<p>In <strong>Bevy 0.12</strong> we have started reworking rendering data structures, data flow, and draw patterns to unlock new optimizations. This enabled the <strong>Automatic Batching and Instancing</strong> we landed in <strong>Bevy 0.12</strong> and also helps pave the way for other significant wins in the future, such as GPU-driven rendering. We aren't quite ready for GPU-driven rendering, but we've started down that path in <strong>Bevy 0.12</strong>!</p>
<h3 id="what-are-cpu-and-gpu-driven-rendering">What are CPU and GPU-driven rendering?
<a href="#what-are-cpu-and-gpu-driven-rendering">#</a>
</h3>
<p>CPU-driven rendering is where draw commands are created on the CPU. In Bevy this means "in Rust code", more specifically in render graph nodes. This is how Bevy currently kicks off draws.</p>
<p>In GPU-driven rendering, the draw commands are encoded on the GPU by <a href="https://www.khronos.org/opengl/wiki/Compute_Shader">compute shaders</a>. This leverages GPU parallelism, and unlocks more advanced culling optimizations that are infeasible to do on the CPU, among many other methods that bring large performance benefits.</p>
<h3 id="what-needs-to-change">What needs to change?
<a href="#what-needs-to-change">#</a>
</h3>
<p>Historically Bevy's general GPU data pattern has been to bind each piece of data per-entity and issue a draw call per-entity. In some cases we did store data in uniform buffers in "array style" and accessed with dynamic offsets, but this still resulted in rebinding at each offset.</p>
<p>All of this rebinding has performance implications, both on the CPU and the GPU. On the CPU, it means encoding draw commands has many more steps to process, taking more time than necessary. On the GPU (and in the graphics API), it means many more rebinds and separate draw commands.</p>
<p>Avoiding rebinding is both a big performance benefit for CPU-driven rendering and is necessary to enable GPU-driven rendering.</p>
<p>To avoid rebinds, the general data pattern we are aiming for is:</p>
<ul>
<li>For each data type (meshes, materials, transforms, textures), create a single array (or a small number of arrays) containing all of the items of that data type</li>
<li>Bind these arrays a small number of times (ideally once), avoiding per-entity/per-draw rebinds</li>
</ul>
<p>In <strong>Bevy 0.12</strong> we've started this process in earnest! We've made a number of architectural changes that are already yielding fruit. Thanks to these changes, we can now <a href="https://bevyengine.org/news/bevy-0-12/#automatic-batching-and-instancing-of-draw-commands">automatically batch and instance draws</a> for entities with the exact same mesh and material. And as we progress further down this path, we can batch/instance across a wider variety of cases, cutting out more and more CPU work until eventually we are "fully GPU-driven".</p>
<h3 id="reorder-render-sets">Reorder Render Sets
<a href="#reorder-render-sets">#</a>
</h3>
<p>authors: @superdump (Rob Swain), @james-j-obrien, @inodentry</p>
<p>The order of draws needs to be known for some methods of instanced draws so that the data can be laid out, and looked up in order. For example, when per-instance data is stored in an instance-rate vertex buffer.</p>
<p>The render set order before <strong>Bevy 0.12</strong> caused some problems with this as data had to be prepared (written to the GPU) before knowing the draw order. Not ideal when our plan is to have an ordered list of entity data on the GPU! The previous order of sets was:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/RenderSets-0.11.svg" alt="RenderSets-0.11"></p>
<p>This caused friction (and suboptimal instancing) in a number of current (and planned) renderer features. Most notably in previous versions of Bevy, it caused these problems for sprite batching.</p>
<p>The new render set order in 0.12 is:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/RenderSets-0.12.svg" alt="RenderSets-0.12"></p>
<p><code>PrepareAssets</code> was introduced because we only want to queue entities for drawing if their assets have been prepared. Per-frame data preparation still happens in the <code>Prepare</code> set, specifically in its <code>PrepareResources</code> subset. That is now after <code>Queue</code> and <code>Sort</code>, so the order of draws is known. This also made a lot more sense for batching, as it is now known at the point of batching whether an entity that is of another type in the render phase needs to be drawn. Bind groups now have a clear subset where they should be created ... <code>PrepareBindGroups</code>.</p>
<h3 id="batcheduniformbuffer-and-gpuarraybuffer">BatchedUniformBuffer and GpuArrayBuffer
<a href="#batcheduniformbuffer-and-gpuarraybuffer">#</a>
</h3>
<p>OK, so we need to put many pieces of data of the same type into buffers in a way that we can bind them as few times as possible and draw multiple instances from them. How can we do that?</p>
<p>In previous versions of Bevy, per-instance <code>MeshUniform</code> data is stored in a uniform buffer with each instance's data aligned to a dynamic offset. When drawing each mesh entity, we update the dynamic offset, which can be close in cost to rebinding. It looks like this:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/DynamicUniformBuffer.svg" alt="DynamicUniformBuffer"></p>
<p>Red arrows are 'rebinds' to update the dynamic offset, blue boxes are instance data, orange boxes are padding for dynamic offset alignment, which is a requirement of GPUs and graphics APIs.</p>
<p>Instance-rate vertex buffers are one way, but they are very constrained to having a specific order. They are/may be suitable for per-instance data like mesh entity transforms, but they can't be used for material data. The other main options are uniform buffers, storage buffers, and data textures.</p>
<p>WebGL2 does not support storage buffers, only uniform buffers. Uniform buffers have a minimum guaranteed size per binding of 16kB on WebGL2. Storage buffers, where available, have a minimum guaranteed size of 128MB.</p>
<p>Data textures are far more awkward for structured data. And on platforms that don't support linear data layouts, they will perform worse.</p>
<p>Given these constraints, we want to use storage buffers on platforms where they are supported, and we want to use uniform buffers on platforms where they are not supported (ex: WebGL 2).</p>
<h4 id="batcheduniformbuffer">BatchedUniformBuffer
<a href="#batcheduniformbuffer">#</a>
</h4>
<p>authors: @superdump (Rob Swain), @JMS55, @teoxoy, @robtfm, @konsolas</p>
<p>For uniform buffers, we have to assume that on WebGL2 we may only be able to access 16kB of data at a time. Taking an example, <code>MeshUniform</code> requires 144 bytes per instance, which means we can have a batch of 113 instances per 16kB binding. If we want to draw more than 113 entities in total, we need a way of managing a uniform buffer of data that can be bound at a dynamic offset per batch of instances. This is what <code>BatchedUniformBuffer</code> is designed to solve.</p>
<p><code>BatchedUniformBuffer</code> looks like this:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/BatchedUniformBuffer.svg" alt="BatchedUniformBuffer"></p>
<p>Red arrows are 'rebinds' to update the dynamic offset, blue boxes are instance data, orange boxes are padding for dynamic offset alignment.</p>
<p>Notice how the instance data can be packed much more tightly, fitting the same amount of used data in less space. Also, we only need to update the dynamic offset of the binding for each batch.</p>
<h4 id="gpuarraybuffer">GpuArrayBuffer
<a href="#gpuarraybuffer">#</a>
</h4>
<p>authors: @superdump (Rob Swain), @JMS55, @IceSentry, @mockersf</p>
<p>Given that we need to support both uniform and storage buffers for a given data type, this increases the level of complexity required to implement new low-level renderer features (both in Rust code and in shaders). When confronted with this complexity, some developers might choose instead only use storage buffers (effectively dropping support for WebGL 2).</p>
<p>To make it as easy as possible to support both storage types, we developed <a href="https://docs.rs/bevy/0.12.0/bevy/render/render_resource/enum.GpuArrayBuffer.html"><code>GpuArrayBuffer</code></a>. This is a generic collection of <code>T</code> values that abstracts over <code>BatchedUniformBuffer</code> and <a href="https://docs.rs/bevy/0.12.0/bevy/render/render_resource/struct.StorageBuffer.html"><code>StorageBuffer</code></a>. It will use the right storage for the current platform / GPU.</p>
<p>The data in a <a href="https://docs.rs/bevy/0.12.0/bevy/render/render_resource/struct.StorageBuffer.html"><code>StorageBuffer</code></a> looks like this:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/StorageBuffer.svg" alt="StorageBuffer"></p>
<p>Red arrows are 'rebinds', blue boxes are instance data.</p>
<p>All the instance data can be placed directly one after the other, and we only have to bind once. There is no need for any dynamic offset binding, so there is no need for any padding for alignment.</p>
<p><a href="https://gist.github.com/cart/3a9f190bd5e789a7d42317c28843ffca">Check out this annotated code example</a> that illustrates using <a href="https://docs.rs/bevy/0.12.0/bevy/render/render_resource/enum.GpuArrayBuffer.html"><code>GpuArrayBuffer</code></a> to support both uniform and storage buffer bindings.</p>
<h3 id="2d-3d-mesh-entities-using-gpuarraybuffer">2D / 3D Mesh Entities using GpuArrayBuffer
<a href="#2d-3d-mesh-entities-using-gpuarraybuffer">#</a>
</h3>
<p>authors: @superdump (Rob Swain), @robtfm, @Elabajaba</p>
<p>The 2D and 3D mesh entity rendering was migrated to use <a href="https://docs.rs/bevy/0.12.0/bevy/render/render_resource/enum.GpuArrayBuffer.html"><code>GpuArrayBuffer</code></a> for the mesh uniform data.</p>
<p>Just avoiding the rebinding of the mesh uniform data buffer gives about a 6% increase in frame rates!</p>
<h2 id="entityhashmap-renderer-optimization">EntityHashMap Renderer Optimization
<a href="#entityhashmap-renderer-optimization">#</a>
</h2>
<p>authors: @superdump (Rob Swain), @robtfm, @pcwalton, @jancespivo, @SkiFire13, @nicopap</p>
<p>Since <strong>Bevy 0.6</strong>, Bevy's renderer has extracted data from the "main world" into a separate "render world". This enables <a href="https://bevyengine.org/news/bevy-0-6/#pipelined-rendering-extract-prepare-queue-render">Pipelined Rendering</a>, which renders frame N in the render app, while the main app simulates frame N+1.</p>
<p>Part of the design involves clearing the render world of all entities between frames. This enables consistent Entity mapping between the main and render worlds while still being able to spawn new entities in the render world that don't exist in the main world.</p>
<p>Unfortunately, this ECS usage pattern also incurred some significant performance problems. To get good "linear iteration read performance", we wanted to use "table storage" (Bevy's default ECS storage model). However in the renderer, entities are cleared and respawned each frame, components are inserted across many systems and different parts of the render app schedule. This resulted in a lot of "archetype moves" as new components were inserted from various renderer contexts. When an entity moves to a new archetype, all of its "table storage" components are copied into the new archetype's table. This can be expensive across many archetype moves and/or large table moves.</p>
<p>This was unfortunately leaving a lot of performance on the table. Many ideas were discussed over a long period for how to improve this.</p>
<h3 id="the-path-forward">The Path Forward
<a href="#the-path-forward">#</a>
</h3>
<p>The main two paths forward were:</p>
<ol>
<li>Persist render world entities and their component data across frames</li>
<li>Stop using entity table storage for storing component data in the render world</li>
</ol>
<p>We have decided to explore option (2) for <strong>Bevy 0.12</strong> as persisting entities involves solving other problems that have no simple and satisfactory answers (ex: how do we keep the worlds perfectly in sync without leaking data). We may find those answers eventually, but for now we chose the path of least resistance!</p>
<p>We landed on using <code>HashMap&lt;Entity, T&gt;</code> with an optimized hash function designed by @SkiFire13, and inspired by <a href="https://github.com/rust-lang/rustc-hash"><code>rustc-hash</code></a>. This is exposed as <a href="https://docs.rs/bevy/0.12.0/bevy/utils/type.EntityHashMap.html"><code>EntityHashMap</code></a> and is the new way to store component data in the render world.</p>
<p>This <a href="https://github.com/bevyengine/bevy/pull/9903">yielded significant performance wins</a>.</p>
<h3 id="usage">Usage
<a href="#usage">#</a>
</h3>
<p>The easiest way to use it is to use the new <a href="https://docs.rs/bevy/0.12.0/bevy/render/extract_instances/struct.ExtractInstancesPlugin.html"><code>ExtractInstancesPlugin</code></a>. This wil extract all entities matching a query, or only those that are visible, extracting multiple components at once into one target type.</p>
<p>It is a good idea to group component data that will be accessed together into one target type to avoid having to do multiple lookups.</p>
<p>To extract two components from visible entities:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>struct</span> </span><span><span>MyType</span> </span><span><span><span>{</span>
    <span>a</span><span>:</span> ComponentA,
    <span>b</span><span>:</span> ComponentB,
</span><span><span>}</span></span></span>

<span><span>impl</span> </span><span>ExtractInstance <span>for</span></span><span> <span>MyType</span> </span><span><span><span>{</span>
    <span>type</span> <span>Query</span> <span>=</span> <span><span>(</span><span>Read<span>&lt;</span>ComponentA<span>&gt;</span></span><span>,</span> <span>Read<span>&lt;</span>ComponentB<span>&gt;</span></span></span><span><span>)</span></span><span>;</span>
    <span>type</span> <span>Filter</span> <span>=</span> <span><span>(</span></span><span><span>)</span></span><span>;</span>

    <span><span><span>fn</span> </span><span>extract</span></span><span><span><span>(</span><span><span>(</span></span><span><span>a</span><span>,</span> <span>b</span></span><span><span>)</span></span>: <span>QueryItem<span>&lt;</span>'<span>_</span>, <span><span><span>Self</span><span>::</span></span></span>Query<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> <span><span>Option</span><span>&lt;</span><span>Self</span><span>&gt;</span></span></span> </span><span><span><span>{</span>
        <span>Some</span><span><span>(</span>MyType <span><span>{</span>
          a<span>:</span> a<span>.</span><span>clone</span><span><span>(</span></span><span><span>)</span></span><span>,</span>
          b<span>:</span> b<span>.</span><span>clone</span><span><span>(</span></span><span><span>)</span></span><span>,</span>
        </span><span><span>}</span></span></span><span><span>)</span></span>
    </span><span><span>}</span></span></span>
</span><span><span>}</span></span></span>

app<span>.</span><span>add_plugins</span><span><span>(</span><span>ExtractInstancesPlugin<span>::</span></span><span><span>&lt;</span>MyType<span>&gt;</span></span><span><span>::</span></span>extract_visible<span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<h2 id="sprite-instancing">Sprite Instancing
<a href="#sprite-instancing">#</a>
</h2>
<p>authors: @superdump (Rob Swain)</p>
<p>In previous versions of Bevy, Sprites were rendered by generating a vertex buffer containing 4 vertices per sprite with position, UV, and possibly color data. This has proven to be very effective. However, having to split batches of sprites into multiple draws because they use a different color is suboptimal.</p>
<p>Sprite rendering now uses an instance-rate vertex buffer to store the per-instance data. Instance-rate vertex buffers are stepped when the instance index changes, rather than when the vertex index changes. The new buffer contains an affine transformation matrix that enables translation, scaling, and rotation in one transform. It contains per-instance color, and UV offset and scale.</p>
<p>This retains all the functionality of the previous method, enables the additional flexibility of any sprite being able to have a color tint and all still be drawn in the same batch, and uses a total of 80 bytes per sprite, versus 144 bytes previously.</p>
<p>This resulted in a performance improvement of up to <strong>40%</strong> versus the previous method!</p>
<h2 id="rusty-shader-imports">Rusty Shader Imports
<a href="#rusty-shader-imports">#</a>
</h2>
<p>authors: @robtfm</p>
<p>Bevy shaders now use Rust-like shader imports:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> old
</span><span>#</span>import <span>bevy_pbr<span>::</span></span>forward_io VertexOutput

<span><span>//</span> new
</span><span>#</span>import <span>bevy_pbr<span>::</span></span><span>forward_io<span>::</span></span>VertexOutput
</span></code></pre>
<p>Like Rust imports, you can use curly braces to import multiple items. Multi-level nesting is also now supported!</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> old
</span><span>#</span>import <span>bevy_pbr<span>::</span></span>pbr_functions alpha_discard<span>,</span> apply_pbr_lighting 
<span>#</span>import bevy_pbr                mesh_bindings

<span><span>//</span> new
</span><span>#</span>import <span>bevy_pbr<span>::</span></span><span><span>{</span>
    <span>pbr_functions<span>::</span></span><span><span>{</span>alpha_discard<span>,</span> apply_pbr_lighting</span><span><span>}</span></span><span>,</span> 
    mesh_bindings<span>,</span>
</span><span><span>}</span></span>
</span></code></pre>
<p>Like Rust modules, you can now import partial paths:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>#</span>import <span>part<span>::</span></span><span>of<span>::</span></span>path

<span><span>//</span> later in the shader
</span><span>path<span>::</span></span><span>remainder<span>::</span></span>function<span><span>(</span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>You can also now use fully qualified paths without importing:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>bevy_pbr<span>::</span></span><span>pbr_functions<span>::</span></span>pbr<span><span>(</span></span><span><span>)</span></span>
</span></code></pre>
<p>Rusty Imports remove a number of "API weirdness" gotchas from the old system and expand the capabilities of the import system. And by reusing Rust syntax and semantics, we remove the need for Bevy users to learn a new system.</p>
<h2 id="gltf-emissive-strength">glTF Emissive Strength
<a href="#gltf-emissive-strength">#</a>
</h2>
<p>authors: @JMS55</p>
<p>Bevy now reads and uses the <code>KHR_materials_emissive_strength</code> glTF material extension when loading glTF assets. This adds support for emissive materials when importing glTF from programs like Blender. Each of these cubes has increasing emissive strength:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/gltf_emissive.png" alt="gltf emissive"></p>
<h2 id="import-second-uv-map-in-gltf-files">Import Second UV Map In glTF Files
<a href="#import-second-uv-map-in-gltf-files">#</a>
</h2>
<p>authors: @pcwalton</p>
<p><strong>Bevy 0.12</strong> now imports the second UV map (<code>TEXCOORD1</code> or <code>UV1</code>) if it is defined in glTF files and exposes it to shaders. Conventionally this is often used for lightmap UVs. This was an often requested feature and it unlocks lightmapping scenarios (both in custom user shaders and in future Bevy releases).</p>
<h2 id="wireframe-improvements">Wireframe Improvements
<a href="#wireframe-improvements">#</a>
</h2>
<p>authors: @IceSentry</p>
<p>The wireframes now use Bevy's <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/trait.Material.html"><code>Material</code></a> abstraction. This means it will automatically use the new batching and instancing features while being easier to maintain. This change also made it easier to add support for colored wireframe. You can configure the color globally or per mesh using the <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/wireframe/struct.WireframeColor.html"><code>WireframeColor</code></a> component. It's also now possible to disable wireframe rendering by using the <a href="https://docs.rs/bevy/0.12.0/bevy/pbr/wireframe/struct.NoWireframe.html"><code>NoWireframe</code></a> component.</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/wireframe.png" alt="wireframe"></p>
<h2 id="external-renderer-context">External Renderer Context
<a href="#external-renderer-context">#</a>
</h2>
<p>authors: @awtterpip</p>
<p>Historically Bevy's <a href="https://docs.rs/bevy/0.12.0/bevy/render/struct.RenderPlugin.html"><code>RenderPlugin</code></a> has been fully responsible for initializing the <a href="https://github.com/gfx-rs/wgpu"><code>wgpu</code></a> render context. However some 3rd party Bevy Plugins, such as this work-in-progress <a href="https://github.com/awtterpip/bevy_openxr"><code>bevy_openxr</code></a> plugin, require more control over renderer initialization.</p>
<p>Therefore in <strong>Bevy 0.12</strong>, we've made it possible to pass in the <a href="https://github.com/gfx-rs/wgpu"><code>wgpu</code></a> render context at startup. This means the 3rd party <a href="https://github.com/awtterpip/bevy_openxr/"><code>bevy_openxr</code></a> plugin can be a "normal" Bevy plugin without needing to fork Bevy!</p>
<p>Here is a quick video of Bevy VR, courtesy of <a href="https://github.com/awtterpip/bevy_openxr/"><code>bevy_openxr</code></a>!</p>

<h2 id="bind-group-ergonomics">Bind Group Ergonomics
<a href="#bind-group-ergonomics">#</a>
</h2>
<p>authors: @robtfm, @JMS55</p>
<p>When defining "bind groups" for low-level renderer features, we use the following API api:</p>
<pre data-lang="rust"><code data-lang="rust"><span>render_device<span>.</span><span>create_bind_group</span><span><span>(</span>
    <span><span>"</span>my_bind_group<span>"</span></span><span>,</span>
    <span>&amp;</span>my_layout<span>,</span>
    <span>&amp;</span><span><span>[</span>
        BindGroupEntry <span><span>{</span>
            binding<span>:</span> <span>0</span><span>,</span>
            resource<span>:</span> <span>BindingResource<span>::</span></span>Sampler<span><span>(</span><span>&amp;</span>my_sampler</span><span><span>)</span></span><span>,</span>
        </span><span><span>}</span></span><span>,</span>
        BindGroupEntry <span><span>{</span>
            binding<span>:</span> <span>1</span><span>,</span>
            resource<span>:</span> my_uniform<span>,</span>
        </span><span><span>}</span></span><span>,</span>
    <span>]</span></span><span>,</span>
</span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>This works reasonably well, but for large numbers of bind groups, the <code>BindGroupEntry</code> boilerplate makes it harder than necessary to read and write everything (and keep the indices up to date).</p>
<p><strong>Bevy 0.12</strong> adds additional options:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Sets the indices automatically using the index of the tuple item
</span>render_device<span>.</span><span>create_bind_group</span><span><span>(</span>
    <span><span>"</span>my_bind_group<span>"</span></span><span>,</span>
    <span>&amp;</span>my_layout<span>,</span>
    <span>&amp;</span><span>BindGroupEntries<span>::</span></span>sequential<span><span>(</span><span><span>(</span><span>&amp;</span>my_sampler<span>,</span> my_uniform</span><span><span>)</span></span></span><span><span>)</span></span><span>,</span>
</span><span><span>)</span></span><span>;</span>
</span></code></pre>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Manually sets the indices, but without the BindGroupEntry boilerplate!
</span>render_device<span>.</span><span>create_bind_group</span><span><span>(</span>
    <span><span>"</span>my_bind_group<span>"</span></span><span>,</span>
    <span>&amp;</span>my_layout<span>,</span>
    <span>&amp;</span><span>BindGroupEntries<span>::</span></span>with_indexes<span><span>(</span><span><span>(</span>
        <span><span>(</span><span>2</span><span>,</span> <span>&amp;</span>my_sampler</span><span><span>)</span></span><span>,</span>
        <span><span>(</span><span>3</span><span>,</span> my_uniform</span><span><span>)</span></span><span>,</span>
    </span><span><span>)</span></span></span><span><span>)</span></span><span>,</span>
</span><span><span>)</span></span><span>;</span>
</span></code></pre>
<h2 id="one-shot-systems">One-Shot Systems
<a href="#one-shot-systems">#</a>
</h2>
<p>authors: @alice-i-cecile @pascualex, @Trashtalk217, @Zeenobit</p>
<p>Ordinarily, systems run once per frame, as part of a schedule.
But this isn't always the right fit.
Maybe you're responding to a very rare event like in a complex turn-based game, or simply don't want to clutter your schedule with a new system for every single button.
One-shot systems flip that logic on its head, and provide you the ability to run arbitrary logic on demand, using the powerful and familiar system syntax.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Resource<span>,</span> Default<span>,</span> Debug</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>Counter</span></span><span><span><span>(</span><span>u8</span></span><span>)</span></span><span>;</span>

<span><span><span>fn</span> </span><span>increment</span></span><span><span><span>(</span><span>mut</span> <span>counter</span><span>:</span> <span>ResMut<span>&lt;</span>Counter<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    counter<span>.</span><span>0</span> <span>+=</span> <span>1</span><span>;</span>
    <span>println!</span><span><span>(</span></span><span><span><span>"</span><span>{}</span><span>"</span></span></span><span><span>,</span> counter<span>.</span><span>0</span><span>)</span></span><span>;</span>
</span><span><span>}</span></span></span>

<span><span><span>fn</span> </span><span>foo</span></span><span><span><span>(</span><span>world</span><span>:</span> <span>&amp;</span><span>mut</span> World</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    world<span>.</span><span>init_resource<span>::</span></span><span><span>&lt;</span>Counter<span>&gt;</span></span><span><span>(</span></span><span><span>)</span></span><span>;</span>
    <span>let</span> id <span>=</span> world<span>.</span><span>register_system</span><span><span>(</span>increment</span><span><span>)</span></span><span>;</span>
    <span>let</span> <span>_</span> <span>=</span> world<span>.</span><span>run_system</span><span><span>(</span>id</span><span><span>)</span></span><span>;</span> <span><span>//</span> prints 1
</span>    <span>let</span> <span>_</span> <span>=</span> world<span>.</span><span>run_system</span><span><span>(</span>id</span><span><span>)</span></span><span>;</span> <span><span>//</span> prints 2
</span></span><span><span>}</span></span></span>
</span></code></pre>
<p>There are three simple steps to using one-shot systems: register a system, store its <code>SystemId</code>, and then use either exclusive world access or commands to run the corresponding system.</p>
<p>A lot becomes possible with just that, however <code>SystemId</code>s really start showing their power, when they're wrapped into components.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>use</span> <span>bevy<span>::</span></span><span>ecs<span>::</span></span><span>system<span>::</span></span>SystemId<span>;</span>

<span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Component</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>Callback</span></span><span><span><span>(</span>SystemId</span><span>)</span></span><span>;</span>

<span><span>//</span> calling all callbacks!
</span><span><span><span>fn</span> </span><span>call_all</span></span><span><span><span>(</span><span>query</span><span>:</span> <span>Query<span>&lt;</span><span>&amp;</span>Callback<span>&gt;</span></span>, <span>mut</span> <span>commands</span><span>:</span> Commands</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>for</span> callback <span>in</span> query<span>.</span><span>iter</span><span><span>(</span></span><span><span>)</span></span> <span><span>{</span>
        commands<span>.</span><span>run_system</span><span><span>(</span>callback<span>.</span><span>0</span></span><span><span>)</span></span><span>;</span>
    </span><span><span>}</span></span>
</span><span><span>}</span></span></span>
</span></code></pre>
<p>One-shot systems can then be attached to UI elements, like buttons, actions in an RPG, or any other entity. You might even feel inspired to implement the Bevy scheduling graph with one-shot systems and <a href="https://docs.rs/aery/latest/aery/"><code>aery</code></a> (let us know how that goes, by the way).</p>
<p>One-shot systems are very flexible.
They can be nested, so you can call <code>run_system</code> from within a one-shot system.
It's possible to have multiple instances of one system registered at a time, each with their own <code>Local</code> variables and cached system state.
It also plays nice with asset-driven workflows: recording a mapping from a string to an identifier in a serialized callback is much nicer than trying to do so with Rust functions!</p>
<p>Still, one-shot systems are not without their limitations.
Currently, exclusive systems and systems designed for system piping (with either an <code>In</code> parameter or a return type) can't be used at all.
You also can't call a one-shot systems from itself, recursion isn't possible.
Lastly, one-shot systems are always evaluated sequentially, rather than in parallel.
While this reduces both complexity and overhead, for certain workloads this can be meaningfully slower than using a schedule with a parallel executor.</p>
<p>However, when you're just prototyping or writing a unit test, it can be a real hassle: two whole functions and some weird identifier?
For these situations, you can use the <code>World::run_system_once</code> method.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>use</span> <span>bevy<span>::</span></span><span>ecs<span>::</span></span><span>system<span>::</span></span>RunSystemOnce<span>;</span>

<span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Resource<span>,</span> Default<span>,</span> Debug</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>Counter</span></span><span><span><span>(</span><span>u8</span></span><span>)</span></span><span>;</span>

<span><span><span>fn</span> </span><span>increment</span></span><span><span><span>(</span><span>mut</span> <span>counter</span><span>:</span> <span>ResMut<span>&lt;</span>Counter<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    counter<span>.</span><span>0</span> <span>+=</span> <span>1</span><span>;</span>
    <span>println!</span><span><span>(</span></span><span><span><span>"</span><span>{}</span><span>"</span></span></span><span><span>,</span> counter<span>.</span><span>0</span><span>)</span></span><span>;</span>
</span><span><span>}</span></span></span>

<span>let</span> <span>mut</span> world <span>=</span> <span>World<span>::</span></span>new<span><span>(</span></span><span><span>)</span></span><span>;</span>
world<span>.</span><span>init_resource<span>::</span></span><span><span>&lt;</span>Counter<span>&gt;</span></span><span><span>(</span></span><span><span>)</span></span><span>;</span>
world<span>.</span><span>run_system_once</span><span><span>(</span>increment</span><span><span>)</span></span><span>;</span> <span><span>//</span> prints 1
</span>world<span>.</span><span>run_system_once</span><span><span>(</span>increment</span><span><span>)</span></span><span>;</span> <span><span>//</span> prints 2
</span></span></code></pre>
<p>This is great for unit testing systems and queries, and it's both lower overhead and simpler to use. However, there is one caveat. Some systems have state, either in the form of <code>Local</code> arguments, change detection, or <code>EventReader</code>s. This state isn't saved between two <code>run_system_once</code> calls, creating odd behavior. The <code>Local</code>s reset every run, while change detection will <em>always</em> detect data as added/changed. Be careful and you'll be alright.</p>
<h2 id="system-map">system.map
<a href="#system-map">#</a>
</h2>
<p>authors: @JoJoJet</p>
<p><strong>Bevy 0.12</strong> adds a new <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/system/trait.IntoSystem.html#method.map"><code>system.map()</code></a> function, which is a cheaper and more ergonomic alternative to <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/system/trait.IntoSystem.html#method.pipe"><code>system.pipe()</code></a>.</p>
<p>Unlike <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/system/trait.IntoSystem.html#method.pipe"><code>system.pipe()</code></a>, <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/system/trait.IntoSystem.html#method.map"><code>system.map()</code></a> just takes a normal closure (instead of another system) that accepts the output of the system as its parameter:</p>
<pre data-lang="rust"><code data-lang="rust"><span>app<span>.</span><span>add_systems</span><span><span>(</span>Update<span>,</span> my_system<span>.</span><span>map</span><span><span>(</span>error</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>

<span><span><span>fn</span> </span><span>my_system</span></span><span><span><span>(</span><span>res</span><span>:</span> <span>Res<span>&lt;</span>T<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> <span><span>Result</span><span>&lt;</span><span>(</span><span>)</span>, <span>Err</span><span>&gt;</span></span></span> </span><span><span><span>{</span>
    <span><span>//</span> do something that might fail here
</span></span><span><span>}</span></span></span>

<span><span>//</span> An adapter that logs errors 
</span><span><span><span>pub</span> <span>fn</span> </span><span>error</span></span><span><span>&lt;</span>E<span>:</span> Debug<span>&gt;</span></span><span><span><span>(</span><span>result</span><span>:</span> <span><span>Result</span><span>&lt;</span><span>(</span><span>)</span>, E<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>if</span> <span>let</span> <span>Err</span><span><span>(</span>warn</span><span><span>)</span></span> <span>=</span> result <span><span>{</span>
        <span>error!</span><span><span>(</span><span><span>"</span>{:?}<span>"</span></span><span>,</span> warn</span><span><span>)</span></span><span>;</span>
    </span><span><span>}</span></span>
</span><span><span>}</span></span></span>
</span></code></pre>
<p>Bevy provides built in <code>error</code>, <code>warn</code>, <code>debug</code>, and <code>info</code> adapters that can be used with <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/system/trait.IntoSystem.html#method.map"><code>system.map()</code></a> to log errors at each of these levels.</p>
<h2 id="simplify-parallel-iteration-method">Simplify Parallel Iteration Method
<a href="#simplify-parallel-iteration-method">#</a>
</h2>
<p>authors: @JoJoJet</p>
<p><strong>Bevy 0.12</strong> makes the parallel Query iterator <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/query/struct.QueryParIter.html#method.for_each"><code>for_each()</code></a> compatible with both mutable and immutable queries, reducing API surface and removing the need to write <code>mut</code> twice:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Before:
</span>query<span>.</span><span>par_iter_mut</span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>for_each_mut</span><span><span>(</span><span><span><span>|</span></span></span><span><span><span>x</span><span>|</span></span> </span><span><span>...</span></span></span><span><span>)</span></span><span>;</span>

<span><span>//</span> After:
</span>query<span>.</span><span>par_iter_mut</span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>for_each</span><span><span>(</span><span><span><span>|</span></span></span><span><span><span>x</span><span>|</span></span> </span><span><span>...</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<h2 id="disjoint-mutable-world-access-via-entitymut">Disjoint Mutable World Access Via EntityMut
<a href="#disjoint-mutable-world-access-via-entitymut">#</a>
</h2>
<p>authors: @JoJoJet</p>
<p><strong>Bevy 0.12</strong> supports safely accessing multiple <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/world/struct.EntityMut.html"><code>EntityMut</code></a> values at once, meaning you can mutate multiple entities (with access to <em>all of their components</em>) at the same time.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>let</span> <span><span>[</span>entity1<span>,</span> entity2<span>]</span></span> <span>=</span> world<span>.</span><span>many_entities_mut</span><span><span>(</span><span><span>[</span>id1<span>,</span> id2<span>]</span></span></span><span><span>)</span></span><span>;</span>
<span>*</span>entity1<span>.</span><span>get_mut<span>::</span></span><span><span>&lt;</span>Transform<span>&gt;</span></span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>unwrap</span><span><span>(</span></span><span><span>)</span></span> <span>=</span> <span>*</span>entity2<span>.</span><span>get<span>::</span></span><span><span>&lt;</span>Transform<span>&gt;</span></span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>unwrap</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>This also works in queries:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> This would not have been expressible in previous Bevy versions
</span><span><span>//</span> Now it is totally valid!
</span><span><span><span>fn</span> </span><span>system</span></span><span><span><span>(</span><span>q1</span><span>:</span> <span>Query<span>&lt;</span><span>&amp;</span><span>mut</span> A<span>&gt;</span></span>, <span>q2</span><span>:</span> <span>Query<span>&lt;</span>EntityMut, <span>Without<span>&lt;</span>A<span>&gt;</span></span><span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
</span><span><span>}</span></span></span>
</span></code></pre>
<p>You can now mutably iterate all entities and access arbitrary components within them:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>for</span> <span>mut</span> entity <span>in</span> world<span>.</span><span>iter_entities_mut</span><span><span>(</span></span><span><span>)</span></span> <span><span>{</span>
    <span>let</span> <span>mut</span> transform <span>=</span> entity<span>.</span><span>get_mut<span>::</span></span><span><span>&lt;</span>Transform<span>&gt;</span></span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>unwrap</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
    transform<span>.</span>translation<span>.</span>x <span>+=</span> <span>2.</span><span>0</span><span>;</span>
</span><span><span>}</span></span>
</span></code></pre>
<p>This required reducing the access scope of <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/world/struct.EntityMut.html"><code>EntityMut</code></a> to <em>only</em> the entity it accesses (previously it had escape hatches that allowed direct <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/world/struct.World.html"><code>World</code></a> access). Use <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/world/struct.EntityWorldMut.html"><code>EntityWorldMut</code></a> for an equivalent to the old "global access" approach.</p>
<h2 id="unified-configure-sets-api">Unified configure_sets API
<a href="#unified-configure-sets-api">#</a>
</h2>
<p>authors: @geieredgar</p>
<p>Bevy's <a href="https://bevyengine.org/news/bevy-0-11/#schedule-first-ecs-apis">Schedule-First API</a> introduced in <strong>Bevy 0.11</strong> unified most of the ECS scheduler API surface under a single <code>add_systems</code> API. However, we didn't do a unified API for <code>configure_sets</code>, meaning there were two different APIs:</p>
<pre data-lang="rust"><code data-lang="rust"><span>app<span>.</span><span>configure_set</span><span><span>(</span>Update<span>,</span> A<span>.</span><span>after</span><span><span>(</span>B</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
app<span>.</span><span>configure_sets</span><span><span>(</span>Update<span>,</span> <span><span>(</span>A<span>.</span><span>after</span><span><span>(</span>B</span><span><span>)</span></span><span>,</span> B<span>.</span><span>after</span><span><span>(</span>C</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
</span></span></code></pre>
<p>In <strong>Bevy 0.12</strong>, we have unified these under a single API to align with the patterns we've used elsewhere and cut down on unnecessary API surface:</p>
<pre data-lang="rust"><code data-lang="rust"><span>app<span>.</span><span>configure_sets</span><span><span>(</span>Update<span>,</span> A<span>.</span><span>after</span><span><span>(</span>B</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
app<span>.</span><span>configure_sets</span><span><span>(</span>Update<span>,</span> <span><span>(</span>A<span>.</span><span>after</span><span><span>(</span>B</span><span><span>)</span></span><span>,</span> B<span>.</span><span>after</span><span><span>(</span>C</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
</span></span></code></pre>
<h2 id="ui-materials">UI Materials
<a href="#ui-materials">#</a>
</h2>
<p>authors: @MarkusTheOrt</p>
<p>Bevy's material system has been brought to Bevy UI thanks to the new <a href="https://docs.rs/bevy/0.12.0/bevy/ui/trait.UiMaterial.html"><code>UiMaterial</code></a>:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/ui_material.png" alt="ui material"></p>
<p>This "circle" UI Node is drawn with a custom shader:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>#</span>import <span>bevy_ui<span>::</span></span><span>ui_vertex_output<span>::</span></span>UiVertexOutput

<span><span>struct</span> </span><span><span>CircleMaterial</span> </span><span><span><span>{</span>
    @location(0) <span>color</span><span>:</span> <span>vec4<span>&lt;</span><span>f32</span><span>&gt;</span></span>
</span><span><span>}</span></span></span>

<span>@</span><span>group</span><span><span>(</span><span>1</span></span><span><span>)</span></span> <span>@</span><span>binding</span><span><span>(</span><span>0</span></span><span><span>)</span></span>
<span>var<span>&lt;</span>uniform<span>&gt;</span></span> input<span>:</span> CircleMaterial<span>;</span>

<span>@</span>fragment
<span><span><span>fn</span> </span><span>fragment</span></span><span><span><span>(</span><span>in</span><span>:</span> UiVertexOutput</span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> </span></span><span>@</span><span>location</span><span><span>(</span><span>0</span></span><span><span>)</span></span> <span>vec4<span>&lt;</span><span>f32</span><span>&gt;</span></span> <span><span>{</span>
    <span>let</span> uv <span>=</span> <span>in</span><span>.</span>uv <span>*</span> <span>2.</span><span>0</span> <span>-</span> <span>1.</span><span>0</span><span>;</span>
    <span>let</span> alpha <span>=</span> <span>1.</span><span>0</span> <span>-</span> <span>pow</span><span><span>(</span><span>sqrt</span><span><span>(</span><span>dot</span><span><span>(</span>uv<span>,</span> uv</span><span><span>)</span></span></span><span><span>)</span></span><span>,</span> <span>100.</span><span>0</span></span><span><span>)</span></span><span>;</span>
    <span>return</span> <span>vec4<span>&lt;</span><span>f32</span><span>&gt;</span></span><span><span>(</span>input<span>.</span>color<span>.</span>rgb<span>,</span> alpha</span><span><span>)</span></span><span>;</span>
</span><span><span>}</span></span>
</span></code></pre>
<p>And just like other Bevy material types, it is simple to set up in code!</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>AsBindGroup<span>,</span> Asset<span>,</span> TypePath<span>,</span> Debug<span>,</span> Clone</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>CircleMaterial</span> </span><span><span><span>{</span>
    <span><span>#</span><span>[</span><span>uniform</span><span><span><span>(</span></span></span><span><span>0</span></span><span><span><span>)</span></span></span><span>]</span></span>
    <span>color</span><span>:</span> Vec4,
</span><span><span>}</span></span></span>

<span><span>impl</span> </span><span>UiMaterial <span>for</span></span><span> <span>CircleMaterial</span> </span><span><span><span>{</span>
    <span><span><span>fn</span> </span><span>fragment_shader</span></span><span><span><span>(</span></span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> ShaderRef</span> </span><span><span><span>{</span>
        <span><span>"</span>shaders/circle_shader.wgsl<span>"</span></span><span>.</span><span>into</span><span><span>(</span></span><span><span>)</span></span>
    </span><span><span>}</span></span></span>
</span><span><span>}</span></span></span>

<span><span>//</span> Register the material plugin in your App
</span>app<span>.</span><span>add_plugins</span><span><span>(</span><span>UiMaterialPlugin<span>::</span></span><span><span>&lt;</span>CircleMaterial<span>&gt;</span></span><span><span>::</span></span>default<span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span>

<span><span>//</span> Later in your app, spawn the UI node with your material!
</span>commands<span>.</span><span>spawn</span><span><span>(</span>MaterialNodeBundle <span><span>{</span>
    style<span>:</span> Style <span><span>{</span>
        position_type<span>:</span> <span>PositionType<span>::</span></span>Absolute<span>,</span>
        width<span>:</span> <span>Val<span>::</span></span>Px<span><span>(</span><span>250.</span><span>0</span></span><span><span>)</span></span><span>,</span>
        height<span>:</span> <span>Val<span>::</span></span>Px<span><span>(</span><span>250.</span><span>0</span></span><span><span>)</span></span><span>,</span>
        <span>..</span><span>default</span><span><span>(</span></span><span><span>)</span></span>
    </span><span><span>}</span></span><span>,</span>
    material<span>:</span> materials<span>.</span><span>add</span><span><span>(</span>CircleMaterial <span><span>{</span>
        color<span>:</span> <span>Color<span>::</span></span>rgb<span><span>(</span><span>0.</span><span>0</span><span>,</span> <span>1.</span><span>0</span><span>,</span> <span>0.</span><span>58</span></span><span><span>)</span></span><span>.</span><span>into</span><span><span>(</span></span><span><span>)</span></span><span>,</span>
    </span><span><span>}</span></span></span><span><span>)</span></span><span>,</span>
    <span>..</span><span>default</span><span><span>(</span></span><span><span>)</span></span>
</span><span><span>}</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<h2 id="ui-node-outlines">UI Node Outlines
<a href="#ui-node-outlines">#</a>
</h2>
<p>authors: @ickshonpe</p>
<p>Bevy's UI nodes now support outlines "outside the borders" of UI nodes via the new <a href="https://docs.rs/bevy/0.12.0/bevy/ui/struct.Outline.html"><code>Outline</code></a> component. <a href="https://docs.rs/bevy/0.12.0/bevy/ui/struct.Outline.html"><code>Outline</code></a> does not occupy any space in the layout. This is different than <a href="https://docs.rs/bevy/0.12.0/bevy/ui/struct.Style.html"><code>Style::border</code></a>, which exists "as part of" the node in the layout:</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/ui_outlines.png" alt="ui outlines"></p>
<pre data-lang="rust"><code data-lang="rust"><span>commands<span>.</span><span>spawn</span><span><span>(</span><span><span>(</span>
    <span>NodeBundle<span>::</span></span>default<span><span>(</span></span><span><span>)</span></span><span>,</span>
    Outline <span><span>{</span>
        width<span>:</span> <span>Val<span>::</span></span>Px<span><span>(</span><span>6.</span></span><span><span>)</span></span><span>,</span>
        offset<span>:</span> <span>Val<span>::</span></span>Px<span><span>(</span><span>6.</span></span><span><span>)</span></span><span>,</span>
        color<span>:</span> <span>Color<span>::</span></span><span>WHITE</span><span>,</span>
    </span><span><span>}</span></span><span>,</span>
</span><span><span>)</span></span></span><span><span>)</span></span>
</span></code></pre>
<h2 id="unified-time">Unified <code>Time</code>
<a href="#unified-time">#</a>
</h2>
<p>authors: @nakedible @maniwani @alice-i-cecile</p>
<p>Bevy 0.12 brings two major quality of life improvements to <a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a>.</p>
<ul>
<li><a href="https://docs.rs/bevy/0.12.0/bevy/time/struct.Time.html"><code>Time</code></a> now returns the contextually correct values for systems running in <a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a>. (As such, <code>FixedTime</code> has been removed.)</li>
<li><a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a> can no longer snowball into a "death spiral" (where the app freezes because <a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a> steps are enqueued faster than it can run them).</li>
</ul>
<p>The <a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a> schedule and its companion <code>FixedTime</code> resource were introduced in Bevy 0.10, and it soon became apparent that <code>FixedTime</code> was lacking. Its methods were different from <a href="https://docs.rs/bevy/0.12.0/bevy/time/struct.Time.html"><code>Time</code></a> and it didn't even track "total time elapsed" like <a href="https://docs.rs/bevy/0.12.0/bevy/time/struct.Time.html"><code>Time</code></a> did, to name a few examples. Having two different "time" APIs also meant you had to write systems to specifically support "fixed timestep" or "variable timestep" and not both. It was desirable to not have this split as it can lead to incompatibilities between plugins down the road (which is sometimes the case with plugins in other game engines).</p>
<p>Now, you can just write systems that read <a href="https://docs.rs/bevy/0.12.0/bevy/time/struct.Time.html"><code>Time</code></a> and schedule them in either context.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> This system will see a constant delta time if scheduled in `FixedUpdate` or
</span><span><span>//</span> a variable delta time if scheduled in `Update`.
</span><span><span><span>fn</span> </span><span>integrate_velocity</span></span><span><span><span>(</span>
    <span>mut</span> <span>query</span><span>:</span> <span>Query<span>&lt;</span><span>(</span><span>&amp;</span><span>mut</span> Transfrom, <span>&amp;</span>Velocity<span>)</span><span>&gt;</span></span>,
    <span>time</span><span>:</span> <span>Res<span>&lt;</span>Time<span>&gt;</span></span>,
</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>for</span> <span><span>(</span><span>mut</span> transform<span>,</span> velocity</span><span><span>)</span></span> <span>in</span> <span>&amp;</span><span>mut</span> query <span><span>{</span>
        transform<span>.</span>translation<span>.</span>x <span>+=</span> velocity<span>.</span>x <span>*</span> time<span>.</span><span>delta_seconds</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
        transform<span>.</span>translation<span>.</span>y <span>+=</span> velocity<span>.</span>y <span>*</span> time<span>.</span><span>delta_seconds</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
    </span><span><span>}</span></span>
</span><span><span>}</span></span></span>
</span></code></pre>
<p>Most systems should continue to use <a href="https://docs.rs/bevy/0.12.0/bevy/time/struct.Time.html"><code>Time</code></a>, but behind the scenes, the methods from previous APIs have been refactored into four clocks:</p>
<ul>
<li><code>Time&lt;Real&gt;</code></li>
<li><code>Time&lt;Virtual&gt;</code></li>
<li><code>Time&lt;Fixed&gt;</code></li>
<li><code>Time&lt;()&gt;</code></li>
</ul>
<p><code>Time&lt;Real&gt;</code> measures the true, unedited frame and app durations. For diagnostics/profiling, use that one. It's also used to derive the others. <code>Time&lt;Virtual&gt;</code> can be sped up, slowed down, and paused, and <code>Time&lt;Fixed&gt;</code> chases <code>Time&lt;Virtual&gt;</code> in fixed increments. Lastly, <code>Time&lt;()&gt;</code> is automatically overwritten with the current value of <code>Time&lt;Fixed&gt;</code> or <code>Time&lt;Virtual&gt;</code> upon entering or exiting <code>FixedUpdate</code>. When a system borrows <code>Time</code>, it actually borrows <code>Time&lt;()&gt;</code>.</p>
<p>Try the new <a href="https://github.com/bevyengine/bevy/blob/main/examples/time/time.rs">time example</a> to get a better feel for these resources.</p>
<p>The fix for the windup problem was limiting how much <code>Time&lt;Virtual&gt;</code> can advance from a single frame. This then limits how many times <a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a> can be queued for the next frame, and so things like frame lag or your computer waking up from a long sleep can no longer cause a death spiral. So now, the app won't freeze, but things happening in <a href="https://docs.rs/bevy/0.12.0/bevy/app/struct.FixedUpdate.html"><code>FixedUpdate</code></a> will appear to slow down since it'll be running at a temporarily reduced rate.</p>
<h2 id="imageloader-settings">ImageLoader Settings
<a href="#imageloader-settings">#</a>
</h2>
<p>authors: @cart, @Kanabenki</p>
<p>To take advantage of the new <a href="https://docs.rs/bevy/0.12.0/bevy/asset/trait.AssetLoader.html"><code>AssetLoader</code></a> settings in <strong>Bevy Asset V2</strong>, we've added <a href="https://docs.rs/bevy/0.12.0/bevy/render/texture/struct.ImageLoaderSettings.html"><code>ImageLoaderSettings</code></a> to  <a href="https://docs.rs/bevy/0.12.0/bevy/render/texture/struct.ImageLoader.html"><code>ImageLoader</code></a>.</p>
<p>This means that you can now configure the sampler, SRGB-ness, and the format, on a per-image basis. These are the defaults, as they appear in <strong>Bevy Asset V2</strong> meta files:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>(</span>
    format<span>:</span> FromExtension<span>,</span>
    is_srgb<span>:</span> <span>true</span><span>,</span>
    sampler<span>:</span> <span>Default</span><span>,</span>
</span><span><span>)</span></span>
</span></code></pre>
<p>When set to <code>Default</code>, the image will use whatever is configured in <a href="https://docs.rs/bevy/0.12.0/bevy/render/prelude/struct.ImagePlugin.html#structfield.default_sampler"><code>ImagePlugin::default_sampler</code></a>.</p>
<p>However, you can set these values to whatever you want!</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>(</span>
    format<span>:</span> Format<span><span>(</span>Basis</span><span><span>)</span></span><span>,</span>
    is_srgb<span>:</span> <span>true</span><span>,</span>
    sampler<span>:</span> Descriptor<span><span>(</span><span><span>(</span>
        label<span>:</span> <span>None</span><span>,</span>
        address_mode_u<span>:</span> ClampToEdge<span>,</span>
        address_mode_v<span>:</span> ClampToEdge<span>,</span>
        address_mode_w<span>:</span> ClampToEdge<span>,</span>
        mag_filter<span>:</span> Nearest<span>,</span>
        min_filter<span>:</span> Nearest<span>,</span>
        mipmap_filter<span>:</span> Nearest<span>,</span>
        lod_min_clamp<span>:</span> <span>0.</span><span>0</span><span>,</span>
        lod_max_clamp<span>:</span> <span>32.</span><span>0</span><span>,</span>
        compare<span>:</span> <span>None</span><span>,</span>
        anisotropy_clamp<span>:</span> <span>1</span><span>,</span>
        border_color<span>:</span> <span>None</span><span>,</span>
    </span><span><span>)</span></span></span><span><span>)</span></span><span>,</span>
</span><span><span>)</span></span>
</span></code></pre>
<h2 id="gamepadbuttoninput">GamepadButtonInput
<a href="#gamepadbuttoninput">#</a>
</h2>
<p>authors: @bravely-beep</p>
<p>Bevy generally provides two ways to handle input of a given type:</p>
<ul>
<li>Events: receive a stream of input events in the order they occur</li>
<li>The <a href="https://docs.rs/bevy/0.12.0/bevy/input/struct.Input.html"><code>Input</code></a> Resource: read the <em>current</em> state of the input</li>
</ul>
<p>One notable exception was <a href="https://docs.rs/bevy/0.12.0/bevy/input/gamepad/struct.GamepadButton.html"><code>GamepadButton</code></a>, which was only available via the <a href="https://docs.rs/bevy/0.12.0/bevy/input/struct.Input.html"><code>Input</code></a> resource. <strong>Bevy 0.12</strong> adds a new <a href="https://docs.rs/bevy/0.12.0/bevy/input/gamepad/struct.GamepadButtonInput.html"><code>GamepadButtonInput</code></a> event, filling this gap.</p>
<h2 id="sceneinstanceready-event">SceneInstanceReady Event
<a href="#sceneinstanceready-event">#</a>
</h2>
<p>authors: @Shatur</p>
<p><strong>Bevy 0.12</strong> adds a new <a href="https://docs.rs/bevy/0.12.0/bevy/scene/struct.SceneInstanceReady.html"><code>SceneInstanceReady</code></a> event, which makes it easy to listen for a specific scene instance to be ready. "Ready" in this case means "fully spawned as an entity".</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Resource</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>MyScene</span></span><span><span><span>(</span>Entity</span><span>)</span></span><span>;</span>

<span><span><span>fn</span> </span><span>setup</span></span><span><span><span>(</span><span>mut</span> <span>commands</span><span>:</span> Commands, <span>assets</span><span>:</span> <span>Res<span>&lt;</span>AssetServer<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>let</span> scene <span>=</span> SceneBundle <span><span>{</span>
        scene<span>:</span> assets<span>.</span><span>load</span><span><span>(</span><span><span>"</span>some.gltf#MyScene<span>"</span></span></span><span><span>)</span></span><span>,</span>
        <span>..</span><span>default</span><span><span>(</span></span><span><span>)</span></span>
    </span><span><span>}</span></span><span>;</span>
    <span>let</span> entity <span>=</span> commands<span>.</span><span>spawn</span><span><span>(</span>scene</span><span><span>)</span></span><span>.</span><span>id</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
    commands<span>.</span><span>insert_resource</span><span><span>(</span>MyScene<span><span>(</span>entity</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
</span><span><span>}</span></span></span>

<span><span><span>fn</span> </span><span>system</span></span><span><span><span>(</span><span>mut</span> <span>events</span><span>:</span> <span>EventReader<span>&lt;</span>SceneInstanceReady<span>&gt;</span></span>, <span>my_scene</span><span>:</span> <span>Res<span>&lt;</span>MyScene<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>for</span> event <span>in</span> events<span>.</span><span>read</span><span><span>(</span></span><span><span>)</span></span> <span><span>{</span>
        <span>if</span> event<span>.</span>parent <span>==</span> my_scene<span>.</span><span>0</span> <span><span>{</span>
            <span><span>//</span> the scene instance is "ready"
</span>        </span><span><span>}</span></span>
    </span><span><span>}</span></span>
</span><span><span>}</span></span></span>
</span></code></pre>
<h2 id="split-computed-visibility">Split Computed Visibility
<a href="#split-computed-visibility">#</a>
</h2>
<p>authors: @JoJoJet</p>
<p>The <code>ComputedVisibility</code> component has now been split into <a href="https://docs.rs/bevy/0.12.0/bevy/render/view/struct.InheritedVisibility.html"><code>InheritedVisibility</code></a> (visible in the hierarchy) and <a href="https://docs.rs/bevy/0.12.0/bevy/render/view/struct.ViewVisibility.html"><code>ViewVisibility</code></a> (visible from a view), making it possible to use Bevy's built-in change detection on both sets of data separately.</p>
<h2 id="reflectbundle">ReflectBundle
<a href="#reflectbundle">#</a>
</h2>
<p>authors: @Shatur</p>
<p>Bevy now supports "Bundle reflection" via <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/reflect/struct.ReflectBundle.html"><code>ReflectBundle</code></a>:</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Bundle<span>,</span> Reflect</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>#</span><span>[</span><span>reflect</span><span><span><span>(</span></span></span><span><span>Bundle</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>SpriteBundle</span> </span><span><span><span>{</span>
    <span>image</span><span>:</span> <span>Handle<span>&lt;</span>Image<span>&gt;</span></span>,
    <span><span>//</span> other components here
</span></span><span><span>}</span></span></span>
</span></code></pre>
<p>This makes it possible to create and interact with ECS bundles using Bevy Reflect, meaning you can do these operations dynamically at runtime. This is useful for scripting and asset scenarios.</p>
<h2 id="reflect-commands">Reflect Commands
<a href="#reflect-commands">#</a>
</h2>
<p>authors: @NoahShomette</p>
<p>It is now possible to insert and remove reflect components from an entity in a normal system via new functions on <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/system/struct.Commands.html"><code>Commands</code></a>!</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Component<span>,</span> Reflect<span>,</span> Default</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>#</span><span>[</span><span>reflect</span><span><span><span>(</span></span></span><span><span>Component</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>Component</span></span><span><span><span>(</span><span>u32</span></span><span>)</span></span><span>;</span>

<span><span><span>fn</span> </span><span>reflect_commands</span></span><span><span><span>(</span><span>mut</span> <span>commands</span><span>:</span> Commands</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>let</span> boxed_reflect_component<span>:</span> <span><span>Box</span><span>&lt;</span>dyn Reflect<span>&gt;</span></span> <span>=</span> <span>Box</span><span><span>::</span></span>new<span><span>(</span>Component<span><span>(</span><span>916</span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>

    <span>let</span> entity <span>=</span> commands
        <span>.</span><span>spawn_empty</span><span><span>(</span></span><span><span>)</span></span>
        <span>.</span><span>insert_reflect</span><span><span>(</span>boxed_reflect_component<span>.</span><span>clone_value</span><span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span><span>.</span><span>id</span><span><span>(</span></span><span><span>)</span></span><span>;</span>

    commands<span>.</span><span>entity</span><span><span>(</span>entity</span><span><span>)</span></span><span>.</span><span>remove_reflect</span><span><span>(</span>boxed_reflect_component<span>.</span><span>type_name</span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>to_owned</span><span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>

</span><span><span>}</span></span></span>
</span></code></pre>
<p>The above commands use the <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/reflect/struct.AppTypeRegistry.html"><code>AppTypeRegistry</code></a> by default. If you use a different TypeRegistry then you can use the ...<code>with_registry</code> commands instead.</p>
<pre data-lang="rust"><code data-lang="rust"><span> <span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Resource</span></span><span><span><span>)</span></span></span><span>]</span></span>
 <span><span>struct</span> </span><span><span>TypeRegistryResource</span> </span><span><span><span>{</span>
     <span>type_registry</span><span>:</span> TypeRegistry,
 </span><span><span>}</span></span></span>

 <span><span>impl</span> </span><span><span><span>AsRef</span><span>&lt;</span>TypeRegistry<span>&gt;</span></span> <span>for</span></span><span> <span>TypeRegistryResource</span> </span><span><span><span>{</span>
     <span><span><span>fn</span> </span><span>as_ref</span></span><span><span><span>(</span><span>&amp;</span><span>self</span></span><span><span><span>)</span></span></span></span><span> <span><span>-&gt;</span> <span>&amp;</span>TypeRegistry</span> </span><span><span><span>{</span>
         <span>&amp;</span><span>self</span><span>.</span>type_registry
     </span><span><span>}</span></span></span>
 </span><span><span>}</span></span></span>

 <span><span><span>fn</span> </span><span>reflect_commands_with_registry</span></span><span><span><span>(</span><span>mut</span> <span>commands</span><span>:</span> Commands</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span>let</span> boxed_reflect_component<span>:</span> <span><span>Box</span><span>&lt;</span>dyn Reflect<span>&gt;</span></span> <span>=</span> <span>Box</span><span><span>::</span></span>new<span><span>(</span>Component<span><span>(</span><span>916</span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>

    <span>let</span> entity <span>=</span> commands
        <span>.</span><span>spawn_empty</span><span><span>(</span></span><span><span>)</span></span>
        <span>.</span><span>insert_reflect_with_registry<span>::</span></span><span><span>&lt;</span>TypeRegistryResource<span>&gt;</span></span><span><span>(</span>boxed_reflect_component<span>.</span><span>clone_value</span><span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span><span>.</span><span>id</span><span><span>(</span></span><span><span>)</span></span><span>;</span>

    commands<span>.</span><span>entity</span><span><span>(</span>entity</span><span><span>)</span></span><span>.</span><span>remove_reflect_with_registry<span>::</span></span><span><span>&lt;</span>TypeRegistryResource<span>&gt;</span></span><span><span>(</span>boxed_reflect_component<span>.</span><span>type_name</span><span><span>(</span></span><span><span>)</span></span><span>.</span><span>to_owned</span><span><span>(</span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>

</span><span><span>}</span></span></span>
</span></code></pre>
<p>See <a href="https://docs.rs/bevy/0.12.0/bevy/ecs/reflect/trait.ReflectCommandExt.html"><code>ReflectCommandExt</code></a> for more examples and documentation</p>
<h2 id="limit-background-fps">Limit Background FPS
<a href="#limit-background-fps">#</a>
</h2>
<p>authors: @maniwani</p>
<p>If an app has no window in focus, Bevy will now limit its update rate (to 60Hz by default).</p>
<p>Before, many Bevy apps running on desktop operating systems (particularly macOS) would see spikes in CPU usage whenever their windows were minimized or completely covered, even with VSync enabled. The reason for this is that many desktop window managers ignore VSync for windows that aren't visible. As VSync normally limits how often an app updates, that speed limit vanishes while it's effectively disabled.</p>
<p>Now, apps running in the background will sleep in between updates to limit their FPS.</p>
<p>The one caveat is that most operating systems will not report if a window is visible, only if it has focus. So the throttle is based on focus, not visibility. 60Hz was then chosen as the default to maintain high FPS in cases where the window is not focused but still visible.</p>
<h2 id="animationplayer-api-improvements"><code>AnimationPlayer</code> API Improvements
<a href="#animationplayer-api-improvements">#</a>
</h2>
<p>authors: @devinleamy</p>
<p>The <code>AnimationPlayer</code> now has new methods for controlling playback, and utilities for checking
if an animation is playing or completed, and getting its <code>AnimationClip</code> handle.</p>
<p><code>set_elapsed</code> and has been removed in favor of <code>seek_to</code>. <code>elapsed</code> now
returns the actual elapsed time and is not affected by the animation speed. <code>stop_repeating</code> have been removed
in favor of <code>set_repeat(RepeatAnimation::Never)</code>.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span>let</span> <span>mut</span> player <span>=</span> q_animation_player<span>.</span><span>single_mut</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
<span><span>//</span> Check if an animation is complete.
</span><span>if</span> player<span>.</span><span>is_finished</span><span><span>(</span></span><span><span>)</span></span> <span><span>{</span>
    <span><span>//</span> Set the playback mode.
</span>    player<span>.</span><span>set_repeat</span><span><span>(</span><span>RepeatAnimation<span>::</span></span>Forever</span><span><span>)</span></span><span>;</span>
    player<span>.</span><span>set_repeat</span><span><span>(</span><span>RepeatAnimation<span>::</span></span>Never</span><span><span>)</span></span><span>;</span>
    player<span>.</span><span>set_repeat</span><span><span>(</span><span>RepeatAnimation<span>::</span></span>Count<span><span>(</span><span>4</span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
</span><span><span>}</span></span>
<span><span>//</span> Get a handle to the playing AnimationClip.
</span><span>let</span> clip_handle <span>=</span> player<span>.</span><span>animation_clip</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
<span><span>//</span> Seek to 1s in the current clip.
</span>player<span>.</span><span>seek_to</span><span><span>(</span><span>1.</span><span>0</span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<h2 id="ignore-ambiguous-components-and-resources">Ignore Ambiguous Components and Resources
<a href="#ignore-ambiguous-components-and-resources">#</a>
</h2>
<p>authors: @hymm</p>
<p>Ambiguity Reporting is an optional feature of Bevy's scheduler. When enabled it reports conflicts between systems that modify the same data, but are not ordered in relation to each other. While some reported conflicts can cause subtle bugs, many do not. Bevy has a couple existing methods and two new ones for ignoring these.</p>
<p>The existing APIs: <code>ambiguous_with</code>, which ignores conflicts between specific sets, and <code>ambiguous_with_all</code>, which ignores all conflicts with the set it's applied to. In addition, there are now 2 new APIs that let you ignore conflicts on a type of data, <code>allow_ambiguous_component</code> and <code>allow_ambiguous_resource</code>. These ignore all conflicts between systems on that specific type, component or resource, in a world.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>#</span><span>[</span><span>derive</span><span><span><span>(</span></span></span><span><span>Resource</span></span><span><span><span>)</span></span></span><span>]</span></span>
<span><span>struct</span> </span><span><span>R</span></span><span>;</span>

<span><span>//</span> These systems are ambiguous on R
</span><span><span><span>fn</span> </span><span>system_1</span></span><span><span><span>(</span><span>_</span>: <span>ResMut<span>&lt;</span>R<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span></span><span><span>}</span></span></span>
<span><span><span>fn</span> </span><span>system_2</span></span><span><span><span>(</span><span>_</span>: <span>Res<span>&lt;</span>R<span>&gt;</span></span></span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span></span><span><span>}</span></span></span>

<span>let</span> <span>mut</span> app <span>=</span> <span>App<span>::</span></span>new<span><span>(</span></span><span><span>)</span></span><span>;</span>
app<span>.</span><span>configure_schedules</span><span><span>(</span>ScheduleBuildSettings <span><span>{</span>
  ambiguity_detection<span>:</span> <span>LogLevel<span>::</span></span>Error<span>,</span>
  <span>..</span><span>default</span><span><span>(</span></span><span><span>)</span></span>
</span><span><span>}</span></span></span><span><span>)</span></span><span>;</span>
app<span>.</span><span>insert_resource</span><span><span>(</span>R</span><span><span>)</span></span><span>;</span>

app<span>.</span><span>add_systems</span><span><span>(</span>Update<span>,</span> <span><span>(</span> system_1<span>,</span> system_2 </span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
app<span>.</span><span>allow_ambiguous_resource<span>::</span></span><span><span>&lt;</span>R<span>&gt;</span></span><span><span>(</span></span><span><span>)</span></span><span>;</span>

<span><span>//</span> Running the app does not error.
</span>app<span>.</span><span>update</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<p>Bevy is now using this to ignore conflicts between the <code>Assets&lt;T&gt;</code> resources. Most of these ambiguities are modifying different assets and thus do not matter.</p>
<h2 id="spatial-audio-api-ergonomics">Spatial Audio API Ergonomics
<a href="#spatial-audio-api-ergonomics">#</a>
</h2>
<p>authors: @rparrett, @hymm, @mockersf</p>
<p>A simple "stereo" (non-HRTF) spatial audio implementation was heroically <a href="https://bevyengine.org/news/bevy-0-10/#spatial-audio">put together</a> at the last minute for Bevy 0.10, but the implementation was somewhat bare-bones and not very user-friendly. Users needed to write their own systems to update audio sinks with emitter and listener positions.</p>
<p>Now users can just add a <code>TransformBundle</code> to their <code>AudioBundle</code>s and Bevy will take care of the rest!</p>
<pre data-lang="rust"><code data-lang="rust"><span>commands<span>.</span><span>spawn</span><span><span>(</span><span><span>(</span>
    <span>TransformBundle<span>::</span></span>default<span><span>(</span></span><span><span>)</span></span><span>,</span>
    AudioBundle <span><span>{</span>
        source<span>:</span> asset_server<span>.</span><span>load</span><span><span>(</span><span><span>"</span>sounds/bonk.ogg<span>"</span></span></span><span><span>)</span></span><span>,</span>
        settings<span>:</span> <span>PlaybackSettings<span>::</span></span><span>DESPAWN</span><span>.</span><span>with_spatial</span><span><span>(</span><span>true</span></span><span><span>)</span></span><span>,</span>
    </span><span><span>}</span></span><span>,</span>
</span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
</span></code></pre>
<h2 id="pitch-audio-source">Pitch Audio Source
<a href="#pitch-audio-source">#</a>
</h2>
<p>authors: @basilefff</p>
<p>Audio can now be played by pitch, which is useful to debug audio issues, to use as a placeholder, or for programmatic audio.</p>
<p>A <code>Pitch</code> audio source can be created from its frequency and its duration, and then be used as a source in a <code>PitchBundle</code>.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span><span>fn</span> </span><span>play_pitch</span></span><span><span><span>(</span>
    <span>mut</span> <span>pitch_assets</span><span>:</span> <span>ResMut<span>&lt;</span><span>Assets<span>&lt;</span>Pitch<span>&gt;</span></span><span>&gt;</span></span>,
    <span>mut</span> <span>commands</span><span>:</span> Commands,
</span><span><span><span>)</span></span></span></span><span> </span><span><span><span>{</span>
    <span><span>//</span> This is a A for 1 second
</span>    <span>let</span> pitch_handle <span>=</span> pitch_assets<span>.</span><span>add</span><span><span>(</span><span>Pitch<span>::</span></span>new<span><span>(</span><span>440.</span><span>0</span><span>,</span> <span>Duration<span>::</span></span>new<span><span>(</span><span>1</span><span>,</span> <span>0</span></span><span><span>)</span></span></span><span><span>)</span></span></span><span><span>)</span></span><span>;</span>
    <span><span>//</span> Play it now
</span>    commands<span>.</span><span>spawn</span><span><span>(</span>PitchBundle <span><span>{</span>
        source<span>:</span> pitch_handle<span>,</span>
        <span>..</span><span>default</span><span><span>(</span></span><span><span>)</span></span>
    </span><span><span>}</span></span></span><span><span>)</span></span><span>;</span>
</span><span><span>}</span></span></span>
</span></code></pre>
<p>Audio is generated at the given frequency using a <a href="https://en.wikipedia.org/wiki/Sine_wave#Audio_example">sine wave</a>. More complex sounds can be created by playing several pitch audio sources at the same time, like chords or hamonics.</p>
<h2 id="added-hsl-methods-to-color-struct">Added HSL methods to <code>Color</code> struct
<a href="#added-hsl-methods-to-color-struct">#</a>
</h2>
<p>authors: @idedary</p>
<p>You can now use <code>h()</code>, <code>s()</code>, <code>l()</code> together with their <code>set_h()</code>, <code>set_s()</code>, <code>set_l()</code> and <code>with_h()</code>, <code>with_s()</code>, <code>with_l()</code> variants to manipulate <em>Hue</em>, <em>Saturation</em> and <em>Lightness</em> values of a <code>Color</code> struct without cloning. Previously you could do that with only RGBA values.</p>
<pre data-lang="rust"><code data-lang="rust"><span><span><span>//</span> Returns HSL component values
</span><span>let</span> color <span>=</span> <span>Color<span>::</span></span><span>ORANGE</span><span>;</span>
<span>let</span> hue <span>=</span> color<span>.</span><span>h</span><span><span>(</span></span><span><span>)</span></span><span>;</span>
<span><span>//</span> ...
</span>
<span><span>//</span> Changes the HSL component values
</span><span>let</span> <span>mut</span> color <span>=</span> <span>Color<span>::</span></span><span>PINK</span><span>;</span>
color<span>.</span><span>set_s</span><span><span>(</span><span>0.</span><span>5</span></span><span><span>)</span></span><span>;</span>
<span><span>//</span> ...
</span>
<span><span>//</span> Modifies existing colors and returns them
</span><span>let</span> color <span>=</span> <span>Color<span>::</span></span><span>VIOLET</span><span>.</span><span>with_l</span><span><span>(</span><span>0.</span><span>7</span></span><span><span>)</span></span><span>;</span>
<span><span>//</span> ...
</span></span></code></pre>
<h2 id="reduced-tracing-overhead">Reduced Tracing Overhead
<a href="#reduced-tracing-overhead">#</a>
</h2>
<p>authors: @hymm, @james7132</p>
<p>Bevy uses the <a href="https://crates.io/crates/tracing">tracing</a> library to measure system running time (among other things). This is useful for determining where bottlenecks in frame time are and measuring performance improvements. These traces can be visualized using the <a href="https://github.com/wolfpld/tracy">tracy</a> tool. However, using tracing's spans has a significant overhead to it. A large part of the per-span overhead is due to allocating the string description of the span. By caching the spans for systems, commands, and parallel iteration, we have significantly reduced the CPU time overhead when using tracing. In the PR that introduced system span caching, our "many foxes" stress test went from 5.35&nbsp;ms to 4.54&nbsp;ms. In the PR that added caching for the parallel iteration spans, our "many cubes" stress test went from 8.89&nbsp;ms to 6.8&nbsp;ms.</p>
<p><img src="https://bevyengine.org/news/bevy-0-12/tracing-overhead-reduction.png" alt="tracing overhead"></p>
<h2 id="accesskit-integration-improvements">AccessKit Integration Improvements
<a href="#accesskit-integration-improvements">#</a>
</h2>
<p>authors: @ndarilek</p>
<p>Bevy 0.10's <a href="https://accesskit.dev/">AccessKit</a> integration made it incredibly easy for the engine to take the lead and push updates to the accessibility tree. But as any good dance partner knows, sometimes it's best not to lead but to follow.</p>
<p>This release adds the <code>ManageAccessibilityUpdates</code> resource which, when set to <code>false</code>, stops the engine from updating the tree on its own. This paves the way for third-party UIs with Bevy and AccessKit integration to send updates directly to Bevy. When the UI is ready to return control, <code>ManageAccessibilityUpdates</code> is set to <code>true</code> Bevy picks up where it left off and starts sending updates again.</p>
<p>AccessKit itself was also simplified, and this release capitalizes on that to shrink the surface area of our integration. If you're curious about how things work internally or want to help, the <code>bevy_a11y</code> crate is now more approachable than ever.</p>
<h2 id="typepath-migration">TypePath Migration
<a href="#typepath-migration">#</a>
</h2>
<p>authors: @soqb</p>
<p>As a followup to the introduction of <a href="https://bevyengine.org/news/bevy-0-11/#stable-typepath">Stable TypePath</a> in <strong>Bevy 0.11</strong>, Bevy Reflect now uses <a href="https://docs.rs/bevy/0.12.0/bevy/reflect/trait.TypePath.html"><code>TypePath</code></a> instead of <a href="https://doc.rust-lang.org/std/any/fn.type_name.html"><code>type_name</code></a>. A reflected type's <a href="https://docs.rs/bevy/0.12.0/bevy/reflect/trait.TypePath.html"><code>TypePath</code></a> is now accessible via <a href="https://docs.rs/bevy/0.12.0/bevy/reflect/enum.TypeInfo.html"><code>TypeInfo</code></a> and <a href="https://docs.rs/bevy/0.12.0/bevy/reflect/trait.DynamicTypePath.html"><code>DynamicTypePath</code></a> and <a href="https://doc.rust-lang.org/std/any/fn.type_name.html"><code>type_name</code></a> methods have been removed.</p>
<h2 id="improved-bevymark-example">Improved bevymark Example
<a href="#improved-bevymark-example">#</a>
</h2>
<p>authors: @superdump (Rob Swain), @IceSentry</p>
<p>The bevymark example needed to be improved to enable benchmarking the batching / instanced draw changes. Modes were added to:</p>
<ul>
<li>draw 2D quad meshes instead of sprites: <code>--mode mesh2d</code></li>
<li>vary the per-instance color data instead of only varying the colour per wave of birds: <code>--vary-per-instance</code></li>
<li>generate a number of material / sprite textures and randomly choose from them either per wave or per instance depending on the vary per instance setting: <code>--material-texture-count 10</code></li>
<li>spawn the birds in random z order (new default), or in draw order: <code>--ordered-z</code></li>
</ul>
<p>This allows benchmarking of different situations for batching / instancing in the next section.</p>
<h2 id="ci-improvements">CI Improvements
<a href="#ci-improvements">#</a>
</h2>
<p>authors: @ameknite, @mockersf</p>
<p>To help ensure examples are reusable outside of the Bevy repository, CI will now fail if an example
uses an import from <code>bevy_internal</code> instead of <code>bevy</code>.</p>
<p>Additionally, the daily mobile check job now builds on more iOS and Android devices:</p>
<ul>
<li>iPhone 13 on iOS 15</li>
<li>iPhone 14 on iOS 16</li>
<li>iPhone 15 on iOS 17</li>
<li>Xiaomi Redmi Note 11 on Android 11</li>
<li>Google Pixel 6 on Android 12</li>
<li>Samsung Galaxy S23 on Android 13</li>
<li>Google Pixel 8 on Android 14</li>
</ul>

<p>authors: @mockersf</p>
<p>The example showcase tool can now build all examples for WebGL2 or WebGPU. This is used to update
the website with all Wasm-compatible examples, which you can find
<a href="https://bevyengine.org/examples/">here</a> for WebGL2, or
<a href="https://bevyengine.org/examples-webgpu/">here</a> for WebGPU.</p>
<p>It is now also capable of capturing a screenshot while running all examples:</p>
<pre data-lang="sh"><code data-lang="sh"><span><span><span>cargo</span></span><span> run<span><span> -</span>p</span> example-showcase<span> --</span></span><span> run --screenshot</span>
</span></code></pre>
<p>Some options are available to help with the execution, you can check them with <code>--help</code>.</p>
<p>Those screenshots are displayed on the example pages on the website, and can be used to check that
a PR didn't introduce a visible regression.</p>
<h2 id="example-execution-in-ci">Example execution in CI
<a href="#example-execution-in-ci">#</a>
</h2>
<p>authors: @mockersf, @rparrett</p>
<p>All examples are now executed in CI on Windows with DX12, and on Linux with Vulkan. When possible,
a screenshot is taken and compared to the last execution. If an example crashes, the log is saved.
The mobile example is also executed on the same devices as the daily mobile check job.</p>
<p>A report of all those executions is built and available
<a href="https://thebevyflock.github.io/bevy-example-runner/">here</a>.</p>
<p><a href="https://thebevyflock.github.io/bevy-example-runner/"><img src="https://bevyengine.org/news/bevy-0-12/example-report.png" alt="Example Report"></a></p>
<p>If you want to help sponsor tests on more platforms, get in touch!</p>
<h2 id="what-s-next"><a name="what-s-next"></a>What's Next?
<a href="#what-s-next">#</a>
</h2>
<p>We have plenty of work in progress! Some of this will likely land in <strong>Bevy 0.13</strong>.</p>
<p>Check out the <a href="https://github.com/bevyengine/bevy/milestone/17"><strong>Bevy 0.13 Milestone</strong></a> for an up-to-date list of current work being considered for <strong>Bevy 0.13</strong>.</p>
<ul>
<li><strong>Bevy Scene and UI Evolution</strong>: We are hard at work building out a new Scene and UI system for Bevy. We're experimenting with a brand new <a href="https://github.com/bevyengine/bevy/discussions/9538">holistic Scene / UI system</a> that will hopefully serve as the foundation for the Bevy Editor and make defining scenes in Bevy much more flexible, capabable, and ergonomic.</li>
<li><strong>More Batching/Instancing Improvements</strong>: Put skinned mesh data into storage buffers to enable instanced drawing of skinned mesh entities with the same mesh/skin/material. Put material data in the new GpuArrayBuffer to enable batching of draws of entities with the same mesh, material type, and textures, but different material data.</li>
<li><strong>GPU-Driven Rendering</strong>: We plan on driving rendering via the GPU by creating draw calls in compute shaders (on platforms that support it). We have <a href="https://github.com/bevyengine/bevy/pull/10164">experiments using meshlets</a> and plan to explore other approaches as well. This will involve putting textures into bindless texture arrays and putting meshes in one big buffer to avoid rebinds.</li>
<li><strong>Exposure Settings</strong>: Control <a href="https://github.com/bevyengine/bevy/pull/8407">camera exposure settings</a> to change the feel and mood of your renders!</li>
<li><strong>GPU Picking</strong>: <a href="https://github.com/bevyengine/bevy/pull/8784">Efficiently select objects</a> with pixel perfect accuracy on the GPU!</li>
<li><strong>Per-Object Motion Blur</strong>: <a href="https://github.com/bevyengine/bevy/pull/9924">Blur objects as they move</a> using their motion vectors</li>
<li><strong>UI Node Border Radius and Shadows</strong>: Support for <a href="https://github.com/bevyengine/bevy/pull/8973">border radius and shadows</a> in Bevy UI</li>
<li><strong>System Stepping</strong>: Debug your app by <a href="https://github.com/bevyengine/bevy/pull/8453">running systems step by step</a> for a given frame</li>
<li><strong>Automatic Sync Points</strong>: Support for <a href="https://github.com/bevyengine/bevy/pull/9822">automatically inserting sync points</a> between systems with dependencies, removing the need for manual insertion and resolving a common source of errors.</li>
<li><strong>Lightmap Support</strong>: Support for <a href="https://github.com/bevyengine/bevy/pull/10231">rendering pre-baked lightmaps</a></li>
</ul>
<h2 id="support-bevy">Support Bevy
<a href="#support-bevy">#</a>
</h2>
<p>Sponsorships help make our work on Bevy sustainable. If you believe in Bevy's mission, consider <a href="https://bevyengine.org/community/donate">sponsoring us</a> ... every bit helps!</p>
<p><a href="https://bevyengine.org/community/donate">Donate <img src="https://bevyengine.org/assets/heart.svg" alt="heart icon"></a></p>
<h2 id="contributors">Contributors
<a href="#contributors">#</a>
</h2>
<p>Bevy is made by a <a href="https://bevyengine.org/community/people/">large group of people</a>. A huge thanks to the 185 contributors that made this release (and associated docs) possible! In random order:</p>
<ul>
<li>@100-TomatoJuice</li>
<li>@525c1e21-bd67-4735-ac99-b4b0e5262290</li>
<li>@66OJ66</li>
<li>@A-Walrus</li>
<li>@Aceeri</li>
<li>@aevyrie</li>
<li>@aleksa2808</li>
<li>@alexmadeathing</li>
<li>@alice-i-cecile</li>
<li>@ameknite</li>
<li>@anarelion</li>
<li>@arendjr</li>
<li>@arsmilitaris</li>
<li>@awtterpip</li>
<li>@basilefff</li>
<li>@BeastLe9enD</li>
<li>@BrandonDyer64</li>
<li>@bravely-beep</li>
<li>@Braymatter</li>
<li>@bushrat011899</li>
<li>@Cactus-man</li>
<li>@cart</li>
<li>@cBournhonesque</li>
<li>@cbournhonesque-sc</li>
<li>@cevans-uk</li>
<li>@CGMossa</li>
<li>@ChristopherBiscardi</li>
<li>@ClayenKitten</li>
<li>@CleanCut</li>
<li>@coreh</li>
<li>@Cptn-Sherman</li>
<li>@CrumbsTrace</li>
<li>@cyqsimon</li>
<li>@d-bucur</li>
<li>@danchia</li>
<li>@denshika</li>
<li>@devil-ira</li>
<li>@DevinLeamy</li>
<li>@DGriffin91</li>
<li>@djeedai</li>
<li>@dmyyy</li>
<li>@doonv</li>
<li>@Dot32IsCool</li>
<li>@Dworv</li>
<li>@Elabajaba</li>
<li>@EmiOnGit</li>
<li>@ethereumdegen</li>
<li>@Feilkin</li>
<li>@fgrust</li>
<li>@FlippinBerger</li>
<li>@flisky</li>
<li>@floppyhammer</li>
<li>@floreal</li>
<li>@fornwall</li>
<li>@gardengim</li>
<li>@geieredgar</li>
<li>@GitGhillie</li>
<li>@HaNaK0</li>
<li>@hate</li>
<li>@hesiod</li>
<li>@hmeine</li>
<li>@horazont</li>
<li>@hymm</li>
<li>@IceSentry</li>
<li>@ickk</li>
<li>@ickshonpe</li>
<li>@IDEDARY</li>
<li>@iiYese</li>
<li>@ItsDoot</li>
<li>@jakobhellermann</li>
<li>@james-j-obrien</li>
<li>@james7132</li>
<li>@jancespivo</li>
<li>@jfaz1</li>
<li>@jimmcnulty41</li>
<li>@JMS55</li>
<li>@jnhyatt</li>
<li>@johanhelsing</li>
<li>@JoJoJet</li>
<li>@jpsikstus</li>
<li>@kamirr</li>
<li>@Kanabenki</li>
<li>@killercup</li>
<li>@konsolas</li>
<li>@kshitijaucharmal</li>
<li>@lewiszlw</li>
<li>@louis-le-cam</li>
<li>@Malax</li>
<li>@MalekiRe</li>
<li>@mamekoro</li>
<li>@ManevilleF</li>
<li>@maniwani</li>
<li>@MarkusTheOrt</li>
<li>@mattdm</li>
<li>@maxheyer</li>
<li>@mdickopp</li>
<li>@miketwenty1</li>
<li>@MinerSebas</li>
<li>@MJohnson459</li>
<li>@mnmaita</li>
<li>@mockersf</li>
<li>@MrGunflame</li>
<li>@MrGVSV</li>
<li>@nakedible</li>
<li>@ndarilek</li>
<li>@Neo-Zhixing</li>
<li>@nickrart</li>
<li>@nicoburns</li>
<li>@nicopap</li>
<li>@NiklasEi</li>
<li>@Nilirad</li>
<li>@NiseVoid</li>
<li>@NoahShomette</li>
<li>@nxsaken</li>
<li>@okwilkins</li>
<li>@OneFourth</li>
<li>@opstic</li>
<li>@ottah</li>
<li>@pablo-lua</li>
<li>@papow65</li>
<li>@pascualex</li>
<li>@paul-hansen</li>
<li>@pcwalton</li>
<li>@photex</li>
<li>@Pixelstormer</li>
<li>@PortalRising</li>
<li>@ptxmac</li>
<li>@Quicksticks-oss</li>
<li>@rafalh</li>
<li>@raffaeleragni</li>
<li>@RCoder01</li>
<li>@rdrpenguin04</li>
<li>@regnarock</li>
<li>@ricky26</li>
<li>@rj00a</li>
<li>@rlidwka</li>
<li>@robojeb</li>
<li>@robtfm</li>
<li>@rodolphito</li>
<li>@rparrett</li>
<li>@ryand67</li>
<li>@s-puig</li>
<li>@sadikkuzu</li>
<li>@sebosp</li>
<li>@SecretPocketCat</li>
<li>@Selene-Amanita</li>
<li>@Serverator</li>
<li>@ShadowMitia</li>
<li>@Shatur</li>
<li>@SIGSTACKFAULT</li>
<li>@SkiFire13</li>
<li>@skindstrom</li>
<li>@SludgePhD</li>
<li>@softmoth</li>
<li>@soqb</li>
<li>@SpecificProtagonist</li>
<li>@st0rmbtw</li>
<li>@StaffEngineer</li>
<li>@stepancheg</li>
<li>@superdump</li>
<li>@suravshresth</li>
<li>@SykikXO</li>
<li>@tadeohepperle</li>
<li>@tbillington</li>
<li>@teoxoy</li>
<li>@Testare</li>
<li>@tguichaoua</li>
<li>@TimJentzsch</li>
<li>@tormeh</li>
<li>@torsteingrindvik</li>
<li>@Trashtalk217</li>
<li>@tsujp</li>
<li>@Unarmed</li>
<li>@urben1680</li>
<li>@viridia</li>
<li>@VitalyAnkh</li>
<li>@Vrixyz</li>
<li>@wackbyte</li>
<li>@waywardmonkeys</li>
<li>@Wcubed</li>
<li>@wpederzoli</li>
<li>@ycysdf</li>
<li>@yrns</li>
<li>@ZacHarroldC5</li>
<li>@Zeenobit</li>
</ul>
<h2 id="full-changelog">Full Changelog
<a href="#full-changelog">#</a>
</h2>
<h3 id="a-ecs-a-diagnostics">A-ECS + A-Diagnostics
<a href="#a-ecs-a-diagnostics">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9950">Cache parallel iteration spans</a></li>
</ul>
<h3 id="a-ecs-a-scenes">A-ECS + A-Scenes
<a href="#a-ecs-a-scenes">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/10001">Make builder types take and return <code>Self</code></a></li>
</ul>
<h3 id="a-scenes">A-Scenes
<a href="#a-scenes">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9260">Move scene spawner systems to SpawnScene schedule</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9313">Add <code>SceneInstanceReady</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9451">Add <code>SpawnScene</code> to prelude</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9949">Finish documenting <code>bevy_scene</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9984">Only attempt to copy resources that still exist from scenes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10161">Correct Scene loader error description</a></li>
</ul>
<h3 id="a-tasks-a-diagnostics">A-Tasks + A-Diagnostics
<a href="#a-tasks-a-diagnostics">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9348">Fix doc warning in bevy_tasks</a></li>
</ul>
<h3 id="a-tasks">A-Tasks
<a href="#a-tasks">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/8750">elaborate on TaskPool and bevy tasks</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9485">Remove Resource and add Debug to TaskPoolOptions</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9851">Fix clippy lint in single_threaded_task_pool</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9881">Remove dependecies from bevy_tasks' README</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9626">Allow using async_io::block_on in bevy_tasks</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10026">add test for nested scopes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10008">Global TaskPool API improvements</a></li>
</ul>
<h3 id="a-audio-a-windowing">A-Audio + A-Windowing
<a href="#a-audio-a-windowing">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/10158">Application lifetime events (suspend audio on Android)</a></li>
</ul>
<h3 id="a-animation-a-transform">A-Animation + A-Transform
<a href="#a-animation-a-transform">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/8603">Add system parameter for computing up-to-date <code>GlobalTransform</code>s</a></li>
</ul>
<h3 id="a-transform">A-Transform
<a href="#a-transform">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9081">Update <code>GlobalTransform</code> on insertion</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9518">Add <code>Without&lt;Parent&gt;</code> filter to <code>sync_simple_transforms</code>' orphaned entities query</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9845">Fix ambiguities in transform example</a></li>
</ul>
<h3 id="a-app">A-App
<a href="#a-app">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9174">Add <code>track_caller</code> to <code>App::add_plugins</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9421">Remove redundant check for <code>AppExit</code> events in <code>ScheduleRunnerPlugin</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10173">fix typos in crates/bevy_app/src/app.rs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10173">fix typos in crates/bevy_app/src/app.rs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10195">fix run-once runners</a></li>
</ul>
<h3 id="a-ecs-a-app">A-ECS + A-App
<a href="#a-ecs-a-app">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9514">Add configure_schedules to App and Schedules to apply <code>ScheduleBuildSettings</code> to all schedules</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7728">Only run event systems if they have tangible work to do</a></li>
</ul>
<h3 id="a-rendering-a-gizmos">A-Rendering + A-Gizmos
<a href="#a-rendering-a-gizmos">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9129">Fix gizmo draw order in 2D</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9067">Fix gizmo line width issue when using perspective</a></li>
</ul>
<h3 id="a-rendering-a-diagnostics">A-Rendering + A-Diagnostics
<a href="#a-rendering-a-diagnostics">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9484">Include note of common profiling issue</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9596">Enhance many_cubes stress test use cases</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9360">GLTF loader: handle warning NODE_SKINNED_MESH_WITHOUT_SKIN</a></li>
</ul>
<h3 id="a-rendering-a-reflection">A-Rendering + A-Reflection
<a href="#a-rendering-a-reflection">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9222">Register <code>AlphaMode</code> type</a></li>
</ul>
<h3 id="a-windowing">A-Windowing
<a href="#a-windowing">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9083">Add option to toggle window control buttons</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9301">Fixed: Default window is now "App" instead of "Bevy App"</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9173">improve documentation relating to <code>WindowPlugin</code> and <code>Window</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7609">Improve <code>bevy_winit</code> documentation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7611">Change <code>WinitPlugin</code> defaults to limit game update rate when window is not visible</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9355">User controlled window visibility</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8855">Check cursor position for out of bounds of the window</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9697">Fix doc link in transparent_window example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9692">Wait before making window visible</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9684">don't create windows on winit StartCause::Init event</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9933">Fix the doc warning attribute and document remaining items for <code>bevy_window</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9991">Revert "macOS Sonoma (14.0) / Xcode 15.0 — Compatibility Fixes + Docs…</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9991">Revert "macOS Sonoma (14.0) / Xcode 15.0 — Compatibility Fixes + Docs…</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10020">Allow Bevy to start from non-main threads on supported platforms</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9826">Prevent black frames during startup</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10289">Slightly improve <code>CursorIcon</code> doc.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10358">Fix typo in window.rs</a></li>
</ul>
<h3 id="a-gizmos">A-Gizmos
<a href="#a-gizmos">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9175">Replace AHash with a good sequence for entity AABB colors</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9166">gizmo plugin lag bugfix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9183">Clarify immediate mode in <code>Gizmos</code> documentation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9101">Fix crash when drawing line gizmo with less than 2 vertices</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10074">Document that gizmo <code>depth_bias</code> has no effect in 2D</a></li>
</ul>
<h3 id="a-utils">A-Utils
<a href="#a-utils">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9587">change 'collapse_type_name' to retain enum types</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9551">bevy_derive: Fix <code>#[deref]</code> breaking other attributes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9638">Move default docs</a></li>
</ul>
<h3 id="a-rendering-a-assets">A-Rendering + A-Assets
<a href="#a-rendering-a-assets">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9992">Import the second UV map if present in glTF files.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10030">fix custom shader imports</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9982">Add <code>ImageSamplerDescriptor</code> as an image loader setting</a></li>
</ul>
<h3 id="a-ecs">A-ECS
<a href="#a-ecs">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9204">Add the Has world query to bevy_ecs::prelude</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8854">Simplify parallel iteration methods</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8246">Fix safety invariants for <code>WorldQuery::fetch</code> and simplify cloning</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9293">Derive debug for ManualEventIterator</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9291">Add <code>EntityMap::clear</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9312">Add a paragraph to the lifetimeless module doc</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9269">opt-out <code>multi-threaded</code> feature flag</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9253">Fix <code>ambiguous_with</code> breaking run conditions</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9366">Add <code>RunSystem</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9418">Add <code>replace_if_neq</code> to <code>DetectChangesMut</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9385">Adding <code>Copy, Clone, Debug</code> to derived traits of <code>ExecutorKind</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9431">Fix incorrect documentation link in <code>DetectChangesMut</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9460">Implement <code>Debug</code> for <code>UnsafeWorldCell</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9581">Relax In/Out bounds on impl Debug for dyn System</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9588">Improve various <code>Debug</code> implementations</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9576">Make <code>run_if_inner</code> public and rename to <code>run_if_dyn</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9579">Refactor build_schedule and related errors</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8526">Add <code>system.map(...)</code> for transforming the output of a system</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9306">Reorganize <code>Events</code> and <code>EventSequence</code> code</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9461">Replaced EntityMap with HashMap</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9577">clean up configure_set(s) erroring</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9589">Relax more <code>Sync</code> bounds on <code>Local</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9592">Rename <code>ManualEventIterator</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9604">Replaced <code>EntityCommand</code> Implementation for <code>FnOnce</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9542">Add a variant of <code>Events::update</code> that returns the removed events</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9600">Move schedule name into <code>Schedule</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9617">port old ambiguity tests over</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9631">Refactor <code>EventReader::iter</code> to <code>read</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9648">fix ambiguity reporting</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9650">Fix anonymous set name stack overflow</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9463">Fix unsoundness in <code>QueryState::is_empty</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9659">Add panicking helpers for getting components from <code>Query</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9247">Replace <code>IntoSystemSetConfig</code> with <code>IntoSystemSetConfigs</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9686">Moved <code>get_component(_unchecked_mut)</code> from <code>Query</code> to <code>QueryState</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9744">Fix naming on "tick" Column and ComponentSparseSet methods</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9749">Clarify a comment in Option WorldQuery impl</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9801">Return a boolean from <code>set_if_neq</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9778">Rename RemovedComponents::iter/iter_with_id to read/read_with_id</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9833">Remove some old references to CoreSet</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9835">Use single threaded executor for archetype benches</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9839">docs: Improve some <code>ComponentId</code> doc cross-linking.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8963">One Shot Systems</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9836">Add mutual exclusion safety info on filter_fetch</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9844">add try_insert to entity commands</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9464">Improve codegen for world validation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9958">docs: Use intradoc links for method references.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9945">Remove States::variants and remove enum-only restriction its derive</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9912"><code>as_deref_mut()</code> method for Mut-like types</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9959">refactor: Change <code>Option&lt;With&lt;T&gt;&gt;</code> query params to <code>Has&lt;T&gt;</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9741">Hide <code>UnsafeWorldCell::unsafe_world</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9825">Add a public API to ArchetypeGeneration/Id</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9895">Ignore ambiguous components or resources</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10124">Use chain in breakout example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10211"><code>ParamSet</code>s containing non-send parameters should also be non-send</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7762">Replace all labels with interned labels</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10294">Fix outdated comment referencing CoreSet</a></li>
</ul>
<h3 id="a-rendering-a-math">A-Rendering + A-Math
<a href="#a-rendering-a-math">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9705">derive Clone/Copy/Debug trio for shape::Cylinder</a></li>
</ul>
<h3 id="a-ui">A-UI
<a href="#a-ui">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9133">Fix for vertical text bounds and alignment</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9099">UI extraction order fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9259">Update text example using default font</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9295">bevy_ui: fix doc formatting for some Style fields</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9285">Remove the <code>With&lt;Parent&gt;</code> query filter from <code>bevy_ui::render::extract_uinode_borders</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9345">Fix incorrent doc comment for the set method of <code>ContentSize</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9344">Improved text widget doc comments</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9346">Change the default for the <code>measure_func</code> field of <code>ContentSize</code> to None.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9406">Unnecessary line in game_menu example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9444">Change <code>UiScale</code> to a tuple struct</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9481">Remove unnecessary doc string</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9529">Add some missing pub in ui_node</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9479">UI examples clean up</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9548"><code>round_ties_up</code> fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9539">fix incorrect docs for <code>JustifyItems</code> and <code>JustifySelf</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9566">Added <code>Val::ZERO</code> Constant</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9111">Cleanup some bevy_text pipeline.rs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9486">Make <code>GridPlacement</code>'s fields non-zero and add accessor functions.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9609">Remove <code>Val</code>'s <code>try_*</code> arithmetic methods</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9404">UI node bundle comment fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9621">Do not panic on non-UI child of UI entity</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9568">Rename <code>Val</code> <code>evaluate</code> to <code>resolve</code> and implement viewport variant support</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9640">Change <code>Urect::width</code> &amp; <code>Urect::height</code> to be const</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7794"><code>TextLayoutInfo::size</code> should hold the drawn size of the text, and not a scaled value.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8856"><code>impl From&lt;String&gt;</code> and <code>From&lt;&amp;str&gt;</code> for <code>TextSection</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9733">Remove z-axis scaling in <code>extract_text2d_sprite</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9739">Fix doc comments for align items</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9781">Add tests to <code>bevy_ui::Layout</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9795">examples: Remove unused doc comments.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9785">Add missing <code>bevy_text</code> feature attribute to <code>TextBundle</code> from impl</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9818">Move <code>Val</code> into <code>geometry</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9820">Derive Serialize and Deserialize for UiRect</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9753"><code>ContentSize</code> replacement fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9784">Round UI coordinates after scaling</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9637">Have a separate implicit viewport node per root node + make viewport node <code>Display::Grid</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9879">Rename <code>num_font_atlases</code>  to <code>len</code>.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9935">Fix documentation for ui node Style</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9951"><code>text_wrap_debug</code> scale factor commandline args</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9923">Store both the rounded and unrounded node size in Node</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9989">Various accessibility API updates.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9931">UI node outlines</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10044">Implement serialize and deserialize for some UI types</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10189">Tidy up UI node docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10230">Remove unused import warning when default_font feature is disabled</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10271">Fix crash with certain right-aligned text</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9873">Add some more docs for bevy_text.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10295">Implement <code>Neg</code> for <code>Val</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10297"><code>normalize</code> method for <code>Rect</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10345">don't Implement <code>Display</code> for <code>Val</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10252">[bevy_text] Document what happens when font is not specified</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10303">Update UI alignment docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9853">Add stack index to <code>Node</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10345">don't Implement <code>Display</code> for <code>Val</code></a></li>
</ul>
<h3 id="a-animation">A-Animation
<a href="#a-animation">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9162">Fix doc typo</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9392">Expose <code>animation_clip</code> paths</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9338">animations: convert skinning weights from unorm8x4 to float32x4</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9002">API updates to the AnimationPlayer</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9351">only take up to the max number of joints</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9407">check root node for animations</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9927">Fix morph interpolation</a></li>
</ul>
<h3 id="a-pointers">A-Pointers
<a href="#a-pointers">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9068">Put <code>#[repr(transparent)]</code> attr to bevy_ptr types</a></li>
</ul>
<h3 id="a-assets-a-reflection">A-Assets + A-Reflection
<a href="#a-assets-a-reflection">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/8768">reflect: <code>TypePath</code> part 2</a></li>
</ul>
<h3 id="a-rendering-a-hierarchy">A-Rendering + A-Hierarchy
<a href="#a-rendering-a-hierarchy">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/10275">default inherited visibility when parent has invalid components</a></li>
</ul>
<h3 id="a-ecs-a-tasks">A-ECS + A-Tasks
<a href="#a-ecs-a-tasks">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9814">Round up for the batch size to improve par_iter performance</a></li>
</ul>
<h3 id="a-reflection-a-utils">A-Reflection + A-Utils
<a href="#a-reflection-a-utils">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9956">Moved <code>fq_std</code> from <code>bevy_reflect_derive</code> to <code>bevy_macro_utils</code></a></li>
</ul>
<h3 id="a-reflection-a-math">A-Reflection + A-Math
<a href="#a-reflection-a-math">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9191">Add reflect impls to IRect and URect</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9281">Implement reflect trait on new glam types (I64Vec and U64Vec)</a></li>
</ul>
<h3 id="a-hierarchy">A-Hierarchy
<a href="#a-hierarchy">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/8980">Prevent setting parent as itself</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9871">Add as_slice to parent</a></li>
</ul>
<h3 id="a-input">A-Input
<a href="#a-input">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9446">input: allow multiple gamepad inputs to be registered for one button in one frame</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9468">Bevy Input Docs : lib.rs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9469">Bevy Input Docs : gamepad.rs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9008">Add <code>GamepadButtonInput</code> event</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9467">Bevy Input Docs : the modules</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10010">Finish documenting <code>bevy_gilrs</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10090">Change <code>AxisSettings</code> livezone default</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9913">docs: Update input_toggle_active example</a></li>
</ul>
<h3 id="a-input-a-windowing">A-Input + A-Windowing
<a href="#a-input-a-windowing">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9456">Fix <code>Window::set_cursor_position</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9657">Change <code>Window::physical_cursor_position</code> to use the physical size of the window</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9662">Fix check that cursor position is within window bounds</a></li>
</ul>
<h3 id="a-ecs-a-reflection">A-ECS + A-Reflection
<a href="#a-ecs-a-reflection">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/8895">implement insert and remove reflected entity commands</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9419">Allow disjoint mutable world access via <code>EntityMut</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9742">Implement <code>Reflect</code> for <code>State&lt;S&gt;</code> and <code>NextState&lt;S&gt;</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9812"><code>#[derive(Clone)]</code> on <code>Component{Info,Descriptor}</code></a></li>
</ul>
<h3 id="a-math">A-Math
<a href="#a-math">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9159">Rename bevy_math::rects conversion methods</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9387">Add glam swizzles traits to prelude</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9554">Rename <code>Bezier</code> to <code>CubicBezier</code> for clarity</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9630">Add a method to compute a bounding box enclosing a set of points</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10206">re-export <code>debug_glam_assert</code> feature</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10299">Add <code>Cubic</code> prefix to all cubic curve generators</a></li>
</ul>
<h3 id="a-build-system">A-Build-System
<a href="#a-build-system">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9252">only check for bans if the dependency tree changed</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9372">Slightly better message when contributor modifies examples template</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9489">switch CI jobs between windows and linux for example execution</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9612">Check for bevy_internal imports in CI</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9665">Fix running examples on linux in CI</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9759">Bump actions/checkout from 2 to 4</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9794">doc: Remove reference to <code>clippy::manual-strip</code>.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9872">Only run some workflows on the bevy repo (not forks)</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9936">run mobile tests on more devices / OS versions</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9796">Allow <code>clippy::type_complexity</code> in more places.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9220">hacks for running (and screenshotting) the examples in CI on a github runner</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10151">make CI less failing on cargo deny bans</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10148">add test on Android 14 / Pixel 8</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10286">Use <code>clippy::doc_markdown</code> more.</a></li>
</ul>
<h3 id="a-diagnostics">A-Diagnostics
<a href="#a-diagnostics">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9390">Cache System Tracing Spans</a></li>
</ul>
<h3 id="a-rendering-a-animation">A-Rendering + A-Animation
<a href="#a-rendering-a-animation">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9846">Use a seeded rng for custom_skinned_mesh example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9899">Move skin code to a separate module</a></li>
</ul>
<h3 id="a-core">A-Core
<a href="#a-core">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/10111">Change visibility of <code>bevy::core::update_frame_count</code> to <code>pub</code></a></li>
</ul>
<h3 id="a-reflection">A-Reflection
<a href="#a-reflection">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9102">Fix typo in NamedTypePathDef</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8887">Refactor <code>path</code> module of <code>bevy_reflect</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9048">Refactor parsing in bevy_reflect path module</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9322">bevy_reflect: Fix combined field attributes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9140">bevy_reflect: Opt-out attribute for <code>TypePath</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9364">Add reflect path parsing benchmark</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9373">Make it so <code>ParsedPath</code> can be passed to GetPath</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9371">Make the reflect path parser utf-8-unaware</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9165">bevy_scene: Add <code>ReflectBundle</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9743">Fix comment in scene example <code>FromResources</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9807">Remove TypeRegistry re-export rename</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9748">Provide getters for fields of ReflectFromPtr</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9963">Add TypePath to the prelude</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9315">Improve TypeUuid's derive macro error messages</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10068">Migrate <code>Quat</code> reflection strategy from "value" to "struct"</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10103">bevy_reflect: Fix dynamic type serialization</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7575">bevy_reflect: Fix ignored/skipped field order</a></li>
</ul>
<h3 id="a-rendering-a-assets-a-reflection">A-Rendering + A-Assets + A-Reflection
<a href="#a-rendering-a-assets-a-reflection">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9779">Implement <code>Reflect</code> for <code>Mesh</code></a></li>
</ul>
<h3 id="a-ecs-a-time">A-ECS + A-Time
<a href="#a-ecs-a-time">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/10179">add on_real_time_timer run condition</a></li>
</ul>
<h3 id="a-ecs-a-hierarchy">A-ECS + A-Hierarchy
<a href="#a-ecs-a-hierarchy">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/10311">Added 'clear_children' and 'replace_children' methods to BuildWorldChildren to be consistent with BuildChildren.</a></li>
</ul>
<h3 id="a-audio">A-Audio
<a href="#a-audio">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9225">Added Pitch as an alternative sound source</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9332">update documentation on AudioSink</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9336">audio sinks don't need their custom drop anymore</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9480">Clarify what happens when setting the audio volume</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9800">More ergonomic spatial audio</a></li>
</ul>
<h3 id="a-rendering-a-ui">A-Rendering + A-UI
<a href="#a-rendering-a-ui">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9103">Remove out-of-date paragraph in <code>Style::border</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9237">Revert "Fix UI corruption for AMD gpus with Vulkan (#9169)"</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9237">Revert "Fix UI corruption for AMD gpus with Vulkan (#9169)"</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9712"><code>many_buttons</code> enhancements</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10078">Fix UI borders</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9610">UI batching Fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9506">Add UI Materials</a></li>
</ul>
<h3 id="a-ecs-a-reflection-a-pointers">A-ECS + A-Reflection + A-Pointers
<a href="#a-ecs-a-reflection-a-pointers">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9194">add <code>MutUntyped::map_unchanged</code></a></li>
</ul>
<h3 id="no-area-label">No area label
<a href="#no-area-label">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9090">Fix typos throughout the project</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9106">Bump Version after Release</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9144">fix <code>clippy::default_constructed_unit_structs</code> and trybuild errors</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9128">delete code deprecated in 0.11</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9142">Drain <code>ExtractedUiNodes</code> in <code>prepare_uinodes</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9168">example showcase - pagination and can build for WebGL2</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9193">example showcase: switch default api to webgpu</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9207">Add some more helpful errors to BevyManifest when it doesn't find Cargo.toml</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9219">Fix path reference to contributors example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9223">replace parens with square brackets when referencing _mut on <code>Query</code> docs #9200</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9229">use AutoNoVsync in stress tests</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9249">bevy_render: Remove direct dep on wgpu-hal.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9276">Fixed typo in line 322</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9326">custom_material.vert: gl_InstanceIndex includes gl_BaseInstance</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9329">fix typo in a link - Mesh docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9320">Improve font size related docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9399">Fix gamepad viewer being marked as a non-wasm example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9154">Rustdoc: Scrape examples</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9388">enable multithreading on benches</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9370">webgl feature renamed to webgl2</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9427">Example Comment Typo Fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9448">Fix shader_instancing example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9436">Update tracy-client requirement from 0.15 to 0.16</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9547">fix bevy imports. windows_settings.rs example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9562">Fix CI for Rust 1.72</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9598">Swap TransparentUi to use a stable sort</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9619">Replace uses of <code>entity.insert</code> with tuple bundles in <code>game_menu</code> example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9583">Remove <code>IntoIterator</code> impl for <code>&amp;mut EventReader</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9629">remove VecSwizzles imports</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9653">Fix erronenous glam version</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9646">Fixing some doc comments</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9675">Explicitly make instance_index vertex output @interpolate(flat)</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9672">Fix some nightly warnings</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9666">Use default resolution for viewport_debug example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9704">Refer to "macOS", not "macOS X".</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9720">Remove useless single tuples and trailing commas</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10012">Fix some warnings shown in nightly</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9769">Fix animate_scale scaling z value in text2d example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9803">"serialize" feature no longer enables the optional "bevy_scene" feature if it's not enabled from elsewhere</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9823">fix deprecation warning in bench</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9829">don't enable filesystem_watcher when building for WebGPU</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9840">Improve doc formatting.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9834">Fix the <code>clippy::explicit_iter_loop</code> lint</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9842">Wslg docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9909">skybox.wgsl: Fix precision issues</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9922">Fix typos.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9900">Add link to <code>Text2dBundle</code> in <code>TextBundle</code> docs.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9934">Fix some typos</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9965">Fix typos</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9545">Replaced <code>parking_lot</code> with <code>std::sync</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9824">Add inline(never) to bench systems</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9937">Android: handle suspend / resume</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10012">Fix some warnings shown in nightly</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10035">Updates for rust 1.73</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9282">Improve selection of iOS device in mobile example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10058">Update toml_edit requirement from 0.19 to 0.20</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10070">foxes shouldn't march in sync</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10092">Fix tonemapping test patten</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10079">Removed <code>once_cell</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10163">Improve WebGPU unstable flags docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10184">shadow_biases: Support different PCF methods</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10185">shadow_biases: Support moving the light position and resetting biases</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10238">Update async-io requirement from 1.13.0 to 2.0.0</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10264">few fmt tweaks</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10240">Derive Error for more error types</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10356">Allow AccessKit to react to WindowEvents before they reach the engine</a></li>
</ul>
<h3 id="a-rendering-a-build-system">A-Rendering + A-Build-System
<a href="#a-rendering-a-build-system">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9331">Improve execution of examples in CI</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10150">make deferred_rendering simpler to render for CI</a></li>
</ul>
<h3 id="a-meta">A-Meta
<a href="#a-meta">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9516">Remove the bevy_dylib feature</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9993">add and fix shields in Readmes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10171">Added section for contributing and links for issues and PRs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10174">Fix orphaned contributing paragraph</a></li>
</ul>
<h3 id="a-assets-a-animation">A-Assets + A-Animation
<a href="#a-assets-a-animation">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9867">Handle empty morph weights when loading gltf</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9998">Finish documenting <code>bevy_gltf</code></a></li>
</ul>
<h3 id="a-editor-a-diagnostics">A-Editor + A-Diagnostics
<a href="#a-editor-a-diagnostics">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9679">Add <code>DiagnosticsStore::iter_mut</code></a></li>
</ul>
<h3 id="a-time">A-Time
<a href="#a-time">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9290">Fix timers.rs documentation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9428">Add missing documentation to <code>bevy_time</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9939">Clarify behaviour of <code>Timer::finished()</code> for repeating timers</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9981">ignore time channel error</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8964">Unify <code>FixedTime</code> and <code>Time</code> while fixing several problems</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10145">Time: demote delta time clamping warning to debug</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10152">fix typo in time.rs example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10204">Example time api</a></li>
</ul>
<h3 id="a-rendering-a-ecs">A-Rendering + A-ECS
<a href="#a-rendering-a-ecs">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9092">Update <code>Camera</code>'s <code>Frustum</code> only when its <code>GlobalTransform</code> or <code>CameraProjection</code> changed</a></li>
</ul>
<h3 id="a-ui-a-reflection">A-UI + A-Reflection
<a href="#a-ui-a-reflection">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9677">bevy_ui: reflect missing types</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9919">register <code>TextLayoutInfo</code> and <code>TextFlags</code> type.</a></li>
</ul>
<h3 id="a-build-system-a-assets">A-Build-System + A-Assets
<a href="#a-build-system-a-assets">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9737">Increase iteration count for asset tests</a></li>
</ul>
<h3 id="a-rendering">A-Rendering
<a href="#a-rendering">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9093">Clarify that wgpu is based on the webGPU API</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9085">Return URect instead of (UVec2, UVec2) in Camera::physical_viewport_rect</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9186">fix module name for AssetPath shaders</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8204">Add GpuArrayBuffer and BatchedUniformBuffer</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9230">Update <code>bevy_window::PresentMode</code> to mirror <code>wgpu::PresentMode</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9052">Stop using unwrap in the pipelined rendering thread</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9158">Fix panic whilst loading UASTC encoded ktx2 textures</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9288">Document <code>ClearColorConfig</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9254">Use GpuArrayBuffer for MeshUniform</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9297">Update docs for scaling_mode field of Orthographic projection</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9311">Fix shader_material_glsl example after #9254</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9061">Improve <code>Mesh</code> documentation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9084">Include tone_mapping fn in tonemapping_test_patterns</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9310">Extend the default render range of 2D camera</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8841">Document when Camera::viewport_to_world and related methods return None</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9343">include toplevel shader-associated defs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9361">Fix post_processing example on webgl2</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9127">use ViewNodeRunner in the post_processing example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9383">Work around naga/wgpu WGSL instance_index -&gt; GLSL gl_InstanceID bug on WebGL2</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9155">Fix non-visible motion vector text in shader prepass example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9396">Use bevy crates imports instead of bevy internal. post_processing example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9327">Make Anchor Copy</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9394">Move window.rs to window/mod.rs in bevy_render</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9416">Reduce the size of MeshUniform to improve performance</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9462">Fix temporal jitter bug</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9470">Fix gizmo lines deforming or disappearing when partially behind the camera</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9482">Make WgpuSettings::default() check WGPU_POWER_PREF</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9505">fix wireframe after MeshUniform size reduction</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9513">fix shader_material_glsl example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9201">[RAINBOW EFFECT] Added methods to get HSL components from Color</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9555">ktx2: Fix Rgb8 -&gt; Rgba8Unorm conversion</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9236">Reorder render sets, refactor bevy_sprite to take advantage</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9136">Improve documentation relating to <code>Frustum</code> and <code>HalfSpace</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9878">Revert "Update defaults for OrthographicProjection (#9537)"</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9613">Remove unused regex dep from bevy_render</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9497">Split <code>ComputedVisibility</code> into two components to allow for accurate change detection and speed up visibility propagation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9597">Use instancing for sprites</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9674">Enhance bevymark</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9669">Remove redundant math in tonemapping.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9673">Improve <code>SpatialBundle</code> docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9565">Cache depth texture based on usage</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9699">warn and min for different vertex count</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9611">default 16bit rgb/rgba textures to unorm instead of uint</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10031">Fix TextureAtlasBuilder padding</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7179">Add example for <code>Camera::viewport_to_world</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9734">Fix wireframe for skinned/morphed meshes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8862">generate indices for Mikktspace</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8859">invert face culling for negatively scaled gltf nodes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9830">renderer init: create a detached task only on wasm, block otherwise</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9850">Cleanup <code>visibility</code> module</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9849">Use a single line for of large binding lists</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9861">Fix a typo in <code>DirectionalLightBundle</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9878">Revert "Update defaults for OrthographicProjection (#9537)"</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9870">Refactor rendering systems to use <code>let-else</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9882">Use radsort for Transparent2d PhaseItem sorting</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9685">Automatic batching/instancing of draw commands</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9865">Directly copy data into uniform buffers</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9925">Allow other plugins to create renderer resources</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9903">Use EntityHashMap&lt;Entity, T&gt; for render world entity storage for better performance</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9966">Parallelize extract_meshes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9990">Fix comment grammar</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7328">Allow overriding global wireframe setting.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10022">wireframes: workaround for DX12</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10023">Alternate wireframe override api</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10031">Fix TextureAtlasBuilder padding</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9941">fix example mesh2d_manual</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8006">PCF For DirectionalLight/SpotLight Shadows</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10002">Refactor the render instance logic in #9903 so that it's easier for other components to adopt.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10051">Fix 2d_shapes and general 2D mesh instancing</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10053">fix webgl2 crash</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9614">fix orthographic cluster aabb for spotlight culling</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10056">Add consuming builder methods for more ergonomic <code>Mesh</code> creation</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9302">wgpu 0.17</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/5314">use <code>Material</code> for wireframes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10080">Extract common wireframe filters in type alias</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9258">Deferred Renderer</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/5303">Configurable colors for wireframe</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10065">chore: Renamed RenderInstance trait to ExtractInstance</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10105">pbr shader cleanup</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10100">Fix text2d view-visibility</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10109">Allow optional extraction of resources from the main world</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10117">ssao use unlit_color instead of white</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10128">Fix missing explicit lifetime name for copy_deferred_lighting_id name</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10132">Fixed mod.rs in rendering to support Radeon Cards</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9025">Explain usage of prepass shaders in docs for <code>Material</code> trait</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10142">Better link for prepare_windows docs</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10143">Improve linking within <code>RenderSet</code> docs.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10144">Fix unlit missing parameters</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10136"><code>*_PREPASS</code> Shader Def Cleanup</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10160">check for any prepass phase</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/7820">allow extensions to StandardMaterial</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10168">array_texture example: use new name of pbr function</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10191">chore: use ExtractComponent derive macro for EnvironmentMapLight and FogSettings</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10156">Variable <code>MeshPipeline</code> View Bind Group Layout</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10180">update shader imports</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9694">Bind group entries</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10222">Detect cubemap for dds textures</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10178">Fix alignment on ios simulator</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10221">Add convenient methods for Image</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10182">Use “specular occlusion” term to consistently extinguish fresnel on Ambient and Environment Map lights</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10226">Fix fog color being inaccurate</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10227">Replace all usages of texture_descritor.size.* with the helper methods</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9726">View Transformations</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10249">fix deferred example fog values</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10251">WebGL2: fix import path for unpack_unorm3x4_plus_unorm_20_</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9847">Use wildcard imports in bevy_pbr</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10259">Make mesh attr vertex count mismatch warn more readable</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10254">Image Sampler Improvements</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10276">Fix sampling of diffuse env map texture with non-uniform control flow</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10253">Log a warning when the <code>tonemapping_luts</code> feature is disabled but required for the selected tonemapper.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10200">Smaller TAA fixes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10270">Truncate attribute buffer data rather than attribute buffers</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10304">Fix deferred lighting pass values not all working on M1 in WebGL2</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10306">Add frustum to shader View</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10326">Fix handling of <code>double_sided</code> for normal maps</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10310">Add helper function to determine if color is transparent</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8015"><code>StandardMaterial</code> Light Transmission</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10330">double sided normals: fix apply_normal_mapping calls</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10196">Combine visibility queries in check_visibility_system</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10341">Make VERTEX_COLORS usable in prepass shader, if available</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10223">allow DeferredPrepass to work without other prepass markers</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10346">Increase default normal bias to avoid common artifacts</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9226">Make <code>DirectionalLight</code> <code>Cascades</code> computation generic over <code>CameraProjection</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10339">Update default <code>ClearColor</code> to better match Bevy's branding</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10360">Fix gizmo crash when prepass enabled</a></li>
</ul>
<h3 id="a-build-system-a-meta">A-Build-System + A-Meta
<a href="#a-build-system-a-meta">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9994">Fixed: README.md</a></li>
</ul>
<h3 id="a-assets">A-Assets
<a href="#a-assets">#</a>
</h3>
<ul>
<li><a href="https://github.com/bevyengine/bevy/pull/9105">doc(asset): fix asset trait example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9120">Add <code>GltfLoader::new</code>.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9132">impl <code>From&lt;&amp;AssetPath&gt;</code> for <code>HandleId</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9429">allow asset loader pre-registration</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9453">fix asset loader preregistration for multiple assets</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9493">Fix point light radius</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9553">Add support for KHR_materials_emissive_strength</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9490">Fix panic when using <code>.load_folder()</code> with absolute paths</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/8624">Bevy Asset V2</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9716">create imported asset directory if needed</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9729">Copy on Write AssetPaths</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9756">Asset v2: Asset path serialization fix</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9767">don't ignore some EventKind::Modify</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9752">Manual "Reflect Value" AssetPath impl to fix dynamic linking</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9961">Fix unused variable warning for simple AssetV2 derives</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9974">Remove monkey.gltf</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9757">Update notify-debouncer-full requirement from 0.2.0 to 0.3.1</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10003">Removed <code>anyhow</code></a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9885">Multiple Asset Sources</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10119">Make loading warning for no file ext more descriptive</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10121">Fix load_folder for non-default Asset Sources</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10123">only set up processed source if asset plugin is not unprocessed</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9736">Hot reload labeled assets whose source asset is not loaded</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9751">Return an error when loading non-existent labels</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10197">remove unused import on android</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10202">Log an error when registering an AssetSource after AssetPlugin has been built</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10186">Add note about asset source register order</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10194">Add <code>asset_processor</code> feature and remove AssetMode::ProcessedDev</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10217">Implement source into Display for AssetPath</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10208">assets: use blake3 instead of md5</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10262">Reduce noise in asset processing example</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9528">Adding AssetPath::resolve() method.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/9804">Assets: fix first hot reloading</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10198">Non-blocking load_untyped using a wrapper asset</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10210">Reuse and hot reload folder handles</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10279">Additional AssetPath unit tests.</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10352">Corrected incorrect doc comment on read_asset_bytes</a></li>
<li><a href="https://github.com/bevyengine/bevy/pull/10312">support file operations in single threaded context</a></li>
</ul>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NewPipe – The lightweight YouTube experience for Android (115 pts)]]></title>
            <link>https://newpipe.net/</link>
            <guid>38144400</guid>
            <pubDate>Sat, 04 Nov 2023 19:38:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newpipe.net/">https://newpipe.net/</a>, See on <a href="https://news.ycombinator.com/item?id=38144400">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                
                
                
                <div id="services">
                    <h3>Supported Services</h3>
                    <div>
                        <div id="service-youtube">
                            <p>YouTube</p>
                            <p>
                                YouTube is one of the most popular video and live streaming platforms, including music, news, gaming and much more.
                            </p>
                            <p><a href="https://youtube.com/">visit service website</a>
                        </p></div>

                        <div id="service-peertube">
                            <!--<div class="service-logo"><img src="/img/peertube-brand.png" alt="PeerTube" class="img-responsive"/></div>-->
                            <p>PeerTube</p>
                            <p>
                                PeerTube is a decentralized video platform.<br>
                                Any PeerTube instance can be added to NewPipe.
                            </p>
                            <p><a href="https://joinpeertube.org/">visit service website</a>
                        </p></div>

                        

                        <div id="service-bandcamp">
                            <!--<div class="service-logo"></div>-->
                            <p>Bandcamp</p>
                            <p>
                                Bandcamp is an artist-friendly platform for sharing music.<br>
                                It offers user-friendly DRM-free downloads.
                            </p>
                            <p><a href="https://bandcamp.com/">visit service website</a>
                        </p></div>

                        

                        

                        
                    </div>
                </div>

                

                <!-- User Voices -->
                <div id="user-voices">
                    <h3>What other people think</h3>
                    <div id="user-voices-carousel" data-ride="carousel" data-interval="6000">

                        <!-- Wrapper for slides -->
                        <div role="listbox">
                            
                            <div>
                                
                                <p>
                                    <a href="https://newpipe.net/blog/pinned/NewPipe-needs-feedback/#isso-12">
                                        Neil Simpson
                                    </a>
                                </p>
                                <p>Such a great app - it is probably the app I use most on my phone!</p>
                            </div>
                            
                            <div>
                                
                                <p>
                                    <a href="https://newpipe.net/blog/pinned/NewPipe-needs-feedback/#isso-16">
                                        Arthur Reeder
                                    </a>
                                </p>
                                <p>NewPipe is one of the best applications on mobile today.</p>
                            </div>
                        </div>

                        <!-- Indicators -->
                        <ol>
                            <li data-target="#user-voices-carousel" data-slide-to="0"></li>
                            <li data-target="#user-voices-carousel" data-slide-to="1"></li>
                            <li data-target="#user-voices-carousel" data-slide-to="2"></li>
                            <li data-target="#user-voices-carousel" data-slide-to="3"></li>
                        </ol>

                        <!-- Controls: not displayed but needed to get preventJumpingPage() working
                             Pausing the Carousel won't work without controls. Don't ask me why :)
                         -->
                        <p><a href="#user-voices-carousel" role="button" data-slide="prev">
                            
                            <span>Previous</span>
                        </a>
                        <a href="#user-voices-carousel" role="button" data-slide="next">
                            
                            <span>Next</span>
                        </a>

                    </p></div>
                </div>

                <!-- Download -->
                <p id="download">
                    <h3>Get NewPipe</h3>
                </p>

                <div id="download1">
                        <div id="download1-direct-download">
                                <p><img src="https://newpipe.net/img/logo_app.svg" alt="NewPipe icon" loading="lazy">
                                </p>
                                <p>
                                    Android 5+
                                </p>
                                
                            </div>
                        <div id="download1-apk-info">
                                <p>
                                    <h4>APK Info</h4>
                                </p>
                                <div>
                                    <p>Hash sum: <span data-newpipe-api="flavors.newpipe.hash_type">hashing algorithm not available</span>
                                        <code data-newpipe-api="flavors.newpipe.hash">hash sum not available</code>
                                    </p>
                                    <p>
                                    Signing key:
                                        <code>B0:2E:90:7C:1C:D6:FC:57:C3:35:F0:88:D0:8F:50:5F:94:E4:D2:15</code>
                                    </p>
                                </div>
                            </div>
                        <div id="download1-release-highlights">
                                <p>
                                    <h4>Release Highlights</h4>
                                </p>
                                <div id="download-info-changelog">
                                        <ul>
    <li>Support for searching for playlists and channels on PeerTube</li>
    <li>Subscriber count below channel name on video details page</li>
    <li>Copy hashtags/URLs in the video description with long pressing now</li>
    <li>New Appearance settings: Card view for videos in lists</li>
    <li>Handle duplicate streams on playlist creation</li>
    <li>UI improvements</li>
    <li>Multiple fixes</li>
</ul>
                                        <p><a href="https://newpipe.net/blog/pinned/release/newpipe-0.25.0+1/">Blog post</a></p>
                                    </div>
                            </div>
                        <div id="download1-fdroid-newpipe-repo">
                                    <p><a href="https://archive.newpipe.net/fdroid/repo/?fingerprint=E2402C78F9B97C6C89E97DB914A2751FDA1D02FE2039CC0897A462BDB57E7501">
                                            <img src="https://newpipe.net/img/fdroid-repo-qrcode.svg" alt="Link to our F-Droid repo">
                                        </a>
                                    </p>
                                </div>
                        <div id="download1-fdroid">
                            <p><a href="https://f-droid.org/"><img src="https://newpipe.net/img/fdroid-logo.svg" alt="F-Droid logo"> F-Droid</a> is a trusted catalogue of Free and Open Source applications for Android.</p>
                            <p>Install the F-Droid app to get notified about updates. It enables you to download and update them too.</p>
                            <div>
                                <p>If you install NewPipe via the default F-Droid repo, updates for NewPipe might take their time to arrive for you. If you want to use our own repository, check out the next item in this slideshow.</p>
                                <p><a href="https://f-droid.org/packages/org.schabi.newpipe/" target="_blank">
                                    <img src="https://newpipe.net/img/f-droid.svg" alt="get it on F-Droid">
                                </a>
                            </p></div>
                            <p><a href="https://f-droid.org/en/about/#terms-etc">F-Droid respects your privacy. They don’t track you, or your device.</a><br>
                                We would like to thank them for providing their services in this way.
                            </p>
                        </div>
                        <div id="download1-installation-help">
                                <p>
                                    <h4>Need help?</h4>
                                </p>
                                <div id="download-info-help">
                                        <ul>
                                            <li>Did you enable unknown sources?</li>
                                            <li>Do you have problems updating?</li>
                                        </ul>
                                        <p>
                                            <!--<a href="#" class="button button-small action grey">Read more</a>-->
                                            <a href="https://newpipe.net/FAQ/install/">First steps</a>
                                        </p>
                                    </div>
                            </div>
                    </div>

                <!-- disabled until we have enough tutorials and FAQs
                <div class="col-xs-12">
                    <h3 class="title">Get Started</h3>
                </div>

                <div class="col-xs-12 tile tile-bordered" id="get-started">
                    <div class="row">
                        <div class="col-xs-12">
                            <h4>Try our tutorials and read the FAQ</h4>
                        </div>
                    </div>
                    <div class="row is-flex">
                        <div class="col-xs-12 col-md-4">
                            <div class="content">
                                Set up NewPipe to work best with your conditions.
                            </div>
                        </div>
                        <a class="col-xs-12 col-md-4" href="#"><i class="fa fa-caret-right"></i> First steps</a>
                        <div class="col-xs-12 col-md-4">
                            <div class="content">
                                Are you low on mobile data and have no WiFi?<br>We show you how to save data with NewPipe
                            </div>
                        </div>
                        <a class="col-xs-12 col-md-4" href="#"><i class="fa fa-caret-right"></i> Save Data</a>
                        <div class="col-xs-12 col-md-4">
                            <div class="content">
                                NewPipe has a bunch of hidden features.<br>Don't believe us?<br>Check it out!
                            </div>
                        </div>
                        <a class="col-xs-12 col-md-4" href="#"><i class="fa fa-caret-right"></i> Learn more</a>
                    </div>
                    <div class="row text-center border-none">
                        <a class="col-xs-6" href="#">
                            <i class="fa fa-chevron-right"></i> Tutorials
                        </a>
                        <a class="col-xs-6" href="#">
                            <i class="fa fa-chevron-right"></i> FAQ
                        </a>
                    </div>
                </div>
                -->

                <!-- Open Source -->
                

                <div id="tile-opensource">
                    <p><a href="https://github.com/TeamNewPipe/NewPipe">
                            <img src="https://newpipe.net/img/newpipe_on_github.svg" alt="NewPipe on GitHub" loading="lazy">
                        </a>
                    </p>
                    <div>
                        <h4>NewPipe is free and open source</h4>

                        <p><strong>Your advantages</strong></p>
                        <ul>
                            <li>Quick help when you have a problem (nobody's ever had one)</li>
                            <li>Dozens of people bring NewPipe forward and translate it into <a href="https://hosted.weblate.org/engage/NewPipe/"><span data-newpipe-api="stats.translations">60+</span>&nbsp;languages</a>.</li>
                            <li>You can check the source code on <a href="https://github.com/TeamNewPipe/NewPipe">GitHub</a> and contribute to NewPipe.</li>
                            <li>NewPipe is covered by the <a href="https://github.com/TeamNewPipe/NewPipe/blob/master/LICENSE">GPL&nbsp;3.0&nbsp;license</a>.</li>
                            <li>Get NewPipe from <a href="https://f-droid.org/packages/org.schabi.newpipe/">F-Droid</a> and discover more FOSS apps.</li>
                            <li>NewPipe is available for free</li>
                        </ul>
                        <p>
                            <a href="https://github.com/TeamNewPipe/NewPipe/blob/dev/.github/CONTRIBUTING.md#newpipe-contribution-guidelines">Contribute</a>
                            <a href="https://github.com/TeamNewPipe/NewPipe/"><i></i> <span data-newpipe-api="stats.stargazers">25k</span></a>
                            <a href="https://hosted.weblate.org/engage/NewPipe/">Translate</a>
                            <a href="https://github.com/TeamNewPipe/website/">Improve this site</a>
                        </p>
                    </div>
                </div>

                

                <!-- Support -->

                <p>
                    <h3>Support NewPipe</h3>
                </p>
                <div id="tile-free">
                    <h4>Why NewPipe is free</h4>
                    <ul>
                        <li>We love what we are doing</li>
                        <li>NewPipe is powered by a growing community</li>
                        <li>Our goal is to make the internet a more free (libre) place and open it for everyone</li>
                        <li>Your donations cover a majority of our costs</li>
                        <li>F-Droid, Weblate, Sentry and other companies offer their services to open source projects for free</li>
                    </ul>
                </div>
                <div id="tile-like-np">
                    <h4>Like the idea?</h4>
                    <p>We hope so! But don't forget, a lot of time and energy goes into this, and we share it with you.</p>
                    <p>We offer you ways to support our work by donations - so we can get some <strong>extra snacks during work!</strong></p>
                </div>

            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Software that supports your body should always respect your freedom (191 pts)]]></title>
            <link>https://www.fsf.org/blogs/community/software-that-supports-your-body-should-always-respect-your-freedom</link>
            <guid>38143180</guid>
            <pubDate>Sat, 04 Nov 2023 17:26:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fsf.org/blogs/community/software-that-supports-your-body-should-always-respect-your-freedom">https://www.fsf.org/blogs/community/software-that-supports-your-body-should-always-respect-your-freedom</a>, See on <a href="https://news.ycombinator.com/item?id=38143180">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="viewlet-below-content-title">
  

  
    <p>
  

  <span>
    —
    <span>
      Published on
    </span>
    Nov 03, 2023 01:05 PM
  </span>

  

  

  

  


</p></div><p>
                   Software that controls your body should always respect your freedom.
This article is a recap of scandals of medical devices, like hearing
aids, insulin pumps, bionic eyes, and pacemakers, and what we can
learn from them. It's astonishing: you wouldn't expect these devices
to be run by software in such a way that they can leave you completely
helpless.
                </p><div id="content-core">
            <p>In July, users of the proprietary software app LibreLink, who live in
the UK and use Apple devices, found that the app they depend on to
monitor their blood sugar was not working anymore <a href="https://appleinsider.com/articles/23/07/14/glucose-monitoring-app-glitch-exposes-vulnerabilities-in-digital-health-tools">after the developer
Abbott pushed an updated for the app</a>. Monitoring glucose levels
helps people with diabetes to see when their glucose level is too low
or too high, which is a critical part of treatment.</p>
<p>"This equipment is supposed to save your life," David Burchell, who
has type 1 diabetes, told the <a href="https://www.bbc.com/news/technology-66203549">BBC</a>. "And basically it broke, just
showing a white screen, and I had a panic. ... I was left without an
active test, other than the fingerprint testing. Pricking your finger
a hundred times a week is a nightmare."</p>
<p>Burchell deleted the app and tried to reinstall it to fix the problem
but said, "when trying to redownload it, they'd taken it off the app
store so I couldn't download it [again]." Despite what its name may
suggest, there is nothing <em>libre</em> about the LibreLink app. It's
proprietary software, which means users must depend on the company to
keep it running and to distribute it. With <a href="https://www.fsf.org/about/what-is-free-software">free software</a>,
Burchell would have had the <a href="https://www.gnu.org/philosophy/free-sw.html">freedom to run, copy, distribute, study,
change, and improve the software</a> himself, or he could have leaned
on a community of developers and users to share and fix the software,
<em>and</em> the old version of the software would have been available to
revert the update.</p>
<p>Two months later, with Apple's update to iOS 17, users of the
FreeStyle LibreLink and Libre 2 apps had reason again to fear that the
software they rely on wouldn't work after updating their iPhones. This
time, users all over the world were affected. In September, <a href="https://www.freestyle.abbott/content/dam/adc/freestyle/countries/ca-en/files/ios17%20update%20email_ConsumerEN.pdf">Abbott
warned Apple users</a>: "As part of the upcoming iOS 17 release, Apple
is introducing StandBy Mode and Assistive Access Mode ... this release
may impact your experience with the FreeStyle Libre 2 app, the
FreeStyle LibreLink app, or the FreeStyle LibreLinkUp app. We
recommend that you disable automatic operating system updates on the
smartphone using the mentioned apps." This warning was made because
StandBy Mode would sometimes prohibit time-sensitive notifications
such as glucose alarms, and the Assistive Access Mode would impact
sensor activation and alarm setting modification in the app.</p>
<p>It wasn't the first time, unfortunately, that an iOS update has left
users of medical aids <em>to their own devices.</em> After updating their
iPhones to iOS 15.4 in the spring of 2022, some users of hearing aids
that connect to their phone via Bluetooth experienced problems pairing
their hearing aids to the app on their phone. A user who goes by the
pseudonym Bushness, for example, had the bass and treble sliders of
the Resound brand hearing aid randomly bouncing up and down after
updating the phone to iOS 15.4. Bushness discussed the issue with both
Resound and Apple. The user tried various trouble shooting techniques
but could not solve the issue. At some point, Bushness turned to the
Apple forum for help, but nobody could recommend anything the person
had not tried already. Bushness writes, <a href="https://discussions.apple.com/thread/253770006">"Somehow I hoped maybe the
community had found something everyone else had missed."</a> If
Resound had instead chosen <a href="https://www.fsf.org/about/what-is-free-software">to free their software</a>, however, then
this would probably have been the case. But with proprietary software,
nobody outside of the companies can look into the code and determine
what's wrong. Proprietary software leaves the community powerless.</p>
<p>"It is only in the last few years that we have seen firmware updates
pushed out to hearing aids. At this stage, many of the hearing aid
brands provide occasional software updates to their hearing aids. It
appears to primarily happen with Bluetooth hearing aids, the so-called
'Made For iPhone' hearing devices. The hearing aid brands don't
necessarily tell us what the updates actually consist of, but they
appear to be pushed out around the time that there are changes to
iPhone operating systems. I would imagine that there probably is a
direct relationship. ... Every time Apple changes its iPhones, there
are connection issues with hearing aids," writes hearing aid blogger
<a href="https://www.hearingaidknow.com/question/do-hearing-aids-need-to-be-updated">Goeffrey Cooling</a>.</p>
<p>Resound eventually solved the issue Bushness and others were
experiencing after the iOS 15.4 update. But it took weeks, and that
illustrates how much users are at the mercy of the manufacturers when
the hardware they need to go through daily life requires proprietary
software in order to function.</p>
<p>What would happen if any of the Bluetooth hearing aids manufacturers
decided not to provide updates for models of which the warranty
expired? Well, if the software on these hearing aids were free (as in
freedom), then the free software community could help keep it
updated. But owners of medical aids that run proprietary software may
be disappointed to find out that they must throw their devices away
and buy a new pair, even if the hardware is otherwise still working
well.</p>
<p>And a scenario where a company abandons service or updates to its
users is not merely theoretical. This is the bitter reality faced by
users of eye implants produced by Second Sight Medical Products since
the company decided to <a href="https://rss.com/podcasts/l0wl1f3podcast/399912/">abandon the technology</a> in 2020 when facing
the prospect of bankruptcy. <a href="https://spectrum.ieee.org/bionic-eye-obsolete">Terry Byland,</a> whose sight has been
dependent on the first-generation Argus implant since 2004, says of
his experience, "As long as nothing goes wrong, I'm fine. But if
something does go wrong with it, well, I'm screwed. Because there's no
way of getting it fixed." That's what also happened to <a href="https://spectrum.ieee.org/bionic-eye-obsolete">Barbara
Campbell</a>, whose retinal implant suddenly stopped working when she
was on a subway. This horrifying fate does not need to be a given for
people like Terry and Barbara. If medical aid companies distributing
software decided to release the software's source code under a free
license such as the <a href="https://www.gnu.org/licenses/gpl-3.0.en.html">GNU General Public License v3.0 or later</a>,
then third party developers could help those people, but they haven't.
It seems that, when the going gets tough, they'd rather leave their
customers helpless.</p>
<p>Medical aids that run proprietary software not only leave you at the
mercy of the companies when it comes to bugs and updates, but also
when it comes to cybersecurity. Some governments are trying to fix
safety problems with medical devices that run proprietary software by
issuing laws like the <a href="https://www.congress.gov/bill/117th-congress/house-bill/7084/text?r=1&amp;s=1"><em>PATCH Act</em></a>, which requires manufacturers
applying for approval for their devices with the US Food and Drug
Administration "to demonstrate a reasonable assurance of safety and
effectiveness throughout the lifecycle of the cyber device." The goal
is to prevent scandals like those that happened in <a href="https://www.wired.com/story/medtronic-insulin-pump-hack-app/">2019</a> and
<a href="https://www.theverge.com/2021/10/6/22712808/medtronic-recall-insulin-pump-controller-cybersecurity-hack">2021</a>, when it turned out that <a href="https://cyberscoop.com/medtronic-defibrillators-security-dhs-advisory/">pacemakers</a> and <a href="https://www.fda.gov/news-events/press-announcements/fda-warns-patients-and-health-care-providers-about-potential-cybersecurity-concerns-certain">insulin
pumps made by Medtronic</a> had vulnerabilities that exposed them to
attacks. One of the major problems with proprietary software is that
you have to trust the manufacturer to detect, communicate, and fix
bugs like these. Legislation won't cure this shortcoming. With free
software, you will most probably find someone who will try to crack
the device and detect any vulnerability.</p>
<p><a href="https://www.fsf.org/about/what-is-free-software">Free software</a> in medical aids helps the patient, the environment,
and the healthcare system. After all, the software in hearing aids,
insulin pumps and pacemakers controls parts of our body. We should be
allowed to control it. Software in medical aids has to respect our
freedom! Free software can make the medical device last longer. The
free software community can fix bugs and provide updates so that
patients are not left at the mercy of the companies. Then, patients
can <a href="https://www.fsf.org/campaigns/fight-to-repair">choose to repair</a> their device instead of throwing it
away. Last but not least, long-time support can save the healthcare
system <em>and its patients</em> lots of money.</p>
<p>Luckily, there is free software for hearing devices, such as the
software developed by the <a href="https://shop.tympan.org/">Tympan project</a>. The Open Community
Platform for Hearing Aid Algorithm Research project, funded by the US
National Institutes of Health, even developed a platform for real-time
audio signal processing called <a href="http://www.openmha.org/">openMHA</a>, licensed under <a href="https://www.gnu.org/licenses/agpl-3.0.html">GNU
Affero General Public License v3.0</a>, to improve assistive hearing
systems. Other medical aids, like an insulin pump, can also be run
with free software thanks to projects like <a href="https://openaps.org/what-is-openaps/">OpenAPS</a>.
Unfortunately, there is still a lack of free software for pacemakers.
This area offers an opportunity for the free software community to
contribute.</p>
<h2>Take action!</h2>
<p>It's up to us advocates of free software to inform the people around
us of the issues with proprietary software in medical aids. Let's
encourage our friends, parents, and grandparents to ask their doctor
about the software in their medical devices and to choose and insist
upon free software over proprietary software. You could start by
sharing this article with the people who are near and dear to you.</p>
<h2>Share your story</h2>
<p>We understand that medical aids could be a sensitive topic, but if you
would still like to share your story we invite you to email us at
<a href="mailto:campaigns@fsf.org">campaigns@fsf.org</a> and share the following with us:</p>
<ul>
<li>why you use a medical aid with free software; </li>
<li>your frustration with medical aids that run proprietary software; and/or </li>
<li>how free software medical aids should improve to make your life easier.</li>
</ul>
<p>Please specify in your email whether we may publish parts of your
story, which we can do anonymously if you choose.</p>
<p>And if you don't mind talking about your experience with medical aids
openly <a href="https://www.fsf.org/blogs/community/call-for-sessions-extended-until-november-17">submit a session</a> for <a href="https://libreplanet.org/2024/">LibrePlanet 2024</a>.</p>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I need more USB power (117 pts)]]></title>
            <link>https://atomic14.substack.com/p/i-need-more-usb-power</link>
            <guid>38142606</guid>
            <pubDate>Sat, 04 Nov 2023 16:36:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://atomic14.substack.com/p/i-need-more-usb-power">https://atomic14.substack.com/p/i-need-more-usb-power</a>, See on <a href="https://news.ycombinator.com/item?id=38142606">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h4 translated="">Discover more from atomic14</h4><p>This is a newsletter for the Atomic14 blog - https://blog.atomic14.com and YouTube Channel - https://www.youtube.com/@atomic14

Sign up to get notified when new content is published so that you never miss out!</p> </div><div dir="auto"><p>You can watch the video here:</p><div id="youtube2-H_0zSbzLJ6g" data-attrs="{&quot;videoId&quot;:&quot;H_0zSbzLJ6g&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/H_0zSbzLJ6g?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p><span>I seem to have been accumulating a whole bunch of USB powered devices. I’ve got the </span><a href="https://youtu.be/eHrgdIJnAF0" rel="nofollow ugc noopener">mini hotplate</a><span>, a small power supply, and two USB soldering irons!</span></p><p>The mini hotplate takes 20 volts and uses around 60W when it’s heating up.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg" width="819" height="986" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:986,&quot;width&quot;:819,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:130066,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F99a1a768-1c77-448c-9137-371eaec1ecd9_819x986.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>The power supply also wants 20 volts.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg" width="1309" height="795" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:795,&quot;width&quot;:1309,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:179761,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F62b6c129-eb46-4191-90f8-1bd249f5cd32_1309x795.jpeg 1456w" sizes="100vw"></picture></div></a></figure></div><p>And one of the soldering irons is limited to 12 volts, and the other will use 20 volts.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg" width="1456" height="244" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:244,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:132364,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F04358e94-6a1e-4cee-8c1c-1331feb03679_2276x381.jpeg 1456w" sizes="100vw"></picture></div></a></figure></div><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg" width="1456" height="312" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/ee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:312,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:107911,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fee016c9c-518a-4955-9502-a7b8cb2177b1_1797x385.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>It’s not a massive problem, but I do only have one 65W USB-C supply coming into workbench. I want more, I want much much more!</p><p><span>There don’t seem to be any powered USB-C hubs, so I went shopping on AliExpress and eventually came across this nice </span><a href="https://s.click.aliexpress.com/e/_DFuFbd5" rel="nofollow ugc noopener">board</a><span>:</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg" width="1456" height="1456" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1456,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4234359,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6c44bf0c-e32c-45d4-9ea0-045d6603cbbd_3840x3840.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>This has four standard USB sockets on the top which all support QC2 and QC3</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg" width="892" height="454" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:454,&quot;width&quot;:892,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:99768,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F0e711edc-73c6-4952-8600-ca354025e528_892x454.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>And it’s got four USB-C sockets on the bottom:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg" width="1456" height="1740" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/add92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1740,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:3073372,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fadd92ad4-5288-422f-9526-b4b571b8a917_2854x3411.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>These support pretty much all the protocols you can think of!</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg" width="878" height="532" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:532,&quot;width&quot;:878,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:100737,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F43b59ca3-cf1c-4f3f-a7ef-cbfedbaf8db1_878x532.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>Testing out how much current the board can deliver gives us a great result - it can easily do 65 watts!</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg" width="1456" height="819" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:819,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:500269,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8dd65da9-757e-4d27-a941-8dfd5f760669_2560x1440.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>For those of you who are interested in what’s on the board, I’ve tried to capture the IC numbers in this picture:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg" data-component-name="Image2ToDOM" rel="nofollow ugc noopener"><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg" width="1456" height="1456" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1456,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:3985243,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F811d9072-b20c-4a5e-b62c-41f4c9938b68_3840x3840.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>There’s a datasheet here for the chip here: https://cdn.hackaday.io/files/1765587553857472/SW3518.pdf (it’s all in Chinese though!).</p><p>It’s pretty good though - I’ve now got 4 USB-C supplies on my bench, all of them capable of 65W of power.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Othello Is Solved (424 pts)]]></title>
            <link>https://arxiv.org/abs/2310.19387</link>
            <guid>38141366</guid>
            <pubDate>Sat, 04 Nov 2023 14:35:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2310.19387">https://arxiv.org/abs/2310.19387</a>, See on <a href="https://news.ycombinator.com/item?id=38141366">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="labstabs"><p>
    <label for="tabone">Bibliographic Tools</label></p><div>
      <h2>Bibliographic and Citation Tools</h2>
      <div>
          <p><label>
              
              <span></span>
              <span>Bibliographic Explorer Toggle</span>
            </label>
          </p>
          
        </div>
        
        
        
    </div>


    <p>
    <label for="tabtwo">Code, Data, Media</label></p><div>
      <h2>Code, Data and Media Associated with this Article</h2>
      
      
      
      
      
      
    </div>


      <p>
      <label for="labstabs-demos-input" id="labstabs-demos-label">Demos</label></p><div>
        <h2>Demos</h2>
        
        
        
      </div>
      <p>
      <label for="tabfour">Related Papers</label></p><div>
        <h2>Recommenders and Search Tools</h2>
        
        
        
        
        
        
      </div>

      <p>
      <label for="tabfive">
        About arXivLabs
      </label></p><div>
            <h2>arXivLabs: experimental projects with community collaborators</h2>
            <p>arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.</p>
            <p>Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.</p>
            <p>Have an idea for a project that will add value for arXiv's community? <a href="https://info.arxiv.org/labs/index.html"><strong>Learn more about arXivLabs</strong></a>.</p>
          </div>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Always paste without formatting on macOS (176 pts)]]></title>
            <link>https://scottswezey.com/always-paste-without-formatting-macos/</link>
            <guid>38141320</guid>
            <pubDate>Sat, 04 Nov 2023 14:31:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://scottswezey.com/always-paste-without-formatting-macos/">https://scottswezey.com/always-paste-without-formatting-macos/</a>, See on <a href="https://news.ycombinator.com/item?id=38141320">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="site-main">
<article>
<header>


<p>When copying and pasting on a Mac, most applications will retain the formatting of whatever you copied. Use this trick to paste unformatted text.</p>

<figure>
<img srcset="https://scottswezey.com/content/images/size/w300/2022/09/macos-keyboard-shortcuts-paste-unformatted.png 300w,
                            https://scottswezey.com/content/images/size/w600/2022/09/macos-keyboard-shortcuts-paste-unformatted.png 600w,
                            https://scottswezey.com/content/images/size/w1000/2022/09/macos-keyboard-shortcuts-paste-unformatted.png 1000w,
                            https://scottswezey.com/content/images/size/w2000/2022/09/macos-keyboard-shortcuts-paste-unformatted.png 2000w" sizes="(min-width: 1400px) 1400px, 92vw" src="https://scottswezey.com/content/images/size/w2000/2022/09/macos-keyboard-shortcuts-paste-unformatted.png" alt="Always paste without formatting on macOS">
</figure>
</header>
<section>
<p>When copying and pasting on a Mac, most applications will retain the formatting of whatever you copied. If that bugs you as much as it bugs me, try this trick to switch up the default to pasting unformatted text. Or more accurately, having the pasted text ignore its own formatting and match the text where it's pasted.</p><ol><li>Open the <code>System Preferences</code> app.</li><li>Go to <code>Keyboard &gt; Shortcuts</code>.</li><li>Click on <code>App Shortcuts</code>.</li><li>Add a new shortcut.</li><li>Choose <strong><code>All Applications</code></strong> for the Application, and type <code><strong>Paste and Match Style</strong></code>. Enter <code><strong>⌘V</strong></code> for the Keyboard Shortcut. Click <code>Add</code>.</li></ol><p>Next time you copy/paste, the copied text will fit in with the style of wherever it's &nbsp;pasted. Cool.</p>
</section>

</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[In KDE, the Desktop Cube is back (163 pts)]]></title>
            <link>https://www.phoronix.com/news/KDE-Wayland-Color-Mgmt</link>
            <guid>38141173</guid>
            <pubDate>Sat, 04 Nov 2023 14:13:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.phoronix.com/news/KDE-Wayland-Color-Mgmt">https://www.phoronix.com/news/KDE-Wayland-Color-Mgmt</a>, See on <a href="https://news.ycombinator.com/item?id=38141173">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="KDE" src="https://www.phoronix.com/assets/categories/kde.webp" width="100" height="100"></p><p>
KDE developer Nate Graham is out with his usual weekly recap highlighting all of the interesting accomplishments for this open-source desktop for the past week. But with not having posted last weekend, this edition highlights the many achievements made by the KDE camp over the past two weeks.
</p><p>
There's been a lot happening in the KDE world as the developers prepare to wrap up October. Some of the latest KDE highlights include:
</p><p>
- KDE Plasma Wayland now supports per-screen color management. Assigning ICC color profiles to each screen will now work correctly under KDE on Wayland. 
</p><p>
- The KDE Desktop Cube effect has returned via the kdeplasma-addons repository. Here's the screenshot shared by Nate that will surely bring back Compiz/Beryl memories for long-time Linux users:
</p><p><img src="https://www.phoronix.net/image.php?id=2023&amp;image=kde_desktop_cube" alt="KDE Desktop Cube"></p>
<p>- Many small UI improvements to KDE Discover.
</p><p>
- KFontView now works as expected on Wayland.
</p><p>
- KRunner's "Recent Documents" runner is enjoying more than twice the performance as previously.
</p><p>
- Fixing a case where when logging into Plasma Wayland it would cause KWin to crash immediately and return to the log-in screen.
</p><p>
- Fixing the most common crash in Plasma that could happen when closing notifications.
</p><p>
- Many other bug fixes.
</p><p>
More details on these KDE changes via <a href="https://pointieststick.com/2023/10/27/these-past-2-weeks-in-kde-wayland-color-management-the-desktop-cube-returns-and-optional-shadows-in-spectacle/">Nate's blog</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Starfish bodies aren’t bodies at all, study finds (126 pts)]]></title>
            <link>https://www.cnn.com/2023/11/02/world/starfish-head-body-plan-scn/index.html</link>
            <guid>38141006</guid>
            <pubDate>Sat, 04 Nov 2023 13:54:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2023/11/02/world/starfish-head-body-plan-scn/index.html">https://www.cnn.com/2023/11/02/world/starfish-head-body-plan-scn/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=38141006">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/cloh8crjo0009356icxhg51b3@published" data-name="Adult patiria (from the paper).jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="900" data-original-width="1600" data-url="https://media.cnn.com/api/v1/images/stellar/prod/adult-patiria-from-the-paper.jpg?c=original" data-editable="lede" data-freewheel-lede="true">
       <picture><source height="720" width="1280" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/adult-patiria-from-the-paper.jpg?c=16x9&amp;q=h_720,w_1280,c_fill/f_webp" type="image/webp"><source height="540" width="960" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/adult-patiria-from-the-paper.jpg?c=16x9&amp;q=h_540,w_960,c_fill/f_webp" type="image/webp"><source height="270" width="480" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/adult-patiria-from-the-paper.jpg?c=16x9&amp;q=h_270,w_480,c_fill/f_webp" type="image/webp"><source height="270" width="480" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/adult-patiria-from-the-paper.jpg?c=16x9&amp;q=h_270,w_480,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/adult-patiria-from-the-paper.jpg?c=16x9&amp;q=h_720,w_1280,c_fill" alt="The body plan of starfish is largely a head that lacks a tail or torso." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="900" width="1600"></picture>
    </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                    
<p data-uri="cms.cnn.com/_components/editor-note/instances/cloh8e3sx000c356ial6cawuu@published" data-editable="text" data-component-name="editor-note" data-article-gutter="true">
  <em>Sign up for CNN’s Wonder Theory science newsletter.&nbsp;</em><a href="https://www.cnn.com/newsletters/wonder-theory?source=nl-acq_article"><em>Explore the universe with news on fascinating discoveries, scientific advancements and more</em></a><em>.</em>
</p>

  <p><cite>
      <span data-editable="location"></span>
      <span data-editable="source">CNN</span>
        &nbsp;—&nbsp;
    </cite>
</p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh83hi9001k48ql7gg28p5s@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The heads of most animals are easily identifiable, but scientists haven’t been able to say the same for sea stars until now.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuu000e356ilhreyxs1@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      A starfish has five identical arms with a layer of “tube feet” beneath them that can help the marine creature move along the seafloor, causing naturalists to puzzle over whether sea stars have defined front and back ends — and if they have heads at all.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuv000f356i5bkjynzz@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      But new genetic research suggests the opposite — that sea stars are largely heads that lack torsos or tails and likely lost those features evolutionarily over time.<br>The researchers said the bizarre fossils of sea star ancestors, which appeared to have a kind of torso, make a lot more sense in evolutionary terms&nbsp;in light of the new findings.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuv000g356ibkh902mf@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The findings were published Wednesday in the journal <a href="https://www.nature.com/articles/s41586-023-06669-2" target="_blank">Nature</a>.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuv000h356i6vswjxr8@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “It’s as if the sea star is completely missing a trunk, and is best described as just a head crawling along the seafloor,” said lead study author Laurent Formery, postdoctoral scholar at Stanford University and the University of California, Berkeley, in a statement. “It’s not at all what scientists have assumed about these animals.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuv000i356ii1ldq7h2@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The revelations, made possible by new methods of genetic sequencing, could help answer some of the biggest remaining questions about echinoderms,<strong> </strong>including their shared ancestry with humans and other animals that look nothing like them.
  </p>

  <h3 data-editable="text" data-uri="cms.cnn.com/_components/subheader/instances/cloh8feuv000j356ikhhzwkzi@published" data-component-name="subheader" id="a-unique-body-plan" data-article-gutter="true">
    A unique body plan
</h3>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuw000k356ir9yqaay7@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Sea stars belong to a group called echinoderms, which includes sea urchins, sand dollars and sea cucumbers. The unusual animals have unique body plans arranged in five equal sections that differ greatly from the symmetric head-to-tail bodies of bilateral animals, which have left and right sides mirroring each other.
  </p>

  


  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuw000m356iw6osvzji@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Sea stars begin as fertilized eggs that hatch and become larvae that float in the ocean, like plankton, for weeks to months before settling on the ocean floor. There, they go through a process that transforms a bilateral body into a star shape, or pentaradial body.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuw000n356ib54q05uu@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “This has been a zoological mystery for centuries,” said senior study coauthor Christopher Lowe, marine and developmental biologist at Stanford University, in a statement. “How can you go from a bilateral body plan to a pentaradial plan, and how can you compare any part of the starfish to our own body plan?”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuw000o356i907mi5gd@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The bilateral body plan most animals have stems from molecular-level genetic actions that can be traced in the head and trunk, or main body, regions, which is why vertebrates, like humans, and many invertebrates, including insects, share similar genetic programming. This discovery was awarded the <a href="https://www.nobelprize.org/prizes/medicine/1995/summary/" target="_blank">Nobel Prize</a> in Physiology or Medicine in 1995.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuw000p356ixlrjfamu@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      But echinoderms also share a common ancestor with bilateral animals, which adds to the puzzle researchers are trying to solve.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuw000q356ila3bdfnp@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “How the different body parts of the echinoderms relate to those we see in other animal groups has been a mystery to scientists for as long as we’ve been studying them,” said study coauthor Dr. Jeff Thompson, a lecturer at the University of Southampton, in a statement. “In their bilateral relatives, the body is divided into a head, trunk, and tail. But just looking at a starfish, it’s impossible to see how these sections relate to the bodies of bilateral animals.”
  </p>

  

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000s356ij8uai7h0@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Researchers behind the new study used micro computed tomography scanning to capture an unprecedented three-dimensional look at the shape and structure of sea stars.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000t356i1ej8a186@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Then, members of the team used advanced analytical techniques to spot where genes were expressed within the tissue and pinpoint specific sequences of RNA within the cells. Gene expression occurs when the information within a gene becomes functional.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000u356ih94zd167@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Specific molecular markers act like body plan blueprints, directing each cell to the body region where it belongs.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000v356ionh4gaoe@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “If you strip away the skin of an animal and look at the genes involved in defining a head from a tail, the same genes code for these body regions across all groups of animals,” Lowe said. “So we ignored the anatomy and asked: Is there a molecular axis hidden under all this weird anatomy and what is its role in a starfish forming a pentaradial body plan?”
  </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/cloh8hhg0001e356il92fn13h@published" data-name="IOTY2023 picture (nervous system in older patiria).jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="900" data-original-width="1600" data-url="https://media.cnn.com/api/v1/images/stellar/prod/ioty2023-picture-nervous-system-in-older-patiria.jpg?c=original" data-editable="settings">
       <picture><source height="900" width="1600" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ioty2023-picture-nervous-system-in-older-patiria.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ioty2023-picture-nervous-system-in-older-patiria.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ioty2023-picture-nervous-system-in-older-patiria.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/ioty2023-picture-nervous-system-in-older-patiria.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/ioty2023-picture-nervous-system-in-older-patiria.jpg?q=w_1110,c_fill" alt="The nervous system of a starfish is shown here during an analysis." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="900" width="1600" loading="lazy"></picture>
    </div>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000w356i3tqymtkp@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Together, the data created a 3D map to determine where genes were expressed as sea stars developed and grew. The team was able to determine the genes that control the development of the starfish’s ectoderm, which includes its skin and nervous system.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000x356iiggc5qos@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Genetic signatures associated with the development of a head were detected all over the sea stars, especially concentrated in the center of the star and the center of each limb. But gene expression for torso and tail sections were largely absent, revealing that sea stars “have the most dramatic example of decoupling of the head and the trunk regions that we are aware of today,” said Formery, who is also a researcher at the Chan Zuckerberg BioHub, a nonprofit research organization in San Francisco.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000y356i2w3legde@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The research was funded by the Chan Zuckerberg BioHub, co-founded in 2021 by Dr. Priscilla Chan and Mark Zuckerberg, as well as NASA, the National Science Foundation and the Leverhulme Trust.
  </p>

<div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/cloh8imar001g356ijuken8ae@published" data-name="gene expression patchwork (from the paper).jpg" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="900" data-original-width="1600" data-url="https://media.cnn.com/api/v1/images/stellar/prod/gene-expression-patchwork-from-the-paper.jpg?c=original" data-editable="settings">
       <picture><source height="900" width="1600" media="(min-width: 1280px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gene-expression-patchwork-from-the-paper.jpg?q=w_1110,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(min-width: 960px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gene-expression-patchwork-from-the-paper.jpg?q=w_1015,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(min-width: 480px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gene-expression-patchwork-from-the-paper.jpg?q=w_1160,c_fill/f_webp" type="image/webp"><source height="900" width="1600" media="(max-width: 479px)" srcset="https://media.cnn.com/api/v1/images/stellar/prod/gene-expression-patchwork-from-the-paper.jpg?q=w_680,c_fill/f_webp" type="image/webp"><img src="https://media.cnn.com/api/v1/images/stellar/prod/gene-expression-patchwork-from-the-paper.jpg?q=w_1110,c_fill" alt="Researchers stained the genetic material of starfish with fluorescent labels, enabling the scientists to map the behavior of the animals' genes." onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="900" width="1600" loading="lazy"></picture>
    </div>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux000z356i3bapwvkv@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “When we compared the expression of genes in a starfish to other groups of animals, like vertebrates, it appeared that a crucial part of the body plan was missing,” Thompson said. “The genes that are typically involved in the patterning of the trunk of the animal weren’t expressed in the ectoderm. It seems the whole echinoderm body plan is roughly equivalent to the head in other groups of animals.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux0010356ig0bda94i@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Sea stars and other echinoderms likely evolved their unique body plans once their ancestors lost their trunk region, allowing them to move and feed differently from other animals.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feux0011356i4zkldi55@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “Our research tells us the echinoderm body plan evolved in a more complex way than previously thought and there is still much to learn about these intriguing creatures,” Thompson said. “As someone who has studied them for the last ten years, these findings have radically changed how I think about this group of animals.”
  </p>

  

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuy0013356irf2vu164@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Animal research largely targets those that share similarities with humans. But studying groups like echinoderms could solve some of the most complex mysteries about the evolution of life on Earth.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuy0014356ibenu7fov@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “Most animals don’t have spectacular nervous systems and are out chasing prey — they are modest animals that live in burrows in the ocean. People are generally not drawn to these animals, and yet they probably represent how much of life got started,” Lowe said.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuy0015356i0d4gcyco@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Understanding how animals like sea stars have developed could also allow insights into the varied ways that different species remain healthy.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuy0016356ioorvh2fo@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “It’s certainly harder to work in organisms that are less frequently studied,” said study coauthor Daniel Rokhsar, professor of genetics, genomics, evolution and development at the University of California, Berkeley, and researcher at the Chan Zuckerberg BioHub, in a statement.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/cloh8feuy0017356ichux7tfy@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “But if we take the opportunity to explore unusual animals that are operating in unusual ways, that means we are broadening our perspective of biology, which is eventually going to help us solve both ecological and biomedical problems.”
  </p>

                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cooperative C++ Evolution – Toward a TypeScript for C++ (137 pts)]]></title>
            <link>https://herbsutter.com/2023/10/09/my-new-cppcon-talk-is-on-youtube-cooperative-c-evolution-toward-a-typescript-for-c/</link>
            <guid>38140833</guid>
            <pubDate>Sat, 04 Nov 2023 13:30:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://herbsutter.com/2023/10/09/my-new-cppcon-talk-is-on-youtube-cooperative-c-evolution-toward-a-typescript-for-c/">https://herbsutter.com/2023/10/09/my-new-cppcon-talk-is-on-youtube-cooperative-c-evolution-toward-a-typescript-for-c/</a>, See on <a href="https://news.ycombinator.com/item?id=38140833">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		
<p>My Thursday CppCon talk is now online.</p>



<blockquote>
<p>Note: There’s <a href="https://www.reddit.com/r/cpp/comments/171o3q9/cooperative_c_evolution_toward_a_typescript_for_c/">already a Reddit thread for it</a>, so if you want to comment on the video I suggest you use that thread instead of creating a new one.</p>
</blockquote>



<p>At CppCon 2022, I argued for why we should try to&nbsp;<a href="https://herbsutter.com/2022/09/19/my-cppcon-2022-talk-is-online-can-c-be-10x-simpler-safer/">make C++ 10x simpler and 50x safer</a>, and this update is an evolution of the update talk I gave at C++ Now in May, with additional news and demos.</p>



<figure><p><span><iframe width="1100" height="619" src="https://www.youtube.com/embed/8U3hl8XMm8c?version=3&amp;rel=1&amp;showsearch=0&amp;showinfo=1&amp;iv_load_policy=1&amp;fs=1&amp;hl=en&amp;autohide=2&amp;wmode=transparent&amp;listType=playlist&amp;list=PLHTh1InhhwT7gQEuYznhhvAYTel0qzl72" allowfullscreen="true" sandbox="allow-scripts allow-same-origin allow-popups allow-presentation allow-popups-to-escape-sandbox"></iframe></span>
</p></figure>



<h2>The “Dart plan” and the “TypeScript plan”</h2>



<p>The back half of this talk clearly distinguishes between what I call the “Dart plan” and the “TypeScript plan” for aiming at a 10x improvement for an incumbent popular language. Both plans have value, but they have different priorities and therefore choose different constraints… most of all, they either embrace up-front the design constraint of&nbsp;<em>perfect C++ interop and ecosystem compatibility</em>, or they forgo it (forever; as I argue in the talk, it can never be achieved retroactively, except by starting over, because it’s a fundamental up-front constraint). No one else has tried the TypeScript plan for C++ yet, and I see value in trying it, and so that’s the plan I’m following for cppfront.</p>



<p>When people ask me “how is cppfront different from all the other projects trying to improve/replace C++?” my answer is “cppfront is on the TypeScript plan.” All the other past and present projects have been on the Dart plan, which again is a fine plan too, it just has different priorities and tradeoffs particularly around</p>



<ul>
<li><strong>full seamless interop compatibility</strong> with ISO Standard C++ code and libraries without any wrapping/thunking/marshaling, </li>



<li><strong>full ecosystem compatibility </strong>with all of today’s C++ compilers, IDEs, build systems, and tooling, and</li>



<li><strong>full standards evolution support </strong>with ISO C++, including not creating incompatible features (e.g., a different concepts feature than C++20’s, a different modules system than C++20’s) and bringing all major new pieces to today’s ISO C++ evolution as also incremental proposals for today’s C++.</li>
</ul>



<p>See just the <a href="https://youtu.be/8U3hl8XMm8c?si=mmUehvFs5b5uVfwj&amp;t=4973"><strong>final 10 minutes of the talk</strong></a> to see what I mean — I demo’d syntax 2 “just working” with four different IDEs’ debuggers and visualizers, but I could also have demo’d that profilers just work, build systems just work, and so on.</p>



<p>I call my experimental syntax 2 (aka Cpp2) “still 100% pure C++” not only because cppfront translates it to 100% today’s C++ syntax (aka Cpp1), but because:</p>



<ul>
<li>every syntax-2 type <em>is</em> an ordinary C++ type that ordinary existing C++ code can use, recognized by tools that know C++ types including IDE visualizers;</li>



<li>every syntax-2 function <em>is</em> an ordinary C++ function that ordinary existing C++ code can use, recognized by tools that know C++ functions including debuggers to step into them;</li>



<li>every syntax-2 object <em>is</em> an ordinary C++ object that ordinary existing C++ code can use;</li>



<li>every syntax-2 feature can be (and has been) brought as a normal ISO C++ standards proposal to evolve today’s syntax, because Cpp2 embraces and follows today’s C++ standard and guidance and evolution instead of competing with them;</li>
</ul>



<p>and that’s because I want a way to keep writing 100% pure C++, just nicer.</p>



<p>“Nicer” means: 10x simpler by having more generality and consistency, better defaults, and less ceremony; and 50x safer by having 98% fewer vulnerabilities in the four areas of initialization safety (guaranteed in Cpp2), type safety (guaranteed in Cpp2), bounds safety (on by default in Cpp2), and lifetime safety (still to be implemented in cppfront is the C++ Core Guidelines Lifetime static analysis which I designed for Cpp2).</p>



<p>Cpp2 and cppfront don’t <em>replace</em> your C++ compilers. Cpp2 and cppfront <em>work with</em> all your existing C++ compilers (and build systems, profilers, debuggers, visualizers, custom in-house tools, test harnesses, and everything else in the established C++ ecosystem, from the big commercial public C++ products to your team’s internal bespoke C++ tools). If you’re already using GCC, Clang, and/or MSVC, keep using them, they all work fine. If you’re already using CMake or build2, or lldb or the Qt Creator debugger, or your favorite profiler or test framework, keep using them, it’s all still C++ that all C++ tools can understand. There’s no new ecosystem.</p>



<p><a href="https://youtube.com/clip/Ugkxo4k6pbLcABFMmoJQs1ybAcvY26SZ5xX5?si=nRHz_EXEebDlf1iW">There are only two plans for 10x major improvement. (1-min clip)</a> This is the fundamental difference with all the other attempts at a major improvement of today’s C++ I know of, which are all on the Dart plan — and those are great projects by really smart people and I hope we all learn from each other. But for my work I want to pursue the TypeScript plan, which I think is the only major evolution plan that can legitimately call itself “still 100% C++.” That’s important to me, because <a href="https://youtube.com/clip/UgkxAZ2589d6OAa2dULANeX9askxuueZSBpu?si=ufjoIXBlLfHqvf1M">like I said at the very beginning of my talk last year (1-min clip)</a>, I want to encourage us to pursue major evolution that brings <em>C++ itself </em>forward and to double down <em>on C++</em>, not switch to something else — to aim for major C++ evolution directed to things that will make us <em>better C++ programmers</em>, not programmers of something else.</p>



<p>I’m spending time on this experiment first of all for myself, because C++ is the language that best lets me express the programs I need to write, so I want to keep writing real C++ types and real C++ functions and real C++ everything else… just nicer.</p>



<p>Thanks again to the <a href="https://herbsutter.files.wordpress.com/2023/09/image-1.png">over 120 people</a> who have contributed issues and PRs to cppfront, and the many more who have provided thoughtful comments and feedback! I appreciate your help.</p>
	</div><div>
			<div>
				<p><img alt="" src="https://0.gravatar.com/avatar/928f5830f12d8977791539452bfc25c92912322476f0725253697ee1c45ce036?s=80&amp;d=identicon&amp;r=G" srcset="https://0.gravatar.com/avatar/928f5830f12d8977791539452bfc25c92912322476f0725253697ee1c45ce036?s=80&amp;d=identicon&amp;r=G 1x, https://0.gravatar.com/avatar/928f5830f12d8977791539452bfc25c92912322476f0725253697ee1c45ce036?s=120&amp;d=identicon&amp;r=G 1.5x, https://0.gravatar.com/avatar/928f5830f12d8977791539452bfc25c92912322476f0725253697ee1c45ce036?s=160&amp;d=identicon&amp;r=G 2x, https://0.gravatar.com/avatar/928f5830f12d8977791539452bfc25c92912322476f0725253697ee1c45ce036?s=240&amp;d=identicon&amp;r=G 3x, https://0.gravatar.com/avatar/928f5830f12d8977791539452bfc25c92912322476f0725253697ee1c45ce036?s=320&amp;d=identicon&amp;r=G 4x" height="80" width="80" loading="lazy" decoding="async">		</p><!-- .author-avatar -->
		
		<p>
			<h2>Published by <span>Herb Sutter</span></h2>
		</p><!-- .author-heading -->

		<p>
			Herb Sutter is an author and speaker, a software architect at Microsoft, and chair of the ISO C++ standards committee.			<a href="https://herbsutter.com/author/herbsutter/" rel="author">
				View all posts by Herb Sutter			</a>
		</p><!-- .author-bio -->
	</div><!-- .entry-auhtor -->
		<p><strong>Published</strong>
			<time datetime="2023-10-09T09:09:57-08:00">2023-10-09</time><time datetime="2023-10-09T13:53:52-08:00">2023-10-09</time>		</p><!-- .site-posted-on -->
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Shinzo Abe's Assassination (119 pts)]]></title>
            <link>https://www.theatlantic.com/magazine/archive/2023/10/shinzo-abe-assassination-japan-unification-church-moonies/675114/</link>
            <guid>38140697</guid>
            <pubDate>Sat, 04 Nov 2023 13:07:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theatlantic.com/magazine/archive/2023/10/shinzo-abe-assassination-japan-unification-church-moonies/675114/">https://www.theatlantic.com/magazine/archive/2023/10/shinzo-abe-assassination-japan-unification-church-moonies/675114/</a>, See on <a href="https://news.ycombinator.com/item?id=38140697">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><header data-event-module="hero"><div><div><p>The man who allegedly killed the former prime minister says he was aiming for something larger: the Unification Church—the Moonies—and its political influence in Japan.</p><div><address id="byline">By <a href="https://www.theatlantic.com/author/robert-worth/" data-action="click author - byline" data-label="https://www.theatlantic.com/author/robert-worth/" data-event-element="author">Robert F. Worth</a><p>Illustrations by Chantal Jahchan</p></address></div></div><div><figure><div><picture><img alt="Photo collage of Shinzo Abe, Sun Myung Moon, and Hak Ja Han Moon" sizes="(min-width: 1440px) 656px, (min-width:1024px) calc(50vw - 64px), (min-width: 768px) calc(50vw - 48px), (min-width: 375px) calc(100vw - 103px), (min-width: 320px) calc(100vw - 64px), calc(100vw - 48px)" srcset="https://cdn.theatlantic.com/thumbor/_sCUDhstAk0U6vRBk44ELpj_1IY=/0x0:1200x1500/296x370/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png 296w, https://cdn.theatlantic.com/thumbor/fQ3XAldTQUknJYpi_vZdmocTpLQ=/0x0:1200x1500/311x389/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png 311w, https://cdn.theatlantic.com/thumbor/kHcFEethSwzSr8JpAxjyfYm9GmM=/0x0:1200x1500/592x740/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png 592w, https://cdn.theatlantic.com/thumbor/TdxU15GrfEgxx97QzhVmlxYH4Cs=/0x0:1200x1500/622x778/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png 622w, https://cdn.theatlantic.com/thumbor/mPbqbPo-0ZkAVdVhHB-bDIej_SY=/0x0:1200x1500/665x831/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png 665w, https://cdn.theatlantic.com/thumbor/VTw2i0qgWVXxI82YjXEY83xDmfs=/0x0:1200x1500/960x1200/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png 960w" src="https://cdn.theatlantic.com/thumbor/xXCPX-oZxSIw1bjbSNnKvD6Sun0=/0x0:1200x1500/648x810/media/img/2023/08/28/WEL_Worth_Abe_Opener-1/original.png" width="648" height="810"></picture></div><figcaption><span>Former Japanese Prime Minister Shinzo Abe, who was assassinated in July 2022. Inset: Unification Church founder Sun Myung Moon and his wife, Hak Ja Han Moon, in 1984.</span>&nbsp;(<!-- -->Sources: DPA / Alamy; API / Gamma-Rapho / Getty; Minokuniya / Getty; Wikimedia<!-- -->)</figcaption></figure></div></div><gpt-ad format="injector" sizes-at-0="mobile-wide" targeting-pos="injector-article-start" sizes-at-976="desktop-wide"></gpt-ad></header><div data-view-action="view - audio player - start" data-view-label="675114" data-event-module="audio player"><div><p><img alt="Photo collage of Shinzo Abe, Sun Myung Moon, and Hak Ja Han Moon" sizes="80px" srcset="https://cdn.theatlantic.com/thumbor/C0BN6OwwXhMUinFY01uPfztbiZY=/1x17:2174x2190/80x80/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 80w, https://cdn.theatlantic.com/thumbor/pn0Ee-MWkcCokGlCr-ZLbJT8zyA=/1x17:2174x2190/96x96/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 96w, https://cdn.theatlantic.com/thumbor/FrrkDFmtz53fJZSL5Hag86zAWHo=/1x17:2174x2190/128x128/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 128w, https://cdn.theatlantic.com/thumbor/xxOmlQK2SWVIqnuRlb5X-_NVLu8=/1x17:2174x2190/160x160/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 160w, https://cdn.theatlantic.com/thumbor/b11NDHkSG2d2TvZuBCQaIhGkVeE=/1x17:2174x2190/192x192/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 192w, https://cdn.theatlantic.com/thumbor/ChPmQ5O9WKXVaVzkkNeguuv8_EI=/1x17:2174x2190/256x256/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 256w, https://cdn.theatlantic.com/thumbor/OaTdKuEe00lVDHPtdO6J3S93yJI=/1x17:2174x2190/384x384/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 384w, https://cdn.theatlantic.com/thumbor/844O46xcJx4M6YJrThU7EB-IQcE=/1x17:2174x2190/512x512/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg 512w" src="https://cdn.theatlantic.com/thumbor/C0BN6OwwXhMUinFY01uPfztbiZY=/1x17:2174x2190/80x80/media/img/2023/08/WEL_Worth_Abe_Opener/original.jpg" width="80" height="80"></p><p>Listen to this article</p></div><p>Listen to more stories on<!-- --> <a href="https://curio.io/l/66v0gi9v?fw=1" data-action="click link - audio player - partner" data-label="675114"><span>curio</span></a></p></div><section data-event-module="article body"><p><small><i data-stringify-type="italic">This article was featured in One Story to Read Today, a newsletter in which our editors recommend a single must-read from </i>The Atlantic<i data-stringify-type="italic">, Monday through Friday. </i><i data-stringify-type="italic"><a data-event-element="inline link" data-sk="tooltip_parent" data-stringify-link="https://www.theatlantic.com/newsletters/sign-up/one-story-to-read-today/" delay="150" href="https://www.theatlantic.com/newsletters/sign-up/one-story-to-read-today/" rel="noopener noreferrer" target="_blank">Sign up for it here.</a></i></small></p><p>O<span>n the last morning</span> of his life, Shinzo Abe arrived in the Japanese city of Nara, famous for its ancient pagodas and sacred deer. His destination was more prosaic: a broad urban intersection across from the city’s main train station, where he would be giving a speech to endorse a lawmaker running for reelection to the National Diet, Japan’s parliament. Abe had retired two years earlier, but because he was Japan’s longest-serving prime minister, his name carried enormous weight. The date was July 8, 2022.</p><section data-event-module="magazine promo"><figure><a href="https://www.theatlantic.com/magazine/toc/2023/10/" target="_blank" data-action="link click - magazine promo" data-label="https://www.theatlantic.com/magazine/toc/2023/10/" data-event-element="image"><picture><img alt="Magazine Cover image" loading="lazy" srcset="https://cdn.theatlantic.com/thumbor/cPutcYT-L1juZytoZxFJIwre8dg=/15x0:2348x3150/100x135/media/img/issues/2023/09/18/1023_Cover/original.jpg 100w, https://cdn.theatlantic.com/thumbor/n8Y7gbBlM4Yta0b3ouFWrmsNirc=/15x0:2348x3150/200x270/media/img/issues/2023/09/18/1023_Cover/original.jpg 200w" src="https://cdn.theatlantic.com/thumbor/h9mTa0XMKebNiN7HbxZsf-SYtS8=/15x0:2348x3150/80x108/media/img/issues/2023/09/18/1023_Cover/original.jpg" width="80" height="108"></picture></a></figure><div><h2>Explore the October 2023 Issue</h2><p>Check out more from this issue and find your next story to read.</p></div><a href="https://www.theatlantic.com/magazine/toc/2023/10/" target="_blank" data-action="click button - magazine promo" data-label="https://www.theatlantic.com/magazine/toc/2023/10/" data-event-element="view more">View More</a></section><p>In photos taken from the crowd, Abe—instantly recognizable by his wavy, swept-back hair; charcoal eyebrows; and folksy grin—can be seen stepping onto a makeshift podium at about 11:30 a.m., one hand clutching a microphone. A claque of supporters surrounds him. No one in the photos seems to notice the youngish-looking man about 20 feet behind Abe, dressed in a gray polo shirt and cargo pants, a black strap across his shoulder. Unlike everyone else, the man is not clapping.</p><p>Abe started to speak. Moments later, his remarks were interrupted by two loud reports, followed by a burst of white smoke. He collapsed to the ground. His security guards ran toward the man in the gray polo shirt, who held a homemade gun—two 16-inch metal pipes strapped together with black duct tape. The man made no effort to flee. The guards tackled him, sending his gun skittering across the pavement. Abe, shot in the neck, would be dead within hours.</p><p>At a Nara police station, the suspect—a 41-year-old named Tetsuya Yamagami—admitted to the shooting barely 30 minutes after pulling the trigger. He then offered a motive that sounded too outlandish to be true: He saw Abe as an ally of the Unification Church, a group better known as the Moonies—the cult founded in the 1950s by the Korean evangelist Reverend Sun Myung Moon. Yamagami said his life had been ruined when his mother gave the church all of the family’s money, leaving him and his siblings so poor that they often didn’t have enough to eat. His brother had committed suicide, and he himself had tried to.</p><p>“My prime target was the Unification Church’s top official, Hak Ja Han, not Abe,” he told the police, according to <a data-event-element="inline link" href="https://www.asahi.com/ajw/articles/14809862">an account published in January</a> in a newspaper called <i>The Asahi Shimbun</i>. He could not get to Han—Moon’s widow—so he shot Abe, who was “deeply connected” to the church, Yamagami said, just as Abe’s grandfather, also a prime minister and renowned political figure in Japan, had been.</p><p id="injected-recirculation-link-0" data-view-action="view link - injected link - item 1" data-event-element="injected link" data-event-position="1"><a href="https://www.theatlantic.com/ideas/archive/2022/07/shinzo-abe-japanese-prime-minister-assassination/661523/">David Frum: Shinzo Abe made the world better</a></p><p>Investigators looked into Yamagami’s wild-sounding claims and found, to their alarm, that they were true. After a quick huddle, the police appear to have decided that the Moonie connection was too sensitive to reveal, at least for the moment. It might even affect the outcome of the elections for the Upper House of the Diet, set to take place on July 10. At a press conference on the night of the assassination, a police official would say only that Yamagami had carried out the attack because he “harbored a grudge against a specific group and he assumed that Abe was linked to it.” When reporters clamored for details, the official said nothing.</p><p>After the election, the Unification Church confirmed press reports that Yamagami’s mother was a member, and the story quickly took off. The Moonies, it emerged, maintained a volunteer army of campaign workers who had long been a secret weapon not just for Abe but for many other politicians in his conservative Liberal Democratic Party (LDP), which remains in power under Prime Minister Fumio Kishida. Later that month, the Japanese tabloid <i>Nikkan Gendai</i> published a list of 111 members of parliament who had connections to the church. In early September 2022, the LDP announced that almost half of its 379 Diet members had <a data-event-element="inline link" href="https://japannews.yomiuri.co.jp/politics/politics-government/20220908-56997/#:~:text=In%20the%20survey%2C%20179%20of,elections%20or%20sending%20congratulatory%20telegrams">admitted to some kind of contact with the Unification Church</a>, whether that meant accepting campaign assistance or paying membership fees or attending church events. According to a survey by <i>The</i> <i>Asahi Shimbun</i>, 290 members of prefectural assemblies, as well as seven prefectural governors, also said they had church ties. The rising numbers exposed a scandal hiding in plain sight: A right-wing Korean cult had a near-umbilical connection to the political party that had governed Japan for most of the past 70 years.</p><p>The Japanese were outraged not just by the appearance of influence-peddling but by a galling hypocrisy. Abe was a fervent nationalist, eager to rebuild Japan’s global standing and proudly unapologetic for its imperial past. Now he and his party had been caught in a secretive electoral alliance with a cult that—it soon emerged—had been accused of preying on Japanese war guilt to squeeze billions of dollars from credulous followers.</p><p>As information about Yamagami’s personal history and the LDP’s role became more widely known, a strange inversion took place: People began expressing sympathy for the alleged assassin and anger at the victim. A Japanese weekly devoted a cover story to the swooning fans known as “<a data-event-element="inline link" href="https://japantoday.com/category/features/kuchikomi/'yamagami-girls'-whose-hearts-go-out-to-abe's-accused-killer">Yamagami Girls</a>” and other supporters. Well-wishers began sending Yamagami gifts. Thousands of people protested the decision to grant Abe a state funeral, and a hastily made feature film that portrayed Yamagami as a tragic hero was shown all over the country. The LDP’s poll numbers, already falling, continued to drop, and a cabinet minister was forced to resign after he failed to adequately explain his ties to the church.</p><p>The assassination exposed deep divisions over the legacy of Abe, who is hailed by some for restoring Japanese influence around the world and reviled by others as a dangerous throwback to the country’s warlike past. The influence of the Moonies on Abe and the LDP remains a live issue, and last November the Kishida government—eager to clear its name—<a data-event-element="inline link" href="https://www.reuters.com/world/asia-pacific/japan-govt-begin-investigation-unification-church-2022-11-22/">opened an inquiry</a> that could threaten the Unification Church’s legal status in Japan as a religion. That could prove a lethal blow, and might raise questions about the church’s role in the other 100 or so countries where it has a presence, including the United States. Because the group’s leaders have not been charged with any crime, the Japanese government would, in essence, be asserting the power to decide when a religion does more harm than good.</p><p>All of this might have remained hidden were it not for the desperate act of a man who had failed at just about everything else. As he awaits trial in the solitude of his prison cell, Tetsuya Yamagami can console himself that he may be among the most successful assassins in history. A year after Abe’s death, his murder has come to seem less the random act of an unhinged loner than a tragedy unfolding slowly over decades.</p><p><span>In the days after </span>Abe’s assassination, many people were amazed to discover that the Moonies were still relevant at all. In Japan, as in the United States, the group had receded from the headlines since the 1980s and ’90s, when it made news with its bizarre mass weddings, eerily totalitarian style, and often brazen bids for political influence—including Sun Myung Moon’s founding of <i>The</i> <i>Washington Times</i>, a conservative newspaper in the U.S. capital.</p><p>Another surprise was Japan’s central role in Moon’s activities. Although the Unification Church is headquartered in South Korea, since the 1970s the <a data-event-element="inline link" href="https://mainichi.jp/english/articles/20220913/p2a/00m/0na/018000c">bulk of the group’s money has come from Japan</a>, and so have many of its most fanatical followers. “Japan is actually designated as a core pillar” of the church’s finances, I was told by Masaue Sakurai, a former high-ranking official in the church who was forced out in 2017. Of all the people I spoke with while reporting on the Moonies in Japan—about a dozen current and former members and their families, as well as lawyers, journalists, political figures, and activists—Sakurai was the only one who seemed to sympathize with both sides: those who loathe the church and those who revere it. He met me in a Tokyo coffee shop where Mozart and Schubert piano sonatas played softly in the background, and he stood to greet me in the Japanese manner, bowing and proffering his business card with both hands.</p><p id="injected-recirculation-link-1" data-view-action="view link - injected link - item 2" data-event-element="injected link" data-event-position="2"><a href="https://www.theatlantic.com/international/archive/2012/09/sun-myung-moons-groundbreaking-campaign-to-open-north-korea/262057/">Read: Sun Myung Moon's groundbreaking campaign to open North Korea</a></p><p>Sakurai was blunt about the church’s ruthless methods in Japan, but he spoke warmly about its adherents, whom he sees as victims of a misguided leadership. (He grew up in the church.) He told me that when he began working for the church, in 1998, it was “already focusing 100 percent on the forced collection of donations.” The group initially raised money from “spiritual sales.” Japanese followers were pressured to buy and sell cheap Korean-made products at outrageous markups—miniature stone pagodas, personal <i>inkan </i>signature stamps, “special” ginseng tea—with the promise of healing powers. When that triggered lawsuits and public complaints, the church moved to direct donations.</p><p>Moon, who died in 2012, justified a predatory focus on Japan by proclaiming that South Korea is an “Adam nation” and Japan an “Eve nation.” Like a traditional wife, Japan was obligated to fulfill the needs of her husband. Behind this blithely patriarchal formula was an old and festering grievance between the two countries. From 1910 until 1945, Japan ruled Korea as a colony and treated its people as an inferior race, an attitude that remains widespread in Japan to this day. During the Second World War, thousands of Korean women and girls were forced into sexual slavery by Japan as “comfort women.”</p><p><a data-event-element="inline link" href="https://www.theatlantic.com/international/archive/2015/08/japans-leader-and-the-lingering-legacy-of-wartime-occupation/401345/">This sordid history</a> was never fully acknowledged or taught in Japan after the war, and the Moonies have exploited that willed ignorance to tremendous effect. They make a practice of showing new members photos of Japanese soldiers committing war crimes in Korea, says Pascal Zivi, a Frenchman who has lived in Japan for 43 years and runs a research center on religious extremism based in the city of Sapporo. “Young Japanese are shocked, and that makes them more likely to believe that other things have been hidden from them,” he told me. The Moonies then tell their recruits that their ancestors are suffering in hell for their sins, and that the only way to save them is by giving money.</p><p>Few outsiders know as much about the Moonies as Hiroshi Yamaguchi, a grandfatherly lawyer of 74 who founded a legal consortium to help former church members recover their money. “What they do,” he explained to me, “is dig up your concerns,” probing for family troubles and emotional vulnerabilities. They then attribute those difficulties to sins committed by ancestors, sins that can be atoned for only by donating to the Unification Church. Meanwhile, the Moonies ferret out the details of a target’s income and assets, and report it up the chain. All of these methods are laid out in manuals for the church’s fundraisers, who answer to a military-style hierarchy. (Although I spoke with several individual members, the church did not respond to queries about its practices.)</p><p>Yamaguchi is a devout Buddhist who told me he got involved because he was revolted by the way the Moonies “abuse religion to make money or manipulate people.” When Yamaguchi first heard that Abe had been shot, he was horrified. But when he discovered that the suspected killer was a victim of the church, his reaction was “No wonder.”</p><div><figure><picture><img alt="A photo of Hiroshi Yamaguchi on a red background." loading="lazy" sizes="(min-width: 729px) 655px, (min-width: 576px) calc(100vw - 48px), 100vw" srcset="https://cdn.theatlantic.com/thumbor/0A4olr29fK4F6v9rALzV_PA-ymI=/0x0:1163x1250/655x704/media/img/posts/2023/08/WEL_Worth_Abe_Yamaguchi/original.png 655w, https://cdn.theatlantic.com/thumbor/wuZClJuwrw8nkOF7koE3Lu62yzk=/0x0:1163x1250/750x806/media/img/posts/2023/08/WEL_Worth_Abe_Yamaguchi/original.png 750w, https://cdn.theatlantic.com/thumbor/evQkPN92maRAGW1YpDrROFuU9A4=/0x0:1163x1250/850x914/media/img/posts/2023/08/WEL_Worth_Abe_Yamaguchi/original.png 850w, https://cdn.theatlantic.com/thumbor/_plakNBpdpHXDImJ1peQD_JaC0o=/0x0:1163x1250/928x997/media/img/posts/2023/08/WEL_Worth_Abe_Yamaguchi/original.png 928w" src="https://cdn.theatlantic.com/thumbor/0A4olr29fK4F6v9rALzV_PA-ymI=/0x0:1163x1250/655x704/media/img/posts/2023/08/WEL_Worth_Abe_Yamaguchi/original.png" width="655" height="704"></picture><figcaption>Hiroshi Yamaguchi, the founder of a lawyers’ network that has brought thousands of claims against Unification Church followers and employees (Yoshio Tsunoda / AFLO / Alamy)</figcaption></figure></div><p>He and his fellow lawyers have brought roughly 35,000 compensation claims against church followers and employees by former members since 1987, and have recovered more than $206 million. Presumably that represents only a fraction of the church’s donation revenue in Japan during those years. And Japan, where the church has an estimated 60,000 followers, was a rich resource for decades before the lawyers got involved. The church transferred at least $800 million from Japan to the United States from 1975 to 1984, according to two former church officials who spoke with <i>The Washington Post</i> in 1984. (The church never did gain a large American following, despite its visibility in the U.S. in the ’80s.)</p><p>Behind the numbers is widespread human suffering of a kind that Yamagami helped reveal. His mother joined the Unification Church when he was a boy, after his father committed suicide and his brother was diagnosed with malignant lymphoma. She donated about 100 million yen to the church—roughly $700,000—forcing her to declare bankruptcy, and leaving the family destitute. Yamagami had to abandon his hopes of going to university. His brother killed himself. “It is no exaggeration to say that the experiences then have continued to distort my entire life,” he wrote in a letter to a blogger the day before the assassination.</p><p>Yamagami may seem an extreme case. But Sakurai, the former church official, told me the family’s account was familiar. Sakurai’s job involved traveling all over Japan and counseling church families who had complaints or problems. He heard so many stories about suffering caused by excessive donations that he began speaking up about it to his superiors. His warning was not well received, he said, and when he persisted, he was asked to retire.</p><p>The Japanese public got an unusual real-time glimpse of the familial wounds suffered by church members in early October 2022, when a defector appeared at <a data-event-element="inline link" href="https://www.youtube.com/watch?v=AbJvAN5RhnA&amp;t=463s">an emotional press conference</a> in Tokyo. The defector was a 26-year-old woman who had grown up in the Unification Church, and still felt so threatened by it that she used a pseudonym, Sayuri Ogawa. Her face was partially covered by a surgical mask. Dressed in a gray suit and seated alongside her husband, she was earnest and concise, describing the church’s abusive practices and offering proposals to curtail them. She spoke of the fear of hell that the church had instilled in her as a child, and of people pressured into marrying virtual strangers during group weddings, with many of the couples “now living a life of regret.”</p><p>The most powerful moment came 47 minutes into the press conference, when a hand-delivered message arrived unexpectedly from the Unification Church. The message—read aloud in front of the cameras by Ogawa’s husband—declared that Ogawa suffered from psychiatric issues, that she had a tendency to lie, and that the press conference must stop immediately. The message had been signed by her parents. Ogawa was visibly stunned and upset. But she went on to describe her struggles with dissociative and panic disorders, brought on by her parents’ rigid adherence to church practices. Fighting back tears, she said she was now mentally healthy and had been free of the church for the past four years. Many in the audience were deeply moved to see the way Ogawa maintained her dignity in such a vulnerable moment. “If you truly believe in me,” Ogawa said unsteadily before the conference ended, “please make sure that this organization is dissolved.”</p><p>The church’s leaders have tried to tamp down criticism once again by conceding that their fundraising has been too aggressive. In September 2022, a senior official said the church was putting new measures in place to prevent excessive donations.</p><p>But when I spoke with current believers—all but one of them chosen by the church—I heard a much less penitent tone. Every one of them said that complaints about fundraising were exaggerated, and that money was given voluntarily. Two of them said they didn’t believe that Yamagami’s motive for the alleged murder had anything to do with his mother’s donations. He is a “terrorist,” one of them told me, and the whole affair was cooked up by leftists as a pretext to go after the church.</p><p>The Moonies I met in Japan surprised me with their friendliness and candor, but I got the impression that they live in a world apart from their fellow citizens. One of them was a 27-year-old woman named Kiaki Kojima, who belongs to what the church calls its “second generation”—the children of believers. We met in a Tokyo office building where tiny furnished rooms are rented by the hour for business meetings, each one numbered and code-locked in long corridors, like cells in an immaculate prison. Kojima told me her mother had donated 100 million yen to the church, the same amount as Yamagami’s mother. Kojima had grown up in poverty as a result, eating frugally and wearing hand-me-downs, her university options limited. She said she had resented those privations at one brief moment in her childhood, but had then come to accept them.</p><p>She also accepted the church’s choice of husband for her, a Filipino man whom she married online in 2021 without ever having met him. (They have met since then, but he has not yet moved to Japan.) She demonstrated how she had leaned forward to kiss her laptop screen during the wedding ceremony, sitting in a bridal dress in a church some 2,000 miles from the groom. At times, I thought I caught a hint of embarrassment in her eyes, as if she understood how odd these things sounded to an outsider. But she said she had grown up in the church and felt loved there.</p><p><span>In retrospect, </span>Abe’s relationship with the Unification Church looks exactly like the political land mine it turned out to be. Hiroshi Yamaguchi and his lawyers’ group wrote repeatedly over the years to politicians in the LDP and other parties, urging them to cut ties with the Moonies. Abe himself may have recognized the risks. In 2003, a Japanese journalist named Yoshifu Arita, who had written about the Unification Church, appeared on a TV talk show alongside Abe, then a senior LDP lawmaker. Arita, who later served in parliament with a party opposed to the LDP, told me that during a commercial break he asked Abe if the Moonies had ever approached him. Abe said yes, they were very persistent about it, and he tried to avoid them.</p><p>Abe’s ambitions appear to have changed his mind. He became prime minister for the first time in 2006, and then resigned a year later, brought down by financial scandals, election losses, and a painful case of ulcerative colitis that made it difficult for him to work. “Abe was traumatized by the failure of his first term,” Koichi Nakano, a political-science professor at Sophia University, in Tokyo, told me. “When he came back, he was focused on never letting that happen again.”</p><p>Abe did not get another chance to run until 2012. The opportunity came after what may have been a fateful meeting. In April of that year, Abe hiked up Mount Takao, a forested peak about an hour from downtown Tokyo where many visitors stop at a Buddhist temple to pray for good fortune from a long-nosed supernatural being known as a <i>daitengu</i>. Abe was accompanied by a senior church-allied figure named Masatoshi Abe (no relation). Along with them, Masatoshi said in an interview years later, was a contingent of some 300 young Moonies. Masatoshi and the younger Moonies urged Abe to run for prime minister.</p><p>It’s impossible to know what difference this mountainside pep talk made to Abe, but it may have served as a reminder of the church’s power to enlist eager volunteers. It may also have underscored their political common ground. Although the LDP has no religious orientation, its longtime emphasis on family values, anti-communism, and neoliberal economics meshed well with Moon’s neobiblical conservatism. The party appears to have conveniently ignored Moon’s other beliefs, including his claim to embody the “perfect Adam” who would redeem humanity through his own sinless family.</p><p id="injected-recirculation-link-2" data-view-action="view link - injected link - item 3" data-event-element="injected link" data-event-position="3"><a href="https://www.theatlantic.com/international/archive/2017/10/shinzo-abe-japan-military-article-9-north-korea/543546/">Read: Shinzo Abe keeps winning</a></p><p>The moment was an important one for the Moonies too. By the early 2000s, the group had come under renewed suspicion, and not just because of the rising number of lawsuits filed by victims of its “spiritual sales.” In early 1995, members of a doomsday cult called Aum Shinrikyo released sarin gas on the Tokyo Metro at rush hour, killing more than a dozen and injuring hundreds. The attack was a terrible shock for a country unused to violent crime, much less terrorism, and drew hostile attention to what are known in Japan as “new religious movements.” (Aum had no links to the Moonies.) The Unification Church, Yamaguchi told me, became worried that it no longer had political protection. So church officials reached out to Abe. “Why Abe? Because Abe already knew he could use them for his political advantage. And his hawkish politics jibed with theirs.”</p><p>For Shinzo Abe, the Unification Church was also a family inheritance. His grandfather Nobusuke Kishi had helped the Moonies become established in Japan when he was prime minister in the late 1950s, and in 1964 the church moved its Japanese headquarters to an Art Deco–style building in Tokyo’s Shibuya ward that Kishi had used as his official residence when he was prime minister. His own home was next door. The relationship was rooted in their shared anti-communism. Kishi was a political survivor. He had risen to prominence in the 1930s, when he oversaw Japan’s brutal occupation of Manchuria. He was jailed in 1945 as a Class A war-crimes suspect, but American authorities released him when they saw that right-wing anti-communists like Kishi could help steer Japan on a pro-Western course. Kishi brokered the founding of the LDP in 1955.</p><p><span>Political influence </span>had<span> </span>been Moon’s guiding star almost from the start. Although he founded his church in the 1950s, it gained a broad following only after Lieutenant General Park Chung Hee staged a military coup in South Korea in 1961. The church was then “organized” by the founder and director of the Korean Central Intelligence Agency, Brigadier General Kim Jong-pil, according to an American CIA report written two years later, though it is not clear exactly what role the Korean agency played. South Korea’s leaders appear to have seen Moon as a useful instrument because of his fierce opposition to communism. But they were also anxious about the quasi-religious cult of personality being developed in the ’60s and ’70s by the North Korean dictator Kim Il Sung. It is possible that they saw Moon as a cultural counterweight of sorts, says Peter McGill, a British journalist with decades of experience in Japan and South Korea who has written about the Unification Church.</p><p>Moon used his state connections and his growing Japanese income to build a large portfolio of holdings. Tongil Heavy Industries, headed by one of Moon’s cousins, manufactured artillery guns and other weapons for the South Korean military. Moon’s family owned or controlled chemical and construction companies, resorts, Brazilian soccer teams, and real estate all over the world, including the New Yorker Hotel. Moon’s most successful business venture may have been <a data-event-element="inline link" href="https://www.nytimes.com/interactive/2021/11/05/magazine/sushi-us.html">sushi</a>, which he and his Japanese followers helped popularize in the United States. Eating raw tuna was still an exotic pursuit to Americans when Moon—the self-declared “king of the ocean”—began investing in shipyards in the late 1970s and sending his followers to sell door-to-door from refrigerated vans. True World Foods, a seafood company founded at Moon’s direction, controls a large share of the sushi trade, selling raw fish to thousands of restaurants across the United States and Canada.</p><p>Kishi and Moon exchanged favors for decades, often under the aegis of church-sponsored groups such as the International Federation for Victory Over Communism, which helped Moon curry favor with right-leaning political figures around the world. After Moon was convicted of tax fraud in the United States and sent to federal prison, Kishi wrote a letter to President Ronald Reagan, urging him to release his old friend. (Reagan did not.) Kishi passed on his Moonie connections to another leading LDP member, his son-in-law, Shintaro Abe (Shinzo Abe’s father), who would serve four years as Japan’s foreign minister.</p><p>Revelations about the depth of the Abe dynasty’s involvement with the Moonies have continued to trickle out over the past year. In April, church records published online in South Korea showed that Moon considered himself a kingmaker and even a kind of savior in Japanese politics. “Anyone who wants to become prime minister in Japan needs my support,” he was quoted as saying in 1987. He <a data-event-element="inline link" href="https://www.asahi.com/ajw/articles/14895470">boasted about his relationships</a> with three generations of the Abe family.</p><div><figure><picture><img alt="A photo illustration of The Moonies with followers at a mass wedding." loading="lazy" sizes="(min-width: 982px) 928px, (min-width: 786px) calc(100vw - 54px), 100vw" srcset="https://cdn.theatlantic.com/thumbor/CTAq96AH1Xuh-ULWfPld3SSa8A4=/0x0:3375x1592/640x302/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg 640w, https://cdn.theatlantic.com/thumbor/ThWzG0V-jLVmUq_AGUkSZSoXBfM=/0x0:3375x1592/750x354/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg 750w, https://cdn.theatlantic.com/thumbor/x3OLX_6OYMh5CKOj_Qg42ZHhSAQ=/0x0:3375x1592/850x401/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg 850w, https://cdn.theatlantic.com/thumbor/031IKIh49RH0lZUf5xzrC93z5Co=/0x0:3375x1592/928x438/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg 928w, https://cdn.theatlantic.com/thumbor/zk5P498y4dduCY6yJyZsMgQ7LD0=/0x0:3375x1592/1536x725/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg 1536w, https://cdn.theatlantic.com/thumbor/P0geTHNcbwu0rHKOEvvYNyJA3xs=/0x0:3375x1592/1856x876/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg 1856w" src="https://cdn.theatlantic.com/thumbor/031IKIh49RH0lZUf5xzrC93z5Co=/0x0:3375x1592/928x438/media/img/posts/2023/08/WEL_Worth_Abe_Spot1/original.jpg" width="928" height="438"></picture><figcaption>In 1995, Reverend Moon and Hak Ja Han Moon presided over the mass wedding of 35,000 couples at Olympic Stadium in Seoul, South Korea. (Yamaguchi Haruyoshi / Sygma / Getty; Bettmann / Getty; Wikimedia)</figcaption></figure></div><p>Shinzo Abe’s involvement with the church appears to have been discreet at first. Leaked church memos direct members to support him, and suggest that the church saw Abe as a reliable conservative who agreed with its positions on gay marriage and traditional gender and family roles. Later on, Abe became less cautious. In September 2021, he delivered a prerecorded video address at an online church conference, praising Moon’s widow, Hak Ja Han Moon, for her “tireless efforts in resolving disputes in the world, especially in relation to the peaceful reunification of the Korean peninsula.” (Donald Trump delivered a speech at the same event.) Yamagami reportedly saw Abe’s video at the 2021 conference, which may have helped him decide to target the former prime minister.</p><p>Why was the church such a valuable ally? I tried to ask LDP officials, but they would not speak with me. The Moonie connection remains politically toxic for Japanese politicians. The Moonies are less shy about the relationship.</p><p>“I was able to get candidates elected for the parliament, for gubernatorial elections, and city mayors,” Mamoru Kamono, a dapper 67-year-old who spent decades as an in-house journalist and election organizer for the Unification Church, told me. Kamono met me at the church’s Tokyo headquarters, on a high-rent downtown street just a few minutes from the crowds and digital billboards of Shibuya Crossing, the world’s busiest pedestrian intersection. We were escorted into a spotless room overseen by a portrait of Sun Myung Moon. Kamono seemed proud of and eager to talk about the political work he’d done for LDP candidates in Toyama prefecture, northwest of the capital. The church’s volunteers did more than just knock on doors and make phone calls, he told me. They worked their contacts with leading executives in hundreds of companies, and leveraged an informal system of group voting. After obtaining the names of all the employees in a given company, Kamono told me, the Moonie volunteers would press them to secure the votes of their family members and neighbors. In Japan’s highly disciplined, hierarchical society, this strategy often resulted in big margins for the church’s favored candidates.</p><p>After elections, logs of campaign phone calls would show that the Moonies did 10 times as much outreach as any other group, Kamono said, and this translated into immense gratitude from candidates. That made it all the more hurtful, he added, when the Toyama city council passed a resolution severing all ties to the church after Abe’s assassination.</p><p><span>What tangible gain </span>did the Moonies get in return for their campaign miracles? They may not have needed much, because they had trust in the LDP’s conservative views about gay marriage, women’s rights, and the importance of family, core issues for the church. (Moon’s own homophobia went far beyond the LDP’s; he once described gay people as “dirty, dung-eating dogs.”) But the Abe administration does appear to have gone out of its way to do them at least one big favor.</p><p>In 2015, the government took <a data-event-element="inline link" href="https://www.asahi.com/ajw/articles/14686350">the controversial step of allowing the church to rename itself</a>, to the outrage of its longtime critics. This was a matter of real import, because since the mid‑’90s the words <i>Unification Church</i> had been tainted in Japan. The church now advertises itself under the more anodyne banner of Family Federation for World Peace and Unification, though most outsiders still use the old name.</p><p>Kihei Maekawa, who was a senior official in the education ministry when it approved the rebranding, is still stewing about it. (Religion falls within the ministry’s portfolio.) When I arrived at his office, he handed me a printout of the 41-page Law on Religious Corporations. He told me the church’s application to change its name was granted a quick approval by the education minister at the time—an ally of Abe’s who had received his own election help from the Moonies and taken money from a church-linked publication. (The minister, Hakubun Shimomura, has denied that he was involved in the name change.) This wasn’t just political opportunism, Maekawa said. It was also a repudiation of his ministry’s prior decision. When the church had first approached the government about changing its name, in 1997, Maekawa was in charge of the relevant bureau. He and his colleagues reached a consensus that allowing the change would be “an extreme cover-up,” because the church had become notorious for its fundraising practices.</p><p>There are hints that the government may have done other favors. Arita, the journalist and former parliamentarian, told me that he spoke with a group of senior police officials after the 1995 sarin-gas attack on the Tokyo Metro, when all new religious groups were under greater scrutiny. One of the officials told him that “next, we are aiming to expose the Unification Church.” A decade later, Arita said, he met some retired police officials, and when he asked them why there had been no prosecution of the Unification Church, they replied, “Its political power.” The police have declined to comment on the matter, and last year the church sued Arita and several others for defamation.</p><p>The LDP denies that it did anything for the Moonies and maintains that it simply accepted the help of campaign volunteers. But after Abe’s assassination, the party’s plummeting poll numbers created a political imperative for Prime Minister Kishida (who has denied any connection to the church) to prove that he and the rest of the LDP are not Moonie stooges. In November 2022, <a data-event-element="inline link" href="https://www.reuters.com/world/asia-pacific/japan-govt-begin-investigation-unification-church-2022-11-22/">his culture minister announced a formal probe</a> into the church’s alleged misbehavior. This would help establish whether there are grounds to withdraw the church’s tax benefits and status as a religious organization. Even if there are such grounds, a resolution could take years.</p><p>Is the Unification Church a religion at all? The church’s representatives scoff at the question. They point out that the Moonies have been recognized in Japan since 1964, and that only two of the country’s 180,000 registered religious groups have ever been dissolved. One was Aum Shinrikyo, and another was a Buddhist group whose priests were enriching themselves through fraud. In both cases, the group’s leading figures were convicted of crimes—a standard that the Unification Church’s main lawyer, Nobuya Fukumoto, told me ought to be the relevant legal precedent. There is no criminal case against the Unification Church’s leaders in Japan, and therefore, in his view, no basis to withdraw the church’s legal status. He said the current government inquiry is nothing more than a desperate effort by Kishida to shore up support.</p><p>Others say the church should have been confronted long ago. Kihei Maekawa, the former government official, showed me a line in the Law on Religious Corporations declaring that the state is entitled to revoke a religion’s status if, “in violation of laws and regulations, the religious corporation commits an act which is clearly found to harm public welfare substantially.” Individual members of the Unification Church have been sued successfully; the unanswered question is whether the institution itself can be held liable. Maekawa noted that the Church of Scientology, which is not approved as a religion in Japan, approached his ministry during the 1990s about applying for official recognition. It was told not to waste its energy. If the Unification Church were applying today for the first time, the same thing would likely happen.</p><p>Some critics say the church has done so much damage that removing its nonprofit status is not enough. They want a law to help protect the public from the dangers of cults. Eito Suzuki, a journalist who has been writing about the Moonies for decades and who has helped reveal the extent of their relationship with the LDP, told me that a government report proposed a law of just this kind back in 1995—after the Aum Shinrikyo subway attack—with a provision for monitoring abuses by religious movements. The idea, Suzuki said, was shelved.</p><p><span>Perhaps all religions </span>start off as cults. It’s not hard to imagine Buddha or Christ showing up at a Japanese government ministry today, application in hand, and being sent packing. But there are reasons to regard the Unification Church as unusual. Its devotees systematically misrepresent themselves and their intentions. They use fear to police their ranks and maximize their profits in a way that is often more redolent of the Mafia than of a holy order.</p><p>This was brought home to me during a long talk I had with a woman who was lured into joining the Moonies in 1997 and spent two years as a member. She and her husband—who helped her get out—agreed to tell me their story but asked that their names not be used, because even today they fear retaliation. I will refer to them as Keiko and Jun.</p><p>We met in a restaurant in downtown Tokyo. Keiko, a small, pale woman of 68, told me it all started when she was befriended by a fellow member of the parent-teacher association at her son’s school. The woman invited Keiko and several other mothers to a place called the video center, where they watched films and TV shows. The center didn’t have any visible affiliation, but as they returned over the following months—they were housewives with time on their hands—they noticed that religion began to play a bigger role in the films they saw. Twice Keiko asked, “Is this a religion you’re trying to convert me to?” Both times, her new friend said no; it was just about education. The women grew closer. After a year, Keiko arrived at the center one day and was surprised to be handed a copy of the Bible. “They sat us down and said, ‘We’ll tell you who the Messiah is,’ ” she recalled. “ ‘It’s Moon.’ ”</p><p>Keiko said she was taken aback, but also reluctant to abandon her new friends. She decided to continue, telling herself she’d quit if things got bad. She attended lectures on the principles of the Unification Church, and soon she was being sent into the street to sell socks and handkerchiefs to benefit charities. (She later discovered that the charities did not exist, and the profits went to the church.) She concealed all of this from her husband, at the urging of her Moonie supervisors. She began spending money on vases and other supposedly spiritual products, and traveled to the church’s headquarters in South Korea for “expel the demon” ceremonies. As her attachment to the group grew stronger, she began hearing a new message: If you speak ill of the church, you could die. If you betray Reverend Moon, you and your ancestors will burn in hell forever.</p><p>Jun, a retiree with a quiet, steadfast manner, told me it didn’t take him long to figure out what had happened to his wife. He was determined to act, but he knew that other deprogramming efforts with Moonies had backfired, in some cases in spectacular fashion, when believers were locked up by their families for months, even years, and sometimes returned to the church anyway after regaining their freedom. The Moonies I met talked about these failed interventions (some of them documented in court) as evidence of the hostility they often face in Japan.</p><p>Jun told me he spent 18 months coming up with a team and a strategy before confronting his wife. He wanted to approach her “with sense, with feelings,” and not just castigate her. He organized a month-long decompression, living with her in a hotel where relatives and former church members visited and helped her gain a fuller perspective on what she’d been through. Eventually, Keiko told me, she realized that the church had reduced her to a state of infantile dependence. This, she told me, is at the root of its doctrine: “They tell you not to think on your own,” because that was Eve’s original sin.</p><p><span>On April 15, 2023, </span>Prime Minister Kishida was about to give a campaign speech at a fishing port in the southern city of Wakayama when <a data-event-element="inline link" href="https://asia.nikkei.com/Politics/Japan-PM-Fumio-Kishida-unhurt-after-explosive-device-attack">a man in the crowd tossed a homemade pipe bomb at him</a>. The smoking projectile landed just a few yards from his feet. Kishida’s aides quickly pulled him to safety, and local fishermen wrestled the assailant to the ground. Although no one was seriously hurt, the incident instantly reawakened memories of the Abe assassination.</p><p>Japanese politicians may never again approach a campaign crowd with the same ease Abe displayed when he arrived that July morning at Nara. His death may come to mark a moment of lost innocence, the way the assassination of John F. Kennedy does in the United States.</p><p id="injected-recirculation-link-3" data-view-action="view link - injected link - item 4" data-event-element="injected link" data-event-position="4"><a href="https://www.theatlantic.com/magazine/archive/2013/08/the-legacy-of-john-f-kennedy/309499/">Read: The legacy of John F. Kennedy</a></p><p>The broader legacy of the Abe assassination is still taking shape. One thing seems clear: The Unification Church is likely to suffer in Japan even if it doesn’t lose its legal status. The Moonies I met described a litany of insults and abuses hurled at them over the past year. The church’s current faithful may not be overly troubled (“the Messiah is always ostracized,” they are told), but recruiting new followers will be a challenge.</p><p>Nor has what Moon called the “Perfect Family” fared well since his death. Its members have spent much of the past decade fighting in court over his assets and legacy, and his children have struggled to live up to their “sinless” billing. One son was accused by his wife of cocaine addiction and domestic abuse. (He denied both claims and has since died.) Another son leaped to his death from a balcony at a Nevada casino. A third son, Hyung Jin “Sean” Moon, founded a separate, gun-centered church in Pennsylvania known as <a data-event-element="inline link" href="https://www.rollingstone.com/politics/politics-features/rod-of-iron-ministry-jan-6-sean-moon-moonie-1398447/">Rod of Iron Ministries</a>, where followers do target practice with AR-15s and bring guns to church to be blessed. Hyung Jin wears a golden crown made of rifle shells, and delivers hate-filled sermons against the Democratic Party. He also expects to become the king of America. He reviles his mother—who runs the international church in South Korea—as the “whore of Babylon.”</p><p>Although Abe’s reputation has been stained, it may recover somewhat. His harshest critics tend to be older Japanese who have strong memories of the war and its aftermath, and who fear the revival of their country’s military power. As that generation dies off, Abe may come to seem prescient, because of the way he prepared his country for the threats of a new century in which Japan must defend itself from an assertive China.</p><p>Counterintuitively, the reputation of Yamagami, his alleged assassin, may not suffer. There is an old tradition in Japan of reverence for the doomed hero, the man who undertakes a suicidal quest and becomes a figure of deep nobility, regardless of the justice of his cause. Many Japanese still revere the right-wing nationalists who stormed Tokyo’s government buildings in 1936 and killed not one but two former prime ministers. The plot’s ringleaders were later tried and executed, but a shrine to their memory stands in a prominent place in central Tokyo. The great Japanese author Yukio Mishima memorialized them in a story and a film. Their sincerity and patriotism are what matter to their admirers, not the cruelty of their act or its ramifications.</p><div><figure><picture><img alt="A photo illustration of Tetsuya Yamagami the day of Shinzo Abe's assasination." loading="lazy" sizes="(min-width: 982px) 928px, (min-width: 786px) calc(100vw - 54px), 100vw" srcset="https://cdn.theatlantic.com/thumbor/vovrppJTlCaBzCntXwvwkJvKyNA=/0x0:1800x1950/640x693/media/img/posts/2023/08/WEL_Worth_Abe_Spot2/original.jpg 640w, https://cdn.theatlantic.com/thumbor/aoqlhkWd0NjAOHJhAWc64wisKY4=/0x0:1800x1950/750x812/media/img/posts/2023/08/WEL_Worth_Abe_Spot2/original.jpg 750w, https://cdn.theatlantic.com/thumbor/WndzUmDpGSJ4qo5mQsr6hfgcjh8=/0x0:1800x1950/850x921/media/img/posts/2023/08/WEL_Worth_Abe_Spot2/original.jpg 850w, https://cdn.theatlantic.com/thumbor/psOxJOgrKJS7yPiqX1CL059hR6A=/0x0:1800x1950/928x1005/media/img/posts/2023/08/WEL_Worth_Abe_Spot2/original.jpg 928w, https://cdn.theatlantic.com/thumbor/Ljrq-kby_b3QFyUN8LOGd1neAZE=/0x0:1800x1950/1536x1663/media/img/posts/2023/08/WEL_Worth_Abe_Spot2/original.jpg 1536w" src="https://cdn.theatlantic.com/thumbor/psOxJOgrKJS7yPiqX1CL059hR6A=/0x0:1800x1950/928x1005/media/img/posts/2023/08/WEL_Worth_Abe_Spot2/original.jpg" width="928" height="1005"></picture><figcaption>Shinzo Abe’s alleged assassin, Tetsuya Yamagami, used a homemade gun. After the shooting, he did not attempt to flee. (<em>The Asahi Shimbun</em> / Getty; Minokuniya / Getty)</figcaption></figure></div><p>Something similar could be said of Yamagami. “I no longer have room to think about the political meaning and consequences of Abe’s death,” he wrote a day before the assassination. The purity of his motives—his righteous anger at the Unification Church—seems to have resonated with the Japanese public.</p><p><a data-event-element="inline link" href="https://apnews.com/article/homicide-crime-japan-assassinations-shootings-5d7e1c8237830817d149336fb35e2468">Yamagami’s trial</a> will offer Japan a chance to relive the entire drama. No date has been set as of this writing. Japanese prosecutors take their time, and for a man who has admitted to killing a former head of state, there may be pressure to apply the death penalty. If so, Yamagami will face an excruciating fate. Death-row prisoners in Japan are not told the date of their execution in advance. They wake up every morning not knowing if this day will be their last.</p><p>In the months before he fired the fatal shots, Yamagami described himself as a tragic figure, drawn inexorably to a confrontation that would destroy him. And he did not miss the ironic parallel between his own heedless fury and the zealotry of the church members who had ruined his life. His desperation for a murder weapon, he wrote, was “like a member of the Unification Church throwing his life away for a false savior.”</p><hr><p><small><i>This article appears in the </i><a data-event-element="inline link" href="https://www.theatlantic.com/magazine/toc/2023/10/"><i>October 2023</i></a><i> print edition with the headline “The Prime Minister and the Moonies.”</i></small></p></section><gpt-ad format="injector" sizes-at-0="mobile-wide,native,house" targeting-pos="injector-most-popular" sizes-at-976="desktop-wide,native,house"></gpt-ad></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When to Shut Up: A Visual Guide (With Included Algorithm) (111 pts)]]></title>
            <link>https://shaungallagher.pressbin.com/blog/shut-up.html</link>
            <guid>38140390</guid>
            <pubDate>Sat, 04 Nov 2023 12:24:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://shaungallagher.pressbin.com/blog/shut-up.html">https://shaungallagher.pressbin.com/blog/shut-up.html</a>, See on <a href="https://news.ycombinator.com/item?id=38140390">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="portfolio">




<p>From time to time, many of us find ourselves delivering speeches of various sorts: 
   best-man toasts, employee training sessions, or extended monologues delivered to a confused Arby's employee.</p>

<p>It can be tricky, however, to determine the optimal duration of such speech.</p>

<p>Below, I've compiled a visual guide to help you figure out when you should put a sock in it.</p>

<p>Following these rules won't necessarily guarantee a successful speech — that largely depends on 
   the quality of the content — but it will guarantee that excessive duration is not the chief complaint.</p>

<p>In addition to the visual guide, I've also included an accompanying algorithm that implements the logic from the guide.</p>

<p><a href="https://shaungallagher.pressbin.com/blog/img/shut_up.jpg" target="_new"><img src="https://shaungallagher.pressbin.com/blog/img/shut_up.jpg"></a></p><p>In case you're curious about the format of the flow chart shown in the image above, it's a Drakon chart.</p>

<p>Drakon was developed as part of the now-defunct Soviet space program to produce flow charts with tidy control structures.</p>

<p>If you'd like to experiment with your own Drakon charts, check out <a href="https://drakonhub.com/">DrakonHub.com</a></p>

<h3>The algorithm</h3>


<p>Below is a simple Python algorithm that (roughly) implements the logic shown in the flow chart above.</p>

<pre>def when_should_i_shut_up(
    threshold = "optimal",  # one of: "safe", "optimal", "maximum"
    speech_solicited = False,
    speaker_prepared = False,
    speech_outlined = False,
    speaker_experienced = False,
    audience_knows_time = False,
    speech_written = False,
    audience_paid = False,
    speaker_is_jesus = False,
):
    if not speech_solicited:
        speech_minutes = (0, 0, 1)
    elif not speaker_prepared:
        speech_minutes = (1, 2, 3)
    elif not speech_outlined:
        speech_minutes = (2, 2, 3)
    elif not speaker_experienced:
        speech_minutes = (3, 4, 5)
    elif not audience_knows_time:
        speech_minutes = (5, 8, 10)
    else:
        speech_minutes = (15, 30, 60)

    if speech_minutes:
        if threshold == "safe":
            result = speech_minutes[0]
        elif threshold == "optimal":
            result = speech_minutes[1]
        else:
            result = speech_minutes[2]

    if speaker_experienced or audience_knows_time:
        if speech_written:
            result = int(result * 1.2)

    if audience_paid:
        result = result + (30 if threshold != "maximum" else 60)

    if speaker_is_jesus:
        result = float('inf')

    return result
</pre>




</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Spin 2.0 – open-source tool for building and running WASM apps (114 pts)]]></title>
            <link>https://www.fermyon.com/blog/introducing-spin-v2</link>
            <guid>38140242</guid>
            <pubDate>Sat, 04 Nov 2023 12:01:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.fermyon.com/blog/introducing-spin-v2">https://www.fermyon.com/blog/introducing-spin-v2</a>, See on <a href="https://news.ycombinator.com/item?id=38140242">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <article>
                
                
                <p><img src="https://www.fermyon.com/static/image/spin-v2-header.png" alt="../static/image/spin-v2-header.png"></p>
<p>The Fermyon team is proud to introduce <a href="https://github.com/fermyon/spin/releases/tag/v2.0.0">Spin 2.0</a> — a new major release of <a href="https://github.com/fermyon/spin">Spin</a>, the open source developer tool for building, distributing, and running WebAssembly (Wasm) applications in the cloud.</p>
<p><a href="https://webassembly.org/">Wasm</a> is a technology that is <a href="https://www.fermyon.com/blog/four-domains-wasm">making its way into more and more parts of modern computing</a> — from browser applications, to plugin systems, IoT scenarios and <a href="https://www.fermyon.com/blog/how-to-think-about-wasm">more</a>, and Spin makes it possible to build your serverless-style APIs, websites, full-stack or AI-capable applications as WebAssembly components, generating applications that are:</p>
<ul>
<li><em>orders</em> of magnitude smaller than container images</li>
<li>entirely portable across operating systems and CPU architectures</li>
<li>with <a href="https://fermyon.github.io/spin-benchmarks/criterion/reports/spin-executor__noop/concurrency-1/index.html">incredibly low startup latency</a> and capable of running tens of thousands of requests per second</li>
<li>capable of running <em>anywhere</em>, from tiny devices such as Raspberry Pis, in <a href="https://www.docker.com/blog/announcing-dockerwasm-technical-preview-2/">Docker Desktop</a>, <a href="https://developer.fermyon.com/spin/v2/kubernetes">Kubernetes</a>, <a href="https://www.fermyon.com/blog/spin-nomad">Nomad</a>, or <a href="https://fermyon.com/cloud">Fermyon Cloud</a>, and in even more places soon!</li>
</ul>
<p>Since we <a href="https://www.fermyon.com/blog/introducing-spin">first introduced Spin</a>, our goal has been to create a foundation for a new kind of computing platform that could take advantage of WebAssembly’s runtime characteristics, and for Spin 2.0, we worked with the community on a few key scenarios:</p>
<ul>
<li>enabling WebAssembly component composition</li>
<li>improving performance</li>
<li>laying the foundation for Wasm portability across runtimes and implementations</li>
<li>improving the developer experience, capability support, and SDK ergonomics</li>
</ul>
<p>Let’s dive into what Spin 2.0 looks like!</p>
<!-- break -->
<h2>Hello, Spin!</h2>
<p><img src="https://www.fermyon.com/static/image/spin-v2-intro.png" alt="../static/image/spin-v2-intro.png"></p>
<p>Spin is a developer tool and framework that guides users through creating, compiling, distributing, and running server-side applications with WebAssembly.
You can take advantage of the <code>spin new</code>, <code>spin build</code>, and <code>spin up</code> set of commands to start your journey:</p>
<pre><code># Create a new application with one JavaScript component and enter it's directory
$ spin new hello-spin2 --template http-js
$ cd hello-spin2
# Add a new component written in Rust to our application
$ spin add hellorust --template http-rust

</code></pre>
<p>This creates all the configuration and source code required to run our application.
Spin 2.0 comes with an <a href="https://github.com/fermyon/spin/blob/main/docs/content/sips/005-manifest-redesign.md">updated</a> <code>spin.toml</code> manifest that focuses on simplicity and on the capabilities a component is allowed to access. Let’s have a look at the manifest for a simple component that is allowed to access a Redis database:</p>
<pre><code># The HTTP route /hello-spin2 should be handled by the `hello-spin2` component
[[trigger.http]]
route = "/hello-spin2"
component = "hello-spin2"

[component.hello-spin2]
# The Wasm component to be instantiated and executed when receiving a request
source = "target/hello-spin2.wasm"

# Any capability this component can access (files, variables,
# outbound connections, KV stores, databases) must be declared
# in the component manifest.
# For example, this component can only make outbound connections
# to the following hosts:
allowed_outbound_hosts = ["rediss://my-redis-server"]

[component.hello-spin2.build]
# The command to execute when building this component
command = "npm run build"

</code></pre>
<p>At this point, you can write a handler function using any of the <a href="https://developer.fermyon.com/spin/v2/language-support-overview">supported languages</a>, such as Rust, JavaScript, TypeScript, or Go (or any language that <a href="https://www.fermyon.com/wasm-languages/index">compiles to WASI</a>).</p>
<p>Now let’s look at a simple component written in JavaScript — a single <code>handler</code> function that takes a request, then returns a response:</p>
<pre><code>// Hello world in JavaScript.
export async function handler(req, res) {
    res.status(200).body("Hello, Spin 2.0 from JavaScript!")
}
</code></pre>
<p>When writing your applications, you can interact with built-in persistence, configuration, or data services from your Wasm components, or communicate with external systems. Here is a sample of what you can do today from a component running in Spin:</p>
<ul>
<li>persistence using <a href="https://developer.fermyon.com/spin/v2/kv-store-api-guide">the build-in key value store</a>, <a href="https://developer.fermyon.com/spin/v2/sqlite-api-guide">built-in SQLite database</a>, <a href="https://developer.fermyon.com/spin/v2/rdbms-storage">external database support for MySQL and PostgreSQL</a>, <a href="https://developer.fermyon.com/spin/v2/redis-outbound">Redis</a></li>
<li><a href="https://developer.fermyon.com/spin/v2/variables">built-in dynamic application variables</a>, <a href="https://developer.fermyon.com/spin/v2/dynamic-configuration#vault-application-variable-provider">powered by Vault</a></li>
<li>outbound connectivity to any HTTP API, now built on top of the <a href="https://github.com/webassembly/wasi-http"><code>wasi-http</code> standard proposal</a></li>
<li>running AI workloads such as <a href="https://developer.fermyon.com/spin/v2/serverless-ai-api-guide#serverless-ai-interface">running inferencing on LLMs, or generating and storing sentence embeddings</a></li>
</ul>
<p>Next, <code>spin build</code> will execute the build commands for all components in the application, and <code>spin up</code> will start the application locally. If you’re iterating locally on your application, <a href="https://www.fermyon.com/blog/spin-watch-live-reloading">you might use <code>spin watch</code></a> to automatically rebuild and restart your app whenever you change your source code.</p>
<p>Finally, you can use <code>spin cloud deploy</code> to instantly <a href="https://developer.fermyon.com/cloud/deploy">deploy your application to Fermyon Cloud</a>, <a href="https://developer.fermyon.com/spin/v2/registry-tutorial">push the application to a registry service such as Docker Hub or GitHub Container Registry using <code>spin registry push</code></a>, or <a href="https://developer.fermyon.com/spin/v2/kubernetes">deploy the application to Kubernetes using <code>spin k8s deploy</code></a>.</p>
<p>Let’s see how we can deploy our newly created Spin 2.0 application to Fermyon Cloud:</p>
<pre><code># Deploying our Spin 2.0 application to Fermyon Cloud
$ spin cloud deploy
Uploading hello-spin2 version 0.1.0 to Fermyon Cloud...
Deploying...
Waiting for application to become ready........ ready
Available Routes:
  hello-spin2: https://hello-spin2-0a8dkb8e.fermyon.app/hello-spin2
  hellorust: https://hello-spin2-0a8dkb8e.fermyon.app/hellorust
</code></pre>
<h2>Bringing the Component Model and WASI Preview 2 to production</h2>
<p><img src="https://www.fermyon.com/static/image/spin-twcm-wasi.png" alt="../static/image/spin-twcm-wasi.png"></p>
<p>All the above was possible in Spin 1.x already. In fact, while our SDKs so far produced regular <code>.wasm</code> files, since Spin 1.5 they were turned into WebAssembly Component binaries before execution. So Spin and Fermyon Cloud have executed nothing but components for months now — but this was an implementation detail under the hood. With today’s release of Spin 2.0, we’re taking things a huge step further: we’re finally bringing some of the benefits of the <a href="https://component-model.bytecodealliance.org/">WebAssembly Component Model</a> and the upcoming WASI Preview 2 milestone to a production environment.</p>
<p>The Component Model introduces two key additions to WebAssembly: a simple way to bring efficient high-level interfaces to content running in WebAssembly, regardless of which language was used to create that content; and the ability to compose components using these interfaces, building powerful applications out of smaller pieces that are isolated from each other, but can efficiently communicate across language boundaries.</p>
<p>Through the rest of this post, we’ll talk about how we’re making use of these properties in Spin 2.0, and how we’re going about making a precursor of the upcoming WASI Preview 2 available for production use right now, while supporting the standardization process towards an ideal final version of the specification.</p>
<h2>Enabling Polyglot Component Composition</h2>
<p>More concretely, with the Component Model a component written in JavaScript can import a high-performance component written in Rust, or another written in Python, and they can communicate and exchange data in a portable way, without needing to be aware of the language, or any other implementation details, of each other.</p>
<p>Spin 2.0 can produce and run WebAssembly components natively, and today you can use <a href="https://component-model.bytecodealliance.org/language-support.html">tooling in Rust, JavaScript, TypeScript, and Python</a> to build components that can run inside Spin applications.</p>
<p>Let’s explore a real example — one of the most used components in Spin applications is a <a href="https://github.com/fermyon/spin-fileserver">static file server</a>. It is a component that serves files from disk and sends them as HTTP responses, and it is used for every website powered by Spin (including the website you are reading this article on). We initially wrote it in Rust, which means until now, if we wanted to use its functionality from any other language, we had to either reimplement its functionality in a new language, or call it over the network.</p>
<p>With Spin 2.0, we can import the file server functionality and make use of it in a component written in another language. To achieve this for our example, we will use the following component tooling: <a href="https://github.com/bytecodealliance/cargo-component"><code>cargo component</code></a>, <a href="https://github.com/bytecodealliance/componentize-py"><code>componentize-py</code></a>, and <a href="https://github.com/bytecodealliance/wasm-tools"><code>wasm-tools compose</code></a>, which generates a new component by linking the two according to their interface contract. In <a href="https://component-model.bytecodealliance.org/design/wit.html">WIT</a>, the Component Model’s language for describing interfaces for components to implement or consume, such a contract is called a <a href="https://component-model.bytecodealliance.org/design/worlds.html">“world”</a>.</p>
<p><img src="https://www.fermyon.com/static/image/spin-v2-rust-python-components.png" alt="../static/image/spin-twcm-wasi.png"></p>
<p>In other words — we implement our business logic in a high-performance, memory-safe language like Rust, targeting a known interface (in this case, the <a href="https://github.com/WebAssembly/wasi-http/blob/main/proxy.md">WASI HTTP <code>proxy</code> world</a>), and we compile it using <code>cargo component</code>, which generates a standard WebAssembly component (<code>spin_static_fs.wasm</code>):</p>
<pre><code>// A simplified Rust component that implements our business logic
// https://github.com/fermyon/spin-fileserver/blob/main/src/lib.rs
#[http_component]
async fn handle(req: IncomingRequest, res_out: ResponseOutparam) {
	println!("Hello from Rust!");
	// See the source file linked above for the actual implementation.
}
</code></pre>
<p>We can now use this interface in a new component, that we’ll write in Python and build with <code>componentize-py</code>. This component imports the same interfaces our Rust component implements, but instead of doing so itself, it handles our incoming HTTP request by calling into the Rust component we just built:</p>
<pre><code># A simplified Python component that imports the business logic
# https://github.com/fermyon/spin-fileserver/blob/main/examples/python/app.py
from proxy.imports import incoming_handler as file_server
from proxy.imports.types import IncomingRequest, ResponseOutparam
...
async def handler(req: IncomingRequest, res: ResponseOutparam):
  print("Hello from Python!")
	# Omitted: logic to further process the request, check authentication, etc.
	file_server.handle(req, res)
</code></pre>
<p>We now use <code>componentize-py</code> to create a new component, then use <code>wasm-tools compose</code> to link the two components, resulting in a new component that can be run in Spin 2.0 and other runtimes supporting the Component Model and the same precursor to WASI Preview 2:</p>
<pre><code># Build a component that imports the proxy world (http.wasm)
# This component will have to be linked with another component that
# implements the proxy world before it can be used.
$ componentize-py -d ../wit -w proxy componentize app -o http.wasm

# `spin_static_fs.wasm`, and generate a new component, `composed.wasm`
$ wasm-tools compose -d spin_static_fs.wasm http.wasm -o composed.wasm
</code></pre>
<p><img src="https://www.fermyon.com/static/image/spin-v2-composed-full.png" alt="../static/image/spin-twcm-wasi.png"></p>
<p>And here’s this newly generated component running in Spin 2.0:</p>
<pre><code>$ cat spin.toml
...
[component.fileserver]
source = "composed.wasm"
files = [{ source ="my-files/*", destination = "/" }]
$ spin up
Available Routes:
  fileserver: http://127.0.0.1:3000/static (wildcard)

Hello from Python!
Hello from Rust!
... stream the requested file over HTTP
</code></pre>
<p>This example walked through how to manually create components in different languages, link them, then execute the generated component with Spin.</p>
<p>As tooling for component composition matures, we are working within the language ecosystems to add more integrated support for components and to streamline the creation and composition of components.</p>
<p>You can find the <a href="https://github.com/fermyon/spin-fileserver">example importing the file server component in JavaScript or Python</a>, <a href="https://github.com/fermyon/http-auth-middleware">and an HTTP OAuth middleware component</a> on GitHub. You can import them in your own Spin applications, or use them as a starting point for building new WebAssembly components.</p>
<h2>Performance, Streaming, and WASI HTTP</h2>
<p>The composition of components allows very fine-grained isolation of different parts of an application from each other, enabling developers to reason about which parts of their application have access to the most sensitive data, or are most critical to the application’s overall security, correctness, and stability.</p>
<p>But Spin adds another dimension to this fine-grained isolation: for every new request, it will create a fresh new instance of the Wasm component(s) handling the request, process it, then terminate the instance. That means that even in case an attacker can exploit a flaw in the application to corrupt its state, that corruption will only last for the current request, instead of affecting all future requests processed on the same machine.</p>
<p>Spin can do this because of the incredibly fast startup time for WebAssembly components, and the incredible work happening in the <a href="https://github.com/bytecodealliance/wasmtime">Wasmtime</a> project.</p>
<p>For scenarios with many concurrent, short-lived instances (which is perfect for serverless-style workloads), Spin 2.0 has significantly improved performance compared to Spin 1.0, in large part due to <a href="https://github.com/fermyon/spin/pull/1721">using Wasmtime’s pooling memory allocator</a>, which when combined with other performance work, can improve the throughput of Spin <a href="https://www.fermyon.com/blog/introducing-spin-v1#2">by up to an order of magnitude</a> in real-world scenarios.</p>
<p>To showcase how fast Spin can create new isolated Wasm instances for every request, we can create a new “hello world” application using Spin 2.0 and run a simple load test locally:</p>
<pre><code># Creating a new Spin application
$ spin new perftest
$ spin build &amp;&amp; spin up &amp;
# Creating a load test for 10 seconds with 5 concurrent connections
$ bombardier localhost:3000 -c 5

Statistics        Avg      Stdev        Max
  Reqs/sec     28301.16    2875.66   32328.99
  Latency      175.56us    20.01us     4.57ms
  HTTP codes:
    1xx - 0, 2xx - 282999, 3xx - 0, 4xx - 0, 5xx - 0
</code></pre>
<p>On a macOS machine, in 10 seconds, Spin created and executed almost <em>three hundred thousand</em> WebAssembly instances, with about 28,000 requests per second and average latency that is below 200 <em>microseconds.</em></p>
<p>Real-world workloads will most often be bottlenecked by external calls such as database access and outbound networking, but the time between sending the request until your application starts executing is <a href="https://www.fermyon.com/blog/next-generation-of-serverless-is-happening">crucial in a lot of scenarios</a>, and Spin 2.0 ensures improved startup performance for such applications. And that goes for every request, not just those being processed after an initial startup and warmup phase.</p>
<p>Startup performance is just one aspect of performance — another crucial aspect is sending a response back as soon as it starts becoming available, even if the server hasn’t finished processing yet. This is known as “streaming” responses, and Spin 2.0 now has experimental support for streaming HTTP responses, built on top of <a href="https://github.com/webassembly/wasi">WASI preview 2</a> and <a href="https://github.com/webassembly/wasi-http">WASI HTTP</a>.</p>
<p>We’re already making use of this in the file server example described above, but let’s see a focused example in action — we want to read parts of a file, then send the chunks back as soon as they are done processing (as opposed to waiting and sending the entire file back):</p>
<pre><code>// https://github.com/fermyon/spin/blob/main/examples/wasi-http-streaming-file/src/lib.rs
async fn stream_file(_req: IncomingRequest, res: ResponseOutparam) -&gt; Result&lt;()&gt; {
    // Create a response body
    let mut body = response.take_body();
    // Open a file for processing and start reading 1 MB chunks.
    let mut file = File::open("my-large-file.bin")?;
    const CHUNK_SIZE: usize = 1024 * 1024; // 1 MB

    // For every chunk read from the file, process it, then
    // immediately stream the processed part to the client.
    let mut buffer = vec![0; CHUNK_SIZE];
    loop {
        let bytes_read = file.read(&amp;mut buffer[..])?;
        if bytes_read == 0 {
            break;
        }
        // Potentially further process the bytes read
        // and send the chunks back as they are available.
        let data = &amp;buffer[..bytes_read]);
        body.send(data.to_vec()).await?;
        println!("sent {} bytes", data.len());
    }
    Ok(())
}
</code></pre>
<p>This is essentially the core of how <a href="https://github.com/fermyon/spin-fileserver">the file server component</a> is able to stream large files, and it is a pattern that can be used whenever performance and interactivity are crucial.</p>
<h2>Bringing Production Use to the Standardization Process</h2>
<p>To reiterate, all the above is made possible by the WebAssembly Component Model and the upcoming next version of WASI, Preview 2. Much of this work is driven upstream in the <a href="https://bytecodealliance.org/">Bytecode Alliance</a>, where we’ve long provided major contributions and helped realize the vision of the WebAssembly Component Model and WASI.</p>
<p>Neither the Component Model nor WASI Preview 2 are “done”, and while the former is by now very stable, the latter is still under heavy development. We’re actively involved in this development, but with today’s release, we’re doing something different: we’re bringing real-world production use to the standardization and implementation process.</p>
<p>A good standard that serves real-world use cases well can’t be created in isolation and without input from developers using it in the real world. Besides bringing exciting new features to Spin and Fermyon Cloud, that is a key motivation for what we’re releasing today: we want developers to have a place where they can take the Component Model and the current iteration of WASI Preview 2 for a spin, with real production use, not just experiments and testcases.</p>
<h2>Adapting to a Changing World</h2>
<p>This poses the question of how we’re doing this. If the specification is in flux and APIs are changing, how can we give developers a stable basis to build on top of?</p>
<p>Luckily, this is made fairly easy by the fact that Component Model interfaces are versioned. Spin 2.0 exposes a the <a href="https://github.com/bytecodealliance/wasmtime/blob/release-14.0.0/crates/wasi/wit/main.wit"><code>2023-10-18</code> snapshot</a> of WASI Preview 2, which is shipping with <a href="https://github.com/bytecodealliance/wasmtime/releases/tag/v14.0.4">Wasmtime 14</a>. Over the next few months, we’ll continue releasing new snapshots of WASI Preview 2, while keeping support for the previous ones. This enables existing content to continue working, while allowing new content to make use of the latest WASI Preview 2 improvements.</p>
<p>But that raises another question: how do we indefinitely support all these different snapshots?</p>
<p>The answer lies in the composability of WebAssembly Components described above. Whenever we introduce support for a new snapshot, we can decide which of the existing snapshots we want to continue supporting natively. When we decide to stop native support for a snapshot, we can move its implementation into a component itself, which functions as an <em>adapter</em> between different snapshots. Such a component will then <em>import</em> one snapshot of WASI Preview 2 and <em>export</em> another one, implemented in terms of the imported one.</p>
<p>Eventually the final version of WASI Preview 2 will be released. After that point, we’ll likely move support for all snapshot versions into adapters, and only have that single, stable version implemented natively. This way, we get the best of both worlds: we can give developers using Spin, and customers deploying their applications to Fermyon Cloud the stability they need for production use, while ensuring that we’re able to keep the Spin codebase maintainable and lean.</p>
<h2>Towards an Interoperable Ecosystem</h2>
<p>The Component Model and WASI are of course not just aiming to make it easy to support different languages, and to allow components built using different languages to interoperate. Another key goal is interoperability between hosts. Once the final version of WASI Preview 2 is released, we’ll see that happening for a wide range of platforms, the way it’s currently the case for WASI Preview 1.</p>
<p>For now, interoperability is more limited, because not everyone will have the ability to rapidly deploy support for WASI Preview 2 snapshot versions. But it’s not entirely absent either: Spin 2.0 uses the implementation of WASI APIs provided by Wasmtime 14, so content that only uses WASI APIs (as opposed to <a href="https://developer.fermyon.com/spin/v2/api-guides-overview">Spin’s non-WASI APIs</a>) will work in Wasmtime 14 as well.</p>
<p>Additionally, we’ve worked with our friends at NGINX to implement <a href="https://github.com/nginx/unit/issues/991">experimental support for the Component Model and WASI HTTP</a> in NGINX Unit. You can play around with this, and see the same content running in Spin, NGINX Unit, and Wasmtime by downloading the <a href="https://hub.docker.com/layers/nginx/unit-preview/wasm-wasi-http/images/sha256-abeba2eb2f1ed10eb07336e57558664a868c4689bb02e279d16fe8a203f82379?context=explore">Docker image</a> of their current demo of a pre-release version of the next version of NGINX Unit.</p>
<h2>A Call to Action</h2>
<p>I want to end this post with a call to action: please take <a href="https://developer.fermyon.com/spin/v2/quickstart">Spin</a> and <a href="https://component-model.bytecodealliance.org/tutorial.html">the Component Model and WASI Preview 2</a> for a spin! And please <a href="https://www.fermyon.com/discord">let us know</a> how it goes, and what does and doesn’t work for your projects!</p>
<iframe width="768" height="395" src="https://www.youtube.com/embed/tlxkK_2NHII" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe>
<p>And if you’re at KubeCon in Chicago next week, <a href="https://www.fermyon.com/kubeconchicago2023">please come by our booth to chat about all this in person</a>.</p>


                <!-- embed Spin Up Hub examples in a blog post
     or page with this template -->
            </article>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A 6 channel GPS receiver from 1993 (187 pts)]]></title>
            <link>https://mastodon.sdf.org/@keelan/111349948124943603</link>
            <guid>38139687</guid>
            <pubDate>Sat, 04 Nov 2023 10:27:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mastodon.sdf.org/@keelan/111349948124943603">https://mastodon.sdf.org/@keelan/111349948124943603</a>, See on <a href="https://news.ycombinator.com/item?id=38139687">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Is there anywhere in the world someone can just live for free? (180 pts)]]></title>
            <link>https://reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/</link>
            <guid>38139251</guid>
            <pubDate>Sat, 04 Nov 2023 08:57:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/">https://reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/</a>, See on <a href="https://news.ycombinator.com/item?id=38139251">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="t3_17mvukd-post-rtjson-content">
    <p>
    I’m thinking back to the early-American homesteading days when a man could venture into uncharted territory and make a simple life for himself. It seems like every square inch of Earth is owned by someone, but are there any places someone could still do this in modern times?
  </p><p>
    Edit: Several users have pointed out that homesteading was incredibly difficult, and we’d all likely die trying to live so simply. Let’s assume the person is relatively capable of sustaining life using whichever resources might be provided by the particular environment — forest, desert, famous Bay Area city, etc.
  </p><p>
    Current Suggestions
  </p><table>
    <thead>
      <tr>
        <th>
            Place
          </th><th>
            Notes
          </th><th>
            Likely Death
          </th>
      </tr>
      <tr></tr>
    </thead>

    <tbody>
      <tr>
          <td>
              Off the grid <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nwjoy/" rel="noopener nofollow ugc" target="_blank">in SE Asia</a>
            </td><td>
              Cambodia, India, Vietnam
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Homeless in major cities
            </td><td>
              SF, NYC, <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nzi28/" rel="noopener nofollow ugc" target="_blank">Finland</a> and LA
            </td><td>
              ☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Japan
            </td><td>
              Buy an <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7njkpk/" rel="noopener nofollow ugc" target="_blank">abandoned home</a>, but <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pwwae/" rel="noopener nofollow ugc" target="_blank">beware</a>!
            </td><td>
              
            </td>
        </tr><tr>
          <td>
              Italy
            </td><td>
              Some villages will pay you to move there
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Detroit
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7oe1wu/" rel="noopener nofollow ugc" target="_blank">Subsidized</a> homes?
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              The Yukon
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7o1nak/" rel="noopener nofollow ugc" target="_blank">Not free</a> &amp; <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nrtdd/" rel="noopener nofollow ugc" target="_blank">not cheap</a>
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Bar Tawil
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nk33y/" rel="noopener nofollow ugc" target="_blank">Free land!</a>
            </td><td>
              ☠️☠️☠️☠️☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7og3xz/" rel="noopener nofollow ugc" target="_blank">Marquette, KS</a>
            </td><td>
              Giving away land?
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Russia
            </td><td>
              the <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7oct42/" rel="noopener nofollow ugc" target="_blank">rural parts</a>
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Norway
            </td><td>
              In an <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7phhtt/" rel="noopener nofollow ugc" target="_blank">abandoned fishing village</a>. yay.
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              National Forest Land
            </td><td>
              you have to move <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nj7dx/" rel="noopener nofollow ugc" target="_blank">every 14 days</a>
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              BLM Land
            </td><td>
              That's Bureau of Land Management
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nm28w/" rel="noopener nofollow ugc" target="_blank">On a boat</a> in the ocean
            </td><td>
              Not Free
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              At home with parents
            </td><td>
              Their house their rules
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7o0x5x/" rel="noopener nofollow ugc" target="_blank">Auroville Ashram</a>
            </td><td>
              in Pudducherry, India
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Bombay Beach, CA
            </td><td>
              A <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nnyol/" rel="noopener nofollow ugc" target="_blank">secret paradise</a>?
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Alaska
            </td><td>
              Ketchican for <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7o5fzv/" rel="noopener nofollow ugc" target="_blank">tax-free land</a> or <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7ntagz/" rel="noopener nofollow ugc" target="_blank">homestead</a>.
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Slab City, CA
            </td><td>
              IRL Mad Max vibes
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Mongolia
            </td><td>
              What's <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pga4r/" rel="noopener nofollow ugc" target="_blank">land ownership</a>?
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Wyoming
            </td><td>
              Not free, <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nj0pb/" rel="noopener nofollow ugc" target="_blank">but cheap</a>
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              SW desert
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7o8gvy/" rel="noopener nofollow ugc" target="_blank">Not free</a>
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nwzky/" rel="noopener nofollow ugc" target="_blank">Prison</a> or Jail
            </td><td>
              Might <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7o7ax5/" rel="noopener nofollow ugc" target="_blank">cost you</a>
            </td><td>
              ☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Monastery
            </td><td>
              Be (celibate) monk or nun
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Military
            </td><td>
              On par with Prison or Jail
            </td><td>
              ☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Colorado
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7p92v9/" rel="noopener nofollow ugc" target="_blank">$5K fot 5 acres</a> aint bad
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Jungles
            </td><td>
              Amazon, Africa, Papua New Guinea
            </td><td>
              ☠️☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Camps in US/Canada
            </td><td>
              Have to move periodically
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7nje69/" rel="noopener nofollow ugc" target="_blank">Terra nullius</a>
            </td><td>
              in Antarctica
            </td><td>
              ☠️☠️☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Aroostook County, Maine
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7q4vaa/" rel="noopener nofollow ugc" target="_blank">live off the land</a>
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Yucatan Peninsula
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pd0lj/" rel="noopener nofollow ugc" target="_blank">Mexican citizens</a> can claim land
            </td><td>
              ☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pl85r/" rel="noopener nofollow ugc" target="_blank">Antikythera</a>, Greece
            </td><td>
              Land and ~500 EUR/month from the gov
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Australia
            </td><td>
              The Outback or in a <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7q04o8/" rel="noopener nofollow ugc" target="_blank">Company Town</a>
            </td><td>
              ☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Romania &amp; Bulgaria
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7ppnce/" rel="noopener nofollow ugc" target="_blank">House for $1000</a> and safe?
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Appalachian Mountains
            </td><td>
              Beware of the <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pzscw/" rel="noopener nofollow ugc" target="_blank">Feral people</a>
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Samoa or Tonga
            </td><td>
              With the <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pwboe/" rel="noopener nofollow ugc" target="_blank">Chief's permission</a>
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pvwqs/" rel="noopener nofollow ugc" target="_blank">Vanuatu</a>
            </td><td>
              South Pacific island
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Pitcairn Island
            </td><td>
              If accepted you get free farmland
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Ushuaia, Argentina
            </td><td>
              If you <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7pvei5/" rel="noopener nofollow ugc" target="_blank">raise livestock</a>
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Karluk, Alaska
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7phhtt/" rel="noopener nofollow ugc" target="_blank">will pay you</a> to move your family
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7p36o5/" rel="noopener nofollow ugc" target="_blank">Crown Land</a>
            </td><td>
              Canadian Federal land
            </td><td>
              ☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Arcosanti, AZ
            </td><td>
              An experimental hippie town
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Managua, Nicaragua
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7o55ld/" rel="noopener nofollow ugc" target="_blank">Might be free</a> to homestead
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Freetown Christiania
            </td><td>
              Commune in Denmark
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Spain
            </td><td>
              <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7od2ug/" rel="noopener nofollow ugc" target="_blank">Care for a rich man's almonds</a>
            </td><td>
              ☠️
            </td>
        </tr><tr>
          <td>
              Manila, Philippines
            </td><td>
              Literally slummin' it
            </td><td>
              ☠️☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Pipestone, MB
            </td><td>
              Only about <a href="https://old.reddit.com/r/NoStupidQuestions/comments/17mvukd/is_there_anywhere_in_the_world_someone_can_just/k7qejco/" rel="noopener nofollow ugc" target="_blank">$10 to be a farmer</a>
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              City Bus in Alaska
            </td><td>
              Suggested several times
            </td><td>
              ☠️☠️☠️☠️☠️☠️☠️☠️☠️☠️
            </td>
        </tr><tr>
          <td>
              Join a commune
            </td><td>
              <a href="https://www.ic.org/directory/" rel="noopener nofollow ugc" target="_blank">https://www.ic.org/directory/</a>
            </td><td>
              ☠️☠️
            </td>
        </tr><tr>
          <td>
              Airports
            </td><td>
              <a href="https://en.m.wikipedia.org/wiki/List_of_people_who_have_lived_in_airports" rel="noopener nofollow ugc" target="_blank">It’s possible</a>
            </td><td>
              
            </td>
        </tr>
    </tbody>
  </table>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How to stop turmeric from killing people (233 pts)]]></title>
            <link>https://www.economist.com/leaders/2023/11/02/how-to-stop-turmeric-from-killing-people</link>
            <guid>38139011</guid>
            <pubDate>Sat, 04 Nov 2023 07:59:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.economist.com/leaders/2023/11/02/how-to-stop-turmeric-from-killing-people">https://www.economist.com/leaders/2023/11/02/how-to-stop-turmeric-from-killing-people</a>, See on <a href="https://news.ycombinator.com/item?id=38139011">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><h2>Developing countries—especially India—should learn from Bangladesh</h2></section><div><div data-body-id="cp2"><div><figure><div><figcaption>Listen to this story.</figcaption> <p><span>Enjoy more audio and podcasts on<!-- --> <a id="audio-ios-cta" href="https://economist-app.onelink.me/d2eC/bed1b25" target="_blank" rel="noreferrer">iOS</a> <!-- -->or<!-- --> <a id="audio-android-cta" href="https://economist-app.onelink.me/d2eC/7f3c199" target="_blank" rel="noreferrer">Android</a>.</span></p></div><audio controls="" id="audio-player" preload="none" src="https://www.economist.com/media-assets/audio/008%20Leaders%20-%20Lead%20poisoning-3717784f88d90a791263b34860e72be2.mp3" title="How to stop turmeric from killing people " controlslist="nodownload"><p>Your browser does not support the &lt;audio&gt; element.</p></audio></figure></div><p data-component="paragraph"><span data-caps="initial">T</span><small>urmeric, a flowering</small> plant of the ginger family, has long been prized in Ayurvedic medicine for its anti-inflammatory properties and in Asian cuisines for its earthy flavour and vibrant hue. Haldi, the spice’s Hindi name, is derived from the Sanskrit for “golden coloured”. But for the millions of South Asians who habitually consume it, turmeric’s skin-staining yellowness can be deceptive and deadly.</p><p data-component="paragraph">To heighten their colour, the rhizomes from which the spice is extracted are routinely dusted with lead chromate, a neurotoxin. The practice helps explain why South Asia has the highest rates of lead poisoning in the world. The heart and brain diseases it causes—to which children are especially susceptible—accounted for at least 1.4m deaths in the region in 2019. The economic cost is crippling; that year lead poisoning is estimated to have lowered South Asian productivity by the equivalent of 9% of <small>GDP</small>. Yet it turns out that with clever policies, enlightened leadership and astute messaging this blight can be greatly reduced. Bangladesh has <a href="https://www.economist.com/asia/2023/11/02/bangladesh-strikes-a-blow-against-lead-poisoning">shown how</a>.</p><p data-component="paragraph">At the instigation of teams from Stanford University and the International Centre for Diarrhoeal Disease Research, Bangladesh, a research institute, the country launched a nationwide campaign against turmeric adulteration in 2019. Rules against adulteration were enforced and well-publicised stings carried out against wholesalers who persisted in it. The prime minister, Sheikh Hasina, discussed the problem on television. Bangladeshi bazaars were plastered with warnings against it. Local media also publicised it.</p><p data-component="paragraph">According to newly published data, the country thereby reduced the prevalence of turmeric adulteration in its spice markets to zero in just two years. That slashed lead levels in the blood of Bangladeshi turmeric-mill workers by about a third. Nationwide, it probably saved thousands of lives. Early analysis suggests that each extra year of healthy life cost a mere $1 to preserve. Achieving the same benefit through cash transfers is estimated to cost over $800.</p><p data-component="paragraph">Other countries where lead poisoning is rife should follow Bangladesh. Recent estimates suggest a staggering 815m children—one in three of the global total—have been poisoned by the metal. According to the Centre for Global Development, a think-tank in Washington, this disaster explains a fifth of the learning gap between children in rich and poor countries.</p><p data-component="paragraph">The poisoning has many causes. Weak or absent regulators permit lead-infused cooking utensils, cosmetics and other products. Yet adulterated turmeric looks like a major culprit almost everywhere, chiefly owing to poor practice in India, which produces 75% of the spice. India was the source of much of the poisonous pigment found in Bangladesh and is estimated to have the highest incidence of lead poisoning of any country.</p><p data-component="paragraph">Bangladesh’s response to the problem, if properly understood, could work in many countries. Its key elements included an openness to foreign expertise; effective <small>NGO</small>s; a willingness by the government to work with them; and the formation of an even broader coalition, also including journalists and private firms, to maximise the effort. This low-cost, co-ordinated and relentless approach to problem-solving, familiar to admirers of Bangladesh, has underpinned its outstanding development success over the past two decades. And Sheikh Hasina deserves credit for it—even though her commitment to such enlightened policymaking appears to be flagging.</p><h2>Leaders and lead poisoning </h2><p data-component="paragraph">With an election approaching, the world’s longest-serving woman prime minister, Bangladesh’s ruler for two decades, is growing more <a href="https://www.economist.com/asia/2023/05/24/sheikh-hasina-is-asias-iron-lady">authoritarian and irascible</a>. The importance of the turmeric campaign should help persuade her to reverse course. As it shows, the Bangladeshi model rests on organising, collaboration and consensus, not political fiat, and there is much more than her legacy riding on it.</p><p data-component="paragraph">India, whose leader, Narendra Modi, is in the process of driving out foreign donors and dismantling any <small>NGO</small> he considers unfriendly to him, has much to learn from Bangladesh’s more open, pragmatic approach. The developing world has countless health and environmental problems that it might help solve. For these many reasons, it should be sustained and widely copied. <span>■</span></p></div><p>This article appeared in the Leaders section of the print edition under the headline "How to stop turmeric killing people"</p><div data-tracking-id="content-well-chapter-list"><h2><a href="https://www.economist.com/leaders/">Leaders</a> <span>November 4th 2023</span></h2><ul><li><a href="https://www.economist.com/leaders/2023/11/02/the-world-economy-is-defying-gravity-that-cannot-last"><span>The world economy is defying gravity. That cannot last</span></a></li><li><a href="https://www.economist.com/leaders/2023/11/02/why-israel-must-fight-on"><span>Why Israel must fight on</span></a></li><li><a href="https://www.economist.com/leaders/2023/11/02/donald-trumps-tariff-plans-would-inflict-grievous-damage-on-america-and-the-world"><span>Trump’s tariff plans would be disastrous for America and the world</span></a></li><li><a href="https://www.economist.com/leaders/2023/11/02/how-to-stop-turmeric-from-killing-people"><span>How to stop turmeric from killing people</span></a></li><li><a href="https://www.economist.com/leaders/2023/11/02/why-the-rules-on-embryo-experiments-should-be-loosened"><span>Why the rules on embryo experiments should be loosened</span></a></li><li><a href="https://www.economist.com/leaders/2023/11/02/britains-prisons-show-up-wider-flaws-in-government"><span>Britain’s prisons show up wider flaws in government</span></a></li></ul></div><div orientation="vertical" data-test-id="vertical"><div orientation="vertical"><figure><img alt="Too good to be true: The contradiction at the heart of the world economy" loading="lazy" width="1280" height="1684" decoding="async" data-nimg="1" sizes="300px" srcset="https://www.economist.com/img/b/16/21/90/media-assets/image/20231104_DE_US.jpg 16w, https://www.economist.com/img/b/32/42/90/media-assets/image/20231104_DE_US.jpg 32w, https://www.economist.com/img/b/48/63/90/media-assets/image/20231104_DE_US.jpg 48w, https://www.economist.com/img/b/64/84/90/media-assets/image/20231104_DE_US.jpg 64w, https://www.economist.com/img/b/96/126/90/media-assets/image/20231104_DE_US.jpg 96w, https://www.economist.com/img/b/128/168/90/media-assets/image/20231104_DE_US.jpg 128w, https://www.economist.com/img/b/256/336/90/media-assets/image/20231104_DE_US.jpg 256w, https://www.economist.com/img/b/360/473/90/media-assets/image/20231104_DE_US.jpg 360w, https://www.economist.com/img/b/384/505/90/media-assets/image/20231104_DE_US.jpg 384w, https://www.economist.com/img/b/480/631/90/media-assets/image/20231104_DE_US.jpg 480w, https://www.economist.com/img/b/600/789/90/media-assets/image/20231104_DE_US.jpg 600w, https://www.economist.com/img/b/834/1097/90/media-assets/image/20231104_DE_US.jpg 834w, https://www.economist.com/img/b/960/1263/90/media-assets/image/20231104_DE_US.jpg 960w, https://www.economist.com/img/b/1096/1441/90/media-assets/image/20231104_DE_US.jpg 1096w, https://www.economist.com/img/b/1280/1684/90/media-assets/image/20231104_DE_US.jpg 1280w, https://www.economist.com/img/b/1424/1873/90/media-assets/image/20231104_DE_US.jpg 1424w" src="https://www.economist.com/img/b/1424/1873/90/media-assets/image/20231104_DE_US.jpg"></figure></div><div orientation="vertical"><h3 orientation="vertical">From the November 4th 2023 edition</h3><p orientation="vertical">Discover stories from this section and more in the list of contents </p><a href="https://www.economist.com/printedition/2023-11-04" data-analytics="sidebar:weekly_edition"><svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><g fill="none" fill-rule="evenodd"><path d="M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1zm.142 4.5l-1.008 1.062c3.33 3.276 4.194 4.14 4.608 4.5-1.602-.018-3.168-.018-10.242-.018v1.584c7.074 0 8.73 0 10.242-.018-.432.36-1.314 1.206-4.608 4.536l1.008 1.044 6.354-6.354L12.142 5.5z" fill="#2E45B8" fill-rule="nonzero"></path></g></svg><span>Explore the edition</span></a></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Post Mortem on Cloudflare Control Plane and Analytics Outage (424 pts)]]></title>
            <link>https://blog.cloudflare.com/post-mortem-on-cloudflare-control-plane-and-analytics-outage/</link>
            <guid>38138640</guid>
            <pubDate>Sat, 04 Nov 2023 06:20:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.cloudflare.com/post-mortem-on-cloudflare-control-plane-and-analytics-outage/">https://blog.cloudflare.com/post-mortem-on-cloudflare-control-plane-and-analytics-outage/</a>, See on <a href="https://news.ycombinator.com/item?id=38138640">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post">
    <article>
        


        <p localize="" datetime="2023-11-04T06:18:55Z">Loading...</p>
        

        <ul>
            <li>
                <a href="https://blog.cloudflare.com/author/matthew-prince/">
                    <img src="https://blog.cloudflare.com/cdn-cgi/image/format=auto,dpr=3,width=62,height=62/http://blog.cloudflare.com/content/images/2023/06/Matthew-Prince-3.jpeg" alt="Matthew Prince" width="62" height="62">
                </a>
                
            </li>
        </ul>

        <section>
            <p>12 min read</p>
            <div>
                <p>Beginning on Thursday, November 2, 2023 at 11:43 UTC Cloudflare's control plane and analytics services experienced an outage. The control plane of Cloudflare consists primarily of the customer-facing interface for all of our services including our website and APIs. Our analytics services include logging and analytics reporting.</p><p>The incident lasted from November 2 at 11:44 UTC until November 4 at 04:25 UTC. We were able to restore most of our control plane at our disaster recovery facility as of November 2 at 17:57 UTC. Many customers would not have experienced issues with most of our products after the disaster recovery facility came online. However, other services took longer to restore and customers that used them may have seen issues until we fully resolved the incident. Our raw log services were unavailable for most customers for the duration of the incident.</p><p>Services have now been restored for all customers. Throughout the incident, Cloudflare's network and security services continued to work as expected. While there were periods where customers were unable to make changes to those services, traffic through our network was not impacted.</p><p>This post outlines the events that caused this incident, the architecture we had in place to prevent issues like this, what failed, what worked and why, and the changes we're making based on what we've learned over the last 36 hours. </p><p>To start, this never should have happened. We believed that we had high availability systems in place that should have stopped an outage like this, even when one of our core data center providers failed catastrophically. And, while many systems did remain online as designed, some critical systems had non-obvious dependencies that made them unavailable. I am sorry and embarrassed for this incident and the pain that it caused our customers and our team.</p><h2 id="intended-design">Intended Design</h2><p>Cloudflare's control plane and analytics systems run primarily on servers in three data centers around Hillsboro, Oregon. The three data centers are independent of one another, each have multiple utility power feeds, and each have multiple redundant and independent network connections.</p><p>The facilities were intentionally chosen to be at a distance apart that would minimize the chances that a natural disaster would cause all three to be impacted, while still close enough that they could all run active-active redundant data clusters. This means that they are continuously syncing data between the three facilities. By design, if any of the facilities goes offline then the remaining ones are able to continue to operate. </p><p>This is a system design that we began implementing four years ago. While most of our critical control plane systems had been migrated to the high availability cluster, some services, especially for some newer products, had not yet been added to the high availability cluster.</p><p>In addition, our logging systems were intentionally not part of the high availability cluster. The logic of that decision was that logging was already a distributed problem where logs were queued at the edge of our network and then sent back to the core in Oregon (or another regional facility for customers using regional services for logging). If our logging facility was offline then analytics logs would queue at the edge of our network until it came back online. We determined that analytics being delayed was acceptable.</p><h2 id="flexential-data-center-power-failure">Flexential Data Center Power Failure</h2><p>The largest of the three facilities in Oregon is run by Flexential. We refer to this facility as “PDX-04.” Cloudflare leases space in PDX-04 where we house our largest analytics cluster as well as more than a third of the machines for our high availability cluster. It is also the default location for services that have not yet been onboarded onto our high availability cluster. We are a relatively large customer of the facility, consuming approximately 10 percent of its total capacity.</p><figure><img src="https://blog.cloudflare.com/content/images/2023/11/Flexential-Electrical-System.jpg" alt="" loading="lazy" width="1600" height="1045"></figure><p>On November 2 at 08:50 UTC Portland General Electric (PGE), the utility company that services PDX-04, had an unplanned maintenance event affecting one of their independent power feeds into the building. That event shut down one feed into PDX-04. The data center has multiple feeds with some level of independence that can power the facility. However, Flexential powered up their generators to effectively supplement the feed that was down.</p><p>Counter to best practices, Flexential did not inform Cloudflare that they had failed over to generator power. None of our observability tools were able to detect that the source of power had changed. Had they informed us, we would have stood up a team to monitor the facility closely and move control plane services that were dependent on that facility out while it was degraded.</p><p>It is also unusual that Flexential ran both the one remaining utility feed and the generators at the same time. It is not unusual for utilities to ask data centers to drop off the grid when power demands are high and run exclusively on generators. Flexential operates 10 generators, inclusive of redundant units, capable of supporting the facility at full load. It would also have been possible for Flexential to run the facility only from the remaining utility feed. We haven't gotten a clear answer why they ran utility power and generator power.</p><h2 id="informed-speculation-on-what-happened-next">Informed Speculation On What Happened Next</h2><p>From this decision onward, we don't yet have clarity from Flexential on the root cause or some of the decisions they made or the events. We will update this post as we get more information from Flexential, as well as PGE, on what happened. Some of what follows is informed speculation based on the most likely series of events as well as what individual Flexential employees have shared with us unofficially.</p><p>One possible reason they may have left the utility line running is because Flexential was part of a program with PGE called DSG. DSG allows the local utility to run a data center's generators to help supply additional power to the grid. In exchange, the power company helps maintain the generators and supplies fuel. We have been unable to locate any record of Flexential informing us about the DSG program. We've asked if DSG was active at the time and have not received an answer. We do not know if it contributed to the decisions that Flexential made, but it could explain why the utility line continued to remain online after the generators were started.</p><p>At approximately 11:40 UTC, there was a ground fault on a PGE transformer at PDX-04. We believe, but have not been able to get confirmation from Flexential or PGE, that this was the transformer that stepped down power from the grid for the second feed that was still running as it entered the data center. It seems likely, though we have not been able to confirm with Flexential or PGE, that the ground fault was caused by the unplanned maintenance PGE was performing that impacted the first feed. Or it was a very unlucky coincidence.</p><p>Ground faults with high voltage (12,470 volt) power lines are very bad. Electrical systems are designed to quickly shut down to prevent damage when one occurs. Unfortunately, in this case, the protective measure also shut down all of PDX-04’s generators. This meant that the two sources of power generation for the facility — both the redundant utility lines as well as the 10 generators — were offline.</p><p>Fortunately, in addition to the generators, PDX-04 also contains a bank of UPS batteries. These batteries are supposedly sufficient to power the facility for approximately 10 minutes. That time is meant to be enough to bridge the gap between the power going out and the generators automatically starting up. If Flexential could get the generators or a utility feed restored within 10 minutes then there would be no interruption. In reality, the batteries started to fail after only 4 minutes based on what we observed from our own equipment failing. And it took Flexential far longer than 10 minutes to get the generators restored.</p><h2 id="attempting-to-restore-power">Attempting to Restore Power</h2><p>While we haven't gotten official confirmation, we have been told by employees that three things hampered getting the generators back online. First, they needed to be physically accessed and manually restarted because of the way the ground fault had tripped circuits. Second, Flexential's access control system was not powered by the battery backups so it was offline. And third, the overnight staffing at the site did not include an experienced operations or electrical expert — the overnight shift consisted of security and an unaccompanied technician who had only been on the job for a week.</p><p>Between 11:44 and 12:01 UTC, with the generators not fully restarted, the UPS batteries ran out of power and all customers of the data center lost power. Throughout this, Flexential never informed Cloudflare that there was any issue at the facility. We were first notified of issues in the data center when the two routers that connect the facility to the rest of the world went offline at 11:44 UTC. When we weren't able to reach the routers directly or through out-of-band management, we attempted to contact Flexential and dispatched our local team to physically travel to the facility. The first message to us from Flexential that they were experiencing an issue was at 12:28 UTC.</p><blockquote><em>We are currently experiencing an issue with power at our [PDX-04] that began at approximately 0500AM PT [12:00 UTC]. Engineers are actively working to resolve the issue and restore service. We will communicate progress every 30 minutes or as more information becomes available as to the estimated time to restore. Thank you for your patience and understanding.</em></blockquote><h2 id="designing-for-data-center-level-failure">Designing for Data Center Level Failure</h2><p>While the PDX-04’s design was certified Tier III before construction and is expected to provide high availability SLAs, we planned for the possibility that it could go offline. Even well-run facilities can have bad days. And we planned for that. What we expected would happen in that case is that our analytics would be offline, logs would be queued at the edge and delayed, and certain lower priority services that were not integrated into our high availability cluster would go offline temporarily until they could be restored at another facility.</p><p>The other two data centers running in the area would take over responsibility for the high availability cluster and keep critical services online. Generally that worked as planned. Unfortunately, we discovered that a subset of services that were supposed to be on the high availability cluster had dependencies on services exclusively running in PDX-04.</p><p>In particular, two critical services that process logs and power our analytics — Kafka and ClickHouse — were only available in PDX-04 but had services that depended on them that were running in the high availability cluster. Those dependencies shouldn’t have been so tight, should have failed more gracefully, and we should have caught them.</p><p>We had performed testing of our high availability cluster by taking offline each (and both) of the other two data center facilities entirely offline. And we had also tested taking the high availability portion of PDX-04 offline. However, we had never tested fully taking the entire PDX-04 facility offline. As a result, we had missed the importance of some of these dependencies on our data plane.</p><p>We were also far too lax about requiring new products and their associated databases to integrate with the high availability cluster. Cloudflare allows multiple teams to innovate quickly. As such, products often take different paths toward their initial alpha. While, over time, our practice is to migrate the backend for these services to our best practices, we did not formally require that before products were declared generally available (GA). That was a mistake as it meant that the redundancy protections we had in place worked inconsistently depending on the product.</p><p>Moreover, far too many of our services depend on the availability of our core facilities. While this is the way a lot of software services are created, it does not play to Cloudflare’s strength. We are good at distributed systems. Throughout this incident, our global network continued to perform as expected. While some of our products and features are configurable and serviceable through the edge of our network without needing the core, far too many today fail if the core is unavailable. We need to use the distributed systems products that we make available to all our customers for all our services so they continue to function mostly as normal even if our core facilities are disrupted.</p><h2 id="disaster-recovery">Disaster Recovery</h2><p>At 12:48 UTC, Flexential was able to get the generators restarted. Power returned to portions of the facility. In order to not overwhelm the system, when power is restored to a data center it is typically done gradually by powering back on one circuit at a time. Like the circuit breakers in a residential home, each customer is serviced by redundant breakers. When Flexential attempted to power back up Cloudflare's circuits, the circuit breakers were discovered to be faulty. We don't know if the breakers failed due to the ground fault or some other surge as a result of the incident, or if they'd been bad before and it was only discovered after they had been powered off.</p><p>Flexential began the process of replacing the failed breakers. That required them to source new breakers because more were bad than they had on hand in the facility. Because more services were offline than we expected, and because Flexential could not give us a time for restoration of our services, we made the call at 13:40 UTC to fail over to Cloudflare's disaster recovery sites located in Europe. Thankfully, we only needed to fail over a small percentage of Cloudflare’s overall control plane. Most of our services continued to run across our high availability systems across the two active core data centers.</p><p>We turned up the first services on the disaster recovery site at 13:43 UTC.Cloudflare's disaster recovery sites provide critical control plane services in the event of a disaster. While the disaster recovery site does not support some of our log processing services, it is designed to support the other portions of our control plane. </p><p>When services were turned up there, we experienced a thundering herd problem where the API calls that had been failing overwhelmed our services. We implemented rate limits to get the request volume under control. During this period, customers of most products would have seen intermittent errors when making modifications through our dashboard or API. By 17:57 UTC, the services that had been successfully moved to the disaster recovery site were stable and most customers were no longer directly impacted. However, some systems still required manual configuration (e.g., Magic WAN) and some other services, largely related to log processing and some bespoke APIs, remained unavailable until we were able to restore PDX-04.</p><h2 id="some-products-and-features-delayed-restart">Some Products and Features Delayed Restart</h2><p>A handful of products did not properly get stood up on our disaster recovery sites. These tended to be newer products where we had not fully implemented and tested a disaster recovery procedure. These included our Stream service for uploading new videos and some other services. Our team worked two simultaneous tracks to get these services restored: 1) reimplementing them on our disaster recovery sites; and 2) migrating them to our high-availability cluster.</p><p>Flexential replaced our failed circuit breakers, restored both utility feeds, and confirmed clean power at 22:48 UTC. Our team was all-hands-on-deck and had worked all day on the emergency, so I made the call that most of us should get some rest and start the move back to PDX-04 in the morning. That decision delayed our full recovery, but I believe made it less likely that we’d compound this situation with additional mistakes.</p><p>Beginning first thing on November 3, our team began restoring service in PDX-04. That began with physically booting our network gear then powering up thousands of servers and restoring their services. The state of our services in the data center was unknown as we believed multiple power cycles were likely to have occurred during the incident. Our only safe process to recover was to follow a complete bootstrap of the entire facility.</p><p>This involved a manual process of bringing our configuration management servers online to begin the restoration of the facility. Rebuilding these took 3 hours. From there, our team was able to bootstrap the rebuild of the rest of the servers that power our services. Each server took between 10 minutes and 2 hours to rebuild. While we were able to run this in parallel across multiple servers, there were inherent dependencies between services that required some to be brought back online in sequence.</p><p>Services are now fully restored as of November 4 at 04:25 UTC. For most customers, because of how we queue analytics at the edge, you should see no data loss in your analytics. Any gaps that appear as of now we expect will fill in as any lingering caches of analytics data is ingested. For customers that use our log push feature, your logs will not have been processed for the majority of the event, so anything you did not receive will not be recovered. However, the records in our analytics dashboard will still be accurate.</p><p>We have a number of questions that we need answered from Flexential. But we also must expect that entire data centers may fail. Google has a process where when there’s a significant event or crisis they can call a Code Yellow or Code Red. In these cases, most or all engineering resources are shifted to addressing the issue at hand.</p><p>We have not had such a process in the past, but it’s clear today we need to implement a version of it ourselves: Code Orange. We are shifting all non-critical engineering functions to focusing on ensuring high reliability of our control plane. As part of that, we expect the following changes:</p><ul><li>Remove dependencies on our core data centers for control plane configuration of all services and move them wherever possible to be powered first by our distributed network</li><li>Ensure that the control plane running on the network continues to function even if all our core data centers are offline</li><li>Require that all products and features that are designated Generally Available must rely on the high availability cluster (if they rely on any of our core data centers), without having any software dependencies on specific facilities</li><li>Require all products and features that are designated Generally Available have a reliable disaster recovery plan that is tested</li><li>Test the blast radius of system failures and minimize the number of services that are impacted by a failure</li><li>Implement more rigorous chaos testing of all data center functions including the full removal of each of our core data center facilities</li><li>Thorough auditing of all core data centers and a plan to reaudit to ensure they comply with our standards</li><li>Logging and analytics disaster recovery plan that ensures no logs are dropped even in the case of a failure of all our core facilities</li></ul><p>As I said earlier, I am sorry and embarrassed for this incident and the pain that it caused our customers and our team. We have the right systems and procedures in place to be able to withstand even the cascading string of failures we saw at our data center provider, but we need to be more rigorous about enforcing that they are followed and tested for unknown dependencies. This will have my full attention and the attention of a large portion of our team through the balance of the year. And the pain from the last couple days will make us better.</p>
            </div>
        </section>
    
        









    <div>
            <p>We protect
                <a target="_blank" href="https://www.cloudflare.com/network-services/">entire corporate networks</a>,
                    help customers build
                    <a target="_blank" href="https://workers.cloudflare.com/">Internet-scale applications efficiently</a>,
                    accelerate any
                    <a target="_blank" href="https://www.cloudflare.com/performance/accelerate-internet-applications/">website
                    or Internet application</a>,
                    <a target="_blank" href="https://www.cloudflare.com/ddos/">ward off DDoS
                    attacks</a>, keep
                    <a target="_blank" href="https://www.cloudflare.com/application-security/">hackers at
                    bay</a>,
                    and can help you on
                    <a target="_blank" href="https://www.cloudflare.com/products/zero-trust/">your journey to Zero Trust</a>.</p>
            <p>Visit <a target="_blank" href="https://1.1.1.1/">1.1.1.1</a> from any device to get started with
                our free app that makes your Internet faster and safer.</p>
            <p>To learn more about our mission to help build a better Internet, <a target="_blank" href="https://www.cloudflare.com/learning/what-is-cloudflare/">start here</a>. If you're looking for a
                new career direction, check out <a target="_blank" href="https://cloudflare.com/careers">our open
                    positions</a>.</p>
        </div>

        

        
        

        <a href="https://blog.cloudflare.com/tag/outage/">Outage</a>
        <a href="https://blog.cloudflare.com/tag/post-mortem/">Post Mortem</a>
    </article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mozilla tells extension developers to get ready to finally go mobile (228 pts)]]></title>
            <link>https://www.theregister.com/2023/11/03/mozilla_android_extensions/</link>
            <guid>38138459</guid>
            <pubDate>Sat, 04 Nov 2023 05:33:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2023/11/03/mozilla_android_extensions/">https://www.theregister.com/2023/11/03/mozilla_android_extensions/</a>, See on <a href="https://news.ycombinator.com/item?id=38138459">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>At long last, Mozilla is planning to make browser extensions, also known as add-ons, available for Firefox on Android, at some point following the expected November 21 release of the browser's version 120 build.</p>
<p>This week, the organization urged developers to evaluate their extension code in preparation for the occasion, since it's expecting a lot of demand.</p>
<p>"We anticipate strong interest from users excited to explore all the new ways they can customize Firefox for Android," <a target="_blank" rel="nofollow" href="https://blog.mozilla.org/addons/2023/11/01/is-your-extension-ready-for-firefox-for-android/">said</a> Scott DeVaney, staff editorial manager for Firefox add-ons, in an online post. "Current trends indicate we’ll have at least 200+ new Firefox for Android extensions on AMO [addons.mozilla.org] when open availability debuts in December."</p>

    

<p>Mozilla has been working on this idea since at least 2019, when Vesta Zare, product strategy lead for Firefox Mobile suggested the idea in <a target="_blank" rel="nofollow" href="https://github.com/mozilla-mobile/fenix/issues/5315">a post</a> to the GitHub repo for <a target="_blank" rel="nofollow" href="https://codetribute.mozilla.org/projects/fenix">Fenix</a>, a revised version of Firefox for Android.</p>

        


        

<p>But progress was slow and there were <a target="_blank" rel="nofollow" href="https://github.com/mozilla-mobile/fenix/issues/11308#issuecomment-671500918">concerns about security</a>, a vexing issue when it comes to extensions. Allowing Firefox for Android users to download and install extensions that haven't been thoroughly reviewed poses a risk, particularly given the sensitivity of data stored on phones (e.g. payment cards and personal details). In the desktop ecosystem, browser extensions have been a frequent source of malware and abuse.</p>
<p>Even with the security risks, the extensibility of web browsers is one of the defining characteristics of the open web. Unlike passive display technologies like televisions, the browser lets users take an active role in how content gets processed and presented.</p>

<p>This freedom is not entirely to the liking of online content providers. Web publishers for years have asked site visitors to disable ad blocking extensions, a step YouTube has recently <a target="_blank" href="https://www.theregister.com/2023/10/26/privacy_advocate_challenges_youtube/">undertaken</a> in force.</p>
<p>Google, which makes the most popular browser at the moment, Chrome, does not currently support extensions in Chrome for Android. People <a target="_blank" rel="nofollow" href="https://support.google.com/chrome/thread/206989103/why-doesn-t-google-allow-extensions-in-chrome-mobile-browser?hl=en">speculate</a> that Google does not do so because Android users would block ads, a known matter of concern for the advertising giant.</p>
<ul>

<li><a href="https://www.theregister.com/2023/11/02/apple_safari_browser/">In quest to defeat Euro red-tape, Apple said it had three Safari browsers – not one</a></li>

<li><a href="https://www.theregister.com/2023/11/03/apple_q4_2023/">Apple's year ends with surging services, a billion subscribers, and a view of generation next</a></li>

<li><a href="https://www.theregister.com/2023/11/01/official_mozilla_debian_firefox/">Mozilla treats Debian devotees to the raw taste of Firefox Nightly</a></li>

<li><a href="https://www.theregister.com/2023/10/10/google_pays_apple_18_20_claims_bernstein/">Google pays Apple $18B to $20B a year to keep its search in iPhone</a></li>
</ul>
<p>However, Google's ongoing revision of its Chrome extension architecture, known as <a target="_blank" href="https://www.theregister.com/2023/04/01/google_mv2_chrome_extensions/">Manifest v3</a>, aspires to make extensions less demanding of CPU resources and less dependent on persistent processes. That would make Manifest v3 extensions better suited for mobile devices, if Google chose to add extension support in Chrome for Android to avoid being left behind by competitors. It's worth noting that Apple, Mozilla, and Microsoft are all planning to support Manifest v3, with some variation, in their respective browsers.</p>
<p>The Yandex mobile browser, popular in Russia, added support for extensions on Android in 2016 and other Android-based browsers like Kiwi have done so. Among the larger browser makers, Mozilla managed to roll out support for a limited set of Recommended Extensions for Firefox on Android in January, 2021. But Apple managed a broader implementation when it introduced support for <a target="_blank" rel="nofollow" href="https://support.apple.com/guide/iphone/get-extensions-iphab0432bf6/15.0/ios/15.0">Safari extensions</a> in iOS 15 in September 2021.</p>

        

<p>Mozilla mentioned <a target="_blank" rel="nofollow" href="https://www.mozilla.org/en-US/about/webvision/full/#extensibility">browser extensibility</a> in its 2022 vision for the web and hinted at some of the challenges that prevented the organization from realizing mobile browser extensions earlier.</p>
<p>"Add-ons have access to much more powerful capabilities than sites do, which makes them distinctly not casual," the company said. "This necessitates some degree of gatekeeping and curation in order to keep people safe from malicious add-ons. We are exploring ways to reduce this friction, but ultimately need to exercise some degree of oversight to balance openness, agency, and safety for browser extensions."</p>
<p>A year-and-a-half later, Firefox for Android is almost ready to live up to Mozilla's web vision. ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Maersk to cut 10k jobs as shipping demand drops (198 pts)]]></title>
            <link>https://www.reuters.com/business/shipping-giant-maersk-q3-above-expectation-sees-fy-lower-end-range-2023-11-03/</link>
            <guid>38138187</guid>
            <pubDate>Sat, 04 Nov 2023 04:39:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/business/shipping-giant-maersk-q3-above-expectation-sees-fy-lower-end-range-2023-11-03/">https://www.reuters.com/business/shipping-giant-maersk-q3-above-expectation-sees-fy-lower-end-range-2023-11-03/</a>, See on <a href="https://news.ycombinator.com/item?id=38138187">Hacker News</a></p>
<div id="readability-page-1" class="page"><div confirmation_email_sent_page_url="/confirmationsent/" legal_marketing_page_url="https://legal.thomsonreuters.com/en/products/reuters-legal-news" sign_in_page_url="/account/sign-in/" sign_up_page_url="/account/register/sign-up/" terms_page_url="/info-pages/terms-of-use/"><div><div><ul role="tablist"><li data-testid="Body" role="tab" aria-selected="true" tabindex="0">Summary</li><li data-testid="Body" role="tab" aria-selected="false" tabindex="-1">Companies</li></ul></div><div><ul><li data-testid="Body">Signals sharp downturn in demand</li><li data-testid="Body">To review share buyback program for 2024</li><li data-testid="Body">Says industry facing overcapacity and lower prices, demand</li><li data-testid="Body">Shares down 17.5% to lowest in three years</li></ul></div></div><p data-testid="paragraph-0">COPENHAGEN, Nov 3 (Reuters) - Shipping group A.P. Moller-Maersk <a data-testid="Link" href="https://www.reuters.com/markets/companies/MAERSKb.CO" target="_blank" referrerpolicy="no-referrer-when-downgrade">(MAERSKb.CO)</a>, reported a steep drop in third-quarter profit and revenue on Friday and said it would cut at least 10,000 jobs in the face of overcapacity, rising costs and weaker prices, sending its shares tumbling.</p><p data-testid="paragraph-1">Maersk, which controls about one-sixth of global container trade, transporting goods for a host of major retailers and consumer goods companies such as Walmart and Nike, flagged a steeper downturn in demand than analysts and investors had expected.</p><p data-testid="paragraph-2">"The new normal we are now headed into is one of more subdued macroeconomic outlook, and thus soft volume demands for the coming years, prices back in line with historical levels, inflationary pressures on our cost base, especially from energy cost, and also increased geopolitical uncertainty," CEO Vincent Clerc said on an investor call.</p><p data-testid="paragraph-3">The industry invested heavily in new container ships during and after the pandemic to meet strong demand and benefit from record freight rates. A large number of new ships entered the market since the summer with no signs of idling or scrapping, said Clerc.</p><p data-testid="paragraph-4">"If the fourth quarter does not deliver some type of improvements, then I think we're looking at a pretty dire situation in 2024," he said.</p><p data-testid="paragraph-5">Negative revenue growth in the third quarter came mainly from the retail and lifestyle sector, especially in North America, as well as automotive and technology, Clerc said.</p><div data-testid="gallery-0"><p data-testid="Body"><b data-testid="Body">[1/2]</b><span>Containers are seen on the Maersk's Triple-E giant container ship Majestic Maersk, one of the world's largest container ships, next to cranes at the APM Terminals in the port of Algeciras, Spain January 20, 2023. REUTERS/Jon Nazca/File photo <a data-testid="Link" href="https://www.reutersagency.com/en/licensereuterscontent/?utm_medium=rcom-article-media&amp;utm_campaign=rcom-rcp-lead" target="_blank" referrerpolicy="no-referrer-when-downgrade"> Acquire Licensing Rights</a></span></p></div><p data-testid="paragraph-6">Shares in the Copenhagen-based group slid to their lowest level in three years, trading 17.5% lower by 1141 GMT.</p><p data-testid="paragraph-7">Jyske Bank analyst Morten Holm Enggaard said the share price was hit by Maersk saying it would reconsider whether to continue its share buy-back program into 2024.</p><p data-testid="paragraph-8">"The only way we can read it, is that we have to look into something very bad in 2024, and probably worse than what we had expected," said Enggaard.</p><p data-testid="paragraph-9">Maersk said it expects global container volumes in its ocean business, its largest segment, to fall by up to 2% this year, primarily as a result of weak consumer demand and destocking by firms following the scramble for goods in the aftermath of the coronavirus pandemic.</p><p data-testid="paragraph-10">Maersk, which employed 110,000 in January, said it was in the process of cutting its workforce to below 100,000 which will result in savings of $600 million next year and beyond compared to this year.</p><p data-testid="paragraph-11">The company kept its full-year guidance for revenue and operating profit but now expects both to land at the lower end of the range.</p><p data-testid="paragraph-12">Operating profit dropped to $1.9 billion in the third quarter from $10.9 billion a year earlier. Revenues fell 47% to $12.1 billion.</p><p data-testid="Body">Reporting by Jacob Gronholt-Pedersen and Louise Rasmussen, additional reporting by Johannes Birkebaek editing by Terje Solsvik, Miral Fahmy, Elaine Hardcastle</p><p data-testid="Body">Our Standards: <a data-testid="Link" href="https://www.thomsonreuters.com/en/about-us/trust-principles.html" target="_blank" referrerpolicy="no-referrer-when-downgrade">The Thomson Reuters Trust Principles.</a></p><div><address><p data-testid="Body">Based in Copenhagen, Jacob oversees reporting from Denmark, Iceland, Greenland and the Faroe Islands. Specializes in security and geopolitics in the Arctic and Baltic Sea regions, as well as large corporates such as brewer Carlsberg and shipping group A.P. Moller-Maersk. His most impactful reporting on Arctic issues include a report on how NATO allies are slowly waking up to Russian supremacy in the region, uncovering how Greenland represents a security black hole for Denmark and its allies, and how an abundance of critical minerals has proven a curse for Greenland.
Before moving to Copenhagen in 2016, Jacob spent seven years in Moscow covering Russia's oil and gas industry for Dow Jones Newswires and The Wall Street Journal, followed by four years in Singapore covering energy markets for WSJ and Reuters. As a Russian speaker, he has been involved in covering the war in Ukraine. He publishes a newsletter each weekday focused on the most important regional and global news. Contact Jacob via email if you are interested in receiving the newsletter.</p></address></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Making "LCD, Please" (142 pts)]]></title>
            <link>https://dukope.com/devlogs/papers-please/lcdplease/</link>
            <guid>38138085</guid>
            <pubDate>Sat, 04 Nov 2023 04:16:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dukope.com/devlogs/papers-please/lcdplease/">https://dukope.com/devlogs/papers-please/lcdplease/</a>, See on <a href="https://news.ycombinator.com/item?id=38138085">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

    



    
<article itemscope="" itemtype="http://schema.org/BlogPosting">

  <div itemprop="articleBody">
  
    <p>
    
      Aug 17, 2023
       
    </p><hr>

    <p>
  <img src="https://3909.co/dev/pp/img/Lcd-Hero.jpg" alt="Lcd-Hero">
</p>
<p>The de-make no one asked for.</p>
<p><a href="https://dukope.itch.io/lcd-please"><strong>Play on itch.io</strong></a></p>
<p>I love a good set of limitations and on my way to making games with miasma and wind I’ve stopped off at the <em>Game &amp; Watch</em> tier.</p>
<h2 id="lcd-why">LCD. Why.</h2>
<p>I played a lot of LCD games when I was a kid. They were mostly terrible. Before the Gameboy existed, mostly terrible in your pocket was great and we loved it.</p>
<p><a href="https://en.wikipedia.org/wiki/Gunpei_Yokoi">Gunpei Yokoi</a> invented the <em>Game &amp; Watch</em> LCD game in ~1980 at Nintendo, apparently after watching some bored guy mess around with a pocket calculator. Legends, the both of em.</p>
<p>The first LCD games were very basic reconfigurations of digital watch tech: shift registers and low-segment-count displays. As time progressed things got more complex, and not really for the better. You could be satisfied with a ball juggling LCD game but going too far was asking for disappointment.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HistoryNintendo.jpg" alt="Lcd-HistoryNintendo"></p><p>Nintendo's first, best-selling, and last LCD games</p>

<p>Nintendo had a good number of innovations in game, control, and case design over the years. When the Gameboy was released in 1989 (also from Yokoi, damn) they mercifully shuttered their <em>Game &amp; Watch</em> corps. Lucky for us, other companies stuck around in the LCD dungeon for a few more years.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HistoryOther.jpg" alt="Lcd-HistoryOther"></p><p>Not shown: thousands of other makers and games</p>

<p>Most LCD games produced in the 80’s and 90’s were shameless clones of Nintendo’s originals. A few companies like <a href="https://en.wikipedia.org/wiki/Tiger">Tiger</a> with their licensed shovelware, Bandai with their <a href="http://www5e.biglobe.ne.jp/~kiden/densigame10/akuryo_no_yakata.htm">layered-screen</a> titles, or Epoch with their <a href="https://www.s40otoko.com/archives/142910">creativity,</a> were stretching the format a little bit beyond Nintendo. Great job fellas.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HistoryMine.jpg" alt="Lcd-HistoryMine"></p><p>Old LCD games salvaged from the attic.</p>

<p>The two LCD games I still have from my youth are <em>Plane &amp; Tank</em>, a Radio Shack badged clone of Nintendo’s <em>Helmet</em>, and Rambo, an Akklaim shooter that combines a few classic mechanics. I fired them both up while writing this devlog and honestly they’re still kinda hard to put down.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HistoryBest.jpg" alt="Lcd-HistoryBest"></p><p>'Lost in Space' &amp; 'Bombsweeper'</p>

<p>“Zero depth” is a good way to describe most LCD games of yore. I spent some time looking for a counterpoint and from that lot, <a href="https://www.youtube.com/watch?v=mpYrQ1bjdjM"><em>Lost in Space</em></a> (1989) and <a href="https://www.youtube.com/watch?v=EGKZaevZuQU"><em>Bombsweeper</em></a> (1987) stood out as two of the best. <em>Lost in Space</em> is a fully realized monster hunting 3D maze game from Epoch and <em>Bombsweeper</em> is a wall-pushing puzzler from Nintendo. Both are deeper and more satisfying than what you’d expect. I didn’t know about either of these games back in the day.</p>
<h2 id="lets-go">Let’s Go</h2>
<p>Bringing it back. This post is about the LCD de-make of <em>Papers, Please</em>.</p>
<p>I’ve already <a href="https://obradinn.com/">mined the 1-bit Mac era</a> so there should be no surprise that I’m now back with my shovel, digging up liquid crystals. Looking at 1980 LCD game tech with 2023 eyes, there’s a few cool things:</p>
<ol>
<li>No pixels. These are proper little drawings that you can turn on and off.</li>
<li>No overlapping graphics. A totally unreasonable limitation. Love it.</li>
<li>No touching graphics. Really twisting the knife.</li>
<li>Crushing framerate. Just a few fps.</li>
<li>No advanced logic. Shift registers only. Ignore this one. Maybe next time.</li>
</ol>
<p>All these limits are good fun for modern indie developers but it was mostly #1 that got me interested in the format. Some of those games had really charming segment and background art.</p>
<p>I figured the low-action elements of <em>Papers, Please</em> could fit snugly with #4, and making randomly-generated faces with the idiosyncratic display tech seemed like the perfect thing to burden myself with.</p>
<p>No one (*) cares about LCD games in 2023 though so let’s just call this project  a fun diversion. I started working on it a few years ago on a lark, convinced my wife Keiko to help me, spent a few days on it here and there, and finally crunched to finish it up for the <a href="https://papersplea.se/#year10">tenth anniversary of <em>Papers, Please</em>.</a></p>
<p>(*) Except me &amp; you.</p>
<h2 id="have-limited-display-need-randomized-faces">Have Limited Display, Need Randomized Faces</h2>
<p>To make a procedural face generator with this antique display tech, the first step was to forget everything I was doing in the original game.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-OldFaces.gif" alt="OldFaces"></p><p>Original game. Individually-drawn faces with marked parts, jumbled to make new faces.</p>

<p>Nothing about this method works on a segmented LCD, and the somber style isn’t a good fit for the <em>Game &amp; Watch</em> look anyways. This de-make called for something lighter and more cartoony. With that in mind, I drew a bunch of ideas and just slowly adjusted things over time. Eventually it was both good enough and also too spider-webbed to change any more.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FaceDraw2.png" alt="Lcd-FaceDraw2"></p><p>Drawing progress</p>

<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FaceAllSegments.png" alt="Lcd-FaceAllSegments"></p><p>Final LCD segment art</p>

<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FaceGallery.gif" alt="Lcd-FaceGallery"></p><p>Some resultant faces</p>

<p>The two main tricks I used for variety were to divide standard features into multiple parts, and to design pieces that could be used in multiple ways.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FacePartials.png" alt="Lcd-FacePartials"></p><p>Using partial segments from an fully-defined eye.</p>

<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FaceShared.png" alt="Lcd-FaceShared"></p><p>Reusing the same LCD segment for different features.</p>

<p>The whole thing was one big interlocking set of puzzle pieces. Adjust one piece and the effect cascades through the whole face. Fortunately, in the end it’s still just a static image. What you see is what you get. No variations, animations, extra dimensions, or even colors. Very refreshing for anyone toiling away on modern games.</p>
<h2 id="drawing-timelapse">Drawing Timelapse</h2>
<p>Enjoy in silence.</p>

<p>
  <iframe src="https://www.youtube.com/embed/G5tAu0Vijz8" allowfullscreen="" title="YouTube Video"></iframe>
</p>


<p>
  <img src="https://3909.co/dev/pp/img/Lcd-Procreate.jpg" alt="Lcd-ToolsProcreate"></p><p>iPad, Apple Pencil, Procreate</p>

<p>The LCD art was drawn in Procreate on an iPad with the convenience of layers and undo. I really feel for those poor souls 40 years ago working on paper. I am doughy soft when it comes to any kind of asset-creation hardship.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-ColorChannels.png" alt="Lcd-ColorChannels"></p><p>Blocks of green group unconnected segments</p>

<p>From Procreate I brought it into Photoshop and used the color channels for marking segment groups. At this point it’s still just an image so we needed a way to address individual segments/groups for the game’s display logic. Keiko wrote a Python script to split each segment out into subimages and I experimented with a few ways to manually assign names to them. There’s nearly 500 segments in all so this wasn’t exactly self-evident.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-EdgeTraces.png" alt="Lcd-EdgeTraces"></p><p>Connecting each segment to the image's edge</p>

<p>First try was to draw thin horizontal or vertical red lines running from each segment to the edge, similar to an actual solder trace. That put all segments in a 1D list around the edge, which could be synchronized with a text list of names. This quickly became too difficult to maintain so on to the second try.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-BlenderSegments.jpg" alt="Lcd-BlenderSegments"></p><p>Named Empty nodes placed on segments in Blender</p>

<p>Next I mapped the texture onto a quad in Blender, created Empty nodes, gave them names, and aligned them over each segment. With a short Python script, these node coordinates are exported to .json, where Keiko’s script combines it with the segment subimages to assign names. Much easier and maintainable once the scripts are done.</p>
<p>I often have random little tool needs this like. “Edit named points on an image”. I usually go pretty far twisting a stock tool to do it, writing something custom as a last resort. Blender’s great in a lot of these cases with how flexible and scriptable it is. Can’t recommend it enough.</p>
<h2 id="case-design">Case Design</h2>
<p>Along with the fun of designing an LCD panel I also jumped into this project with an itch to work up the plastic case. Back in the day, case design spanned a pretty wide swath from mundane to inspired. Since I’m hitting the nostalgia vein pretty hard I opted to go for something relatively generic, combining the bargain Radio Shack case with a slightly more elegant Bandai <em>Game Digital</em> series case.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HardInspiration.jpg" alt="Lcd-HardInspiration">
</p>
<p>I had a few goes at this, first testing out <a href="https://affinity.serif.com/en-us/designer/">Affinity Designer</a>, a very capable Illustrator-alike.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HardAffinity.jpg" alt="Lcd-HardAffinity"></p><p>First (2D) case design made in Affinity Designer</p>

<p><em>Designer</em> is full of thoughtful features and most importantly feels like modern software that isn’t dragged down by 30 years of legacy. I was fully happy with this case until I decided that actually everything should be in 3D. Over to Blender.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-HardBlender1.jpg" alt="Lcd-HardBlender1"></p><p>Final (3D) case design made in Blender</p>

<p>Blender’s Eevee viewport renderer is both gorgeous and an immense timesaver. I gave up on Maya after Obra Dinn so maybe things are nicer there now. At the time, this kind of convenience, in Maya, was unthinkable. Thinking it now every day in Blender.</p>
<h2 id="also-a-game">Also a Game</h2>
<p>Once the basics of the art were worked out, the course was set and I had to figure out how to port the gameplay. For <em>Papers, Please</em> I decided this meant just the most basic sequence:</p>
<ol>
<li>Wait for someone to enter the booth.</li>
<li>See their face and read their stated name + country.</li>
<li>Check their passport to verify everything matched.</li>
<li>Stamp APPROVE or DENY.</li>
<li>No story, no other docs, no dialog, no repeat characters, etc.</li>
</ol>
<p>Focusing on just the stamps would hopefully capture an essential element of the original game and also keep the interface simple. As a personal preference, I enjoy the LCD games with just two left|right gameplay buttons over the more complicated ones with left|right|action or d-pad|action|etc.</p>
<p>An important early choice was that this would be a single-screen game. Having two screens like Nintendo’s Donkey Kong or layered screens like Bandai’s Amazone would’ve opened up a lot of options but please this project is not about options. One screen or go home. I also had a dream of actually getting this hardware manufactured at some point, and price-wise I don’t think anything beyond a simple plastic slab with one screen would be feasible.</p>
<p>As a result, unlike the full game, we don’t have the unimaginable luxury of showing both the entrant’s face and their passport at the same time.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FlowRealPass.gif" alt="Lcd-FlowRealPass"></p><p>You can see the face, or the passport, but never both at once</p>

<p>To put some intention behind this no-two-faces-at-once limitation, the core gameplay mechanic is very simply just pure memorization. Memorize what the entrant looks like and what they say, then compare that against the information in the passport. If it matches, <strong>approve</strong>. If not, <strong>deny</strong>. The hardware VIEW button was a fairly late addition to (slowly) cycle between the passport and the entrant’s face/statements again for review.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FlowDenied.gif" alt="Lcd-FlowDenied"></p><p>Comparing entrant face and statements to their passport. Sorry Erik.</p>

<p>That’s the <strong>easy</strong> mode. To add more complexity, there’s also a <strong>hard</strong> mode with two new rules:</p>
<ol>
<li>Randomized BANNED and WANTED notices. This is the only vestige of the “daily rules” aspect from the full game. The start of each day may briefly show a banned country, whose residents should be denied, or a wanted person, who should also be denied.</li>
</ol>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-FlowRestrictions.gif" alt="Lcd-FlowRestrictions"></p><p>BANNED and WANTED restrictions shown at the start of the day</p>

<ol start="2">
<li>VIP entrants. Same as a regular entrant except the VIEW button doesn’t work. Note their face and statements carefully because there’s no second chance to see them. (This rule’s design, code, art, &amp; script were added two hours before release – Keiko had the idea and it was so good we had no choice but to implement it.)</li>
</ol>
<p>After working out the basic design, we did our best to keep it sensible with the limited display and low framerate. There was so little elbow room here that I can’t say we floundered around too much. The display for results and in-day progress probably went through the most iterations.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-GameProgress.png" alt="Lcd-GameProgress"></p><p>Different ways of showing results &amp; progress</p>

<ol>
<li>Icons to show which parts of the entrant’s info were right/wrong after stamping. Daily progress dots/circles. Dot = stamped incorrectly, circle = stamped correctly. TMI, too confusing.</li>
<li>Simple citation icon if player stamps incorrectly. Progress dots/circles. Better but still has the confusing dots/circles.</li>
<li>Ticker tape showing a star if stamp was correct, blank if incorrect. Conveniently combines result with progress and has a nice 3D effect but it’s even more confusing in practice.</li>
<li>Final. Split progress from results. Show number of entrants remaining on left, collected citations (mistakes) on right.</li>
</ol>
<h2 id="programming">Programming</h2>
<p>A long time ago my wife and I worked together <a href="https://www.ratloop.com/?games/mightier">pretty</a> <a href="https://www.ratloop.com/?games/helsings_fire">often</a>. She’s a very capable game programmer but ducked out of the industry when we added some kids to the family just before releasing <em>Papers, Please</em>. Since then I’ve been looking for an opportunity to drag her back in and this was the perfect project. She handled nearly all of the programming here.</p>
<p>The game is written in an old favorite, <a href="https://haxe.org/">haxe</a>, with support scripts in Python. The runtime uses the <a href="https://heaps.io/">Heaps</a> library, a lightweight game engine with robust 2D and 3D support. We build to a <a href="https://hashlink.haxe.org/">HashLink</a> target for desktop development and javascript for web deployment.</p>
<p>Structure-wise, our first decision was to create a simple domain-specific scripting language to define program flow for each tick of the clock. This created a nice separation between the display engine and the high-level game-sequence logic.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-CodeSteps.png" alt="Lcd-CodeSteps"></p><p>Logic steps defined in a simple high-level script</p>

<p>For the display control, Keiko wrote a simple in-game editor that enabled me to create named groups of segments, which the Python build script classifies and orders for the runtime.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-CodeEditor.png" alt="Lcd-CodeEditor"></p><p>In-game editor for naming groups of segments</p>

<p>Because the layout of the segments is so wild, each face is generated by selecting groups from the bottom up: first chin, then mouth, nose, and finally eyes.</p>
<p>
  <img src="https://3909.co/dev/pp/img/Lcd-CodeRandom.gif" alt="Lcd-CodeRandom"></p><p>Stepwise random face generation</p>

<p>A certain chin selection will limit which mouths are available, and so on, up the face. Everything else (hair, ears, shoulders, etc) is independent and can be chosen randomly without worrying about dependencies.</p>
<h2 id="done">Done</h2>
<p>Hopefully this de-make is a bit of quick fun to play. We couldn’t make a career out of these kinds of games but it was a nice distraction. I think there’s still potential in LCD games, and the restrictions are appealing. Recommended, will try again someday.</p>

  
  </div>
</article>


  




  












    


  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube's plan backfires, people are installing better ad blockers (216 pts)]]></title>
            <link>https://www.androidauthority.com/youtube-ad-block-installs-3382289/</link>
            <guid>38137917</guid>
            <pubDate>Sat, 04 Nov 2023 03:34:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.androidauthority.com/youtube-ad-block-installs-3382289/">https://www.androidauthority.com/youtube-ad-block-installs-3382289/</a>, See on <a href="https://news.ycombinator.com/item?id=38137917">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><picture><source sizes="(min-width: 64rem) 51.25rem, 80vw" srcset="https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18.jpg.webp 1200w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-300w-170h.jpg.webp 300w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-768w-432h.jpg.webp 768w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-16w-9h.jpg.webp 16w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-32w-18h.jpg.webp 32w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-28w-16h.jpg.webp 28w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-56w-32h.jpg.webp 56w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-64w-36h.jpg.webp 64w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-712w-400h.jpg.webp 712w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-1000w-563h.jpg.webp 1000w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-792w-446h.jpg.webp 792w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-840w-472h.jpg.webp 840w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-770w-433h.jpg.webp 770w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-356w-200h.jpg.webp 356w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-675w-380h.jpg.webp 675w" type="image/webp"><img decoding="async" loading="eager" sizes="(min-width: 64rem) 51.25rem, 80vw" title="YouTube on smartphone stock photo 18" srcset="https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18.jpg 1200w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-300w-170h.jpg 300w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-768w-432h.jpg 768w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-16w-9h.jpg 16w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-32w-18h.jpg 32w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-28w-16h.jpg 28w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-56w-32h.jpg 56w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-64w-36h.jpg 64w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-712w-400h.jpg 712w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-1000w-563h.jpg 1000w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-792w-446h.jpg 792w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-840w-472h.jpg 840w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-770w-433h.jpg 770w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-356w-200h.jpg 356w, https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18-675w-380h.jpg 675w" alt="YouTube on smartphone stock photo 18" src="https://www.androidauthority.com/wp-content/uploads/2022/04/YouTube-on-smartphone-stock-photo-18.jpg"></picture><div><p>Edgar Cervantes / Android Authority</p></div></div><div><p>TL;DR</p>
<ul>
<li>YouTube’s crackdown on ad blockers is causing users to uninstall the software in record numbers.</li>
<li>However, an even higher number of users are instead turning to better ad blockers that won’t trigger YouTube’s warning.</li>
<li>Some users are even going as far as to switch to a new browser.</li>
</ul>
</div><p>YouTube recently expanded its ad-blocking efforts, transitioning from just a small experiment to a global launch. The move appears to have had some success, as users are uninstalling the software in record numbers. But you can also argue it has had the opposite effect, as even higher numbers of users are turning to <a href="https://www.androidauthority.com/best-ad-blocker-apps-android-954917/">better ad blockers</a>.</p><p>Hundreds of thousands of users have uninstalled ad blockers in October, seemingly in connection with YouTube’s broadened crackdown, according to a report from <a href="https://www.wired.com/story/youtubes-ad-blocker-crackdown-spurs-record-uninstalls/" target="_blank"><em>Wired</em></a>. At the same time, data shows that record-breaking numbers of people are also installing alternatives that won’t be caught in YouTube’s net.</p><p>Krzysztof Modras of Ghostery — one of the more popular ad blockers in Chrome’s extension store — says they have seen three to five times the amount of installs and uninstalls over the last month. Over 90% of those users who uninstalled the extension cited the software failing on YouTube as the reason for their decision. However, the company saw a 30% uptick in installations on Microsoft Edge, with users attempting to find a suitable alternative.</p><p>Another blocker, AdGuard, told the outlet they normally see about 6,000 uninstallations per day on Chrome, but that shot up to 11,000 per day between October 9 and the end of the month, peaking at 52,000 on October 18. However, the paid version of the extension appears to be immune to YouTube’s ban. It’s reported that the company says when people realized this, user counts increased, reaching up to 60,000 installations on October 18 and October 27.</p><p>Right now, it appears YouTube’s crackdown on ad blockers has people scrambling to find a better alternative. Some people are even turning to solutions like Newpipe, a YouTube-like website that’s capable of running videos from the platform without ads.</p><p>Experts from the industry, like Modras, are warning that YouTube’s efforts to stop ad blockers could result in more complex blocking tactics. These more complex tactics could lead to the creation of unintentional security holes.</p><p>If you’re looking alternatives, extensions like uBlock Origin still work when used on Firefox. Adblock Plus has also offered <a href="https://blog.adblockplus.org/blog/whats-happening-with-youtube-ads" target="_blank">some suggestions</a> on how to get past the anti-ad block wall. There’s also the option of biting the bullet and paying for <a href="https://www.androidauthority.com/youtube-premium-1119004/">YouTube Premium</a>.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A blog post is a long and complex search query to find people (199 pts)]]></title>
            <link>https://www.henrikkarlsson.xyz/p/search-query</link>
            <guid>38137377</guid>
            <pubDate>Sat, 04 Nov 2023 02:02:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.henrikkarlsson.xyz/p/search-query">https://www.henrikkarlsson.xyz/p/search-query</a>, See on <a href="https://news.ycombinator.com/item?id=38137377">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg" width="728" height="535.08" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/f0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:false,&quot;imageSize&quot;:&quot;normal&quot;,&quot;height&quot;:588,&quot;width&quot;:800,&quot;resizeWidth&quot;:728,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;File:Probably Valentin de Boulogne - Saint Paul Writing His Epistles - Google Art Project.jpg&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="File:Probably Valentin de Boulogne - Saint Paul Writing His Epistles - Google Art Project.jpg" title="File:Probably Valentin de Boulogne - Saint Paul Writing His Epistles - Google Art Project.jpg" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Ff0dbceaf-9fe3-4673-b229-bfb1b5cf8cad_800x588.jpeg 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p>I was born in July 1989, which means I am of the last generation who will remember the time before the internet. The cables and data centers and hyperlinks grew up around me; they grew with me. I find it hard to disentangle the evolution of my psyche from that of the internet.</p><p>Explaining it to my daughter, who was born in 2017, a year when the world’s largest economy had begun tearing itself apart from the tension of this ever-evolving network, I tell her that the internet is like an alien intelligence. We don’t know exactly what it is; it has just landed, and only the first ship. We are trying to figure out how to talk to it. The first generation of explorers have noted that by making certain finger motions you can make the aliens show you images of cats and clothes, or tell you all the ways the world is falling apart.</p><p>For a long time, I thought this was all there was to it. I could tap the keyboard in a particular way and the screen would show me the weather, or tell me which translation of the Iliad to read and then make someone jump in a truck and drive it to our house. I preferred the Iliad to the screen.</p><p>But then, late 2021, after I had been making intricate finger movements again, I woke up in our guesthouse before sunrise and noticed that something had changed.</p><p>During the night, the internet had been set in motion. Tossing hither and thither in silence—as the fields lay frozen and waiting and the hedgehog slept in its pile of leaves—the internet had rearranged itself around me.</p><p>I had written an essay about Ivan Illich and systems thinking, a topic I had never found anyone else intrigued by, and which magazines thought below a rejection letter—and the internet had suddenly reshaped itself so that my keyboard hooked up to the screens of a bunch of people who wanted to talk about these topics, and a little later, their keyboards hooked up to mine.</p><p><span>I had written for 15 years, but never before had this happened. I had conjured a minor conference! And I hadn’t even known that you could&nbsp;</span><em>do</em><span> that.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://escapingflatland.substack.com/subscribe?utm_medium=web&amp;utm_source=magaziney-home-page&amp;just_signed_up=true&amp;requires_confirmation=&amp;subscription_id=51966669&amp;next=https%3A%2F%2Fescapingflatland.substack.com%2F&quot;,&quot;text&quot;:&quot;Upgrade to paid&quot;,&quot;action&quot;:null,&quot;class&quot;:&quot;button-wrapper&quot;}" data-component-name="ButtonCreateButton"><a href="https://escapingflatland.substack.com/subscribe?utm_medium=web&amp;utm_source=magaziney-home-page&amp;just_signed_up=true&amp;requires_confirmation=&amp;subscription_id=51966669&amp;next=https%3A%2F%2Fescapingflatland.substack.com%2F" rel=""><span>Upgrade to paid</span></a></p><p>This gave me a first glimpse of the social mechanics of the internet. Looking at the traffic data, and talking to readers, I could retrace how my words had traveled through the network, and I got a sense of why. I didn’t fully understand it; I don’t think anyone does. But like a scientist who’s got hold of an alien artifact, I proceeded by gleefully and semi-randomly pushing every button I could find to see what happened. I would think of a series of funny finger movements and then I’d say to myself, LOL I wonder what this combination does? And then I’d try.</p><p>The way the machine seemed to work was:&nbsp;&nbsp;</p><ol><li><p><span>The more precise and niche the words I input, the better the internet would match me with people I could forge meaningful relationships with. This precision was hard for me, partly because my sense for how communication is supposed to work is shaped by reading mass media. Writing for a general public, you need to be broad and a bit bland. I didn’t want a general public. I wanted a specific set of people, the people who could help me along as a human being obsessed with certain intellectual problems. I didn’t know who these people&nbsp;</span><em>were</em><span>. I only knew that they existed. Hence my writing was a search query. It needed to be phrased in such a way that it found these people and, if necessary, filtered others.</span></p></li><li><p>The pleasant parts of the internet seemed to be curated by human beings, not algorithms. For my writing to find its way in this netherworld, I needed to have a rough sense of how information flowed down there. The pattern was this: words flowed from the periphery to the centers. This was a surprisingly rapid stream. Then the words cascaded from the center down in a broader but slower stream to the periphery again.</p></li></ol><p>I will spend the rest of this essay unpacking those two statements.</p><p><span>It will seem like I am mainly talking about how to use writing to forge meaningful relationships. I think doing that is beautiful and important. But lurking behind it is a larger idea. Namely, that </span><a href="https://escapingflatland.substack.com/p/first-we-shape-our-social-graph-then" rel="">you can shape yourself by reshaping your relationships</a><span>. By changing who you are addressing, and the responses you garner, you steer your development. You </span><a href="https://tomcritchlow.com/2022/08/29/blogging-agency/" rel="">become more agentic</a><span>.</span></p><p><span>Human brains are wired such that we get rewarded for attending to surprisal. If we turn our attention toward things that surprise us we get&nbsp;</span><em>excited</em><span>—and our model of the world changes. It grows more complex.</span></p><p>This is easy at first. My one-year-old was in complete rapture today on seeing a hen. But after a while, hens do not surprise us anymore, even if they are scratching dirt. We need a bigger hit to get the same high. To make hens interesting again, you could perhaps read about how they originally lived in the jungle, or you might get into the biology of egg production, or, more likely, you’ll pursue something more interesting than hens. Any which way, by pursuing your interest, you will move toward complexity. The simple things do not surprise you anymore. So you turn your attention to more complicated things. This is an amazing algorithm: do interesting things and magically arrive at a complex understanding of the world.</p><p><span>Sadly, it also leads you down a path that will likely end in existential loneliness and sobbing. What leads you there is the fact that the particular complexity that catches your interest is highly idiosyncratic. People get interested in all sorts of things. I have heard, from credible sources, that there even exist people who are interested in the names of Brazilian soccer players! Having idiosyncratic interests that grow in complexity means that&nbsp;</span><em>if you pursue</em><span>&nbsp;</span><em>them too far you will end up obsessed with things that no one else around you cares about</em><span>.</span></p><p><span>(There is a counteracting force in that humans tend to mimic the interests of those around them. But this is of little help for those of us for whom ”those around them” mostly means niche bloggers, contributors at Wikipedia, and </span><a href="https://en.wikipedia.org/wiki/Erasmus" rel="">Erasmus of Rotterdam</a><span>.)</span></p><p>People feeling alone in their interests has always been true to a certain extent, but the internet has made it much worse. The excess of information allows you to travel down your path of interest with mad velocity. On the internet, Wonderland is recursive, with rabbit holes opening up to yet more rabbit holes; you never stop falling. And the further you fall, the less likely it is that anyone you’ve ever met is falling where you are. This will make you immensely sad. You will visit your parents, and when they ask you about your life you will have two choices. You can either be incomprehensible and see them grow concerned about things you are excited about, or you can talk about surface-level things and cry a little when you are alone at night.</p><p><span>The reason I’m spelling out this dynamic is twofold. First, you&nbsp;</span><em>can</em><span> get out of this mess if you want to. You do that by writing online (or publishing cool pieces of software, or videos, or whatever makes you tickle—as long as you work in public). Second, if you want to get out of the mess the key lies exactly in understanding that you are not the only person who has no one to talk to about the things you get obsessed by.</span></p><p><span>When writing in public, there is a common idea that you should make it&nbsp;</span><em>accessible</em><span>. This is a left over from mass media. Words addressed to a large and diverse set of people need to be simple and clear and free of jargon. It is valuable to write clearly of course, to a degree. Clear writing is clear thinking. But to make the content accessible? To cut digressions and obscure references to reduce the number of things people need to understand to make sense of your argument? Really?</span></p><p><span>That is against our purposes here. A blog post is&nbsp;</span><em>a search query</em><span>. You write to find your tribe; you write so they will know what kind of fascinating things they should route to your inbox. If you follow common wisdom, you will cut exactly the things that will help you find these people. It is like </span><a href="https://www.newyorker.com/magazine/2006/06/19/american-sublime" rel="">the time</a><span> someone told the composer Morton Feldman he should write for “the man in the street”. Feldman went over and looked out the window, and who did he see? Jackson Pollock.</span></p><p>Write for Jackson Pollock.</p><p>The people you will be able to have deep conversations with have, like you, already been surprised by the simple, clear things. They need more to get high. And this “more” will be wildly idiosyncratic. It cannot be summarized in a list of writing rules.</p><p>So what do you do?</p><p>You ask yourself: What would have made me jump off my chair if I had read it six months ago (or a week ago, or however fast you write)? If you have figured out something that made you ecstatic, this is what you should write. And you do not dumb it down, because you were not stupid six months ago, you just knew less. You also write with as much useful detail and beauty as you can muster, because that is what you would have wanted.</p><p><span>Six months ago, I was thinking about how large language models will affect how we learn. The essay&nbsp;</span><a href="https://escapingflatland.substack.com/p/gpt-3" rel="">Using GPT-3 to augment human learning</a><span> would have made me jump off my chair and run out to Johanna talking excitedly and incomprehensibly; that’s why I wrote it.</span></p><p>To make it interesting for myself, I made it longish and detailed. I like it when people don’t just talk in the abstract but show you with examples, preferably many examples, and preferably taken from the real world so they are messy. Some people find this excess annoying. I don’t. Rich data lets me develop a tacit understanding of the domain. So I wrote 3000 words about how to prompt GPT-3 in ways that make it more truthful, and I included a long dialogue where the AI diagnoses Johanna’s itching hands; and another one about how cities affect innovation; and a third about digitally mediated apprenticeships. I also made the essay a bit literary and flamboyant, which you are not “supposed” to do when writing about AI, at least not if you want the average LessWrong reader to upvote it. I’m not the average Less Wrong reader; I much prefer Thomas Bernhard’s rants to Eliezer Yudkowsky’s. Hence, I made it flamboyant.</p><p><span>I’m not saying it was a great essay; I’m saying&nbsp;</span><em>I</em><span> would have loved it. The essay would have answered most of the questions I had, and it would have given me a new more complex understanding of language models that I could have used to get excited by even more obscure things. And because the internet is big, there were a few thousand people who felt the same way—and I felt really deeply for these people.</span></p><p>It is crazy-beautiful to have a stranger arrive in your inbox, and they are excited by exactly the same things as you! You start dropping the most obscure references, and they’re like, yeah, read that, love it. The first handful of times it happened, Johanna asked me what was wrong. I was crying in the kitchen.</p><p>Those were tears of homecoming.</p><p>And—as if that wasn’t good enough—now these people are routing me interesting things about language models, cow breeding, Quintilian, 19th-century dictionaries, graph-based operating systems . . . and on and on . . . I get more and better input than I could ever have found on my own, a lot of it from sources outside the clear web, tinkerers writing to me about tools they are building, or new observations they have made.</p><p>In other words, I have, to a degree, automated my obsessions now. I have summoned a milieu that pulls me where I want to go!</p><p>A search query doesn’t have to be a 5000-word effort post to work (though the internet does reward that amply). Anything that would have been useful to you sometime in the past will do. Alexey Guzey makes lists, half of which are made up of quotes, and they are incredibly useful and have been instrumental in reshaping his network so that he could start New Science. Most good Twitter accounts can be viewed in the same way.</p><p>If you follow the advice above, you will write essays that almost no one likes.</p><p><span>Luckily,&nbsp;</span><em>almost no one</em><span> multiplied by the entire population of the internet is plenty if you can only find them.</span></p><p>How do you do that?</p><p>Well, you can probably spot a few of them already, even if you are a fairly naive internet user. The people you can spot will be those that have large followings. This might depress you. The famous people will seem out of reach, and the rest of the internet will seem to be pure madness.</p><p>When starting out, my model of how it would work was this: I wouldn’t find any readers. And if I did, they would be plebeians like myself, and then, maybe? hopefully? as I found more of them, I would level up? so that I could connect to people with increasingly large followings? like climbing a corporate hierarchy? This is not how it works.</p><p>The social structure of the internet is shaped like a river.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg" width="1000" height="750" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:750,&quot;width&quot;:1000,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Image&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="Image" title="Image" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F3f7da57d-e7a6-4d1f-ad4c-60c2691b69ca_1000x750.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>People with big followings, say someone like Sam Harris, is the mouth of the Mississippi emptying into the Mexican Gulf. Sam has millions of tributaries. There are perhaps a few hundred people Sam pays close attention to, and these in turn have a few hundred they listen to—tributaries flowing into headwaters flowing into rivers. The way messages spread on the internet is by flowing up this order of streams, from people with smaller networks to those with larger, and then it spreads back down through the larger networks. Going over land, from one tributary to another, is harder than going up the stream order and then down again.</p><p>This dynamic is easier to spot on Twitter, where you get notified every time someone likes or retweets what you have written (compared to a blog where the traffic data is more murky). When I tried out the title of this piece as a tweet—a primitive way to A/B-test—I could map that dynamic.</p><p><span>It was not a viral tweet. I am a minor tributary in the Twitter river system (my follower count was ~100 at the time). But a few of my followers were slightly larger. They had found me, I assume, because I made replies to their tweets that they sort of liked. Two of these, </span><a href="https://twitter.com/houshuang" rel="">Stian Håklev</a><span> and </span><a href="https://twitter.com/tomcritchlow" rel="">Tom Critchlow</a><span>, resonated with the tweet, so they retweeted it. A few others gave it a heart, which is also a way to route tweets (though it is a weaker form of routing than a retweet).</span></p><p><span>Then a few accounts that were an order of magnitude larger still retweeted it, because they followed Stian and Tom and now saw it. And from there it rushed up the stream order. It only took an hour or two for the tweet to reach the largest accounts it would reach (Tiago Forte with 84k followers, who retweeted it, and Balaji Srinavasan with 681K, who routed it on through a like). But&nbsp;</span><em>the smaller accounts took much longer</em><span>. Information rushes up and then trickles down. The larger accounts are not larger without a reason, but, at least in part, because they spend more time routing information in the network!</span></p><p><span>(This, by the way, is how you sent letters before the post service was established. In the 1600s, if you were an intellectual who wanted to send a letter to another intellectual, you’d send it to someone who could forward it to Marin Mersenne—because he knew everyone who knew anyone and would surely know someone who could find the person you wanted to reach. This I learned from a tweet by </span><a href="https://twitter.com/visakanv" rel="">Visa</a><span>, who is the modern day version of Mersenne.)</span></p><p><span>The trick, then, is this. You take the person you think is closest to the person (or type of person) you want to talk to and send what you write to this person. A subreddit is a good place to start. I usually do this by collecting interesting people on Twitter through good reply game. Then I can simply post my essays there and know they will have a chance of seeing it. Occasionally—and this makes more sense in the start—I send essays to people directly, in their direct messages or to their email. I sent&nbsp;</span><a href="https://escapingflatland.substack.com/p/apprenticeship-online" rel="">Apprenticeship Online</a><span> to José Rincón, mostly as a way to give context to a few comments I had on one of his essays. He didn’t answer, but he did tweet out the essay, which brought in a handful of interesting people in my orbit. It turns out that if you’ve written something that&nbsp;</span><em>you</em><span> find interesting, it is not unlikely that people you like will find it interesting too, and pass it on if you give them the chance.</span></p><p>As you start routing information and putting out blog posts, you will begin to accumulate connections. Useful information will start to stream toward you, turning you into a small hub yourself. This will allow you to collect and curate information and route it back out, which will allow even more people to connect to you, in a flywheel that lets you do increasingly useful and good work. I especially enjoy it when intelligent people attack me; I then invite them to comment on upcoming drafts.</p><p><span>You can also post to subreddits and forums, like </span><a href="https://www.lesswrong.com/" rel="">LessWrong </a><span>or </span><a href="https://www.reddit.com/r/slatestarcodex/" rel="">the SlateStarCodex subreddit</a><span>, that act like intellectual cafés on the internet. Pasting your posts there, it is easy to find community when you are starting out; you don't have to scream into the void. And, more importantly, a lot of people pass through these cafés, and if they are&nbsp;</span><em>your kind</em><span> they can help spread your work in the netherworld of personal connections and open weird doors on the internet for you. I relied heavily on forums in the beginning, gaining my first hundred or so subscribers this way, but they are growing less important now that I have collected a set of connections of my own. I can get a more precise spread of my essays by just emailing them to my subscribers and putting out a few tweets. But I feel deep gratitude, especially to LessWrong, which provides me with an editor who helps me with grammar and fact-checking.</span></p><p><span>By the way, the reason you will eventually grow out of forums is that&nbsp;</span><em>they are search queries written by other people</em><span>. LessWrong was summoned into existence by</span><a href="https://en.wikipedia.org/wiki/Eliezer_Yudkowsky" rel="">&nbsp;Eliezer Yudkowsky</a><span> and&nbsp;</span><a href="https://en.wikipedia.org/wiki/Robin_Hanson" rel="">Robin Hanson</a><span> writing a sequence of exceptionally powerful search queries (on Overcoming bias), blog posts so strong that the networks they created survived the exodus of the original nodes.</span></p><p>This is what online writing is at its limit—the summoning of a new culture.</p><p><span>If we squint a little, we could even say that this is how the internet itself came into existence. In 1963,</span><a href="https://en.wikipedia.org/wiki/J._C._R._Licklider" rel="">&nbsp;J. C. R. Licklider</a><span> wrote</span><a href="http://worrydream.com/refs/Licklider-IntergalacticNetwork.pdf" rel="">&nbsp;a memo</a><span> about an “intergalactic computer network”, and that search query was so powerful it summoned the aliens.</span></p><p>We’re all living inside his search query now.</p><p><span>Warmly,</span><br><span>Henrik</span></p><p>This is the third part of a series. Here are the previous parts:</p><div data-component-name="DigestPostEmbed"><a href="https://escapingflatland.substack.com/p/first-we-shape-our-social-graph-then" target="_blank" rel="noopener"><h2>First we shape our social graph; then it shapes us</h2></a><div><a href="https://escapingflatland.substack.com/p/first-we-shape-our-social-graph-then" target="_blank" rel="noopener"><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,h_212,c_fill,f_webp,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 424w, https://substackcdn.com/image/fetch/w_848,h_424,c_fill,f_webp,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,h_636,c_fill,f_webp,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 1272w, https://substackcdn.com/image/fetch/w_1300,h_650,c_fill,f_webp,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 1300w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1300,h_650,c_fill,f_auto,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg" sizes="100vw" alt="First we shape our social graph; then it shapes us" srcset="https://substackcdn.com/image/fetch/w_424,h_212,c_fill,f_auto,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 424w, https://substackcdn.com/image/fetch/w_848,h_424,c_fill,f_auto,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,h_636,c_fill,f_auto,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 1272w, https://substackcdn.com/image/fetch/w_1300,h_650,c_fill,f_auto,q_auto:good,fl_progressive:steep,g_auto/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F01dcb082-a030-4412-a27c-ed8acea8b065_2562x2132.jpeg 1300w" width="1300" height="650"></picture></a></div><div><a href="https://escapingflatland.substack.com/p/first-we-shape-our-social-graph-then" target="_blank" rel="noopener"><p>This essay is the first of a series. Here is part 2 and part 3. Once you see the boundaries of your environment, they are no longer the boundaries of your environment. Marshall McLuhan The inside of a womb looks as it did 70,000 years ago, but the world outside has changed. In July 2021, when our daughter was born, the night sky didn’t light up with stars; it was lit up by the warm afterglow of sodium street lamps. Green-clad women carried the baby away, pumping oxygen into her mouth. It was like something out of a sci-fi: she had woken up, without a memory, in an alien world. Smeared in white-yellow fat, she didn’t know who she was nor what she was doing here. The only thing she knew, genetically, was that she needed to figure this out fast or die.</p></a></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AMD MicroBlaze V Processor: A Flexible and Efficient RISC-V Processor (287 pts)]]></title>
            <link>https://www.xilinx.com/products/design-tools/microblaze-v.html</link>
            <guid>38137373</guid>
            <pubDate>Sat, 04 Nov 2023 02:01:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.xilinx.com/products/design-tools/microblaze-v.html">https://www.xilinx.com/products/design-tools/microblaze-v.html</a>, See on <a href="https://news.ycombinator.com/item?id=38137373">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			




    <p>The AMD MicroBlaze™ V processor is a soft-core RISC-V processor IP for AMD adaptive SoCs and FPGAs. The MicroBlaze V processor is based on a 32-bit RISC-V instruction set architecture (ISA). It allows developers to leverage the open-source RISC-V software ecosystem, is hardware compatible with the classic MicroBlaze processor, and is fully integrated in the Vivado™ and Vitis™ tools design flow. The MicroBlaze V processor is designed to be highly modular with a configurable architecture suitable for embedded systems applications.</p>
<p>Developers can target the MicroBlaze V processor to any AMD adaptive SoC or FPGA device supported by the Vivado Design Suite at <b>no extra cost</b>.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Telling GPT-4 you're scared or under pressure improves performance (175 pts)]]></title>
            <link>https://aimodels.substack.com/p/telling-gpt-4-youre-scared-or-under</link>
            <guid>38136863</guid>
            <pubDate>Sat, 04 Nov 2023 00:40:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://aimodels.substack.com/p/telling-gpt-4-youre-scared-or-under">https://aimodels.substack.com/p/telling-gpt-4-youre-scared-or-under</a>, See on <a href="https://news.ycombinator.com/item?id=38136863">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h4 translated="">Discover more from AIModels.fyi</h4><p>Get a weekly digest of new AI research, how-to guides, and top models.</p><p>Over 1,000 subscribers</p> </div><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png" width="469" height="232" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/818ab07c-2014-41cc-afce-91696a76a074_469x232.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:232,&quot;width&quot;:469,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:&quot;Telling GPT-4 you're scared or under pressure improves performance&quot;,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="Telling GPT-4 you're scared or under pressure improves performance" title="Telling GPT-4 you're scared or under pressure improves performance" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F818ab07c-2014-41cc-afce-91696a76a074_469x232.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a><figcaption>Adding emotional context makes LLMs like ChatGPT perform better.</figcaption></figure></div><p>In the grand narrative of artificial intelligence, the latest chapter might just be the most human yet.</p><p><span>A </span><a href="https://arxiv.org/pdf/2307.11760.pdf" rel="">new paper</a><span> indicates that AI models like GPT-4 can perform better when users express emotions such as urgency or stress. This discovery is particularly relevant for developers and entrepreneurs who utilize AI in their offerings, suggesting a new approach to prompt engineering that incorporates emotional context.</span></p><p>The study found that prompts with added emotional weight—dubbed "EmotionPrompts"—can improve AI performance in tasks ranging from grammar correction to creative writing. The implications are clear: incorporating emotional cues can lead to more effective and responsive AI applications.</p><p>For those embedding AI into products, these findings offer a tactical advantage. By applying this understanding of emotional triggers, AI can be fine-tuned to better meet user needs.</p><p>The crux of the matter lies in the very nature of communication. When humans converse, they don't just exchange information; they share feelings, intentions, and urgency. It's a dance of context and subtext, often orchestrated by emotional cues. The question this study tackles is whether AI, devoid of emotion itself, can respond to the emotional weight we imbue in our words—and if so, does it alter its performance?</p><p>Communication transcends the exchange of information; it involves the interplay of emotions and intentions. In AI, understanding whether the emotional context of human interaction can enhance machine response is more than academic—it could redefine the effectiveness of AI in everyday applications. If AI can adjust its performance based on the emotional cues it detects, we're looking at a future where our interactions with machines could also be more intuitive and human-like, leading to better outcomes in customer service, education, and beyond.</p><p>Before diving into the human-like responsiveness of AI, let's unpack the technical side. LLMs, such as GPT-4, are built on intricate neural networks that analyze vast amounts of text data. They identify patterns and relationships between words, sentences, and overall context to generate responses that are coherent and contextually appropriate.</p><p>The core innovation of the study lies in the introduction of "EmotionPrompt." This method involves integrating emotional significance into the prompts provided to LLMs. Unlike standard prompts, which are straightforward requests for information or action, EmotionPrompts carry an additional layer of emotional relevance—like stressing the importance of the task for one's career or implying urgency.</p><p>The integration of emotional cues into language models has introduced a fascinating dynamic: LLMs can produce superior outputs when the input prompts suggest an emotional significance. The recent study rigorously tested this phenomenon across a variety of models and tasks, offering a wealth of data that could reshape our understanding and utilization of AI.</p><p>The researchers set out to evaluate the performance of LLMs when prompted with emotional cues—a technique they've termed "EmotionPrompt." To ensure the robustness of their findings, they designed 45 distinct tasks that covered a wide range of AI applications:</p><ul><li><p><strong>Deterministic Tasks</strong><span>: These are tasks with definitive right or wrong answers, such as grammar correction, fact-checking, or mathematical problem-solving. The models' performances on these tasks can be measured against clear benchmarks, providing objective data on their accuracy.</span></p></li><li><p><strong>Generative Tasks</strong><span>: In contrast, generative tasks require the AI to produce content that may not have a single correct response. This includes creative writing, generating explanations, or providing advice. These tasks are particularly challenging for AI, as they must not only be correct but also coherent, relevant, and engaging.</span></p></li></ul><p>In the deterministic tasks, researchers observed a notable increase in performance when using EmotionPrompts. For instance, when tasked with instruction induction—a process that tests the AI's ability to follow and generate instructions based on given input—the models showed an 8.00% improvement in their relative performance.</p><p>Even more striking was the performance leap in the BIG-Bench tasks, which serve as a broad benchmark for evaluating the abilities of language models. Here, the use of EmotionPrompts yielded an incredible 115% improvement over standard prompts. This suggests that the models were not only understanding the tasks better but also producing more accurate or appropriate responses when the stakes were presented as higher.</p><p>To complement the objective metrics, the study also incorporated a human element. A group of 106 participants evaluated the generative tasks' outputs, assessing the quality of AI-generated responses. This subjective analysis covered aspects such as performance, truthfulness, and responsibility—a reflection of the nuanced judgment humans bring to bear on AI outputs.</p><p>When assessing the quality of responses from both vanilla prompts and those enhanced with emotional cues, the participants noted an average improvement of 10.9%. This jump in performance highlights the potential for EmotionPrompts to not only elevate the factual accuracy of AI responses but also enhance their alignment with human expectations and values.</p><p>The implications of these findings are manifold. On a technical level, they support the huge body of evidence that LLMs are sensitive to prompt engineering—a fact that can be harnessed to fine-tune AI outputs for specific needs. From a practical standpoint, the enhancements in performance with EmotionPrompts can lead to more effective AI applications in fields where accuracy and the perception of understanding are critical, such as in educational technology, customer service, and mental health support.</p><p>The improvements reported in the study are particularly significant as they point toward a new frontier in human-AI communication. By effectively simulating a heightened emotional context, we can guide AI to produce responses that are not only technically superior but also perceived as more thoughtful and attuned to human concerns. Basically, these findings suggest that telling your LLM that you're worried or under pressure to get a good generation makes them perform better, all else equal!</p><p><span>While the improvements are statistically significant, they </span><strong>do not</strong><span> imply that LLMs have emotional awareness. The increase in performance is a result of how these models have been engineered to process and prioritize information embedded in the prompts. Moreover, the study opens up a conversation about the ethical use of such techniques, as there's a fine line between enhancing AI performance and misleading users about the capabilities and sensitivities of AI systems.</span></p><p>In summary, the study's findings offer a compelling case for the strategic use of EmotionPrompts in improving LLM performance. The enhancements observed in both objective and subjective evaluations underscore the potential of integrating emotional nuances into AI interactions to produce more effective, responsive, and user-aligned outputs.</p><p>When we tell AI that we're relying heavily on its answers, it "doubles down" to provide us with more precise, thoughtful, and thorough responses. The AI isn't actually feeling the pressure, but it seems to recognize these emotional signals and adjust its performance accordingly.</p><p>For those incorporating AI into their businesses or products, this isn't just an interesting tidbit; it's actionable intelligence. By understanding and utilizing emotional triggers effectively, AI can be made more responsive and useful.</p><p>In a nutshell, this research indicates that LLMs like GPT-4 respond with improved performance when prompted with emotional context, a finding that could be quite useful for developers and product managers. This isn't about AI understanding emotions but rather about how these models handle nuanced prompts. It's a significant insight for those looking to refine AI interactions, though it comes with ethical considerations regarding user expectations of AI emotional intelligence.</p><p>Emotionally aware AI doesn't just understand our words—it understands our urgency and acts accordingly. Pretty cool!</p><p><em><a href="https://aimodels.substack.com/" rel="">Subscribe</a><span> or follow me on </span><a href="https://twitter.com/mikeyoung44" rel="">Twitter</a><span> for more content like this!</span></em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Uranium Demand Hits Decade High as Nuclear Renaissance Gains Traction (197 pts)]]></title>
            <link>https://oilprice.com/The-Environment/Global-Warming/Uranium-Demand-Hits-Decade-High-As-Nuclear-Renaissance-Gains-Traction.html</link>
            <guid>38136689</guid>
            <pubDate>Sat, 04 Nov 2023 00:11:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oilprice.com/The-Environment/Global-Warming/Uranium-Demand-Hits-Decade-High-As-Nuclear-Renaissance-Gains-Traction.html">https://oilprice.com/The-Environment/Global-Warming/Uranium-Demand-Hits-Decade-High-As-Nuclear-Renaissance-Gains-Traction.html</a>, See on <a href="https://news.ycombinator.com/item?id=38136689">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-content">
						    
<p>Nuclear is back. After decades of decline in the West’s nuclear energy industry, public and private support of nuclear energy is reversing course. As the specter of climate change grows and intensifies, increased nuclear power production has emerged as a promising pathway to solving the world’s&nbsp;<a href="https://commonslibrary.parliament.uk/research-briefings/cdp-2023-0074/#:~:text=What%20is%20the%20energy%20trilemma,and%20reliability%20of%20energy%20supplies" target="_blank" rel="noopener">energy trilemma</a>: an energy supply that is secure, affordable, and sustainable.&nbsp;</p><p>While nuclear has received a lot of bad press in the past thanks to high profile nuclear disasters like Fukushima, Chernobyl, and Three Mile Island, its numerous benefits have been receiving more and more attention in recent years. In fact, public support for nuclear energy in the United States is at a&nbsp;<a href="https://oilprice.com/Alternative-Energy/Nuclear-Power/Support-For-Nuclear-Energy-In-The-US-Is-At-A-10-Year-High.html" target="_blank" rel="noopener">10-year high</a>&nbsp;according to a Gallup poll released earlier this year.&nbsp;<!-- /192633929/OilPrice-300x250-ATF-Mobile -->

<!-- END: /192633929/OilPrice-300x250-ATF-Mobile -->
</p><p>Nuclear advocates argue that nuclear energy has a number of unique benefits that we can no longer afford to overlook in the context of climate change. It is a completely carbon-free form of energy production, and – crucially – it’s a baseload power source. This means that, unlike solar and wind energy, its production isn’t variable, waxing and waning according to weather patterns and the Earth’s rotation. While wind and solar have some significant advantages over nuclear (no toxic waste, for one thing), their scalability is currently limited by their variability and the relatively undeveloped long-term energy storage sector.&nbsp;</p><p>Nuclear is also a proven technology with plenty of existing infrastructure. While the United States fleet of nuclear power plants is aging after decades of disinterest and neglect, it’s still formidable – nuclear power still provides&nbsp;<a href="https://www.eia.gov/tools/faqs/faq.php?id=427&amp;t=3" target="_blank" rel="noopener">nearly 20%</a>&nbsp;of the nation’s energy. And while the nuclear sector had stalled out in the West over the last few decades, nuclear plant technology has marched forward, solving some of the major challenges toward re-embracing nuclear as a central power source. While traditional nuclear reactors are extremely costly to build, recent breakthroughs in&nbsp;<a href="https://oilprice.com/Alternative-Energy/Nuclear-Power/Small-Nuclear-Reactors-The-Answer-To-Big-Techs-Energy-Crisis.html" target="_blank" rel="noopener">small modular reactors</a>&nbsp;– which can be mass produced in a dedicated facility and assembled onsite – are already changing this.&nbsp;</p><p>The changing tides for nuclear energy can be quantified through market patterns for the uranium that fuels the reactors. Yellowcake uranium prices have skyrocketed, reaching their highest level in over a decade, going by more than 10% month-over-month. “Uranium demand has been lifted by governments from Washington to Seoul and Paris seeking energy independence by extending the lifetime of the existing fleet of nuclear reactors as they contemplate building new plants after gas prices skyrocketed due to Russia’s full-scale invasion of Ukraine,” the Financial Times&nbsp;<a href="https://www.ft.com/content/de05a4a2-2458-4450-99c2-9dd0e079e9cd?fbclid=IwAR0ndrqQYOrITqILnAGdj9NUB8FPAVBieaRSu0ZnpDKCeDOBszuTZhDfhOE" target="_blank" rel="noopener">reported</a>&nbsp;last month.&nbsp;</p><p>“You have a focus on energy security colliding with a focus on clean energy,” Grant Isaac, chief financial officer at Cameco, the world’s second-largest uranium producer, told the Financial Times. “The days of buying $40 uranium are over — and probably also for $50 or $60. We’re going to need new supplies,” he added. Uranium mining has seriously dipped since the Fukushima nuclear disaster in 2011, when demand plummeted. This is also a factor in pushing up prices, and a major incentive for new mining ventures looking to get in on the current demand surge. While uranium prices still haven’t rebounded to pre-Fukushima levels, they’re well on their way, and some speculators think that they could skyrocket to around $200 per pound by just 2025.<!-- /192633929/OilPrice-300x250-BTF-Mobile -->

<!-- END /192633929/OilPrice-300x250-BTF-Mobile -->

</p><p>The United States is well positioned to build up a robust domestic uranium production sector. A&nbsp;&nbsp;<a href="http://www.i2massociates.com/downloads/EMDUraniumNuclearMineralsandREECommitteeAnnualReport-2019.pdf" target="_blank" rel="noopener">2019 Annual Report</a>&nbsp;from the United States’ Uranium Committee of the Energy Minerals Division assessed that the U.S. has more than enough uranium to fuel hundreds of years of nuclear power generation, even if nuclear power was being relied on as a much more significant source of energy in the national energy mix than it is now.&nbsp;</p><p>By Haley Zaremba for Oilprice.com</p><p><strong>More Top Reads From Oilprice.com:</strong><a href="https://oilprice.com/Energy/Energy-General/Saudi-Arabias-Unsuccessful-Attempt-To-Boost-Oil-Prices.html" target="_blank" rel="noopener"></a></p><ul><li><span><strong><a href="https://oilprice.com/Geopolitics/International/EU-Unveils-Global-Gateway-To-Rival-Chinas-Belt-And-Road.html">EU Unveils Global Gateway To Rival China's Belt And Road</a></strong></span></li><li><span><strong><a href="https://oilprice.com/Energy/Crude-Oil/US-Eyes-Tighter-Sanctions-On-Irans-Oil-And-Gas-Exports.html">U.S. Eyes Tighter Sanctions On Iran's Oil And Gas Exports</a></strong></span></li><li><span><strong><a href="https://oilprice.com/Latest-Energy-News/World-News/The-UK-Awards-27-New-North-Sea-Oil-And-Gas-Licenses.html" data-embargo="1698672540">The UK Awards 27 New North Sea Oil And Gas Licenses</a></strong></span></li></ul>
						    <br>

								
					    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Portugal. The Man – Official Website Is a Google Sheets Document (518 pts)]]></title>
            <link>https://www.portugaltheman.com/?frontpage=true</link>
            <guid>38136607</guid>
            <pubDate>Fri, 03 Nov 2023 23:59:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.portugaltheman.com/?frontpage=true">https://www.portugaltheman.com/?frontpage=true</a>, See on <a href="https://news.ycombinator.com/item?id=38136607">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-wrapper">
        
        <main id="content" role="main">
          <section>
            <a id="main-content" tabindex="-1"></a>
              <div>
    <div id="block-bartik-content">
      
<article data-history-node-id="371" about="/ptm" typeof="schema:WebPage">
  <header>
    
            <span property="schema:name" content="POC-PTM"></span>

      </header>
  <div property="schema:text">
            <div>
                    <p>terms</p><p> By submitting my information, I agree to receive personalized
                        updates and
                        marketing messages about Portugal. The Man based on my information, interests,
                        activities, website visits and device data and in accordance with the
                        <a href="https://atlanticrecords.com/privacy-policy/" target="_blank">Privacy&nbsp;Policy</a>. I understand that I can opt-out at any
                        time by emailing
                        <a href="mailto:privacypolicy@wmg.com">privacypolicy@wmg.com</a>.

                    </p>
                </div>
            <p>
                Thank you!
            </p>
            <div>
                <p><span>x</span></p><p>Welcome <span></span> to Portugal. The Man's mailing list!</p>
                <form action="https://signup.wmg.com/register?">
                    
                    <p><label for="postalCode">Postal Code</label>
                        
                    </p>
                    
                    
                    

                    
                    
                    <p>
                        <label for="goptin_checkbox4">Sign me up to discover more artists
                            like
                            <span>Portugal. The Man</span> and other offers.</label>
                    </p>
                    
                    <div>
                        <p>terms</p><p>
                            By submitting my information, I agree to receive personalized updates and marketing
                            messages about Portugal. The Man based on my information, interests, activities, website
                            visits and device data and in accordance with the <a href="https://atlanticrecords.com/privacy-policy/" target="_blank" title="Privacy Policy">Privacy&nbsp;Policy</a>. In addition,
                            if I have checked the box above, I agree to receive such updates and messages about
                            similar artists, products and offers. I understand that I can opt-out from messages at
                            any time by emailing <a href="mailto:privacypolicy@wmg.com">privacypolicy@wmg.com</a>.
                        </p>
                    </div>
                </form>
            </div>
        </div>
</article>

    </div>

<div id="block-ptmfoundation">
            <p><img src="https://www.portugaltheman.com/sites/g/files/g2000013096/files/2021-11/foundationImg.png" alt=""></p><p>
                PTM FOUNDATION is focused on building community resilience, empathy, and awareness through music, stories, art, education and connectivity. We aim to convene and organize partnerships and projects informed by community need, then mobilize Portugal. The
                Man’s listeners and supporters around that shared vision.
            </p>
            
        </div>
<div id="block-ptmmercado">
            <div>
                <p><a href="https://ptmmercado.com/collections/long-sleeves/products/bomb-longsleeve-white-tee" target="_blank" rel="noopener noreferrer">
                    <img src="https://www.portugaltheman.com/sites/g/files/g2000013096/files/2021-11/BombLongsleeveTee%402x.png" alt="">
                </a></p><p>
                    Bomb Longsleeve White Tee
                </p>
                
            </div>
            <div>
                <p><a href="https://ptmmercado.com/collections/long-sleeves/products/racism-is-for-choads-longsleeve-tie-dye-tee" target="_blank" rel="noopener noreferrer">
                    <img src="https://www.portugaltheman.com/sites/g/files/g2000013096/files/2021-11/RIFC_TieDye_Longsleeve%402x.png" alt="">
                </a></p><p>
                    Racism Is For Choads Longsleeve Tie Dye Tee
                </p>
                
            </div>
            <div>
                <p><a href="https://ptmmercado.com/collections/shorts/products/ptm-raven-logo-shorts" target="_blank" rel="noopener noreferrer">
                    <img src="https://www.portugaltheman.com/sites/g/files/g2000013096/files/2021-11/Raven_Shorts%402x.png" alt="">
                </a></p><p>
                    PTM Raven Logo Mesh Short
                </p>
                
            </div>
            
        </div>

  </div>

          </section>
        </main>
                      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bayer hit with $332M judgement in Roundup cancer trial (242 pts)]]></title>
            <link>https://fortune.com/2023/11/03/bayer-332-million-judgement-trial-man-cancer-decades-monsanto-roundup-weedkiller/</link>
            <guid>38136314</guid>
            <pubDate>Fri, 03 Nov 2023 23:16:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fortune.com/2023/11/03/bayer-332-million-judgement-trial-man-cancer-decades-monsanto-roundup-weedkiller/">https://fortune.com/2023/11/03/bayer-332-million-judgement-trial-man-cancer-decades-monsanto-roundup-weedkiller/</a>, See on <a href="https://news.ycombinator.com/item?id=38136314">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-cy="articleContent" id="article-content"><p>A California jury has awarded $332 million to a man who sued chemical giant Monsanto Co. contending that his cancer was related to decades of using its Roundup weedkiller.</p><div>



<p>A San Diego Superior Court jury awarded damages Tuesday in a lawsuit filed by Mike Dennis, 57, of Carlsbad. He was diagnosed in 2020 with a rare form of non-Hodgkin’s lymphoma.</p>



<p>His lawsuit contended that his illness was related to Roundup’s active ingredient, glyphosate.</p>



<p>Dennis had treatment and has been in remission for nearly three years but there is no cure, Adam Peavy, one of his attorneys, told&nbsp;<a href="https://www.nbcsandiego.com/news/local/san-diego-county-jury-reaches-332m-verdict-in-trial-claiming-roundup-caused-carlsbad-mans-cancer/3343895/" target="_self" rel="">KNSD-TV.</a></p>



<p>“His doctors have told him it’s going to come back and we’re just waiting to see if that happens,” Peavy said.</p>



<p>The jury found that Monsanto, which is now a division of <a href="https://fortune.com/2023/03/10/shareholders-are-forcing-bayers-ceo-out-what-do-they-expect-from-his-replacement/" target="_self" rel="">pharmaceutical and biotechnology giant Bayer</a>, failed to provide warnings of Roundup’s risks. But jurors also ruled partially in Bayer’s favor by finding the product design wasn’t defective and the company wasn’t negligent.</p>



<p>Dennis was awarded $7 million in compensatory damages and $325 million in punitive damages.</p>



<p>In a statement to KNSD-TV, <a href="https://fortune.com/company/bayer/" target="_blank" rel="">Bayer</a> said it believes “we have strong arguments on appeal to get this unfounded verdict overturned and the unconstitutionally excessive damage award eliminated or reduced.”</p>



<p>“There were significant and reversible legal and evidentiary errors made during this trial,” Bayer added.</p>



<p>Bayer bought Monsanto for $63 billion in 2018 and has been trying to deal with thousands of claims and lawsuits related to Roundup. In 2020, Bayer&nbsp;<a href="https://apnews.com/article/a12603a80c8238d1f7af3705cfec610a" target="_self" rel="">announced</a>&nbsp;it would pay up to $10.9 billion to settle some 125,000 filed and unfiled claims.</p></div><p><em>Subscribe to the CFO Daily newsletter to keep up with the trends, issues, and executives shaping corporate finance. <a href="https://www.fortune.com/newsletters/cfodaily?&amp;itm_source=fortune&amp;itm_medium=article_tout&amp;itm_campaign=cfo_daily" target="_self" rel="">Sign up</a> for free.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Sega Hitachi HiSaturn Navi Console (105 pts)]]></title>
            <link>https://nfggames.com/games/hisaturn/</link>
            <guid>38136041</guid>
            <pubDate>Fri, 03 Nov 2023 22:43:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nfggames.com/games/hisaturn/">https://nfggames.com/games/hisaturn/</a>, See on <a href="https://news.ycombinator.com/item?id=38136041">Hacker News</a></p>
<div id="readability-page-1" class="page"><div color="black" face="arial, sans-serif" size="-1">
<center><img src="https://nfggames.com/games/hisaturn/hrdhisatnavi.jpg"></center>
<p><b>Yes, this system was on ebay.   <a href="https://nfggames.com/games/hisaturn/auction2/index.htm">Check it out</a>.</b></p><!-- <a href="http://cgi.ebay.com/ws/eBayISAPI.dll?ViewItem&category=3665&item=3536384145">Check it out here.</a> -->
<p>
In December 1995, about a year after the Saturn launched in Japan and only a few short months after the Saturn's launch in North America, Hitachi released the single most extreme console the world has ever seen.  The HiSaturn Navi.  Its feature list was enormous: slim profile, car adaptor, LCD screen, GPS Navigation, karaoke...  No console before or since dared dream of including half these features, which is why to this day it is probably the rarest and most expensive post-NES console.  In fact, even considering the piles of weird pre-NES hardware, the HiSaturn Navi still ranks as one of the most ridiculously expensive and elusive systems you're ever likely to see.  As of this writing (2003/06/23) you can expect to pay over $1200 USD to get one of these in decent shape with a screen, and more if you get one in like-new condition with all the boxes and manuals intact.  Totally ridiculous, and yet...  
</p><p>
<img src="https://nfggames.com/games/hisaturn/bar_thestory.gif">
When Sega was creating the Saturn system they enlisted the help of several long-time partners - JVC provided the CD mechanism and Hitachi provided the dual SH-2 CPUs.  As part of a co-branding or cross-licensing agreement, both of these companies produced their own variants of the Saturn hardware.  Both JVC's V-Saturn and Hitachi's HiSaturn were merely coloured variants of the Sega Saturn, with no additional features or capabilities.  All three manufacturers, Sega, JVC + Hitachi, released older oval-button systems and newer round-button systems, and none of these are particularly rare, but then Hitachi threw down the gauntlet.
</p><p>
<img src="https://nfggames.com/games/hisaturn/hisatopen.jpg"></p><p>
It beggars disbelief to this day.  The Saturn was only a year old when Hitachi threw out the Sega mold and released a completely redesigned system jam packed with goodies.  It's smaller than your average Saturn - about the same width and length, but almost a third shorter and it's nearly flat on top.  It's considerably heavier because of the added components, even considering most of the power supply was made external.  In addition to the standard Saturn ports (serial, AV + controller) it has two microphone inputs for karaoke use, a GPS antenna port, video and audio inputs, a TV-tuner port and a line-out port.  This was all standard equipment.
</p><center><a href="https://nfggames.com/games/hisaturn/hrdhisatcol.jpg"><img src="https://nfggames.com/games/hisaturn/hrdhisatcols.jpg"></a><br><span size="-2">(click for larger)</span>
<table>
 <tbody><tr>
  <td>
	<img src="https://nfggames.com/games/hisaturn/hrdhisatcol.gif">
  </td>
  <td>
	<ol><span size="-2">
	<li>Hitachi HiSaturn
	</li><li>Hitachi HiSaturn Navi
	</li><li>Sega Saturn (New)
	</li><li>Sega Saturn (US, New)
	</li><li>JVC V-Saturn (New)
	</li><li>Sega Skeleton Saturn
	</li><li>Sega Saturn (Old)
	</li></span></ol><span size="-2">
  </span></td>
 </tr>
</tbody></table></center><p>
The launch price was 150,000 Yen, or about $1480 US Dollars at the time.  This certainly helps explain the system's rarity - the price of this system without a screen was more than $1000 above the price of a normal Saturn.  Add another 45,000 Yen ($443) for the LCD screen and you've got a system far beyond the reach of most people.
</p><p>
Also accounting for the system's rarity are the production quantities: only two thousand HiSaturn Navi units were produced every month.  <b>Unconfirmed:</b> I've been told the system was in production for only one month.  Possibly then only 2,000 units were produced.
</p><center><a href="https://nfggames.com/games/hisaturn/hrdhisaturn.jpg"><img src="https://nfggames.com/games/hisaturn/hisat2.jpg"></a><br><span size="-2">Normal HiSaturn + Pad (click for larger)</span></center>
<p><img src="https://nfggames.com/games/hisaturn/bar_thescreen.gif">
The LCD screen was released at the same time as the system, but only one thousand units per month were produced - half the number of systems.  It was a backlit active-matrix TFT screen, a very expensive process at the time, with resolution, clarity and contrast surpassing any other console screen - equal in vibrancy but larger than the Turbo Express.  It draws its power from the system, so no additional power supply is required.  .  It clips to the back of the system and plugs in with a short cable to the 'monitor out' port.  When closed it sits flush with the CD door, and has quite a slim profile, when closed the system is approximately the same height as a normal Saturn.  The screen is capable of displaying both interlaced and non-interlaced video.  It has a sliding volume control, and one speaker, as well as tint + brightness controls and a Front/Rear switch, which serves a very secret purpose (I have no idea what).
</p><p>
<img src="https://nfggames.com/games/hisaturn/screen.jpg">
<img src="https://nfggames.com/games/hisaturn/screen2.jpg"></p><p>
<img src="https://nfggames.com/games/hisaturn/bar_GPS.gif">
A GPS antenna port and a GPS antenna/receiver were standard equipment.  In-car navigation systems have been popular in Japan for a very long time, but I'm not sure to whom this particular system seemed a good idea.  Installation of the power supply and GPS antenna were semi-permanent, as the former had to be tucked away carefully to avoid unsightly cable dangle, and the latter needed to be clipped to the handbrake.  When installed you could use the system like any other navi.  The screen showed your location overlaid on a road map, and you could zoom in or out, add locations, plot routes and leave 'bread crumb' trails.  No navi software or boot disc was needed, to operate the navi you merely turned the system on with any Naviken compatible map CD in the drive, and the Navi mode started.
</p><center><img src="https://nfggames.com/games/hisaturn/hisatgps.jpg"><br><span size="-2">GPS Antenna port + VCD bay</span></center><p>
Operation was a bit tricky.  Unlike normal navi systems the HiSaturn used a controller on a cord, and since two hands were required it was beyond the driver's ability to manipulate the system while driving.  In addition, also unlike other navi systems, there was a sensor that needed to be attached to the hand brake cable, and if you weren't parked with the hand brake on there were several functions unavailable to the user, like route planning.  Also game playing was prohibited while the car was in motion - without the handbrake sensor installed and the handbrake applied the screen would shut off after a game started to load.
<br><img src="https://nfggames.com/games/hisaturn/hisatclosed1.jpg"></p><p>
If you happen to own one and dare use it in the car, you can bypass this 'feature' by connecting the sensor cable to anything grounded.  
</p><p>
<img src="https://nfggames.com/games/hisaturn/bar_karaoke.gif">
Karaoke was absolutely huge in Japan.  To say it was a phenomenon is a gross understatement.  Every piece of stereo equipment featuered karaoke inputs.  Portable CD players had CD+G capability and video output jacks, even the Sega CD system had a karaoke option.  With the HiSaturn Navi, the karaoke features were built in, with two microphone ports and independant volume controls, as well as four buttons on top of the unit controlling Echo and Pitch.  In addition, there was a control for voice cancellation or multiplexing on the top of the unit.  These features are present in other Saturn models, but the buttons are software controlled and only accessible while playing music CDs or CD+Gs.  With the HiSaturn Navi you can control the pitch or cancel voice for all audio output, a real laugh during gameplay, I assure you!  
</p><center><img src="https://nfggames.com/games/hisaturn/hisatsound.jpg"><br><span size="-2">Sound controls + karaoke ports</span></center>
<p><img src="https://nfggames.com/games/hisaturn/bar_technic.gif">
The slim profile of the system made some extra demands for manufacturing, and because it was released relatively early in the Saturn's lifespan there was no newer, smaller chipset to use.  To save space, most of the power supply was made external, but there's still part of it inside.  There are two additional PCBs inside, one for the extra sound controls, and one for the GPS.  There are many additional chips - video select, audio control, the GPS software, etc.  It is fully region moddable like any other Saturn, and you can easily make a switchless mod for playing US or European games without cutting new holes.  It has a VCD slot for the movie card, and it uses the same CR2032 battery for backup RAM.  There is a cart slot, but the screen cannot be closed with a cart inserted, and the cart will block some of the screen controls.
</p><center><img src="https://nfggames.com/games/hisaturn/inside1.jpg"></center><p>
The screen uses composite video, not RGB, but this isn't really noticable given the course triad-pixel arrangement.  In a very strange move, the system does not output RGB through the multi-AV port like every other Saturn.  I don't know the reason for this, but it's a relatively easy fix.
</p><center><img src="https://nfggames.com/games/hisaturn/hisattuner.jpg"><br><span size="-2">AV input + tuner port</span></center>
<p><img src="https://nfggames.com/games/hisaturn/bar_misc.gif">
I'm not certain the TV tuner was ever released.  I've never seen one for sale, if it did reach store shelves it was in frighteningly limited numbers.  The system manual makes reference to this unit as 'forthcoming' along with the never-released hard drive, and the keyboard and floppy drive which were released much later, and not by Hitachi.  The HiSaturn Navi pad is the same as the other HiSaturn systems, which are in turn only cosmetically different than the Sega-branded units.
<br><img src="https://nfggames.com/games/hisaturn/hisatclosed2.jpg">
<img src="https://nfggames.com/games/hisaturn/screenshot.jpg"></p><center><span size="-2">As you can see, the screen is very clear.  From top-right clockwise: Bomberman, Tempest (closer), Bomberman (closest).
<p>
<img src="https://nfggames.com/games/hisaturn/bar_links.gif">
<a href="http://www.gamesx.com/rgbadd/hisaturn.html">Adding RGB output</a><br>
<a href="http://www.gamesx.com/importmod/saturncon.htm">Import modding</a><br>
<a href="http://www.gamesx.com/importmod/sat_switchless.htm">Switchless mod info</a></p></span></center></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Surround sound test files for every audio format (176 pts)]]></title>
            <link>https://drive.google.com/drive/folders/1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b</link>
            <guid>38135810</guid>
            <pubDate>Fri, 03 Nov 2023 22:21:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://drive.google.com/drive/folders/1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b">https://drive.google.com/drive/folders/1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b</a>, See on <a href="https://news.ycombinator.com/item?id=38135810">Hacker News</a></p>
<div id="readability-page-1" class="page"><div jscontroller="I0Ibec" jsaction="OzZR8b:Zk4Cxd;rcuQ6b:npT2md;GvneHb:GvneHb;" jsname="m2NEBd"><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i13" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;0" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i14" aria-disabled="false" data-id="1AiEazgnM2UawKnbVN985n6qvFCm05KbB" data-target="doc" draggable="true" jsdata="KCtMme;1AiEazgnM2UawKnbVN985n6qvFCm05KbB;8" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 07.02.2023" aria-label="Zuletzt geändert von : 07.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">07.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 1&nbsp;MB" aria-label="Größe: 1&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">1&nbsp;MB</span></p></div><p><span id="i14">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i13" jsdata=" M2rjcd;_;6 KCtMme;1AiEazgnM2UawKnbVN985n6qvFCm05KbB;8 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i15" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;1" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i16" aria-disabled="false" data-id="1GBHKH-VUQ1raDLIprJJXREc6n48qsQlf" data-target="doc" draggable="true" jsdata="KCtMme;1GBHKH-VUQ1raDLIprJJXREc6n48qsQlf;9" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 874&nbsp;KB" aria-label="Größe: 874&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">874&nbsp;KB</span></p></div><p><span id="i16">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i15" jsdata=" M2rjcd;_;6 KCtMme;1GBHKH-VUQ1raDLIprJJXREc6n48qsQlf;9 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i17" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;2" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i18" aria-disabled="false" data-id="1TyfpB1Pw68cSRqHZ-EyBAl_kDX5EiT-6" data-target="doc" draggable="true" jsdata="KCtMme;1TyfpB1Pw68cSRqHZ-EyBAl_kDX5EiT-6;10" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Atmos test tones 1000Hz V4.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Atmos test tones 1000Hz V4.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 28.04.2023" aria-label="Zuletzt geändert von : 28.04.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">28.04.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 81.2&nbsp;MB" aria-label="Größe: 81.2&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">81.2&nbsp;MB</span></p></div><p><span id="i18">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i17" jsdata=" M2rjcd;_;6 KCtMme;1TyfpB1Pw68cSRqHZ-EyBAl_kDX5EiT-6;10 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i19" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;3" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i20" aria-disabled="false" data-id="1f-Vh81928_QFG1cVOnTzAzxkNYl-v1_S" data-target="doc" draggable="true" jsdata="KCtMme;1f-Vh81928_QFG1cVOnTzAzxkNYl-v1_S;11" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos E-AC-3 5.1.2.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos E-AC-3 5.1.2.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 25.02.2023" aria-label="Zuletzt geändert von : 25.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">25.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 30.8&nbsp;MB" aria-label="Größe: 30.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">30.8&nbsp;MB</span></p></div><p><span id="i20">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i19" jsdata=" M2rjcd;_;6 KCtMme;1f-Vh81928_QFG1cVOnTzAzxkNYl-v1_S;11 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i21" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;4" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i22" aria-disabled="false" data-id="1HNnFmd0Wfg4tkkQn2X97nCHZYNguvQ4H" data-target="doc" draggable="true" jsdata="KCtMme;1HNnFmd0Wfg4tkkQn2X97nCHZYNguvQ4H;12" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos E-AC-3 9.1.6.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos E-AC-3 9.1.6.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 253&nbsp;MB" aria-label="Größe: 253&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">253&nbsp;MB</span></p></div><p><span id="i22">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i21" jsdata=" M2rjcd;_;6 KCtMme;1HNnFmd0Wfg4tkkQn2X97nCHZYNguvQ4H;12 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i23" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;5" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i24" aria-disabled="false" data-id="1BSSriMntLs8I46xTSDenDYvbTELwo2S4" data-target="doc" draggable="true" jsdata="KCtMme;1BSSriMntLs8I46xTSDenDYvbTELwo2S4;13" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos test by Buzz_Buzz_Buzz_ - 7.1.4 master with 5.1 E-AC-3 bed.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos test by Buzz_Buzz_Buzz_ - 7.1.4 master with 5.1 E-AC-3 bed.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 22.03.2023" aria-label="Zuletzt geändert von : 22.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">22.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 12.6&nbsp;MB" aria-label="Größe: 12.6&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">12.6&nbsp;MB</span></p></div><p><span id="i24">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i23" jsdata=" M2rjcd;_;6 KCtMme;1BSSriMntLs8I46xTSDenDYvbTELwo2S4;13 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i25" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;6" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i26" aria-disabled="false" data-id="17POPkfjCPAj1gc9k2TGIgi29eCg32LpK" data-target="doc" draggable="true" jsdata="KCtMme;17POPkfjCPAj1gc9k2TGIgi29eCg32LpK;14" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos TrueHD, E-AC-3 5.1.2.mkv Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos TrueHD, E-AC-3 5.1.2.mkv</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 591.5&nbsp;MB" aria-label="Größe: 591.5&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">591.5&nbsp;MB</span></p></div><p><span id="i26">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i25" jsdata=" M2rjcd;_;6 KCtMme;17POPkfjCPAj1gc9k2TGIgi29eCg32LpK;14 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i27" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;7" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i28" aria-disabled="false" data-id="1cu-dAxNqCkjDXoEKgpGRaqsMGqvCWS_4" data-target="doc" draggable="true" jsdata="KCtMme;1cu-dAxNqCkjDXoEKgpGRaqsMGqvCWS_4;15" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos TrueHD, E-AC-3 5.1.4.mkv Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos TrueHD, E-AC-3 5.1.4.mkv</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 755.9&nbsp;MB" aria-label="Größe: 755.9&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">755.9&nbsp;MB</span></p></div><p><span id="i28">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i27" jsdata=" M2rjcd;_;6 KCtMme;1cu-dAxNqCkjDXoEKgpGRaqsMGqvCWS_4;15 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i29" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;8" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i30" aria-disabled="false" data-id="1_cQwcae2gZuueR8-JEJY6bS0qbIf29NR" data-target="doc" draggable="true" jsdata="KCtMme;1_cQwcae2gZuueR8-JEJY6bS0qbIf29NR;16" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos TrueHD, E-AC-3 7.1.2.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos TrueHD, E-AC-3 7.1.2.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 153.8&nbsp;MB" aria-label="Größe: 153.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">153.8&nbsp;MB</span></p></div><p><span id="i30">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i29" jsdata=" M2rjcd;_;6 KCtMme;1_cQwcae2gZuueR8-JEJY6bS0qbIf29NR;16 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i31" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;9" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i32" aria-disabled="false" data-id="1dIGx5BZR4pYXVW0ou17fV9qSuCTmgeN8" data-target="doc" draggable="true" jsdata="KCtMme;1dIGx5BZR4pYXVW0ou17fV9qSuCTmgeN8;17" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Atmos TrueHD, E-AC-3 7.1.4.mkv Freigegebene Video-Datei" data-column-field="6"><p>Dolby Atmos TrueHD, E-AC-3 7.1.4.mkv</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 893.7&nbsp;MB" aria-label="Größe: 893.7&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">893.7&nbsp;MB</span></p></div><p><span id="i32">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i31" jsdata=" M2rjcd;_;6 KCtMme;1dIGx5BZR4pYXVW0ou17fV9qSuCTmgeN8;17 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i33" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;10" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i34" aria-disabled="false" data-id="1QAEf6xByehIjWYPuFfTXsl8TKk9L1oRs" data-target="doc" draggable="true" jsdata="KCtMme;1QAEf6xByehIjWYPuFfTXsl8TKk9L1oRs;18" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Digital AC-3 5.1.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Digital AC-3 5.1.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 25.02.2023" aria-label="Zuletzt geändert von : 25.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">25.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 14.3&nbsp;MB" aria-label="Größe: 14.3&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.3&nbsp;MB</span></p></div><p><span id="i34">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i33" jsdata=" M2rjcd;_;6 KCtMme;1QAEf6xByehIjWYPuFfTXsl8TKk9L1oRs;18 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i35" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;11" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i36" aria-disabled="false" data-id="11pu3usbte8gXcSuEg4ZZBOf-eepOH6hZ" data-target="doc" draggable="true" jsdata="KCtMme;11pu3usbte8gXcSuEg4ZZBOf-eepOH6hZ;19" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Digital Plus AV Sync.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Digital Plus AV Sync.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 07.02.2023" aria-label="Zuletzt geändert von : 07.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">07.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 9.5&nbsp;MB" aria-label="Größe: 9.5&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">9.5&nbsp;MB</span></p></div><p><span id="i36">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i35" jsdata=" M2rjcd;_;6 KCtMme;11pu3usbte8gXcSuEg4ZZBOf-eepOH6hZ;19 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i37" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;12" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i38" aria-disabled="false" data-id="10HY12L2i1xArxXJWZV1z7jaYZEdBYiLR" data-target="doc" draggable="true" jsdata="KCtMme;10HY12L2i1xArxXJWZV1z7jaYZEdBYiLR;20" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Digital Plus E-AC-3 5.1.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Digital Plus E-AC-3 5.1.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 08.08.2022" aria-label="Zuletzt geändert von : 08.08.2022" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">08.08.2022<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 30.4&nbsp;MB" aria-label="Größe: 30.4&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">30.4&nbsp;MB</span></p></div><p><span id="i38">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i37" jsdata=" M2rjcd;_;6 KCtMme;10HY12L2i1xArxXJWZV1z7jaYZEdBYiLR;20 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i39" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;13" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i40" aria-disabled="false" data-id="1R7IavBKd0KLKCw93uIsQOtOCeukzbUhZ" data-target="doc" draggable="true" jsdata="KCtMme;1R7IavBKd0KLKCw93uIsQOtOCeukzbUhZ;21" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Dolby Digital Plus E-AC3 7.1.mp4 Freigegebene Video-Datei" data-column-field="6"><p>Dolby Digital Plus E-AC3 7.1.mp4</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 07.02.2023" aria-label="Zuletzt geändert von : 07.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">07.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 40.3&nbsp;MB" aria-label="Größe: 40.3&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">40.3&nbsp;MB</span></p></div><p><span id="i40">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i39" jsdata=" M2rjcd;_;6 KCtMme;1R7IavBKd0KLKCw93uIsQOtOCeukzbUhZ;21 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i41" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;14" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i42" aria-disabled="false" data-id="1QRzw_G0WIhjOUail6ngWj3D7YTzvCBcz" data-target="doc" draggable="true" jsdata="KCtMme;1QRzw_G0WIhjOUail6ngWj3D7YTzvCBcz;22" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 08.08.2022" aria-label="Zuletzt geändert von : 08.08.2022" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">08.08.2022<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 72.8&nbsp;MB" aria-label="Größe: 72.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">72.8&nbsp;MB</span></p></div><p><span id="i42">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i41" jsdata=" M2rjcd;_;6 KCtMme;1QRzw_G0WIhjOUail6ngWj3D7YTzvCBcz;22 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i43" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;15" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i44" aria-disabled="false" data-id="16qFfb6GJktoPio1hho9_feIXPMaXfcx9" data-target="doc" draggable="true" jsdata="KCtMme;16qFfb6GJktoPio1hho9_feIXPMaXfcx9;23" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 13.03.2023" aria-label="Zuletzt geändert von : 13.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">13.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 1.4&nbsp;MB" aria-label="Größe: 1.4&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">1.4&nbsp;MB</span></p></div><p><span id="i44">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i43" jsdata=" M2rjcd;_;6 KCtMme;16qFfb6GJktoPio1hho9_feIXPMaXfcx9;23 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i45" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;16" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i46" aria-disabled="false" data-id="1_n97s8snSUlogo1dhbIauKj6JHwuVJBZ" data-target="doc" draggable="true" jsdata="KCtMme;1_n97s8snSUlogo1dhbIauKj6JHwuVJBZ;24" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 403&nbsp;KB" aria-label="Größe: 403&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">403&nbsp;KB</span></p></div><p><span id="i46">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i45" jsdata=" M2rjcd;_;6 KCtMme;1_n97s8snSUlogo1dhbIauKj6JHwuVJBZ;24 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i47" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;17" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i48" aria-disabled="false" data-id="1KBzYhu_mIOnrZE1kgFFVrr0LvBU4hJlG" data-target="doc" draggable="true" jsdata="KCtMme;1KBzYhu_mIOnrZE1kgFFVrr0LvBU4hJlG;25" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-ES 6.1 Discrete.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-ES 6.1 Discrete.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 2.8&nbsp;MB" aria-label="Größe: 2.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">2.8&nbsp;MB</span></p></div><p><span id="i48">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i47" jsdata=" M2rjcd;_;6 KCtMme;1KBzYhu_mIOnrZE1kgFFVrr0LvBU4hJlG;25 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i49" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;18" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i50" aria-disabled="false" data-id="11owhM8oVuoZHAd03IgVZKTmmJd_0AdLp" data-target="doc" draggable="true" jsdata="KCtMme;11owhM8oVuoZHAd03IgVZKTmmJd_0AdLp;26" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 2.8&nbsp;MB" aria-label="Größe: 2.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">2.8&nbsp;MB</span></p></div><p><span id="i50">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i49" jsdata=" M2rjcd;_;6 KCtMme;11owhM8oVuoZHAd03IgVZKTmmJd_0AdLp;26 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i51" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;19" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i52" aria-disabled="false" data-id="1H6N9Wh7GPTf9y5BL_RiZWQ5PrpQTvVBO" data-target="doc" draggable="true" jsdata="KCtMme;1H6N9Wh7GPTf9y5BL_RiZWQ5PrpQTvVBO;27" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD High Resolution 7.1.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD High Resolution 7.1.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 10.3&nbsp;MB" aria-label="Größe: 10.3&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">10.3&nbsp;MB</span></p></div><p><span id="i52">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i51" jsdata=" M2rjcd;_;6 KCtMme;1H6N9Wh7GPTf9y5BL_RiZWQ5PrpQTvVBO;27 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i53" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;20" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i54" aria-disabled="false" data-id="19VdsZTngMg0wN8CNoimGbNPenBC8zX4B" data-target="doc" draggable="true" jsdata="KCtMme;19VdsZTngMg0wN8CNoimGbNPenBC8zX4B;28" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 2.1&nbsp;MB" aria-label="Größe: 2.1&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">2.1&nbsp;MB</span></p></div><p><span id="i54">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i53" jsdata=" M2rjcd;_;6 KCtMme;19VdsZTngMg0wN8CNoimGbNPenBC8zX4B;28 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i55" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;21" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i56" aria-disabled="false" data-id="1w2negOEz6NIUPppgQ3bwoLA1NqIWoJsL" data-target="doc" draggable="true" jsdata="KCtMme;1w2negOEz6NIUPppgQ3bwoLA1NqIWoJsL;29" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 5.1.2 LsRsLhRh - front height.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 5.1.2 LsRsLhRh - front height.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 16.03.2023" aria-label="Zuletzt geändert von : 16.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">16.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 5.2&nbsp;MB" aria-label="Größe: 5.2&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">5.2&nbsp;MB</span></p></div><p><span id="i56">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i55" jsdata=" M2rjcd;_;6 KCtMme;1w2negOEz6NIUPppgQ3bwoLA1NqIWoJsL;29 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i57" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;22" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i58" aria-disabled="false" data-id="1poesnj7UIyvBAS3rwkIyCucFoK4CNzQo" data-target="doc" draggable="true" jsdata="KCtMme;1poesnj7UIyvBAS3rwkIyCucFoK4CNzQo;30" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 5.1.2 LsRsLhsRhs - side height.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 5.1.2 LsRsLhsRhs - side height.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 16.03.2023" aria-label="Zuletzt geändert von : 16.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">16.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 4.8&nbsp;MB" aria-label="Größe: 4.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">4.8&nbsp;MB</span></p></div><p><span id="i58">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i57" jsdata=" M2rjcd;_;6 KCtMme;1poesnj7UIyvBAS3rwkIyCucFoK4CNzQo;30 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i59" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;23" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i60" aria-disabled="false" data-id="1y1ly0_zNA5CYRanh3FCyep_EdzcXte_r" data-target="doc" draggable="true" jsdata="KCtMme;1y1ly0_zNA5CYRanh3FCyep_EdzcXte_r;31" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 26.02.2023" aria-label="Zuletzt geändert von : 26.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">26.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 169.5&nbsp;MB" aria-label="Größe: 169.5&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">169.5&nbsp;MB</span></p></div><p><span id="i60">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i59" jsdata=" M2rjcd;_;6 KCtMme;1y1ly0_zNA5CYRanh3FCyep_EdzcXte_r;31 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i61" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;24" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i62" aria-disabled="false" data-id="1EbOdxcooYuf8kENBuMhywHDnkSabI8N6" data-target="doc" draggable="true" jsdata="KCtMme;1EbOdxcooYuf8kENBuMhywHDnkSabI8N6;32" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 6.1.1 LsRsCsCh - center height.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 6.1.1 LsRsCsCh - center height.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 4.9&nbsp;MB" aria-label="Größe: 4.9&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">4.9&nbsp;MB</span></p></div><p><span id="i62">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i61" jsdata=" M2rjcd;_;6 KCtMme;1EbOdxcooYuf8kENBuMhywHDnkSabI8N6;32 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i63" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;25" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i64" aria-disabled="false" data-id="16_2nywBEGi3bU0S5S9ucbB-mhHvNZTX_" data-target="doc" draggable="true" jsdata="KCtMme;16_2nywBEGi3bU0S5S9ucbB-mhHvNZTX_;33" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 6.1.1 LsRsCsOh - overhead.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 6.1.1 LsRsCsOh - overhead.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 4.8&nbsp;MB" aria-label="Größe: 4.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">4.8&nbsp;MB</span></p></div><p><span id="i64">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i63" jsdata=" M2rjcd;_;6 KCtMme;16_2nywBEGi3bU0S5S9ucbB-mhHvNZTX_;33 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i65" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;26" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i66" aria-disabled="false" data-id="1JwTGtVQ1bj6CnH1OMxhLCq5N9wtGnmho" data-target="doc" draggable="true" jsdata="KCtMme;1JwTGtVQ1bj6CnH1OMxhLCq5N9wtGnmho;34" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 7.1 LsRsLsrRsr - standard and rear surrounds.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 7.1 LsRsLsrRsr - standard and rear surrounds.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 4.9&nbsp;MB" aria-label="Größe: 4.9&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">4.9&nbsp;MB</span></p></div><p><span id="i66">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i65" jsdata=" M2rjcd;_;6 KCtMme;1JwTGtVQ1bj6CnH1OMxhLCq5N9wtGnmho;34 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i67" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;27" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i68" aria-disabled="false" data-id="1BHG_18VyY_2dcxMoAZTDKSd61OFgvm_D" data-target="doc" draggable="true" jsdata="KCtMme;1BHG_18VyY_2dcxMoAZTDKSd61OFgvm_D;35" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 7.1 LssRssLsrRsr - side and rear surrounds.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 7.1 LssRssLsrRsr - side and rear surrounds.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 5.5&nbsp;MB" aria-label="Größe: 5.5&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">5.5&nbsp;MB</span></p></div><p><span id="i68">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i67" jsdata=" M2rjcd;_;6 KCtMme;1BHG_18VyY_2dcxMoAZTDKSd61OFgvm_D;35 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i69" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;28" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i70" aria-disabled="false" data-id="1VEc1p5kN1G-m7MjExmKz61RZcPIw_ShA" data-target="doc" draggable="true" jsdata="KCtMme;1VEc1p5kN1G-m7MjExmKz61RZcPIw_ShA;36" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-HD MA 7.1 LwRw - left and right wide.dtshd Freigegebene Binary File-Datei" data-column-field="6"><p>DTS-HD MA 7.1 LwRw - left and right wide.dtshd</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 15.03.2020" aria-label="Zuletzt geändert von : 15.03.2020" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">15.03.2020<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 4.7&nbsp;MB" aria-label="Größe: 4.7&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">4.7&nbsp;MB</span></p></div><p><span id="i70">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i69" jsdata=" M2rjcd;_;6 KCtMme;1VEc1p5kN1G-m7MjExmKz61RZcPIw_ShA;36 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i71" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;29" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i72" aria-disabled="false" data-id="1o3kjGyaoXuk3Zy-lh364FIyLcvugKUTW" data-target="doc" draggable="true" jsdata="KCtMme;1o3kjGyaoXuk3Zy-lh364FIyLcvugKUTW;37" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 08.08.2022" aria-label="Zuletzt geändert von : 08.08.2022" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">08.08.2022<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 231.8&nbsp;MB" aria-label="Größe: 231.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">231.8&nbsp;MB</span></p></div><p><span id="i72">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i71" jsdata=" M2rjcd;_;6 KCtMme;1o3kjGyaoXuk3Zy-lh364FIyLcvugKUTW;37 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i73" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;30" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i74" aria-disabled="false" data-id="1lD_e0TG2akcWkJMVBRg4PocW3ntWPr31" data-target="doc" draggable="true" jsdata="KCtMme;1lD_e0TG2akcWkJMVBRg4PocW3ntWPr31;38" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 46.5&nbsp;MB" aria-label="Größe: 46.5&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">46.5&nbsp;MB</span></p></div><p><span id="i74">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i73" jsdata=" M2rjcd;_;6 KCtMme;1lD_e0TG2akcWkJMVBRg4PocW3ntWPr31;38 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i75" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;31" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i76" aria-disabled="false" data-id="1pApSavDU7jcr94iawE5-aGH6BjbKiQZX" data-target="doc" draggable="true" jsdata="KCtMme;1pApSavDU7jcr94iawE5-aGH6BjbKiQZX;39" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="DTS-X object emulator.mkv Freigegebene Video-Datei" data-column-field="6"><p>DTS-X object emulator.mkv</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 16.03.2023" aria-label="Zuletzt geändert von : 16.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">16.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 615&nbsp;MB" aria-label="Größe: 615&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">615&nbsp;MB</span></p></div><p><span id="i76">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i75" jsdata=" M2rjcd;_;6 KCtMme;1pApSavDU7jcr94iawE5-aGH6BjbKiQZX;39 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i77" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;32" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i78" aria-disabled="false" data-id="1TGpybRA5XN5cRsYvdCpHxd-Bb5oT8t_M" data-target="doc" draggable="true" jsdata="KCtMme;1TGpybRA5XN5cRsYvdCpHxd-Bb5oT8t_M;40" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 95&nbsp;KB" aria-label="Größe: 95&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">95&nbsp;KB</span></p></div><p><span id="i78">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i77" jsdata=" M2rjcd;_;6 KCtMme;1TGpybRA5XN5cRsYvdCpHxd-Bb5oT8t_M;40 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i79" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;33" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i80" aria-disabled="false" data-id="1viMMmiYddRz4bjP2iJ0RTri2ESx0zpqj" data-target="doc" draggable="true" jsdata="KCtMme;1viMMmiYddRz4bjP2iJ0RTri2ESx0zpqj;41" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 144&nbsp;KB" aria-label="Größe: 144&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">144&nbsp;KB</span></p></div><p><span id="i80">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i79" jsdata=" M2rjcd;_;6 KCtMme;1viMMmiYddRz4bjP2iJ0RTri2ESx0zpqj;41 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i81" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;34" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i82" aria-disabled="false" data-id="1M3Wm72ZY6mRzWaVkdFQXGAtYPlIwf_Be" data-target="doc" draggable="true" jsdata="KCtMme;1M3Wm72ZY6mRzWaVkdFQXGAtYPlIwf_Be;42" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 187&nbsp;KB" aria-label="Größe: 187&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">187&nbsp;KB</span></p></div><p><span id="i82">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i81" jsdata=" M2rjcd;_;6 KCtMme;1M3Wm72ZY6mRzWaVkdFQXGAtYPlIwf_Be;42 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i83" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;35" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i84" aria-disabled="false" data-id="1S2M9q_krQOx_H58rONoH-_UyMFzQ-c1k" data-target="doc" draggable="true" jsdata="KCtMme;1S2M9q_krQOx_H58rONoH-_UyMFzQ-c1k;43" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 237&nbsp;KB" aria-label="Größe: 237&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">237&nbsp;KB</span></p></div><p><span id="i84">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i83" jsdata=" M2rjcd;_;6 KCtMme;1S2M9q_krQOx_H58rONoH-_UyMFzQ-c1k;43 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i85" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;36" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i86" aria-disabled="false" data-id="1DZCKsFocqSG5YkWNFH_lBdQ9QKf3Du_O" data-target="doc" draggable="true" jsdata="KCtMme;1DZCKsFocqSG5YkWNFH_lBdQ9QKf3Du_O;44" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 311&nbsp;KB" aria-label="Größe: 311&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">311&nbsp;KB</span></p></div><p><span id="i86">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i85" jsdata=" M2rjcd;_;6 KCtMme;1DZCKsFocqSG5YkWNFH_lBdQ9QKf3Du_O;44 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i87" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;37" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i88" aria-disabled="false" data-id="1mVdp64EUjPOwVx-ddhxZo6mQU3v6J1PG" data-target="doc" draggable="true" jsdata="KCtMme;1mVdp64EUjPOwVx-ddhxZo6mQU3v6J1PG;45" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 376&nbsp;KB" aria-label="Größe: 376&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">376&nbsp;KB</span></p></div><p><span id="i88">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i87" jsdata=" M2rjcd;_;6 KCtMme;1mVdp64EUjPOwVx-ddhxZo6mQU3v6J1PG;45 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i89" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;38" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i90" aria-disabled="false" data-id="12qDMBlBtrZr13J89Dh9Pqb5XYd65KU-j" data-target="doc" draggable="true" jsdata="KCtMme;12qDMBlBtrZr13J89Dh9Pqb5XYd65KU-j;46" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 418&nbsp;KB" aria-label="Größe: 418&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">418&nbsp;KB</span></p></div><p><span id="i90">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i89" jsdata=" M2rjcd;_;6 KCtMme;12qDMBlBtrZr13J89Dh9Pqb5XYd65KU-j;46 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i91" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;39" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i92" aria-disabled="false" data-id="1SkYCIMigpT9_eCeMmqISmIUUhXbfS53y" data-target="doc" draggable="true" jsdata="KCtMme;1SkYCIMigpT9_eCeMmqISmIUUhXbfS53y;47" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 28.02.2023" aria-label="Zuletzt geändert von : 28.02.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">28.02.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 494.8&nbsp;MB" aria-label="Größe: 494.8&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">494.8&nbsp;MB</span></p></div><p><span id="i92">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i91" jsdata=" M2rjcd;_;6 KCtMme;1SkYCIMigpT9_eCeMmqISmIUUhXbfS53y;47 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i93" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;40" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i94" aria-disabled="false" data-id="1vdFvs7Fobyqw0EyNYxXDq__cez2fA6k7" data-target="doc" draggable="true" jsdata="KCtMme;1vdFvs7Fobyqw0EyNYxXDq__cez2fA6k7;48" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 14.03.2023" aria-label="Zuletzt geändert von : 14.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">14.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 23.2&nbsp;MB" aria-label="Größe: 23.2&nbsp;MB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">23.2&nbsp;MB</span></p></div><p><span id="i94">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i93" jsdata=" M2rjcd;_;6 KCtMme;1vdFvs7Fobyqw0EyNYxXDq__cez2fA6k7;48 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz><c-wiz jsrenderer="zQdOjc" jsdata="deferred-i95" data-p="%.@.[1,[4,6,8,12,3,13,14],[6,4,14,12,8,3,13],3,[4,1,true,true],[[4,1,true,true],[1,2,true,true]],5,[5],2,[2,1],[null,true],[],[false,null,true,true,true,true,null,true,true,null,true,null,null,true],[]],[[4,1,true,true],5]]" data-node-index="1;41" autoupdate="" jsmodel="hc6Ubd" c-wiz=""><div jsaction="I6mUue:Ppnscc;Cej8pc:Krrt9b;Zhs91b:UNwd5e;dAEAFb:p4DfEc;MUmfBf:VWAsNe;u4juXc:E8sp8c;EV6U7c:K4efcd;rcuQ6b:uaW3He;ySYbX:AcIj2d;sUqxub:i3YNxd;" jsname="LvFR7c" tabindex="-1" role="row" aria-selected="false" aria-describedby="i96" aria-disabled="false" data-id="1RI0Uv-6l5lp1Vpx8vURESBnvQw-yDK6E" data-target="doc" draggable="true" jsdata="KCtMme;1RI0Uv-6l5lp1Vpx8vURESBnvQw-yDK6E;49" jsmodel="aDmR9e" jscontroller="LPQUTd"><div role="gridcell" jsaction="mousedown:UX7yZ;" data-list-item-target=""><div jsaction="hzT8Uc:z3EvVc;VBYlob:DaY83b;RIljlb:GdobJc;" aria-label="Screenshot 2023-03-24 025102.png Freigegebene Image-Datei" data-column-field="6"><p>Screenshot 2023-03-24 025102.png</p></div><p><span><span></span><span>Eigentümer ausgeblendet</span></span></p><p><span data-tooltip="Zuletzt geändert von : 23.03.2023" aria-label="Zuletzt geändert von : 23.03.2023" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">23.03.2023<span dir="ltr"></span></span></p><p><span data-tooltip="Größe: 588&nbsp;KB" aria-label="Größe: 588&nbsp;KB" data-tooltip-align="b,c" data-tooltip-delay="500" data-tooltip-unhoverable="true">588&nbsp;KB</span></p></div><p><span id="i96">Weitere Informationen (Alt&nbsp;+&nbsp;→)</span></p></div><c-data id="i95" jsdata=" M2rjcd;_;6 KCtMme;1RI0Uv-6l5lp1Vpx8vURESBnvQw-yDK6E;49 TofhHc;_;4 GcheOd;1,1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b,driveweb|59+DXNbTd|59+b5wqU[1,&quot;1JxmeedtAtgmoafXv9rroiDOS2vEX7N4b&quot;];3"></c-data></c-wiz></div></div>]]></description>
        </item>
    </channel>
</rss>