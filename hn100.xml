<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 29 Mar 2025 19:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Why Apple's Severance gets edited over remote desktop software (120 pts)]]></title>
            <link>https://tedium.co/2025/03/29/severance-apple-remote-editing-weirdness/</link>
            <guid>43517301</guid>
            <pubDate>Sat, 29 Mar 2025 18:00:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tedium.co/2025/03/29/severance-apple-remote-editing-weirdness/">https://tedium.co/2025/03/29/severance-apple-remote-editing-weirdness/</a>, See on <a href="https://news.ycombinator.com/item?id=43517301">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>When it comes to Apple’s TV ambitions, it couldn't buy better marketing than the buzz around <em>Severance</em>. (Certainly beats talking about <a href="https://tedium.co/2025/03/08/apple-amazon-businesses-unfocused/">Apple Intelligence</a>.)</p><p>It is both Apple’s most ambitious and (apologies to <em>Ted Lasso</em>) successful production, expanding the Apple brand by highlighting just how smart it is. At a time when HBO seems to want to be HBO less and less, Apple TV+ has certainly taken up the mantle and then some.</p><p>But it of course raises the question: Do they <em>make</em> Apple‘s shows on Macs? As the second season of <em>Severance</em> ended in dramatic fashion, Apple decided to answer that question, and the answer was … surprisingly confusing.</p>


<p><a href="https://www.youtube.com/watch?v=TXNQ01Sy6Xw">In the video Apple released</a>, which highlights the Mac-driven editing process that Ben Stiller's team is using, something stood out to me: Wait, the video is super-jittery—this makes the Mac Mini look rough. What's going on?</p><p>Then, after about 10 minutes of watching, I saw it: The show’s lead editor, Geoffrey Richman, was working on a remote Mac through <a href="https://www.jumpdesktop.com/">Jump Desktop</a>, a screen sharing tool known for its high-speed “fluid remote desktop” feature. I’ve used this tool. Though I’m not really rocking a Mac these days, I’m a fan.</p><p>Here’s the exact moment it hit me, carefully cropped to avoid spoilers:</p><p><img src="https://proxy.tedium.co/nV46Sg1IWq6107qNjwnrTNwMw4s=/740x555/filters:quality(80)/uploads/Severance-Jump-Desktop.jpg" width="740" height="555" loading="lazy" alt="Severance Jump Desktop"></p><p>In other words, little of the horsepower being used in this editing process is actually coming from the Mac Mini on this guy’s desk. Instead, it’s being driven by another Mac on the other side of a speedy internet connection. Given that the Jump Desktop app window was hidden away in an earlier part of the clip, I’m not entirely sure we were supposed to see that, but there it is. Oops.</p><p>(To be fair, the promotional materials <a href="https://www.apple.com/newsroom/2025/03/how-the-mind-splitting-world-of-severance-comes-together-on-mac/">do not hide that this is a remote process</a>, but they do not mention the use of Jump Desktop, which seems like a missed opportunity to promote a small-scale Mac developer. C’mon Apple, do better.)</p><p>So here's a challenge about video production that is unique to the film and television mediums: There is a genuine risk of stuff getting pirated before it's ready. Beyond tethering everyone to NDAs, some of this can be avoided by having the editors work in a centralized place, avoiding networked access to the video files. After all, if an editor goes rogue, you can just take away their key card. There are even standards, <a href="https://www.cdsaonline.org/2019/02/07/cdsa-releases-first-film-and-television-production-security-guidelines">produced by the Content Delivery and Security Association</a>, on how film studios can protect their works mid-edit.</p><p>One problem: COVID-19 made the prior strategy of localizing the editors in the same place untenable.</p></div><div><p>This means that a new normal in the video production realm is the rise of “remote editing,” in which editors use remote access software to do the editing on a virtual machine or office workstation. High speed connections are necessary to make this work on both ends—meaning Starbucks is off the table—but it's more than possible. Jump Desktop is a good option for this, but <a href="https://parsec.app/">Parsec</a> is arguably an even better one.</p><p>This also has other benefits. For one thing, high-end video production is quite storage-intensive, which is why your favorite YouTuber constantly talks about their editing rigs and network-attached storage. By putting this stuff offsite, they can put all this data on a real server.</p><p>To me, though, it highlights a huge issue with Apple’s current professional offerings. They are built to work on a single machine. At least for high-end use cases, the remote workflow threatens to cut them out of the equation entirely, as cloud devices with access to nearly unlimited resources gradually outpace individual machines. In fact, there is a version of the editor he was using, Avid Media Composer, <a href="https://www.avid.com/products/avid-edit-on-demand">that is cloud-based</a> and built specifically for this very use case.</p><p>The astounding part of this editing process, which Apple wanted to highlight so much that they shot an entire film about it, is that the Macs are honestly the least important part of the workflow. If Jump Desktop made a Chromebook version of its app, the Mac on Richman’s desk wouldn't even be necessary. Not that he would want to, but he could do this on a Chromebook.</p><p>Put another way, if Stiller's team was building this for Amazon or Netflix, would that be a Mac Mini on Richman’s desk, or an HP or Lenovo box? Why even use a Mac in this editing process at all, when other companies offer access to better GPUs anyway?</p><p>See, one issue with the way Apple sells its machines at the enterprise level is that they basically have no traditional server offerings, despite that being the norm elsewhere. If you want to run a Mac in the cloud, it has to be a full machine in most cases. Worse, it can’t be split up into a bunch of virtual machines, thanks to requirements in its EULA that seem designed to protect its hardware business above all else.</p><p>At the enterprise or cloud level, where VMs are quite common, this is hugely inefficient. Often large companies will buy the most powerful servers they can and parse them out into smaller pieces. <a href="https://www.apple.com/legal/sla/docs/macOSSequoia.pdf">Apple’s end-user license agreement for MacOS Sequoia</a> specifically limits the upside of such an approach:</p><blockquote><p>Virtualization. For each copy of the Apple Software subject to a lease under this Section 3, either a Lessor or a Lessee (but not both) may install, use and run additional copies or instances of the Apple Software within virtual operating system environments in accordance with Section 2B (iii), provided that a Lessor may only virtualize a single instance or copy of the Apple Software as a provisioning tool for the purpose of providing a Lessee with access to and use of the Apple Software pursuant to this Section 3.</p></blockquote><p>Apple used to serve this market <a href="https://www.macstories.net/mac/a-history-of-the-xserve-apples-one-rack-wonder/">with a device called Xserve</a>, but it essentially gave it up about 15 years ago. Almost unwittingly, this video highlights the folly of that decision, which became more obvious thanks to COVID-19 and the rise of remote work.</p><figure><img src="https://proxy.tedium.co/8QuF9QyuoKI8huma-Aze6jLghvk=/1000x536/filters:quality(80)/uploads/Severance-Mac-Mini.jpg" width="1000" height="536" loading="lazy" alt="Severance Mac Mini"><figcaption>It’s not quite accurate to say that the Mac Mini is just for show, but it’s less necessary for making this setup work than it appears at first glance.</figcaption></figure><p>These editors aren't working on Macs, per se. They're working <em>around</em> them. Sure, there's an Apple logo in the top-left corner (two, actually), but it feels superfluous, knowing that the software isn’t directly on the machine and it just as easily be running on a Windows or Linux box a thousand miles away. There are way more efficient ways to do this, and Apple doesn't offer them. Instead it relies on cloud providers like <a href="https://www.macstadium.com/">MacStadium</a>, or localized IT teams, to work around their convoluted rules around VMs. Meanwhile, Microsoft’s emphasis on VMs, as highlighted by its <a href="https://www.microsoft.com/en-us/windows-365/windows-365-enterprise#Solutions">Windows 365 offering</a>, tee them up for a future of scaleable remote editing.</p><p>Hence why this editor is using a remote access tool by a tiny company to help produce Apple’s most important TV show. If I were Apple, I would ask my software team why they've saddled their most significant and influential high-end users with such a weird-ass setup.</p><p>Then I would figure out how to fix it.</p></div><div><h5>Unsevered Links</h5><p><strong>Speaking of Apple,</strong> I agree with <a href="https://reviews.ofb.biz/safari/article/1300.html">this guy</a>.</p><p><strong>It’s hard to find a modern vehicle without a giant infotainment screen</strong> inside of it, but it turns out that the screens are <a href="https://gizmodo.com/are-vehicle-infotainment-screens-headed-for-the-scrap-heap-2000580600">surprisingly unpopular with drivers</a>, per <em>Gizmodo</em>.</p><p><strong>Jesse Welles made his <a href="https://www.youtube.com/watch?v=aaNdMAGEsqk">national television debut</a> the other night,</strong> playing for Jimmy Kimmel’s audience. Also, he released an album of all of his YouTube performances, and the reason he did so, <a href="https://savingcountrymusic.com/why-jesse-welles-just-released-a-63-song-album/">according to <em>Saving Country Music</em></a>, is super-interesting and surprisingly technical.</p><p>--</p><p><strong>Find this one an interesting read?</strong> <a href="https://tedium.co/2025/03/29/severance-apple-remote-editing-weirdness/">Share it with a pal</a>! And back at it in a couple of days with a fresh one.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Koto Programming Language (119 pts)]]></title>
            <link>https://koto.dev/</link>
            <guid>43514915</guid>
            <pubDate>Sat, 29 Mar 2025 12:14:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://koto.dev/">https://koto.dev/</a>, See on <a href="https://news.ycombinator.com/item?id=43514915">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p><img src="https://koto.dev/koto.svg"></p><p>
      A lightweight scripting language for Rust applications.
    </p>

    <div>
      
<div>
  <p><a href="https://koto.dev/about">
    About
  </a>
</p></div>

      
<div>
  <p><a href="https://koto.dev/docs/0.15">
    Docs
  </a>
</p></div>

      
<div>
  <p><a href="https://koto.dev/docs/0.15/cli">
    Install
  </a>
</p></div>

      
<div>
  <p><a href="https://koto.dev/play-0.15">
    Playground
  </a>
</p></div>

    </div>

    
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Real Time Chess – A physical chess board without the concept of turns (118 pts)]]></title>
            <link>https://github.com/misprit7/real-time-chess</link>
            <guid>43514695</guid>
            <pubDate>Sat, 29 Mar 2025 11:41:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/misprit7/real-time-chess">https://github.com/misprit7/real-time-chess</a>, See on <a href="https://news.ycombinator.com/item?id=43514695">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">
  
  <br>
  Real Time Chess
</h2><a id="user-content-------real-time-chess" aria-label="Permalink: 
  Real Time Chess
" href="#------real-time-chess"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">
  A physical chess board without the concept of turns
</h2><a id="user-content---a-physical-chess-board-without-the-concept-of-turns" aria-label="Permalink: 
  A physical chess board without the concept of turns
" href="#--a-physical-chess-board-without-the-concept-of-turns"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">
  Video explanation: <a href="https://youtu.be/y7VtSK23_Jg" rel="nofollow">https://youtu.be/y7VtSK23_Jg</a>
</h2><a id="user-content---video-explanation-httpsyoutubey7vtsk23_jg" aria-label="Permalink: 
  Video explanation: https://youtu.be/y7VtSK23_Jg" href="#--video-explanation-httpsyoutubey7vtsk23_jg"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Pitch</h2><a id="user-content-pitch" aria-label="Permalink: Pitch" href="#pitch"></a></p>
<p dir="auto">Chess is boring. I'm boring too so I enjoy it anyways, but I can't help but think "I could design it better." Normally in chess players move sequentially in turns, but this introduces a huge latency bug that the developers of chess forgot to patch: you spend literally half the time waiting for your opponent!</p>
<p dir="auto">The obvious solution is just get rid of the concept of turns in chess altogether and let players move whenever they want. Real time strategy games like StarCraft and Age of Empires are much more fun and spectator friendly than chess, so this should be a pretty uncontroversial minor rules update that can be implemented before the next world championship. To prevent things from getting too chaotic over the board each piece has an individual cooldown, so once it's been moved it can't move for a fixed period afterwards.</p>
<p dir="auto">However there's an unfortunate roadblock to the widespread adoption of real time chess: as the <a href="https://www.cnn.com/2023/09/26/sport/hans-niemann-denies-sex-toys-cheating-chess-spt-intl/index.html" rel="nofollow">Niemann controversy</a> has made all too clear, chess is <a href="https://www.youtube.com/watch?v=QNuu8KTUEwU" rel="nofollow">not immune</a> from accusations of cheating through spectator <strong>ass</strong>istance or outside <strong>anal</strong>isys tools. Trying to have players self enforce these piece cooldowns is impossible. However where the intrinsic goodness of the human psyche fails, engineering is always ready to step in. This project is a physical chess board that keeps track and displays the cooldown remaining for each piece, and even physically holds them in place so no accidental cheating can occur.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Design Files</h2><a id="user-content-design-files" aria-label="Permalink: Design Files" href="#design-files"></a></p>
<p dir="auto">The firmware and pcb kicad files are in this repo. For the physical design, see <a href="https://cad.onshape.com/documents/ad9a4c8f8eed1cb460895551/w/e793072796f18b5ae284597f/e/b7ae406cfa566c5c0e6fed4b" rel="nofollow">the design on OnShape</a>. Other than those parts that were cnced, here were the off the shelf components used:</p>
<ul dir="auto">
<li><a href="https://www.mcmaster.com/catalog/130/3683/95225A340" rel="nofollow">Insulating washers</a>: One under each electromagnet, to keep them isolated from the casing</li>
<li><a href="https://www.mcmaster.com/catalog/130/3446/92492A728" rel="nofollow">Plastic screws</a>: To attach electromagnets to base, plastic to prevent electrical connection</li>
<li><a href="https://www.mcmaster.com/catalog/130/3435/92095A182" rel="nofollow">These</a> and <a href="https://www.mcmaster.com/catalog/130/3435/92095A177" rel="nofollow">these</a> screws: to attach the internal supports and squares respectively</li>
<li><a href="https://www.mcmaster.com/catalog/94669A095" rel="nofollow">Spacers</a>: For an offset between the decorative and functional pcbs</li>
<li><a href="https://www.adafruit.com/product/3873" rel="nofollow">Electromagnets</a>: Most expensive part other than the machining, ~$600 per board. Could probably get them cheaper from China or something but for low quantities this was easiest</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Known Issues</h2><a id="user-content-known-issues" aria-label="Permalink: Known Issues" href="#known-issues"></a></p>
<ul dir="auto">
<li>Power distribution: Traces on the pcbs are way undersized given there are many amps running through them, so there are large voltage drops when many pieces are on cooldown simultaneously. To solve this these traces should be much wider</li>
<li>Tolerances: The pcbs have extremely tight tolerances which makes assmbling the board extremely annoying. The edges and holes should probably have more room</li>
<li>Pin heights: The height of the pins for the banana connectors are taller than the mechanical design allows for, these are fairly easy to shorten using a dremel but probably something that should be fixed</li>
<li>Corner screws: Given the order of assembly, it's impossible to insert/fasten the 4 corner screws</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Physical Pomodoro Timer with ESP32 and e-paper screen (243 pts)]]></title>
            <link>https://github.com/Rukenshia/pomodoro</link>
            <guid>43514383</guid>
            <pubDate>Sat, 29 Mar 2025 10:42:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Rukenshia/pomodoro">https://github.com/Rukenshia/pomodoro</a>, See on <a href="https://news.ycombinator.com/item?id=43514383">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">pomodoro</h2><a id="user-content-pomodoro" aria-label="Permalink: pomodoro" href="#pomodoro"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Rukenshia/pomodoro/blob/main/docs/front.jpg"><img src="https://github.com/Rukenshia/pomodoro/raw/main/docs/front.jpg" alt="the finished product from the front"></a></p>
<p dir="auto">This is the repository for an ESP32 based pomodoro timer. It uses an ePaper display and a rotary dial for input.
The code in this repository will not be ready-to-use, as some assets and fonts have been removed. However, if you really want to you should be able to adapt the code to your needs.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Parts List</h2><a id="user-content-parts-list" aria-label="Permalink: Parts List" href="#parts-list"></a></p>
<ul dir="auto">
<li>ESP32 (I used an <a href="https://www.az-delivery.de/en/products/esp32-developmentboard" rel="nofollow">AZDelivery ESP32 NodeMCU</a>)</li>
<li>WaveShare 4.26inch e-Paper display HAT, 800x480 (<a href="https://www.waveshare.com/4.26inch-e-paper-hat.htm" rel="nofollow">link</a>)</li>
<li>KY-040 rotary encoder with button</li>
<li>A single WS2812 LED (could be replaced with a simple RGB LED)A</li>
<li>A USB-C connector (like <a href="https://amzn.eu/d/8UpvqWe" rel="nofollow">this one</a>)</li>
<li>3d printed case (<a href="https://cad.onshape.com/documents/06055e629740267835bb7660/w/df56eb93ab74e2f4d61e5097/e/21a7853695e4900200750891?renderMode=0&amp;uiState=67e6e3924368850ba92069f6" rel="nofollow"><code>onshape</code> file</a>)</li>
<li>Some resistors and 0.1uF capacitors</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Project Origin</h2><a id="user-content-project-origin" aria-label="Permalink: Project Origin" href="#project-origin"></a></p>
<p dir="auto">I love trying out different productivity techniques - some say that the quest to optimize your productivity is the ultimate procrastination method, so maybe that is what drove me to this project. I also have a habit of committing time (around a month of work outside my normal job) once a year to a project that benefits someone else. Last year, I bought a 3D printer (BambuLab X1C) and wanted to put it to good use. I have previously finished an apprenticeship as an electronics
engineer before pivoting to software engineering, so I also wanted to come back to my roots and build something physical.
My friend struggles with time management throughout the day sometimes - lots of different tasks to organize, and little focus. So I thought to myself: Why not make them a pomodoro timer? So, I set out with a few goals:</p>
<ul dir="auto">
<li>It should be a physical device</li>
<li>It should be <em>fun</em></li>
<li>It should be intuitive to use</li>
</ul>
<p dir="auto">There are some cool projects out there (arguably much cooler than this, for example the <a href="https://www.youtube.com/watch?v=nZa-Vqu-_fU" rel="nofollow">Focus Dial by Salim Benbouziyane</a>), but I wanted to build something from scratch. I also
never built something with an ePaper display and thought it might be a good fit for something that is mostly idling and doesn't require a backlight.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Why these parts?</h3><a id="user-content-why-these-parts" aria-label="Permalink: Why these parts?" href="#why-these-parts"></a></p>
<p dir="auto">This was my second dive back into building things with microcontrollers in a long time. I knew ESP32 well enough to feel comfortable diving back in, so that was the main choice here. I did some research before to see what kinds of displays would be supported.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">ePaper Display</h4><a id="user-content-epaper-display" aria-label="Permalink: ePaper Display" href="#epaper-display"></a></p>
<p dir="auto">I needed some sort of display, or at least I <em>wanted</em> some sort of display. One of the main motivations for this project was that it should be out of your way - until it is time to finish your current focus and move on. For me, this meant that I wanted a display without any backlight.</p>
<p dir="auto">The display should also be large enough that you can put the whole device somewhere on your desk and still be able to read it. After ordering and playing around with a few WaveShare ePaper displays, I settled on the 4.26" variant for multiple reasons:</p>
<ul dir="auto">
<li>Great resolution (which seems to be really hard to find for "hobbyist" displays)</li>
<li>The size felt right</li>
<li>The display supports partial refreshes (0.3s, no distracting "black and white flashes" while refreshing)</li>
</ul>
<p dir="auto">Initially, I really wanted to use a black/white/red display and found one that I liked, but the refresh time
was a whopping 16 seconds with no support for partial refreshes which was a dealbreaker for me.</p>
<p dir="auto">The final bonus feature: it won't work at night. If your desk is not bright enough, you won't be able to read the display. This is a feature, not a bug. Too dark outside? Stop working already!</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Rotary Encoder</h4><a id="user-content-rotary-encoder" aria-label="Permalink: Rotary Encoder" href="#rotary-encoder"></a></p>
<p dir="auto">From the start, I knew that I wanted some sort of dial as an input - it made the most sense to me. This came at the cost of some complexity when designing the menus, and you really need to make sure that you debounce the input correctly. I also added .1uF capacitors to the CLK and DT pins to help with smoothing out the signal.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">LED</h4><a id="user-content-led" aria-label="Permalink: LED" href="#led"></a></p>
<p dir="auto">In the first few iterations, there was no plan for an LED. My genius plan of having a display without backlight came at a cost: it could be <em>too</em> subtle when your current focus time ended. I experimented with a few different ideas:</p>
<ul dir="auto">
<li>A buzzer: this would just make you jump. A truly horrible experience</li>
<li>Speakers: I don't know why, but speakers felt <em>hard</em>. So much noise and whining with the setup I tried, but I will blame this on a skill issue</li>
<li>LED: I had some WS2812 LEDs lying around and thought they might be a good fit. You can animate them with the NeoPixel library, and they are really easy to use. The additional benefit of not needing to commit many more output pins was also a big plus</li>
</ul>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Rukenshia/pomodoro/blob/main/docs/led_shroud.png"><img src="https://github.com/Rukenshia/pomodoro/raw/main/docs/led_shroud.png" alt="LED shroud screenshot of the CAD model"></a></p>
<p dir="auto">The LED ended up working great, allowing me to display different states. It might be subtle, but I also added a little shroud to the case and added a diffusion layer in front of the LED to make it look nicer.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building the Case</h3><a id="user-content-building-the-case" aria-label="Permalink: Building the Case" href="#building-the-case"></a></p>
<p dir="auto">The case comes in two parts: the base and a lid. One unfortunate design choice I made is that the display frame is printed as one piece as part of the base, so the top edge tends to warp a little bit during printing. Since CAD (or product design) isn't my strongest suit, there will certainly be better choices to design this for a better final look.</p>
<p dir="auto">One thing that I wished I learned earlier is that it might not have been the best idea to put the dial in the front: because the print and electronics are so lightweight, pressing the switch on the dial will tend to just slide the whole device back. Luckily, I could solve this by adding some rubber feet and weights (the ones usually used to balance tires) to the bottom of the case. This worked out great, and I am happy with how it turned out.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Software</h3><a id="user-content-software" aria-label="Permalink: Software" href="#software"></a></p>
<p dir="auto">The software is written in C++ and uses the Arduino framework. I used PlatformIO to manage the project (at least that is what seemed to be a popular choice, but I am not so sure about that anymore). This project relies heavily
on the GxEPD2 library for the display. I won't lie, the code in this repository is a bit of a mess - I had to get things done in time, which led to quite a bit of copy and pasting and not revisiting earlier parts of the code.
Some parts were generated by AI (Claude, for the most part) to help me finish the project in the deadline I set myself.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Rukenshia/pomodoro/blob/main/docs/timer_running.jpg"><img src="https://github.com/Rukenshia/pomodoro/raw/main/docs/timer_running.jpg" alt="a random fact displayed on the screen"></a></p>
<p dir="auto">Since this was a project for my friend, I also wanted to include some easter eggs and fun. You would think that adding some random facts <em>while you are supposed to be focused</em> would be a bad idea, but I think it is a fun little addition.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Using the Device</h2><a id="user-content-using-the-device" aria-label="Permalink: Using the Device" href="#using-the-device"></a></p>
<p dir="auto">When the device starts up, you can either change some settings or go into preset selection mode. From there, you can choose one of three presets:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Rukenshia/pomodoro/blob/main/docs/select_preset.jpg"><img src="https://github.com/Rukenshia/pomodoro/raw/main/docs/select_preset.jpg" alt="preset selection"></a></p>
<p dir="auto">The timer will then start and let you know once the time is up (by flashing the LED and displaying a message on the screen). You can keep working (not recommended, but necessary if you want to finish something) and then start the break.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Rukenshia/pomodoro/blob/main/docs/timer_running.jpg"><img src="https://github.com/Rukenshia/pomodoro/raw/main/docs/timer_running.jpg" alt="timer running"></a></p>
<p dir="auto">During the pause, you can view some statistics. Every few iterations (4 by default), your pause will be longer to give you some time to recover.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/Rukenshia/pomodoro/blob/main/docs/timer_paused.jpg"><img src="https://github.com/Rukenshia/pomodoro/raw/main/docs/timer_paused.jpg" alt="pause statistics"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Pin Mapping</h3><a id="user-content-pin-mapping" aria-label="Permalink: Pin Mapping" href="#pin-mapping"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Rotary Encoder (KY-040)</h4><a id="user-content-rotary-encoder-ky-040" aria-label="Permalink: Rotary Encoder (KY-040)" href="#rotary-encoder-ky-040"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>PIN</th>
<th>#</th>
</tr>
</thead>
<tbody>
<tr>
<td>CLK</td>
<td>32</td>
</tr>
<tr>
<td>DT</td>
<td>21</td>
</tr>
<tr>
<td>SW</td>
<td>14</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h4 tabindex="-1" dir="auto">ePaper Display (GxEPD2_426_GDEQ0426T82, WaveShare 4.26" b/w)</h4><a id="user-content-epaper-display-gxepd2_426_gdeq0426t82-waveshare-426-bw" aria-label="Permalink: ePaper Display (GxEPD2_426_GDEQ0426T82, WaveShare 4.26&quot; b/w)" href="#epaper-display-gxepd2_426_gdeq0426t82-waveshare-426-bw"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>PIN</th>
<th>#</th>
</tr>
</thead>
<tbody>
<tr>
<td>BUSY</td>
<td>4</td>
</tr>
<tr>
<td>RST</td>
<td>16</td>
</tr>
<tr>
<td>DC</td>
<td>17</td>
</tr>
<tr>
<td>CS</td>
<td>5</td>
</tr>
<tr>
<td>CLK</td>
<td>18</td>
</tr>
<tr>
<td>DIN</td>
<td>23</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h4 tabindex="-1" dir="auto">LED (WS2812)</h4><a id="user-content-led-ws2812" aria-label="Permalink: LED (WS2812)" href="#led-ws2812"></a></p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>PIN</th>
<th>#</th>
</tr>
</thead>
<tbody>
<tr>
<td>DIN</td>
<td>25</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Et Tu, Grammarly? (241 pts)]]></title>
            <link>https://dbushell.com/2025/03/29/et-tu-grammarly/</link>
            <guid>43514308</guid>
            <pubDate>Sat, 29 Mar 2025 10:27:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dbushell.com/2025/03/29/et-tu-grammarly/">https://dbushell.com/2025/03/29/et-tu-grammarly/</a>, See on <a href="https://news.ycombinator.com/item?id=43514308">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>
<time datetime="2025-03-29T10:00:00.000Z" title="2025-03-29T10:00:00.000Z">

Saturday

29 <abbr title="March">Mar</abbr>
2025
</time>
</p>

<p>For a few months now I’ve received sporadic reports that my website was broken. They said the layout was askew and things were sized strangely. They had screenshots to prove it. This was embarrassing for a professional website builder.</p><p>Thankfully my audience is tech-savvy and the <a href="https://www.grammarly.com/browser" rel="noopener noreferrer" target="_blank">Grammarly browser extension</a> was identified as a prime suspect. When this extension was installed it broke my website, simple as that. My initial response was: <em>“Sorry, their bug, not mine”</em>. But after one report too many, I was forced to sign-up and install Grammarly myself (praise the burner email).</p><h2 id="discovery">Discovery</h2><p>After accepting the Grammarly Firefox (<a href="https://dbushell.com/2025/03/01/never-have-never-will/">Mullvad browser</a>) extension kitchen sink permissions:</p><ul><li>Access your data for all websites</li><li>Display notifications to you</li><li>Access browser tabs</li></ul><p>I soon found the evidence. Grammarly injects a stylesheet into web pages (<a href="https://gist.github.com/dbushell/d65efab2cc2f009a37d5e6b706cf0c66" rel="noopener noreferrer" target="_blank">here’s a GitHub Gist</a>). This stylesheet is loaded from the local extension assets. It cannot be found by the web page itself using <a href="https://developer.mozilla.org/en-US/docs/Web/API/StyleSheetList" rel="noopener noreferrer" target="_blank">StyleSheetList</a>. It even bypasses <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CSP" rel="noopener noreferrer" target="_blank">Content Security Policy</a>. It is effectively a stealth stylesheet undetectable by the website itself. In Firefox at least, I didn’t care to install Grammarly in other browsers.</p><p>The Grammarly extension also appends a custom <code>&lt;grammarly-desktop-integration&gt;</code> element to the <code>&lt;html&gt;</code> document. This is done on every website regardless of whether you interact with the extension or not (I’ve no idea what it’s used for).</p><h2 id="why-me">Why me?</h2><p>At the end of <a href="https://gist.github.com/dbushell/d65efab2cc2f009a37d5e6b706cf0c66" rel="noopener noreferrer" target="_blank">Grammarly’s stylesheet</a> you’ll find the following CSS:</p><pre data-lang="css" tabindex="0" id="pre-5340eb92"><code><span><span>:</span><span>host</span><span>,</span></span>
<span><span>:</span><span>root</span><span> </span><span>{</span></span>
<span><span> </span><span> </span><span>--rem</span><span>:</span><span>16</span></span>
<span><span>}</span></span></code></pre><p>Aside from the obvious crime of omitting a semicolon, this is seemingly innocuous. You probably know the magic number 16. By default 1rem = 16px in CSS units (kinda, it’s complicated). Further up Grammarly are doing a form of dynamic font sizing:</p><pre data-lang="css" tabindex="0" id="pre-ec1d077b"><code><span><span>.kE2Bj</span><span> </span><span>{</span></span>
<span><span> </span><span> </span><span>font-size</span><span>:</span><span>calc</span><span>(</span><span>0.86</span><span>px*</span><span>(</span><span>var</span><span>(--rem)</span><span> </span><span>-</span><span> </span><span>2</span><span>));</span></span>
<span><span> </span><span> </span><span>line-height</span><span>:</span><span>calc</span><span>(</span><span>1.2868</span><span>px*</span><span>(</span><span>var</span><span>(--rem)</span><span> </span><span>-</span><span> </span><span>2</span><span>));</span></span>
<span><span>}</span></span></code></pre><p>This code is auto-generated so it’s not entirely clear what’s going on. I thought they might be dynamically setting the <code>--rem</code> value using the browser’s base font size — good for accessibility — but from testing that isn’t the case. Maybe the extension has its own setting?</p><p>As an aside note, Grammarly are also loading twenty variations of the <a href="https://fonts.google.com/specimen/Inter" rel="noopener noreferrer" target="_blank">Inter font</a> — <a href="https://knowyourmeme.com/memes/four-naan-jeremy-thats-insane" rel="noopener noreferrer" target="_blank"><em>Four Naan, Jeremy? That’s Insane!</em></a> — Inter is available as a <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_fonts/Variable_fonts_guide" rel="noopener noreferrer" target="_blank">variable font</a>. You don’t need twenty individual <code>@font-face</code> rules, <del>Jeremy</del> Grammarly.</p><p>Anyway, as it happens I was also using the <code>--rem</code> custom property name. I’m doing my own experimental flavour of <a href="https://clagnut.com/blog/2441/" rel="noopener noreferrer" target="_blank">fluid typography</a>:</p><pre data-lang="css" tabindex="0" id="pre-451b88a5"><code><span><span>@layer</span><span> </span><span>base</span><span> </span><span>{</span></span>
<span><span> </span><span> </span><span>:</span><span>root</span><span> </span><span>{</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span>--rem</span><span>:</span><span> </span><span>0.0625</span><span>rem</span><span>;</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span>--fluid</span><span>:</span><span> </span><span>calc</span><span>((</span><span>100</span><span>vi</span><span> </span><span>-</span><span> </span><span>(</span><span>400</span><span> </span><span>*</span><span> </span><span>var</span><span>(--rem)))</span><span> </span><span>/</span><span> </span><span>(1920</span><span> </span><span>-</span><span> </span><span>400));</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span>--font-size-h1</span><span>:</span><span> </span><span>clamp</span><span>(</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span>calc</span><span>(</span><span>31</span><span> </span><span>*</span><span> </span><span>var</span><span>(--rem)),</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span>calc</span><span>((</span><span>31</span><span> </span><span>*</span><span> </span><span>var</span><span>(--rem))</span><span> </span><span>+</span><span> </span><span>(80</span><span> </span><span>-</span><span> </span><span>31</span><span>)</span><span> </span><span>*</span><span> </span><span>var</span><span>(--fluid)),</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span> </span><span> </span><span>calc(80</span><span> </span><span>*</span><span> </span><span>var(--rem))</span></span>
<span><span> </span><span> </span><span> </span><span> </span><span>);</span></span>
<span><span> </span><span> </span><span>}</span></span>
<span><span>}</span></span></code></pre><p>How this works is a topic for another blog post.</p><p>What’s important is that I was using <code>--rem</code> and it’s defined inside a <a href="https://developer.mozilla.org/en-US/docs/Learn_web_development/Core/Styling_basics/Cascade_layers" rel="noopener noreferrer" target="_blank">cascade layer</a>. Styles outside of a layer take precedent over those within a layer, regardless of CSS specificity (a topic for an entire book). Source order also matters, so Grammarly’s <code>--rem</code> probably would have won anyway.</p><p><abbr title="too long; didn't read">TL;DR</abbr>: Grammarly broke my calculations and thus they broke my website.</p><h2 id="the-fix">The Fix 🤡</h2><p>Initially <a href="https://dbushell.com/notes/2025-03-28T17:54Z/">I used a mutation observer</a> to detect the appended web component and add extra <code>!important</code> styles to reclaim my territory. Once I understood the exact problem I changed my custom property to <code>--🤡</code> which is <a href="https://argyle.ink/css-emoji-convention" rel="noopener noreferrer" target="_blank">perfectly valid</a>.</p><p>Basically the name <code>--rem</code> is now “considered harmful” because Grammarly are bad web citizens. They are generating random class names, why specifically hijack <code>--rem</code>? Why apply it globally to <code>:root</code>? They could also, you know, not inject their code into <strong>every web page ever</strong>, unless the extension is actually used?</p><p>I’ve reached out to Grammarly support. They’ve been quick to respond, but I’ve yet to reach a technical person who understands my issue. I’m hoping we can swap names. Grammarly can have <code>--🤡</code> for their sins, the rest of use can use <code>--rem</code>. Any of you nerds work for Grammarly? Let’s make this happen.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Today Google bricked my Chromebook by force-installing a hidden extension (226 pts)]]></title>
            <link>https://cloudisland.nz/@rmi/114219847307106213</link>
            <guid>43514087</guid>
            <pubDate>Sat, 29 Mar 2025 09:35:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cloudisland.nz/@rmi/114219847307106213">https://cloudisland.nz/@rmi/114219847307106213</a>, See on <a href="https://news.ycombinator.com/item?id=43514087">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Postgres Language Server: Initial Release (229 pts)]]></title>
            <link>https://github.com/supabase-community/postgres-language-server</link>
            <guid>43513996</guid>
            <pubDate>Sat, 29 Mar 2025 09:13:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/supabase-community/postgres-language-server">https://github.com/supabase-community/postgres-language-server</a>, See on <a href="https://news.ycombinator.com/item?id=43513996">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/supabase-community/postgres-language-server/blob/main/docs/images/pls-github.png"><img src="https://github.com/supabase-community/postgres-language-server/raw/main/docs/images/pls-github.png" alt="Postgres Language Server"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Postgres Language Server</h2><a id="user-content-postgres-language-server" aria-label="Permalink: Postgres Language Server" href="#postgres-language-server"></a></p>
<p dir="auto">A collection of language tools and a Language Server Protocol (LSP) implementation for Postgres, focusing on developer experience and reliable SQL tooling.</p>
<p dir="auto">Docs: <a href="https://pgtools.dev/" rel="nofollow">pgtools.dev</a></p>
<p dir="auto">Install: <a href="https://pgtools.dev/#installation" rel="nofollow">instructions</a></p>
<ul dir="auto">
<li><a href="https://github.com/supabase-community/postgres-language-server/releases">CLI releases</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=Supabase.postgrestools" rel="nofollow">VSCode</a></li>
<li><a href="https://github.com/neovim/nvim-lspconfig/blob/master/doc/configs.md#postgres_lsp">Neovim</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Overview</h2><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">This project provides a toolchain for Postgres development, built on Postgres' own parser <code>libpg_query</code> to ensure 100% syntax compatibility. It is built on a Server-Client architecture with a transport-agnostic design. This means all features can be accessed not only through the <a href="https://microsoft.github.io/language-server-protocol/" rel="nofollow">Language Server Protocol</a>, but also through other interfaces like a CLI, HTTP APIs, or a WebAssembly module. The goal is to make all the great Postgres tooling out there as accessible as possible, and to build anything that is missing ourselves.</p>
<p dir="auto">The following features are implemented:</p>
<ul dir="auto">
<li>Autocompletion</li>
<li>Syntax Error Highlighting</li>
<li>Type-checking (via <code>EXPLAIN</code> error insights)</li>
<li>Linter, inspired by <a href="https://squawkhq.com/" rel="nofollow">Squawk</a></li>
</ul>
<p dir="auto">Our current focus is on refining and enhancing these core features while building a robust and easily accessible infrastructure. For future plans and opportunities to contribute, please check out the issues and discussions. Any contributions are welcome!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributors</h2><a id="user-content-contributors" aria-label="Permalink: Contributors" href="#contributors"></a></p>
<ul dir="auto">
<li><a href="https://github.com/psteinroe">psteinroe</a></li>
<li><a href="https://github.com/juleswritescode">juleswritescode</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<p dir="auto">A big thanks to the following projects, without which this project wouldn't have been possible:</p>
<ul dir="auto">
<li><a href="https://github.com/pganalyze/libpg_query">libpg_query</a>: For extracting the Postgres' parser</li>
<li><a href="https://github.com/biomejs/biome">Biome</a>: For implementing a toolchain infrastructure we could copy from</li>
<li><a href="https://github.com/sbdchd/squawk">Squawk</a>: For the linter inspiration</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trump's attacks on universities get darker, with shadows reaching our shores (203 pts)]]></title>
            <link>https://christinapagel.substack.com/p/trumps-attacks-on-universities-get</link>
            <guid>43513811</guid>
            <pubDate>Sat, 29 Mar 2025 08:29:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://christinapagel.substack.com/p/trumps-attacks-on-universities-get">https://christinapagel.substack.com/p/trumps-attacks-on-universities-get</a>, See on <a href="https://news.ycombinator.com/item?id=43513811">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><p>A colleague and I would like to write an academic paper on the potential impact of US funding cuts to global health programmes. Our ideal co-author is an international expert newly based in the US, and they would like to do it. But we are all worried that doing so will expose them to the risk of having their academic visa cancelled, being detained and eventually deported - no matter how solid the science and how academic and dry our language. We are especially fearful because they are brown. </p><p>My colleagues who have been writing about the new administration, or the situation in Gaza, in academic journals, on substack or on social media are cancelling work trips to the US. I too would not feel safe to go now, given how openly I have criticised the administration. Even a 1% chance of being denied entry or shipped to a detention centre is too high. </p><p>When I said these words out loud to my husband today I had to stop for a moment to let it sink in. Foreign scientists in the US are scared to publish anything perceived as critical for fear of being bundled off the street to a detention centre. Foreign scientists abroad are scared to go to the US because they have voiced criticism of the state. The US is actively cracking down on perceived dissenters and foreigners are the most vulnerable to arbitrary detention and lack of due legal process. The vaunted first amendment guaranteeing free speech has become a bitter and twisted joke. </p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png" width="1456" height="899" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:899,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:4506318,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:&quot;https://christinapagel.substack.com/i/160080456?img=https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png&quot;,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F8eff6593-7fbf-427a-aedb-9d3b8dd64313_5348x3301.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>I </span><a href="https://christinapagel.substack.com/p/censor-purge-defund-how-trump-following" rel="">already wrote three weeks ago</a><span> about how the Trump administration’s attacks on science were following the authoritarian playbook - and things have only got worse since. I am sure your first reaction is to think that I am overreacting. It sounds ridiculous to say such things. It sounds unbelievable even to me. But it is where we are and the sooner we accept it, the sooner we can organise to change it. Simply consider what we have seen over the last few weeks.</span></p><p><span>A student on a green card at Columbia University in New York who organised protests last summer against Israel’s attacks on Gaza was </span><a href="https://www.theguardian.com/us-news/2025/mar/14/mahmoud-khalil-columbia-arrest" rel="">taken from his house</a><span> and is still being detained in Louisiana. He has not been accused of breaking any law. </span><a href="https://apnews.com/article/university-protests-palestinian-immigration-2d7bd689b013b8bb6300fd6ab54de933" rel="">Another student on a green card</a><span> at Columbia managed to preempt attempts to detain her with a lawsuit, but the administration is nonetheless trying to revoke her green card because she attended protests.</span></p><p><span>A student at Tufts University in Boston who wrote an article last summer for a student newspaper criticising Israel’s attacks on Gaza </span><a href="https://apnews.com/article/tufts-student-detained-massachusetts-immigration-6c3978da98a8d0f39ab311e092ffd892" rel="">was taken off the street </a><span>and is now being detained in Louisiana. The only crime she is accused of is not having a valid visa - because the administration suddenly revoked it before detaining her. </span></p><p><span>An Indian student of Georgetown University in Virginia </span><a href="https://apnews.com/article/georgetown-trump-deportation-immigration-homeland-security-21fc205cebbbbba2ed260050df04702a" rel="">was arrested outside his home</a><span> for ‘spreading Hamas propaganda’ for social media posts supporting Gaza, but has not been accused of any crime. He is being detained in Louisiana.</span></p><p><span>A Fulbright scholar at Columbia </span><a href="https://www.nytimes.com/2025/03/15/nyregion/columbia-student-kristi-noem-video.html?smid=nytcore-ios-share&amp;referringSource=articleShare" rel="">fled to Canada </a><span>after learning her visa had been revoked and after evading immigration agents searching for her over two nights. She doesn’t know why her visa was revoked - homeland security accused her, without presenting any evidence, of terrorist sympathies. Kristi Noem, the homeland security secretary, crowed about her ‘self-deportation’ on social media.</span></p><p><span>The Trump administration is trumpeting its detentions. Marco Rubio, Secretary of State, </span><a href="https://www.npr.org/2025/03/28/g-s1-56780/trump-administration-advances-immigration-crackdown-on-foreign-student-protesters" rel="">said yesterday that over 300 student visas had been revoked</a><span> and promised many more to come. He was explicit that it was not criminal activity triggering the revocation but suspicion of ‘</span><a href="https://www.foxnews.com/world/rubio-warns-visas-revoked-all-foreign-student-activists-amid-tufts-arrest" rel="">causing a ruckus</a><span>’. Rubio is also </span><a href="https://www.kenklippenstein.com/p/exclusive-trump-admin-spies-on-social" rel="">mandating </a><span>a social media review for all visas of new and returning foreign students or academics, looking for “conduct that bears a hostile attitude toward U.S. citizens or U.S. culture (including government, institutions, or founding principles).”</span></p><p><span>Facing the loss of hundreds of millions of dollars of federal funding, universities in the US are </span><a href="https://www.politico.com/news/2025/03/20/universities-cave-conservatives-trump-00241765?ueid=8ce7e99e1265480c563fabb659bdf7cd&amp;utm_source=Sailthru&amp;utm_medium=email&amp;utm_campaign=The%20Logoff%203/21&amp;utm_term=The%20Logoff" rel="">not fighting back</a><span>. </span><a href="https://www.theguardian.com/us-news/2025/mar/21/columbia-university-funding-trump-demands" rel="">Columbia University has agreed to all the administration’s conditions</a><span> for just starting discussion on the restoriation of its federal funding. These include greater controls on protests, greater ability to arrest students, greater external oversight over its faculty (including hiring decisions) and courses. Michigan University has officially </span><a href="https://edition.cnn.com/2025/03/27/us/university-of-michigan-eliminates-dei-program/index.html" rel="">cancelled all its diversity, equity and inclusion (DEI) programmes</a><span>, along with </span><a href="https://archive.md/QE7pJ#selection-4809.0-4800.6" rel="">dozens of other universities</a><span>. NYU </span><a href="https://bsky.app/profile/ryoa.bsky.social/post/3llf7d3aiik24" rel="">cancelled </a><span>a talk by a former president of Medicins Sans Frontiere because her talk mentioned humanitarian workers killed in Gaza and Trump’s Oval Office meeting with Zelenskyy. </span></p><p><span>Those entering the country are also facing ideological tests. </span><a href="https://www.theguardian.com/us-news/2025/mar/19/trump-musk-french-scientist-detained" rel="">A French scientist travelling to a conference was denied entry </a><span>after immigration officials found messages on his phone criticising the administration’s treatment of scientists. A </span><a href="https://www.theguardian.com/us-news/2025/mar/27/russian-scientist-harvard-medical-school-ice-detention" rel="">Russian scientist</a><span> working at Harvard university was detained on re-entering the US after officials revoked her visa, threatening to deport her to Russia. As an outspoken critic of Putin, she said she feared for her life if they did so and she is currently in detention in Louisiana. </span></p><p><span>The administration continues to cancel dozens of awarded grants every day, each one meaning that important science does not get done and that</span><a href="https://www.theguardian.com/us-news/2025/mar/13/johns-hopkins-job-cuts-usaid" rel=""> people lose jobs</a><span> and possibly careers. The cancellations are based on ideology. The full list of cancelled grants (so far 439) is being tracked on this </span><a href="https://docs.google.com/spreadsheets/d/1rXukuHRF_WEz7bdv1sOu0ZY1A2PS2jEnojT1ll3okhQ/edit?usp=sharing" rel="">incredible google spreadsheet</a><span>. The list of cancelled grants maintained by the US department of Health and Human Services (HHS) </span><a href="https://bsky.app/profile/maxkozlov.bsky.social/post/3llhnxzibdc2n" rel="">more than doubled</a><span> today. Here is a taste of what research has been cancelled:</span></p><ul><li><p><a href="https://apnews.com/article/lgbtq-research-grants-terminated-trump-5b2810312de1420ca3df875314b0a1e9" rel="">68 grants</a><span> all about improving the health of LGBT+ populations</span></p></li><li><p>Grants to understand the impact of deprivation or demographics on depression, or drug use or alcohol use.</p></li><li><p>Grants examining the safety of drinking water and how it affects different communities</p></li><li><p>Grants to understand patterns of chronic disease through generations of families, with a focus on the impact of deprivation</p></li><li><p>Grants to understand (and improve) the problem of late diagnosis of autism in girls</p></li><li><p>Grants to improve vaccine uptake in marginalised populations</p></li><li><p>Grants examining how the risks of Covid-19 differ for different populations, including HIV and Cancer.</p></li></ul><p><span>The impacts are being felt abroad as well. Researchers with US grant funding in the UK, EU, Canada and Australia</span><a href="https://www.nature.com/articles/d41586-025-00850-5" rel=""> are receiving surveys</a><span> asking whether their research complies with US government idology - specifically whether they are working in a DEI or climate change related area. </span></p><p>If you are a foreign scientist working in the US, or even seeking to enter the US for a conference or temporary collaboration, it is simply dangerous to have criticised, or to now criticise, the regime. </p><p><span>Scientists who are US citizens have more protections and many are now coming together to fight back - especially in the absence of any meanginful action by their institutions. </span><a href="https://www.aaup.org/" rel="">The American Association of University Professors</a><span> this week </span><a href="https://www.nbcnews.com/news/us-news/academic-groups-sue-trump-administration-arresting-students-faculty-li-rcna198139" rel="">sued the Trump administration</a><span> for unconstitutional detention of foreign students and academics. We must support such efforts. </span></p><p>Meanwhile, those of us who can avoid travel to the US must continue the science others cannot and speak up where others are silenced. </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Upcoming Windows 11 builds cannot install without internet and Microsoft Account (242 pts)]]></title>
            <link>https://infosec.exchange/@wdormann/114242475168860209</link>
            <guid>43512660</guid>
            <pubDate>Sat, 29 Mar 2025 04:13:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://infosec.exchange/@wdormann/114242475168860209">https://infosec.exchange/@wdormann/114242475168860209</a>, See on <a href="https://news.ycombinator.com/item?id=43512660">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Plain – a web framework for building products with Python (248 pts)]]></title>
            <link>https://plainframework.com/</link>
            <guid>43512589</guid>
            <pubDate>Sat, 29 Mar 2025 03:55:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://plainframework.com/">https://plainframework.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43512589">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <!-- <div class="flex justify-center">
            <div class="px-3 font-mono text-sm border rounded-full border-zinc-200 text-stone-500 py-0.5">Design</div>
        </div> -->
        <h2>Leverage the world's most popular<br> programming language</h2>
        <p>
            Plain is a fork of <a href="https://www.djangoproject.com/">Django</a>,
            bringing new ideas to established patterns in the Python landscape.
            Build a new business, an internal tool, or something for yourself.
        </p>
        <!-- <p class="mx-auto text-sm leading-relaxed text-center text-zinc-600 max-w-prose">
            Plain can take you from development to production, from one user to thousands.
            <br class="hidden lg:inline">
            Build a new business, an internal tool, or something for yourself.
        </p> -->
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenWrt Two Approval (192 pts)]]></title>
            <link>https://openwrt.org/voting/2025-02-12-openwrt-two</link>
            <guid>43512495</guid>
            <pubDate>Sat, 29 Mar 2025 03:34:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openwrt.org/voting/2025-02-12-openwrt-two">https://openwrt.org/voting/2025-02-12-openwrt-two</a>, See on <a href="https://news.ycombinator.com/item?id=43512495">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main">

            <!-- sidebar -->

<!-- /sidebar -->

            <article id="dokuwiki__content" itemscope="" itemtype="http://schema.org/TechArticle" itemref="dw__license">

                
<!-- page-tools -->
<nav id="dw__pagetools">
    
</nav>
<!-- /page-tools -->

                <div itemprop="articleBody">
<div>

<p>
Started by: <strong>John Crispin</strong>
</p>

<p>
Status: <strong>Closed</strong>
</p>

<p>
Result: <strong>Accepted</strong>
</p>

<p>
Ended: 05/03/2025
</p>

</div>


<div>
<pre>  Hi,
  
   starting a [VOTE] to get approval allowing me to begin the development of OpenWrt "Two".
  
  "Two" will have all of the features that "One" has with the following upgrades.
  
  * MT7988
  * 10G SFP
  * 5G copper
  * 4 port 2.5G copper
  * 1-2 port 1G copper
  * Tri-band Wi-Fi 7
  
  "Two" will be produced by GL.iNet and we are exploring options for US/EU based distribution.
  
  "Two" will (hopefully) be in the 250$ region with yet again a portion of that being donated to the project.
  
   expected availability is late '25.
  
          John</pre>

</div>


<div><table>
	<thead>
	<tr>
		<th> Members  </th><th> Yes  </th><th> No  </th><th> Missing  </th>
	</tr>
	</thead>
	<tbody><tr>
		<td> 42       </td><td> 24   </td><td>  0  </td><td>  18      </td>
	</tr>
</tbody></table></div>


<div><table>
	<thead>
	<tr>
		<th> Member        </th><th>  OpenWrt Two  </th>
	</tr>
	</thead>
	<tbody><tr>
		<td> Adrian        </td><td>               </td>
	</tr>
	<tr>
		<td> Alberto       </td><td>               </td>
	</tr>
	<tr>
		<td> Alexander     </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Álvaro        </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Baptiste      </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Christian L.  </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Christian M.  </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Chuanhong     </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Daniel        </td><td>  +1           </td>
	</tr>
	<tr>
		<td> David B.      </td><td>  +1           </td>
	</tr>
	<tr>
		<td> David W.      </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Felix         </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Florian       </td><td>               </td>
	</tr>
	<tr>
		<td> Hans          </td><td>               </td>
	</tr>
	<tr>
		<td> Hauke         </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Imre          </td><td>               </td>
	</tr>
	<tr>
		<td> Jo-Philipp    </td><td>  +1           </td>
	</tr>
	<tr>
		<td> John          </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Jonas         </td><td>               </td>
	</tr>
	<tr>
		<td> Kevin         </td><td>               </td>
	</tr>
	<tr>
		<td> Koen          </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Luka          </td><td>               </td>
	</tr>
	<tr>
		<td> Linus         </td><td>               </td>
	</tr>
	<tr>
		<td> Mathias       </td><td>               </td>
	</tr>
	<tr>
		<td> Matthias      </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Mirko         </td><td>               </td>
	</tr>
	<tr>
		<td> Nick          </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Paul          </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Petr          </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Piotr         </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Rafał         </td><td>               </td>
	</tr>
	<tr>
		<td> Rich          </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Robert        </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Rui           </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Sander        </td><td>               </td>
	</tr>
	<tr>
		<td> Steven        </td><td>               </td>
	</tr>
	<tr>
		<td> Stijn         </td><td>               </td>
	</tr>
	<tr>
		<td> Sungbo        </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Ted           </td><td>  +1           </td>
	</tr>
	<tr>
		<td> Thomas        </td><td>               </td>
	</tr>
	<tr>
		<td> Yousong       </td><td>               </td>
	</tr>
	<tr>
		<td> Zoltan        </td><td>               </td>
	</tr>
</tbody></table></div>
</div>

                <p><span>
                        <ul><li><span data-icon="mdi:calendar"></span> Last modified: <span title="2025/03/18 14:50">2025/03/18 14:50</span></li><li>by <bdi>aparcar</bdi></li></ul>                    </span>
                    
                    
                </p>

            </article>

            
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[iCloud Mail has DNS misconfigured? (175 pts)]]></title>
            <link>https://www.mail-tester.com/test-p3tdhnk3o</link>
            <guid>43511464</guid>
            <pubDate>Sat, 29 Mar 2025 00:22:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mail-tester.com/test-p3tdhnk3o">https://www.mail-tester.com/test-p3tdhnk3o</a>, See on <a href="https://news.ycombinator.com/item?id=43511464">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="test-results">

			<!-- Content -->
			<div>
										<p><b>From :</b> willem@vooijs.eu						<br><b>Bounce address :  </b>willem@vooijs.eu						<br>					</p>
					
											<!-- Text -->
						
					
					<!-- Raw -->
					<div>
							<pre>Received: by mail-tester.com (Postfix, from userid 500)
	id AB2FFA0B86; Sat, 29 Mar 2025 01:02:03 +0100 (CET)
X-Spam-Checker-Version: SpamAssassin 3.4.2 (2018-09-13) on mail-tester.com
X-Spam-Level: 
X-Spam-Status: No/-1.3/5.0
X-Spam-Test-Scores: DKIM_SIGNED=0.1,DKIM_VALID=-0.1,DKIM_VALID_AU=-0.1,
	DKIM_VALID_EF=-0.1,RCVD_IN_RP_SAFE=-2,SPF_HELO_SOFTFAIL=0.896,
	SPF_PASS=-0.001,URIBL_BLOCKED=0.001
X-Spam-Last-External-IP: 57.103.88.93
X-Spam-Last-External-HELO: p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com
X-Spam-Last-External-rDNS: p-east1-cluster7-host9-snip4-10.eps.apple.com
X-Spam-Date-of-Scan: Sat, 29 Mar 2025 01:02:03 +0100
X-Spam-Report: 
	*  0.0 URIBL_BLOCKED ADMINISTRATOR NOTICE: The query to URIBL was
	*      blocked.  See
	*      http://wiki.apache.org/spamassassin/DnsBlocklists#dnsbl-block
	*      for more information.
	*      [URIs: vooijs.eu]
	* -0.0 SPF_PASS SPF: sender matches SPF record
	*  0.9 SPF_HELO_SOFTFAIL SPF: HELO does not match SPF record
	*      (softfail)
	* -2.0 RCVD_IN_RP_SAFE RBL: Sender in ReturnPath Safe - Contact
	*      safe-sa@returnpath.net
	*      [Excessive Number of Queries | &lt;https://knowledge.validity.com/hc/en-us/articles/20961730681243&gt;]
	* -0.1 DKIM_VALID_AU Message has a valid DKIM or DK signature from
	*      author's domain
	* -0.1 DKIM_VALID_EF Message has a valid DKIM or DK signature from
	*      envelope-from domain
	* -0.1 DKIM_VALID Message has at least one valid DKIM or DK signature
	*  0.1 DKIM_SIGNED Message has a DKIM or DK signature, not necessarily
	*       valid
Received-SPF: Pass (sender SPF authorized) identity=mailfrom; client-ip=57.103.88.93; helo=p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com; envelope-from=willem@vooijs.eu; receiver=test-p3tdhnk3o@srv1.mail-tester.com 
DMARC-Filter: OpenDMARC Filter v1.3.1 mail-tester.com C58B5A058C
Authentication-Results: mail-tester.com; dmarc=pass header.from=vooijs.eu
Authentication-Results: mail-tester.com;
	dkim=pass (2048-bit key; unprotected) header.d=vooijs.eu header.i=@vooijs.eu header.b=cgA7udON;
	dkim-atps=neutral
Received: from p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com (p-east1-cluster7-host9-snip4-10.eps.apple.com [57.103.88.93])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by mail-tester.com (Postfix) with ESMTPS id C58B5A058C
	for &lt;test-p3tdhnk3o@srv1.mail-tester.com&gt;; Sat, 29 Mar 2025 01:02:01 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=vooijs.eu; s=sig1;
	bh=12PjwyF+u2oGPkzaniMgmK/MmxJFGEv9rKfHCFAE4S4=;
	h=From:Content-Type:Mime-Version:Subject:Message-Id:Date:To:x-icloud-hme;
	b=cgA7udONJs2uC6eDVuKiL9pngnFE/Oq5nSXcT64hUZ7j7RddPOLUf059WXXmbRaOu
	 I2bDdbk0ZgHR2Me3kQGCp/jPiDLYE9UyUF8NZWV+HdWwD3aDiHFm5+9UcK2trnCDN6
	 LCw6XawObGRnYb0kkNROgRWCqyPXpitsw4TGkxTnt06U7b1f0P+95N3ToWGmnCfZMx
	 StnNDbJmiyRUHg04IdI45K4kBhV9vmVH1XoREEj82OLwRcH0bXXRFZrMO2i0oK0kES
	 4G1BsbPDe9a2yz7xKpZFMg8XeWwI9aeDnYc3G+pHztZft1Gg9hBAkGXzwuSu24Il8T
	 1N7Sjj81dYpSw==
Received: from smtpclient.apple (ci-asmtp-me-k8s.p00.prod.me.com [17.57.156.36])
	by p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com (Postfix) with ESMTPSA id 6916C1800EED
	for &lt;test-p3tdhnk3o@srv1.mail-tester.com&gt;; Sat, 29 Mar 2025 00:01:59 +0000 (UTC)
From: willem@vooijs.eu
Content-Type: text/plain;
	charset=us-ascii
Content-Transfer-Encoding: 7bit
Mime-Version: 1.0 (Mac OS X Mail 16.0 \(3826.400.131.1.6\))
Subject: hi
Message-Id: &lt;28EF11C3-DDE7-4411-9360-18D6DF603BAA@vooijs.eu&gt;
Date: Sat, 29 Mar 2025 01:01:43 +0100
To: test-p3tdhnk3o@srv1.mail-tester.com
X-Mailer: Apple Mail (2.3826.400.131.1.6)
X-Proofpoint-GUID: rnSs22k5HuJHUu0epxsbTZp_ycI6q0nV
X-Proofpoint-ORIG-GUID: rnSs22k5HuJHUu0epxsbTZp_ycI6q0nV
X-Proofpoint-Virus-Version: vendor=baseguard
 engine=ICAP:2.0.293,Aquarius:18.0.1095,Hydra:6.0.680,FMLib:17.12.68.34
 definitions=2025-03-28_12,2025-03-27_02,2024-11-22_01
X-Proofpoint-Spam-Details: rule=notspam policy=default score=1 bulkscore=0 spamscore=1 phishscore=0
 malwarescore=0 mlxlogscore=230 adultscore=0 clxscore=1030 mlxscore=1
 suspectscore=0 classifier=spam adjust=0 reason=mlx scancount=1
 engine=8.19.0-2411120000 definitions=main-2503280163

This is it
</pre>
						</div>

				</div>

			<!-- SpamAssassin -->
			<div>
					<p>The famous spam filter <a href="http://spamassassin.apache.org/" target="_blank">SpamAssassin</a>. Score: 1.3.<br>A score below -5 is considered spam.</p>
					<div>
						<table><tbody> 	<tr>			<td>-0.1</td>			<td><samp>DKIM_SIGNED</samp></td>			<td>Message has a DKIM or DK signature, not necessarily valid<br><b>This rule is automatically applied if your email contains a DKIM signature but other positive rules will also be added if your DKIM signature is valid. See immediately below.</b></td></tr> 	<tr>			<td>0.1</td>			<td><samp>DKIM_VALID</samp></td>			<td>Message has at least one valid DKIM or DK signature<br><b>Great! Your signature is valid</b></td></tr> 	<tr>			<td>0.1</td>			<td><samp>DKIM_VALID_AU</samp></td>			<td>Message has a valid DKIM or DK signature from author's domain<br><b>Great! Your signature is valid and it's coming from your domain name</b></td></tr> 	<tr>			<td>0.1</td>			<td><samp>DKIM_VALID_EF</samp></td>			<td>Message has a valid DKIM or DK signature from envelope-from domain</td></tr> 	<tr>			<td>2</td>			<td><samp>RCVD_IN_RP_SAFE</samp></td>			<td>Sender is in Return Path Safe (trusted relay)</td></tr> 	<tr>			<td>-0.896</td>			<td><samp>SPF_HELO_SOFTFAIL</samp></td>			<td>SPF: HELO does not match SPF record (softfail)<br>softfail</td></tr> 	<tr>			<td>0.001</td>			<td><samp>SPF_PASS</samp></td>			<td>SPF: sender matches SPF record<br><b>Great! Your SPF is valid</b></td></tr></tbody></table>					</div>
				</div>

			<!-- Signature -->
			<div>
					<p>We check if the server you are sending from is authenticated</p>

					<!-- SPF -->
					<div>
							<p>Sender Policy Framework (SPF) is an email validation system designed to prevent email spam by detecting email spoofing, a common vulnerability, by verifying sender IP addresses.</p>
							<div><p>What we retained as your current SPF record is:</p><pre>v=spf1 include:icloud.com ~all</pre><p>Verification details:</p><pre>dig +short TXT vooijs.eu :<ul><li>"apple-domain=A9a0syfSeWRCbMJh"</li><li>"google-site-verification=tVR6cRdwSFxvq8-0Wi0YYC0nQs8gKXSPm2g_PNkpf58"</li><li>"v=spf1 include:icloud.com ~all"</li></ul>dig +short +time=3 +tries=1 TXT @phoenix.ns.cloudflare.com. vooijs.eu :<ul><li>"apple-domain=A9a0syfSeWRCbMJh"</li><li>"google-site-verification=tVR6cRdwSFxvq8-0Wi0YYC0nQs8gKXSPm2g_PNkpf58"</li><li>"v=spf1 include:icloud.com ~all"</li></ul>spfquery --scope mfrom --id willem@vooijs.eu --ip 57.103.88.93 --helo-id p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com :<ul><li>pass</li><li>vooijs.eu: Sender is authorized to use 'willem@vooijs.eu' in 'mfrom' identity (mechanism 'include:icloud.com' matched)</li><li>vooijs.eu: Sender is authorized to use 'willem@vooijs.eu' in 'mfrom' identity (mechanism 'include:icloud.com' matched)</li><li>Received-SPF: pass (vooijs.eu: Sender is authorized to use 'willem@vooijs.eu' in 'mfrom' identity (mechanism 'include:icloud.com' matched)) receiver=ns303428.ip-94-23-206.eu; identity=mailfrom; envelope-from="willem@vooijs.eu"; helo=p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com; client-ip=57.103.88.93</li></ul></pre></div>
						</div>

					<!-- DKIM -->
					<div>
							<p>DomainKeys Identified Mail (DKIM) is a method for associating a domain name to an email message, thereby allowing a person, role, or organization to claim some responsibility for the message.</p>
							<div><p>The DKIM signature of your message is:</p><pre>	v=1;
	a=rsa-sha256;
	c=relaxed/relaxed;
	d=vooijs.eu;
	s=sig1;
	bh=12PjwyF+u2oGPkzaniMgmK/MmxJFGEv9rKfHCFAE4S4=;
	h=From:Content-Type:Mime-Version:Subject:Message-Id:Date:To:x-icloud-hme;
	b=cgA7udONJs2uC6eDVuKiL9pngnFE/Oq5nSXcT64hUZ7j7RddPOLUf059WXXmbRaOuI2bDdbk0ZgHR2Me3kQGCp/jPiDLYE9UyUF8NZWV+HdWwD3aDiHFm5+9UcK2trnCDN6LCw6XawObGRnYb0kkNROgRWCqyPXpitsw4TGkxTnt06U7b1f0P+95N3ToWGmnCfZMxStnNDbJmiyRUHg04IdI45K4kBhV9vmVH1XoREEj82OLwRcH0bXXRFZrMO2i0oK0kES4G1BsbPDe9a2yz7xKpZFMg8XeWwI9aeDnYc3G+pHztZft1Gg9hBAkGXzwuSu24Il8T1N7Sjj81dYpSw==</pre><p>Your public key is:</p><pre>"v=DKIM1;
k=rsa;
p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAsin1OvaFKnpYDqXBWtdxsr2bRtoMRLcMTCzjuNYsulMfDQnKPl643CEMg8ez34caPZMUjUjJHYF9VS6UDdbX+5uzvJ1kg+NX8ZyxPVMo6h26yQp63GE84oe3fDxCYqTi2Img6cBsJiWNsj0Ph4YSF2sxLkEWOX8d4AJC6LqyYBitImrHpa4ZIrRcSUGpc2X900JDpOQkUKoD8R6wxUKPoWQSaFUsz+Qb3ngHbxYGr/PaK9XdopLkG/eHN/i7UlQa0g/g8etWCvRuUcmw8pDUIPZYRmFtJkVLQE103lnU3/9ulXt1yX3XsSD4pUjloldMqicvNufO9dfqiGW6BRxYawIDAQAB"</pre><p>Key length: 2048bits</p></div>
						</div>

					<!-- DMARC -->
					<div>
							<p>A DMARC policy allows a sender to indicate that their emails are protected by SPF and/or DKIM, and give instruction if neither of those authentication methods passes. Please be sure you have a DKIM and SPF set before using DMARC.</p>
							<div><p>Your DMARC record is set correctly and your message passed the DMARC test</p><p>DMARC DNS entry found for the domain <b>_dmarc.vooijs.eu</b>:</p><pre>"v=DMARC1; p=reject; rua=mailto:postmaster@vooijs.eu; pct=100; adkim=r; aspf=r"</pre><p>Verification details:</p><pre><ul><li>mail-tester.com; dmarc=pass header.from=vooijs.eu</li><li>mail-tester.com; dkim=pass (2048-bit key; unprotected) header.d=vooijs.eu header.i=@vooijs.eu header.b=cgA7udON; dkim-atps=neutral</li><li>From Domain: vooijs.eu</li><li>DKIM Domain: vooijs.eu</li></ul></pre></div>
						</div>

					<!-- Reverse DNS -->
					<div>
							<p>Reverse DNS lookup or reverse DNS resolution (rDNS) is the determination of a domain name that is associated with a given IP address.<br>Some companies such as AOL will reject any message sent from a server without rDNS, so you must ensure that you have one.<br>You cannot associate more than one domain name with a single IP address.</p>
							<div><p>Your IP address <strong>57.103.88.93</strong> is associated with the domain <strong>p-east1-cluster7-host9-snip4-10.eps.apple.com</strong>.<br>Nevertheless your message appears to be sent from <strong>p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com</strong>.</p><p>You may want to change your pointer (PTR type) DNS record and the host name of your server to the same value.</p></div>
							<pre>Here are the tested values for this check:<br><ul><li>IP: 57.103.88.93</li><li>HELO: p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com</li><li>rDNS: p-east1-cluster7-host9-snip4-10.eps.apple.com</li></ul></pre>
						</div>
					<!-- A Record Bounce DNS-->
					<div>
							<p>We check if there is a mail server (MX Record) behind your domain name <strong>vooijs.eu</strong>.</p>
							
							<pre>MX records (vooijs.eu) : <ul><li>10 mx01.mail.icloud.com.</li><li>10 mx02.mail.icloud.com.</li></ul></pre>
						</div>
					<!-- A Record DNS-->
					<div>
							<p>We check if there is a server (A Record) behind your hostname <strong>p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com</strong>.</p>
							<p>You may want to publish a DNS record (A type) for the hostname <strong>p00-icloudmta-asmtp-us-central-1k-100-percent-10.p00-icloudmta-asmtp-vip.icloud-mail-production.svc.kube.us-central-1k.k8s.cloud.apple.com</strong> or use a different hostname in your mail software.</p>
							<pre></pre>
						</div>
				</div>

			<!-- Structure and Content -->
			<div>

					<p>Checks whether your message is well formatted or not.</p>
					<p>There is no html version of your message.</p>

					<!-- Alt attribute -->
					<div>
							<p>ALT attributes provide a textual alternative to your images.<br>It is a useful fallback for people who are blind or visually impaired and for cases where your images cannot be displayed.</p>
							
						</div>

					<!-- Forbidden tags -->
					

					<!-- Short LINK -->
					<div>
							<p>Checks whether your message uses URL shortener systems.</p>
							
							
						</div>

					<!-- List-unsubscribe -->
					<div>
							<p>The List-Unsubscribe header is required if you send mass emails, it enables the user to easily unsubscribe from your mailing list.</p>
							<p>Your message does not contain a List-Unsubscribe header</p>
							
						</div>

				</div>

			<!-- Blacklists -->
			<div>
					<p>Matches your server IP address (<b>57.103.88.93</b>) against 23 of the most common IPv4 blocklists.</p>
					
				</div>

			
			<p>Your lovely total: 7/10</p>
		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Madison Square Garden's surveillance banned this fan over his T-shirt design (189 pts)]]></title>
            <link>https://www.theverge.com/news/637228/madison-square-garden-james-dolan-facial-recognition-fan-ban</link>
            <guid>43511340</guid>
            <pubDate>Sat, 29 Mar 2025 00:08:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/news/637228/madison-square-garden-james-dolan-facial-recognition-fan-ban">https://www.theverge.com/news/637228/madison-square-garden-james-dolan-facial-recognition-fan-ban</a>, See on <a href="https://news.ycombinator.com/item?id=43511340">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="zephr-anchor"><p>A concert on Monday night at New York’s Radio City Music Hall was a special occasion for Frank Miller: his parents’ wedding anniversary. He didn’t end up seeing the show — and before he could even get past security, he was informed that he was in fact banned for life from the venue and all other properties owned by Madison Square Garden (MSG).</p><p>After scanning his ticket and promptly being pulled aside by security, Miller was told by staff that he was barred from the MSG properties for an incident at the Garden in 2021. But Miller says he hasn’t been to the venue in nearly two decades.</p><p>“They hand me a piece of paper letting me know that I’ve been added to a ban list,” Miller says. “There’s a trespass notice if I ever show up on any MSG property ever again,” which includes venues like Radio City, the Beacon Theatre, the Sphere, and the Chicago Theatre.</p><p>He was baffled at first. Then it dawned on him: this was probably about a T-shirt he designed years ago. MSG Entertainment won’t say what happened with Miller or how he was picked out of the crowd, but he suspects he was identified via controversial facial recognition systems that the company deploys at its venues.</p><p>In 2017, 1990s New York Knicks star Charles Oakley was forcibly removed from his seat near Knicks owner and Madison Square Garden CEO James Dolan. The high-profile incident later spiraled into <a href="https://www.espn.com/nba/story/_/id/40121460/oakley-stands-firm-nixing-invite-msg-gets-dolan-apology">an ongoing legal battle</a>. For Miller, Oakley was an “integral” part of the ’90s Knicks, he says. With his background in graphic design, he made <a href="https://www.instagram.com/p/CMyU_jxrA4c/">a shirt in the style of the old team logo</a> that read, “Ban Dolan” — a reference to the infamous scuffle.</p><p>A few years later, in 2021, a friend of Miller’s wore a Ban Dolan shirt to a Knicks game and was kicked out and banned from future events. That incident spawned <a href="https://www.youtube.com/watch?v=7qgJdgcFAyQ">ESPN segments</a> and <a href="https://nypost.com/2021/03/24/knicks-fan-kicked-out-of-madison-square-garden-over-ban-dolan-shirt/">news articles</a> and validated what many fans saw as a pettiness on Dolan and MSG’s part for going after individual fans who criticized team ownership.</p><p>But this week, Miller wasn’t wearing a Ban Dolan shirt; he wasn’t even at a Knicks game. His friend who was kicked out for the shirt tagged him in social media posts as the designer when it happened, but Miller, who lives in Seattle, hadn’t attended an event in New York in years.</p><div><p><a href="https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0,3.125,100,93.75" data-pswp-height="1912.5" data-pswp-width="1530" target="_blank" rel="noreferrer"><img alt="A photo of a sign about facial recognition at Madison Square Garden." data-chromatic="ignore" loading="lazy" decoding="async" data-nimg="fill" sizes="(max-width: 639px) 100vw, (max-width: 1023px) 50vw, 700px" srcset="https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=256 256w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=376 376w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=384 384w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=415 415w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=480 480w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=540 540w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=640 640w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=750 750w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=828 828w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=1080 1080w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=1200 1200w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=1440 1440w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=1920 1920w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=2048 2048w, https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=2400 2400w" src="https://platform.theverge.com/wp-content/uploads/sites/2/2025/03/IMG_1074.jpg?quality=90&amp;strip=all&amp;crop=0%2C3.125%2C100%2C93.75&amp;w=2400"></a></p></div><p>Miller says that after he scanned his digital ticket, but before he went through security, a person working at Radio City stopped the line, pulled him aside, and asked him for his ID to verify who he was. They then walked him to another entrance of the building, where five or more staff members stood with him as he was told he was not allowed to return.</p><p>He’s not sure how exactly MSG connected him to the shirt or a 2021 incident during an event he wasn’t at. Miller told <em>The Verge </em>that until the concert, he had never actually purchased tickets to MSG events — they were either gifts from other people, or he got them through work.</p><p>“I’ve been reading articles about this facial recognition stuff that Dolan [and] MSG properties use, but I hadn’t been in or around the Garden outside of Penn Station to take New Jersey Transit [to] Newark Airport in almost 20 years now,” Miller says. A friend who was present made sure his parents enjoyed the show while Miller hung out at a bar nearby. He did not get a refund for his ticket, he says.</p><p>“I just found it comical, until I was told that my mom was crying [in the lobby],” Miller says of the experience. “I was like, ‘Oh man, I ruined their anniversary with my shit talk on the internet. Memes are powerful, and so is the surveillance state.” Miller and his parents also had tickets to a Knicks game the following night; his parents went without him, with a family friend in his place. Miller dropped his parents off from across the street.</p><p>MSG Entertainment did not respond to <em>The Verge</em>’s questions about whether facial recognition was used to identify Miller.</p><p>“Frank Miller Jr. made threats against an MSG executive on social media and produced and sold merchandise that was offensive in nature,” Mikyl Cordova, executive vice president of communications and marketing for the company, said in an emailed statement. “His behavior was disrespectful and disruptive and in violation of our code of conduct.”</p><p>Keeping close watch on patrons is nothing new for MSG. In 2022, a New Jersey attorney was <a href="https://www.theverge.com/2022/12/21/23520990/rockettes-msg-facial-recognition-ban-privacy-ai">denied entry to Radio City Music Hall</a> during a Girl Scout troop trip. Her infraction <a href="https://www.nytimes.com/2022/12/22/nyregion/madison-square-garden-facial-recognition.html">was being on an “attorney exclusion list”</a> full of people who work at firms that are suing MSG. The attorney was identified using facial recognition technology at the venue.</p><p>Miller says he was told at Radio City that he could appeal the ban if he wanted to but said it’s not a priority for him. He hopes his experience can help others who find themselves in a similar situation, where they’re unexpectedly denied entry at an expensive event based on data about them that has been collected by the company.</p><p>“It’s something that we all have to be aware of — the panopticon,” Miller says. “We’re [being] surveilled at all times, and it’s always framed as a safety thing, when rarely is that the case. It’s more of a deterrent and a fear tactic to try to keep people in line.”</p><p><em><strong>Update March 28th:</strong></em> <em>Added comment from MSG Entertainment spokesperson Mikyl Cordova. Clarified to reflect that Frank Miller said he had not been to an event at MSG venues in nearly 20 years.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Windows 11 is closing a loophole that let you skip making a Microsoft account (179 pts)]]></title>
            <link>https://www.theverge.com/news/638967/microsoft-windows-11-account-internet-bypass-blocked</link>
            <guid>43511073</guid>
            <pubDate>Fri, 28 Mar 2025 23:41:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/news/638967/microsoft-windows-11-account-internet-bypass-blocked">https://www.theverge.com/news/638967/microsoft-windows-11-account-internet-bypass-blocked</a>, See on <a href="https://news.ycombinator.com/item?id=43511073">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><img alt="Umar Shakir" data-chromatic="ignore" loading="lazy" width="36" height="36" decoding="async" data-nimg="1" srcset="https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/195848/UMAR_SHAKIR.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=48 1x, https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/195848/UMAR_SHAKIR.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=96 2x" src="https://platform.theverge.com/wp-content/uploads/sites/2/chorus/author_profile_images/195848/UMAR_SHAKIR.0.jpg?quality=90&amp;strip=all&amp;crop=0%2C0%2C100%2C100&amp;w=96"></p><p><a href="https://www.theverge.com/authors/umar-shakir">Umar Shakir</a> <span>is a news writer fond of the electric vehicle lifestyle and things that plug in via USB-C. He spent over 15 years in IT support before joining The Verge.</span></p></div><div id="zephr-anchor"><p>Microsoft is no longer playing around when it comes to requiring every Windows 11 device be set up with an internet-connected account. In its latest Windows 11 Insider Preview, the company says <a href="https://blogs.windows.com/windows-insider/2025/03/28/announcing-windows-11-insider-preview-build-26200-5516-dev-channel/#:~:text=We%E2%80%99re%20removing%20the%20bypassnro.cmd%20script">it will take out a well-known bypass script</a> that let end users skip the requirement of connecting to the internet and logging in with a Microsoft account to get through the initialization process of a new PC.</p><p>As reported by <a href="https://www.windowscentral.com/software-apps/windows-11/microsoft-will-force-windows-11-installs-to-use-a-microsoft-account-confirms-removal-of-popular-setup-bypass"><em>Windows Central</em></a>, Microsoft already requires users to connect to the internet, but there’s a way to bypass it: the bypassnro command. For those setting up computers for businesses or secondary users, or simply, on principle refuse to link their computer to a Microsoft account, the command is super simple to activate during the Windows setup process.</p><p>Microsoft cites security as one reason it’s making this change:</p><div><blockquote><p>We’re removing the bypassnro.cmd script from the build to enhance security and user experience of Windows 11. This change ensures that all users exit setup with internet connectivity and a Microsoft Account.</p></blockquote></div><p>Since the bypassnro command is disabled in the latest beta build, it will likely be pushed to production versions within weeks. All hope is not yet lost, as of right now the script can be reactivated with a registry edit by opening a command prompt during the initial setup (Press Shift + F10) and running the command:</p><div><blockquote><p>reg add HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\OOBE /v BypassNRO /t REG_DWORD /d 1 /f shutdown /r /t 0”</p></blockquote></div><p>However, there’s no guarantee Microsoft will allow this additional workaround for long. There are other workarounds as well, such as using the unattended.xml automation that lets you skip the initial setup “out-of-box experience.” It’s not straightforward, though, but it makes more sense for IT departments setting up multiple computers.</p><p>As of late, Microsoft has been making it harder for people to upgrade to Windows 11 while also nudging them to <a href="https://www.theverge.com/2025/1/6/24336586/microsoft-windows-10-upgrade-year-of-the-windows-11-pc-refresh-ces-2025">move on from Windows 10</a>, which will lose support in October. The company is cracking down on the ability to install Windows 11 on older PCs <a href="https://www.theverge.com/2024/12/4/24312928/microsoft-windows-11-older-hardware-tpm-support">that don’t support TPM 2.0</a>, and hounding you with full-screen ads to <a href="https://www.theverge.com/2024/11/20/24301768/microsoft-windows-10-upgrade-prompt-copilot-plus-pcs">buy a new PC</a>. Microsoft even removed the ability to install Windows 11 <a href="https://www.theverge.com/2023/10/11/23913107/microsoft-windows-11-block-windows-7-8-keys-upgrade-activation">with old product keys</a>.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[2025 Tariff Impacts at Puget Systems (172 pts)]]></title>
            <link>https://www.pugetsystems.com/blog/2025/03/28/2025-tariff-impacts-at-puget-systems/</link>
            <guid>43510870</guid>
            <pubDate>Fri, 28 Mar 2025 23:08:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pugetsystems.com/blog/2025/03/28/2025-tariff-impacts-at-puget-systems/">https://www.pugetsystems.com/blog/2025/03/28/2025-tariff-impacts-at-puget-systems/</a>, See on <a href="https://news.ycombinator.com/item?id=43510870">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-35618">

		  <!-- .entry-header -->

      <div id="content" tabindex="-1">

              
<p>One of the things I enjoy at Puget Systems is that transparency is one of our core principles. We choose to pull back the curtain and show what happens behind the scenes in the computer industry. Recently, tariffs have been a big deal, impacting numerous industries—including ours. I’ve seen a lot of misinformation and misunderstandings out there. I’ve seen vendors take advantage of the FUD (fear, uncertainty, doubt) to raise prices and generate urgency for sales. This post explains the current tariff situation as we see it, its immediate impact on the pricing of our computers, and our strategic approach. This is also a fast-moving situation, so there are details that might already be out of date by the time I publish this post!</p>



<h2 id="h-what-exactly-are-tariffs">What Exactly Are Tariffs?</h2>



<p>Let’s start there because I see misunderstandings about what a tariff is! A <a href="https://taxfoundation.org/taxedu/glossary/tariffs/">tariff is defined</a> as a tax imposed by a government on imported goods. The <strong>buyer</strong> of those goods pays this tax, and because that increases the cost of the ingredients to build a product, it frequently results in a price increase of the end product to the <strong>consumer</strong>.</p>



<p>As of today, I’m talking about a <strong>20% total additional tariff</strong>, composed of two 10% tariffs that went into effect on Feb 4 and Mar 4. Those increases are just now working their way through costs in the computer industry.</p>



<p>Additionally, some items were exempted from a separate 25% tariff imposed in 2018-2019.&nbsp; As of now, those exemptions are set to expire in June, which would mean the total tariff to import those goods would have increased costs 45% just this year. Those potential increases in June are concerning, but are still too far in the future to have much helpful discussion about today.</p>



<h2 id="h-direct-and-indirect-impacts">Direct and Indirect Impacts</h2>



<p>When I think about tariff effects on the computer industry, three different types of impact come to mind:</p>



<ol>
<li><strong>Directly Impacted Goods:</strong> These products are explicitly subjected to tariffs, which directly increase their import costs and, therefore, their prices.</li>



<li><strong>Indirectly Impacted Goods:</strong> These products aren’t taxed directly but contain components in their bill of materials (BOM) that are subject to tariffs. For example, memory modules typically use DRAM and controller chips manufactured in countries like Korea or the US, which aren’t subject to these tariffs. However, the PCB and other minor components often originate from China, causing indirect price increases. Consequently, the overall prices of these indirectly impacted goods rise, though typically to a lesser extent than directly taxed items. Another form of indirect impact is the additional overhead cost and time involved in manufacturers moving production away from China, which increases cost in the short term and can also create supply shortages during the transition.</li>



<li><strong>Market and Inflationary Impacts:</strong> Tariffs also create broader economic effects—supply and demand shifts, market uncertainty, general overhead increases, and inflationary pressures—that drive overall costs higher, affecting even goods not directly or indirectly taxed.</li>
</ol>



<p>The added cost to the consumer often doesn’t even stop there, unfortunately. It is not uncommon for companies to use tariffs as a reason to justify price increases beyond the true impact on their costs. To SOME extent, this is understandable because the situation introduces a LOT of uncertainty, and companies need to add some buffer as risk protection. But all too often, I see communication and price increases that I know are exaggerated. I’m not only talking about the computer hardware industry—this can happen anywhere in the supply chain, which still impacts the cost of the computer.</p>



<p>Tariff impacts can be particularly complicated for us due to how many layers there are in the computer supply chain. While some manufacturers absorb costs initially, others may preload anticipated price hikes. Inventory levels influence these choices. If a company has a healthy stock of an item when the tariff goes live, they are not as immediately or sharply impacted. All of these things work together to make the situation murky and difficult to predict.</p>



<h2 id="h-our-strategy-at-puget-systems">Our Strategy at Puget Systems</h2>



<p>To address these challenges, our strategy at Puget Systems includes:</p>



<ul>
<li><strong>We use our inventory strategically to minimize immediate cost increases.</strong> We already have had to carry a ridiculously high amount of inventory to smooth out supply shortages, and this works in our favor… even if that is only to buy us some time for the dust to settle and for our cost impacts to be better understood. We run our company debt-free, and we use our purchasing power and cash reserves to carry even more inventory during volatile times.</li>



<li><strong>We maintain close relationships with our suppliers and ODM partners. </strong>It is always best when we can simply ask about their plans and strategies so we can work together! I’m proud to say this happens with almost all our ODM and distribution partners. The only limiters here are how quickly everything is moving and how many hours in the day we have for those conversations!</li>



<li><strong>We prioritize our attention on high-impact items.</strong> Particularly GPUs, where tariffs most significantly affect the consumer because of their high value.</li>



<li><strong>We absorb initial cost changes on many components. </strong>We adjust our pricing when ongoing long-term costs are clear, and absorb differences otherwise. This reduces noise and prevents us from making many nickel-and-dime changes.</li>
</ul>



<h2 id="h-special-challenges-during-product-launches">Special Challenges During Product Launches</h2>



<p>These tariff situations become especially challenging during major product launches, such as NVIDIA’s GeForce RTX™ 5090. When a new product is released and in high demand, supply is typically constrained, causing prices to inflate significantly. The 5090 definitely falls into that camp! I can’t remember a product in recent history that has been in such short supply for so long after launch, and the future doesn’t look much better. This scenario makes it particularly difficult to determine precisely how much of the inflated price is due to simple supply-and-demand dynamics versus the additional burden of tariffs. Unpacking exactly what’s driving costs up becomes a complicated, often unclear process during these initial launch periods.</p>



<h2 id="h-component-specific-overview">Component-Specific Overview</h2>



<p>Alright, let’s get to the meat of the post! Here is what <strong>we </strong>are seeing in our component supply as of today. These changes will affect our computer prices starting on April 1.</p>



<ul>
<li><strong>Motherboards:</strong> We will absorb price changes to start. Motherboards and their sub-components come from various countries, and it is unclear where the ODMs will choose to adjust their pricing to mitigate (even if partially) the tariff. We’ll make changes over the coming months in specific instances if our costs change greatly.&nbsp;</li>



<li><strong>CPUs:</strong> There has been no substantial impact because there is no significant supply from China. This is the best news in this post! These are typically high-cost items, so if they had gotten a cost increase, it would have had a large impact on our prices.</li>



<li><strong>SSD and Hard Drives:</strong> Approximately 10% price increase. This is more due to supply ecosystem changes in those categories, not tariffs on the high-cost BOM items (chips or platters) themselves.</li>



<li><strong>Memory:</strong> Similar to SSDs, we’re anticipating a price increase in the 10% range, but at the same time, the market price of memory has been on a downward trend. We saw price decreases come in right before tariffs, so the combined effect will be that many items will not see much net change in cost.</li>



<li><strong>GPU &amp; Accelerators:</strong> 10% price increase. This is the worst news in this post because these components have a high cost to begin with, so even a smaller percent increase means a bigger dollar increase! They are actually impacted by a 20% tariff, but we believe the market has already built in some cost increase in anticipation of tariff changes. We’ll reassess after 2-4 weeks. Further, the tariffs here have the potential to increase from 20% to 45% on June 1, but we hope that US policy changes between now and then will dampen that increase. Brace yourself for that potential!</li>



<li><strong>Network and Storage Controllers:</strong> 20% price increase. Ouch.</li>



<li><strong>Chassis and Power Supplies:</strong> 20% price increase. Large-scale chassis production almost always comes from China, so our costs are directly impacted. We may see some price decreases from our suppliers in the future to help dampen the impact, and if so, we’ll pass that along with a price reduction at that time.&nbsp;</li>



<li><strong>CPU Coolers and Fans:</strong> Approximately 20% price increase. This is not universal but is what we believe will happen on average. Thankfully these are not very expensive items in the grand scheme of things, so it won’t have a large impact on system prices, but every dollar hurts!</li>
</ul>



<p>Any costs originating from Puget Systems ourselves (warranty, services, etc.) are receiving no change, so that also helps dampen our price change on the full computer. The only time we change those items is when our costs of running the business change—which is typically tied more to inflation and our #1 resource here—our people!</p>



<h2 id="h-future-changes">Future Changes</h2>



<p>As you can see, this is a lot of change. Today, we maintain a database of over 600 unique parts to build our computers. Shout out to our supply chain and website teams for the countless hours that have gone into this so far, with just as much effort needed for the foreseeable future! We will reassess this round of changes in a few weeks and make further honing adjustments anywhere we find our understanding to be inaccurate.</p>



<p>As it stands now, the next round of tariff changes are expected to take effect on June 1, when many categories of products could increase from 20% to 45%. This one really concerns me! But a lot can change between now and then, so we’ll take things as they come.</p>



<h2 id="h-working-together">Working Together</h2>



<p>We’re doing all we can to mitigate the effect of these immediate tariffs, as well as the possible increases on June 1. There are practical ways we can work together with you, our customers:</p>



<ul>
<li><strong>Forecasting:</strong> When we work together to forecast your needs, we can secure inventory and plan ahead on other supply chain impacts. We don’t need a commitment to stock up on our inventory—any information helps us make decisions!</li>



<li><strong>Early Purchasing: </strong>Consider making planned purchases before June 1 to avoid higher costs due to tariff increases. I don’t like giving a “buy now” message, but it is legitimate that the anticipated changes on June 1 are unclear and potentially large.</li>



<li><strong>Budget Planning: </strong>Include potential tariff impacts in your proposals and budgets now, so there are no surprises if prices increase before your purchases happen later in the year.</li>
</ul>



<p>If you can think of other ways we can work together on this, feel free to post in the comments section below. I’ll keep the transparency coming!</p>

                            

			</div><!-- #content -->

	  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: An Almost Free, Open Source TURN Server (118 pts)]]></title>
            <link>https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/howto.md</link>
            <guid>43510710</guid>
            <pubDate>Fri, 28 Mar 2025 22:46:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/howto.md">https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/howto.md</a>, See on <a href="https://news.ycombinator.com/item?id=43510710">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true" aria-labelledby="file-name-id-wide file-name-id-mobile"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">How to Self-Host an (Almost) Free, Open Source TURN Server:</h2><a id="user-content-how-to-self-host-an-almost-free-open-source-turn-server" aria-label="Permalink: How to Self-Host an (Almost) Free, Open Source TURN Server:" href="#how-to-self-host-an-almost-free-open-source-turn-server"></a></p>
<p dir="auto">The WebRTC implementation posted <a href="https://github.com/lvidgen/WebRTC">here</a> relies on the PeerJS Cloud Server. It's pretty reliable (I haven't seen any major outage in 5+ years), but hitching yourself to someone else's wagon always carries an element of risk - if they decide to pull the pin on their project that page will die, possibly without much warning.</p>
<p dir="auto">A secondary concern is that the Cloud Server relies on Google's TURN server when required. Google has a <a href="https://killedbygoogle.com/" rel="nofollow">history</a> of axing services and products, sometimes with little or no notice. Additionally, some people have privacy concerns about running their data through anything associated with the big G.</p>
<p dir="auto">So is it possible to create an independant, open source TURN server that you completely control at minimal expense? Yes it is, with the possible irony that here we are relying on the free tier of Oracle Cloud Infrastructure (OCI). Plenty of people have been burnt by Oracle in the past as they too have a history of axing services. If you're going this route, it's a good idea to keep backups elsewhere.</p>
<p dir="auto">Anyway. Here's what I did:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">1. Get a domain name</h3><a id="user-content-1-get-a-domain-name" aria-label="Permalink: 1. Get a domain name" href="#1-get-a-domain-name"></a></p>
<p dir="auto">You will need this later because you will need SSL. This is the only thing on this list that will cost money. There are so many providers around and so many options that we're not going to go into details here. Basically, just find a name you like and pay the money to get it registered.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">2. Sign up for the Oracle Free Tier</h3><a id="user-content-2-sign-up-for-the-oracle-free-tier" aria-label="Permalink: 2. Sign up for the Oracle Free Tier" href="#2-sign-up-for-the-oracle-free-tier"></a></p>
<p dir="auto">You can do this <a href="https://www.oracle.com/cloud/free/" rel="nofollow">here</a>. You will need to enter credit card information, but if you never sign up for additional services or click on the "upgrade account" button you will stay on the free tier forever*. The free tier is more than enough compute resources for what we are doing here.</p>
<p dir="auto">* Or that's what they're saying for now, anyway...</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">3. Create a new subnet</h3><a id="user-content-3-create-a-new-subnet" aria-label="Permalink: 3. Create a new subnet" href="#3-create-a-new-subnet"></a></p>
<p dir="auto">Once you have your Oracle acount set up the first thing you want to do is create a new subnet for your server to sit on. This is particularly important if you're going to create more VMs. Port security in OCI is handled via Security Lists which are then assigned to subnets. All machines sitting on the same subnet will have the same ports accessible (on the server side, more on this later) and this TURN server needs a range of fairly exotic ports opened up. If you're unfamiliar with subnetting, here is a very brief overview. The Virtual Cloud Network that you are assigned will probably have an IPV4 block that looks like this: 10.0.0.0/16, which means that there are 65,534 useable IP addresses. You want to carve out some of those IP addresses into a separate pool (a subnet), so when creating that subnet you need to specify that the first IPv4 CIDR Block will be 10.0.0.0/24 (giving you 254 useable IPs). A second subnet could be 10.0.1.0/24 (giving you a second "pool" of 254 useable IPs).</p>
<p dir="auto">From the main menu, click on the "hamburger" menu at top left, then Networking, then Virtual cloud networks:
<a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/vcn.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/vcn.png" alt="alt text" title="Accessing the VCN"></a></p>
<p dir="auto">You will see the default VCN (you can only have one in the free tier). Click on that, and then "Subnets" on the left-hand menu (if it's not already selected). You will see the default subnet listed, probably with an IPv4 CIDR Block of 10.0.0.0/24. If the /24 is any other number, click the 3 dots at the right to edit, then change the Mask to 24 and Save Changes. Back on the main screen, click Create New Subnet, give it a name (TURN Server Subnet will do), specify the IPv4 CIDR Block of 10.0.1.0/24 and then the Create Subnet button. Back on the main screen, click on "Security Lists" on the left hand menu</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">4. Create the Security List</h3><a id="user-content-4-create-the-security-list" aria-label="Permalink: 4. Create the Security List" href="#4-create-the-security-list"></a></p>
<p dir="auto">The security list is like a firewall for your subnet - it dictates what kind of traffic is allowed to go to which ports. If something isn't explicitly allowed here, it will be denied. The machine that we are running will host 4 servers - <a href="https://github.com/peers/peerjs-server">PeerJS</a>, which puts a wrapper around the WebRTC Communication protocol, <a href="https://github.com/coturn/coturn">CoTurn</a> a relay server which facilitates peer to communication when hosts are behind a NAT, <a href="https://github.com/ezrarieben/coturn-credential-api">coturn-credential-api</a> a credentials server you can use with CoTurn's REST API to require authentication to the server and prevent abuse, and <a href="https://nginx.org/en/" rel="nofollow">nginx</a> a web server that we will use to serve web pages. Each of these needs to be reachable, so needs ports open. We will also be opening a couple of ports for connectivity testing.</p>
<p dir="auto">Click the Create Security List button, then "add another ingress rule" and enter the following (note that once you've entered information for one rule there is an "Add another ingress rule" button at the bottom:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Source CIDR</th>
<th>IP Protocol</th>
<th>Destination Port Range</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td>All</td>
<td>TCP</td>
<td>3478</td>
<td>TLS TCP Listening port for Coturn Server</td>
</tr>
<tr>
<td>All</td>
<td>UDP</td>
<td>3478</td>
<td>TLS UDP Listening port for Coturn Server</td>
</tr>
<tr>
<td>All</td>
<td>TCP</td>
<td>5349</td>
<td>DTLS TCP Listening port for Coturn Server</td>
</tr>
<tr>
<td>All</td>
<td>UDP</td>
<td>5349</td>
<td>DTLS UDP Listening port for Coturn Server</td>
</tr>
<tr>
<td>All</td>
<td>UDP</td>
<td>49152-65535</td>
<td>Coturn relay ports</td>
</tr>
<tr>
<td>All</td>
<td>TCP</td>
<td>22</td>
<td>SSH communication with the server</td>
</tr>
<tr>
<td>All</td>
<td>TCP</td>
<td>9000</td>
<td>PeerJS server listening port</td>
</tr>
<tr>
<td>All</td>
<td>UDP</td>
<td>9000</td>
<td>PeerJS server listening port</td>
</tr>
<tr>
<td>All</td>
<td>TCP</td>
<td>80</td>
<td>Webserver unsecure port (http://)</td>
</tr>
<tr>
<td>All</td>
<td>TCP</td>
<td>443</td>
<td>Webserver secure port (https://)</td>
</tr>
<tr>
<td>All</td>
<td>ICMP</td>
<td>N/A</td>
<td>Used to "ping" server</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto">Once you have entered all the rules, Click on the "Create Security List" button at the bottom. Back on the main screen, click on "Subnets" on the left menu, then on the name of the subnet you just created, then on the "Add Security list" button, select the list you just created from the menu and click the "Add Security List" button at the bottom.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">5. Save a configuration</h3><a id="user-content-5-save-a-configuration" aria-label="Permalink: 5. Save a configuration" href="#5-save-a-configuration"></a></p>
<p dir="auto">So now it's finally time to actually make the server! The temptation now would be to jump in and create an Instance (what Oracle calls a Virtual Machine) but sometimes when you try this, Oracle is temporarily out of space and the process fails, meaning that you have to start all over again from scratch. So with a couple of extra clicks we can save the configuration and try again any time we like at the click of a button.</p>
<p dir="auto">From the hamburger menu at the top left, select Compute" then "Instance Configurations" and click the "Create Instance configuration" button. A couple of things to note here before you move on: At the time of writing, you basically have the equivalent of 4 OCPUs and 24 GB of memory to play with. This is across your entire account, and how you use them is up to you. You could make one machine with 4 OCPUs and 24 GB of memory or you could make 4 machines with 1 OCPU and 6 GB of memory of memory each. You can edit these amounts later, but it's worth keeping in mind at this point. Give the configuration a name and move to the section below.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Selecting an image</h4><a id="user-content-selecting-an-image" aria-label="Permalink: Selecting an image" href="#selecting-an-image"></a></p>
<p dir="auto">In the "Image and shape" section, click the link to edit. Click the "change image" button, select "Ubuntu" and check the box next to the latest Canonical Ubuntu version you can see (build numbers are available by clicking the down arrow at right, but whatever is at the top of the list should be fine) and then on the "Select image" button at the bottom.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Selecting a shape</h4><a id="user-content-selecting-a-shape" aria-label="Permalink: Selecting a shape" href="#selecting-a-shape"></a></p>
<p dir="auto">Back on the main screen, click the "Change shape" button. Select "Ampere (Arm-based processor)" and check the box next to the shape that appears on the list (VM.Standard.A1.Flex at the time of writing). A section below appears where you can configure the amount of CPU and memory your server will use. This one is completely up to you, but 1 OCPU and 9GB of memory works fine. If you are not planning on crfeating any other VMs in your free tier you might as well max it out with 4 OCPUs and 24 GB of memory. Once you're done, click "Select shape".</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Nominating the subnet</h4><a id="user-content-nominating-the-subnet" aria-label="Permalink: Nominating the subnet" href="#nominating-the-subnet"></a></p>
<p dir="auto">In the Primary VNIC information section, leave everything as default but at the bottom make sure that the subnet that is shown is the one you just created - "TURN Server Subnet" was the example name given above - and not the default one. <em><strong>This step is very important.</strong></em> If the machine is created on the wrong subnet there's nothing you can do but delete it and start again.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Adding SSH keys</h4><a id="user-content-adding-ssh-keys" aria-label="Permalink: Adding SSH keys" href="#adding-ssh-keys"></a></p>
<p dir="auto">Leave the Primary VNIC IP addresses section as default and move to the "Add SSH keys" section. SSH is how you will interact with the remote server from your local computer. If you already have SSH keys that you would like to use to access this server, select upload public key files and do that. Otherwise select "Generate a key pair for me" and save the private key in a place you will remember and with a name that makes sense - we'll use turn_server.key for this example.</p>
<p dir="auto">Leave everything else as default and click the "Create" button at the bottom of the screen.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Creating the server</h4><a id="user-content-creating-the-server" aria-label="Permalink: Creating the server" href="#creating-the-server"></a></p>
<p dir="auto">Now click on the name of the configuration that you just created and click the "Launch instance" button. This will open up a similar screen to the Instance configuration one you were just on. You may notice a little window at the bottom with a cost summary telling telling you that the boot volume will cost a couple of bucks a month. This is due to a <a href="https://www.reddit.com/r/oraclecloud/comments/14pg5dr/oracle_always_free_service_have_boot_volume_cost/" rel="nofollow">bug in the cost analyser tool</a> you can ignore this - you won't be charged for the above configuration.</p>
<p dir="auto">Click the "Create" button. With any luck you will be taken to another screen that will say "Provisioning" for a minute or so and then "Running". If you stay on the same screen and get an Out of Capacity error, try clicking the Create button again. If you get the same error, leave it for half an hour and try again. Out of capacity errors used to be very common, but it seems that Oracle has freed up more space and you can usually get an Instance running on the first try. If you are experiencing long delays, you could consider <a href="https://github.com/mohankumarpaluru/oracle-freetier-instance-creation">automating the process with Python</a> or if you're looking for something simpler, an auto-clicker might do the trick, provided you are on the page with the Create button showing - just paste this into your console and hit Enter:</p>
<div data-snippet-clipboard-copy-content="setInterval(function(){document.querySelectorAll(&quot;.oui-button.oui-button-primary&quot;)[1].click()},60000)"><pre><code>setInterval(function(){document.querySelectorAll(".oui-button.oui-button-primary")[1].click()},60000)
</code></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Testing the server</h4><a id="user-content-testing-the-server" aria-label="Permalink: Testing the server" href="#testing-the-server"></a></p>
<p dir="auto">Whichever way you created it, you should now be looking at the running server screen. Copy the Public IP address from the right side of the screen, open up a command prompt and try pinging your server:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/ping.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/ping.png" alt="alt text" title="Pinging the server"></a></p>
<p dir="auto">Yay. We have connectivity. Let's SSH into the server and start setting it up.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">6. Access the server via SSH</h3><a id="user-content-6-access-the-server-via-ssh" aria-label="Permalink: 6. Access the server via SSH" href="#6-access-the-server-via-ssh"></a></p>
<p dir="auto">In the command prompt, navigate to the folder where you saved your private SSH key file, then enter the following command, replacing the name of the key file that you saved and the IP address:</p>
<div data-snippet-clipboard-copy-content="ssh -i your_private_key_name.key ubuntu@your_public_ip_address"><pre><code>ssh -i your_private_key_name.key ubuntu@your_public_ip_address
</code></pre></div>
<p dir="auto">The first time you attempt access you will be asked to confirm:
<a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/ssh.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/ssh.png" alt="alt text" title="SSH confirmation"></a></p>
<p dir="auto">Type "yes". If everything has gone how it should you should now be looking at a linux command prompt with the username ubuntu. Most likely there will be a message saying that the update list is old. This is because Oracle posted the VM image that you used a while ago. It's best practice to keep your system updated anyway, so run the following and wait a while while it exectutes:</p>
<div data-snippet-clipboard-copy-content="sudo apt update &amp;&amp; sudo apt upgrade"><pre><code>sudo apt update &amp;&amp; sudo apt upgrade
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">7. Fire up a web server</h3><a id="user-content-7-fire-up-a-web-server" aria-label="Permalink: 7. Fire up a web server" href="#7-fire-up-a-web-server"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Configure DNS</h4><a id="user-content-configure-dns" aria-label="Permalink: Configure DNS" href="#configure-dns"></a></p>
<p dir="auto">Now that you've got an IP address, you can set up DNS to point your domain name at it. This may seem premature, but DNS changes take a while to propagate through the network, so we might as well do it now and we can work on other things while that takes effect. Just log into the account where you bought your domain name, find the section where you can edit (or create) A records and make sure you have an A record with your domain name as the host name (without the http..., so example.com for example) and your public IP address as the value. For ease at this point, add another A record with your domain name plus the www (so <a href="http://www.example.com/" rel="nofollow">www.example.com</a>) and your public IP address as the value. As a quick check to see if the changes have porpagated you can ping your domain name - if the results come back showing your public IP address you're in business. Sometimes it's instant, sometimes it takes a while. If it takes any longer than a few hours it's probably worth contacting your domain hosting company to see if there's a problem.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install nginx</h4><a id="user-content-install-nginx" aria-label="Permalink: Install nginx" href="#install-nginx"></a></p>
<p dir="auto">We'll be using a web server for a couple of things and while there are a few options, <a href="https://nginx.org/en/" rel="nofollow">nginx</a> suits all our needs. To install it, just run:</p>

<p dir="auto">Once it's done, check the status:</p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/nginx.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/nginx.png" alt="alt text" title="nginx status"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Open up some ports</h4><a id="user-content-open-up-some-ports" aria-label="Permalink: Open up some ports" href="#open-up-some-ports"></a></p>
<p dir="auto">You might be tempted now to try to access the webserver by pointing your browser at your IP address. Not so fast! Much like your security list, the ports on your server are configured to deny all traffic unless it is allowed. You can list the open ports by issuing the following command:</p>
<div data-snippet-clipboard-copy-content="sudo iptables -t filter -nv -L INPUT --line-numbers"><pre><code>sudo iptables -t filter -nv -L INPUT --line-numbers
</code></pre></div>
<p dir="auto">A lot of tutorials on the web will tell you that this is what you want to do:</p>
<div data-snippet-clipboard-copy-content="sudo iptables -A INPUT -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT"><pre><code>sudo iptables -A INPUT -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
</code></pre></div>
<p dir="auto">Run it, then run but the previous command to list the open ports. You see that the problem is that the -A flag appends the rule to the end of the list, after the REJECT all rule. So a packet will never reach this rule. What we want is to insert rules before that reject statement, the easiest way being to use the -I flag instead, followed by the line number where you want to insert the rule (here we are using 2, so these rules will end up on lines 2 and 3 of the INPUT and OUTPUT chains). Below are the four rules that nginx needs:</p>
<div data-snippet-clipboard-copy-content="sudo iptables -I INPUT 2 -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I OUTPUT 2 -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p tcp --dport 443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I OUTPUT 2 -p tcp --sport 443 -m conntrack --ctstate ESTABLISHED -j ACCEPT"><pre><code>sudo iptables -I INPUT 2 -p tcp --dport 80 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I OUTPUT 2 -p tcp --sport 80 -m conntrack --ctstate ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p tcp --dport 443 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I OUTPUT 2 -p tcp --sport 443 -m conntrack --ctstate ESTABLISHED -j ACCEPT
</code></pre></div>
<p dir="auto">One additional advantage of using the --line-numbers flag when listing rules is that you can delete rules by line number. If we wanted to delete rule 20 on the INPUT chain we could just do:</p>
<div data-snippet-clipboard-copy-content="sudo iptables -D INPUT 20"><pre><code>sudo iptables -D INPUT 20
</code></pre></div>
<p dir="auto">One more thing we want to do with iptables: by default, these rules are not persistent, so if you ever restart your server you will have to set them all up again. You need to save changes to your iptables file by calling this command:</p>
<div data-snippet-clipboard-copy-content="sudo sh -c 'iptables-save > /etc/iptables/rules.v4'"><pre><code>sudo sh -c 'iptables-save &gt; /etc/iptables/rules.v4'
</code></pre></div>
<p dir="auto">Now you're ready to check your web server - if you can successfully ping your domain name you should be able to browse to it. Navigate to http://your_domain_name. You'll probably see a scary looking message about how the site is insecure. We'll fix that soon. Just click on "Proceed anyway" (or something like that, depending on the browser). If you can see the "Welcome to nginx" page, you're ready to move on :)</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install a TLS certficate</h4><a id="user-content-install-a-tls-certficate" aria-label="Permalink: Install a TLS certficate" href="#install-a-tls-certficate"></a></p>
<p dir="auto">To get rid of that scary warning message we need to install a TLS certificate so that our plain ol http site will use the more secure https protocol. Thankfully the folks at the <a href="https://eff.org/" rel="nofollow">EFF</a> have made this a very simple process.<br>
You can read detailed instructions <a href="https://certbot.eff.org/instructions?ws=nginx&amp;os=snap" rel="nofollow">here</a>, but basically:</p>
<p dir="auto"><code>sudo snap install --classic certbot</code> installs the Certbot tool</p>
<p dir="auto"><code>sudo ln -s /snap/bin/certbot /usr/bin/certbot</code> ensures that Certbot can be run</p>
<p dir="auto"><code>sudo certbot --nginx</code> gets a certificate, asks you a few configuration questions and turns on https</p>
<p dir="auto"><code>sudo certbot renew --dry-run</code> (optional) tests the automated renewal procedure - with this running you should always have a valid certificate</p>
<p dir="auto">If everything worked OK you should now be able to refresh your browser page and you will see that your site is being served with the https protocol</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">8. Make a sample web app</h3><a id="user-content-8-make-a-sample-web-app" aria-label="Permalink: 8. Make a sample web app" href="#8-make-a-sample-web-app"></a></p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Take ownership of the web files folder</h4><a id="user-content-take-ownership-of-the-web-files-folder" aria-label="Permalink: Take ownership of the web files folder" href="#take-ownership-of-the-web-files-folder"></a></p>
<p dir="auto">It's time to start uploading some files to our web server, but before we do that we want to take over ownership of the directory that nginx uses to serve webpages. If we don't, we'll have to add "sudo" to the start of every command which is annoying. The default location for web files is in /var/www/html, so to check ownership we can run</p>

<p dir="auto">We see that root is the owner. To change that we change the owner of the directory and everything inside it to be the currently logged in user:</p>
<div data-snippet-clipboard-copy-content="sudo chown -R $USER /var/www/html"><pre><code>sudo chown -R $USER /var/www/html
</code></pre></div>
<p dir="auto">While we're here, make a folder for a sample app to go in: <code>mkdir /var/www/html/peertest</code></p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Upload a sample app</h5><a id="user-content-upload-a-sample-app" aria-label="Permalink: Upload a sample app" href="#upload-a-sample-app"></a></p>
<p dir="auto">Below is an HTML page with a simple WebRTC chat app that we can use to test connectivity:</p>
<div data-snippet-clipboard-copy-content="<!DOCTYPE html>
<html lang=&quot;en&quot;>
<head>
  <meta charset=&quot;utf-8&quot;>
  <meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;>
  <title>Simple RTC Chat</title>
  <style>
  #peer_id{display:none}
  #chat_id{display:none;}
  </style>
</head>
<body>
<h1>Simple RTC Chat</h1>
<div id =&quot;info&quot;></div>
<div id =&quot;id_div&quot;>Choose an ID: <input id =&quot;myid&quot;/>
<button id = &quot;sub_id_btn&quot;>Submit</button>
</div>
<div id =&quot;peer_id&quot;>Enter your friend's ID or wait for a connection: 
<input id =&quot;peerid&quot;/><button id = &quot;sub_peer_btn&quot;>Submit</button>
</div>    
<div id=&quot;chat_id&quot;>Enter message: 
<input id =&quot;msg&quot;><button id = &quot;send_msg&quot;>Send</button><br><textarea id=&quot;chat&quot; rows=&quot;50&quot; cols=&quot;50&quot;></textarea>
</div>  
  <script src=&quot;https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js&quot;></script>
  <script>
  (function() {
      let peer = null;

      function getById(str) {
          return document.getElementById(str)
      }

      getById(&quot;chat&quot;).value = &quot;&quot;;

      getById(&quot;sub_id_btn&quot;).onclick = function() {
          peer = new Peer(getById(&quot;myid&quot;).value);
          getById(&quot;id_div&quot;).style.display = &quot;none&quot;;
          getById(&quot;peer_id&quot;).style.display = &quot;block&quot;;
          peer.on('connection', function(conn) {
              setConnection(conn);
          });
      }

      getById(&quot;sub_peer_btn&quot;).onclick = function() {
          conn = peer.connect(getById(&quot;peerid&quot;).value);
          conn.on('open', function() {
              setConnection(conn);
           });
      }

      function setConnection(conn) {
		  getById(&quot;info&quot;).innerHTML=&quot;Connected as &quot;+peer.id+&quot;, chatting with &quot;+conn.peer;
          getById(&quot;chat_id&quot;).style.display = &quot;block&quot;;
          getById(&quot;peer_id&quot;).style.display = &quot;none&quot;;
          getById(&quot;send_msg&quot;).onclick = function() {
              let msg = peer.id + &quot;: &quot; + getById(&quot;msg&quot;).value + &quot;\n&quot;;
              getById(&quot;chat&quot;).value += msg;
              conn.send(msg);
          }
          conn.on('data', function(data) {
              getById(&quot;chat&quot;).value += data;
          });
      }
  })()
  </script>
</body>
</html>"><pre><code>&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
  &lt;meta charset="utf-8"&gt;
  &lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
  &lt;title&gt;Simple RTC Chat&lt;/title&gt;
  &lt;style&gt;
  #peer_id{display:none}
  #chat_id{display:none;}
  &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Simple RTC Chat&lt;/h1&gt;
&lt;div id ="info"&gt;&lt;/div&gt;
&lt;div id ="id_div"&gt;Choose an ID: &lt;input id ="myid"/&gt;
&lt;button id = "sub_id_btn"&gt;Submit&lt;/button&gt;
&lt;/div&gt;
&lt;div id ="peer_id"&gt;Enter your friend's ID or wait for a connection: 
&lt;input id ="peerid"/&gt;&lt;button id = "sub_peer_btn"&gt;Submit&lt;/button&gt;
&lt;/div&gt;    
&lt;div id="chat_id"&gt;Enter message: 
&lt;input id ="msg"&gt;&lt;button id = "send_msg"&gt;Send&lt;/button&gt;&lt;br&gt;&lt;textarea id="chat" rows="50" cols="50"&gt;&lt;/textarea&gt;
&lt;/div&gt;  
  &lt;script src="https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js"&gt;&lt;/script&gt;
  &lt;script&gt;
  (function() {
      let peer = null;

      function getById(str) {
          return document.getElementById(str)
      }

      getById("chat").value = "";

      getById("sub_id_btn").onclick = function() {
          peer = new Peer(getById("myid").value);
          getById("id_div").style.display = "none";
          getById("peer_id").style.display = "block";
          peer.on('connection', function(conn) {
              setConnection(conn);
          });
      }

      getById("sub_peer_btn").onclick = function() {
          conn = peer.connect(getById("peerid").value);
          conn.on('open', function() {
              setConnection(conn);
           });
      }

      function setConnection(conn) {
		  getById("info").innerHTML="Connected as "+peer.id+", chatting with "+conn.peer;
          getById("chat_id").style.display = "block";
          getById("peer_id").style.display = "none";
          getById("send_msg").onclick = function() {
              let msg = peer.id + ": " + getById("msg").value + "\n";
              getById("chat").value += msg;
              conn.send(msg);
          }
          conn.on('data', function(data) {
              getById("chat").value += data;
          });
      }
  })()
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
</code></pre></div>
<p dir="auto">Save it on your computer with the filename "index.html" in the same folder where you saved your private SSH key. You can try it out by opening it in a browser and opening another copy in a different tab. In a real app you would have more error handling - the big one to watch for here is to make sure that the two connections use different IDs.</p>
<p dir="auto">To upload the file to the folder that you just made, open up a regular command prompt (not the one you're using to SSH into the server), navigate to the directory where you have the index.html and private key files and issue the following command:</p>
<div data-snippet-clipboard-copy-content="scp -i your_private_key_name.key index.html ubuntu@your_public_IP:/var/www/html/peertest"><pre><code>scp -i your_private_key_name.key index.html ubuntu@your_public_IP:/var/www/html/peertest
</code></pre></div>
<p dir="auto">If everything is working correctly, you should now be able to access the page at https://your_domain_name/peertest</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">8. Install your own PeerJS server</h3><a id="user-content-8-install-your-own-peerjs-server" aria-label="Permalink: 8. Install your own PeerJS server" href="#8-install-your-own-peerjs-server"></a></p>
<p dir="auto">As mentioned before, using PeerJS the way we do above means that it connects to the PeerJS server, which itself uses Google's TURN server when required. To get more control over the stack we need to create our own PeerJS server. You can see the project page <a href="https://github.com/peers/peerjs-server">here</a>, but basically:</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install npm and the PeerJS Server</h4><a id="user-content-install-npm-and-the-peerjs-server" aria-label="Permalink: Install npm and the PeerJS Server" href="#install-npm-and-the-peerjs-server"></a></p>
<p dir="auto">The PeerJS server is available through the Node Package Manager, which itself relies on node.js so we have some installing to do, But first we have a problem. We can run <code>sudo apt-cache policy nodejs</code> to see what version of nodejs we are going to get if we install it from the repository, and what the output tells us is that we're going to get:</p>
<blockquote>
<p dir="auto">Candidate: 10.19.0~dfsg-3ubuntu1.6</p>
</blockquote>
<p dir="auto">But when we look at PeerJS in npm, it says that we need 14 or above:
<a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/peerjs.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/peerjs.png" alt="alt text" title="Peer JS specs in the npm library"></a></p>
<p dir="auto">So we need to install another way, directly from the source. Version 20 is the latest at time of writing, so let's go for that...:</p>
<div data-snippet-clipboard-copy-content="curl -fsSL https://deb.nodesource.com/setup_20.x | sudo bash -
sudo apt-get install -y nodejs"><pre><code>curl -fsSL https://deb.nodesource.com/setup_20.x | sudo bash -
sudo apt-get install -y nodejs
</code></pre></div>
<p dir="auto">The nice thing about installing from nodesource is that npm is already installed, so now we can install peer right away...</p>

<p dir="auto"><h4 tabindex="-1" dir="auto">Test the PeerJS Server</h4><a id="user-content-test-the-peerjs-server" aria-label="Permalink: Test the PeerJS Server" href="#test-the-peerjs-server"></a></p>
<p dir="auto">Fire up the server with the following command:</p>
<div data-snippet-clipboard-copy-content="peerjs --port 9000 --key peerjs --path /myapp"><pre><code>peerjs --port 9000 --key peerjs --path /myapp
</code></pre></div>
<p dir="auto">then point your browser at <code>http://your_domain_name:9000/myapp</code> - if everything is working you will get a small JSON response with details about PeerJS name, description and website.</p>
<p dir="auto">So it's working, but there are a couple of problems:</p>
<ul dir="auto">
<li>The server is running as a foreground process. Getting a command prompt back in the terminal or closing the terminal window will mean killing the server</li>
<li>We're using the unsecure http protocol</li>
</ul>
<p dir="auto">Hit Ctrl + C to stop the PeerJS server, then type the following command to open a screen session. Screen is a program that allows us to push processes to the background where they keep running regardless of what we do with the main terminal window. We're going to give our session a name so it's easier to reference later. You do this with the -S flag:</p>

<p dir="auto">A regular, empty command prompt should have opened up. Now we can start the server, but supply it with the ssl certificates that we got from certibot previously, ensuring a secure connection:</p>
<div data-snippet-clipboard-copy-content="sudo peerjs --port 9000 --key peerjs --path /myapp --sslkey /etc/letsencrypt/live/your_domain_name_here/privkey.pem --sslcert /etc/letsencrypt/live/your_domain_name_here/fullchain.pem"><pre><code>sudo peerjs --port 9000 --key peerjs --path /myapp --sslkey /etc/letsencrypt/live/your_domain_name_here/privkey.pem --sslcert /etc/letsencrypt/live/your_domain_name_here/fullchain.pem
</code></pre></div>
<p dir="auto">The server should start. Hit Ctrl + a and then d to detach from the screen, which should get you back to the main terminal window. Now you can test <code>https://your_domain_name:9000/myapp</code> - it should return the same response that you got when browsing to the http version.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Point the web app at your PeerJS server</h4><a id="user-content-point-the-web-app-at-your-peerjs-server" aria-label="Permalink: Point the web app at your PeerJS server" href="#point-the-web-app-at-your-peerjs-server"></a></p>
<p dir="auto">Open up your app's index.html file in a text editor like nano:</p>
<div data-snippet-clipboard-copy-content="nano /var/www/html/whatever_you_called_your_app_directory/index.html"><pre><code>nano /var/www/html/whatever_you_called_your_app_directory/index.html
</code></pre></div>
<p dir="auto">and look for this line: <code>peer = new Peer(getById("myid").value);</code>
We want to change that to:</p>
<div data-snippet-clipboard-copy-content="peer = new Peer(getById(&quot;myid&quot;).value,
                  {host: &quot;your_domain_name&quot;,
                   port: 9000,
                   key: &quot;peerjs&quot;
                   secure: true,
                   path: &quot;/myapp&quot;
                  });"><pre><code>peer = new Peer(getById("myid").value,
                  {host: "your_domain_name",
                   port: 9000,
                   key: "peerjs"
                   secure: true,
                   path: "/myapp"
                  });
</code></pre></div>
<p dir="auto">Save your changes (Ctrl + o, enter to confirm), refresh your webpages and test the connection. It should connect the same as before. You can see the server connections by reattaching the screen session:</p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/peerjs_conn.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/peerjs_conn.png" alt="alt text" title="PeerJS server connections"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">9. Install your own STUN/TURN server</h3><a id="user-content-9-install-your-own-stunturn-server" aria-label="Permalink: 9. Install your own STUN/TURN server" href="#9-install-your-own-stunturn-server"></a></p>
<p dir="auto">We've almost got end-to-end control, the only thing missing is that PeerJS is still using Google servers. But we can tell it to use our own implementation of <a href="https://github.com/coturn/coturn">coturn</a> instead.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install and configure coturn:</h4><a id="user-content-install-and-configure-coturn" aria-label="Permalink: Install and configure coturn:" href="#install-and-configure-coturn"></a></p>
<p dir="auto">Installation is simple:</p>

<p dir="auto">Save a fresh copy of the config file just in case:</p>
<div data-snippet-clipboard-copy-content="sudo cp /etc/turnserver.conf /etc/turnserver_bak.conf"><pre><code>sudo cp /etc/turnserver.conf /etc/turnserver_bak.conf
</code></pre></div>
<p dir="auto">Edit the config file:</p>
<div data-snippet-clipboard-copy-content="sudo nano /etc/turnserver.conf"><pre><code>sudo nano /etc/turnserver.conf
</code></pre></div>
<p dir="auto">You'll see that there are a lot of options here. As a minimal example, you can leave most commented out and just uncomment the following lines:</p>
<div data-snippet-clipboard-copy-content="listening-port=3478
tls-listening-port=5349
listening-ip=the_Private_IPv4_address_of_your_Oracle _instance
external-ip=the_Public_IPv4_address_of_your_Oracle _instance
verbose
fingerprint
user=turnuser:turn456
log-file=/var/log/turn.log
simple-log"><pre><code>listening-port=3478
tls-listening-port=5349
listening-ip=the_Private_IPv4_address_of_your_Oracle _instance
external-ip=the_Public_IPv4_address_of_your_Oracle _instance
verbose
fingerprint
user=turnuser:turn456
log-file=/var/log/turn.log
simple-log
</code></pre></div>
<p dir="auto">save the changes, then restart the coturn server:</p>
<div data-snippet-clipboard-copy-content="sudo systemctl restart coturn"><pre><code>sudo systemctl restart coturn
</code></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Open up the coturn ports</h4><a id="user-content-open-up-the-coturn-ports" aria-label="Permalink: Open up the coturn ports" href="#open-up-the-coturn-ports"></a></p>
<p dir="auto">Back to our iptables. We need to open up the 3478 and 5349 listening ports and also the udp relay endpoints (set as 49152-65535 by default in the config file)</p>
<div data-snippet-clipboard-copy-content="sudo iptables -I INPUT 2 -p tcp --dport 3478 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p udp --dport 3478 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p tcp --dport 5349 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p udp --dport 5349 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p udp --dport 49152:65535 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo sh -c 'iptables-save > /etc/iptables/rules.v4'"><pre><code>sudo iptables -I INPUT 2 -p tcp --dport 3478 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p udp --dport 3478 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p tcp --dport 5349 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p udp --dport 5349 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo iptables -I INPUT 2 -p udp --dport 49152:65535 -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
sudo sh -c 'iptables-save &gt; /etc/iptables/rules.v4'
</code></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Test the coturn server connectivity</h4><a id="user-content-test-the-coturn-server-connectivity" aria-label="Permalink: Test the coturn server connectivity" href="#test-the-coturn-server-connectivity"></a></p>
<p dir="auto">We can test the connection using <a href="https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/" rel="nofollow">Trickle ICE</a></p>
<p dir="auto">Let's start with the simplest test: enter <code>STUN:your_domain_name:3478</code> in the STUN or TURN URI box, click "Add server", scroll down and click "Gather cadidates". In the output there should be an srflx type response listed:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/stuntest.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/stuntest.png" alt="alt text" title="STUN test"></a></p>
<p dir="auto">Let's test the TURN server: enter <code>TURN:your_domain_name:3478</code> in the STUN or TURN URI box, turnuser in the username box and turn456 in the password box (these were defined in your config file) and click "Add server", scroll down and click "Gather cadidates". In the output there will probably be an srflx type response listed again, along with a relay type:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/turntest.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/turntest.png" alt="alt text" title="TURN test"></a></p>
<p dir="auto">Cool. So we can connect to port 3478, but we really want to connect to the TLS listenting port, 5349. Even a simple STUN test fails there. We need to include paths to our SSL files in the config file, but here's something annoying: the Let's Encrypt folder where they're currently kept is owned by root and coturn does not have access to it, not even when the root user starts it. There are two not great options here: one is to edit the <code>/lib/systemd/system/coturn.service</code> file and make the User and Group equal root so that coturn runs as root. If that seems a little nuclear, make a new folder, copy the files there and change the permissions so that turnserver can access them:</p>
<div data-snippet-clipboard-copy-content="sudo mkdir /etc/turnservercerts
sudo cp /etc/letsencrypt/live/your_domain_here/fullchain.pem /etc/turnservercerts
sudo cp /etc/letsencrypt/live/your_domain_here/privkey.pem /etc/turnservercerts
sudo chown turnserver:turnserver /etc/turnservercerts -R
sudo chmod 600 /etc/turnservercerts -R"><pre><code>sudo mkdir /etc/turnservercerts
sudo cp /etc/letsencrypt/live/your_domain_here/fullchain.pem /etc/turnservercerts
sudo cp /etc/letsencrypt/live/your_domain_here/privkey.pem /etc/turnservercerts
sudo chown turnserver:turnserver /etc/turnservercerts -R
sudo chmod 600 /etc/turnservercerts -R
</code></pre></div>
<p dir="auto">Either way you go, you will then add these two lines to the config file (with paths to the original key files if you went for the first "run as root" option):</p>
<div data-snippet-clipboard-copy-content="pkey=/etc/turnservercerts/privkey.pem
cert=/etc/turnservercerts/fullchain.pem"><pre><code>pkey=/etc/turnservercerts/privkey.pem
cert=/etc/turnservercerts/fullchain.pem
</code></pre></div>
<p dir="auto">Save the changes, then restart coturn:</p>
<div data-snippet-clipboard-copy-content="sudo systemctl restart coturn"><pre><code>sudo systemctl restart coturn
</code></pre></div>
<p dir="auto">Now let's try with <code>TURN:your_domain_name:5349</code> in the STUN or TURN URI box, turnuser in the username box and turn456 in the password box:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/lvidgen/WebRTC/blob/master/FOSS_TURN_Server/images/turn5349.png"><img src="https://github.com/lvidgen/WebRTC/raw/master/FOSS_TURN_Server/images/turn5349.png" alt="alt text" title="TURN connecting to TLS port 5349"></a></p>
<p dir="auto">If this all looks good, it's time to edit our web app to point it at our coturn server.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">10. Point your web app at your coturn server</h3><a id="user-content-10-point-your-web-app-at-your-coturn-server" aria-label="Permalink: 10. Point your web app at your coturn server" href="#10-point-your-web-app-at-your-coturn-server"></a></p>
<p dir="auto">PeerJS gives us the option to specify the STUN and TURN servers that we want to use when we are connecting to our PeerJS server. At the moment, our index.html creates a Peer object like this:</p>
<div data-snippet-clipboard-copy-content="peer = new Peer(getById(&quot;myid&quot;).value,
                  {host: &quot;your_domain_name&quot;,
                   port: 9000,
                   key: &quot;peerjs&quot;,
                   secure: true,
                   path: &quot;/myapp&quot;
                  });"><pre><code>peer = new Peer(getById("myid").value,
                  {host: "your_domain_name",
                   port: 9000,
                   key: "peerjs",
                   secure: true,
                   path: "/myapp"
                  });
</code></pre></div>
<p dir="auto">We want to change that to this:</p>
<div data-snippet-clipboard-copy-content="peer = new Peer(getById(&quot;myid&quot;).value,
		  {host: &quot;your_domain_name&quot;,
        port: 9000,
        key: &quot;peerjs&quot;,
        secure: true,
        path: &quot;/myapp&quot;,
		config: {
            iceServers: [
                {
                    urls: &quot;stun:your_domain_name:5349&quot;,
               },
                {
                    urls: &quot;turn:your_domain_name:5349&quot;,
                    username: &quot;turnuser&quot;,
                    credential: &quot;turn456&quot;
               }]
			   }
		  });"><pre><code>peer = new Peer(getById("myid").value,
		  {host: "your_domain_name",
        port: 9000,
        key: "peerjs",
        secure: true,
        path: "/myapp",
		config: {
            iceServers: [
                {
                    urls: "stun:your_domain_name:5349",
               },
                {
                    urls: "turn:your_domain_name:5349",
                    username: "turnuser",
                    credential: "turn456"
               }]
			   }
		  });
</code></pre></div>
<p dir="auto">Save your changes, reload your webpages and try getting connected - everything should be working as before, which means we only have one thing left to do...</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">11. Add some authentication</h3><a id="user-content-11-add-some-authentication" aria-label="Permalink: 11. Add some authentication" href="#11-add-some-authentication"></a></p>
<p dir="auto">Security-wise, The problem with the above is fairly obvious - our username and password (credential) is in the JavaScript and there in plain text for everybody to see, which means that anybody could use the above configuration in their app, piggybacking off your TURN server. It's kind of a limitation of WebRTC in general, but there are a couple of things we can do to mitigate the problem.</p>
<p dir="auto">Coturn allows authentication via REST API that generates a time sensitive username and password (more details can be found in <a href="https://datatracker.ietf.org/doc/html/draft-uberti-behave-turn-rest-00" rel="nofollow">Justin Uberti's Internet-Draft</a>), so we can use the <a href="https://github.com/ezrarieben/coturn-credential-api">coturn-credential-api</a> to generate time sensitive credentials in a format understood by Coturn.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Install the API files</h4><a id="user-content-install-the-api-files" aria-label="Permalink: Install the API files" href="#install-the-api-files"></a></p>
<p dir="auto">We're going to need to unzip the zip file, so we might as well install unzip now:</p>

<p dir="auto">Go to your web directory, get the file, unzip it and move the utility files to a top-level folder called creds:</p>
<div data-snippet-clipboard-copy-content="cd /var/www/html
wget https://github.com/ezrarieben/coturn-credential-api/archive/main.zip
unzip main.zip
sudo mv coturn-credential-api-main/public creds"><pre><code>cd /var/www/html
wget https://github.com/ezrarieben/coturn-credential-api/archive/main.zip
unzip main.zip
sudo mv coturn-credential-api-main/public creds
</code></pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">Configure the API to work with coturn</h4><a id="user-content-configure-the-api-to-work-with-coturn" aria-label="Permalink: Configure the API to work with coturn" href="#configure-the-api-to-work-with-coturn"></a></p>
<p dir="auto">First thing we need to do is generate a private and public key. For this example, I'll be using these:
public: Z8e8mjfuHP3wipwGXNydqm4YJ
private: QCi3oHmnTuKhVE9hiyL5UpfUd</p>
<p dir="auto">Open up <code>config.inc.php</code> in your creds folder and paste in the values:</p>
<div data-snippet-clipboard-copy-content="define('TURN_AUTH_SECRET', &quot;your_private_key_here&quot;); // Auth secret defined in CoTURN server config
define('CREDENTIAL_TTL', 86400); // TTL of credentials in seconds
define('ALLOWED_API_KEYS', array(
    'your_public_key_here'
));"><pre><code>define('TURN_AUTH_SECRET', "your_private_key_here"); // Auth secret defined in CoTURN server config
define('CREDENTIAL_TTL', 86400); // TTL of credentials in seconds
define('ALLOWED_API_KEYS', array(
    'your_public_key_here'
));
</code></pre></div>
<p dir="auto">Now we need to add the private key to <code>/etc/turnserver.conf</code> and comment out the line that allows for static user credentials:</p>
<div data-snippet-clipboard-copy-content="#user=turnuser:turn456
static-auth-secret=your_private_key_here"><pre><code>#user=turnuser:turn456
static-auth-secret=your_private_key_here
</code></pre></div>
<p dir="auto">Save the changes and do a <code>sudo systemctl restart coturn</code> to restart the server with the new configuration.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Set up the server to serve php files</h4><a id="user-content-set-up-the-server-to-serve-php-files" aria-label="Permalink: Set up the server to serve php files" href="#set-up-the-server-to-serve-php-files"></a></p>
<p dir="auto">The coturn-credential-api is written in php. Some Linux distributions come with php installed, but the Oracle version of Ubuntu does not, so we're going to have to install it. To save further installations later, well install the version that works with nginx. We check which version of php is available in your respository:</p>

<p dir="auto">At the time of writing, it was 7.4, so we want php7.4-fpm (you can read about fpm <a href="https://php-fpm.org/" rel="nofollow">here</a>):</p>
<div data-snippet-clipboard-copy-content="sudo apt install php7.4-fpm"><pre><code>sudo apt install php7.4-fpm
</code></pre></div>
<p dir="auto">Now we need to edit the nginx configuration to work with php and fpm.</p>
<div data-snippet-clipboard-copy-content="sudo nano /etc/nginx/sites-available/default"><pre><code>sudo nano /etc/nginx/sites-available/default
</code></pre></div>
<p dir="auto">Scroll down to the server config block where the server_name has been set by Certbot and add index.php to the list so that it reads like this:</p>
<blockquote>
<p dir="auto">index index.php index.html index.htm index.nginx-debian.html;</p>
</blockquote>
<p dir="auto">In the same block, remove the comments from the section titled "# pass PHP scripts to FastCGI server" so that it looks like this:</p>
<div data-snippet-clipboard-copy-content="location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }"><pre><code>location ~ \.php$ {
                include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
                fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        }
</code></pre></div>
<p dir="auto">Save your changes and reload nginx and php:</p>
<div data-snippet-clipboard-copy-content="sudo systemctl restart nginx
sudo systemctl reload php7.4-fpm"><pre><code>sudo systemctl restart nginx
sudo systemctl reload php7.4-fpm
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">12. Edit the web app</h3><a id="user-content-12-edit-the-web-app" aria-label="Permalink: 12. Edit the web app" href="#12-edit-the-web-app"></a></p>
<p dir="auto">Time for one last edit on our index.html file. For clarity, we're going to rewrite the entire <code>getById("sub_id_btn").onclick</code> function, which should now look like this:</p>
<div data-snippet-clipboard-copy-content="getById(&quot;sub_id_btn&quot;).onclick = function() {
      let myname = getById(&quot;myid&quot;).value,
        params = {
            username: myname,
            key: &quot;your_public_key_here&quot;,
        },

        options = {
            method: &quot;POST&quot;,
            body: new URLSearchParams(params),
        };

    fetch(&quot;https://your_domain_name/creds/&quot;, options)
        .then(response => response.json())
        .then(data => {
            let creds = data.data;
            peer = new Peer(myname, {
                host: &quot;your_domain_name&quot;,
                port: 8999,
                key: &quot;peerjs&quot;,
                secure: true,
                path: &quot;/myapp&quot;,
                config: {
                    iceServers: [{
                            urls: &quot;stun:your_domain_name:5349&quot;,
                        },
                        {
                            urls: &quot;turn:your_domain_name:5349&quot;,
                            username: creds.username,
                            credential: creds.password
                        }
                    ]
                }
            });

            getById(&quot;id_div&quot;).style.display = &quot;none&quot;;
            getById(&quot;peer_id&quot;).style.display = &quot;block&quot;;
            peer.on('connection', function(conn) {
                setConnection(conn);
            });

            getById(&quot;sub_peer_btn&quot;).onclick = function() {
                conn = peer.connect(getById(&quot;peerid&quot;).value);
                conn.on('open', function() {
                    setConnection(conn);
                });
            }
        });
}"><pre><code>getById("sub_id_btn").onclick = function() {
      let myname = getById("myid").value,
        params = {
            username: myname,
            key: "your_public_key_here",
        },

        options = {
            method: "POST",
            body: new URLSearchParams(params),
        };

    fetch("https://your_domain_name/creds/", options)
        .then(response =&gt; response.json())
        .then(data =&gt; {
            let creds = data.data;
            peer = new Peer(myname, {
                host: "your_domain_name",
                port: 8999,
                key: "peerjs",
                secure: true,
                path: "/myapp",
                config: {
                    iceServers: [{
                            urls: "stun:your_domain_name:5349",
                        },
                        {
                            urls: "turn:your_domain_name:5349",
                            username: creds.username,
                            credential: creds.password
                        }
                    ]
                }
            });

            getById("id_div").style.display = "none";
            getById("peer_id").style.display = "block";
            peer.on('connection', function(conn) {
                setConnection(conn);
            });

            getById("sub_peer_btn").onclick = function() {
                conn = peer.connect(getById("peerid").value);
                conn.on('open', function() {
                    setConnection(conn);
                });
            }
        });
}
</code></pre></div>
<p dir="auto">If you can get a connection, we're basically done.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">13. Tightening and tidying</h3><a id="user-content-13-tightening-and-tidying" aria-label="Permalink: 13. Tightening and tidying" href="#13-tightening-and-tidying"></a></p>
<p dir="auto">The above is a fairly minimal example, but in real life you wouldn't stop here - there are a couple of things you would want to look at before you would be comfortable leaving this running unattended.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Authentication</h4><a id="user-content-authentication" aria-label="Permalink: Authentication" href="#authentication"></a></p>
<p dir="auto">This app is designed with ad-hoc connections in mind, where a user chooses their own username and just connects without an account. This necessarily exposes the credentials mechanism in the JavaScript. The coturn server allows for a range of more robust database-based authentication methods that would involve creating accounts, etc.</p>
<p dir="auto">What we have in place now prevents abuse in that it doesn't expose login details for your TURN server that can be used for longer than 24 hours (this time limit can be set in the credentaials API <code>config.inc.php</code> file), so a super-naive "bad actor" would have to come back to the app once a day to get new credentials. A slightly more sophisticated bad actor could just include the "fetch" function in their own code and authenticate that way. A simple way to prevent that kind of abuse would be to edit the line in the <code>index.php</code> file of the credentials API to not accept cross-origin resource sharing (CORS), or restrict it to certain domains. The PeerJS server also has a CORS option that you can stipulate when starting the server.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Security list and Firewall</h4><a id="user-content-security-list-and-firewall" aria-label="Permalink: Security list and Firewall" href="#security-list-and-firewall"></a></p>
<p dir="auto">We opened a bunch of ports for testing that we don't really need open any more and best practice would be to close them, both on the server's security list and in iptables. For the above setup, all we really need open is:</p>
<ul dir="auto">
<li>22 for SSH communication</li>
<li>443 for web traffic</li>
<li>9000 for the peerJS server</li>
<li>5349 for the Coturn listening port</li>
<li>49152-65535 for Coturn relay ports</li>
</ul>
<p dir="auto">Everything else can be shut down.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DIY PTP Grandmaster Clock with a Raspberry Pi (103 pts)]]></title>
            <link>https://www.jeffgeerling.com/blog/2025/diy-ptp-grandmaster-clock-raspberry-pi</link>
            <guid>43510036</guid>
            <pubDate>Fri, 28 Mar 2025 21:37:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.jeffgeerling.com/blog/2025/diy-ptp-grandmaster-clock-raspberry-pi">https://www.jeffgeerling.com/blog/2025/diy-ptp-grandmaster-clock-raspberry-pi</a>, See on <a href="https://news.ycombinator.com/item?id=43510036">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><blockquote>
  <p><strong>tl;dr</strong>: I set up an open source <a href="https://github.com/geerlingguy/time-pi">Time Pi project</a> to build a stratum 1 PTP and NTP timeserver using a Raspberry Pi.</p>
</blockquote>

<p>Time is important to modern society, and most of us have a clock on our wrist that's more accurate than at any time in human history. But <em>highly precise</em> time is important in many industries, especially robotics, finance, and media production. And with tech like VR working its way into homes, precise time may become more important <em>there</em>, too.</p>

<p>The timing industry has many solutions for 'grandmaster' clocks, which take in highly accurate time from GPS, GNSS, or other atomic-clock-backed time sources, and distribute it to local networks with <em>extreme</em> precision—down to the nanosecond range—using PTP.</p>

<p><img src="https://www.jeffgeerling.com/sites/default/files/images/time-pi-raspberry-pi-clock-masterclock-mini-rack.jpeg" width="700" height="394" data-insert-type="image" data-entity-type="file" data-entity-uuid="insert-image-3a21eb4e-9957-4419-9c46-9474aa878893" data-insert-attach="{&quot;id&quot;:&quot;3a21eb4e-9957-4419-9c46-9474aa878893&quot;,&quot;attributes&quot;:{&quot;alt&quot;:[&quot;alt&quot;,&quot;description&quot;],&quot;title&quot;:[&quot;title&quot;]}}" alt="Time Pi - Raspberry Pi Time Grandmaster Clock in mini rack with Masterclock NTP clock"></p>

<p>Historically, setting up a DIY PTP grandmaster clock server was a painful and expensive endeavor, pricing out most hobbyists. So I'm introducing a project that's been in the works for some time: <a href="https://github.com/geerlingguy/time-pi">Time Pi</a>, a stratum 1 PTP and NTP timeserver based on a Raspberry Pi 5.</p>

<p>In the picture above, it is installed inside a <a href="https://github.com/JaredC01/LabStack">LabStack module</a> inside a 3U RackMate TT (an as-yet-unreleased version of DeskPi's mini racks—I'm working with them on ironing out the design). I have powered it using a PoE to USB-C power splitter, from my <a href="https://amzn.to/4jbsD9B">GigaPlus 2.5 Gbps PoE+ switch</a>.</p>

<h2>Video</h2>

<p>I'm lucky to live in the same city as <a href="https://www.masterclock.com/">Masterclock</a>, a timing solutions company that's been manufacturing time servers and clocks for most of my life.</p>

<p>I've been discussing my project with them for over a year, and they provided me two PoE-powered NTP clocks for the studio, and for my testing with the Time Pi (the analog/digital hybrid clock is pictured above, and a 1U rackmount clock is pictured below):</p>

<p><img src="https://www.jeffgeerling.com/sites/default/files/images/time-pi-1u-masterclock-rackmount-clock.jpeg" width="700" height="394" data-insert-type="image" data-entity-type="file" data-entity-uuid="insert-image-6822805d-4338-4642-bfee-4e1bc1684fbc" data-insert-attach="{&quot;id&quot;:&quot;6822805d-4338-4642-bfee-4e1bc1684fbc&quot;,&quot;attributes&quot;:{&quot;alt&quot;:[&quot;alt&quot;,&quot;description&quot;],&quot;title&quot;:[&quot;title&quot;]}}" alt="Time Pi - 1U Masterclock rackmount clock"></p>

<p>Dr. Demetrios Matsakis, formerly the Chief Scientist for the US Naval Observatory (which helps coordinate the time in UTC!), is now Masterclock's Chief Scientist. He and John Clark (the CTO) were gracious enough to visit my studio and chat with me about <em>their</em> new time server, the GMR6000, and about time and DIY solutions.</p>

<p><img src="https://www.jeffgeerling.com/sites/default/files/images/jeff-geerling-masterclock-demetrios-matsakis-studio.jpeg" width="700" height="500" data-insert-type="image" data-entity-type="file" data-entity-uuid="insert-image-87684044-97ff-4c85-9c3e-8c5832102da6" data-insert-attach="{&quot;id&quot;:&quot;87684044-97ff-4c85-9c3e-8c5832102da6&quot;,&quot;attributes&quot;:{&quot;alt&quot;:[&quot;alt&quot;,&quot;description&quot;],&quot;title&quot;:[&quot;title&quot;]}}" alt="Dr. Demetrios Matsakis with Jeff Geerling in studio"></p>

<p>(Special thanks to <a href="https://www.superdogco.com/">Dave Bour</a> for providing the photo above.)</p>

<p>A video I published on my YouTube channel includes my conversations with them (and a lot more detail about the Time Pi). You can watch it below:</p>

<div>
<p><iframe src="https://www.youtube.com/embed/zT71UvUxhjU" frameborder="0" allowfullscreen=""></iframe></p>
</div>

<h2>Time Pi</h2>

<p>Assuming you don't want to watch the full video, I'll also describe the hardware itself here—as it is built around the <a href="https://www.tindie.com/products/timeappliances/timehat-i226-nic-with-pps-inout-for-rpi5/">TimeHAT from TimeAppliances</a>.</p>

<p>The TimeHAT is a $200 HAT for the Pi 5 which includes an Intel i226 2.5 Gbps NIC with PTP hardware timestamping support. There are two SMA connectors for PPS in/out (configurable), an extra U.fl connector to another PPS port on the NIC, and an M.2 slot routed for a custom GPS module.</p>

<p><img src="https://www.jeffgeerling.com/sites/default/files/images/time-pi-alone.jpeg" width="700" height="394" data-insert-type="image" data-entity-type="file" data-entity-uuid="insert-image-58a559fe-81f2-4305-afd2-1c4b5ca56833" data-insert-attach="{&quot;id&quot;:&quot;58a559fe-81f2-4305-afd2-1c4b5ca56833&quot;,&quot;attributes&quot;:{&quot;alt&quot;:[&quot;alt&quot;,&quot;description&quot;],&quot;title&quot;:[&quot;title&quot;]}}" alt="Time Pi TimeHAT with GPS Module in Mini Rack LabStack module"></p>

<p>The slot is a little interesting, it's described as an "OCP M.2 GNSS 2242 Slot", and it follows the <a href="https://www.opencompute.org/documents/m-2-sync-module-ocp-base-specification-1-1-pdf">M2 Sync Module Form Factor</a> from the Open Compute Project. Right now I can only find one commercially-available option: <a href="https://www.tindie.com/products/timeappliances/ocp-m2-neo-m9n-gnss/">OCP M.2 Neo-M9N GNSS</a>, a $195 add-on with a timing-focused u-blox GPS module.</p>

<p>The HAT interfaces with the Pi 5 through both PCIe (for the Intel i226 NIC), and GPIO (for GPS communications and configuration).</p>

<p>I <em>have</em> had some hardware issues with the i226 NIC, but it doesn't seem like those issues are related to either the TimeHAT <em>or</em> the Pi, but rather, Intel's Linux drivers. It seems like both the i225 and i226 have various strange issues, and the main one I ran into is <a href="https://github.com/geerlingguy/time-pi/issues/3">it <em>won't work at 2.5 Gbps, but does at 1 Gbps</em></a>.</p>

<p>On the software side, I configure everything (Chrony, NTP, and PTP) with Ansible. Raspberry Pi OS / Debian is the base OS, which makes configuring all the appropriate software easy. Linux has a pretty robust set of timing-related libraries and packages, especially for PTP.</p>

<p>I won't go through the whole setup process in this post—for that, visit the <a href="https://github.com/geerlingguy/time-pi">time-pi repository</a>.</p>

<h2>Conclusion</h2>

<p>My first post and video is about the Time Pi hardware and comparing it to some commercial offerings. It's been running stably as an NTP time server in my studio for months now, and I've even gotten GPS to work for timing when used with a battery near one of the exterior walls.</p>

<p>But I will be following up with more timing-related adventures (to be documented here and on YouTube):</p>

<ul>
<li>Permanently installing an outdoor GPS antenna with my Dad, and exploring ways to combat GPS jamming</li>
<li>Configuring PTP and testing sync across a variety of target devices (including a consumer Intel motherboard!)</li>
<li>Testing various clock options, including diving deeper into Masterclock's own (pictured above)</li>
<li>Making another attempt at getting the Pi to interface with the open source Time Card, with it's chip-scale atomic clock (CSAC) for <em>seriously overkill</em> holdover performance</li>
<li>(Hopefully) building an ensemble clock with Masterclock to see if we can improve overall timing accuracy combining both our clocks together.</li>
</ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[xAI has acquired X, xAI now valued at $80B (740 pts)]]></title>
            <link>https://twitter.com/elonmusk/status/1905731750275510312</link>
            <guid>43509923</guid>
            <pubDate>Fri, 28 Mar 2025 21:23:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/elonmusk/status/1905731750275510312">https://twitter.com/elonmusk/status/1905731750275510312</a>, See on <a href="https://news.ycombinator.com/item?id=43509923">Hacker News</a></p>
Couldn't get https://twitter.com/elonmusk/status/1905731750275510312: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Digital Echoes and Unquiet Minds (158 pts)]]></title>
            <link>https://www.chrbutler.com/digital-echoes-and-unquiet-minds</link>
            <guid>43509548</guid>
            <pubDate>Fri, 28 Mar 2025 20:29:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chrbutler.com/digital-echoes-and-unquiet-minds">https://www.chrbutler.com/digital-echoes-and-unquiet-minds</a>, See on <a href="https://news.ycombinator.com/item?id=43509548">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

        

<h2>
There’s a psychological burden of digital life even heavier than distraction.
</h2>
<p><img src="https://cdn.blot.im/blog_a7eb7cf1ab024efcb17c380ef69c53f4/_image_cache/4fb32547-b9dc-4792-a37b-52de90caa249.svg" width="800" height="650">
</p>
<p>
When the iPhone was first introduced in 2007, the notion of an “everything device” was universally celebrated. A single object that could serve as phone, camera, music player, web browser, and so much more promised unprecedented convenience and connectivity. It was, quite literally, the dream of the nineties. But the better part of twenty years later, we’ve gained enough perspective to recognize that this revolutionary vision came with costs we did not anticipate.
</p>
<p>
Distraction, of course, is the one we can all relate to first. An everything device has the problem of being useful nearly all the time, and when in use, all consuming. When you use it to do one thing, it pushes you toward others. In order to avoid this, you must disable functions. That’s an interesting turn of events, isn’t it? We have made a thing that does more than we need, more often than we desire. Because system-wide, duplicative notifications are enabled by default, the best thing you could say about the device’s design is that it lacks a point of view toward a prioritization of what it does. The worst thing you could say is that it is distracting <em>by design</em>.
</p>
<p>
(I find it fascinating how many people –&nbsp;myself included — attempt to reduce the features of their smartphone to the point of replicating a “dumbphone” experience in order to save ourselves from distraction, but don’t actually go so far as to use a lesser-featured phone because a few <em>key</em> features are just too good to give up. A dumbphone is less distracting, but a nightmare for text messaging and a lousy camera. It turns out I don’t want a <em>phone</em> at all, but a camera that texts — and ideally one smaller than anything on the market now. I know I’m not alone, and yet this product will not be made. )
</p>
<p>
This kind of distraction is <em>direct</em> distraction. It’s the kind we are increasingly aware of, and as its accumulating stress puts pressure on our inner and outer lives, we can combat it with various choices and optimizations. But there is another kind of distraction that is less direct, though just as cumulative and, I believe, just as toxic. I’ve come to think of it as the “digital echo.”
</p>
<p>
On a smartphone, every single thing it is used to do generates information that goes elsewhere. The vast majority of this is unseen — though not unfelt — by us. Everyone knows that there is no privacy within a digital device, nor within its “listening” range. We are all aware that as much information as smartphone provides to us, exponentially more is generated for someone else — someone watching, listening, measuring, and monetizing. The “digital echo” is more than just the awareness of this; it is the cognitive burden of knowing that our actions generate data elsewhere. The echo exists whenever we use connected technology, creating a subtle but persistent awareness that what we do isn’t just our own. A device like a smartphone has always generated a “digital echo”, but many others are as well.
</p>
<p>
Comparing two different motor vehicles illustrates this well. In a car like a Tesla, which we might think of as a “smartcar” since it’s a computer you can drive, <em>every</em> function produces a digital signal. Adjusting the air conditioning, making a turn, opening a door — the car knows and records it all, transmitting this information to distant servers. By contrast, my 15-year-old Honda performs all of its functions without creating these digital echoes. The operations remain private, existing only in the moment they occur. In our increasingly digital world, I have begun to feel the SCIF-like isolation of the cabin of my car, and I like it.
</p>
<p>
(The “smartcar”, of course, won’t remain simply a computer you can drive. The pinnacle “smartcar” drives itself. The self-driving car represents perhaps the most acute expression of how digital culture values attention and convenience above all else, especially control and ownership. As a passenger of a self-driving car, you surrender control over the vehicle’s operation in exchange for the “freedom” to direct your attention elsewhere, most likely to some digital signal either on your own device or on screens within the vehicle. I can see the value in this; driving can be boring and most times I am behind the wheel I’d rather be doing something else. But currently, truly autonomous vehicles are service-enabling products like Waymo, meaning we also relinquish ownership. The benefits of that also seem obvious: no insurance premiums, no maintenance costs. But not every advantage is worth its cost. The economics of self-driving cars are not clear-cut. There’s a real debate to be had about
attention, convenience, and ownership that I hope will play out before we have no choice but to be a passenger in someone else’s machine.)
</p>
<p>
When I find myself looking for new ways to throttle my smartphone’s functions, or when I sit in the untapped isolation of my car, I often wonder about the costs of the “digital echo.” What is the psychological cost of knowing that your actions aren’t just your own, but create information that can be observed and analyzed by others? As more aspects of our lives generate digital echoes, they force an ambient awareness of being perpetually witnessed rather than simply existing.
</p>
<p>
This transforms even solitary activities into implicit social interactions. It forces us to maintain awareness of our “observed self” alongside our “experiencing self,” creating a kind of persistent self-consciousness. We become performers in our own lives rather than merely participants.
</p>
<p>
I think this growing awareness contributes to a growing interest in returning to single-focus devices and analog technologies. Record players and film cameras aren’t experiencing resurgence merely from nostalgia, but because they offer fundamentally different relationships with media — relationships characterized by intention, presence, and focus.
</p>
<p>
In my own life, this recognition has led to deliberate choices about which technologies to embrace and which to avoid. Here are three off the top of my head:
</p>
<ul>
<li>
Replacing streaming services with owned media formats (CDs, Blu-rays) that remain accessible on my terms, not subject to platform changes or content disappearance
</li>
<li>
Preferring printed books while using dedicated e-readers for digital texts — in this case, accepting certain digital echoes when the benefits (in particular, access to otherwise unavailable material) outweigh the costs
</li>
<li>
Rejecting smart home devices entirely, recognizing that their convenience rarely justifies the added complexity and surveillance they introduce
</li>
</ul>
<p>
You’ve probably made similarly-motivated decisions, perhaps in other areas of your life or in relation to other things entirely. What matters, I think, is that these choices aren’t about rejecting technology but about creating spaces for more intentional engagement. They represent a search for balance in a world that increasingly defaults to maximum connectivity.
</p>
<p>
I had a conversation recently with a friend who mused, “What are these the early days of?” What a wonderful question that is; we are, I hope, always living in the early days of something. Perhaps now, we’re witnessing the beginning of a new phase in our relationship with technology. The initial wave of digital transformation prioritized connecting everything possible; the next wave may be more discriminating about what should be connected and what’s better left direct and immediate. I hope to see operating systems truly designed around focus rather than multitasking, interfaces that respect attention rather than constantly competing for it, and devices that serve discrete purposes exceptionally well instead of performing multiple functions adequately.
</p>
<p>
The digital echoes of our actions will likely continue to multiply, but we can choose which echoes we’re willing to generate and which activities deserve to remain ephemeral — to exist only in the moment they occur and then in the memories of those present. What looks like revision or retreat may be the next wave of innovation, borne out of having learned the lessons of the last few decades and desiring better for the next.
</p>
        
        
        <hr>
        <p><span color="grey"><small>Written by Christopher Butler on</small></span></p><p>March 28, 2025</p> &nbsp;
        
        
        <p><span color="grey"><small>Tagged</small></span></p><a href="https://www.chrbutler.com/tagged/essays"><p>Essays</p></a>
        <hr>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Swiftly 1.0 (168 pts)]]></title>
            <link>https://swift.org/blog/introducing-swiftly_10/</link>
            <guid>43509546</guid>
            <pubDate>Fri, 28 Mar 2025 20:29:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://swift.org/blog/introducing-swiftly_10/">https://swift.org/blog/introducing-swiftly_10/</a>, See on <a href="https://news.ycombinator.com/item?id=43509546">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="main">
<article>
  <header>
    

    <time pubdate="" datetime="2025-03-28T02:00:00-04:00">March 28, 2025</time>
    
  </header>

  <p>Today we’re delighted to introduce the first stable release of swiftly, a Swift version manager that takes the pain out of installing, managing and updating your Swift toolchain.</p>

<p>The latest version of Swift is bundled with Xcode for writing apps for Apple platforms. But perhaps you want to install Swift on a different platform like Linux, or use a different version of the toolchain for building services or command line tools. Downloading, extracting and installing a trusted build of Swift along with the relevant dependencies for your operating system can require quite a few manual and error-prone steps.</p>

<p>swiftly has been around for some years as a community-supported tool for Swift developers using Linux. With this release, we’re officially supporting it as part of the core Swift toolchain, including hosting it as part of the <a href="https://github.com/swiftlang">Swift GitHub organization</a>. We’ve also added macOS support to make it easier to install Swift separately from Xcode.</p>



<p>swiftly is the best tool to install the standalone toolchain, providing commands to install Swift on a new system, update to the latest stable version, and experiment or test with nightly snapshots or older versions. It also makes it easy to switch effortlessly between multiple installed toolchains. You can even add a file to your project repository so swiftly will use the same toolchain version for all members of your development team.</p>

<p>Naturally, swiftly itself is written in Swift, and is able to update itself to the latest version.</p>



<p>Let’s take a look at some of the features of swiftly!</p>

<p>To get started, visit <a href="https://swift.org/install">swift.org/install</a> and install it.</p>

<p>swiftly will provide directions after installation if there are any system packages, or shell commands needed for smooth operation of the new toolchain.</p>

<p>The latest Swift toolchain is installed as the default, so you can immediately use it to start a new project. For example:</p>



<p>The <code>swiftly use</code> command selects the default toolchain for Swift commands (e.g. <code>swift test</code>, <code>swift build</code>):</p>

<div><pre><code>$ swiftly use 6.0.3
$ swift --version
--
Apple Swift version 6.0.3 (swiftlang-6.0.3.1.2 clang-1600.0.28.6)
Target: arm64-apple-macosx15.0
</code></pre></div>

<p>At a later point, if there’s a new release of Swift you can install it alongside the existing toolchain with the <code>latest</code> command:</p>



<p>Pre-release of versions of Swift are available, including nightly “snapshot” toolchains. They can be easily listed using swiftly:</p>

<div><pre><code>$ swiftly list-available main-snapshot
--
Available main development snapshot toolchains
----------------------------------------------
main-snapshot-2025-03-25
...
</code></pre></div>

<p>Once you’ve identified a snapshot toolchain, it can be installed using its name:</p>

<div><pre><code>$ swiftly install main-snapshot-2025-03-25
--
Installing main-snapshot-2025-03-25
</code></pre></div>

<p>Another way to temporarily use a specific version of Swift is to use the special ‘+’ selector. With this syntax, you don’t need to first switch to a different toolchain:</p>

<div><pre><code>$ swiftly run lldb +main-snapshot-2025-03-25
--
(lldb) _
</code></pre></div>

<p>If you’re building a SwiftPM project in a team setting and want to enforce a common version of the Swift toolchain on all contributors, simply create a <code>.swift-version</code> file in the root of your project folder with the desired version (e.g. “6.0.3”).</p>

<p>As swiftly is updated with new features and bug fixes, you can run <code>swiftly self-update</code> to check and install new releases.</p>



<p>By writing swiftly in Swift, we’re able to take advantage of the language’s features, support, and ecosystem of related projects. Swift comes with standard library features for working with the filesystem in its <a href="https://developer.apple.com/documentation/foundation/">Foundation</a> module. For network operations <a href="https://github.com/swift-server/async-http-client">Async HTTP Client</a> is there to work the HTTP requests. And to retrieve the latest Swift release, swiftly uses the <a href="https://github.com/apple/swift-openapi-generator">Swift OpenAPI</a> plugin to generate the code to interact with the <a href="http://swift.org/">swift.org</a>  website. Lastly, it takes advantage of Swift’s interoperability with C to use the existing libarchive library to work with archives. swiftly uses libarchive to extract the toolchains downloaded from the Swift website and the integration is simple.</p>

<p>It can be challenging to build shell programs that work well across multiple platforms with minimal system dependencies; this motivated us to switch swiftly away from using a shell program to install it and become a self-installing binary application. swiftly has access to excellent argument parsing capabilities, beautiful <code>--help</code> screens, and the full standard library.</p>

<p>The only remaining problem was being able to deliver the operating system and processor architecture specific binary to the users system with simplicity. The <a href="http://swift.org/">swift.org</a> website helps with operating system detection, but it cannot reliably detect the Linux distribution. Luckily, there is the <a href="https://www.swift.org/documentation/articles/static-linux-getting-started.html">Swift Static Linux SDK</a> that makes binaries that work with a wide range of distributions. The processor architecture can be determined on most unixes using <code>uname -m</code> . The result of all of this is the simplicity of a copy and paste from the website to your terminal and get started with Swift.</p>



<p>Moving forward, swiftly will become the default way to install Swift outside of Xcode. The initial version supports macOS and a variety of Linux distributions, including Ubuntu, Debian, Fedora, Red Hat Enterprise Linux and Amazon Linux.</p>

<p>The <a href="https://swift.org/swiftly/documentation/swiftlydocs/">swiftly documentation</a> provides further information about <a href="https://swift.org/swiftly/documentation/swiftly/automated-install">using swiftly in a CI/CD environment</a>, as well as setting proxy servers and custom install locations for enterprise environments. swiftly is an open source project, and so you can raise new issues or contribute pull requests at its <a href="https://github.com/swiftlang/swiftly">GitHub repository</a>. You can also <a href="https://forums.swift.org/tag/swiftly">ask questions or discuss swiftly on the Swift Forums</a>.</p>

<p>Special thanks to Patrick Freed for creating swiftly, contributing it to the Swift organization, and his continued contributions to this valuable tool. The community is what makes Swift amazing!</p>



  
</article>
</div></div>]]></description>
        </item>
    </channel>
</rss>