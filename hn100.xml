<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 15 Dec 2024 23:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Palm's CEO emails Steve Jobs (2007) (205 pts)]]></title>
            <link>https://twitter.com/TechEmails/status/1868368310024462791</link>
            <guid>42425348</guid>
            <pubDate>Sun, 15 Dec 2024 19:21:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/TechEmails/status/1868368310024462791">https://twitter.com/TechEmails/status/1868368310024462791</a>, See on <a href="https://news.ycombinator.com/item?id=42425348">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: How do you find part time work? (148 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=42425339</link>
            <guid>42425339</guid>
            <pubDate>Sun, 15 Dec 2024 19:20:19 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=42425339">Hacker News</a></p>
Couldn't get https://news.ycombinator.com/item?id=42425339: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: SmartHome – An Adventure Game (153 pts)]]></title>
            <link>https://smarthome.steviep.xyz</link>
            <guid>42424508</guid>
            <pubDate>Sun, 15 Dec 2024 17:05:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://smarthome.steviep.xyz">https://smarthome.steviep.xyz</a>, See on <a href="https://news.ycombinator.com/item?id=42424508">Hacker News</a></p>
Couldn't get https://smarthome.steviep.xyz: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[SVC16: Simplest Virtual Computer (139 pts)]]></title>
            <link>https://github.com/JanNeuendorf/SVC16</link>
            <guid>42424370</guid>
            <pubDate>Sun, 15 Dec 2024 16:39:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/JanNeuendorf/SVC16">https://github.com/JanNeuendorf/SVC16</a>, See on <a href="https://news.ycombinator.com/item?id=42424370">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">The Simplest Virtual Computer (16 bit)</h2><a id="user-content-the-simplest-virtual-computer-16-bit" aria-label="Permalink: The Simplest Virtual Computer (16 bit)" href="#the-simplest-virtual-computer-16-bit"></a></p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/JanNeuendorf/SVC16/blob/main/logo_alpha.png"><img src="https://github.com/JanNeuendorf/SVC16/raw/main/logo_alpha.png" alt="Logo" width="200"></a>
  </p>
This is the specification for an extremely simple "virtual computer" that can be emulated.
<p dir="auto">The goal in one word is <strong>simplicity</strong>. It should be simple to understand every instruction, to write machine code that runs on it, and to write a compiler for it.</p>
<p dir="auto">The instruction set and the design in general are in no way meant to resemble something that would make sense in real hardware.
It is also not intended to be as simple and elegant as it could possibly be.</p>
<p dir="auto">This repo contains an emulator to run games or programs. It can be installed with cargo:</p>
<div dir="auto" data-snippet-clipboard-copy-content="cargo install --git https://github.com/JanNeuendorf/SVC16"><pre>cargo install --git https://github.com/JanNeuendorf/SVC16</pre></div>
<p dir="auto">You can then run a program from the cli:</p>
<div dir="auto" data-snippet-clipboard-copy-content="svc16 /path/to/my_rom.svc16"><pre>svc16 /path/to/my_rom.svc16</pre></div>
<p dir="auto">Use <code>--help</code> to see some basic options.</p>
<p dir="auto">I do not want to provide an assembler, any kind of compiler or even any ideas about things like call conventions.
The idea is that you have to build that yourself. You can play a game from the example folder to get an idea of what can be built.</p>
<p><a target="_blank" rel="noopener noreferrer" href="https://github.com/JanNeuendorf/SVC16/blob/main/examples/rectavoiders.gif"><img src="https://github.com/JanNeuendorf/SVC16/raw/main/examples/rectavoiders.gif" alt="Logo" width="500" data-animated-image=""></a>
  </p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Quick Overview</h2><a id="user-content-quick-overview" aria-label="Permalink: Quick Overview" href="#quick-overview"></a></p>
<blockquote>
<p dir="auto"><g-emoji alias="warning">⚠️</g-emoji> <strong>Warning</strong>: Until there are specifications with version 1.0, there could be breaking changes.</p>
</blockquote>
<p dir="auto"><h3 tabindex="-1" dir="auto">No Registers</h3><a id="user-content-no-registers" aria-label="Permalink: No Registers" href="#no-registers"></a></p>
<p dir="auto">There are no CPU registers, just one chunk of memory. Values can be loaded from every memory address and written to every memory address.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Everything is an unsigned 16-bit integer</h3><a id="user-content-everything-is-an-unsigned-16-bit-integer" aria-label="Permalink: Everything is an unsigned 16-bit integer" href="#everything-is-an-unsigned-16-bit-integer"></a></p>
<p dir="auto">Everything is represented as a (le) unsigned 16-bit integer. That includes numbers, addresses, colors, the instruction pointer and the input.
Booleans are represented as u16 values as well: 0 for false and &gt;0 for true. (1 when written as a boolean.)</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Wrapping Arithmetic</h3><a id="user-content-wrapping-arithmetic" aria-label="Permalink: Wrapping Arithmetic" href="#wrapping-arithmetic"></a></p>
<p dir="auto">All numerical operations that will appear in the instructions are wrapping operations. Division by zero crashes the program.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">No Magic Numbers</h3><a id="user-content-no-magic-numbers" aria-label="Permalink: No Magic Numbers" href="#no-magic-numbers"></a></p>
<p dir="auto">The main memory contains one valid address for every u16.
The screen-buffer is the same size as the memory and there is one pixel for every u16.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">No Fluff</h3><a id="user-content-no-fluff" aria-label="Permalink: No Fluff" href="#no-fluff"></a></p>
<p dir="auto">There are as few features as possible.
That means limited input, no sound, no variable display size etc.
It also means that there are no accelerators or tricks to help with performance.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Setup</h3><a id="user-content-setup" aria-label="Permalink: Setup" href="#setup"></a></p>
<p dir="auto">Here is a sketch of all components of the virtual computer:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/JanNeuendorf/SVC16/blob/main/sketch.svg"><img src="https://github.com/JanNeuendorf/SVC16/raw/main/sketch.svg" alt=""></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Instruction pointer</h3><a id="user-content-instruction-pointer" aria-label="Permalink: Instruction pointer" href="#instruction-pointer"></a></p>
<p dir="auto">The instruction pointer represents an address in main memory. It starts as zero. Then, it is manipulated by the instructions. All operations performed on the instruction pointer are wrapping.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Screen</h3><a id="user-content-screen" aria-label="Permalink: Screen" href="#screen"></a></p>
<p dir="auto">The screen has a resolution of <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$256*256=2^{16}$</math-renderer> pixels. The color of each pixel is represented with 16-bits using <code>RGB565</code>. The coordinate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$(x,y)$</math-renderer> of the screen maps to the index <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$256y+x$</math-renderer> in the screen-buffer. The coordinate <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$(0,0)$</math-renderer> is in the upper left-hand corner. Changes to the screen-buffer are not reflected on the screen until the system is synchronized.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Input</h3><a id="user-content-input" aria-label="Permalink: Input" href="#input"></a></p>
<p dir="auto">The only supported inputs are the mouse position and the left and right mouse keys.</p>
<p dir="auto">On synchronization the input on the last frame is loaded into the input-buffer.</p>
<p dir="auto">The <em>position code</em> is the index of the pixel, the mouse is currently on.
The <em>key code</em> is given by left_mouse+2*right_mouse. So it can have the values 0 1 2 or 3.</p>
<p dir="auto">There is no guarantee that the inputs are synced on the next frame. Before the first synchronization, the input codes are zero.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Synchronization</h3><a id="user-content-synchronization" aria-label="Permalink: Synchronization" href="#synchronization"></a></p>
<p dir="auto">When the console executes the <strong>Sync</strong> instruction, the screen-buffer is drawn to the screen.
It is not cleared. The input-buffer is updated.
The system will be put to sleep until the beginning of the next frame.
The targeted timing is 30fps. There is a hard limit of 3000000 instructions per frame.
This means that if the <strong>Sync</strong> command has not be called for 3000000 instructions, it will be performed automatically.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">CPU</h3><a id="user-content-cpu" aria-label="Permalink: CPU" href="#cpu"></a></p>
<p dir="auto">All instructions are 4 values long. A value is, of course, a u16.</p>
<p dir="auto">The instructions have the form <code>opcode arg1 arg2 arg3</code>.</p>
<p dir="auto">In the following table, all instructions are listed. <code>@arg1</code> refers to the value at the memory address <code>arg1</code>.
If the opcode is greater than 15, the system will abort.
If one of the three arguments is not used, it can be set to any value, but it can not be omitted.</p>
<p dir="auto">When the instruction pointer advances, it does so by four positions.</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Opcode</th>
<th>Name</th>
<th>Advances</th>
<th>Effect</th>
</tr>
</thead>
<tbody>
<tr>
<td>0</td>
<td><strong>Set</strong></td>
<td>yes</td>
<td><code>@arg1=arg2</code></td>
</tr>
<tr>
<td>1</td>
<td><strong>GoTo</strong></td>
<td>if skipped</td>
<td><code>if(not @arg3){inst_ptr=@arg1+arg2}</code></td>
</tr>
<tr>
<td>2</td>
<td><strong>Skip</strong></td>
<td>if skipped</td>
<td><code>if(not @arg3){inst_ptr=inst_ptr+4*arg1-4*arg2}</code></td>
</tr>
<tr>
<td>3</td>
<td><strong>Add</strong></td>
<td>yes</td>
<td><code>@arg3=(@arg1+@arg2)</code></td>
</tr>
<tr>
<td>4</td>
<td><strong>Sub</strong></td>
<td>yes</td>
<td><code>@arg3=(@arg1-@arg2)</code></td>
</tr>
<tr>
<td>5</td>
<td><strong>Mul</strong></td>
<td>yes</td>
<td><code>@arg3=(@arg1*@arg2)</code></td>
</tr>
<tr>
<td>6</td>
<td><strong>Div</strong></td>
<td>yes</td>
<td><code>@arg3=(@arg1/@arg2)</code></td>
</tr>
<tr>
<td>7</td>
<td><strong>Cmp</strong></td>
<td>yes</td>
<td><code>@arg3=(@arg1&lt;@arg2)</code> as unsigned</td>
</tr>
<tr>
<td>8</td>
<td><strong>Deref</strong></td>
<td>yes</td>
<td><code>@arg2=@(@arg1+arg3)</code></td>
</tr>
<tr>
<td>9</td>
<td><strong>Ref</strong></td>
<td>yes</td>
<td><code>@(@arg1+arg3)=@arg2</code></td>
</tr>
<tr>
<td>10</td>
<td><strong>Inst</strong></td>
<td>yes</td>
<td><code>@arg1=inst_ptr</code></td>
</tr>
<tr>
<td>11</td>
<td><strong>Print</strong></td>
<td>yes</td>
<td>Writes <code>color=@arg1</code> to <code>index=@arg2</code> of screen-buffer.</td>
</tr>
<tr>
<td>12</td>
<td><strong>Read</strong></td>
<td>yes</td>
<td>Copies <code>index=@arg1</code> of screen-buffer to <code>@arg2</code></td>
</tr>
<tr>
<td>13</td>
<td><strong>Band</strong></td>
<td>yes</td>
<td><code>@arg3=@arg1&amp;@arg2</code></td>
</tr>
<tr>
<td>14</td>
<td><strong>Xor</strong></td>
<td>yes</td>
<td><code>@arg3=@arg1^@arg2</code></td>
</tr>
<tr>
<td>15</td>
<td><strong>Sync</strong></td>
<td>yes</td>
<td>Puts <code>@arg1=position_code</code>,  <code>@arg2=key_code</code> and synchronizes in that order</td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<p dir="auto"><h3 tabindex="-1" dir="auto">Constructing a Program</h3><a id="user-content-constructing-a-program" aria-label="Permalink: Constructing a Program" href="#constructing-a-program"></a></p>
<p dir="auto">A program is really just the initial state of the main memory.
There is no distinction between memory that contains instructions and memory that contains some other asset.
The initial state is loaded from a binary file that is read as containing the (le) u16 values in order. The maximum size is <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$2*2^{16}=$</math-renderer> bytes (<math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$\approx$</math-renderer> 131.1kB).
It can be shorter, in which case the end is padded with zeroes. The computer will begin by executing the instruction at index 0.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example</h2><a id="user-content-example" aria-label="Permalink: Example" href="#example"></a></p>
<p dir="auto">A simple example would be to print all <math-renderer data-static-url="https://github.githubassets.com/static" data-run-id="9313c988a89cc841b7ba2fc21cb7fb02">$2^{16}$</math-renderer> possible colors to the screen.
We make our lives easier, by mapping each index of the screen-buffer to the color which is encoded with the index.
Here, we use the names of the opcodes instead of their numbers.</p>
<div data-snippet-clipboard-copy-content="Set 501 1 0       // Write the value 1 to address 501
Set 502 65535 0   // Write the largest possible value to 502
Print 500 500 0   // Display color=@500 at screen-index=@500
Add 500 501 500   // Increment the color/screen-index
Cmp 500 502 503   // See if we are not at the max number
Xor 503 501 503   // Negate it
Skip 0 4 503      // Unless we are at the max number, go back 4 instructions
Sync 0 0 0        // Sync 
GoTo 0 0 0        // Repeat to keep the window open"><pre><code>Set 501 1 0       // Write the value 1 to address 501
Set 502 65535 0   // Write the largest possible value to 502
Print 500 500 0   // Display color=@500 at screen-index=@500
Add 500 501 500   // Increment the color/screen-index
Cmp 500 502 503   // See if we are not at the max number
Xor 503 501 503   // Negate it
Skip 0 4 503      // Unless we are at the max number, go back 4 instructions
Sync 0 0 0        // Sync 
GoTo 0 0 0        // Repeat to keep the window open
</code></pre></div>
<p dir="auto">We could rely on the fact that the value at index 500 starts at zero and we did not have to initialize it.</p>
<p dir="auto">To build a program that we can execute, we could use python:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import struct

code = [
    0, 501, 1, 0, #Opcodes replaced with numbers
    0, 502, 65535, 0,
    11, 500, 500, 0,
    # ...
]
with open(&quot;all_colors.svc16&quot;, &quot;wb&quot;) as f:
    for value in code:
        f.write(struct.pack(&quot;<H&quot;, value))
"><pre><span>import</span> <span>struct</span>

<span>code</span> <span>=</span> [
    <span>0</span>, <span>501</span>, <span>1</span>, <span>0</span>, <span>#Opcodes replaced with numbers</span>
    <span>0</span>, <span>502</span>, <span>65535</span>, <span>0</span>,
    <span>11</span>, <span>500</span>, <span>500</span>, <span>0</span>,
    <span># ...</span>
]
<span>with</span> <span>open</span>(<span>"all_colors.svc16"</span>, <span>"wb"</span>) <span>as</span> <span>f</span>:
    <span>for</span> <span>value</span> <span>in</span> <span>code</span>:
        <span>f</span>.<span>write</span>(<span>struct</span>.<span>pack</span>(<span>"&lt;H"</span>, <span>value</span>))</pre></div>
<p dir="auto">Inspecting the file, we should see:</p>
<div data-snippet-clipboard-copy-content="➜ hexyl examples/all_colors.svc16 -pv --panels 1

  00 00 f5 01 01 00 00 00
  00 00 f6 01 ff ff 00 00
  0b 00 f4 01 f4 01 00 00
  03 00 f4 01 f5 01 f4 01
  07 00 f4 01 f6 01 f7 01
  0e 00 f7 01 f5 01 f7 01
  02 00 00 00 04 00 f7 01
  0f 00 00 00 00 00 00 00
  01 00 00 00 00 00 00 00"><pre lang="ansi"><code>➜ hexyl examples/all_colors.svc16 -pv --panels 1

  00 00 f5 01 01 00 00 00
  00 00 f6 01 ff ff 00 00
  0b 00 f4 01 f4 01 00 00
  03 00 f4 01 f5 01 f4 01
  07 00 f4 01 f6 01 f7 01
  0e 00 f7 01 f5 01 f7 01
  02 00 00 00 04 00 f7 01
  0f 00 00 00 00 00 00 00
  01 00 00 00 00 00 00 00
</code></pre></div>
<p dir="auto">When we run this, we get the following output:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/JanNeuendorf/SVC16/blob/main/colors_scaled.png"><img src="https://github.com/JanNeuendorf/SVC16/raw/main/colors_scaled.png" alt="All colors"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">First of all, if you managed to build a cool game or program for the system, please share it!</p>
<p dir="auto">If you find a discrepancy between this README and the behavior of the emulator or some other problem or bug,
feel free to open an issue.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Task List</h3><a id="user-content-task-list" aria-label="Permalink: Task List" href="#task-list"></a></p>
<ul>
<li> Write a very detailed specification document</li>
<li> Create a more advanced example program</li>
<li> Explore the possibility of a web-based emulator</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A visual proof that a^2 – b^2 = (a + b)(a – b) (392 pts)]]></title>
            <link>https://www.futilitycloset.com/2024/12/15/tidy-2/</link>
            <guid>42423409</guid>
            <pubDate>Sun, 15 Dec 2024 14:01:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.futilitycloset.com/2024/12/15/tidy-2/">https://www.futilitycloset.com/2024/12/15/tidy-2/</a>, See on <a href="https://news.ycombinator.com/item?id=42423409">Hacker News</a></p>
Couldn't get https://www.futilitycloset.com/2024/12/15/tidy-2/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[XFCE 4.20 Released (110 pts)]]></title>
            <link>https://alexxcons.github.io/blogpost_14.html</link>
            <guid>42423353</guid>
            <pubDate>Sun, 15 Dec 2024 13:47:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://alexxcons.github.io/blogpost_14.html">https://alexxcons.github.io/blogpost_14.html</a>, See on <a href="https://news.ycombinator.com/item?id=42423353">Hacker News</a></p>
Couldn't get https://alexxcons.github.io/blogpost_14.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[In-Depth Ruby Concurrency: Navigating the Ruby Concurrency Landscape (142 pts)]]></title>
            <link>https://jpcamara.com/2024/12/14/my-rubyconf-talk.html</link>
            <guid>42422942</guid>
            <pubDate>Sun, 15 Dec 2024 11:46:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jpcamara.com/2024/12/14/my-rubyconf-talk.html">https://jpcamara.com/2024/12/14/my-rubyconf-talk.html</a>, See on <a href="https://news.ycombinator.com/item?id=42422942">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p>I was honored to present a talk on Ruby concurrency at RubyConf 2024. It represents a high-level distillation of much of my writing and research over the past year. The conference itself was great, and presenting was such a fun experience.</p>
<p>Here is the talk, titled “In-Depth Ruby Concurrency: Navigating the Ruby Concurrency Landscape”:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/rewiLd2w0kE?si=p8DBcuUqqXnmsnlO" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
<p>If you want the slides, I’ve published them as a short YouTube video:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/6HaXuQJMcvs?si=ckoz8lZKr47vQ-hy" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
<p>I know it’s a bit odd to share my slides as a video, but there are so many animations it was the easiest option to preserve the original flow.</p>
<p>You can also find information about my talk and every other RubyConf 2024 talk at <a href="https://www.rubyvideo.dev/talks/in-depth-ruby-concurrency-navigating-the-ruby-concurrency-landscape">RubyVideo</a>.</p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When a Crystal Ball Isn't Enough to Make You Rich (225 pts)]]></title>
            <link>https://elmwealth.com/crystal-ball/</link>
            <guid>42422077</guid>
            <pubDate>Sun, 15 Dec 2024 07:22:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://elmwealth.com/crystal-ball/">https://elmwealth.com/crystal-ball/</a>, See on <a href="https://news.ycombinator.com/item?id=42422077">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        

<p><i>By Victor Haghani, James White and Jerry Bell</i> <span id="easy-footnote-1-11523"></span><span><a href="#easy-footnote-bottom-1-11523" title=" Many people were instrumental in bringing this experiment and research article to life. Foremost are the contributions of our research associate James Cross, who helped design and single-handedly programmed the Crystal Ball game during the summer of 2023 while still an undergraduate at Princeton. We thank our long-time research collaborator Richard Dewey for his guidance in designing the study and interpreting the results. Jason Zweig of the Wall Street Journal got us off the ground, and introduced us to ASU Professor Rawley Heimer, whose experience in designing and running studies similar to ours was invaluable. We owe a debt of gratitude to our many friends and colleagues, who as always, did their best to clarify and vet our analysis, and in many cases to be guinea pigs for the study: Jerry Bell, Larry Bernstein, Mimi Duff, Fash Golchin, Jessica Haghani, Joshua Haghani, Mark Haghani, Larry Hilibrand, Alex Imas, Spencer Jakab, Agustin Lebron, Saman Majd, Bill Montgomery, Andy Morton, Vladimir Ragulin, Chris Rokos, Jeffrey Rosenbluth and Steven Schneider. If this research has merit, much of the credit goes to them, although all errors are our own. We thank Nassim Nicholas Taleb for his insightful observation that gave birth to this line of inquiry. Finally, our heartfelt thanks go to the roughly 1,500 people who took time from their busy lives to pit their wits and luck against our Crystal Ball challenge.<br />"><sup>1</sup></a></span><br><span id="read_time">Estimated reading time: 10 min.</span></p>
<h3>Introduction: Back to the Future</h3>
<p>In the 1989 blockbuster <i>Back to the Future II</i>, time travel enables Michael J. Fox’s nemesis, Biff, to become a gazillionaire by bringing an almanac with sports match outcomes back from the future. We thought it might be instructive, and certainly entertaining, to make a less fanciful version of this dream a reality – for a few lucky people.</p>
<p>In November 2023, we ran an in-person, proctored experiment involving 118 young adults trained in finance. We called the experiment “The Crystal Ball Challenge.” We gave each participant $50 and the opportunity to grow that stake by trading in the S&amp;P 500 index and 30-year US Treasury bonds with the information on the front page of the Wall Street Journal (WSJ) <i>one day in advance,</i> but with stock and bond price data blacked out. The game covered 15 days, one day for each year from 2008 to 2022.</p>
<p>You can play this game for yourself here: <a href="https://elmwealth.com/crystal-ball-challenge/" target="_blank" rel="noopener">Crystal Ball Trading Challenge</a> – though without the pecuniary component. As of the time of writing, over 1,500 people have tested their skill and luck by playing the game on our website.</p>
<h3>Summary of results</h3>
<p>The players in the proctored experiment did not do very well, despite having the front page of the newspaper 36 hours ahead of time. About half of them lost money, <i>and one in six actually went bust.</i> The average payout was just $51.62 (a gain of just 3.2%), which is statistically indistinguishable from breaking even. The poor results were a product of: 1) not guessing the direction of stocks and bonds very well, and 2) poor trade-sizing. The players guessed the direction of stocks and bonds correctly on just 51.5% of the roughly 2,000 trades they made. They guessed the direction of bonds correctly 56% of the time, but bet less of their capital on bonds than on stocks (if you’re planning a career as a proprietary macro trader, consider putting your focus on bonds).</p>
<p>Perhaps the front page of the WSJ isn’t a particularly clear crystal ball, or our players weren’t very adept at reading it. As former Goldman Sachs CEO Lloyd Blankfein reminded us in a widely-circulated tweet, sometimes the markets don’t react to the news as even seasoned experts expect – an important lesson all successful traders learn, eventually.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-image02.png"></p>
<p>It didn’t help that the players also did not seem to know how to size their bets well. On eight of the 30 trading opportunities,<span id="easy-footnote-2-11523"></span><span><a href="#easy-footnote-bottom-2-11523" title=" 15 days with one stock and bond trading opportunity each.<br />"><sup>2</sup></a></span> the players in aggregate displayed 2-to-1 odds of being correct in their bets, but they did not bet more heavily on those occasions. Overall, they did not display trade-sizing that bore any relation to their propensity to guess the price moves of stocks or bonds correctly.</p>
<p>Many of the players used excessive leverage relative to their exhibited edge in guessing market direction. On about 30% of the total number of days on which players traded, they used leverage of greater than 20x capital. On 4% of the total occasions, they used leverage of 60x or higher, which carried a very high probability of being wiped out if they guessed wrong. In sum, there was little discernible logic or rationale to their trade-sizing decisions.</p>
<p>See Appendix I for a detailed analysis of player results.</p>
<p>Perhaps this excessive risk-taking by some of the players is partially explained by the finding that most investors tend to overestimate the predictive value of news on market outcomes. For example, a recent survey of 11,000 investors by Andre et al.<span id="easy-footnote-3-11523"></span><span><a href="#easy-footnote-bottom-3-11523" title=" Andre, P. et al. (2023). &amp;#8220;Mental Models of the Stock Market.&amp;#8221; <i>SSRN.</i><br />"><sup>3</sup></a></span> found that about 70% of investors (but not finance academics) believed that stale, four-week-old, good (or bad) news was predictive of high (or low) future stock returns.</p>
<p>However, our sample of 118 staked and proctored players did better than the roughly 1,500 people who have played the game for fun on our website. The median outcome among these players was a loss of about 30% of their capital. Only 40% finished with a profit, and 36% went bust.</p>
<p>We were tickled to see that six players devoted themselves to achieving the maximum possible payout, growing their initial wealth 70,575-fold. They did this by repeatedly playing the game to see what stocks and bonds did on each day, and then using that information to put up the perfect score by correctly betting the maximum size on each trade. We were elated to see our game spark so much passion in some players!</p>
<h3>Some of the world’s best traders show how to do better</h3>
<p>We invited five seasoned and successful macro traders – four men, one woman – to play the game, with markedly better results. This was a very select group of traders: head of trading at a top-five US bank, founder of a top-ten macro hedge fund, senior trader at a top-ten macro fund, former senior government bond trader at top-three US primary dealer, and former senior Jane Street trader.</p>
<p>These players all finished with gains. On average, they grew their starting wealth by 130%, with a median gain of 60%. All of the players were selective and highly variable in their trade-sizing. They did not bet at all on about 1/3 of the trading opportunities, but bet big on days when they presumably felt confident in the impact of the news on stock or bond prices.<span id="easy-footnote-4-11523"></span><span><a href="#easy-footnote-bottom-4-11523" title=" Despite their relatively strong performance, several of these traders told us they found the game much more challenging than they thought it would be.<br />"><sup>4</sup></a></span></p>
<p>These veteran traders predicted the direction of the markets significantly better than our 118 younger, less experienced participants (63% vs 51.5%), but mostly we ascribe the dramatically different results to the much more rational trade-sizing displayed by the experienced traders. One important conclusion we reach is that there is little value in this crystal ball <i>without sensible trade-sizing.</i></p>
<h3>Motivations</h3>
<p>In addition to our curiosity in testing Taleb’s hypothesis, we had four further motivations for conducting this experiment:</p>
<ol>
<li>We are deeply interested in learning how people approach the sizing of attractive investment opportunities, having researched and written extensively on this topic. In 2016, we conducted an experiment (also involving financial rewards) where we invited participants to bet on a digital coin flip that was programmed to have a 60% probability of landing on heads, and published our findings in “<a href="https://www.pm-research.com/content/iijpormgmt/43/3/2" target="_blank" rel="noopener">Betting on a Biased Coin</a>.” We recently wrote a book, <i>The Missing Billionaires: A Guide to Better Financial Decisions</i>, that is focused on investment sizing.</li>
<li>We wanted to quantify the value of macro-economic information. How often would people guess the direction of markets from the information on the front page of the WSJ?</li>
<li>We hoped that the tool we developed for the experiment could be productively used to educate and train professional risk-takers.</li>
<li>It was going to be a lot of fun!</li>
</ol>
<h3>The Game</h3>
<p>Over 90% of the participants were in graduate programs in finance or MBA programs with finance modules at four east coast US universities with low admission rates. The participants were not told in advance that they’d be invited to participate in this experiment. Any who did not want to participate were allowed to leave (though no one did).</p>
<p>Here’s how we explained the rules of the game:</p>
<div>
<p>We are giving you $50 to play our “Crystal Ball” game. The object is to see how well you can do trading stocks and bonds if you know the news from the front page of the WSJ one day in advance. In other words, you’ll be in that dreamed-of position of being a trader who “knows the future.” For example, you will be shown the front page of the WSJ for a Wednesday, and be able to take a long or short position in the stock market and in the bond market at prices prevailing at Monday’s close (that is, two days earlier). Your trades will be liquidated at Tuesday’s closing prices. Note, on each front page we’ve blacked out anything that tells you explicitly what market prices actually did that day – leaving that information in would make this game too easy and no fun at all!</p>
<p>You will be trading the S&amp;P 500 stock market index and a 30-year US Treasury bond futures contract, and you can use as much leverage as you’d like to, up to 50x. Use the sliders to choose the positions you want and then click the “Trade” button. Remember that for the 30-year Treasury bonds, prices go down when yields go up, and you are trading on price.</p>
<p>You are starting off with $50 of bankroll, and we will pay you however much this has grown to, or shrunk to, with a maximum payout of $100. You will have 45 minutes to play the game.</p>
<p>We have not chosen these days to try to trick you – they are randomly chosen. You will be able to trade on 15 different days, once per year over the past 15 years. The days will be presented to you in a randomized order. We’ve chosen these days randomly from a set of days where one third of them are days of employment reports, one third from days of Fed announcements, and the other third purely randomly, all taken from days that are in the top half of days ranked by overall market volatility. You can use the “Skip” button to skip any day you don’t feel like trading, and you can trade stocks, bonds, or both, each day. You can use the “Finish” button if you want to stop before being presented with all 15 days. Leverage of 1x means your position size is equal to your capital size. There are no transaction costs or overnight financing costs or rebates on your trades.</p>
<p>Good luck, and have fun – you may never have this opportunity again!</p>
</div>
<p>Below are two pictures of the screens that players engaged with. In the first screen, the player can expand the picture of the front page of the WSJ on the left to be able to read it more clearly, then revert to the trading page.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-image03.png"></p>
<p>Then, after clicking “Trade” the result of the trade is revealed, showing the market move in stocks and bonds, and the resultant profit or loss. The player’s bankroll is expressed based off of a starting value of $1 million, but the players understood that their payout would be $50 times the ending wealth divided by $1 million, with a minimum of $0 and a maximum of $100.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-image04.png"></p>
<p>All the front pages can be seen here, in chronological order: <a href="https://elmwealth.com/crystal-ball-gallery/" target="_blank" rel="noopener">https://elmwealth.com/crystal-ball-gallery/</a></p>
<h3>Conclusion</h3>
<p>“He who lives by the crystal ball will eat shattered glass.” — Ray Dalio</p>
<p>Was Taleb correct in his conjecture that “If you give an investor the next day’s news 24 hours in advance, he would go bust in less than a year”? While our experiment didn’t test his statement precisely – we only gave players 15 days of front pages, players were risking just $100 in the game, etc. – by and large we think Taleb is right. His counterintuitive proposition is both insightful and instructive.</p>
<p>The financial industry is replete with individuals and organizations constantly working to develop their own proprietary crystal balls. We hope that the experiment and results described herein convince crystal ball makers that sensible investment-sizing is essential to realizing the value of what they are trying to build.</p>
<p>The poor aggregate showing of our 118 financially-trained participants highlights the importance of educating young, aspiring finance industry professionals in decision-making under uncertainty, and particularly the theory and art of investment-sizing. We hope our Crystal Ball game will be a helpful tool – or a prototype for a better one – that educators and financial firms can use to teach these concepts and skills. Perhaps it may even become part of the hedge fund boot camp training programs at Citadel, Point72, Balyasny, and Jane Street that have been in the news recently.<span id="easy-footnote-5-11523"></span><span><a href="#easy-footnote-bottom-5-11523" title=" Kumar, N. and Tetley, L. (June 19, 2024). <a href=&quot;https://www.bloomberg.com/news/articles/2024-06-19/giant-hedge-funds-citadel-and-point72-are-trying-to-create-the-perfect-trader&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;>&amp;#8220;Hedge Fund Talent Schools Are Looking for the Perfect Trader.&amp;#8221;</a> Bloomberg.<br />"><sup>5</sup></a></span> The uniformly positive results of the five experienced macro traders we invited to play the game suggest that there are teachable skills involved in successful discretionary investing.</p>
<p>Perhaps Matt Levine foresaw the results of our experiment with his article titled: “Knowing the Future Isn’t That Helpful.”<span id="easy-footnote-6-11523"></span><span><a href="#easy-footnote-bottom-6-11523" title=" Levine, M. (November 29, 2024). <a href=&quot;https://www.bloomberg.com/opinion/articles/2019-11-26/knowing-the-future-isn-t-that-helpful&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;>&amp;#8220;Knowing the Future Isn’t That Helpful.&amp;#8221;</a> Money Stuff. Bloomberg.<br />"><sup>6</sup></a></span> He describes a delightful academic study that analyzed the trading results of a cartel of investors with an excellent, albeit illicit, crystal ball.<span id="easy-footnote-7-11523"></span><span><a href="#easy-footnote-bottom-7-11523" title=" Xie, C. (2020). &amp;#8220;The Signal Quality of Earnings Announcements: Evidence from an Informed Trading Cartel.&amp;#8221;<br />"><sup>7</sup></a></span> The traders bought earnings announcements before they were released from an international hacker group that illegally obtained access to the servers of three commercial newswire companies. These traders were sophisticated and their crystal ball was gem quality, but their batting average was far from perfect – though it was still good enough to make a decent return on their capital…before they were caught by the SEC!</p>
<p>Most stories involving people seeing into the future, like that of the trading cartel above, don’t have “happily ever after” endings. There are usually unintended consequences that come with perfect prescience – a reminder that even prophets can’t escape risk and uncertainty. The best we mortals can do is make our decisions with a framework that explicitly accounts for the presence of risk in just about every big choice we face.</p>
<p>If you haven’t already, you can play the game here: <a href="https://elmwealth.com/crystal-ball-challenge/" target="_blank" rel="noopener">Crystal Ball Trading Challenge</a></p>
<hr>
<h3>Appendix I: Detailed Analysis of Player Results</h3>
<p>Below is a chart showing the distribution of payouts to the players. The average payout was $51.62 per player, representing a weighted average return across all the players of 3.2%.<span id="easy-footnote-8-11523"></span><span><a href="#easy-footnote-bottom-8-11523" title=" The players who went bust actually finished with a negative balance. The average player return is 0% if we account for the busted players finishing with a debit balance, but of no more than 25% of their starting capital. The average return would go from 0% to 3.8% if we also capped player outcomes at +125% rather than +100%.<br />"><sup>8</sup></a></span> About half (45%) the players lost money, and 16% went bust, about the same as the 20% that maxed out at $100. We suspect most readers will agree with us in rating this performance “not very impressive.” It seems that getting the front page of not-any-old-newspaper, but <i>the</i> WSJ, 36 hours ahead of time (albeit with market moves redacted) may not be as valuable as many of us might have imagined.</p>
<p>An experienced market participant is likely able to extract more information from the front page of the WSJ than someone with less experience, such as the participants in our experiment. Even though direct reporting of market moves was blacked out, journalists often report the news biased by how markets reacted after the news. For example, they’ll refer to an employment report as “weak” if the bond market rallies after the report, even if the actual report is more ambiguous – for example, a slightly low number of jobs created, countered by a drop in the unemployment rate and a rise in hourly earnings.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-chart01.png"></p>
<p>The players forecast the correct direction of stocks and bonds 51.5% of the time. With stocks, they got the correct direction on 48.2% of their trades, and on 56.2% of the bond trades. Notice there were four days where more than 70% of the players forecast the correct direction of the market, and 10 days when more than 60% were correct. However, the players placed 40% more trades in stocks than bonds, which is unfortunate given the players had a better realized edge with bonds than stocks. The table below describes each of the 15 trading opportunities and shows how many trades the players placed on each of the days and what percentage of the trades were placed in the correct direction: long when the market went up and short when it went down.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-table01.png"></p>
<p>The next table puts the focus on trade-sizing. It shows the average leverage used for each trading day for stock and bond trades, and also the averages conditional on being higher than 5x leverage. Average leverage used in stock and bond trades was 13x and 10x respectively, and two times as much – 22x and 20x – for trades where leverage was greater than 5x.</p>
<p>We calculated the correlation of leverage (i.e. trade size) for each day versus the win percent for each day, and found a zero correlation in the case of stock trades and a -0.1 correlation for bond trades, along with a +0.2 and -0.1 conditional on leverage used being greater than 5x. It seems that our players on average did not follow a strategy of placing bigger trades on those that they had a higher probability of getting right. Perhaps this is due to them not knowing which ones they had a higher probability of getting right, or perhaps they were not following a disciplined sizing strategy.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-table02.png"></p>
<p>The players traded 2,067 times, for an average of about 18 trades per player. The maximum number of trades each player could have made is 30, which would entail doing a stock and bond trade for every front page. Some of the 40% shortfall versus the maximum number of trades is due to 16% of the players going bust, but most of the shortfall is from players abstaining from trading opportunities.</p>
<p>Players were more apt to take long positions in stock and bonds; they traded stocks 62.5% of the time as a long position, and 59.6% of the time for bonds. About 10% and 8% of the players were long stocks and bonds, respectively, for every trade they made.<span id="easy-footnote-9-11523"></span><span><a href="#easy-footnote-bottom-9-11523" title=" These players seemed to be expressing a view that the WSJ front page from the future held no valuable information. Or perhaps they were heeding another warning from Taleb: &amp;#8220;To bankrupt a fool, give him information.&amp;#8221; from The Bed of Procrustes: Philosophical and Practical Aphorisms.<br />"><sup>9</sup></a></span></p>
<h3>Unpacking player performance</h3>
<p>What accounts for the underwhelming 3.2% return of the players? The fact that our players guessed the direction of stocks and bonds correctly only 51.5% of the time seems to be a pretty big handicap to overcome. It seems the front page of the WSJ wasn’t a particularly clear type of crystal ball for our players to read, and/or they weren’t very good at reading it.</p>
<p>However, even with their weak ability to read the tea leaves, the players could have done quite a bit better if they applied a sensible and constant amount of leverage to all their trades. It would have been reasonable for the players to have estimated the daily standard deviation of stocks and bonds, given our description of how we chose the 15 days, at around 1.5% – 2% for stocks and 1% – 1.5% for bonds. They might have then considered that there could easily be a two or three sigma event in the sample, and so the maximum amount of leverage they could use with a low likelihood of being wiped out might have been 8x for equities and 12x for bonds, if betting on both at the same time.</p>
<p>With that maximum leverage in mind, the next step would be to find the optimal size, subject to the maximum constraint above, given their view of the expected return and risk of the trades.<span id="easy-footnote-10-11523"></span><span><a href="#easy-footnote-bottom-10-11523" title=" For a fuller discussion of trade-sizing, see chapters 2 &amp;#8211; 7 of our book, <i>The Missing Billionaires: A Guide to Better Financial Decisions</i>. Wiley. (2023).<br />"><sup>10</sup></a></span> One reasonable choice would have been to apply the Kelly criterion. While the implicit risk-aversion embedded in the Kelly criterion is lower than most people’s risk-aversion with regard to their total wealth, it is reasonable to use it here given the amount of money involved was small relative to the players’ total wealth.</p>
<p>If the players felt they had a 55% chance of being right (an overestimate, as it turned out), that would have suggested something like 6x leverage for stocks and 8x leverage for bonds,<span id="easy-footnote-11-11523"></span><span><a href="#easy-footnote-bottom-11-11523" title="For Kelly, we use <i>SR / σ</i>, using <i>SR = 0.1</i>, daily <i>σ<sub>stocks</sub> = 1.75%</i> and <i>σ<sub>bonds</sub> = 1.25%</i>, giving us stocks at <i>0.1 / .0175 = 6</i>x, and bonds at <i>0.1 / .0125 = 8</i>x.<br />"><sup>11</sup></a></span> assuming profits on these trades would be uncorrelated. The optimal size would be a bit lower assuming some positive, but not perfect, correlation in trade outcomes.</p>
<p>If the players had all changed their trade-sizing such that they leveraged all their trades as suggested above (6x for stocks and 8x for bonds), they’d have generated an average return of 10%. Another sign that this is better sizing of trades is that outcomes amongst the players would have had about 45% less dispersion: only 4% of the players would have lost more than 50% of their stake, compared to about 28% in the actual trial. None would have lost more than 75%, and hence, none would have gone bust – recall that 16% of our participants did just that. So, the participants in aggregate would have done better with more reasoned trade-sizing, particularly on the downside…but not tremendously better (and we’d have been 7% more out-of-pocket).</p>
<p>The actual leverage used by participants was, on average, much higher than 6x and 8x for stocks and bonds – generally, people tended to use more leverage in their stock trades than in their bond trades, which is inconsistent with stocks being more volatile than bonds combined with their ability to forecast stock movements being weaker than their skill in guessing bond movements.</p>
<p>As can be seen in the chart below, on about 30% of the days that players traded, they used leverage greater than 20x, and on 4% of the days, they used total leverage of 60x or higher. And on 17 occasions – just over 1% of days traded – players went for 100x leverage, which exposed the player to close to a 50% chance of total loss of capital. It seems clear that there was a fair amount of over-sizing of trades.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-chart02.png"></p>
<p>However, a much bigger improvement could have been attained from the players doing a better job discerning when they had a more accurate reading of the future. If they’d scaled their trades bigger when they were more likely to be right, they’d have done much better, but it’s hard to know if, on the days when a high percentage of players put on the correct trades, if they really did have a stronger conviction that they were going to be right. It was clear which days were employment and Fed announcement days, and it turns out that the players were more accurate in their readings for bond movements on those days with a 58% hit ratio, while on the other third of the days they only had a 50% hit ratio.</p>
<p>The players also could have done much better if they had based their forecasts on a simple set of rules around the news that was on those front pages. They’d have been correct about 60% of the time if they had shorted bonds whenever the balance of news items was in the direction of a stronger economy, higher inflation, higher energy prices, a stronger Euro or a less accommodating Fed, and vice versa for the opposite news. For stocks, players also would have been correct about 60% of the time if they went long stocks when the balance of news items was in the direction of stronger economy, lower inflation, higher energy prices, a stronger Euro or a more accommodating Fed, and if they went short stocks when the balance of news items was in the opposite direction. There were several days when there was no news of the above variety or there were an equal number of news items on each side of the ledger. In those cases, abstaining from trading would have been a sensible decision.</p>
<p>The table below shows the results from applying the simple trade decision rules described above for direction and sizing. This approach had a success rate of 58% for stocks and 64% for bonds, resulting in an average 6.1% return on each trading day and a 2.4x growth of the bankroll.</p>
<p><img decoding="async" src="https://elmwealth.com/wp-content/uploads/2024/09/115-crystal-ball-table03.png"></p>
<p>As a further test of our hypothesis that this Crystal Ball would bear fruit for players with more experience in connecting news to markets and in sensible trade-sizing, we had five senior bank and hedge fund traders play this game.<span id="easy-footnote-12-11523"></span><span><a href="#easy-footnote-bottom-12-11523" title=" Unproctored, but we are confident we can rely on their integrity, and their natural curiosity, to have played the game straight.<br />"><sup>12</sup></a></span> Their average end wealth was 2.3x their starting wealth, ranging from 1.2x to 5.6x. None went bust, and their average trade success ratio was about 63%. As was the case with the main sample of players, these experienced traders also did substantially better with bonds (71% correct) than with stocks (56%).</p>
<hr>
<h3>Appendix II: Putting a value on the crystal ball</h3>
<p>How much should an investor be willing to pay for a crystal ball that gives them the front page of the WSJ one day in advance, on 15 high-volatility days? In general, when investors are allocating their capital to attractive opportunities with optimal sizing, the risk-adjusted return they are expecting to earn is roughly one half of the expected return.<span id="easy-footnote-13-11523"></span><span><a href="#easy-footnote-bottom-13-11523" title=" Both expressed in excess of the safe asset return, and with a few other assumptions about random walks, ability to rebalance positions continuously and frictionlessly, and ignoring taxes.<br />"><sup>13</sup></a></span> Let’s say that, when we do a trade, the average expected return to risk ratio of the trades is 0.2. This is twice as high as we were suggesting for our participants, and consistent with a 60% chance of getting the direction of the market correct.</p>
<p>For an investor with a typical degree of risk-aversion,<span id="easy-footnote-14-11523"></span><span><a href="#easy-footnote-bottom-14-11523" title=" Twice as risk-averse as implied by the Kelly criterion.<br />"><sup>14</sup></a></span> he should risk 10% of his capital on a one standard deviation outcome of such a trade, assuming the trade is uncorrelated with the rest of his investments.<span id="easy-footnote-15-11523"></span><span><a href="#easy-footnote-bottom-15-11523" title=" And that the outcomes are normally distributed, and that he can rebalance his exposure to keep his leverage constant.<br />"><sup>15</sup></a></span> His expected return on the trade is then 2% <i>(0.2 * 10% = 2%)</i>, and his risk-adjusted return is about 1% per trade. In practice, there needs to be a further reduction for managing the leverage that will be employed, but let’s leave that to the side for the purposes of this example.</p>
<p>The final step is to estimate how many times we expect the crystal ball to give us useful news. Let’s say it’s 75% of the time. Then, our risk-adjusted wealth grows by 1% for each of the 24 trades we expect to do, resulting in certainty-equivalent wealth 1.27x our initial wealth <i>(1.01<sup>24</sup> = 1.27)</i>. This tells us that the most we can pay for this crystal ball is 21% of our wealth <i>(1 – 1/1.27 = 21%)</i>.</p>
<p>Another useful perspective on the value of the crystal ball is to compare the risk-adjusted value of getting the newspaper in advance once per year versus being able to invest in the stock market for the whole year. The Sharpe ratio of one day’s trades driven by the crystal ball reading is around 0.2 – 0.3 (perhaps much less depending on who is doing the reading) which is less than what most people believe is the typical Sharpe ratio of one year’s worth of investing in the stock market.</p>
<hr>
<h3>Appendix III: Caveats and shortcomings of this study</h3>
<p>As with most studies involving paying relatively nominal sums to university students, it’s natural that players’ behavior with a $50 starting bankroll would be very different from how they would use this crystal ball if they could trade on their total wealth.</p>
<p>Players may have done much better if they’d been given company-specific information ahead of time and been allowed to trade individual stocks with that information. Several players told us that they felt the crystal ball would have been much more useful if they knew more about the context of the front page news, in particular what the market was primarily concerned about at the time.</p>
<p>The maximum leverage allowed in our game is higher than most investors can access through futures. However, out-of-the-money options do provide a viable alternative, though with considerably higher costs. Also, we assumed that the players could hold on to their trades until the following day’s close. It’s possible that in some cases, the intraday move in the markets may have wiped out the player’s capital before the next close.</p>
<p>In practice, it is unlikely investors would leverage their total wealth without a limit on the worst-case outcome they could experience. Two effective ways to limit losses from leveraged investments are: 1) putting the trades in a limited liability vehicle, where losses are limited to the capital therein, or 2) buy short-term out-of-the-options to limit the maximum loss on the leveraged trades. Option 1 has the drawback that it may not be possible to get the desired amount of leverage, and Option 2 involves the costs associated with the options contracts.</p>
<hr>
<h3>Appendix IV: The redacted front pages used in the experiment</h3>
<p>All the front pages can be seen here, in chronological order: <a href="https://elmwealth.com/crystal-ball-gallery/" target="_blank" rel="noopener">https://elmwealth.com/crystal-ball-gallery/</a></p>
<hr>
<h3>Further Reading &amp; References</h3>
<ul>
<li>Andre, P., Schirmer, P. and Wohlfart, J. (2023). “Mental models of the stock market.” SAFE Working Paper No. 406. <i>SSRN.</i></li>
<li>Haghani, V. and Dewey, R. (2017). “Rational decision making under uncertainty: Observed betting patterns on a biased coin.” <i>Journal of Portfolio Management.</i></li>
<li>Haghani, V. and White, J. (2023). <i>The Missing Billionaires: A Guide to Better Financial Decisions.</i> New York: <i>Wiley</i>.</li>
<li>Hwang, J. and Lee, D. (2024). “Economic valuation of becoming a superhero.” <i>Journal of Cultural Economics.</i></li>
<li>Kelly, J. L. (1956). “A New interpretation of information rate.” <i>Bell System Technical Journal</i> 35 (4). 917-926.</li>
<li>Koudijsy , P. (2014), “Those who know most: Insider trading in 18th Century Amsterdam.” <i>NBER.</i></li>
<li>Kumar, N. and Tetley, L. (June 19, 2024). “Hedge Fund Talent Schools Are Looking for the Perfect Trader.” <i>Bloomberg.</i></li>
<li>Levine, M. (November 29, 2024). “Knowing the Future Isn’t That Helpful.” Money Stuff. <i>Bloomberg.</i></li>
<li>Merton, R. (1969). “Lifetime portfolio selection under uncertainty: The continuous-time case.” <i>The Review of Economics and Statistics</i> 51 (3). 247-257.</li>
<li>Nowell, A. (2022). <a href="https://transimpact.com/nextsights/superpower-survey/" target="_blank" rel="noopener">The most desired superpowers around the U.S.</a> TransImpact.</li>
<li>Xie, C. (2020). <a href="https://api.semanticscholar.org/CorpusID:208029692" target="_blank" rel="noopener">“The Signal Quality of Earnings Announcements: Evidence from an Informed Trading Cartel.”</a></li>
</ul>
<hr>
<ol><li><span id="easy-footnote-bottom-1-11523"></span> Many people were instrumental in bringing this experiment and research article to life. Foremost are the contributions of our research associate James Cross, who helped design and single-handedly programmed the Crystal Ball game during the summer of 2023 while still an undergraduate at Princeton. We thank our long-time research collaborator Richard Dewey for his guidance in designing the study and interpreting the results. Jason Zweig of the Wall Street Journal got us off the ground, and introduced us to ASU Professor Rawley Heimer, whose experience in designing and running studies similar to ours was invaluable. We owe a debt of gratitude to our many friends and colleagues, who as always, did their best to clarify and vet our analysis, and in many cases to be guinea pigs for the study: Jerry Bell, Larry Bernstein, Mimi Duff, Fash Golchin, Jessica Haghani, Joshua Haghani, Mark Haghani, Larry Hilibrand, Alex Imas, Spencer Jakab, Agustin Lebron, Saman Majd, Bill Montgomery, Andy Morton, Vladimir Ragulin, Chris Rokos, Jeffrey Rosenbluth and Steven Schneider. If this research has merit, much of the credit goes to them, although all errors are our own. We thank Nassim Nicholas Taleb for his insightful observation that gave birth to this line of inquiry. Finally, our heartfelt thanks go to the roughly 1,500 people who took time from their busy lives to pit their wits and luck against our Crystal Ball challenge.<br><a href="#easy-footnote-1-11523"></a></li><li><span id="easy-footnote-bottom-2-11523"></span> 15 days with one stock and bond trading opportunity each.<br><a href="#easy-footnote-2-11523"></a></li><li><span id="easy-footnote-bottom-3-11523"></span> Andre, P. et al. (2023). “Mental Models of the Stock Market.” <i>SSRN.</i><br><a href="#easy-footnote-3-11523"></a></li><li><span id="easy-footnote-bottom-4-11523"></span> Despite their relatively strong performance, several of these traders told us they found the game much more challenging than they thought it would be.<br><a href="#easy-footnote-4-11523"></a></li><li><span id="easy-footnote-bottom-5-11523"></span> Kumar, N. and Tetley, L. (June 19, 2024). <a href="https://www.bloomberg.com/news/articles/2024-06-19/giant-hedge-funds-citadel-and-point72-are-trying-to-create-the-perfect-trader" target="_blank" rel="noopener">“Hedge Fund Talent Schools Are Looking for the Perfect Trader.”</a> Bloomberg.<br><a href="#easy-footnote-5-11523"></a></li><li><span id="easy-footnote-bottom-6-11523"></span> Levine, M. (November 29, 2024). <a href="https://www.bloomberg.com/opinion/articles/2019-11-26/knowing-the-future-isn-t-that-helpful" target="_blank" rel="noopener">“Knowing the Future Isn’t That Helpful.”</a> Money Stuff. Bloomberg.<br><a href="#easy-footnote-6-11523"></a></li><li><span id="easy-footnote-bottom-7-11523"></span> Xie, C. (2020). “The Signal Quality of Earnings Announcements: Evidence from an Informed Trading Cartel.”<br><a href="#easy-footnote-7-11523"></a></li><li><span id="easy-footnote-bottom-8-11523"></span> The players who went bust actually finished with a negative balance. The average player return is 0% if we account for the busted players finishing with a debit balance, but of no more than 25% of their starting capital. The average return would go from 0% to 3.8% if we also capped player outcomes at +125% rather than +100%.<br><a href="#easy-footnote-8-11523"></a></li><li><span id="easy-footnote-bottom-9-11523"></span> These players seemed to be expressing a view that the WSJ front page from the future held no valuable information. Or perhaps they were heeding another warning from Taleb: “To bankrupt a fool, give him information.” from The Bed of Procrustes: Philosophical and Practical Aphorisms.<br><a href="#easy-footnote-9-11523"></a></li><li><span id="easy-footnote-bottom-10-11523"></span> For a fuller discussion of trade-sizing, see chapters 2 – 7 of our book, <i>The Missing Billionaires: A Guide to Better Financial Decisions</i>. Wiley. (2023).<br><a href="#easy-footnote-10-11523"></a></li><li><span id="easy-footnote-bottom-11-11523"></span>For Kelly, we use <i>SR / σ</i>, using <i>SR = 0.1</i>, daily <i>σ<sub>stocks</sub> = 1.75%</i> and <i>σ<sub>bonds</sub> = 1.25%</i>, giving us stocks at <i>0.1 / .0175 = 6</i>x, and bonds at <i>0.1 / .0125 = 8</i>x.<br><a href="#easy-footnote-11-11523"></a></li><li><span id="easy-footnote-bottom-12-11523"></span> Unproctored, but we are confident we can rely on their integrity, and their natural curiosity, to have played the game straight.<br><a href="#easy-footnote-12-11523"></a></li><li><span id="easy-footnote-bottom-13-11523"></span> Both expressed in excess of the safe asset return, and with a few other assumptions about random walks, ability to rebalance positions continuously and frictionlessly, and ignoring taxes.<br><a href="#easy-footnote-13-11523"></a></li><li><span id="easy-footnote-bottom-14-11523"></span> Twice as risk-averse as implied by the Kelly criterion.<br><a href="#easy-footnote-14-11523"></a></li><li><span id="easy-footnote-bottom-15-11523"></span> And that the outcomes are normally distributed, and that he can rebalance his exposure to keep his leverage constant.<br><a href="#easy-footnote-15-11523"></a></li></ol>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tenstorrent and the State of AI Hardware Startups (211 pts)]]></title>
            <link>https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware</link>
            <guid>42421157</guid>
            <pubDate>Sun, 15 Dec 2024 02:59:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware">https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware</a>, See on <a href="https://news.ycombinator.com/item?id=42421157">Hacker News</a></p>
Couldn't get https://irrationalanalysis.substack.com/p/tenstorrent-and-the-state-of-ai-hardware: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[School smartphone ban results in better sleep and improved mood (929 pts)]]></title>
            <link>https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/</link>
            <guid>42420352</guid>
            <pubDate>Sat, 14 Dec 2024 23:51:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/">https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/</a>, See on <a href="https://news.ycombinator.com/item?id=42420352">Hacker News</a></p>
Couldn't get https://www.york.ac.uk/news-and-events/news/2024/research/school-smartphone-ban-better-sleep/: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>