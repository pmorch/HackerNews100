<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 20 Dec 2024 01:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Satellite powered estimation of global solar potential (155 pts)]]></title>
            <link>https://research.google/blog/satellite-powered-estimation-of-global-solar-potential/</link>
            <guid>42465535</guid>
            <pubDate>Thu, 19 Dec 2024 20:44:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://research.google/blog/satellite-powered-estimation-of-global-solar-potential/">https://research.google/blog/satellite-powered-estimation-of-global-solar-potential/</a>, See on <a href="https://news.ycombinator.com/item?id=42465535">Hacker News</a></p>
Couldn't get https://research.google/blog/satellite-powered-estimation-of-global-solar-potential/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Mizu.js – Lightweight HTML templating library for any-side rendering (130 pts)]]></title>
            <link>https://mizu.sh</link>
            <guid>42464310</guid>
            <pubDate>Thu, 19 Dec 2024 18:25:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mizu.sh">https://mizu.sh</a>, See on <a href="https://news.ycombinator.com/item?id=42464310">Hacker News</a></p>
Couldn't get https://mizu.sh: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: WebGPU Tech Demo (109 pts)]]></title>
            <link>https://gnikoloff.github.io/webgpu-sponza-demo/</link>
            <guid>42463525</guid>
            <pubDate>Thu, 19 Dec 2024 17:14:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gnikoloff.github.io/webgpu-sponza-demo/">https://gnikoloff.github.io/webgpu-sponza-demo/</a>, See on <a href="https://news.ycombinator.com/item?id=42463525">Hacker News</a></p>
Couldn't get https://gnikoloff.github.io/webgpu-sponza-demo/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[A Replacement for Bert (252 pts)]]></title>
            <link>https://huggingface.co/blog/modernbert</link>
            <guid>42463315</guid>
            <pubDate>Thu, 19 Dec 2024 16:53:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://huggingface.co/blog/modernbert">https://huggingface.co/blog/modernbert</a>, See on <a href="https://news.ycombinator.com/item?id=42463315">Hacker News</a></p>
Couldn't get https://huggingface.co/blog/modernbert: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Clay – UI Layout Library (113 pts)]]></title>
            <link>https://www.nicbarker.com/clay</link>
            <guid>42463123</guid>
            <pubDate>Thu, 19 Dec 2024 16:36:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nicbarker.com/clay">https://www.nicbarker.com/clay</a>, See on <a href="https://news.ycombinator.com/item?id=42463123">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Nullboard: Kanban board in a single HTML file (294 pts)]]></title>
            <link>https://github.com/apankrat/nullboard</link>
            <guid>42461688</guid>
            <pubDate>Thu, 19 Dec 2024 14:29:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/apankrat/nullboard">https://github.com/apankrat/nullboard</a>, See on <a href="https://news.ycombinator.com/item?id=42461688">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Nullboard</h2><a id="user-content-nullboard" aria-label="Permalink: Nullboard" href="#nullboard"></a></p>
<p dir="auto">Nullboard is a minimalist take on a kanban board / a task list manager, designed to be compact, readable and quick in use.</p>
<p dir="auto"><a href="https://nullboard.io/preview" rel="nofollow">https://nullboard.io/preview</a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-example-alt.png"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-example-alt.png" alt="Nullboard"></a></p>
<p dir="auto">The name also happens to abbreviate to <a href="https://en.wikipedia.org/wiki/Nota_bene" rel="nofollow">NB</a>, which I think is a nice touch.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Dead simple</h2><a id="user-content-dead-simple" aria-label="Permalink: Dead simple" href="#dead-simple"></a></p>
<ul dir="auto">
<li>Single-page web app - just one HTML file, an ancient jQuery package and a webfont pack.</li>
<li>Can be used completely offline. In fact, it's written exactly with this use in mind.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Locally stored</h2><a id="user-content-locally-stored" aria-label="Permalink: Locally stored" href="#locally-stored"></a></p>
<ul dir="auto">
<li>All data is stored locally, for now using <a href="https://developer.mozilla.org/en/docs/Web/API/Window/localStorage" rel="nofollow">localStorage</a>.</li>
<li>The data can be exported to- or imported from a plain text file in a simple JSON format.</li>
<li>The data can also be automatically backed up to a local disk with the help of:
<ul dir="auto">
<li><a href="https://nullboard.io/backups" rel="nofollow">Nullboard Agent</a> - a native Windows app</li>
<li><a href="https://github.com/justinpchang/nullboard-agent-express">Nullboard Agent Express Port</a> - an express.js-based portable app</li>
<li><a href="https://github.com/luismedel/nbagent">nbagent</a> - a version for Unix systems, in Python</li>
</ul>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Beta</h2><a id="user-content-beta" aria-label="Permalink: Beta" href="#beta"></a></p>
<p dir="auto">Still very much in beta. Caveat emptor and all that.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">UI &amp; UX</h2><a id="user-content-ui--ux" aria-label="Permalink: UI &amp; UX" href="#ui--ux"></a></p>
<p dir="auto">The whole thing is largely about making it convenient to use.</p>
<p dir="auto">Everything is editable in place, all changes are saved automatically and last 50 revisions are kept for undo/redo:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-inplace-editing.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-inplace-editing.gif" alt="In-place editing" data-animated-image=""></a></p>
<p dir="auto">New notes can be quickly added directly where they are needed, e.g. before or after existing notes:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-ctrl-add-note.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-ctrl-add-note.gif" alt="Ctrl-add note" data-animated-image=""></a></p>
<p dir="auto">Notes can also be dragged around, including to and from other lists:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-drag-n-drop.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-drag-n-drop.gif" alt="Drag-n-drop" data-animated-image=""></a></p>
<p dir="auto">Nearly all controls are hidden by default to reduce visual clutter to its minimum:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-hidden-controls.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-hidden-controls.gif" alt="Hidden controls" data-animated-image=""></a></p>
<p dir="auto">Longer notes can be collapsed to show just the first line, for even more compact view of the board:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-collapsed-notes.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-collapsed-notes.gif" alt="Collapsed notes" data-animated-image=""></a></p>
<p dir="auto">The default font is <a href="https://tribby.com/fonts/barlow/" rel="nofollow">Barlow</a> - it's both narrow <em>and</em> still very legible. Absolutely fantastic design!</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/barlow-specimen.png"><img src="https://github.com/apankrat/nullboard/raw/master/images/barlow-specimen.png" alt="Barlow speciment"></a></p>
<p dir="auto">Notes can also be set to look a bit different. This is useful for partitioning lists into sections:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-raw-notes.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-raw-notes.gif" alt="Raw notes" data-animated-image=""></a></p>
<p dir="auto">Links starting with https:// and http:// are recognized. They will "pulse" on mouse hover and can be opened via the right-click menu.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-links-on-hover.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-links-on-hover.gif" alt="Links on hover" data-animated-image=""></a></p>
<p dir="auto">Pressing CapsLock will highlight all links and make them left-clickable.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-links-reveal.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-links-reveal.gif" alt="Links reveal" data-animated-image=""></a></p>
<p dir="auto">Lists can be moved around as well, though not as flashy as notes:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-list-swap.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-list-swap.gif" alt="List swapping" data-animated-image=""></a></p>
<p dir="auto">The font can be changed; its size and line height can be adjusted:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-ui-preferences.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-ui-preferences.gif" alt="Theme and zoom" data-animated-image=""></a></p>
<p dir="auto">The color theme can be inverted:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/apankrat/nullboard/blob/master/images/nullboard-dark-theme.gif"><img src="https://github.com/apankrat/nullboard/raw/master/images/nullboard-dark-theme.gif" alt="Dark theme" data-animated-image=""></a></p>
<p dir="auto">Also:</p>
<ul dir="auto">
<li>Support for multiple boards with near-instant switching</li>
<li>Undo/redo for 50 revisions per board (configurable in the code)</li>
<li>Keyboard shortcuts, including Tab'ing through notes</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Caveats</h2><a id="user-content-caveats" aria-label="Permalink: Caveats" href="#caveats"></a></p>
<ul dir="auto">
<li>Written for desktop and keyboard/mouse use</li>
<li>Essentially untested on mobile devices and against tap/touch input</li>
<li>Works in Firefox, tested in Chrome, should work in Safari and may work in Edge (or what it's called now)</li>
<li>Uses localStorage for storing boards/lists/notes, so be careful around <a href="https://stackoverflow.com/questions/9948284/how-persistent-is-localstorage" rel="nofollow">clearing your cache</a></li>
</ul>
<p dir="auto">You spot a bug, file an issue.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Dockerized version</h2><a id="user-content-dockerized-version" aria-label="Permalink: Dockerized version" href="#dockerized-version"></a></p>
<p dir="auto">See <a href="https://github.com/rsoper/nullboard">this fork</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Background</h2><a id="user-content-background" aria-label="Permalink: Background" href="#background"></a></p>
<p dir="auto">Nullboard is something that handles ToDo lists in the way that works really well. For <em>me</em> that is.</p>
<p dir="auto">Tried a lot of options, some were almost <em>it</em>, but none was 100%.</p>
<p dir="auto"><strong>Trello</strong> wasn't bad, but never was comfortable with the idea of storing my data in cloud without any actual need.</p>
<p dir="auto"><strong>Wekan</strong> looked promising, but ultimately too heavy and had no offline usage support or a local storage option.</p>
<p dir="auto"><strong>Things</strong> was beautiful, but not the right tool for the job.</p>
<p dir="auto"><strong>Inkscape</strong> - I kid you not - with a laundry list of text items was actually OK, but didn't scale well.</p>
<p dir="auto">Ditto for the plain <strong>text files</strong>.</p>
<p dir="auto">Pieces of <strong>paper</strong> were almost there, but rearranging items can be quite a hassle.</p>
<p dir="auto">So finally got annoyed enough to sit down and write exactly what I wanted.</p>
<p dir="auto">And, voilà, Nullboard came out  =&gt;  <a href="https://nullboard.io/preview" rel="nofollow">https://nullboard.io/preview</a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">The <a href="https://opensource.org/licenses/BSD-2-Clause/" rel="nofollow">2-clause BSD license</a> with the <a href="https://commonsclause.com/" rel="nofollow">Commons Clause</a>.</p>
<p dir="auto">That is, you can use, change and re-distribute it for as long as you don't try and sell it.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Updates</h2><a id="user-content-updates" aria-label="Permalink: Updates" href="#updates"></a></p>
<p dir="auto">Primary feed is through <a href="https://twitter.com/nullboard" rel="nofollow">@nullboard</a> on Twitter.</p>
<p dir="auto">The changelog is here =&gt; <a href="https://nullboard.io/changes" rel="nofollow">https://nullboard.io/changes</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How do you do, fellow web developers? A growing disconnect (147 pts)]]></title>
            <link>https://rakhim.exotext.com/web-developers-a-growing-disconnect</link>
            <guid>42461264</guid>
            <pubDate>Thu, 19 Dec 2024 13:39:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rakhim.exotext.com/web-developers-a-growing-disconnect">https://rakhim.exotext.com/web-developers-a-growing-disconnect</a>, See on <a href="https://news.ycombinator.com/item?id=42461264">Hacker News</a></p>
Couldn't get https://rakhim.exotext.com/web-developers-a-growing-disconnect: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Alignment faking in large language models (259 pts)]]></title>
            <link>https://www.anthropic.com/research/alignment-faking</link>
            <guid>42458752</guid>
            <pubDate>Thu, 19 Dec 2024 05:43:29 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anthropic.com/research/alignment-faking">https://www.anthropic.com/research/alignment-faking</a>, See on <a href="https://news.ycombinator.com/item?id=42458752">Hacker News</a></p>
Couldn't get https://www.anthropic.com/research/alignment-faking: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Markov Keyboard: keyboard layout that changes by Markov frequency (159 pts)]]></title>
            <link>https://github.com/shapr/markovkeyboard</link>
            <guid>42458599</guid>
            <pubDate>Thu, 19 Dec 2024 05:12:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/shapr/markovkeyboard">https://github.com/shapr/markovkeyboard</a>, See on <a href="https://news.ycombinator.com/item?id=42458599">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">markovkeyboard</h2><a id="user-content-markovkeyboard" aria-label="Permalink: markovkeyboard" href="#markovkeyboard"></a></p>
<p dir="auto">keyboard layout that changes by markov frequency</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/shapr/markovkeyboard/blob/master/screenshot.png"><img src="https://github.com/shapr/markovkeyboard/raw/master/screenshot.png" alt="screenshot"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">the big idea</h2><a id="user-content-the-big-idea" aria-label="Permalink: the big idea" href="#the-big-idea"></a></p>
<p dir="auto">Static keyboard layouts are boring and predictable. Let's spice up the whole idea of keyboard layouts by having the layout <em>CHANGE WHILE YOU ARE TYPING</em>!</p>
<p dir="auto">The layout will update itself to move the keys that most frequently come next to the home row.
For example, if you type only "the" all day, then when you press the letter 't' the letter 'h' will be on the home row.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">how do I type?</h2><a id="user-content-how-do-i-type" aria-label="Permalink: how do I type?" href="#how-do-i-type"></a></p>
<p dir="auto">There are minor challenges involved if your keyboard layout could change with every keypress, thus this prototype is an emacs library that displays and updates the current layout with every keypress.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">does it work?</h2><a id="user-content-does-it-work" aria-label="Permalink: does it work?" href="#does-it-work"></a></p>
<p dir="auto">Pretty much! It only remaps the letters from a-zA-Z, but it does work!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">how do I make it go?</h2><a id="user-content-how-do-i-make-it-go" aria-label="Permalink: how do I make it go?" href="#how-do-i-make-it-go"></a></p>
<p dir="auto">Use the pre-trained markov-all.el with M-x load-file then type in /path/to/markovkeyboard/markov-all.el</p>
<p dir="auto">After that, use M-x set-input-method and choose markov-insanity-a or replace a with any letter you prefer!</p>
<p dir="auto">If you want a different set of 26 keymaps:</p>
<p dir="auto">Download a plain text file for training the markov chain, then run "python crunch_freqs.py filename.txt" and that will generate a markov-all.el file that you can use with M-x load-file .</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">how do I make it stop?</h2><a id="user-content-how-do-i-make-it-stop" aria-label="Permalink: how do I make it stop?" href="#how-do-i-make-it-stop"></a></p>
<p dir="auto">C-\ is bound to toggle-input-method in stock emacs, and the keybindings are all buffer local, so the code shouldn't make your life too difficult.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">what needs to be done?</h2><a id="user-content-what-needs-to-be-done" aria-label="Permalink: what needs to be done?" href="#what-needs-to-be-done"></a></p>
<ul>
<li> define a new input-method for markov</li>
<li> display the keyboard layout when enabling the mode</li>
<li> port to X11 to ease getting started</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Amazon workers to strike at multiple US warehouses during busy holiday season (359 pts)]]></title>
            <link>https://www.reuters.com/technology/amazon-workers-strike-multiple-us-warehouses-during-busy-holiday-season-2024-12-19/</link>
            <guid>42458431</guid>
            <pubDate>Thu, 19 Dec 2024 04:27:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/technology/amazon-workers-strike-multiple-us-warehouses-during-busy-holiday-season-2024-12-19/">https://www.reuters.com/technology/amazon-workers-strike-multiple-us-warehouses-during-busy-holiday-season-2024-12-19/</a>, See on <a href="https://news.ycombinator.com/item?id=42458431">Hacker News</a></p>
Couldn't get https://www.reuters.com/technology/amazon-workers-strike-multiple-us-warehouses-during-busy-holiday-season-2024-12-19/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Firenvim – Turn the browser into a Neovim client (161 pts)]]></title>
            <link>https://github.com/glacambre/firenvim</link>
            <guid>42457816</guid>
            <pubDate>Thu, 19 Dec 2024 02:34:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/glacambre/firenvim">https://github.com/glacambre/firenvim</a>, See on <a href="https://news.ycombinator.com/item?id=42457816">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text">
<p dir="auto">Turn your browser¹ into a Neovim client (demos: <a href="https://www.youtube.com/watch?v=suvh0yFfIB8" rel="nofollow">justinmk 🇺🇸</a>, <a href="https://www.youtube.com/watch?v=dNQJONKnJrg" rel="nofollow">Sean Feng 🇨🇳</a>).</p>
<p dir="auto">¹ <sub>Firefox and Chrome are specifically supported. Other Chromium based browsers such as Brave, Vivaldi, Opera, and Arc should also work but are not specifically tested.</sub></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/glacambre/firenvim/blob/master/firenvim.gif"><img src="https://github.com/glacambre/firenvim/raw/master/firenvim.gif" alt="Firenvim demo" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to use</h2><a id="user-content-how-to-use" aria-label="Permalink: How to use" href="#how-to-use"></a></p>
<p dir="auto">Just click on any textarea and it will be immediately replaced by an instance of Firenvim. To set the content of the now hidden textarea to the content of the Neovim instance, simply <code>:w</code>. If you want to close the Firenvim overlay and return to the textarea, use <code>:q</code>. If you selected an element where you expected the Firenvim frame to appear and it didn't, try pressing <code>&lt;C-e&gt;</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installing</h2><a id="user-content-installing" aria-label="Permalink: Installing" href="#installing"></a></p>
<p dir="auto">Before installing anything please read <a href="https://github.com/glacambre/firenvim/blob/master/SECURITY.md">SECURITY.md</a> and make sure you're okay with everything mentioned. In the event you think of a way to compromise Firenvim, please send me an email (you can find my address on my website).</p>
<ol dir="auto">
<li>
<p dir="auto">Install Firenvim as a regular NeoVim plugin, then run the built-in post-install script.</p>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/folke/lazy.nvim">lazy</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="{ 'glacambre/firenvim', build = &quot;:call firenvim#install(0)&quot; }
"><pre>{ <span><span>'</span>glacambre/firenvim<span>'</span></span>, <span>build</span> <span>=</span> <span><span>"</span>:call firenvim#install(0)<span>" </span></span>}
</pre></div>
</li>
<li>
<p dir="auto"><a href="https://github.com/junegunn/vim-plug">vim-plug</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="Plug 'glacambre/firenvim', { 'do': { _ -> firenvim#install(0) } }"><pre>Plug <span><span>'</span>glacambre/firenvim<span>'</span></span>, { <span><span>'</span>do<span>'</span></span>: { _ <span>-</span>&gt; <span>firenvim#install</span>(<span>0</span>) } }</pre></div>
</li>
<li>
<p dir="auto"><a href="https://github.com/k-takata/minpac">minpac</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="call minpac#add('glacambre/firenvim', { 'type': 'opt', 'do': 'packadd firenvim | call firenvim#install(0)'})
if exists('g:started_by_firenvim')
  packadd firenvim
endif"><pre><span>call</span> <span>minpac#add</span>(<span><span>'</span>glacambre/firenvim<span>'</span></span>, { <span><span>'</span>type<span>'</span></span>: <span><span>'</span>opt<span>'</span></span>, <span><span>'</span>do<span>'</span></span>: <span><span>'</span>packadd firenvim | call firenvim#install(0)<span>'</span></span>})
<span>if</span> <span>exists</span>(<span><span>'</span>g:started_by_firenvim<span>'</span></span>)
  <span>packadd</span> firenvim
<span>endif</span></pre></div>
</li>
<li>
<p dir="auto"><a href="https://github.com/VundleVim/Vundle.vim">vundle</a>, others</p>
<p dir="auto">Install the plugin as you usually would, then run this shell command:</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ nvim --headless &quot;+call firenvim#install(0) | q&quot;"><pre>$ nvim --headless <span><span>"</span>+call firenvim#install(0) | q<span>"</span></span></pre></div>
</li>
</ul>
</li>
<li>
<p dir="auto">Install the Firenvim addon for your browser from <a href="https://addons.mozilla.org/en-US/firefox/addon/firenvim/" rel="nofollow">Mozilla's store</a> or <a href="https://chrome.google.com/webstore/detail/firenvim/egpjdkipkomnmjhjmdamaniclmdlobbo" rel="nofollow">Google's</a>.</p>
</li>
</ol>
<p dir="auto">If you would rather build and install Firenvim from source, check <a href="https://github.com/glacambre/firenvim/blob/master/CONTRIBUTING.md">CONTRIBUTING.md</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Other browsers</h4><a id="user-content-other-browsers" aria-label="Permalink: Other browsers" href="#other-browsers"></a></p>
<p dir="auto">Other browsers aren't supported for now. Opera, Vivaldi and other Chromium-based browsers should however work just like in Chromium and have similar install steps. Brave, Edge, and Arc might work, Safari doesn't (it doesn't support Webextensions).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Permissions</h2><a id="user-content-permissions" aria-label="Permalink: Permissions" href="#permissions"></a></p>
<p dir="auto">Firenvim currently requires the following permissions for the following reasons:</p>
<ul dir="auto">
<li><a href="https://support.mozilla.org/en-US/kb/permission-request-messages-firefox-extensions?as=u&amp;utm_source=inproduct#w_access-your-data-for-all-websites" rel="nofollow">Access your data for all websites</a>: this is necessary in order to be able to append elements (= the neovim iframe) to the DOM.</li>
<li><a href="https://support.mozilla.org/en-US/kb/permission-request-messages-firefox-extensions?as=u#w_exchange-messages-with-programs-other-than-firefox" rel="nofollow">Exchange messages with programs other than Firefox</a>: this is necessary in order to be able to start neovim instances.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Configuring Firenvim</h2><a id="user-content-configuring-firenvim" aria-label="Permalink: Configuring Firenvim" href="#configuring-firenvim"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Manually triggering Firenvim</h3><a id="user-content-manually-triggering-firenvim" aria-label="Permalink: Manually triggering Firenvim" href="#manually-triggering-firenvim"></a></p>
<p dir="auto">You can configure the keybinding to manually trigger Firenvim (<code>&lt;C-e&gt;</code> by default) in <a href="https://support.mozilla.org/en-US/kb/manage-extension-shortcuts-firefox" rel="nofollow">the shortcuts menu in <code>about://addons</code></a> on Firefox, or in <code>chrome://extensions/shortcuts</code> on Chrome.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Temporarily disabling Firenvim in a tab</h3><a id="user-content-temporarily-disabling-firenvim-in-a-tab" aria-label="Permalink: Temporarily disabling Firenvim in a tab" href="#temporarily-disabling-firenvim-in-a-tab"></a></p>
<p dir="auto">Temporarily disabling (and re-enabling) Firenvim in a tab can be done either by clicking on the Firenvim button next to the urlbar or by configuring a browser shortcut (see the previous section to find out how browser shortcuts can be configured).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Building a Firenvim-specific config</h3><a id="user-content-building-a-firenvim-specific-config" aria-label="Permalink: Building a Firenvim-specific config" href="#building-a-firenvim-specific-config"></a></p>
<p dir="auto">Note: If you would prefer VimScript examples, you can consult the (outdated) readme from commit 132979166a02319f0b49815135e60a4e4599de91 or earlier.</p>
<p dir="auto"><strong>New</strong>: With Neovim nightly builds from 2023/02/17 or more recent, you can use <a href="https://neovim.io/doc/user/starting.html#$NVIM_APPNAME" rel="nofollow">$NVIM_APPNAME</a> to define a completely separate firenvim config. In order to do that, make sure "NVIM_APPNAME" is appropriately set when you run firenvim#install().</p>
<p dir="auto">When it starts Neovim, Firenvim sets the variable <code>g:started_by_firenvim</code> which you can check to run different code in your init.lua. For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="if vim.g.started_by_firenvim == true then
  vim.o.laststatus = 0
else
  vim.o.laststatus = 2
end"><pre><span>if</span> <span>vim</span>.<span>g</span>.<span>started_by_firenvim</span> <span>==</span> <span>true</span> <span>then</span>
  <span>vim</span>.<span>o</span>.<span>laststatus</span> <span>=</span> <span>0</span>
<span>else</span>
  <span>vim</span>.<span>o</span>.<span>laststatus</span> <span>=</span> <span>2</span>
<span>end</span></pre></div>
<p dir="auto">Alternatively, you can detect when Firenvim connects to Neovim by using the <code>UIEnter</code> autocmd event:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_create_autocmd({'UIEnter'}, {
    callback = function(event)
        local client = vim.api.nvim_get_chan_info(vim.v.event.chan).client
        if client ~= nil and client.name == &quot;Firenvim&quot; then
            vim.o.laststatus = 0
        end
    end
})"><pre><span>vim</span>.<span>api</span>.<span>nvim_create_autocmd</span>({<span><span>'</span>UIEnter<span>'</span></span>}, {
    <span>callback</span> <span>=</span> <span>function</span>(<span>event</span>)
        <span>local</span> <span>client</span> <span>=</span> <span>vim</span>.<span>api</span>.<span>nvim_get_chan_info</span>(<span>vim</span>.<span>v</span>.<span>event</span>.<span>chan</span>).<span>client</span>
        <span>if</span> <span>client</span> <span>~=</span> <span>nil</span> <span>and</span> <span>client</span>.<span>name</span> <span>==</span> <span><span>"</span>Firenvim<span>" </span></span><span>then</span>
            <span>vim</span>.<span>o</span>.<span>laststatus</span> <span>=</span> <span>0</span>
        <span>end</span>
    <span>end</span>
})</pre></div>
<p dir="auto">Similarly, you can detect when Firenvim disconnects from a Neovim instance with the <code>UILeave</code> autocommand.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Using different settings depending on the url/page/element being edited</h3><a id="user-content-using-different-settings-depending-on-the-urlpageelement-being-edited" aria-label="Permalink: Using different settings depending on the url/page/element being edited" href="#using-different-settings-depending-on-the-urlpageelement-being-edited"></a></p>
<p dir="auto">The nvim buffer loaded into a textarea is given a unique name. All buffers are named something like this: <code>domainname_page_selector.txt</code> (see the <a href="https://github.com/glacambre/firenvim/blob/master/src/utils/utils.ts">toFileName function</a>).</p>
<p dir="auto">This alows you to configure different settings by creating autocommands targeting/matching the buffername for that url/page/element. For example, this will set file type to markdown for all GitHub buffers:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_create_autocmd({'BufEnter'}, {
    pattern = &quot;github.com_*.txt&quot;,
    command = &quot;set filetype=markdown&quot;
})"><pre><span>vim</span>.<span>api</span>.<span>nvim_create_autocmd</span>({<span><span>'</span>BufEnter<span>'</span></span>}, {
    <span>pattern</span> <span>=</span> <span><span>"</span>github.com_*.txt<span>"</span></span>,
    <span>command</span> <span>=</span> <span><span>"</span>set filetype=markdown<span>"</span></span>
})</pre></div>
<p dir="auto">To view the buffername of your nvim instance in a textarea, use <code>:buffers</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Understanding Firenvim's configuration object</h3><a id="user-content-understanding-firenvims-configuration-object" aria-label="Permalink: Understanding Firenvim's configuration object" href="#understanding-firenvims-configuration-object"></a></p>
<p dir="auto">You can configure everything else about Firenvim by creating a dictionary named <code>vim.g.firenvim_config</code> in your init.lua and setting the keys "globalSettings" and "localSettings". In the dictionary <code>vim.g.firenvim_config["localSettings"]</code> you can map Javascript patterns that match against the full URL to settings that are used for all URLs matched by that pattern. When multiple patterns match a URL, the pattern with the highest "priority" value is used. Here is an example (the settings and their possible values will be explained in the next subsections):</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config = {
    globalSettings = { alt = &quot;all&quot; },
    localSettings = {
        [&quot;.*&quot;] = {
            cmdline  = &quot;neovim&quot;,
            content  = &quot;text&quot;,
            priority = 0,
            selector = &quot;textarea&quot;,
            takeover = &quot;always&quot;
        }
    }
}"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span> <span>=</span> {
    <span>globalSettings</span> <span>=</span> { <span>alt</span> <span>=</span> <span><span>"</span>all<span>" </span></span>},
    <span>localSettings</span> <span>=</span> {
        [<span><span>"</span>.*<span>"</span></span>] <span>=</span> {
            <span>cmdline</span>  <span>=</span> <span><span>"</span>neovim<span>"</span></span>,
            <span>content</span>  <span>=</span> <span><span>"</span>text<span>"</span></span>,
            <span>priority</span> <span>=</span> <span>0</span>,
            <span>selector</span> <span>=</span> <span><span>"</span>textarea<span>"</span></span>,
            <span>takeover</span> <span>=</span> <span><span>"</span>always<span>"</span></span>
        }
    }
}</pre></div>
<p dir="auto">With this configuration, <code>takeover</code> will be set to <code>always</code> on all websites. If we wanted to override this value on british websites, we could add the following lines to our init.vim. Notice how the priority of this new regex is higher than that of the <code>.*</code> regex:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings[&quot;https?://[^/]+\\.co\\.uk/&quot;] = { takeover = 'never', priority = 1 }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>"</span>https?://[^/]+<span>\\</span>.co<span>\\</span>.uk/<span>"</span></span>] <span>=</span> { <span>takeover</span> <span>=</span> <span><span>'</span>never<span>'</span></span>, <span>priority</span> <span>=</span> <span>1</span> }</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Configuring what elements Firenvim should appear on</h3><a id="user-content-configuring-what-elements-firenvim-should-appear-on" aria-label="Permalink: Configuring what elements Firenvim should appear on" href="#configuring-what-elements-firenvim-should-appear-on"></a></p>
<p dir="auto">The <code>selector</code> attribute of a localSetting controls what elements Firenvim automatically takes over. Here's the default value:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings['.*'] = { selector = 'textarea:not([readonly], [aria-readonly]), div[role=&quot;textbox&quot;]' }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>'</span>.*<span>'</span></span>] <span>=</span> { <span>selector</span> <span>=</span> <span><span>'</span>textarea:not([readonly], [aria-readonly]), div[role="textbox"]<span>' </span></span>}</pre></div>
<p dir="auto">If you don't want to use Firenvim with rich text editors (e.g. Gmail, Outlook, Slack…) as a general rule, you might want to restrict Firenvim to simple textareas:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings['.*'] = { selector = 'textarea' }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>'</span>.*<span>'</span></span>] <span>=</span> { <span>selector</span> <span>=</span> <span><span>'</span>textarea<span>' </span></span>}</pre></div>
<p dir="auto">Since <code>selector</code> is just a CSS selector, you have access to all of CSS's pseudo selectors, including <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:not" rel="nofollow"><code>:not()</code></a>, which allows you to exclude elements that have certain attributes, like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings['.*'] = { selector = 'textarea:not([class=xxx])' }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>'</span>.*<span>'</span></span>] <span>=</span> { <span>selector</span> <span>=</span> <span><span>'</span>textarea:not([class=xxx])<span>' </span></span>}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Configuring Firenvim to not always take over elements</h3><a id="user-content-configuring-firenvim-to-not-always-take-over-elements" aria-label="Permalink: Configuring Firenvim to not always take over elements" href="#configuring-firenvim-to-not-always-take-over-elements"></a></p>
<p dir="auto">Firenvim has a setting named <code>takeover</code> that can be set to <code>always</code>, <code>empty</code>, <code>never</code>, <code>nonempty</code> or <code>once</code>. When set to <code>always</code>, Firenvim will always take over elements for you. When set to <code>empty</code>, Firenvim will only take over empty elements. When set to <code>never</code>, Firenvim will never automatically appear, thus forcing you to use a keyboard shortcut in order to make the Firenvim frame appear. When set to <code>nonempty</code>, Firenvim will only take over elements that aren't empty. When set to <code>once</code>, Firenvim will take over elements the first time you select them, which means that after <code>:q</code>'ing Firenvim, you'll have to use the keyboard shortcut to make it appear again. Here's how to use the <code>takeover</code> setting:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings['.*'] = { takeover = 'always' }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>'</span>.*<span>'</span></span>] <span>=</span> { <span>takeover</span> <span>=</span> <span><span>'</span>always<span>' </span></span>}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Choosing a command line</h3><a id="user-content-choosing-a-command-line" aria-label="Permalink: Choosing a command line" href="#choosing-a-command-line"></a></p>
<p dir="auto">You can chose between neovim's built-in command line, firenvim's command line and no command line at all by setting the localSetting named <code>cmdline</code> to either <code>neovim</code>, <code>firenvim</code> or <code>none</code>, e.g.:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings['.*'] = { cmdline = 'firenvim' }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>'</span>.*<span>'</span></span>] <span>=</span> { <span>cmdline</span> <span>=</span> <span><span>'</span>firenvim<span>' </span></span>}</pre></div>
<p dir="auto">Choosing <code>none</code> does not make sense unless you have alternative way to display the command line such as <a href="https://github.com/folke/noice.nvim">noice.nvim</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Editing HTML directly</h3><a id="user-content-editing-html-directly" aria-label="Permalink: Editing HTML directly" href="#editing-html-directly"></a></p>
<p dir="auto">The <code>content</code> localSetting controls how Firenvim should read the content of an element. Setting it to <code>html</code> will make Firenvim fetch the content of elements as HTML, <code>text</code> will make it use plaintext. The default value is <code>text</code>:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config.localSettings['.*'] = { content = 'html' }"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span>.<span>localSettings</span>[<span><span>'</span>.*<span>'</span></span>] <span>=</span> { <span>content</span> <span>=</span> <span><span>'</span>html<span>' </span></span>}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Special characters on MacOS</h3><a id="user-content-special-characters-on-macos" aria-label="Permalink: Special characters on MacOS" href="#special-characters-on-macos"></a></p>
<p dir="auto">On MacOS, the default keyboard layouts emit special characters when the alt (i.e. option) key is held down. From the perspective of the browser, these special characters replace the underlying "main" character of a keystroke event while retaining the modifier. For example, in the standard US layout the key chord alt-o is received in the browser as alt-ø rather than alt-o. Further, certain alt-chords represent "dead keys", which apply a diacritic to the next character entered. Pressing alt-e followed by a produces the single character "á" while alt-u followed by a produces "ä". To produce this behavior, diacritic-mapped strokes like alt-e and alt-u are themselves mapped to a <a href="https://en.wikipedia.org/wiki/Dead_key" rel="nofollow">"Dead key" character</a>.</p>
<p dir="auto">These behaviors complicate the support of special character and alt/meta (A- or M-) vim mappings on MacOS in two ways:</p>
<ol dir="auto">
<li>
<p dir="auto">There is no way to generate unmodified special character key events. For example, since the only way to generate the character "ø" via the keyboard is by holding down alt, any key event with the "ø" character will also have an alt modifier. If we forward this directly to Vim, it will be received as <code>&lt;M-ø&gt;</code>.</p>
</li>
<li>
<p dir="auto">There is no way to generate alt-modified plain alphanumeric characters. For example, an <code>&lt;M-o&gt;</code> mapping won't work because pressing alt-o generates <code>&lt;M-ø&gt;</code> rather than <code>&lt;M-o&gt;</code>.</p>
</li>
</ol>
<p dir="auto">Terminal and standalone GUI applications can solve these problems by changing the interpretation of the alt key at the application level. <code>Terminal.app</code> and <code>iTerm2</code>, for instance, both provide a "use Option as Meta key" preference that converts incoming alt-chords at the application level. Firenvim, however, is a browser extension that operates off of browser keystroke events rather than application-level events. At present, we are unsure how to implement this "use option as meta" functionality at the browser event level (help here is welcome!). However, there are some workarounds.</p>
<p dir="auto">For problem (1), Firenvim will by default drop the alt key on MacOS for any special character, defined here as non-alphanumeric (not matching <code>/[a-zA-Z0-9]/</code>). This means alt-o will be forwarded to NeoVim as "ø" rather than "M-ø". Note that this behavior can be changed by setting the <code>alt</code> setting of the <code>globalSettings</code> configuration to <code>all</code>, like this:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Making Firenvim ignore keys</h3><a id="user-content-making-firenvim-ignore-keys" aria-label="Permalink: Making Firenvim ignore keys" href="#making-firenvim-ignore-keys"></a></p>
<p dir="auto">You can make Firenvim ignore key presses (thus letting the browser handle them) by setting key-value pairs in <code>globalSettings.ignoreKeys</code>. The key needs to be the neovim mode the key press should be ignored in and the value should be an array containing the textual representation of the key press you want ignored. If you want to ignore a key press in all modes, you can use <code>all</code> as mode key.</p>
<p dir="auto">For example, if you want to make Firenvim ignore <code>&lt;C-1&gt;</code> and <code>&lt;C-2&gt;</code> in normal mode and <code>&lt;C--&gt;</code> in all modes to let your browser handle them, you should define ignoreKeys like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config = {
    globalSettings = {
        ignoreKeys = {
            all = { '<C-->' },
            normal = { '<C-1>', '<C-2>' }
        }
    }
}"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span> <span>=</span> {
    <span>globalSettings</span> <span>=</span> {
        <span>ignoreKeys</span> <span>=</span> {
            <span>all</span> <span>=</span> { <span><span>'</span>&lt;C--&gt;<span>' </span></span>},
            <span>normal</span> <span>=</span> { <span><span>'</span>&lt;C-1&gt;<span>'</span></span>, <span><span>'</span>&lt;C-2&gt;<span>' </span></span>}
        }
    }
}</pre></div>
<p dir="auto">Mode names are defined in <a href="https://github.com/neovim/neovim/blob/master/src/nvim/cursor_shape.c">Neovim's cursor_shape.c</a>. Note that if the key press contains multiple modifiers, Shift needs to be first, Alt second, Control third and OS/Meta last (e.g. <code>Ctrl+Alt+Shift+1</code> needs to be <code>&lt;SAC-1&gt;</code>). If your keyboard layout requires you to press shift in order to press numbers, shift should be present in the key representation (e.g. on french azerty keyboards, <code>&lt;C-1&gt;</code> should actually be <code>&lt;SC-1&gt;</code>).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Interacting with the page</h3><a id="user-content-interacting-with-the-page" aria-label="Permalink: Interacting with the page" href="#interacting-with-the-page"></a></p>
<p dir="auto">You can execute javascript in the page by using <code>firenvim#eval_js</code>. The code has to be a valid javascript expression (NOT a statement). You can provide the name of a function that should be executed with the result of the expression. Note that some pages prevent evaluating JavaScript with their <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP" rel="nofollow">CSP</a> and this can't be worked around. Here's an example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.fn['firenvim#eval_js']('alert(&quot;Hello World!&quot;)', 'MyFunction')"><pre><span>vim</span>.<span>fn</span>[<span><span>'</span>firenvim#eval_js<span>'</span></span>](<span><span>'</span>alert("Hello World!")<span>'</span></span>, <span><span>'</span>MyFunction<span>'</span></span>)</pre></div>
<p dir="auto">You can move focus from the editor back to the page or the input field by calling <code>firenvim#focus_page</code> or <code>firenvim#focus_input</code>. Here's an example that does exactly this if you press <code>&lt;Esc&gt;</code> twice while in normal mode:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_set_keymap(&quot;n&quot;, &quot;<Esc><Esc>&quot;, &quot;<Cmd>call firenvim#focus_page()<CR>&quot;, {})"><pre><span>vim</span>.<span>api</span>.<span>nvim_set_keymap</span>(<span><span>"</span>n<span>"</span></span>, <span><span>"</span>&lt;Esc&gt;&lt;Esc&gt;<span>"</span></span>, <span><span>"</span>&lt;Cmd&gt;call firenvim#focus_page()&lt;CR&gt;<span>"</span></span>, {})</pre></div>
<p dir="auto">There is also a function named <code>firenvim#hide_frame()</code> which will temporarily hide the Firenvim frame. You will then be able to bring the neovim frame back either by unfocusing and refocusing the textarea or by using the <a href="https://github.com/glacambre/firenvim#manually-triggering-firenvim">keybinding to manually trigger Firenvim</a>.</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_set_keymap(&quot;n&quot;, &quot;<C-z>&quot;, &quot;<Cmd>call firenvim#hide_frame()<CR>&quot;, {})"><pre><span>vim</span>.<span>api</span>.<span>nvim_set_keymap</span>(<span><span>"</span>n<span>"</span></span>, <span><span>"</span>&lt;C-z&gt;<span>"</span></span>, <span><span>"</span>&lt;Cmd&gt;call firenvim#hide_frame()&lt;CR&gt;<span>"</span></span>, {})</pre></div>
<p dir="auto">A function named <code>firenvim#press_keys()</code> will allow you to send key events to the underlying input field by taking a list of vim-like keys (e.g. <code>a</code>, <code>&lt;CR&gt;</code>, <code>&lt;Space&gt;</code>…) as argument. Note that this only "triggers" an event, it does not add text to the input field. For example if you'd like firenvim to send <code>&lt;CR&gt;</code> to the webpage when you press <code>&lt;CR&gt;</code> in the editor, you can use the following mapping which is useful with chat apps:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_create_autocmd({'BufEnter', {
    pattern = &quot;riot.im_*&quot;,
    command = [[inoremap <CR> <Esc>:w<CR>:call firenvim#press_keys(&quot;<LT>CR>&quot;)<CR>ggdGa]],
})"><pre><span>vim</span>.<span>api</span>.<span>nvim_create_autocmd</span>({<span><span>'</span>BufEnter<span>'</span></span>, {
    <span>pattern</span> <span>=</span> <span><span>"</span>riot.im_*<span>"</span></span>,
    <span>command</span> <span>=</span> <span><span>[[</span>inoremap &lt;CR&gt; &lt;Esc&gt;:w&lt;CR&gt;:call firenvim#press_keys("&lt;LT&gt;CR&gt;")&lt;CR&gt;ggdGa<span>]]</span></span>,
})</pre></div>
<p dir="auto">Note that our goal is to make the mapping type <code>firenvim#press_keys("&lt;CR&gt;")</code> in vim's command prompt and then execute it. Since we want the keys <code>&lt;CR&gt;</code> to be typed and not <kbd>Enter</kbd> to be pressed, we can't use <code>&lt;CR&gt;</code> because it would be interpreted by <code>inoremap</code>. Hence we use <code>&lt;LT&gt;CR&gt;</code> in order to type the keys <code>&lt;CR&gt;</code>. Similarly, if you want to type the keys <code>&lt;C-CR&gt;</code> you'd use <code>&lt;LT&gt;C-CR&gt;</code>.</p>
<p dir="auto">Known Issues: some websites do not react to <code>firenvim#press_keys</code> (e.g. Slack).</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Automatically syncing changes to the page</h3><a id="user-content-automatically-syncing-changes-to-the-page" aria-label="Permalink: Automatically syncing changes to the page" href="#automatically-syncing-changes-to-the-page"></a></p>
<p dir="auto">Since Firenvim simply uses the BufWrite event in order to detect when it needs to write neovim's buffers to the page, Firenvim can be made to automatically synchronize all changes like this:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_create_autocmd({'TextChanged', 'TextChangedI'}, {
    nested = true,
    command = &quot;write&quot;
})"><pre><span>vim</span>.<span>api</span>.<span>nvim_create_autocmd</span>({<span><span>'</span>TextChanged<span>'</span></span>, <span><span>'</span>TextChangedI<span>'</span></span>}, {
    <span>nested</span> <span>=</span> <span>true</span>,
    <span>command</span> <span>=</span> <span><span>"</span>write<span>"</span></span>
})</pre></div>
<p dir="auto">Depending on how large the edited buffer is, this could be a little slow. This more sophisticated approach will throttle writes:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.api.nvim_create_autocmd({'TextChanged', 'TextChangedI'}, {
    callback = function(e)
        if vim.g.timer_started == true then
            return
        end
        vim.g.timer_started = true
        vim.fn.timer_start(10000, function()
            vim.g.timer_started = false
            vim.cmd('silent write')
        end)
    end
})"><pre><span>vim</span>.<span>api</span>.<span>nvim_create_autocmd</span>({<span><span>'</span>TextChanged<span>'</span></span>, <span><span>'</span>TextChangedI<span>'</span></span>}, {
    <span>callback</span> <span>=</span> <span>function</span>(<span>e</span>)
        <span>if</span> <span>vim</span>.<span>g</span>.<span>timer_started</span> <span>==</span> <span>true</span> <span>then</span>
            <span>return</span>
        <span>end</span>
        <span>vim</span>.<span>g</span>.<span>timer_started</span> <span>=</span> <span>true</span>
        <span>vim</span>.<span>fn</span>.<span>timer_start</span>(<span>10000</span>, <span>function</span>()
            <span>vim</span>.<span>g</span>.<span>timer_started</span> <span>=</span> <span>false</span>
            <span>vim</span>.<span>cmd</span>(<span><span>'</span>silent write<span>'</span></span>)
        <span>end</span>)
    <span>end</span>
})</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Configuring message timeout</h3><a id="user-content-configuring-message-timeout" aria-label="Permalink: Configuring message timeout" href="#configuring-message-timeout"></a></p>
<p dir="auto">Due to space constraints, the external command line covers part of the buffer. This can be a problem as sometimes neovim will send a message that tells Firenvim to draw the command line, and then never send the message to tell Firenvim to stop displaying it. In order to work around this problem, a "cmdlineTimeout" configuration option has been implemented, which makes Firenvim hide the external command line after the cursor has moved and some amount of milliseconds have passed:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config = {
    globalSettings = {
        cmdlineTimeout = 3000
    }
}"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span> <span>=</span> {
    <span>globalSettings</span> <span>=</span> {
        <span>cmdlineTimeout</span> <span>=</span> <span>3000</span>
    }
}</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Configuring the filename</h3><a id="user-content-configuring-the-filename" aria-label="Permalink: Configuring the filename" href="#configuring-the-filename"></a></p>
<p dir="auto">It is possible to configure the name of the file used by Firenvim with the <code>filename</code> localSetting. This setting is a format string where each element in curly braces will be replaced with a value and where the maximum length can be specified with a percentage. Possible format elements are <code>hostname</code> (= the domain name of the website), <code>pathname</code> (= the path of the page), <code>selector</code> (= the CSS selector of the text area), <code>timestamp</code> (= the current date) and <code>extension</code> (the language extension when using Firenvim on a code editor or <code>txt</code> otherwise). For example:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config = {
    localSettings = {
        ['.*'] = {
            filename = '/tmp/{hostname}_{pathname%10}.{extension}'
        }
    }
}"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span> <span>=</span> {
    <span>localSettings</span> <span>=</span> {
        [<span><span>'</span>.*<span>'</span></span>] <span>=</span> {
            <span>filename</span> <span>=</span> <span><span>'</span>/tmp/{hostname}_{pathname%10}.{extension}<span>'</span></span>
        }
    }
}</pre></div>
<p dir="auto">Will result in Firenvim using <code>/tmp/github.com_issues-new.txt</code> on Github's new issue page. The default value of this setting is <code>{hostname%32}_{pathname%32}_{selector%32}_{timestamp%32}.{extension}</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Drawbacks</h2><a id="user-content-drawbacks" aria-label="Permalink: Drawbacks" href="#drawbacks"></a></p>
<p dir="auto">Some keybindings, such as <code>&lt;C-n&gt;</code>, <code>&lt;C-t&gt;</code> and <code>&lt;C-w&gt;</code> are not overridable through usual means. This means that you have to tell your browser to let Firenvim override them by using <a href="https://support.mozilla.org/en-US/kb/manage-extension-shortcuts-firefox" rel="nofollow">the shortcuts menu in <code>about://addons</code></a> on Firefox and <code>chrome://extensions/shortcuts</code> in Chrome.</p>
<p dir="auto">When it is possible to do so, if you press one of these keyboard shortcuts while not in a Firenvim frame, Firenvim will attempt to emulate the expected behavior of the shortcut. For example, pressing <code>&lt;C-w&gt;</code> in a Firenvim frame will tell neovim you pressed <code>&lt;C-w&gt;</code>, but outside of it it will tell the browser to close the current tab.</p>
<p dir="auto">Controlling whether Firenvim should attempt to emulate the browser's default behavior can be done with global settings. The following snippet will tell Firenvim to simulate <code>&lt;C-n&gt;</code>'s default behavior while never simulating <code>&lt;C-w&gt;</code>'s:</p>
<div dir="auto" data-snippet-clipboard-copy-content="vim.g.firenvim_config = {
    globalSettings = {
      ['<C-w>'] = 'noop',
      ['<C-n>'] = 'default'
    }
}"><pre><span>vim</span>.<span>g</span>.<span>firenvim_config</span> <span>=</span> {
    <span>globalSettings</span> <span>=</span> {
      [<span><span>'</span>&lt;C-w&gt;<span>'</span></span>] <span>=</span> <span><span>'</span>noop<span>'</span></span>,
      [<span><span>'</span>&lt;C-n&gt;<span>'</span></span>] <span>=</span> <span><span>'</span>default<span>'</span></span>
    }
}</pre></div>
<p dir="auto">Note that on Firefox on Linux some keyboard shortcuts might not be overridable. I circumvent this issue by running a <a href="https://github.com/glacambre/firefox-patches">patched</a> version of Firefox (note: once Firefox is patched, you won't need to setup webextension keyboard shortcuts).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">You might also like</h2><a id="user-content-you-might-also-like" aria-label="Permalink: You might also like" href="#you-might-also-like"></a></p>
<ul dir="auto">
<li><a href="https://github.com/tridactyl/tridactyl">Tridactyl</a>, provides vim-like keybindings to use Firefox. Also lets you edit input fields and text areas in your favourite editor with its <code>:editor</code> command.</li>
<li><a href="https://github.com/GhostText/GhostText">GhostText</a>, lets you edit text areas in your editor with a single click. Requires installing a plugin in your editor too. Features live updates!</li>
<li><a href="https://github.com/jlebon/textern">Textern</a>, a Firefox addon that lets you edit text areas in your editor without requiring you to install a plugin in your editor.</li>
<li><a href="https://github.com/asamuzaK/withExEditor">withExEditor</a>, same thing as Textern, except you can also edit/view a page's source with your editor.</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Postgres as a VectorDB GUI (148 pts)]]></title>
            <link>https://github.com/Z-Gort/Reservoirs-Lab</link>
            <guid>42457782</guid>
            <pubDate>Thu, 19 Dec 2024 02:28:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Z-Gort/Reservoirs-Lab">https://github.com/Z-Gort/Reservoirs-Lab</a>, See on <a href="https://news.ycombinator.com/item?id=42457782">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-turbo-body="">
      


    <div>
      <p><a href="#start-of-content" data-skip-target-assigned="false">Skip to content</a>

      <span data-view-component="true">
    <span data-view-component="true"></span>
</span></p>

<react-partial partial-name="keyboard-shortcuts-dialog" data-ssr="false" data-attempted-ssr="false">
  
  
  
</react-partial>




      

          

              


<header role="banner" data-is-top="true" data-color-mode="light" data-light-theme="light" data-dark-theme="dark">
  <h2>Navigation Menu</h2>

  

  <div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_copilot&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_copilot_link_product_navbar&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>GitHub Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;security&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;security_link_product_navbar&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;actions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;actions_link_product_navbar&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;codespaces&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;codespaces_link_product_navbar&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;issues&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;issues_link_product_navbar&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_review&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_review_link_product_navbar&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code Review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;discussions&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;discussions_link_product_navbar&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;code_search&quot;,&quot;context&quot;:&quot;product&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;code_search_link_product_navbar&quot;}" href="https://github.com/features/code-search">
      
      <div>
        <p>Code Search</p><p>
        Find more, search less
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>

                  <li>
      
      
</li>

                  <li>
      
      <div>
                    <p><span id="resources-explore-heading">Explore</span></p><ul aria-labelledby="resources-explore-heading">
                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;learning_pathways&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;learning_pathways_link_resources_navbar&quot;}" href="https://resources.github.com/learn/pathways">
      Learning Pathways

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;white_papers_ebooks_webinars&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;white_papers_ebooks_webinars_link_resources_navbar&quot;}" href="https://resources.github.com/">
      White papers, Ebooks, Webinars

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;customer_stories&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;customer_stories_link_resources_navbar&quot;}" href="https://github.com/customer-stories">
      Customer Stories

    
</a></li>

                    <li>
  <a target="_blank" data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;partners&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;partners_link_resources_navbar&quot;}" href="https://partner.github.com/">
      Partners

    
</a></li>

                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;executive_insights&quot;,&quot;context&quot;:&quot;resources&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;executive_insights_link_resources_navbar&quot;}" href="https://github.com/solutions/executive-insights">
      Executive Insights

    
</a></li>

                </ul>
              </div>
</li>


                <li>
      
      <div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;github_sponsors&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;github_sponsors_link_open_source_navbar&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

                </ul>
              </div>
              <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;the_readme_project&quot;,&quot;context&quot;:&quot;open_source&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;the_readme_project_link_open_source_navbar&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

                </ul>
              </div>
              
          </div>
</li>


                <li>
      
      <div>
                <ul>
                    <li>
  <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;enterprise_platform&quot;,&quot;context&quot;:&quot;enterprise&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;enterprise_platform_link_enterprise_navbar&quot;}" href="https://github.com/enterprise">
      
      <div>
        <p>Enterprise platform</p><p>
        AI-powered developer platform
      </p></div>

    
</a></li>

                </ul>
              </div>
</li>


                <li>
    <a data-analytics-event="{&quot;location&quot;:&quot;navbar&quot;,&quot;action&quot;:&quot;pricing&quot;,&quot;context&quot;:&quot;global&quot;,&quot;tag&quot;:&quot;link&quot;,&quot;label&quot;:&quot;pricing_link_global_navbar&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:Z-Gort/Reservoirs-Lab" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="mMZRUmfSbewDk1rfMthq-GjYs1MGtwVz0lLjHYBqMX_QAKh6fdmyvZUoh8Rd-J8wdPA3XPZkmzl_EKpSPc787w" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="Z-Gort/Reservoirs-Lab" data-current-org="" data-current-owner="Z-Gort" data-logged-in="false" data-copilot-chat-enabled="false" data-nl-search-enabled="false" data-retain-scroll-position="true">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
        
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            

              <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E&amp;source=header-repo&amp;source_repo=Z-Gort%2FReservoirs-Lab" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/Z-Gort/Reservoirs-Lab&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="4f5066cf2da688fe4d25c3034f3408989151ba042595bff7b696cd03b810cd00" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>;ref_cta:Sign up;ref_loc:header logged out&quot;}">
                Sign up
              </a>
          
        </p></div>
      </div>
</header>

      
    </div>

  








    


    






  <div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="" data-project-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  





    






  
  

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div data-view-component="true" id="repo-content-pjax-container">      


















<react-partial partial-name="repos-overview" data-ssr="true" data-attempted-ssr="true">
  
  
  <div data-target="react-partial.reactRoot"><div itemscope="" itemtype="https://schema.org/abstract"><h2>Repository files navigation</h2><nav aria-label="Repository files"><ul role="list"><li><a href="#" aria-current="page"><span data-component="icon"></span><span data-component="text" data-content="README">README</span></a></li></ul></nav></div><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Reservoirs Lab: Postgres VectorDB GUI and Data Insights 🐘✨</h2><a id="user-content-reservoirs-lab-postgres-vectordb-gui-and-data-insights-" aria-label="Permalink: Reservoirs Lab: Postgres VectorDB GUI and Data Insights 🐘✨" href="#reservoirs-lab-postgres-vectordb-gui-and-data-insights-"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Overview</h2><a id="user-content-overview" aria-label="Permalink: Overview" href="#overview"></a></p>
<p dir="auto">Reservoirs lab is a lightweight Electron app designed to connect directly to a Postgres database and visualize high-dimensional vector embeddings stored alongside structured data. It allows users to explore their data interactively and see correlations between metadata and semantic similarity of vector embeddings.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li><strong>Postgres Integration</strong>: Connect directly to your Postgres database via a connection string. 🛠️</li>
<li><strong>Vector Visualization</strong>: Plot and explore high-dimensional vectors interactively. 📊</li>
<li><strong>Neighborhood Exploration</strong>: Click on a data point to view points by cosine similarity from point (while maintaining clustering). 🔍</li>
<li><strong>Lightweight and Local</strong>: Runs locally on your machine, keeping your data private. 🖥️</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installation</h2><a id="user-content-installation" aria-label="Permalink: Installation" href="#installation"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Prerequisites</h3><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<ul dir="auto">
<li>Node.js and npm installed on your machine.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Running the App Locally</h3><a id="user-content-running-the-app-locally" aria-label="Permalink: Running the App Locally" href="#running-the-app-locally"></a></p>
<ol dir="auto">
<li>Clone this repository:
<div dir="auto" data-snippet-clipboard-copy-content="git clone https://github.com/z-gort/reservoirs-lab.git"><pre>git clone https://github.com/z-gort/reservoirs-lab.git</pre></div>
</li>
<li>Navigate to the project directory:

</li>
<li>Install dependencies:

</li>
<li>Start the app:

</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<ol dir="auto">
<li><strong>Connect to Your Database</strong>:
<ul dir="auto">
<li>Enter your Postgres database connection string in the app's connection window.</li>
</ul>
</li>
<li><strong>Visualize Vectors</strong>:
<ul dir="auto">
<li>View an interactive plot of your vector data.</li>
</ul>
</li>
<li><strong>Explore Neighborhoods</strong>:
<ul dir="auto">
<li>Click on a point to view data points by similarity and metadata correlated with semantic similarity to a point.</li>
</ul>
</li>
</ol>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/141419204/397082773-6efe0ff6-9dba-4254-b5eb-79e2a742448a.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ2MTE3MDEsIm5iZiI6MTczNDYxMTQwMSwicGF0aCI6Ii8xNDE0MTkyMDQvMzk3MDgyNzczLTZlZmUwZmY2LTlkYmEtNDI1NC1iNWViLTc5ZTJhNzQyNDQ4YS5naWY_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQxMjE5JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MTIxOVQxMjMwMDFaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT0yZDFmMmM0ODIyYzVkYWQxN2Q2ZTcxZmE1NzE5OGQzOTBhMzVlZmYyOWYwNjlmZjEyYzdiYTBlYzdjZTM4MDU0JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.E0tIf4Eg0oAM8NWdXT-xqE9-1oZSVSu1JcVK7PQ2VH0"><img src="https://private-user-images.githubusercontent.com/141419204/397082773-6efe0ff6-9dba-4254-b5eb-79e2a742448a.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MzQ2MTE3MDEsIm5iZiI6MTczNDYxMTQwMSwicGF0aCI6Ii8xNDE0MTkyMDQvMzk3MDgyNzczLTZlZmUwZmY2LTlkYmEtNDI1NC1iNWViLTc5ZTJhNzQyNDQ4YS5naWY_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQxMjE5JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MTIxOVQxMjMwMDFaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT0yZDFmMmM0ODIyYzVkYWQxN2Q2ZTcxZmE1NzE5OGQzOTBhMzVlZmYyOWYwNjlmZjEyYzdiYTBlYzdjZTM4MDU0JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.E0tIf4Eg0oAM8NWdXT-xqE9-1oZSVSu1JcVK7PQ2VH0" alt="res-labs-gif" data-animated-image=""></a></p>
</article></div></div>
</react-partial>

      </div>

</turbo-frame>


    </main>
  </div>

          




    <ghcc-consent id="ghcc" data-initial-cookie-consent-allowed="" data-cookie-consent-required="true"></ghcc-consent>


  

    <template id="site-details-dialog">
  <details class="details-reset details-overlay details-overlay-dark lh-default color-fg-default hx_rsm" open="">
    <summary role="button" aria-label="Close dialog"></summary>
    <details-dialog class="Box Box--overlay d-flex flex-column anim-fade-in fast hx_rsm-dialog hx_rsm-modal">
      <button class="Box-btn-octicon m-0 btn-octicon position-absolute right-0 top-0" type="button" aria-label="Close dialog" data-close-dialog="">
        <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-x">
    <path d="M3.72 3.72a.75.75 0 0 1 1.06 0L8 6.94l3.22-3.22a.749.749 0 0 1 1.275.326.749.749 0 0 1-.215.734L9.06 8l3.22 3.22a.749.749 0 0 1-.326 1.275.749.749 0 0 1-.734-.215L8 9.06l-3.22 3.22a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042L6.94 8 3.72 4.78a.75.75 0 0 1 0-1.06Z"></path>
</svg>
      </button>
      <div class="octocat-spinner my-6 js-details-dialog-spinner"></div>
    </details-dialog>
  </details>
</template>

    

    <template id="snippet-clipboard-copy-button">
  <div class="zeroclipboard-container position-absolute right-0 top-0">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn js-clipboard-copy m-2 p-0" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon m-2">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none m-2">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>
<template id="snippet-clipboard-copy-button-unpositioned">
  <div class="zeroclipboard-container">
    <clipboard-copy aria-label="Copy" class="ClipboardButton btn btn-invisible js-clipboard-copy m-2 p-0 d-flex flex-justify-center flex-items-center" data-copy-feedback="Copied!" data-tooltip-direction="w">
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-copy js-clipboard-copy-icon">
    <path d="M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 0 1 0 1.5h-1.5a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-1.5a.75.75 0 0 1 1.5 0v1.5A1.75 1.75 0 0 1 9.25 16h-7.5A1.75 1.75 0 0 1 0 14.25Z"></path><path d="M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0 1 14.25 11h-7.5A1.75 1.75 0 0 1 5 9.25Zm1.75-.25a.25.25 0 0 0-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 0 0 .25-.25v-7.5a.25.25 0 0 0-.25-.25Z"></path>
</svg>
      <svg aria-hidden="true" height="16" viewBox="0 0 16 16" version="1.1" width="16" data-view-component="true" class="octicon octicon-check js-clipboard-check-icon color-fg-success d-none">
    <path d="M13.78 4.22a.75.75 0 0 1 0 1.06l-7.25 7.25a.75.75 0 0 1-1.06 0L2.22 9.28a.751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018L6 10.94l6.72-6.72a.75.75 0 0 1 1.06 0Z"></path>
</svg>
    </clipboard-copy>
  </div>
</template>




    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Exposing the Clearingstelle Urheberrecht Im Internet (CUII) (141 pts)]]></title>
            <link>https://damcraft.de/blog/exposing-the-cuii</link>
            <guid>42457712</guid>
            <pubDate>Thu, 19 Dec 2024 02:19:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://damcraft.de/blog/exposing-the-cuii">https://damcraft.de/blog/exposing-the-cuii</a>, See on <a href="https://news.ycombinator.com/item?id=42457712">Hacker News</a></p>
Couldn't get https://damcraft.de/blog/exposing-the-cuii: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Error Stacking in Rust (122 pts)]]></title>
            <link>https://greptime.com/blogs/2024-05-07-error-rust</link>
            <guid>42457515</guid>
            <pubDate>Thu, 19 Dec 2024 01:47:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://greptime.com/blogs/2024-05-07-error-rust">https://greptime.com/blogs/2024-05-07-error-rust</a>, See on <a href="https://news.ycombinator.com/item?id=42457515">Hacker News</a></p>
Couldn't get https://greptime.com/blogs/2024-05-07-error-rust: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[There's No Such Thing as Software Productivity (2012) (125 pts)]]></title>
            <link>https://www.benrady.com/2012/11/theres-no-such-thing-as-software-productivity.html</link>
            <guid>42457436</guid>
            <pubDate>Thu, 19 Dec 2024 01:34:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.benrady.com/2012/11/theres-no-such-thing-as-software-productivity.html">https://www.benrady.com/2012/11/theres-no-such-thing-as-software-productivity.html</a>, See on <a href="https://news.ycombinator.com/item?id=42457436">Hacker News</a></p>
Couldn't get https://www.benrady.com/2012/11/theres-no-such-thing-as-software-productivity.html: Error: Request failed with status code 403]]></description>
        </item>
    </channel>
</rss>