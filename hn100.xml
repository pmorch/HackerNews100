<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 22 Apr 2024 01:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Google Pixel camera consistently blurring out The North Face logo (107 pts)]]></title>
            <link>https://old.reddit.com/r/pixel_phones/comments/1c98wpq/i_noticed_my_pixel_is_blurring_brand_namesmy_7/</link>
            <guid>40108786</guid>
            <pubDate>Sun, 21 Apr 2024 20:08:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://old.reddit.com/r/pixel_phones/comments/1c98wpq/i_noticed_my_pixel_is_blurring_brand_namesmy_7/">https://old.reddit.com/r/pixel_phones/comments/1c98wpq/i_noticed_my_pixel_is_blurring_brand_namesmy_7/</a>, See on <a href="https://news.ycombinator.com/item?id=40108786">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>That, and the noise is crazy.
I'm wondering if the wide angle, the 2x zoom or the selfie cam was used.</p>

<p>Also a fish pattern is really easy for an bayer pattern sensor to read in black and white, easy for the ai and also for jpg compression.</p>

<p>Lettering on the other hand and this red tone with black details is horror.</p>

<p>I guess it's a combination but i would love some comparison and recreation</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Anti-municipal broadband budget amendment gets nixed in New York (119 pts)]]></title>
            <link>https://communitynets.org/content/anti-muni-broadband-budget-amendment-gets-nixed-new-york</link>
            <guid>40107201</guid>
            <pubDate>Sun, 21 Apr 2024 16:48:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://communitynets.org/content/anti-muni-broadband-budget-amendment-gets-nixed-new-york">https://communitynets.org/content/anti-muni-broadband-budget-amendment-gets-nixed-new-york</a>, See on <a href="https://news.ycombinator.com/item?id=40107201">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="block-muninet-theme-content">
  
    
      
<article role="article">

	
	<div>
		
<div>
      
<p><span>By</span>
      
  </p>

      
  
<p><span>on</span>
      
  </p>

            <p><time datetime="2024-04-19T21:06:15Z">Friday April 19, 2024</time>
</p>
      
  </div>

      
  
            <div><p>Advocates for better Internet access are breathing a sigh of relief in New York as the <a href="https://www.law360.com/technology/articles/1827109/ny-scraps-proposal-impacting-local-broadband-networks">State Assembly passed a budget bill</a> yesterday that did not include an amendment that would have undermined the state’s municipal broadband grant program.</p><p>As <a href="https://communitynets.org/content/trojan-horse-cripple-muni-broadband-new-york-slipped-state-assembly-budget-proposal">we reported last month</a>, buried in language near the bottom of the Assembly budget proposal was a Trojan horse legislative sources said was being pushed by lobbyists representing Charter Spectrum.</p><p>The amendment, which did not survive the budget reconciliation process, proposed to limit <a href="https://broadband.ny.gov/municipal-infrastructure-program">Municipal Infrastructure Program</a> grants to projects that targeted “unserved and underserved locations only” – a restriction that would have made municipal broadband projects in the state less likely to become financially viable.</p><article>

  </article><p>Created as <a href="https://communitynets.org/content/new-york-launches-municipal-infrastructure-program">part of New York’s billion dollar ConnectALL Initiative</a>, the MIP is specifically designed to support municipal broadband projects. Such projects are routinely targeted by lobbyists for the big monopoly providers intent on preventing any competition to their often spotty, high-cost service offerings.</p><p>New York State Assembly Member Anna Kelles – whose district includes one of the towns (<a href="https://communitynets.org/content/one-year-after-launch-dryden-ny-muni-network-making-steady-progress">Dryden</a>) that benefited from a previous pilot program – told ILSR that the failed amendment would have “dismantle(d) current state efforts to build a sustainable business model for municipal broadband in New York State.”</p><p>Working with New York State Sen. Rachel May, Kelles said the intent of the MIP grant program was to “guarantee that local governments have the option to offer high-speed Internet to their constituencies” because “in places that have deployed a municipal broadband model, prices across the board decrease while service levels increase.”</p><p>With the proposed amendment not making the cut, Gigi Sohn, Executive Director of the American Association for Public Broadband (AAPB), hailed it as “a victory for every community and every resident of New York State.”</p><p>“I applaud the New York State Legislature for standing up to backroom attempts by incumbent cable lobbyists to undermine community broadband,” <a href="https://www.aapb.us/post/statement-aapb-statement-on-victory-in-new-york-state-to-remove-bill-language-that-undermined-comm">Sohn said in a statement</a>.</p><blockquote><p>“We congratulate Senator Rachel May, Assemblymember Dr. Anna R. Kelles, Governor Hochul and other allies of public broadband in the state legislature and the Administration for working to defeat this language. They recognize that communities should be free to choose what kind of broadband network best serves their residents and that public networks can provide the kind of universal service at affordable prices that incumbents often do not.”</p></blockquote><p>Limiting subsidies to unserved and underserved areas via the MIP would have prevented municipal networks from getting started in areas that have numerous locations that are unserved or underserved but are not correctly listed as such in the FCC’s Broadband Data Collection. That collection is <a href="https://communitynets.org/content/our-view-friday-13th-mapping-challenge-deadline-highlights-failed-process">notoriously inaccurate</a>, in part due to lobbying from the big monopolies over the years to stop the federal government or states from collecting accurate, useful data.</p><p>Still, even with the defeat of the proposed budget amendment in New York, the <a href="https://arstechnica.com/tech-policy/2022/11/cable-companys-accidental-email-to-rival-discusses-plan-to-block-competition/">national assault on competition</a> being pushed by the nation’s largest telco and cable companies <a href="https://www.mainepublic.org/business-and-economy/2021-11-18/broadband-providers-have-failed-to-reach-all-maine-homes-now-theyre-fighting-towns-trying-to-do-it-themselves">isn’t new</a> and <a href="https://communitynets.org/content/municipal-broadband-dark-money-campaign-washes-ashore-cape-cod">isn’t going away</a>.</p><div><p>Or as Sohn puts it: “While we were successful in beating back this recent attack, we have little doubt that those same cable lobbyists with their enormous resources will try again next year. And AAPB and its members will be there to defend and preserve the freedom of every community to control its broadband future.”&nbsp;</p><p>Earlier this week, CBN Director Christopher Mitchell and CBN Associate Director for Communications Sean Gonsalves dissected the disinformation campaigns about municipal broadband in general and the attacks in New York in particular on the most recent episode of the <a href="https://communitynets.org/broadbandbits">Community Broadband Bits podcast</a>. You can listen to that podcast below:</p></div><p><em>Inline image of New York State Capitol and Empire State Plaza courtesy of Darren McGee/New York State Governor’s Office</em></p></div>
      
  

  

            
      
	</div>

</article>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Penzai: JAX research toolkit for building, editing, and visualizing neural nets (169 pts)]]></title>
            <link>https://github.com/google-deepmind/penzai</link>
            <guid>40107007</guid>
            <pubDate>Sun, 21 Apr 2024 16:28:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/google-deepmind/penzai">https://github.com/google-deepmind/penzai</a>, See on <a href="https://news.ycombinator.com/item?id=40107007">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Penzai</h2><a id="user-content-penzai" aria-label="Permalink: Penzai" href="#penzai"></a></p>
<blockquote>
<p dir="auto"><strong>盆 ("pen", tray) 栽 ("zai", planting)</strong> - <em>an ancient Chinese art of forming
trees and landscapes in miniature, also called penjing and an ancestor of the
Japanese art of bonsai.</em></p>
</blockquote>
<p dir="auto">Penzai is a JAX library for writing models as legible, functional pytree data
structures, along with tools for visualizing, modifying, and analyzing them.
Penzai focuses on <strong>making it easy to do stuff with models after they have been
trained</strong>, making it a great choice for research involving reverse-engineering
or ablating model components, inspecting and probing internal activations,
performing model surgery, debugging architectures, and more. (But if you just
want to build and train a model, you can do that too!)</p>
<p dir="auto">With Penzai, your neural networks could look like this:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/google-deepmind/penzai/blob/main/docs/_static/readme_teaser.png"><img src="https://github.com/google-deepmind/penzai/raw/main/docs/_static/readme_teaser.png" alt="Screenshot of the Gemma model in Penzai"></a></p>
<p dir="auto">Penzai is structured as a collection of modular tools, designed together but
each useable independently:</p>
<ul dir="auto">
<li>
<p dir="auto"><code>penzai.nn</code> (<code>pz.nn</code>): A declarative combinator-based neural network
library and an alternative to other neural network libraries like Flax, Haiku,
Keras, or Equinox, which exposes the full structure of your model's
forward pass in the model pytree. This means you can see everything your model
does by pretty printing it, and inject new runtime logic with <code>jax.tree_util</code>.
Like Equinox, there's no magic: models are just callable pytrees under the
hood.</p>
</li>
<li>
<p dir="auto"><code>penzai.treescope</code> (<code>pz.ts</code>): A superpowered interactive Python
pretty-printer, which works as a drop-in replacement for the ordinary
IPython/Colab renderer. It's designed to help understand Penzai models and
other deeply-nested JAX pytrees, with built-in support for visualizing
arbitrary-dimensional NDArrays.</p>
</li>
<li>
<p dir="auto"><code>penzai.core.selectors</code> (<code>pz.select</code>): A pytree swiss-army-knife,
generalizing JAX's <code>.at[...].set(...)</code> syntax to arbitrary type-driven
pytree traversals, and making it easy to do complex rewrites or
on-the-fly patching of Penzai models and other data structures.</p>
</li>
<li>
<p dir="auto"><code>penzai.core.named_axes</code> (<code>pz.nx</code>): A lightweight named axis system which
lifts ordinary JAX functions to vectorize over named axes, and allows you to
seamlessly switch between named and positional programming styles without
having to learn a new array API.</p>
</li>
<li>
<p dir="auto"><code>penzai.data_effects</code> (<code>pz.de</code>): An opt-in system for side arguments, random
numbers, and state variables that is built on pytree traversal and puts you
in control, without getting in the way of writing or using your model.</p>
</li>
</ul>
<p dir="auto">Documentation on Penzai can be found at
<a href="https://penzai.readthedocs.io/" rel="nofollow">https://penzai.readthedocs.io</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto">If you haven't already installed JAX, you should do that first, since the
installation process depends on your platform. You can find instructions in the
<a href="https://jax.readthedocs.io/en/latest/installation.html" rel="nofollow">JAX documentation</a>.
Afterward, you can install Penzai using</p>

<p dir="auto">and import it using</p>
<div data-snippet-clipboard-copy-content="import penzai
from penzai import pz"><pre><code>import penzai
from penzai import pz
</code></pre></div>
<p dir="auto">(<code>penzai.pz</code> is an <em>alias namespace</em>, which makes it easier to reference
common Penzai objects.)</p>
<p dir="auto">When working in an Colab or IPython notebook, we recommend also configuring
Penzai as the default pretty printer, and enabling some utilities for
interactive use:</p>
<div data-snippet-clipboard-copy-content="pz.ts.register_as_default()
pz.ts.register_autovisualize_magic()
pz.enable_interactive_context()

# Optional: enables automatic array visualization
pz.ts.active_autovisualizer.set_interactive(pz.ts.ArrayAutovisualizer())"><pre><code>pz.ts.register_as_default()
pz.ts.register_autovisualize_magic()
pz.enable_interactive_context()

# Optional: enables automatic array visualization
pz.ts.active_autovisualizer.set_interactive(pz.ts.ArrayAutovisualizer())
</code></pre></div>
<p dir="auto">Here's how you could initialize and visualize a simple neural network:</p>
<div data-snippet-clipboard-copy-content="from penzai.example_models import simple_mlp
mlp = pz.nn.initialize_parameters(
    simple_mlp.MLP.from_config([8, 32, 32, 8]),
    jax.random.key(42),
)

# Models and arrays are visualized automatically when you output them from a
# Colab/IPython notebook cell:
mlp"><pre><code>from penzai.example_models import simple_mlp
mlp = pz.nn.initialize_parameters(
    simple_mlp.MLP.from_config([8, 32, 32, 8]),
    jax.random.key(42),
)

# Models and arrays are visualized automatically when you output them from a
# Colab/IPython notebook cell:
mlp
</code></pre></div>
<p dir="auto">Here's how you could capture and extract the activations after the elementwise
nonlinearities:</p>
<div data-snippet-clipboard-copy-content="mlp_with_captured_activations = pz.de.CollectingSideOutputs.handling(
    pz.select(mlp)
    .at_instances_of(pz.nn.Elementwise)
    .insert_after(pz.de.TellIntermediate())
)

output, intermediates = mlp_with_captured_activations(
  pz.nx.ones({&quot;features&quot;: 8})
)"><pre><code>mlp_with_captured_activations = pz.de.CollectingSideOutputs.handling(
    pz.select(mlp)
    .at_instances_of(pz.nn.Elementwise)
    .insert_after(pz.de.TellIntermediate())
)

output, intermediates = mlp_with_captured_activations(
  pz.nx.ones({"features": 8})
)
</code></pre></div>
<p dir="auto">To learn more about how to build and manipulate neural networks with Penzai,
we recommend starting with the <a href="https://penzai.readthedocs.io/en/stable/notebooks/how_to_think_in_penzai.html" rel="nofollow">"How to Think in Penzai" tutorial</a>, or one
of the other tutorials in the <a href="https://penzai.readthedocs.io/" rel="nofollow">Penzai documentation</a>.</p>
<hr>
<p dir="auto"><em>This is not an officially supported Google product.</em></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft is a national security threat: ex-White House cyber policy director (200 pts)]]></title>
            <link>https://www.theregister.com/2024/04/21/microsoft_national_security_risk/</link>
            <guid>40106639</guid>
            <pubDate>Sun, 21 Apr 2024 15:44:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2024/04/21/microsoft_national_security_risk/">https://www.theregister.com/2024/04/21/microsoft_national_security_risk/</a>, See on <a href="https://news.ycombinator.com/item?id=40106639">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p><span>Interview</span> Microsoft has a shocking level of control over IT within the US federal government – so much so that former senior White House cyber policy director AJ Grotto thinks it's fair to call Redmond's recent security failures a national security issue.&nbsp;</p>
<p>Grotto this week spoke with <em>The Register</em> in an interview you can watch below, in which he told us that exacting even slight concessions from Microsoft has been a major fight for the Feds.</p>
<p>
  <a href="https://www.youtube.com/watch?v=FxDsYy-c7Bo" data-media="x-videoplayer">Youtube Video</a>
</p>

    

<p>"If you go back to the <a href="https://www.theregister.com/2023/10/31/sec_charges_solarwinds_sunburst_fraud/">SolarWinds episode</a> from a few years ago … [Microsoft] was essentially up-selling logging capability to federal agencies" instead of making it the default, Grotto said. "As a result, it was really hard for agencies to identify their exposure to the SolarWinds breach."&nbsp;</p>

        


        

<p>Grotto told us Microsoft had to be "dragged kicking and screaming" to provide logging capabilities to the government by default, and given the fact the mega-corp banked around $20 billion in revenue from security services last year, the concession was minimal at best.&nbsp;</p>
<p>That illustrates, Grotto said, that "they [Microsoft] just have a ton of leverage, and they're not afraid to use it."&nbsp;</p>

        

<p>Add to that concerns over an Exchange Online <a href="https://www.theregister.com/2024/04/03/cisa_microsoft_exchange_online_china_report/">intrusion</a> by Chinese snoops, and <a href="https://www.theregister.com/2024/04/12/microsoft_cisa_order/">another Microsoft security breach</a> by Russian cyber operatives, both of which allowed spies to gain access to US government emails, and Grotto says it's fair to classify Microsoft and its products as a national security concern.&nbsp;</p>
<p>But what can be done to solve the problem when 85 percent of US government productivity software, by Grotto's reckoning, and even more operating system share, belongs to Redmond?&nbsp;</p>
<p>"The government needs to focus on encouraging and catalyzing competition," Grotto said. He believes it also needs to publicly scrutinize Microsoft and make sure everyone knows when it messes up.&nbsp;</p>

        

<p>"At the end of the day, Microsoft, any company, is going to respond most directly to market incentives," Grotto told us. "Unless this scrutiny generates changed behavior among its customers who might want to look elsewhere, then the incentives for Microsoft to change are not going to be as strong as they should be." ®</p>                                


                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[All Fritz Box modems have been hijacked (228 pts)]]></title>
            <link>https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/</link>
            <guid>40106336</guid>
            <pubDate>Sun, 21 Apr 2024 15:08:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/">https://crapts.org/2024/04/21/all-fritz-box-modems-have-been-hijacked/</a>, See on <a href="https://news.ycombinator.com/item?id=40106336">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-v-461f54e1=""><p><em>TL;DR: Every Fritz!Box has been compromised by DNS hijacking and using a Fritz!Box is unsafe. Every user of a Fritz!Box should immediately stop using their Fritz!Box or set up their own DHCP server.</em></p><p>Fritz!Box modems are popular modems by the German company AVM. They are tailored to the some-what more experienced users who want to have more control over their network settings and they can often be used to replace the modem from your cable/DSL/fiber ISP. The company has been around for a long time and Fritz!Box devices are generally considered to be reliable and well worth the price.</p><p>However, since the beginning of 2024 all of the Fritz!Box devices have been hijacked. In short, the DHCP server on these modems hands out leases with the DNS suffix <code>fritz.box</code>, which means that domains in DNS requests <a href="https://superuser.com/questions/1481698/dns-suffix-explanation?ref=crapts.org" rel="noreferrer">are appended with the suffix</a>. Unfortunately, this setting cannot be modified. Normally this doesn't have to be a problem, but since the beginning of this year the <code>fritz.box</code> DNS suffix is an <a href="https://whois.domaintools.com/fritz.box?ref=crapts.org" rel="noreferrer">actual registered domain</a> and the owner of this domain is not AVM or anyone affiliated to them. </p><p>This is a very serious issue. DNS requests on a Fritz!Box home network now get forwarded to an unknown entity, which is a case of <a href="https://en.wikipedia.org/wiki/DNS_hijacking?ref=crapts.org" rel="noreferrer">DNS hijacking</a>. Not every OS deals with DNS suffices in the same way, but at least Windows applies the suffix for all DNS requests which means every DNS request done by a Windows user is now effectively hijacked. </p><figure><img src="https://crapts.org/content/images/2024/04/image.png" alt="" loading="lazy" width="560" height="225"></figure><p>The consequences of this are significant: Fritz!Box users' internet behavior is now sent directly to an unknown party and are now prone to phishing attacks. As far as I know the latter hasn't happened yet, but it's bound to happen at some point if this is not resolved as soon as possible.</p><p>Besides the security issues, this also has a negative effect on performance when the registered IP address isn't responding to the DNS requests. I myself have experienced Chrome and Slack to be very slow in resolving network requests after starting up my Windows laptop.</p><p>AVM's response so far has been lacking except for a <a href="https://twitter.com/AVM_DE/status/1779155999204552897?ref=crapts.org" rel="noreferrer">tweet</a> that <code>fritz.box</code> domain is in the process of being sold. To me that is alarming in three ways:</p><ol><li>"In the process of being sold" means it is not sold yet and there is no guarantee AVM will actually take ownership of the domain.</li><li>Even if the domain is acquired by AVM, this still means that every DNS request will now go over the internet directly to AVM. I never asked for this.</li><li>A performance penalty will remain. Your internet will sometimes appear to be really slow when the registered IP address for the DNS suffix domain is not actually responding with a DNS resolution.</li></ol><p>The only proper way to resolve this matter in my opinion is to disable the DNS suffix by default. So far there is no indication that AVM is planning to enable this option in the near future.</p><p>If you want to do something today without waiting for AVM, the following remedies are available:</p><ul><li>Use a custom DHCP server and don't set the DNS suffix to <code>fritz.box</code></li><li>Don't use a Fritz!Box device at all</li></ul><p>Since setting up a DHCP server is somewhat complex, my only recommendation at this point is to immediately stop using all Fritz!Box device. They are unsafe and dangerous to use. The lack of a proper response from AVM is even more alarming and I'm not sure they understand the gravity of the situation. I sincerely hope the matter gets resolved soon enough.</p><p>PS. I didn't discover this by myself. The article above is a summary of what other <a href="https://www.reddit.com/r/fritzbox/comments/1b7d0rs/change_domain_in_fritzbox_7360/?ref=crapts.org" rel="noreferrer">people</a> <a href="https://www.reddit.com/r/fritzbox/comments/klzqar/fritzbox_7590_change_default_fritzbox_domain/?ref=crapts.org" rel="noreferrer">have</a> <a href="https://gathering.tweakers.net/forum/list_message/78779034?ref=crapts.org" rel="noreferrer">discovered</a>,  and some even warned for this years ago.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I can't stand using VSCode so I wrote my own (169 pts)]]></title>
            <link>https://bold-edit.com/wrote-my-own.html</link>
            <guid>40106157</guid>
            <pubDate>Sun, 21 Apr 2024 14:47:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bold-edit.com/wrote-my-own.html">https://bold-edit.com/wrote-my-own.html</a>, See on <a href="https://news.ycombinator.com/item?id=40106157">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p>I used to like vscode. I've been using it since it could run and debug C#. Last year, I noticed I frequently hit bugs where I couldn't type until I switched out and back into the editor with alt-tab. That's not so bad but it got annoying when I couldn't build or debug until I restarted the program</p>


<p>One day, possibly the thing that bothered me the most was when I was writing a GDB pretty printer. I'd tweak the script; then to see the results I would press F5 to run the already built binary and wait over a second EVERY SINGLE TIME (about 1480ms). It was driving me nuts. I ended up leaving a terminal open and would save, alt tab, press up, enter. All that would still be almost a second faster than if I were to restart the debugger in vscode. I then realized it won't matter how fast my compiler is (I've implemented one for my own language) it will always feel slow if I use vscode (the compiler builds a debuggable binary in 15 milliseconds).</p>

<p>Finally, what broke the camel's back was when I was debugging 3 different complex functions. Each had about 15-20 variables I was interested in. I had the watch panel take up the entire right side and there wasn't enough room. I had to <b>manually remove and add variables</b> every time I rotated to a third function. I wouldn't always put the vars back in the same order. It was obnoxious. Whichever function I was looking at I wanted to see the same set of variables on the top right in the same order every time. Between the bugs, it being slow to launch, and now debugging becoming a problem I decided then and there to write a text editor.</p>

<p>I thought, how hard could it be? The answer is always harder than you expect but I knew that and I wanted to find out</p>

<p>The first thing I did was implement GDB support. Here's a video of the watch variables at the top right changing based on the function its in</p>
<video src="https://bold-edit.com/wrote-my-own-vids/dynamic.mp4" controls=""></video>
<p>If you look closely you'll see there's no flickering. All variables and their values show up at the same time. You can see variables are shown significantly quicker. From the video you can't see when I press a button to launch the debugger. From launch to breakpoint (which includes the build step) it took &lt;200ms. Two of my biggest annoyances I solved. Next, I wanted to make sure editing and rendering is fast no matter how large the file is. Some tools generate hundreds of MBs of JSON. Here's a video of me opening two files (both 1gb) scrolling around, typing, and pressing undo/redo.</p>
<video src="https://bold-edit.com/wrote-my-own-vids/large.mp4" controls=""></video>
<p>I was pretty happy that I could run 60fps without dropping frames with a debug build (vscode drops frames). However for a 4K monitor, I need an optimized build. Even with typing and undo/redo I consistently stayed over 144fps so people with fast monitors can have a smooth experience.</p>

<p>
I like being able to partially type a filename and jump to it, or find/jump to a type. I like to rename variables. LSP's (language server protocol) support these so I implemented it. It's not a complete implementation, one thing easy to see is there is no semantic tokens support which would improve highlighting. The video shows signature help but doesn't show jump to, rename, hover, etc. Friends didn't like debugging in their current IDE so they asked if I could implement DAP support. So I implemented that as well. The video shows an example using python.</p>
<video src="https://bold-edit.com/wrote-my-own-vids/lsp.mp4" controls=""></video>

<p>A few weeks before I began writing, I met the people who work on the undo debugger. Their goal is to let people replay executions, so you can figure out and debug complicated problems that no one knows how to reproduce. But that's not why I liked it. I did this.</p>
<video src="https://bold-edit.com/wrote-my-own-vids/udb.mp4" controls=""></video>
<p>In that video, I ran the 'last' command on the global variable g1. The debugger brought me to the last time it was modified. It's magic. I use it constantly, even when I know where it's modified. It saves me from writing a conditional on a breakpoint and I don't have to guess if I don't know which spot the variable was last modified. It's not a free debugger but I wanted to implement the feature for myself and it was very easy since it had the same protocol as gdb and the implementation was just a few lines on top of my already existing gdb implementation.</p>

<p>This editor is still early in development and plenty of features are missing. There's no global search, there is a find but no replace and people who like vim motions will need to wait. If you try it for 5 minutes feel free to let me know all the things that you noticed were missing. There's a tutorial file in the download to give you something to do in the first few minutes of using this.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[From a lorry driver to Ruby on rails developer at 38 (170 pts)]]></title>
            <link>https://www.writesoftwarewell.com/lorry-driver-to-rails-developer-at-38/</link>
            <guid>40105773</guid>
            <pubDate>Sun, 21 Apr 2024 13:48:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.writesoftwarewell.com/lorry-driver-to-rails-developer-at-38/">https://www.writesoftwarewell.com/lorry-driver-to-rails-developer-at-38/</a>, See on <a href="https://news.ycombinator.com/item?id=40105773">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-canvas-grid="content" data-canvas-grid-self="full">
            <p>Most traditional interviews are focused on celebrities or popular personalities. However, I am more interested in interviews with hidden gems, unknown figures doing solid work, folks overcoming challenges just to be on the same playground as everyone else.</p><p>Hence, I wanted to start featuring some of them on this blog, providing a platform for sharing their compelling stories and valuable lessons. While they may not be on the covers of major publications or appearing on popular podcasts, their stories, backgrounds and experiences are nonetheless fascinating and worthy of a read.</p><p>This post shares the story of <a href="https://www.linkedin.com/in/pedro-david-garcia-lopez/?ref=writesoftwarewell.com" rel="noreferrer">Pedro David Garcia Lopez</a>, who switched careers from being a Lorry driver to a Ruby on Rails developer at the age of 38, an age that many folks in the software industry consider to be too old (<a href="https://www.youtube.com/watch?v=UFYJ2DE9wlM&amp;ref=writesoftwarewell.com" rel="noreferrer">which is nonsense!</a>). I came across Pedro on LinkedIn and found his story really inspiring.</p><p>The main thing I want you to get from this post is: <strong>It's never too late to pursue your dreams, especially to start </strong><a href="https://www.writesoftwarewell.com/learn-to-program-with-ruby/" rel="noreferrer"><strong>learning to program</strong></a><strong>. </strong>It can unlock huge opportunities if done right.</p><p>With that, let's hear Pedro's story. I hope you find it as inspiring as I did.</p><figure><img src="https://www.writesoftwarewell.com/content/images/2024/04/pedro.jpeg" alt="Pedro David Garcia Lopez" loading="lazy" width="200" height="200"><figcaption><span>Pedro David Garcia Lopez</span></figcaption></figure><h3 id="q-can-you-tell-us-a-little-about-yourself"><strong>Q. Can you tell us a little about yourself?</strong></h3><p>I am a 42-year-old Spaniard who moved to the UK in 2015, but I am now returning to my country to be closer to family, which I consider one of the most important things in life.&nbsp;</p><p>I came to the UK in 2015 as a lorry driver, which was a tough decision. As a lorry driver, I spent more time in the UK than at home. Typically, I would spend around 4-6 days at home each month, and the rest of the time, I was on the road, travelling between the UK and other parts of Europe. I decided to move to the UK to embrace new opportunities and allow my daughter to do the same. Additionally, I wanted to learn English properly, which I'm still working on.&nbsp;</p><p>As a professional driver, I have driven almost every type of vehicle on the road, and I have travelled to all the EU countries on the continent at least once. In fact, I cover enough KM in my lorry to circle the world several times over.&nbsp;</p><p>As a developer, I fell in love with Ruby and Ruby on Rails the first time I learned about them. I plan to stick with them until it is still possible, as I don’t think anything similar is out there regarding developer happiness and productivity (opinion from my small watchtower!); I worked with PHP for a small period as well as JS (many flavours), but nothing comes close to Rails and Ruby.&nbsp;</p><p>I consider myself a full-stack developer as I have good skills in CSS, good attention to detail in the front end, and some notion of UI/UX, but there is always room to improve in those areas. I also love working in the backend. Basically, I'm a Master of none 😜.</p><h3 id="q-how-did-you-get-into-programming"><strong>Q. How did you get into programming?</strong></h3><p>Well, this is an excellent question and quite long to answer.&nbsp;</p><p>My first interaction with a computer was when I was around 12 years old as part of a typing course that summer when we moved from more advanced setups to a computer, sometimes working on MS-DOS or Windows 3.1. Since that day, I have been fascinated by those wizard machines.&nbsp;</p><p>Coming from a modest family, the chances of having a computer were low. <strong>Still, the death of my father at the age of 14 and the need to start working to support my family at the same time as studying put them at the level of finding a unicorn.</strong> Still, my love for computers never disappeared, and I never missed an opportunity to play with them at school or the library.</p><p>That was until, at the age of 18, I went to full-time work, and with three months of saving, I bought my first computer, a Pentium II; having a computer in my hands now, I started to feel the need to know how to program it.</p><figure><img src="https://www.writesoftwarewell.com/content/images/2024/04/pentium-2.jpeg" alt="Pentium 2 Windows 98 Retro Computer" loading="lazy" width="1280" height="720" srcset="https://www.writesoftwarewell.com/content/images/size/w600/2024/04/pentium-2.jpeg 600w, https://www.writesoftwarewell.com/content/images/size/w1000/2024/04/pentium-2.jpeg 1000w, https://www.writesoftwarewell.com/content/images/2024/04/pentium-2.jpeg 1280w" sizes="(min-width: 720px) 720px"><figcaption><i><em>Photo Credits: Midnight Geek (YouTube)</em></i></figcaption></figure><p>So I bought a book to learn C++, which was a big mistake, as it was too technical and a deep book. I got really confused, and I could never do anything interesting at all. Then life took over. I never really went into programming, but years passed, and I became a lorry driver by need and came here to the UK.&nbsp;</p><p>But, I still had a passion for computers and being good at them. </p><p>With my English skills improving and the easily accessible information out there, at some point, my little child's dream called to the door again.</p><p>I took a few YouTube courses here and there, HTML, CSS, JS, the typical course of "Become a programmer in 7 days" kind of things, then I discovered <a href="https://www.freecodecamp.org/?ref=writesoftwarewell.com" rel="noreferrer">freeCodeCamp</a>, that was a bit more structured and serious, but still I found that I was missing something. <strong>My long hours as a lorry driver and doing my duties as a dad and a husband didn’t allow me real serious time and pace to become a developer.</strong></p><p>So, after all those years of hard work and caring for my family, I decided to pursue my childhood dream of becoming a developer. <strong>I quit my stable job and decided to try one year to become a developer or return to my life and scrap this idea forever.</strong></p><p>In September 2019, I started my adventure, but what path should I follow? There are too many: Python, JavaScript (which was trending), C#, PHP, frontend, backend, DevOps, etc. There are way too many to pick just one if it is not right.&nbsp;</p><p>So, I decided to learn Python and buy some Udemy courses (there were too many!) to learn the basics. It wasn't as bad as my C++ experience but didn't quite click. I could follow but not create, so quickly I realized that that would not work for me. </p><p>I was losing a bit of faith, but after doing some research, I came across the concept of Coding Bootcamps. After some back and forth to make that decision (all options were expensive 💰), I decided to join <a href="https://flatironschool.com/?ref=writesoftwarewell.com" rel="noreferrer">Flatiron School</a>. If you couldn't secure a job after completing their course, you didn't have to pay them anything. It made me feel that I had little to lose in that sense.&nbsp;</p><p>So there I learned about Ruby and its basics. I also learned software development in a structured way, from Ruby and Sinatra, to Ruby on Rails and React. All supported by teachers, colleges, and good assignments and exercises to make you not only follow, but also create new things. </p><p>The sense of pride and accomplishment I felt after completing my first projects was unforgettable, so by the end of May 2020, I graduated from the course with a sense that I could actually do it. I felt like I knew things now; I do not just know things; but I know how to figure things out and how to learn new things on my own.&nbsp;</p><p><strong>By the way, do you know what happened in 2020? Yes, it was COVID.</strong>&nbsp;</p><p>I had to start finding a new job in those circumstances. The lockdown was still around, so there was no interview or chance to connect with people; <strong>a 38-year-old man with no experience and fresh for a Bootcamp doesn’t seem like the ideal hiring candidate companies were looking for...</strong></p><p>Even with post-graduate support from Flatiron, things were tough. <strong>Not a single interview or call for months; I was feeling quite anxious about my CV, wondering if it was just going to end up in the bin</strong>, but I felt that I could do it, and my passion was higher than ever. I didn’t want to go back to driving.&nbsp;</p><p>Finally, the first opportunity arose in Manchester, two hours away from my home by Train (no Work-From-Home policy) and a salary that was 1/3rd of my salary as a lorry driver, most of which went to pay for the Train… working with PHP and jQuery, but you know what, I didn’t care about any of that as it was my dream. I accepted that offer; I had to start somewhere, and if life has taught me something, it is that with hard work, everything is possible.&nbsp;</p><h3 id="q-how-and-when-did-you-come-across-ruby-and-rails-what-do-you-most-like-about-them-both"><strong>Q. How and when did you come across Ruby and Rails? What do you most like about them both?</strong></h3><p>I first learned about Ruby and Rails through the Bootcamp, but working at <a href="https://superbyte.com/?ref=writesoftwarewell.com" rel="noreferrer">Superbyte</a>, I gained more experience with them.&nbsp;</p><p>At Superbyte, we used a non-standard stack (Mongoid and some React), but I learned a lot from the team and gained a lot of experience.&nbsp;</p><p>My passion for it grew stronger after gaining professional experience with Ruby on Rails. Everything becomes much easier to handle once you get familiar with its conventions. I find the community and the constantly evolving ecosystem to be the most appealing aspects of it.&nbsp;</p><p>I am excited to move on from React and embrace the fresh air of the Hotwire ecosystem, which allows me to handle everything the Rails way.&nbsp;&nbsp;</p><h3 id="q-5-programming-books-that-meant-most-to-you-and-why"><strong>Q. 5 programming books that meant most to you, and why?</strong></h3><p>I didn’t have the time or passion to read technical books until later in my small career, when I noticed all the gaps I had in many areas, so I haven’t read many, to give a good list of the ones meant the most to me. <strong>Too many still to read.&nbsp;</strong></p><p>But my list with no specific order will be:&nbsp;</p><ul><li><a href="https://www.packtpub.com/product/layered-design-for-ruby-on-rails-applications/9781801813785?ref=writesoftwarewell.com" rel="noreferrer">Layered Design for Ruby on Rails Applications</a>, by Vladimir Dementyev</li></ul><figure><img src="https://www.writesoftwarewell.com/content/images/2024/04/layered-design-1.jpg" alt="Layered Design for Ruby on Rails Applications, by Vladimir Dementyev" loading="lazy" width="200" height="247"></figure><ul><li><a href="https://rebuilding-rails.com/?ref=writesoftwarewell.com" rel="noreferrer">Rebuilding Rails</a> by Noah Gibbs</li></ul><figure><img src="https://www.writesoftwarewell.com/content/images/2024/04/rebuilding-rails-2.jpeg" alt="Rebuilding Rails by Noah Gibbs" loading="lazy" width="250" height="286"></figure><ul><li><a href="https://patshaughnessy.net/ruby-under-a-microscope?ref=writesoftwarewell.com" rel="noreferrer">Ruby Under a Microscope</a> by Pat Shaughnessy</li></ul><figure><img src="https://www.writesoftwarewell.com/content/images/2024/04/RUM_coverfront.png" alt="Ruby Under a Microscope by Pat Shaughnessy" loading="lazy" width="200" height="265"></figure><ul><li><a href="https://www.poodr.com/?ref=writesoftwarewell.com" rel="noreferrer">Practical Object-Oriented Design in Ruby</a> by Sandi Metz</li></ul><figure><img src="https://www.writesoftwarewell.com/content/images/2024/04/POODR_2e_cover.jpeg" alt="Practical Object-Oriented Design in Ruby by Sandi Metz" loading="lazy" width="200" height="262"></figure><p>I should revisit some of them as my perspective and way of seeing things are still in progress and constantly evolving. I am still on a learning adventure for all these principles that other people from a more traditional background have learned while I’m still discovering them.</p><h3 id="q-who-are-your-programming-heroes"><strong>Q. Who are your programming heroes?</strong></h3><p>I greatly admire individuals who possess the skill to program and a passion for it. Those who go further by sharing their knowledge and experiences with the world truly stand out as heroes. Their willingness to educate others and contribute to the programming community's collective growth is commendable and inspiring.&nbsp;</p><p>Special mention to <a href="https://www.freecodecamp.org/news/author/quincylarson/?ref=writesoftwarewell.com" rel="noreferrer">Quincy Larson</a>, <a href="https://www.freecodecamp.org/?ref=writesoftwarewell.com" rel="noreferrer">freeCodeCamp</a> and all the content creators like you who put a lot of time and effort into sharing.&nbsp;</p><p>On the personal <a href="https://aviflombaum.com/?ref=writesoftwarewell.com" rel="noreferrer">Avi Flombaum</a>, one of my Teachers at Flatiron School. He shares amazing content on his blog, and every person I have worked with has taken the time not just to help me but also to help me grow as a developer and as a person.</p><h3 id="q-what-does-your-typical-day-look-like-as-a-developer-what-do-you-like-the-most-about-your-current-work"><strong>Q. What does your typical day look like as a developer? What do you like the most about your current work?</strong></h3><p>In my short career, I have worked in all setups, from fully WFH to hybrid, to working five days in the office.</p><p>Now that I plan to return to Spain, my new job will be fully remote. I’m transitioning to a new Role in <a href="https://www.gocertify.me/?ref=writesoftwarewell.com" rel="noreferrer">gocertify</a> in mid-April, so I am unsure what my day will look like.&nbsp;</p><p>In my role at Superbyte, I transitioned from Junior Developer to a more semi-senior role, where I was involved in writing code, conceptual designs, and some R&amp;D.</p><p>Most of the time, I write code but also enjoy pair programming sometimes with others and review PRs. I love to teach as I think it is the best way to learn any concept, so I am always keen to help my peers suggest new approaches or learn from them.</p><h3 id="q-what-resources-and-practices-do-you-recommend-for-learning-and-keeping-up-to-date"><strong>Q. What resources and practices do you recommend for learning and keeping up to date?</strong></h3><blockquote><strong>Learn how to learn.</strong></blockquote><p>Everyone is different and has different ways to learn and retain what has been learned.&nbsp;</p><p>I advise <strong>learning how to learn</strong> and find what works best for you. I learn by doing or watching a tutorial and trying to replicate or go beyond the tutorial in the areas I want to learn. Like books, I read them first, no coding, and then I read them again more like a guide than a following.</p><p>One important thing is to not feel like you must learn everything. Not everyone needs to know everything. Take something you like and focus on that thing. It will take you further than trying to learn too many things and ending up just spending a lot of time fake-learning.&nbsp;</p><h3 id="q-what-advice-do-you-have-for-new-programmers"><strong>Q. What advice do you have for new programmers?</strong></h3><blockquote>The silliest question is the one that is not asked.</blockquote><p>Work hard, be bold and ask questions. The silliest question is the one that is not asked. Don’t feel like you are not good enough or you know too little. Everyone eventually has been in the same situation at some point, so keep it going.</p><p>Learn Ruby and Rails. You will find it not just easy, but also enjoyable, once you get to the turning point.</p><p>Another good thing is to find a mentor or someone who is keen to help you grow. There is a good possible resource for that: <a href="https://firstrubyfriend.org/?ref=writesoftwarewell.com" rel="noreferrer nofollow noopener">https://firstrubyfriend.org/</a>&nbsp;</p><p>For me, it is all about passion; it was a hobby, but now it is my job.&nbsp;</p><p>"If you find a job you love, you’ll never work again..."— <a href="https://quotefancy.com/winston-churchill-quotes?ref=writesoftwarewell.com" rel="noreferrer nofollow noopener">Winston Churchill</a>&nbsp;&nbsp;&nbsp;</p><h3 id="q-tools-of-the-tradewhat-are-some-of-your-favourite-software-programs-in-your-day-to-day-work"><strong>Q. Tools of the trade - What are some of your favourite software programs in your day-to-day work?</strong></h3><ul><li><strong>Code editor:</strong> VS Code</li><li><strong>Database GUI:</strong> MongoDB Compass</li><li><strong>Terminal:</strong> iTerm with ‘oh my zsh’</li><li><strong>Browser:</strong> Chrome</li><li><strong>Notes and Project Management:</strong> Apple Notes, VScode markdown, Github projects/issues</li><li><strong>Communication:</strong> Microsoft Teams.</li></ul><h3 id="q-what%E2%80%99s-the-best-way-for-people-to-connect-with-you"><strong>Q. What’s the best way for people to connect with you?</strong></h3><p>I’m not really active in socials, but I always keep an eye on LinkedIn.&nbsp;</p><ul><li><a href="https://www.linkedin.com/in/pedro-david-garcia-lopez/?ref=writesoftwarewell.com" rel="noreferrer">LinkedIn</a></li><li><a href="https://twitter.com/LorryDriveloper?ref=writesoftwarewell.com" rel="noreferrer">Twitter/X</a>:&nbsp;</li></ul><p>I just found out that my old personal website, which I had written with Django, is down as the free host I hosted it on is no longer available, so it is a good opportunity to rebuild it in Ruby on Rails and start my blog <a href="http://www.lorrydriveloper.com/?ref=writesoftwarewell.com" rel="noreferrer nofollow noopener">www.lorrydriveloper.com</a> which, I hope, will be up and running soon.</p><hr><p>That's a wrap. I hope you found this interview helpful and useful. </p><p>If you enjoyed this one, I think you might enjoy the following ones:</p><figure><a href="https://www.writesoftwarewell.com/interview-with-daniela-baron/"><div><p>Interview with Daniela Baron, Staff Engineer at FundThrough</p><p>I recently had the pleasure to interview Daniela Baron, a Ruby and Rails developer and staff engineer at FundThrough, a fintech company based in Toronto. It contains a lot of interesting and thoughtful answers as well as a ton of high-quality recommendations for books and podcasts. Enjoy!</p><p><img src="https://www.writesoftwarewell.com/content/images/size/w256h256/2022/09/Akshay-3.jpeg" alt=""><span>Akshay Khot</span></p></div><p><img src="https://www.writesoftwarewell.com/content/images/2023/11/daniela-baron.png" alt=""></p></a></figure><figure><a href="https://www.writesoftwarewell.com/interview-with-miles-woodroffe/"><div><p>Interview with Miles Woodroffe, former Global CTO of Cookpad</p><p>Miles Woodroffe is a veteran Ruby &amp; Rails developer who served as a Global CTO at Cookpad for many years and represents the company as a founding board member at the Rails Foundation. I recently had the pleasure to interview Miles, and he graciously provided very thoughtful and interesting answers.</p><p><img src="https://www.writesoftwarewell.com/content/images/size/w256h256/2022/09/Akshay-3.jpeg" alt=""><span>Write Software, Well</span><span>Akshay Khot</span></p></div><p><img src="https://www.writesoftwarewell.com/content/images/size/w1200/2023/10/Miles-1.png" alt=""></p></a></figure><p>And you have to watch this video!</p><figure><iframe width="200" height="113" src="https://www.youtube.com/embed/UFYJ2DE9wlM?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="" title="After Learning to Code at 81, She Made a Game for Fellow Seniors"></iframe></figure><div><p>As always, if you have any questions or feedback, didn't understand something, or found a mistake, please leave a comment below or <a href="mailto:akshay.khot@hey.com?ref=akshays-blog" rel="noreferrer">send me an email</a>. I reply to all emails I get from developers, and I look forward to hearing from you.</p><p>If you'd like to receive future articles directly in your email, please <a href="#/portal/signup" rel="noreferrer">subscribe to my blog</a>. Your email is respected, never shared, rented, sold or spammed. If you're already a subscriber, thank you.</p></div>
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I made an open source Windows app to rewind and search everything on screen (326 pts)]]></title>
            <link>https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c</link>
            <guid>40105371</guid>
            <pubDate>Sun, 21 Apr 2024 12:53:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c">https://tonoko.notion.site/I-made-an-open-source-app-to-rewind-search-everything-happened-on-your-screen-on-Windows-184d1a9d5edb494dba0c2f46d311ec5c</a>, See on <a href="https://news.ycombinator.com/item?id=40105371">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[I love programming but I hate the programming industry (248 pts)]]></title>
            <link>https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry</link>
            <guid>40105121</guid>
            <pubDate>Sun, 21 Apr 2024 12:20:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry">https://www.deathbyabstraction.com/I-love-programming-but-I-hate-the-programming-industry</a>, See on <a href="https://news.ycombinator.com/item?id=40105121">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

		<p>I never really fit into any software engineering job I’ve had. The technical side of things got boring after I had gained a basic grasp of the inner logic of the codebase and no longer felt challenged, and then I wanted to do more, and more importantly - do it differently. I wondered about design decisions and their broader purpose: why are we doing this and why are we doing it in this specific way? Might there be a better way? What metrics are we using to determine success and why? Although these questions weren’t always posed aloud I got told I ‘think too much’ and ‘care too much’ when I could be using this time to churn out more lines of code. I didn’t belong, and I was too young and insecure to articulate that this wasn’t just a simple mismatch between my talent and my position. It was that I fundamentally disagreed with the way these places operate and wanted to do work to change them rather than perpetuate them.</p>

<p>If there ever was a part of me that thought ‘there has to be better things out there’, looking at job postings for a couple of weeks in 2023 was enough to kill that illusion. 90% of the time when I read descriptions it is excruciatingly obvious to me that whatever code the chosen candidates will end up writing at this job will be completely removed from any important problem not only humanity, but even any individual human has ever had. Startup culture is shamelessly at the forefront of this industry’s ‘produce more code and ask less questions’ policy. All most startups do is move investors money around while trying to acquire paid users by convincing them they need a product that is more often than not marginally useful at best. They <a href="https://www.quora.com/Why-do-95-of-start-ups-fail-what-do-the-5-do-right-that-make-them-successful">usually fail</a> at that, leaving behind thousands of lines of unmaintainable spaghetti code engineers were bullied into writing in weeks instead of months using arbitrary trendy technologies. No one will ever look at that shit again except maybe as an example of bad coding practices, engineers’ time has been wasted and venture capital largely ends up in the hands of the people that already possess significant capital - they may use that to fund another startup, and this wretched cycle continues. Job ads that try to paint this as some kind of exciting meaningful endeavour that will enrich people’s lives and stimulate my engineering growth are an insult to my intelligence. I don’t want to be a part of this - not just because it is arguably immoral but because it is fundamentally and infuriatingly boring and pointless.</p>

<p>While established tech companies differ from startups organisationally and financially, they don’t really contrast them culturally. Sure, the code you write at a FAANG might actually make its way to users, but what you as an individual happen to think about any aspect of writing code will be more irrelevant than ever. You are a cog in a machine not only in the sense that the product you are building is likely automating the <a href="https://doctorow.medium.com/https-pluralistic-net-2023-11-06-attention-rents-consumer-welfare-queens-fa3475adb465">worst aspects of capitalism</a> in increasingly sinister ways, but also in a practical sense, you’re a number: the size of your backend stack, or your tech interview score, or your performance review score. It’s not so much this reality itself that’s so atrocious to me, but more the fact that as engineers we’re expected to find this empty and humiliating grind even more aspirational than many other workers are, and are even more discouraged from questioning any aspect of it.</p>

<p>Essentially, the concept of critical thinking has been made anathema to engineering: as a programmer you are to focus solely on the how, rarely on the what, and certainly never on the why. For the rare code monkey that finds themselves able and willing to critique the system they’re producing for the message is clear: leave that shit at the door. A code monkey is prohibited from even identifying the lack of autonomy and creativity inherent to the position - they can only strive to build more, never to build differently, or build different and better things.</p>

<p>So while this do-more-ask-less mentality of the tech world might produce more code it also consistently leads to <a href="https://stackoverflow.blog/2023/12/25/is-software-getting-worse/">worse software</a>. Even in the cases where capital and other forces outside of our immediate control theoretically allow for us to build software in a way that is sustainable, or has a positive impact on the world at large, or is at the very least useful practically we still often don’t, because of simple inertia: it’s easier and usually more viable to do what’s on trend and reproduce the status quo once more. Worse yet, this same inertia then seeps into the entire tech stack this societally useless product is built upon. The technologies all the way down to the languages, libraries, frameworks, and even code patterns become infected with the same brand of novelty and gimmicks before actual innovation that plagues the industry as a whole. After all, if you’re not solving unconventional problems, why would you need unconventional engineering?</p>

<p>In truth, the most interesting engineering problems are usually the ones which arise naturally in our society, as opposed to those where technological advancement is an end in and of itself, or even those which attempt to artificially create a market demand where there isn’t one. Societal necessity is the best possible driving force of innovation - remember that historically the most groundbreaking <a href="https://www.bbc.com/news/technology-18419691">achievements</a> in early computing have happened in the service of the greater good. This is what I really want to do: I want every <em>how</em> - from the programming language and paradigm, architecture, down to every line of code and piece of syntax - to be informed by the <em>why</em> of the system that is being built. And I want that <em>why</em> to be a reflection of a genuine existing need, not some bullshit business metric which pretty much exists for its own sake.</p>

<p>So far I haven’t had the chance to actually meet someone who would share these values in any significant sense and would want to do this kind of engineering work. Despite the isolation I often experience in my interactions with this industry, I am confident in the value of my work and the importance of the things I have to say. So if you are that person please reach out - it would be interesting to know if a place for someone like me already exists somewhere. And if not I think it would benefit us to create it.</p>

		
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tiny World Map (363 pts)]]></title>
            <link>https://github.com/tinyworldmap/tiny-world-map</link>
            <guid>40104774</guid>
            <pubDate>Sun, 21 Apr 2024 11:21:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tinyworldmap/tiny-world-map">https://github.com/tinyworldmap/tiny-world-map</a>, See on <a href="https://news.ycombinator.com/item?id=40104774">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">tinyworldmap</h2><a id="user-content-tinyworldmap" aria-label="Permalink: tinyworldmap" href="#tinyworldmap"></a></p>
<p dir="auto">tinyworldmap is a world map for offline-first and low-bandwidth web apps.</p>
<p dir="auto"><a href="https://tinyworldmap.com/" rel="nofollow">Demo</a></p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/zoomed-mid.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/zoomed-mid.png"></a></kbd></p>
<p dir="auto">tinyworldmap is designed to be used with Leaflet. All zoom levels are supported, and the most complete version is only 300 kB gzipped. Its client-side rendering has been extensively profiled and tested on low-end decade-old phones, with no discernible lag.</p>
<p dir="auto">By default, the map displays the 10,000 most populous cities added to OpenStreetMap. At the time of writing, this encompasses all cities and towns with a population of at least 48,000:</p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/zoomed-in-3.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/zoomed-in-3.png"></a></kbd></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">There are two ways to use the map:</p>
<ol dir="auto">
<li>As a base map, replacing OpenStreetMap tiles</li>
<li>As an offline fallback for OpenStreetMap tiles</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">As a base map</h3><a id="user-content-as-a-base-map" aria-label="Permalink: As a base map" href="#as-a-base-map"></a></p>
<p dir="auto">To use tinyworldmap as a Leaflet base map, add the following to your <code>head</code> tag:</p>
<div dir="auto" data-snippet-clipboard-copy-content="<script src=&quot;https://tinyworldmap.com/dist/tiny-world-all-10000.js&quot;>"><pre><span>&lt;</span><span>script</span> <span>src</span>="<span>https://tinyworldmap.com/dist/tiny-world-all-10000.js</span>"<span>&gt;</span></pre></div>
<p dir="auto">This script embeds all data necessary to display the map.</p>
<p dir="auto">Then, instead of adding a tile layer to the Leaflet map, use:</p>
<div dir="auto" data-snippet-clipboard-copy-content="new L.GridLayer.TinyWorld().addTo(map)"><pre><span>new</span> <span>L</span><span>.</span><span>GridLayer</span><span>.</span><span>TinyWorld</span><span>(</span><span>)</span><span>.</span><span>addTo</span><span>(</span><span>map</span><span>)</span></pre></div>
<p dir="auto">The <code>TinyWorld</code> constructor accepts several options: <code>backgroundColor</code>, <code>textFillColor</code>, <code>borderStrokeColor</code>, <code>borderFillColor</code>, <code>borderWidth</code>, <code>textStrokeColor</code> (which helps separate the text from the rest), <code>textStrokeWidth</code>, <code>cityFont</code> (e.g. <code>"12px Arial"</code>), <code>countryFont</code>, and <code>dotColor</code>.</p>
<p dir="auto">If <code>dotColor</code> is specified, each city is marked with a dot. This enhances usability when using the stripped-down version of tinyworldmap that excludes country borders:</p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/noborders.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/noborders.png"></a></kbd></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">As a fallback map</h3><a id="user-content-as-a-fallback-map" aria-label="Permalink: As a fallback map" href="#as-a-fallback-map"></a></p>
<p dir="auto">In offline-first web applications, caching image-based maps at all zoom levels is impossible due to the vast number of tiles, with a combined size often in the order of terabytes.</p>
<p dir="auto">This repository <a href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/service-worker.js">provides</a> a service worker to enable offline functionality for web apps with maps.</p>
<p dir="auto">When this service worker is installed, the fallback map is preloaded. All visited pages are cached, but the base map is excluded. While the server can be reached, cached data is not used. When the user is offline, the website is served from cache, and the service worker intercepts requests to the OSM tile server, generating replacement tiles locally using tinyworldmap.</p>
<p dir="auto">Before <a href="https://web.dev/articles/service-workers-registration" rel="nofollow">registering the service worker</a>, first modify all sections in the service worker marked <code>IMPORTANT</code>. Once registered, be sure to attribute OpenStreetMap and tinyworldmap in your tile layer as follows:</p>
<div dir="auto" data-snippet-clipboard-copy-content="L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&amp;copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a>, <a href=&quot;https://www.tinyworldmap.com&quot;>tinyworldmap</a>'
}).addTo(map);"><pre><span>L</span><span>.</span><span>tileLayer</span><span>(</span><span>'https://tile.openstreetmap.org/{z}/{x}/{y}.png'</span><span>,</span> <span>{</span>
    <span>maxZoom</span>: <span>19</span><span>,</span>
    <span>attribution</span>: <span>'&amp;copy; &lt;a href="https://www.openstreetmap.org/copyright"&gt;OpenStreetMap&lt;/a&gt;, &lt;a href="https://www.tinyworldmap.com"&gt;tinyworldmap&lt;/a&gt;'</span>
<span>}</span><span>)</span><span>.</span><span>addTo</span><span>(</span><span>map</span><span>)</span><span>;</span></pre></div>
<p dir="auto">To see an example of a production application using tinyworldmap as a fallback, visit <a href="https://hitchmap.com/" rel="nofollow">Hitchmap</a>. Simply load the website in a browser supporting service workers, wait for a while, turn off your internet, and reload. The web app should be functioning as normal, using the fallback map. Note that it might take a while for the service worker to install.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tinier world maps</h2><a id="user-content-tinier-world-maps" aria-label="Permalink: Tinier world maps" href="#tinier-world-maps"></a></p>
<p dir="auto">The complete map is 300K gzipped/694K uncompressed. For certain use cases, this might still be too large.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">No borders</h3><a id="user-content-no-borders" aria-label="Permalink: No borders" href="#no-borders"></a></p>
<p dir="auto"><a href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/dist/tiny-world-noborders-10000.js"><code>tiny-world-noborders-10000.js(on)</code></a> contains all the data present in the complete version except for country borders and shorelines. This reduces the gzipped version by 100k and the uncompressed version by 200k.</p>
<p dir="auto">In addition to its smaller size, the version without borders has the advantage that all data included is precise. The country borders in the complete version are not exact at high zoom levels, which can look strange when overlaying shapes that match country borders and shorelines. In such cases, the version without borders often looks better.</p>
<p dir="auto">This is the default styling:</p>
<p dir="auto"><kbd><a target="_blank" rel="noopener noreferrer" href="https://github.com/tinyworldmap/tiny-world-map/blob/gh-pages/images/noborders.png"><img src="https://github.com/tinyworldmap/tiny-world-map/raw/gh-pages/images/noborders.png"></a></kbd></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">No cities</h3><a id="user-content-no-cities" aria-label="Permalink: No cities" href="#no-cities"></a></p>
<p dir="auto">There are two versions available without city labels: <code>tiny-world-nocities.js(on)</code> (which retains country labels) and <code>tiny-world-borders.js(on)</code> (which omits country labels). The city labels comprise 410K uncompressed and 172K compressed.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Fewer cities</h3><a id="user-content-fewer-cities" aria-label="Permalink: Fewer cities" href="#fewer-cities"></a></p>
<p dir="auto">Finally, for each file including city labels, there also exist versions featuring 2,000 cities and 4,000 cities. Simply substitute <code>10000</code> with <code>2000</code> or <code>4000</code> in the filename.</p>
<table>
<thead>
<tr>
<th>Cities included</th>
<th>Population</th>
</tr>
</thead>
<tbody>
<tr>
<td>10,000</td>
<td>&gt; 48,000</td>
</tr>
<tr>
<td>4,000</td>
<td>&gt; 137,000</td>
</tr>
<tr>
<td>2,000</td>
<td>&gt; 287,000</td>
</tr>
</tbody>
</table>
<p dir="auto"><h2 tabindex="-1" dir="auto">Hire tinyworldmap</h2><a id="user-content-hire-tinyworldmap" aria-label="Permalink: Hire tinyworldmap" href="#hire-tinyworldmap"></a></p>
<p dir="auto">If you require a customized map (e.g. in more detail or in another language) or if you need assistance implementing offline functionality on your website, please contact us at <a href="mailto:business@tinyworldmap.com?body=Hi%20Bob,">business@tinyworldmap.com</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Attribution</h2><a id="user-content-attribution" aria-label="Permalink: Attribution" href="#attribution"></a></p>
<p dir="auto">Like OpenStreetMap data, tinyworldmap data is licensed under the ODBL, which necessitates attribution. If you've followed the steps outlined above, your Leaflet footer should include attribution to both OpenStreetMap and tinyworldmap. If not, add the following:</p>
<div dir="auto" data-snippet-clipboard-copy-content="&amp;copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a>, <a href=&quot;https://www.tinyworldmap.com&quot;>tinyworldmap</a>"><pre>&amp;copy; <span>&lt;</span><span>a</span> <span>href</span>="<span>https://www.openstreetmap.org/copyright</span>"<span>&gt;</span>OpenStreetMap<span>&lt;/</span><span>a</span><span>&gt;</span>, <span>&lt;</span><span>a</span> <span>href</span>="<span>https://www.tinyworldmap.com</span>"<span>&gt;</span>tinyworldmap<span>&lt;/</span><span>a</span><span>&gt;</span></pre></div>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I made a website that converts YT videos into step-by-step guides (164 pts)]]></title>
            <link>https://stepify.tech/</link>
            <guid>40104641</guid>
            <pubDate>Sun, 21 Apr 2024 10:52:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://stepify.tech/">https://stepify.tech/</a>, See on <a href="https://news.ycombinator.com/item?id=40104641">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
    <div>
            <!-- Title -->
            <!-- <h1 class="ls-tight font-bolder display-4 mb-7">
              Stepify Youtube Videos and Save your Time
            </h1> -->
            <h2>
              Stepify YouTube videos for the sake of your time
            </h2>
            <!-- Text -->
            <!-- <p class="lead mb-12">
              Plan, build and launch beautiful and consistent user interfaces for the web that drives meaningful engagement and growth for your brand.
            </p> -->
            <p>
              No time for Youtube videos?
              Get a step-by-step tutorial of any video to follow along. Pure transcript. Powered by AI.
          </p>
            <!-- Form -->
            <!-- <form class="w-2/3 mx-auto">
              <div class="rounded px-2 py-2 border shadow">
                <div class="row">
                  <div class="col">
                    <input type="email" name="email" class="form-control pl-3 shadow-none bg-transparent border-0" placeholder="Enter your email address">
                  </div>
                  <div class="col-auto">
                    <button type="submit" class="btn btn-block btn-dark">Notify me</button>
                  </div>
                </div>
              </div>
            </form> -->
            <form method="POST" action="">
              
              
          </form>


          
            
          </div>
    <div>
        <h2>Recent videos:</h2>
        
        <div>
          
          <div>
              <!-- Image -->
              <p><img alt="EECS4302 ANTLR4 Parser Generator Tutorial: Part 3" src="https://i.ytimg.com/vi/2o9ImGNI1uw/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">EECS4302 ANTLR4 Parser Generator Tutorial: Part 3</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/2o9ImGNI1uw">EECS4302 ANTLR4 Parser Generator Tutorial: Part 3</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: Creating Model Classes: Create a new package in your Java project to hold ...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="EECS4302 ANTLR4 Parser Generator Tutorial: Part 2" src="https://i.ytimg.com/vi/cWUbZ0fCZB4/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">EECS4302 ANTLR4 Parser Generator Tutorial: Part 2</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/cWUbZ0fCZB4">EECS4302 ANTLR4 Parser Generator Tutorial: Part 2</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: Implementing ANTLR for Parsing Projects Rationale for Using ANTLR: Before ...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Tinder Nightmares 8" src="https://i.ytimg.com/vi/XLfx8iT5nzQ/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Tinder Nightmares 8</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/XLfx8iT5nzQ">Tinder Nightmares 8</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: Navigating Through "Tinder Nightmares 8" by Cody Ko Introduction to Tinder...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="XX век. Англо-бурская и русско-японская войны. Лекция №74 от 04.08.15" src="https://i.ytimg.com/vi/qC156wcuYUE/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">XX век. Англо-бурская и русско-японская войны. Лекция №74 от 04.08.15</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/qC156wcuYUE">XX век. Англо-бурская и русско-японская войны. Лекция №74 от 04.08.15</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Title: XX век. Англо-бурская и русско-японская войны. Лекция №74 от 04.08.15 Channel Name: Лекции...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="EECS4302 ANTLR4 Parser Generator Tutorial: Part 1" src="https://i.ytimg.com/vi/-FdD_xzNFL4/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">EECS4302 ANTLR4 Parser Generator Tutorial: Part 1</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/-FdD_xzNFL4">EECS4302 ANTLR4 Parser Generator Tutorial: Part 1</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial for Using ANTLR4 Parser Generator Introduction to ANTLR4 and Assumptions: A...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="TUA # 132 - Responding To Critics" src="https://i.ytimg.com/vi/D2x_a6W5D0Q/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">TUA # 132 - Responding To Critics</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/D2x_a6W5D0Q">TUA # 132 - Responding To Critics</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Tutorial: How to Respond to Critics on YouTube Video Title: TUA # 132 - Responding To Critics Cha...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="EECS4302 ANTLR4 Parser Generator Tutorial: Part 4" src="https://i.ytimg.com/vi/zo_oiHzKLqw/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">EECS4302 ANTLR4 Parser Generator Tutorial: Part 4</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/zo_oiHzKLqw">EECS4302 ANTLR4 Parser Generator Tutorial: Part 4</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: Understanding the Hierarchy: In the previous tutorial, the hierarchy of vi...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Baby Got Back - Sir Mix-A-Lot (Lyric Video)" src="https://i.ytimg.com/vi/hrle-WJib6U/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Baby Got Back - Sir Mix-A-Lot (Lyric Video)</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/hrle-WJib6U">Baby Got Back - Sir Mix-A-Lot (Lyric Video)</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Title: Baby Got Back - Sir Mix-A-Lot (Lyric Video) Channel Name: Fling of Joy Tutorial: Introduct...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Quadruple Your Internet Speed for Free" src="https://i.ytimg.com/vi/UqLHE0_NRFo/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Quadruple Your Internet Speed for Free</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/UqLHE0_NRFo">Quadruple Your Internet Speed for Free</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: How to Quadruple Your Internet Speed for Free Materials Needed: Ethernet c...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Salt-N-Pepa - Push It (Official Music Video)" src="https://i.ytimg.com/vi/vCadcBR95oU/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Salt-N-Pepa - Push It (Official Music Video)</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/vCadcBR95oU">Salt-N-Pepa - Push It (Official Music Video)</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Title: Salt-N-Pepa - Push It (Official Music Video) Tutorial Step 1: Introduction to the Song The...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Elden Ring - Walkthrough Part 32: Castle Redmane" src="https://i.ytimg.com/vi/hpPeS5TEpu4/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Elden Ring - Walkthrough Part 32: Castle Redmane</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/hpPeS5TEpu4">Elden Ring - Walkthrough Part 32: Castle Redmane</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: Castle Redmane Walkthrough Preparation for Patch 1.03: Revert to a previou...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Deep Learning | What is Deep Learning? | Deep Learning Tutorial For Beginners | 2023 | Simplilearn" src="https://i.ytimg.com/vi/6M5VXKLf4D4/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Deep Learning | What is Deep Learning? | Deep Learning Tutorial For Beginners | 2023 | Simplilearn</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/6M5VXKLf4D4">Deep Learning | What is Deep Learning? | Deep Learning Tutorial For Beginners | 2023 | Simplilearn</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: Understanding Deep Learning Introduction to Deep Learning Deep learning is...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="How to Install Lead Roof Flashings - Easy fit roof flashing DIY" src="https://i.ytimg.com/vi/R-vrSq-x40Y/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">How to Install Lead Roof Flashings - Easy fit roof flashing DIY</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/R-vrSq-x40Y">How to Install Lead Roof Flashings - Easy fit roof flashing DIY</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  How to Install Lead Roof Flashings - Step-by-Step Tutorial Prepare the Work Area Identify the are...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Winnipeg business owner says overflowing bin that led to overcharge staged by garbage company" src="https://i.ytimg.com/vi/6Wbg58EzOlU/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Winnipeg business owner says overflowing bin that led to overcharge staged by garbage company</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/6Wbg58EzOlU">Winnipeg business owner says overflowing bin that led to overcharge staged by garbage company</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  Step-by-Step Tutorial: How to Handle an Overcharge Situation with Waste Management Introduction: ...
                </p>
                
              </div>
            </div>
          
          <div>
              <!-- Image -->
              <p><img alt="Excel Pivot Table EXPLAINED in 10 Minutes (Productivity tips included!)" src="https://i.ytimg.com/vi/UsdedFoTA68/mqdefault.jpg">
              </p>
              <!-- Card Body -->
              <div>
                <!-- Title -->
                <!-- <h3 class="h4">Excel Pivot Table EXPLAINED in 10 Minutes (Productivity tips included!)</h3> -->
                <h2>
                  <a href="https://stepify.tech/video/UsdedFoTA68">Excel Pivot Table EXPLAINED in 10 Minutes (Productivity tips included!)</a>
              </h2>
  
                <!-- Subtitle  %A for weekday, %B for month, %d for day, %Y for year -->
                <p><span>Apr 21, 2024</span></p><p>
                  How to Create Excel Pivot Tables - Step-by-Step Tutorial Organize Your Data Properly: Ensure your...
                </p>
                
              </div>
            </div>
          
        </div>
      </div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Lunatik: Lunatik is a framework for scripting the Linux kernel with Lua (155 pts)]]></title>
            <link>https://github.com/luainkernel/lunatik</link>
            <guid>40104492</guid>
            <pubDate>Sun, 21 Apr 2024 10:14:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/luainkernel/lunatik">https://github.com/luainkernel/lunatik</a>, See on <a href="https://news.ycombinator.com/item?id=40104492">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Lunatik</h2><a id="user-content-lunatik" aria-label="Permalink: Lunatik" href="#lunatik"></a></p>
<p dir="auto">Lunatik is a framework for scripting the Linux kernel with <a href="https://www.lua.org/" rel="nofollow">Lua</a>.
It is composed by the Lua interpreter modified to run in the kernel;
a <a href="https://github.com/luainkernel/lunatik/blob/master/lunatik.lua">device driver</a> (written in Lua =)) and a <a href="https://github.com/luainkernel/lunatik/blob/master/lunatik">command line tool</a>
to load and run scripts and manage runtime environments from the user space;
a <a href="#lunatik-c-api">C API</a> to load and run scripts and manage runtime environments from the kernel;
and <a href="#lunatik-lua-apis">Lua APIs</a> for binding kernel facilities to Lua scripts.</p>
<p dir="auto">Here is an example of a character device driver written in Lua using Lunatik
to generate random ASCII printable characters:</p>
<div dir="auto" data-snippet-clipboard-copy-content="-- /lib/modules/lua/passwd.lua
--
-- implements /dev/passwd for generate passwords
-- usage: $ sudo lunatik run passwd
--        $ head -c <width> /dev/passwd

local device = require(&quot;device&quot;)
local linux  = require(&quot;linux&quot;)

local function nop() end -- do nothing

local s = linux.stat
local driver = {name = &quot;passwd&quot;, open = nop, release = nop, mode = s.IRUGO}

function driver:read() -- read(2) callback
	-- generate random ASCII printable characters
	return string.char(linux.random(32, 126))
end

-- creates a new character device
device.new(driver)"><pre><span><span>--</span> /lib/modules/lua/passwd.lua</span>
<span><span>--</span></span>
<span><span>--</span> implements /dev/passwd for generate passwords</span>
<span><span>--</span> usage: $ sudo lunatik run passwd</span>
<span><span>--</span>        $ head -c &lt;width&gt; /dev/passwd</span>

<span>local</span> <span>device</span> <span>=</span> <span>require</span>(<span><span>"</span>device<span>"</span></span>)
<span>local</span> <span>linux</span>  <span>=</span> <span>require</span>(<span><span>"</span>linux<span>"</span></span>)

<span>local</span> <span>function</span> <span>nop</span>() <span>end</span> <span><span>--</span> do nothing</span>

<span>local</span> <span>s</span> <span>=</span> <span>linux</span>.<span>stat</span>
<span>local</span> <span>driver</span> <span>=</span> {<span>name</span> <span>=</span> <span><span>"</span>passwd<span>"</span></span>, <span>open</span> <span>=</span> <span>nop</span>, <span>release</span> <span>=</span> <span>nop</span>, <span>mode</span> <span>=</span> <span>s</span>.<span>IRUGO</span>}

<span>function</span> <span>driver</span>:<span>read</span>() <span><span>--</span> read(2) callback</span>
	<span><span>--</span> generate random ASCII printable characters</span>
	<span>return</span> <span>string.char</span>(<span>linux</span>.<span>random</span>(<span>32</span>, <span>126</span>))
<span>end</span>

<span><span>--</span> creates a new character device</span>
<span>device</span>.<span>new</span>(<span>driver</span>)</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<div data-snippet-clipboard-copy-content="make
sudo make install
sudo lunatik # execute Lunatik REPL
Lunatik 3.4  Copyright (C) 2023-2024 ring-0 Ltda.
> return 42 -- execute this line in the kernel
42"><pre><code>make
sudo make install
sudo lunatik # execute Lunatik REPL
Lunatik 3.4  Copyright (C) 2023-2024 ring-0 Ltda.
&gt; return 42 -- execute this line in the kernel
42
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">lunatik</h3><a id="user-content-lunatik-1" aria-label="Permalink: lunatik" href="#lunatik-1"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="usage: lunatik [load|unload|reload|status|list] [run|spawn|stop <script>]"><pre>usage: lunatik [load<span>|</span>unload<span>|</span>reload<span>|</span>status<span>|</span>list] [run<span>|</span>spawn<span>|</span>stop <span>&lt;</span>script<span>&gt;</span>]</pre></div>
<ul dir="auto">
<li><code>load</code>: load Lunatik kernel modules</li>
<li><code>unload</code>: unload Lunatik kernel modules</li>
<li><code>reload</code>: reload Lunatik kernel modules</li>
<li><code>status</code>: show which Lunatik kernel modules are currently loaded</li>
<li><code>list</code>: show which runtime environments are currently running</li>
<li><code>run</code>: create a new runtime environment to run the script <code>/lib/modules/lua/&lt;script&gt;.lua</code></li>
<li><code>spawn</code>: create a new runtime environment and spawn a thread to run the script <code>/lib/modules/lua/&lt;script&gt;.lua</code></li>
<li><code>stop</code>: stop the runtime environment created to run the script <code>&lt;script&gt;</code></li>
<li><code>default</code>: start a <em>REPL (Read–Eval–Print Loop)</em></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Lua Version</h2><a id="user-content-lua-version" aria-label="Permalink: Lua Version" href="#lua-version"></a></p>
<p dir="auto">Lunatik 3.4 is based on
<a href="https://github.com/luainkernel/lua">Lua 5.4 adapted</a>
to run in the kernel.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Floating-point numbers</h3><a id="user-content-floating-point-numbers" aria-label="Permalink: Floating-point numbers" href="#floating-point-numbers"></a></p>
<p dir="auto">Lunatik <strong>does not</strong> support floating-point arithmetic,
thus it <strong>does not</strong> support <code>__div</code> nor <code>__pow</code>
<a href="https://www.lua.org/manual/5.4/manual.html#2.4" rel="nofollow">metamethods</a>
and the type <em>number</em> has only the subtype <em>integer</em>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Lua API</h3><a id="user-content-lua-api" aria-label="Permalink: Lua API" href="#lua-api"></a></p>
<p dir="auto">Lunatik <strong>does not</strong> support both <a href="https://www.lua.org/manual/5.4/manual.html#6.8" rel="nofollow">io</a> and
<a href="https://www.lua.org/manual/5.4/manual.html#6.9" rel="nofollow">os</a> libraries,
and the given identifiers from the following libraries:</p>
<ul dir="auto">
<li><a href="https://www.lua.org/manual/5.4/manual.html#pdf-debug.debug" rel="nofollow">debug.debug</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.acos" rel="nofollow">math.acos</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.asin" rel="nofollow">math.asin</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.atan" rel="nofollow">math.atan</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.ceil" rel="nofollow">math.ceil</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.cos" rel="nofollow">math.cos</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.deg" rel="nofollow">math.deg</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.exp" rel="nofollow">math.exp</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.floor" rel="nofollow">math.floor</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.fmod" rel="nofollow">math.fmod</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.huge" rel="nofollow">math.huge</a>.
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.log" rel="nofollow">math.log</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.modf" rel="nofollow">math.modf</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.pi" rel="nofollow">math.pi</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.rad" rel="nofollow">math.rad</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.random" rel="nofollow">math.random</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.randomseed" rel="nofollow">math.randomseed</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.sin" rel="nofollow">math.sin</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.sqrt" rel="nofollow">math.sqrt</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.tan" rel="nofollow">math.tan</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.type" rel="nofollow">math.type</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-package.cpath" rel="nofollow">package.cpath</a>.</li>
</ul>
<p dir="auto">Lunatik <strong>modifies</strong> the following identifiers:</p>
<ul dir="auto">
<li><a href="https://www.lua.org/manual/5.4/manual.html#pdf-_VERSION" rel="nofollow">_VERSION</a>: is defined as <code>"Lua 5.4-kernel"</code>.</li>
<li><a href="https://www.lua.org/manual/5.4/manual.html#pdf-collectgarbage" rel="nofollow">collectgarbage("count")</a>: returns the total memory in use by Lua in <strong>bytes</strong>, instead of <em>Kbytes</em>.</li>
<li><a href="https://www.lua.org/manual/5.4/manual.html#pdf-package.path" rel="nofollow">package.path</a>: is defined as <code>"/lib/modules/lua/?.lua;/lib/modules/lua/?/init.lua"</code>.</li>
<li><a href="https://www.lua.org/manual/5.4/manual.html#pdf-require" rel="nofollow">require</a>: only supports built-in or already linked C modules, that is, Lunatik <strong>cannot</strong> load kernel modules dynamically.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">C API</h3><a id="user-content-c-api" aria-label="Permalink: C API" href="#c-api"></a></p>
<p dir="auto">Lunatik <strong>does not</strong> support
<a href="https://www.lua.org/manual/5.4/manual.html#luaL_Stream" rel="nofollow">luaL_Stream</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#luaL_execresult" rel="nofollow">luaL_execresult</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#luaL_fileresult" rel="nofollow">luaL_fileresult</a>,
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-luaopen_io" rel="nofollow">luaopen_io</a> and
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-luaopen_os" rel="nofollow">luaopen_os</a>.</p>
<p dir="auto">Lunatik <strong>modifies</strong> <a href="https://www.lua.org/manual/5.4/manual.html#luaL_openlibs" rel="nofollow">luaL_openlibs</a> to remove <a href="https://www.lua.org/manual/5.4/manual.html#pdf-luaopen_io" rel="nofollow">luaopen_io</a> and <a href="https://www.lua.org/manual/5.4/manual.html#pdf-luaopen_os" rel="nofollow">luaopen_os</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Lunatik C API</h2><a id="user-content-lunatik-c-api" aria-label="Permalink: Lunatik C API" href="#lunatik-c-api"></a></p>

<p dir="auto"><h4 tabindex="-1" dir="auto">lunatik_runtime</h4><a id="user-content-lunatik_runtime" aria-label="Permalink: lunatik_runtime" href="#lunatik_runtime"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="int lunatik_runtime(lunatik_object_t **pruntime, const char *script, bool sleep);"><pre><span>int</span> <span>lunatik_runtime</span>(<span>lunatik_object_t</span> <span>*</span><span>*</span><span>pruntime</span>, <span>const</span> <span>char</span> <span>*</span><span>script</span>, <span>bool</span> <span>sleep</span>);</pre></div>
<p dir="auto"><em>lunatik_runtime()</em> creates a new <code>runtime</code> environment then loads and runs the script
<code>/lib/modules/lua/&lt;script&gt;.lua</code> as the entry point for this environment.
It <em>must</em> only be called from <em>process context</em>.
The <code>runtime</code> environment is a Lunatik object that holds
a <a href="https://www.lua.org/manual/5.4/manual.html#lua_State" rel="nofollow">Lua state</a>.
Lunatik objects are special
Lua <a href="https://www.lua.org/manual/5.4/manual.html#2.1" rel="nofollow">userdata</a>
which also hold
a <a href="https://docs.kernel.org/locking/locktypes.html" rel="nofollow">lock type</a> and
a <a href="https://www.kernel.org/doc/Documentation/kref.txt" rel="nofollow">reference counter</a>.
If <code>sleep</code> is <em>true</em>, <em>lunatik_runtime()</em> will use a
<a href="https://docs.kernel.org/locking/mutex-design.html" rel="nofollow">mutex</a>
for locking the <code>runtime</code> environment and the
<a href="https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html" rel="nofollow">GFP_KERNEL</a>
flag for allocating new memory later on on
<a href="https://github.com/luainkernel/lunatik#lunatik_run">lunatik_run()</a> calls.
Otherwise, it will use a <a href="https://docs.kernel.org/locking/locktypes.html#raw-spinlock-t-and-spinlock-t" rel="nofollow">spinlock</a> and <a href="https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html" rel="nofollow">GFP_ATOMIC</a>.
<em>lunatik_runtime()</em> opens the Lua standard libraries
<a href="https://github.com/luainkernel/lunatik#c-api">present on Lunatik</a>.
If successful, <em>lunatik_runtime()</em> sets the address pointed by <code>pruntime</code> and
<a href="https://www.lua.org/manual/5.4/manual.html#lua_getextraspace" rel="nofollow">Lua's extra space</a>
with a pointer for the new created <code>runtime</code> environment,
sets the <em>reference counter</em> to <code>1</code> and then returns <code>0</code>.
Otherwise, it returns <code>-ENOMEM</code>, if insufficient memory is available;
or <code>-EINVAL</code>, if it fails to load or run the <code>script</code>.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Example</h5><a id="user-content-example" aria-label="Permalink: Example" href="#example"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="-- /lib/modules/lua/mydevice.lua
function myread(len, off)
	return &quot;42&quot;
end"><pre><span><span>--</span> /lib/modules/lua/mydevice.lua</span>
<span>function</span> <span>myread</span>(<span>len</span>, <span>off</span>)
	<span>return</span> <span><span>"</span>42<span>"</span></span>
<span>end</span></pre></div>
<div dir="auto" data-snippet-clipboard-copy-content="static lunatik_object_t *runtime;

static int __init mydevice_init(void)
{
	return lunatik_runtime(&amp;runtime, &quot;mydevice&quot;, true);
}
"><pre><span>static</span> <span>lunatik_object_t</span> <span>*</span><span>runtime</span>;

<span>static</span> <span>int</span> <span>__init</span> <span>mydevice_init</span>(<span>void</span>)
{
	<span>return</span> <span>lunatik_runtime</span>(<span>&amp;</span><span>runtime</span>, <span>"mydevice"</span>, true);
}</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">lunatik_stop</h4><a id="user-content-lunatik_stop" aria-label="Permalink: lunatik_stop" href="#lunatik_stop"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="int lunatik_stop(lunatik_object_t *runtime);"><pre><span>int</span> <span>lunatik_stop</span>(<span>lunatik_object_t</span> <span>*</span><span>runtime</span>);</pre></div>
<p dir="auto"><em>lunatik_stop()</em>
<a href="https://www.lua.org/manual/5.4/manual.html#lua_close" rel="nofollow">closes</a>
the
<a href="https://www.lua.org/manual/5.4/manual.html#lua_State" rel="nofollow">Lua state</a>
created for this <code>runtime</code> environment and decrements the
<a href="https://www.kernel.org/doc/Documentation/kref.txt" rel="nofollow">reference counter</a>.
Once the reference counter is decremented to zero, the
<a href="https://docs.kernel.org/locking/locktypes.html" rel="nofollow">lock type</a>
and the memory allocated for the <code>runtime</code> environment are released.
If the <code>runtime</code> environment has been released, it returns <code>1</code>;
otherwise, it returns <code>0</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">lunatik_run</h4><a id="user-content-lunatik_run" aria-label="Permalink: lunatik_run" href="#lunatik_run"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="void lunatik_run(lunatik_object_t *runtime, <inttype> (*handler)(...), <inttype> &amp;ret, ...);"><pre><span>void</span> <span>lunatik_run</span>(<span>lunatik_object_t</span> <span>*</span><span>runtime</span>, <span>&lt;</span><span>inttype</span><span>&gt;</span> (<span>*</span><span>handler</span>)(...), <span>&lt;</span><span>inttype</span><span>&gt;</span> <span>&amp;</span><span>ret</span>, ...);</pre></div>
<p dir="auto"><em>lunatik_run()</em> locks the <code>runtime</code> environment and calls the <code>handler</code>
passing the associated Lua state as the first argument followed by the variadic arguments.
If the Lua state has been closed, <code>ret</code> is set with <code>-ENXIO</code>;
otherwise, <code>ret</code> is set with the result of <code>handler(L, ...)</code> call.
Then, it restores the Lua stack and unlocks the <code>runtime</code> environment.
It is defined as a macro.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto">Example</h5><a id="user-content-example-1" aria-label="Permalink: Example" href="#example-1"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="static int l_read(lua_State *L, char *buf, size_t len, loff_t *off)
{
	size_t llen;
	const char *lbuf;

	lua_getglobal(L, &quot;myread&quot;);
	lua_pushinteger(L, len);
	lua_pushinteger(L, *off);
	if (lua_pcall(L, 2, 2, 0) != LUA_OK) { /* calls myread(len, off) */
		pr_err(&quot;%s\n&quot;, lua_tostring(L, -1));
		return -ECANCELED;
	}

	lbuf = lua_tolstring(L, -2, &amp;llen);
	llen = min(len, llen);
	if (copy_to_user(buf, lbuf, llen) != 0)
		return -EFAULT;

	*off = (loff_t)luaL_optinteger(L, -1, *off + llen);
	return (ssize_t)llen;
}

static ssize_t mydevice_read(struct file *f, char *buf, size_t len, loff_t *off)
{
	ssize_t ret;
	lunatik_object_t *runtime = (lunatik_object_t *)f->private_data;

	lunatik_run(runtime, l_read, ret, buf, len, off);
	return ret;
}"><pre><span>static</span> <span>int</span> <span>l_read</span>(<span>lua_State</span> <span>*</span><span>L</span>, <span>char</span> <span>*</span><span>buf</span>, <span>size_t</span> <span>len</span>, <span>loff_t</span> <span>*</span><span>off</span>)
{
	<span>size_t</span> <span>llen</span>;
	<span>const</span> <span>char</span> <span>*</span><span>lbuf</span>;

	<span>lua_getglobal</span>(<span>L</span>, <span>"myread"</span>);
	<span>lua_pushinteger</span>(<span>L</span>, <span>len</span>);
	<span>lua_pushinteger</span>(<span>L</span>, <span>*</span><span>off</span>);
	<span>if</span> (<span>lua_pcall</span>(<span>L</span>, <span>2</span>, <span>2</span>, <span>0</span>) <span>!=</span> <span>LUA_OK</span>) { <span>/* calls myread(len, off) */</span>
		<span>pr_err</span>(<span>"%s\n"</span>, <span>lua_tostring</span>(<span>L</span>, <span>-1</span>));
		<span>return</span> <span>-</span><span>ECANCELED</span>;
	}

	<span>lbuf</span> <span>=</span> <span>lua_tolstring</span>(<span>L</span>, <span>-2</span>, <span>&amp;</span><span>llen</span>);
	<span>llen</span> <span>=</span> <span>min</span>(<span>len</span>, <span>llen</span>);
	<span>if</span> (<span>copy_to_user</span>(<span>buf</span>, <span>lbuf</span>, <span>llen</span>) <span>!=</span> <span>0</span>)
		<span>return</span> <span>-</span><span>EFAULT</span>;

	<span>*</span><span>off</span> <span>=</span> (<span>loff_t</span>)<span>luaL_optinteger</span>(<span>L</span>, <span>-1</span>, <span>*</span><span>off</span> <span>+</span> <span>llen</span>);
	<span>return</span> (<span>ssize_t</span>)<span>llen</span>;
}

<span>static</span> <span>ssize_t</span> <span>mydevice_read</span>(<span>struct</span> <span>file</span> <span>*</span><span>f</span>, <span>char</span> <span>*</span><span>buf</span>, <span>size_t</span> <span>len</span>, <span>loff_t</span> <span>*</span><span>off</span>)
{
	<span>ssize_t</span> <span>ret</span>;
	<span>lunatik_object_t</span> <span>*</span><span>runtime</span> <span>=</span> (<span>lunatik_object_t</span> <span>*</span>)<span>f</span><span>-&gt;</span><span>private_data</span>;

	<span>lunatik_run</span>(<span>runtime</span>, <span>l_read</span>, <span>ret</span>, <span>buf</span>, <span>len</span>, <span>off</span>);
	<span>return</span> <span>ret</span>;
}</pre></div>
<p dir="auto"><h4 tabindex="-1" dir="auto">lunatik_getobject</h4><a id="user-content-lunatik_getobject" aria-label="Permalink: lunatik_getobject" href="#lunatik_getobject"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="void lunatik_getobject(lunatik_object_t *object);"><pre><span>void</span> <span>lunatik_getobject</span>(<span>lunatik_object_t</span> <span>*</span><span>object</span>);</pre></div>
<p dir="auto"><em>lunatik_getobject()</em> increments the
<a href="https://www.kernel.org/doc/Documentation/kref.txt" rel="nofollow">reference counter</a>
of this <code>object</code> (e.g., <code>runtime</code> environment).</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">lunatik_put</h4><a id="user-content-lunatik_put" aria-label="Permalink: lunatik_put" href="#lunatik_put"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="int lunatik_putobject(lunatik_object_t *object);"><pre><span>int</span> <span>lunatik_putobject</span>(<span>lunatik_object_t</span> <span>*</span><span>object</span>);</pre></div>
<p dir="auto"><em>lunatik_putobject()</em> decrements the
<a href="https://www.kernel.org/doc/Documentation/kref.txt" rel="nofollow">reference counter</a>
of this <code>object</code> (e.g., <code>runtime</code> environment).
If the <code>object</code> has been released, it returns <code>1</code>;
otherwise, it returns <code>0</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">lunatik_toruntime</h4><a id="user-content-lunatik_toruntime" aria-label="Permalink: lunatik_toruntime" href="#lunatik_toruntime"></a></p>
<div dir="auto" data-snippet-clipboard-copy-content="lunatik_object_t *lunatik_toruntime(lua_State *L);"><pre><span>lunatik_object_t</span> <span>*</span><span>lunatik_toruntime</span>(<span>lua_State</span> <span>*</span><span>L</span>);</pre></div>
<p dir="auto"><em>lunatik_toruntime()</em> returns the <code>runtime</code> environment referenced by the <code>L</code>'s
<a href="https://www.lua.org/manual/5.4/manual.html#lua_getextraspace" rel="nofollow">extra space</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Lunatik Lua APIs</h2><a id="user-content-lunatik-lua-apis" aria-label="Permalink: Lunatik Lua APIs" href="#lunatik-lua-apis"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">lunatik</h3><a id="user-content-lunatik-2" aria-label="Permalink: lunatik" href="#lunatik-2"></a></p>
<p dir="auto">The <code>lunatik</code> library provides support to load and run scripts and manage runtime environments from Lua.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>lunatik.runtime(script [, sleep])</code></h4><a id="user-content-lunatikruntimescript--sleep" aria-label="Permalink: lunatik.runtime(script [, sleep])" href="#lunatikruntimescript--sleep"></a></p>
<p dir="auto"><em>lunatik.runtime()</em> creates a new
<a href="https://github.com/luainkernel/lunatik#lunatik_runtime">runtime environment</a>
then loads and runs the script
<code>/lib/modules/lua/&lt;script&gt;.lua</code> as the entry point for this environment.
It returns a Lunatik object representing the <code>runtime</code> environment.
If <code>sleep</code> is <em>true</em> or omitted, it will use a <a href="https://docs.kernel.org/locking/mutex-design.html" rel="nofollow">mutex</a>
and
<a href="https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html" rel="nofollow">GFP_KERNEL</a>;
otherwise, it will use a <a href="https://docs.kernel.org/locking/locktypes.html#raw-spinlock-t-and-spinlock-t" rel="nofollow">spinlock</a> and <a href="https://www.kernel.org/doc/html/latest/core-api/memory-allocation.html" rel="nofollow">GFP_ATOMIC</a>.
<em>lunatik.runtime()</em> opens the Lua standard libraries
<a href="https://github.com/luainkernel/lunatik#c-api">present on Lunatik</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>lunatik.stop(runtime)</code>, <code>runtime:stop()</code></h4><a id="user-content-lunatikstopruntime-runtimestop" aria-label="Permalink: lunatik.stop(runtime), runtime:stop()" href="#lunatikstopruntime-runtimestop"></a></p>
<p dir="auto"><em>lunatik.stop()</em>
<a href="https://github.com/luainkernel/lunatik#lunatik_stop">stops</a>
the <code>runtime</code> environment and clear its reference from the runtime object.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">device</h3><a id="user-content-device" aria-label="Permalink: device" href="#device"></a></p>
<p dir="auto">The <code>device</code> library provides support for writting
<a href="https://static.lwn.net/images/pdf/LDD3/ch03.pdf" rel="nofollow">character device drivers</a>
in Lua.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>device.new(driver)</code></h4><a id="user-content-devicenewdriver" aria-label="Permalink: device.new(driver)" href="#devicenewdriver"></a></p>
<p dir="auto"><em>device.new()</em> returns a new <code>device</code> object
and installs its <code>driver</code> in the system.
The <code>driver</code> <strong>must</strong> be defined as a table containing the following field:</p>
<ul dir="auto">
<li><code>name</code>: string defining the device name; it is used for creating the device file (e.g., <code>/dev/&lt;name&gt;</code>).</li>
</ul>
<p dir="auto">The <code>driver</code> table might optionally contain the following fields:</p>
<ul dir="auto">
<li><code>read</code>: callback function to handle the
<a href="https://docs.kernel.org/filesystems/vfs.html#id2" rel="nofollow">read operation</a>
on the device file.
It receives the <code>driver</code> table as the first argument
followed by two integers,
the <code>length</code> to be read and the file <code>offset</code>.
It should return a string and, optionally, the <code>updated offset</code>.
If the length of the returned string is greater than the requested <code>length</code>,
the string will be corrected to that <code>length</code>.
If the <code>updated offset</code> is not returned, the <code>offset</code> will be updated with <code>offset + length</code>.</li>
<li><code>write</code>: callback function to handle the
<a href="https://docs.kernel.org/filesystems/vfs.html#id2" rel="nofollow">write operation</a>
on the device file.
It receives the <code>driver</code> table as the first argument
followed by the string to be written and
an integer as the file <code>offset</code>.
It might return optionally the written <code>length</code> followed by the <code>updated offset</code>.
If the returned length is greater than the requested <code>length</code>,
the returned length will be corrected.
If the <code>updated offset</code> is not returned, the <code>offset</code> will be updated with <code>offset + length</code>.</li>
<li><code>open</code>: callback function to handle the
<a href="https://docs.kernel.org/filesystems/vfs.html#id2" rel="nofollow">open operation</a>
on the device file.
It receives the <code>driver</code> table and it is expected to return nothing.</li>
<li><code>release</code>: callback function to handle the
<a href="https://docs.kernel.org/filesystems/vfs.html#id2" rel="nofollow">release operation</a>
on the device file.
It receives the <code>driver</code> table and it is expected to return nothing.</li>
<li><code>mode</code>: an integer specifying the device
<a href="https://github.com/luainkernel/lunatik#linuxstat">file mode</a>.</li>
</ul>
<p dir="auto">If an operation callback is not defined, the <code>device</code> returns <code>-ENXIO</code> to VFS on its access.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>device.stop(dev)</code>, <code>dev:stop()</code></h4><a id="user-content-devicestopdev-devstop" aria-label="Permalink: device.stop(dev), dev:stop()" href="#devicestopdev-devstop"></a></p>
<p dir="auto"><em>device.stop()</em> removes a device <code>driver</code> specified by the <code>dev</code> object from the system.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">linux</h3><a id="user-content-linux" aria-label="Permalink: linux" href="#linux"></a></p>
<p dir="auto">The <code>linux</code> library provides support for some Linux kernel facilities.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>linux.random([m [, n]])</code></h4><a id="user-content-linuxrandomm--n" aria-label="Permalink: linux.random([m [, n]])" href="#linuxrandomm--n"></a></p>
<p dir="auto"><em>linux.random()</em> mimics the behavior of
<a href="https://www.lua.org/manual/5.4/manual.html#pdf-math.random" rel="nofollow">math.random</a>,
but binding <em>&lt;linux/random.h&gt;</em>'s
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/random.h#L42" rel="nofollow">get_random_u32()</a>
and
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/random.h#L43" rel="nofollow">get_random_u64()</a>
APIs.</p>
<p dir="auto">When called without arguments,
produces an integer with all bits (pseudo)random.
When called with two integers <code>m</code> and <code>n</code>,
<em>linux.random()</em> returns a pseudo-random integer with uniform distribution in the range <code>[m, n]</code>.
The call <code>math.random(n)</code>, for a positive <code>n</code>, is equivalent to <code>math.random(1, n)</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>linux.stat</code></h4><a id="user-content-linuxstat" aria-label="Permalink: linux.stat" href="#linuxstat"></a></p>
<p dir="auto"><em>linux.stat</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/stat.h" rel="nofollow">&lt;linux/stat.h&gt;</a>
integer flags to Lua.</p>
<ul dir="auto">
<li><code>"IRWXUGO"</code>: permission to <em>read</em>, <em>write</em> and <em>execute</em> for <em>user</em>, <em>group</em> and <em>other</em>.</li>
<li><code>"IRUGO"</code>: permission only to <em>read</em> for <em>user</em>, <em>group</em> and <em>other</em>.</li>
<li><code>"IWUGO"</code>: permission only to <em>write</em> for <em>user</em>, <em>group</em> and <em>other</em>.</li>
<li><code>"IXUGO"</code>: permission only to <em>execute</em> for <em>user</em>, <em>group</em> and <em>other</em>.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>linux.schedule([timeout [, state]])</code></h4><a id="user-content-linuxscheduletimeout--state" aria-label="Permalink: linux.schedule([timeout [, state]])" href="#linuxscheduletimeout--state"></a></p>
<p dir="auto"><em>linux.schedule()</em> sets the current task <code>state</code> and makes the it sleep until <code>timeout</code> milliseconds have elapsed.
If <code>timeout</code> is omitted, it uses <code>MAX_SCHEDULE_TIMEOUT</code>.
If <code>state</code> is omitted, it uses <code>task.INTERRUPTIBLE</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>linux.task</code></h4><a id="user-content-linuxtask" aria-label="Permalink: linux.task" href="#linuxtask"></a></p>
<p dir="auto"><em>linux.task</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/sched.h#L7v3" rel="nofollow">task state</a>
flags to Lua.</p>
<ul dir="auto">
<li><code>"RUNNING"</code>: task is executing on a CPU or waiting to be executed.</li>
<li><code>"INTERRUPTIBLE"</code>: task is waiting for a signal or a resource (sleeping).</li>
<li><code>"UNINTERRUPTIBLE"</code>: behaves like "INTERRUPTIBLE" with the exception that signal will not wake up the task.</li>
<li><code>"KILLABLE"</code>: behaves like "UNINTERRUPTIBLE" with the exception that fatal signals will wake up the task.</li>
<li><code>"IDLE"</code>: behaves like "UNINTERRUPTIBLE" with the exception that it avoids the loadavg accounting.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>linux.errno</code></h4><a id="user-content-linuxerrno" aria-label="Permalink: linux.errno" href="#linuxerrno"></a></p>
<p dir="auto"><em>linux.errno</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/uapi/asm-generic/errno-base.h" rel="nofollow">&lt;uapi/asm-generic/errno-base.h&gt;</a>
flags to Lua.</p>
<ul dir="auto">
<li><code>"PERM"</code>: Operation not permitted.</li>
<li><code>"NOENT"</code>: No such file or directory.</li>
<li><code>"SRCH"</code>: No such process.</li>
<li><code>"INTR"</code>: Interrupted system call.</li>
<li><code>"IO"</code>: I/O error.</li>
<li><code>"NXIO"</code>:No such device or address.</li>
<li><code>"2BIG"</code>:, Argument list too long.</li>
<li><code>"NOEXEC"</code>: Exec format error.</li>
<li><code>"BADF"</code>: Bad file number.</li>
<li><code>"CHILD"</code>: No child processes.</li>
<li><code>"AGAIN"</code>: Try again.</li>
<li><code>"NOMEM"</code>: Out of memory.</li>
<li><code>"ACCES"</code>: Permission denied.</li>
<li><code>"FAULT"</code>: Bad address.</li>
<li><code>"NOTBLK"</code>: Block device required.</li>
<li><code>"BUSY"</code>: Device or resource busy.</li>
<li><code>"EXIST"</code>: File exists.</li>
<li><code>"XDEV"</code>: Cross-device link.</li>
<li><code>"NODEV"</code>: No such device.</li>
<li><code>"NOTDIR"</code>: Not a directory.</li>
<li><code>"ISDIR"</code>: Is a directory.</li>
<li><code>"INVAL"</code>: Invalid argument.</li>
<li><code>"NFILE"</code>: File table overflow.</li>
<li><code>"MFILE"</code>: Too many open files.</li>
<li><code>"NOTTY"</code>: Not a typewriter.</li>
<li><code>"TXTBSY"</code>: Text file busy.</li>
<li><code>"FBIG"</code>: File too large.</li>
<li><code>"NOSPC"</code>: No space left on device.</li>
<li><code>"SPIPE"</code>: Illegal seek.</li>
<li><code>"ROFS"</code>: Read-only file system.</li>
<li><code>"MLINK"</code>: Too many links.</li>
<li><code>"PIPE"</code>: Broken pipe.</li>
<li><code>"DOM"</code>: Math argument out of domain of func.</li>
<li><code>"RANGE"</code>: Math result not representable.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">notifier</h3><a id="user-content-notifier" aria-label="Permalink: notifier" href="#notifier"></a></p>
<p dir="auto">The <code>notifier</code> library provides support for the kernel
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/notifier.h" rel="nofollow">notifier chains</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>notifier.keyboard(callback)</code></h4><a id="user-content-notifierkeyboardcallback" aria-label="Permalink: notifier.keyboard(callback)" href="#notifierkeyboardcallback"></a></p>
<p dir="auto"><em>notifier.keyboard()</em> returns a new keyboard <code>notifier</code> object and installs it in the system.
The <code>callback</code> function is called whenever a console keyboard event happens
(e.g., a key has been pressed or released).
This <code>callback</code> receives the following arguments:</p>
<ul dir="auto">
<li><code>event</code>: the available <em>events</em> are defined by the
<a href="https://github.com/luainkernel/lunatik#notifierkbd">notifier.kbd</a> table.</li>
<li><code>down</code>: <code>true</code>, if the key is pressed; <code>false</code>, if it is released.</li>
<li><code>shift</code>: <code>true</code>, if the shift key is held; <code>false</code>, otherwise.</li>
<li><code>key</code>: <em>keycode</em> or <em>keysym</em> depending on <code>event</code>.</li>
</ul>
<p dir="auto">The <code>callback</code> function might return the values defined by the
<a href="https://github.com/luainkernel/lunatik#notifiernotify">notifier.notify</a> table.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>notifier.kbd</code></h4><a id="user-content-notifierkbd" aria-label="Permalink: notifier.kbd" href="#notifierkbd"></a></p>
<p dir="auto"><em>notifier.kbd</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/notifier.h#L229" rel="nofollow">KBD</a>
flags to Lua.</p>
<ul dir="auto">
<li><code>"KEYCODE"</code>: keyboard <em>keycode</em>, called before any other.</li>
<li><code>"UNBOUND_KEYCODE"</code>: keyboard <em>keycode</em> which is not bound to any other.</li>
<li><code>"UNICODE"</code>: keyboard unicode.</li>
<li><code>"KEYSYM"</code>: keyboard <em>keysym</em>.</li>
<li><code>"POST_KEYSYM"</code>: called after keyboard <em>keysym</em> interpretation.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>notifier.netdevice(callback)</code></h4><a id="user-content-notifiernetdevicecallback" aria-label="Permalink: notifier.netdevice(callback)" href="#notifiernetdevicecallback"></a></p>
<p dir="auto"><em>notifier.netdevice()</em> returns a new netdevice <code>notifier</code> object and installs it in the system.
The <code>callback</code> function is called whenever a console netdevice event happens
(e.g., a network interface has been connected or disconnected).
This <code>callback</code> receives the following arguments:</p>
<ul dir="auto">
<li><code>event</code>: the available <em>events</em> are defined by the
<a href="https://github.com/luainkernel/lunatik#notifiernetdev">notifier.netdev</a> table.</li>
<li><code>name</code>: the device name.</li>
</ul>
<p dir="auto">The <code>callback</code> function might return the values defined by the
<a href="https://github.com/luainkernel/lunatik#notifiernotify">notifier.notify</a> table.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>notifier.netdev</code></h4><a id="user-content-notifiernetdev" aria-label="Permalink: notifier.netdev" href="#notifiernetdev"></a></p>
<p dir="auto"><em>notifier.netdev</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/v6.3/source/include/linux/netdevice.h#L2812" rel="nofollow">NETDEV</a>
flags to Lua.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>notifier.notify</code></h4><a id="user-content-notifiernotify" aria-label="Permalink: notifier.notify" href="#notifiernotify"></a></p>
<p dir="auto"><em>notifier.notify</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/notifier.h#L183" rel="nofollow">NOTIFY</a>
flags to Lua.</p>
<ul dir="auto">
<li><code>"DONE"</code>: don't care.</li>
<li><code>"OK"</code>: suits me.</li>
<li><code>"BAD"</code>: bad/veto action.</li>
<li><code>"STOP"</code>: clean way to return from the notifier and stop further calls.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>notifier.delete(notfr)</code>, <code>notfr:delete()</code></h4><a id="user-content-notifierdeletenotfr-notfrdelete" aria-label="Permalink: notifier.delete(notfr), notfr:delete()" href="#notifierdeletenotfr-notfrdelete"></a></p>
<p dir="auto"><em>notifier.delete()</em> removes a <code>notifier</code> specified by the <code>notfr</code> object from the system.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">socket</h3><a id="user-content-socket" aria-label="Permalink: socket" href="#socket"></a></p>
<p dir="auto">The <code>socket</code> library provides support for the kernel
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/net.h" rel="nofollow">networking handling</a>.
This library was inspired by
<a href="https://github.com/tcz717">Chengzhi Tan</a>'s
<a href="https://summerofcode.withgoogle.com/archive/2018/projects/5993341447569408" rel="nofollow">GSoC project</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.new(family, type, protocol)</code></h4><a id="user-content-socketnewfamily-type-protocol" aria-label="Permalink: socket.new(family, type, protocol)" href="#socketnewfamily-type-protocol"></a></p>
<p dir="auto"><em>socket.new()</em> creates a new <code>socket</code> object.
This function receives the following arguments:</p>
<ul dir="auto">
<li><code>family</code>: the available <em>address families</em> are defined by the
<a href="https://github.com/luainkernel/lunatik#socketaf">socket.af</a> table.</li>
<li><code>sock</code>: the available <em>types</em> are present on the
<a href="https://github.com/luainkernel/lunatik#socketsock">socket.sock</a> table.</li>
<li><code>protocol</code>: the available <em>protocols</em> are defined by the
<a href="https://github.com/luainkernel/lunatik#socketipproto">socket.ipproto</a> table.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.af</code></h4><a id="user-content-socketaf" aria-label="Permalink: socket.af" href="#socketaf"></a></p>
<p dir="auto"><em>socket.af</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/socket.h#L187" rel="nofollow">address families (AF)</a>
to Lua.</p>
<ul dir="auto">
<li><code>"UNSPEC"</code>: Unspecified.</li>
<li><code>"UNIX"</code>: Unix domain sockets.</li>
<li><code>"LOCAL"</code>: POSIX name for AF_UNIX.</li>
<li><code>"INET"</code>: Internet IP Protocol.</li>
<li><code>"AX25"</code>: Amateur Radio AX.25.</li>
<li><code>"IPX"</code>: Novell IPX.</li>
<li><code>"APPLETALK"</code>: AppleTalk DDP.</li>
<li><code>"NETROM"</code>: Amateur Radio NET/ROM.</li>
<li><code>"BRIDGE"</code>: Multiprotocol bridge.</li>
<li><code>"ATMPVC"</code>: ATM PVCs.</li>
<li><code>"X25"</code>: Reserved for X.25 project.</li>
<li><code>"INET6"</code>: IP version 6.</li>
<li><code>"ROSE"</code>: Amateur Radio X.25 PLP.</li>
<li><code>"DEC"</code>: Reserved for DECnet project.</li>
<li><code>"NETBEUI"</code>: Reserved for 802.2LLC project.</li>
<li><code>"SECURITY"</code>: Security callback pseudo AF.</li>
<li><code>"KEY"</code>: PF_KEY key management API.</li>
<li><code>"NETLINK"</code>: Netlink.</li>
<li><code>"ROUTE"</code>: Alias to emulate 4.4BSD.</li>
<li><code>"PACKET"</code>: Packet family.</li>
<li><code>"ASH"</code>: Ash.</li>
<li><code>"ECONET"</code>: Acorn Econet.</li>
<li><code>"ATMSVC"</code>: ATM SVCs.</li>
<li><code>"RDS"</code>: RDS sockets.</li>
<li><code>"SNA"</code>: Linux SNA Project (nutters!).</li>
<li><code>"IRDA"</code>: IRDA sockets.</li>
<li><code>"PPPOX"</code>: PPPoX sockets.</li>
<li><code>"WANPIPE"</code>: Wanpipe API Sockets.</li>
<li><code>"LLC"</code>: Linux LLC.</li>
<li><code>"IB"</code>: Native InfiniBand address.</li>
<li><code>"MPLS"</code>: MPLS.</li>
<li><code>"CAN"</code>: Controller Area Network.</li>
<li><code>"TIPC"</code>: TIPC sockets.</li>
<li><code>"BLUETOOTH"</code>: Bluetooth sockets.</li>
<li><code>"IUCV"</code>: IUCV sockets.</li>
<li><code>"RXRPC"</code>: RxRPC sockets.</li>
<li><code>"ISDN"</code>: mISDN sockets.</li>
<li><code>"PHONET"</code>: Phonet sockets.</li>
<li><code>"IEEE802154"</code>: IEEE802154 sockets.</li>
<li><code>"CAIF"</code>: CAIF sockets.</li>
<li><code>"ALG"</code>: Algorithm sockets.</li>
<li><code>"NFC"</code>: NFC sockets.</li>
<li><code>"VSOCK"</code>: vSockets.</li>
<li><code>"KCM"</code>: Kernel Connection Multiplexor.</li>
<li><code>"QIPCRTR"</code>: Qualcomm IPC Router.</li>
<li><code>"SMC"</code>: reserve number for PF_SMC protocol family that reuses AF_INET address family.</li>
<li><code>"XDP"</code>: XDP sockets.</li>
<li><code>"MCTP"</code>: Management component transport protocol.</li>
<li><code>"MAX"</code>: Maximum.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.sock</code></h4><a id="user-content-socketsock" aria-label="Permalink: socket.sock" href="#socketsock"></a></p>
<p dir="auto"><em>socket.sock</em> is a table that exports socket
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/net.h#L49" rel="nofollow">types (SOCK)</a>:</p>
<ul dir="auto">
<li><code>"STREAM"</code>: stream (connection) socket.</li>
<li><code>"DGRAM"</code>: datagram (conn.less) socket.</li>
<li><code>"RAW"</code>: raw socket.</li>
<li><code>"RDM"</code>: reliably-delivered message.</li>
<li><code>"SEQPACKET"</code>: sequential packet socket.</li>
<li><code>"DCCP"</code>: Datagram Congestion Control Protocol socket.</li>
<li><code>"PACKET"</code>: linux specific way of getting packets at the dev level.</li>
</ul>
<p dir="auto">and <a href="https://elixir.bootlin.com/linux/latest/source/include/linux/net.h#L78" rel="nofollow">flags (SOCK)</a>:</p>
<ul dir="auto">
<li><code>"CLOEXEC"</code>: n/a.</li>
<li><code>"NONBLOCK"</code>: n/a.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.ipproto</code></h4><a id="user-content-socketipproto" aria-label="Permalink: socket.ipproto" href="#socketipproto"></a></p>
<p dir="auto"><em>socket.ipproto</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/uapi/linux/in.h#L27" rel="nofollow">IP protocols (IPPROTO)</a>
to Lua.</p>
<ul dir="auto">
<li><code>"IP"</code>: Dummy protocol for TCP.</li>
<li><code>"ICMP"</code>: Internet Control Message Protocol.</li>
<li><code>"IGMP"</code>: Internet Group Management Protocol.</li>
<li><code>"IPIP"</code>: IPIP tunnels (older KA9Q tunnels use 94).</li>
<li><code>"TCP"</code>: Transmission Control Protocol.</li>
<li><code>"EGP"</code>: Exterior Gateway Protocol.</li>
<li><code>"PUP"</code>: PUP protocol.</li>
<li><code>"UDP"</code>: User Datagram Protocol.</li>
<li><code>"IDP"</code>: XNS IDP protocol.</li>
<li><code>"TP"</code>: SO Transport Protocol Class 4.</li>
<li><code>"DCCP"</code>: Datagram Congestion Control Protocol.</li>
<li><code>"IPV6"</code>: IPv6-in-IPv4 tunnelling.</li>
<li><code>"RSVP"</code>: RSVP Protocol.</li>
<li><code>"GRE"</code>: Cisco GRE tunnels (rfc 1701,1702).</li>
<li><code>"ESP"</code>: Encapsulation Security Payload protocol.</li>
<li><code>"AH"</code>: Authentication Header protocol.</li>
<li><code>"MTP"</code>: Multicast Transport Protocol.</li>
<li><code>"BEETPH"</code>: IP option pseudo header for BEET.</li>
<li><code>"ENCAP"</code>: Encapsulation Header.</li>
<li><code>"PIM"</code>: Protocol Independent Multicast.</li>
<li><code>"COMP"</code>: Compression Header Protocol.</li>
<li><code>"SCTP"</code>: Stream Control Transport Protocol.</li>
<li><code>"UDPLITE"</code>: UDP-Lite (RFC 3828).</li>
<li><code>"MPLS"</code>: MPLS in IP (RFC 4023).</li>
<li><code>"ETHERNET"</code>: Ethernet-within-IPv6 Encapsulation.</li>
<li><code>"RAW"</code>: Raw IP packets.</li>
<li><code>"MPTCP"</code>: Multipath TCP connection.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket:close(sock)</code>, <code>sock:close()</code></h4><a id="user-content-socketclosesock-sockclose" aria-label="Permalink: socket:close(sock), sock:close()" href="#socketclosesock-sockclose"></a></p>
<p dir="auto"><em>socket.close()</em> removes <code>sock</code> object from the system.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.send(sock, message, [addr [, port]])</code>, <code>sock:send(message, [addr [, port]])</code></h4><a id="user-content-socketsendsock-message-addr--port-socksendmessage-addr--port" aria-label="Permalink: socket.send(sock, message, [addr [, port]]), sock:send(message, [addr [, port]])" href="#socketsendsock-message-addr--port-socksendmessage-addr--port"></a></p>
<p dir="auto"><em>socket.send()</em> sends a string <code>message</code> through the socket <code>sock</code>.
If the <code>sock</code> address family is <code>af.INET</code>, then it expects the following arguments:</p>
<ul dir="auto">
<li><code>addr</code>: <code>integer</code> describing the destination IPv4 address.</li>
<li><code>port</code>: <code>integer</code> describing the destination IPv4 port.</li>
</ul>
<p dir="auto">Otherwise:</p>
<ul dir="auto">
<li><code>addr</code>: <a href="https://www.lua.org/manual/5.4/manual.html#6.4.2" rel="nofollow">packed string</a> describing the destination address.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.receive(sock, length, [flags [, from]])</code>, <code>sock:receive(length, [flags [, from]])</code></h4><a id="user-content-socketreceivesock-length-flags--from-sockreceivelength-flags--from" aria-label="Permalink: socket.receive(sock, length, [flags [, from]]), sock:receive(length, [flags [, from]])" href="#socketreceivesock-length-flags--from-sockreceivelength-flags--from"></a></p>
<p dir="auto"><em>socket.receive()</em> receives a string with up to <code>length</code> bytes through the socket <code>sock</code>.
The available <em>message flags</em> are defined by the
<a href="https://github.com/luainkernel/lunatik#socketmsg">socket.msg</a> table.
If <code>from</code> is <code>true</code>, it returns the received message followed by the peer's address.
Otherwise, it returns only the received message.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.msg</code></h4><a id="user-content-socketmsg" aria-label="Permalink: socket.msg" href="#socketmsg"></a></p>
<p dir="auto"><em>socket.msg</em> is a table that exports
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/socket.h#L298" rel="nofollow">message flags</a>
to Lua.</p>
<ul dir="auto">
<li><code>"OOB"</code>: n/a.</li>
<li><code>"PEEK"</code>: n/a.</li>
<li><code>"DONTROUTE"</code>: n/a.</li>
<li><code>"TRYHARD"</code>: Synonym for <code>"DONTROUTE"</code> for DECnet.</li>
<li><code>"CTRUNC"</code>: n/a.</li>
<li><code>"PROBE"</code>: Do not send. Only probe path f.e. for MTU.</li>
<li><code>"TRUNC"</code>: n/a.</li>
<li><code>"DONTWAIT"</code>: Nonblocking io.</li>
<li><code>"EOR"</code>: End of record.</li>
<li><code>"WAITALL"</code>: Wait for a full request.</li>
<li><code>"FIN"</code>: n/a.</li>
<li><code>"SYN"</code>: n/a.</li>
<li><code>"CONFIRM"</code>: Confirm path validity.</li>
<li><code>"RST"</code>: n/a.</li>
<li><code>"ERRQUEUE"</code>: Fetch message from error queue.</li>
<li><code>"NOSIGNAL"</code>: Do not generate SIGPIPE.</li>
<li><code>"MORE"</code>: Sender will send more.</li>
<li><code>"WAITFORONE"</code>: recvmmsg(): block until 1+ packets avail.</li>
<li><code>"SENDPAGE_NOPOLICY"</code>: sendpage() internal: do no apply policy.</li>
<li><code>"SENDPAGE_NOTLAST"</code>: sendpage() internal: not the last page.</li>
<li><code>"BATCH"</code>: sendmmsg(): more messages coming.</li>
<li><code>"EOF"</code>: n/a.</li>
<li><code>"NO_SHARED_FRAGS"</code>: sendpage() internal: page frags are not shared.</li>
<li><code>"SENDPAGE_DECRYPTED"</code>: sendpage() internal: page may carry plain text and require encryption.</li>
<li><code>"ZEROCOPY"</code>: Use user data in kernel path.</li>
<li><code>"FASTOPEN"</code>: Send data in TCP SYN.</li>
<li><code>"CMSG_CLOEXEC"</code>: Set close_on_exec for file descriptor received through SCM_RIGHTS.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.bind(sock, addr [, port])</code>, <code>sock:bind(addr [, port])</code></h4><a id="user-content-socketbindsock-addr--port-sockbindaddr--port" aria-label="Permalink: socket.bind(sock, addr [, port]), sock:bind(addr [, port])" href="#socketbindsock-addr--port-sockbindaddr--port"></a></p>
<p dir="auto"><em>socket.bind()</em> binds the socket <code>sock</code> to a given address.
If the <code>sock</code> address family is <code>af.INET</code>, then it expects the following arguments:</p>
<ul dir="auto">
<li><code>addr</code>: <code>integer</code> describing host IPv4 address.</li>
<li><code>port</code>: <code>integer</code> describing host IPv4 port.</li>
</ul>
<p dir="auto">Otherwise:</p>
<ul dir="auto">
<li><code>addr</code>: <a href="https://www.lua.org/manual/5.4/manual.html#6.4.2" rel="nofollow">packed string</a> describing host address.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.listen(sock [, backlog])</code>, <code>sock:listen([backlog])</code></h4><a id="user-content-socketlistensock--backlog-socklistenbacklog" aria-label="Permalink: socket.listen(sock [, backlog]), sock:listen([backlog])" href="#socketlistensock--backlog-socklistenbacklog"></a></p>
<p dir="auto"><em>socket.listen()</em> moves the socket <code>sock</code> to listening state.</p>
<ul dir="auto">
<li><code>backlog</code>: pending connections queue size.
If omitted, it uses
<a href="https://elixir.bootlin.com/linux/latest/source/include/linux/socket.h#L296" rel="nofollow">SOMAXCONN</a>
as default.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.accept(sock [, flags])</code>, <code>sock:accept([flags])</code></h4><a id="user-content-socketacceptsock--flags-sockacceptflags" aria-label="Permalink: socket.accept(sock [, flags]), sock:accept([flags])" href="#socketacceptsock--flags-sockacceptflags"></a></p>
<p dir="auto"><em>socket.accept()</em> accepts a connection on socket <code>sock</code>.
It returns a new <code>socket</code> object.
The available <em>flags</em> are present on the
<a href="https://github.com/luainkernel/lunatik#socketsock">socket.sock</a> table.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.connect(sock, addr [, port] [, flags])</code>, <code>sock:connect(addr [, port] [, flags])</code></h4><a id="user-content-socketconnectsock-addr--port--flags-sockconnectaddr--port--flags" aria-label="Permalink: socket.connect(sock, addr [, port] [, flags]), sock:connect(addr [, port] [, flags])" href="#socketconnectsock-addr--port--flags-sockconnectaddr--port--flags"></a></p>
<p dir="auto"><em>socket.connect()</em> connects the socket <code>sock</code> to the address <code>addr</code>.
If the <code>sock</code> address family is <code>af.INET</code>, then it expects the following arguments:</p>
<ul dir="auto">
<li><code>addr</code>: <code>integer</code> describing the destination IPv4 address.</li>
<li><code>port</code>: <code>integer</code> describing the destination IPv4 port.</li>
</ul>
<p dir="auto">Otherwise:</p>
<ul dir="auto">
<li><code>addr</code>: <a href="https://www.lua.org/manual/5.4/manual.html#6.4.2" rel="nofollow">packed string</a> describing the destination address.</li>
</ul>
<p dir="auto">The available <em>flags</em> are present on the
<a href="https://github.com/luainkernel/lunatik#socketsock">socket.sock</a> table.</p>
<p dir="auto">For datagram sockets, <code>addr</code> is the address to which datagrams are sent
by default, and the only address from which datagrams are received.
For stream sockets, attempts to connect to <code>addr</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.getsockname(sock)</code>, <code>sock:getsockname()</code></h4><a id="user-content-socketgetsocknamesock-sockgetsockname" aria-label="Permalink: socket.getsockname(sock), sock:getsockname()" href="#socketgetsocknamesock-sockgetsockname"></a></p>
<p dir="auto"><em>socket.getsockname()</em> get the address which the socket <code>sock</code> is bound.
If the <code>sock</code> address family is <code>af.INET</code>, then it returns the following:</p>
<ul dir="auto">
<li><code>addr</code>: <code>integer</code> describing the bounded IPv4 address.</li>
<li><code>port</code>: <code>integer</code> describing the bounded IPv4 port.</li>
</ul>
<p dir="auto">Otherwise:</p>
<ul dir="auto">
<li><code>addr</code>: <a href="https://www.lua.org/manual/5.4/manual.html#6.4.2" rel="nofollow">packed string</a> describing the bounded address.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>socket.getpeername(sock)</code>, <code>sock:getpeername()</code></h4><a id="user-content-socketgetpeernamesock-sockgetpeername" aria-label="Permalink: socket.getpeername(sock), sock:getpeername()" href="#socketgetpeernamesock-sockgetpeername"></a></p>
<p dir="auto"><em>socket.getpeername()</em> get the address which the socket <code>sock</code> is connected.
If the <code>sock</code> address family is <code>af.INET</code>, then it returns the following:</p>
<ul dir="auto">
<li><code>addr</code>: <code>integer</code> describing the peer's IPv4 address.</li>
<li><code>port</code>: <code>integer</code> describing the peer's IPv4 port.</li>
</ul>
<p dir="auto">Otherwise:</p>
<ul dir="auto">
<li><code>addr</code>: <a href="https://www.lua.org/manual/5.4/manual.html#6.4.2" rel="nofollow">packed string</a> describing the peer's address.</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">socket.inet</h3><a id="user-content-socketinet" aria-label="Permalink: socket.inet" href="#socketinet"></a></p>
<p dir="auto">The <code>socket.inet</code> library provides support for high-level IPv4 sockets.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>inet.tcp()</code></h4><a id="user-content-inettcp" aria-label="Permalink: inet.tcp()" href="#inettcp"></a></p>
<p dir="auto"><em>inet.tcp()</em> creates a new <code>socket</code> using
<a href="https://github.com/luainkernel/lunatik#socketaf">af.INET</a> address family,
<a href="https://github.com/luainkernel/lunatik#socketsock">sock.STREAM</a> type
and
<a href="https://github.com/luainkernel/lunatik#socketipproto">ipproto.TCP</a> protocol.
It overrides <code>socket</code> methods to use addresses as <em>numbers-and-dots notation</em>
(e.g., <code>"127.0.0.1"</code>), instead of integers.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>inet.udp()</code></h4><a id="user-content-inetudp" aria-label="Permalink: inet.udp()" href="#inetudp"></a></p>
<p dir="auto"><em>inet.udp()</em> creates a new <code>socket</code> using
<a href="https://github.com/luainkernel/lunatik#socketaf">af.INET</a> address family,
<a href="https://github.com/luainkernel/lunatik#socketsock">sock.DGRAM</a> type
and
<a href="https://github.com/luainkernel/lunatik#socketipproto">ipproto.UDP</a> protocol.
It overrides <code>socket</code> methods to use addresses as <em>numbers-and-dots notation</em>
(e.g., <code>"127.0.0.1"</code>), instead of integers.</p>
<p dir="auto"><h5 tabindex="-1" dir="auto"><code>udp:receivefrom(length [, flags])</code></h5><a id="user-content-udpreceivefromlength--flags" aria-label="Permalink: udp:receivefrom(length [, flags])" href="#udpreceivefromlength--flags"></a></p>
<p dir="auto"><em>udp:receivefrom()</em> is just an alias to <code>sock:receive(length, flags, true)</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">rcu</h3><a id="user-content-rcu" aria-label="Permalink: rcu" href="#rcu"></a></p>
<p dir="auto">The <code>rcu</code> library provides support for the kernel
<a href="https://lwn.net/Articles/262464/" rel="nofollow">Read-copy update (RCU)</a>
synchronization mechanism.
This library was inspired by
<a href="https://github.com/cmessias">Caio Messias</a>'
<a href="https://summerofcode.withgoogle.com/archive/2018/projects/5736202426646528" rel="nofollow">GSoC project</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>rcu.table([size])</code></h4><a id="user-content-rcutablesize" aria-label="Permalink: rcu.table([size])" href="#rcutablesize"></a></p>
<p dir="auto"><em>rcu.table()</em> creates a new <code>rcu.table</code> object
which binds the kernel <a href="https://lwn.net/Articles/510202/" rel="nofollow">generic hash table</a>.
This function receives as argument the number of buckets rounded up to the next power of 2.
The default size is <code>1024</code>.
Key must be a string and value must be a Lunatik object or nil.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">thread</h3><a id="user-content-thread" aria-label="Permalink: thread" href="#thread"></a></p>
<p dir="auto">The <code>thread</code> library provides support for the
<a href="https://lwn.net/Articles/65178/" rel="nofollow">kernel thread primitives</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>thread.run(runtime, name)</code></h4><a id="user-content-threadrunruntime-name" aria-label="Permalink: thread.run(runtime, name)" href="#threadrunruntime-name"></a></p>
<p dir="auto"><em>thread.run()</em> creates a new <code>thread</code> object and wakes it up.
This function receives the following arguments:</p>
<ul dir="auto">
<li><code>runtime</code>: the
<a href="https://github.com/luainkernel/lunatik#lunatikruntimescript--sleep">runtime environment</a>
for running a task in the created kernel thread.
The task must be specified by returning a function on the script loaded
in the <code>runtime</code> environment.</li>
<li><code>name</code>: string representing the name for the thread (e.g., as shown on <code>ps</code>).</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>thread.shouldstop()</code></h4><a id="user-content-threadshouldstop" aria-label="Permalink: thread.shouldstop()" href="#threadshouldstop"></a></p>
<p dir="auto"><em>thread.shouldstop()</em> returns <code>true</code> if
<a href="https://github.com/luainkernel/lunatik#threadstopthrd-thrdstop">thread.stop()</a>
was called; otherwise, it returns <code>false</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>thread.current()</code></h4><a id="user-content-threadcurrent" aria-label="Permalink: thread.current()" href="#threadcurrent"></a></p>
<p dir="auto"><em>thread.current()</em> returns a <code>thread</code> object representing the current task.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>thread.stop(thrd), thrd:stop()</code></h4><a id="user-content-threadstopthrd-thrdstop" aria-label="Permalink: thread.stop(thrd), thrd:stop()" href="#threadstopthrd-thrdstop"></a></p>
<p dir="auto"><em>thread.stop()</em> sets
<a href="https://github.com/luainkernel/lunatik#threadshouldstop">thread.shouldstop()</a>
on the thread <code>thrd</code> to return true, wakes <code>thrd</code>, and waits for it to exit.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>thread.task(thread), thrd:task()</code></h4><a id="user-content-threadtaskthread-thrdtask" aria-label="Permalink: thread.task(thread), thrd:task()" href="#threadtaskthread-thrdtask"></a></p>
<p dir="auto"><em>thread.task()</em> returns a table containing the task information of this <code>thread</code>
(e.g., "cpu", "command", "pid" and "tgid").</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">fib</h3><a id="user-content-fib" aria-label="Permalink: fib" href="#fib"></a></p>
<p dir="auto">The <code>fib</code> library provides support for the
<a href="https://thermalcircle.de/doku.php?id=blog:linux:routing_decisions_in_the_linux_kernel_1_lookup_packet_flow" rel="nofollow">kernel Forwarding Information Base</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>fib.newrule(table, priority)</code></h4><a id="user-content-fibnewruletable-priority" aria-label="Permalink: fib.newrule(table, priority)" href="#fibnewruletable-priority"></a></p>
<p dir="auto"><em>fib.newrule()</em> binds the kernel
<a href="https://elixir.bootlin.com/linux/latest/source/include/net/fib_rules.h#L182" rel="nofollow">fib_nl_newrule</a>
API;
it creates a new FIB rule that matches the specified routing <em>table</em>
with the specified <em>priorioty</em>.
This function is similar to the user-space command
<a href="https://datahacker.blog/industry/technology-menu/networking/iptables/follow-the-ip-rules" rel="nofollow">ip rule add</a>
provided by <a href="https://wiki.linuxfoundation.org/networking/iproute2" rel="nofollow">iproute2</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>fib.delrule(table, priority)</code></h4><a id="user-content-fibdelruletable-priority" aria-label="Permalink: fib.delrule(table, priority)" href="#fibdelruletable-priority"></a></p>
<p dir="auto"><em>fib.delrule()</em> binds the kernel
<a href="https://elixir.bootlin.com/linux/latest/source/include/net/fib_rules.h#L184" rel="nofollow">fib_nl_delrule</a>
API;
it removes a FIB rule that matches the specified routing <em>table</em>
with the specified <em>priorioty</em>.
This function is similar to the user-space command
<a href="https://datahacker.blog/industry/technology-menu/networking/iptables/follow-the-ip-rules" rel="nofollow">ip rule del</a>
provided by <a href="https://wiki.linuxfoundation.org/networking/iproute2" rel="nofollow">iproute2</a>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">data</h3><a id="user-content-data" aria-label="Permalink: data" href="#data"></a></p>
<p dir="auto">The <code>data</code> library provides support for binding the system memory to Lua.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.new(size)</code></h4><a id="user-content-datanewsize" aria-label="Permalink: data.new(size)" href="#datanewsize"></a></p>
<p dir="auto"><em>data.new()</em> creates a new <code>data</code> object which allocates <code>size</code> bytes.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.getnumber(d, offset), d:getnumber(offset)</code></h4><a id="user-content-datagetnumberd-offset-dgetnumberoffset" aria-label="Permalink: data.getnumber(d, offset), d:getnumber(offset)" href="#datagetnumberd-offset-dgetnumberoffset"></a></p>
<p dir="auto"><em>data.getnumber()</em> extracts a <a href="https://www.lua.org/manual/5.4/manual.html#lua_Integer" rel="nofollow">lua_Integer</a>
from the memory referenced by a <code>data</code> object and a byte <code>offset</code>,
starting from zero.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.setnumber(d, offset, number), d:setnumber(offset, number)</code></h4><a id="user-content-datasetnumberd-offset-number-dsetnumberoffset-number" aria-label="Permalink: data.setnumber(d, offset, number), d:setnumber(offset, number)" href="#datasetnumberd-offset-number-dsetnumberoffset-number"></a></p>
<p dir="auto"><em>data.setnumber()</em> insert a <a href="https://www.lua.org/manual/5.4/manual.html#lua_Integer" rel="nofollow">lua_Integer</a>
<code>number</code> into the memory referenced by a <code>data</code> object and a byte <code>offset</code>,
starting from zero.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.getbyte(d, offset), d:getbyte(offset)</code></h4><a id="user-content-datagetbyted-offset-dgetbyteoffset" aria-label="Permalink: data.getbyte(d, offset), d:getbyte(offset)" href="#datagetbyted-offset-dgetbyteoffset"></a></p>
<p dir="auto"><em>data.getbyte()</em> extracts a byte
from the memory referenced by a <code>data</code> object and a byte <code>offset</code>,
starting from zero.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.setbyte(d, offset, byte), d:setbyte(offset, byte)</code></h4><a id="user-content-datasetbyted-offset-byte-dsetbyteoffset-byte" aria-label="Permalink: data.setbyte(d, offset, byte), d:setbyte(offset, byte)" href="#datasetbyted-offset-byte-dsetbyteoffset-byte"></a></p>
<p dir="auto"><em>data.setbyte()</em> insert a byte
into the memory referenced by a <code>data</code> object and a byte <code>offset</code>,
starting from zero.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.getstring(d, offset, length), d:getstring(offset, length)</code></h4><a id="user-content-datagetstringd-offset-length-dgetstringoffset-length" aria-label="Permalink: data.getstring(d, offset, length), d:getstring(offset, length)" href="#datagetstringd-offset-length-dgetstringoffset-length"></a></p>
<p dir="auto"><em>data.getstring()</em> extracts a string with <code>length</code> bytes
from the memory referenced by a <code>data</code> object and a byte <code>offset</code>,
starting from zero.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>data.setstring(d, offset, s), d:setstring(offset, s)</code></h4><a id="user-content-datasetstringd-offset-s-dsetstringoffset-s" aria-label="Permalink: data.setstring(d, offset, s), d:setstring(offset, s)" href="#datasetstringd-offset-s-dsetstringoffset-s"></a></p>
<p dir="auto"><em>data.setstring()</em> insert the string <code>s</code>
into the memory referenced by a <code>data</code> object and a byte <code>offset</code>,
starting from zero.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">probe</h3><a id="user-content-probe" aria-label="Permalink: probe" href="#probe"></a></p>
<p dir="auto">The <code>probe</code> library provides support for
<a href="https://docs.kernel.org/trace/kprobes.html" rel="nofollow">kernel probes</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>probe.new(symbol|address, handlers)</code></h4><a id="user-content-probenewsymboladdress-handlers" aria-label="Permalink: probe.new(symbol|address, handlers)" href="#probenewsymboladdress-handlers"></a></p>
<p dir="auto"><em>probe.new()</em> returns a new <code>probe</code> object for monitoring a kernel <code>symbol</code> (string) or <code>address</code> (light userdata)
and installs its <code>handlers</code> in the system.
The <code>handler</code> <strong>must</strong> be defined as a table containing the following field:</p>
<ul dir="auto">
<li><code>pre</code>: function to be called before the probed instruction.
It receives the <code>symbol</code> or <code>address</code>,
followed by a closure that may be called to
<a href="https://elixir.bootlin.com/linux/v5.6.19/source/include/linux/sched/debug.h#L26" rel="nofollow">show the CPU registers and stack</a>
in the system log.</li>
<li><code>post</code>: function to be called after the probed instruction.
It receives the <code>symbol</code> or <code>address</code>,
followed by a closure that may be called to
<a href="https://elixir.bootlin.com/linux/v5.6.19/source/include/linux/sched/debug.h#L26" rel="nofollow">show the CPU registers and stack</a>
in the system log.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>probe.stop(p), p:stop()</code></h4><a id="user-content-probestopp-pstop" aria-label="Permalink: probe.stop(p), p:stop()" href="#probestopp-pstop"></a></p>
<p dir="auto"><em>probe.stop()</em> removes the <code>probe</code> handlers from the system.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>probe.enable(p, bool), p:enable(bool)</code></h4><a id="user-content-probeenablep-bool-penablebool" aria-label="Permalink: probe.enable(p, bool), p:enable(bool)" href="#probeenablep-bool-penablebool"></a></p>
<p dir="auto"><em>probe.enable()</em> enables or disables the <code>probe</code> handlers, accordingly to <code>bool</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">syscall</h3><a id="user-content-syscall" aria-label="Permalink: syscall" href="#syscall"></a></p>
<p dir="auto">The <code>syscall</code> library provides support for system call addresses and numbers.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>syscall.address(number)</code></h4><a id="user-content-syscalladdressnumber" aria-label="Permalink: syscall.address(number)" href="#syscalladdressnumber"></a></p>
<p dir="auto"><em>syscall.address()</em> returns the system call address (light userdata) referenced by the given <code>number</code>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto"><code>syscall.number(name)</code></h4><a id="user-content-syscallnumbername" aria-label="Permalink: syscall.number(name)" href="#syscallnumbername"></a></p>
<p dir="auto"><em>syscall.number()</em> returns the system call number referenced by the given <code>name</code>.</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">syscall.table</h3><a id="user-content-syscalltable" aria-label="Permalink: syscall.table" href="#syscalltable"></a></p>
<p dir="auto">The <code>syscall.table</code> library provides support for translating system call names to addresses (light userdata).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Examples</h2><a id="user-content-examples" aria-label="Permalink: Examples" href="#examples"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">spyglass</h3><a id="user-content-spyglass" aria-label="Permalink: spyglass" href="#spyglass"></a></p>
<p dir="auto"><a href="https://github.com/luainkernel/lunatik/blob/master/examples/spyglass.lua">spyglass</a>
is a kernel script that implements a <em>keylogger</em> inspired by the
<a href="https://github.com/jarun/spy">spy</a> kernel module.
This kernel script logs the <em>keysym</em> of the pressed keys in a device (<code>/dev/spyglass</code>).
If the <em>keysym</em> is a printable character, <code>spyglass</code> logs the <em>keysym</em> itself;
otherwise, it logs a mnemonic of the ASCII code, (e.g., <code>&lt;del&gt;</code> stands for <code>127</code>).</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Usage</h4><a id="user-content-usage-1" aria-label="Permalink: Usage" href="#usage-1"></a></p>
<div data-snippet-clipboard-copy-content="sudo make examples_install          # installs examples
sudo lunatik run examples/spyglass  # runs spyglass
sudo tail -f /dev/spyglass          # prints the key log
sudo sh -c &quot;echo 'enable=false' > /dev/spyglass&quot;       # disable the key logging
sudo sh -c &quot;echo 'enable=true' > /dev/spyglass&quot;        # enable the key logging
sudo sh -c &quot;echo 'net=127.0.0.1:1337' > /dev/spyglass&quot; # enable network support
nc -lu 127.0.0.1 1337 &amp;             # listen to UDP 127.0.0.1:1337
sudo tail -f /dev/spyglass          # sends the key log through the network"><pre><code>sudo make examples_install          # installs examples
sudo lunatik run examples/spyglass  # runs spyglass
sudo tail -f /dev/spyglass          # prints the key log
sudo sh -c "echo 'enable=false' &gt; /dev/spyglass"       # disable the key logging
sudo sh -c "echo 'enable=true' &gt; /dev/spyglass"        # enable the key logging
sudo sh -c "echo 'net=127.0.0.1:1337' &gt; /dev/spyglass" # enable network support
nc -lu 127.0.0.1 1337 &amp;             # listen to UDP 127.0.0.1:1337
sudo tail -f /dev/spyglass          # sends the key log through the network
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">keylocker</h3><a id="user-content-keylocker" aria-label="Permalink: keylocker" href="#keylocker"></a></p>
<p dir="auto"><a href="https://github.com/luainkernel/lunatik/blob/master/examples/keylocker.lua">keylocker</a>
is a kernel script that implements
<a href="https://en.wikipedia.org/wiki/Konami_Code" rel="nofollow">Konami Code</a>
for locking and unlocking the console keyboard.
When the user types <code>↑ ↑ ↓ ↓ ← → ← → LCTRL LALT</code>,
the keyboard will be <em>locked</em>; that is, the system will stop processing any key pressed
until the user types the same key sequence again.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Usage</h4><a id="user-content-usage-2" aria-label="Permalink: Usage" href="#usage-2"></a></p>
<div data-snippet-clipboard-copy-content="sudo make examples_install                     # installs examples
sudo lunatik run examples/keylocker            # runs keylocker
<↑> <↑> <↓> <↓> <←> <→> <←> <→> <LCTRL> <LALT> # locks keyboard
<↑> <↑> <↓> <↓> <←> <→> <←> <→> <LCTRL> <LALT> # unlocks keyboard"><pre><code>sudo make examples_install                     # installs examples
sudo lunatik run examples/keylocker            # runs keylocker
&lt;↑&gt; &lt;↑&gt; &lt;↓&gt; &lt;↓&gt; &lt;←&gt; &lt;→&gt; &lt;←&gt; &lt;→&gt; &lt;LCTRL&gt; &lt;LALT&gt; # locks keyboard
&lt;↑&gt; &lt;↑&gt; &lt;↓&gt; &lt;↓&gt; &lt;←&gt; &lt;→&gt; &lt;←&gt; &lt;→&gt; &lt;LCTRL&gt; &lt;LALT&gt; # unlocks keyboard
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">tap</h3><a id="user-content-tap" aria-label="Permalink: tap" href="#tap"></a></p>
<p dir="auto"><a href="https://github.com/luainkernel/lunatik/blob/master/examples/tap.lua">tap</a>
is a kernel script that implements a <em>sniffer</em> using <code>AF_PACKET</code> socket.
It prints destination and source MAC addresses followed by Ethernet type and the frame size.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Usage</h4><a id="user-content-usage-3" aria-label="Permalink: Usage" href="#usage-3"></a></p>
<div data-snippet-clipboard-copy-content="sudo make examples_install    # installs examples
sudo lunatik run examples/tap # runs tap
cat /dev/tap"><pre><code>sudo make examples_install    # installs examples
sudo lunatik run examples/tap # runs tap
cat /dev/tap
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">shared</h3><a id="user-content-shared" aria-label="Permalink: shared" href="#shared"></a></p>
<p dir="auto"><a href="https://github.com/luainkernel/lunatik/blob/master/examples/shared.lua">shared</a>
is a kernel script that implements an in-memory key-value store using
<a href="https://github.com/luainkernel/lunatik#rcu">rcu</a>,
<a href="https://github.com/luainkernel/lunatik#data">data</a>,
<a href="https://github.com/luainkernel/lunatik#socket">socket</a> and
<a href="https://github.com/luainkernel/lunatik#thread">thread</a>.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Usage</h4><a id="user-content-usage-4" aria-label="Permalink: Usage" href="#usage-4"></a></p>
<div data-snippet-clipboard-copy-content="sudo make examples_install         # installs examples
sudo lunatik spawn examples/shared # spawns shared
nc 127.0.0.1 90                    # connects to shared
foo=bar                            # assigns &quot;bar&quot; to foo
foo                                # retrieves foo
bar
^C                                 # finishes the connection"><pre><code>sudo make examples_install         # installs examples
sudo lunatik spawn examples/shared # spawns shared
nc 127.0.0.1 90                    # connects to shared
foo=bar                            # assigns "bar" to foo
foo                                # retrieves foo
bar
^C                                 # finishes the connection
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">echod</h3><a id="user-content-echod" aria-label="Permalink: echod" href="#echod"></a></p>
<p dir="auto"><a href="https://github.com/luainkernel/lunatik/blob/master/examples/echod">echod</a>
is an echo server implemented as kernel scripts.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Usage</h4><a id="user-content-usage-5" aria-label="Permalink: Usage" href="#usage-5"></a></p>
<div data-snippet-clipboard-copy-content="sudo make examples_install               # installs examples
sudo lunatik spawn examples/echod/daemon # runs echod
nc 127.0.0.1 1337
hello kernel!
hello kernel!"><pre><code>sudo make examples_install               # installs examples
sudo lunatik spawn examples/echod/daemon # runs echod
nc 127.0.0.1 1337
hello kernel!
hello kernel!
</code></pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">systrack</h3><a id="user-content-systrack" aria-label="Permalink: systrack" href="#systrack"></a></p>
<p dir="auto"><a href="https://github.com/luainkernel/lunatik/blob/master/examples/systrack.lua">systrack</a>
is a kernel script that implements a device driver to monitor system calls.
It prints the amount of times each <a href="https://github.com/luainkernel/lunatik/blob/master/examples/systrack.lua#L29">system call</a>
was called since the driver has been installed.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Usage</h4><a id="user-content-usage-6" aria-label="Permalink: Usage" href="#usage-6"></a></p>
<div data-snippet-clipboard-copy-content="sudo make examples_install         # installs examples
sudo lunatik run examples/systrack # runs systracker
cat /dev/systrack
writev: 0
close: 1927
write: 1085
openat: 2036
read: 4131
readv: 0"><pre><code>sudo make examples_install         # installs examples
sudo lunatik run examples/systrack # runs systracker
cat /dev/systrack
writev: 0
close: 1927
write: 1085
openat: 2036
read: 4131
readv: 0
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">References</h2><a id="user-content-references" aria-label="Permalink: References" href="#references"></a></p>
<ul dir="auto">
<li><a href="https://netdevconf.info/0x17/sessions/talk/scripting-the-linux-routing-table-with-lua.html" rel="nofollow">Scripting the Linux Routing Table with Lua</a></li>
<li><a href="https://www.youtube.com/watch?v=-ufBgy044HI" rel="nofollow">Lua no Núcleo</a> (Portuguese)</li>
<li><a href="https://legacy.netdevconf.info/0x14/session.html?talk-linux-network-scripting-with-lua" rel="nofollow">Linux Network Scripting with Lua</a></li>
<li><a href="https://www.netbsd.org/~lneto/dls14.pdf" rel="nofollow">Scriptables Operating Systems with Lua</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Drone footage of baby penguins jumping off cliff (168 pts)]]></title>
            <link>https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/</link>
            <guid>40104475</guid>
            <pubDate>Sun, 21 Apr 2024 10:10:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/">https://petapixel.com/2024/04/17/baby-penguins-jump-off-50-foot-cliff-in-first-of-its-kind-drone-footage/</a>, See on <a href="https://news.ycombinator.com/item?id=40104475">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<article data-post-id="738162">
<header>


</header>

<div>
<figure id="attachment_738178" aria-describedby="caption-attachment-738178"><img data-perfmatters-preload="" fetchpriority="high" decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-800x548.jpg" alt="" width="800" height="548" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-800x548.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-320x219.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-1536x1053.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_14504-2048x1404.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"><figcaption id="caption-attachment-738178">Emperor penguin chicks jumping off the ice shelf edge for their first swim at Atka Bay on the Ekström Ice Shelf in Antarctica.</figcaption></figure> <p>Drone footage has captured the astonishing moment hundreds of emperor penguin chicks jump off a 50-foot cliff in Antarctica for the first time.</p>  <p>Wildlife photographer and filmmaker <a href="https://www.bertiegregory.com/" data-wpel-link="external" target="_blank" rel="follow external noopener">Bertie Gregory</a> captured the “unprecedented” footage for <a href="https://www.nationalgeographic.com/animals/photography/article/emperor-penguins-chicks-antarctica-jumping" data-wpel-link="external" target="_blank" rel="follow external noopener"><em>National Geographic’s</em> upcoming documentary <em>Secrets of the Penguins</em></a>, which will debut in April 2025. </p> <div><p><iframe src="https://www.youtube.com/embed/4PwDFddpo4c?si=RzmxyylyemDz6S-w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe></p></div> <p>The <em>National Geographic</em> filmmakers were shooting in Atka Bay on the Ekstrom Ice Shelf, Antarctica in January this year, when they spotted approximately 700 emperor penguin chicks gathering at the edge of a cliff. </p> <p><img decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-800x567.jpg" alt="penguin drone footage jumping cliff " width="800" height="567" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-800x567.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-320x227.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-1536x1088.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15147-2048x1450.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"></p> <p><img decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-800x519.jpg" alt="penguin drone footage jumping cliff " width="800" height="519" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-800x519.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-320x207.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-1536x996.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15275-2048x1327.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"></p>
<p>Antarctica is home to 66 known Emperor penguin colonies, which usually breed and raise their chicks in the winter. Some of these emperor colonies have been raising chicks high up on permanent ice shelves.</p> <p><img loading="lazy" decoding="async" src="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-800x509.jpg" alt="penguin drone footage jumping cliff " width="800" height="509" srcset="https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-800x509.jpg 800w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-320x204.jpg 320w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-1536x978.jpg 1536w, https://petapixel.com/assets/uploads/2024/04/MM10127_240110_15519-2048x1304.jpg 2048w" sizes="(max-width: 800px) 100vw, 800px"></p> <p>Every January, when the chicks are around five months old, they undergo a process known as fledging. During this process, the chicks lose their baby feathers and leave their colony for the first time — jumping from an enormous cliff into the ocean to take their first swim. </p> <h2>A Heart-Stopping Jump Filmed For The First Time</h2> <p>While these huge jumps have been witnessed by scientists before, Gregory filmed this rare and heart-stopping behavior for the first time for television. </p> <p>In the extraordinary footage filmed for <em>Secrets of the Penguins</em>, a colony of chicks is seen making their way along the edge of the huge ice cliff, moving together toward the edge before stopping.</p> <p>Eventually, one brave chick takes the first leap from the summit and smashes into the icy ocean waters below. </p> <p>Once this penguin swims off to fill its stomach with fish, prompting the others to follow suit. From there, hundreds of chicks are seen jumping off the cliff into the ocean. </p>
<p>According to scientists, this is the first-ever video footage of emperor penguin chicks leaping from such a high cliff. Scientists who monitor penguins from satellites in space say this phenomenon is extremely rare.</p> <p>In a press release, the <em>National Geographic </em> revealed Gregory used a newly released camera drone, equipped with a telephoto lens, which allowed him to capture the animals’ behavior from the air like never before — without disrupting or impacting the penguins.</p> <p>“Filming the fledging of emperor penguins presented a unique set of challenges as the passage only takes place when the sea ice reaches its most unstable time of the year,” National Geographic says <a href="https://www.businesswire.com/news/home/20240411040454/en/National-Geographic-and-Bertie-Gregory-Release-Unprecedented-Footage-of-Emperor-Penguin-Behavior-Filmed-for-the-First-Time-on-the-Coast-of-Antarctica" data-wpel-link="external" target="_blank" rel="follow external noopener">in a statement</a>. </p> <p>“Bertie and his team took every measure to ensure the safety of the crew and wildlife by assembling a world-class safety team.”</p>  <hr> <p>&nbsp;<br> <em><strong>Image credits:</strong> All photos by <a href="https://www.businesswire.com/news/home/20240411040454/en/National-Geographic-and-Bertie-Gregory-Release-Unprecedented-Footage-of-Emperor-Penguin-Behavior-Filmed-for-the-First-Time-on-the-Coast-of-Antarctica" data-wpel-link="external" target="_blank" rel="follow external noopener"><em>National Geographic</em>/Bertie Gregory</a> .</em></p>  </div>
</article>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doom-htop: The classic DOOM game over htop (255 pts)]]></title>
            <link>https://github.com/0x0mer/doom-htop</link>
            <guid>40104410</guid>
            <pubDate>Sun, 21 Apr 2024 09:53:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/0x0mer/doom-htop">https://github.com/0x0mer/doom-htop</a>, See on <a href="https://news.ycombinator.com/item?id=40104410">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">doom-htop</h2><a id="user-content-doom-htop" aria-label="Permalink: doom-htop" href="#doom-htop"></a></p>
<p dir="auto">Ever wondered whether <code>htop</code> could be used to render the graphics of cult video games? I know I have.
In order to quench our curiosity and for your viewing pleasure, I created <code>doom-htop</code>.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/0x0mer/doom-htop/blob/master/screenshots/doom.gif"><img src="https://github.com/0x0mer/doom-htop/raw/master/screenshots/doom.gif" alt="" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Table of Contents</h2><a id="user-content-table-of-contents" aria-label="Permalink: Table of Contents" href="#table-of-contents"></a></p>
<ol dir="auto">
<li><a href="#How-to-build">How to build</a></li>
<li><a href="#How-to-run">How to run</a></li>
<li><a href="#How-it-works">How it works</a></li>
<li><a href="#Platforms">Platforms</a></li>
<li><a href="#Troubleshooting">Troubleshooting</a></li>
<li><a href="#further-work-required">Further work required</a></li>
<li><a href="#faq">F.A.Q</a></li>
<li><a href="#License">License</a></li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to build</h2><a id="user-content-how-to-build" aria-label="Permalink: How to build" href="#how-to-build"></a></p>

<p dir="auto"><strong>Notice!</strong> In order to use this project, you need a WAD (game data) file. The one I included is freedoom1.wad (All credit goes to <a href="https://freedoom.github.io/index.html" rel="nofollow">The Freedoom project</a>!).</p>
<p dir="auto">Of course you're welcome to download the classic free shareware version DOOM1.wad <a href="https://doomwiki.org/wiki/DOOM1.WAD" rel="nofollow">from here</a>. (I wasn't sure if I was legally allowed to upload it to github, and decided against it).</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to run</h2><a id="user-content-how-to-run" aria-label="Permalink: How to run" href="#how-to-run"></a></p>
<p dir="auto">If I were you, I would probably save any important work I have open before doing this. That being said, I tested this code on a 12-year old Lenovo® ThinkPad T430s with 8GB RAM and an Intel Core i7-3520M @ 2.90GHz running Ubuntu 22.04 and it ran just fine.</p>
<p dir="auto">Anyways, simply run:</p>
<div data-snippet-clipboard-copy-content="sed -i 's/update_process_names=0/update_process_names=1/' ~/.config/htop/htoprc
sudo ./doom-htop -iwad freedoom1.wad
htop -d 1 -s M_VIRT"><pre><code>sed -i 's/update_process_names=0/update_process_names=1/' ~/.config/htop/htoprc
sudo ./doom-htop -iwad freedoom1.wad
htop -d 1 -s M_VIRT
</code></pre></div>
<p dir="auto">It doesn't matter whether you run <code>doom-htop</code> or <code>htop</code> first.</p>
<p dir="auto">The <code>sudo</code> is only needed in order to open your keyboard's device.</p>
<p dir="auto">If you're the kinda person who would rather not run sketchy programs off the <em>Internet™</em> with root privilges, you can go ahead and run it without <code>sudo</code> and just look at the pretty pictures.</p>
<p dir="auto">The <code>-d 1</code> is because we're going for that sweet, sweet 10 FPS refresh rate, and the <code>-s M_VIRT</code> is because we're gonna want to sort the processes by virtual memory allocation, which should be pretty indicative of our processes and bunch them up together nicely. If for some reason that doesn't work for you, you can go ahead and play with the define <code>PROCS_MALLOC_SIZE</code> in <code>main.c</code> until everything looks nice.</p>
<p dir="auto">Finally, the <code>sed</code> command is needed because by default, <code>htop</code> doesn't refresh the processes' names every time.
This design choice was <em>probably</em> made because <code>htop</code> wasn't originally designed to render ascii-art videos, but we'll never know for sure.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How it works</h2><a id="user-content-how-it-works" aria-label="Permalink: How it works" href="#how-it-works"></a></p>
<p dir="auto">It's pretty straight-forward, actually. The amazing project <a href="https://github.com/ozkl/doomgeneric">https://github.com/ozkl/doomgeneric</a> which I forked, did all the heavy lifting.
I simply added the 3 files:</p>
<ol dir="auto">
<li>main.c</li>
<li>keylogger.c</li>
<li>ascii_stuff.c</li>
</ol>
<p dir="auto">And edited a few others.</p>
<p dir="auto">I wrote a simple image-to-ascii converter that generated the long if statement you can find in the file <code>ascii_stuff.c</code>.</p>
<p dir="auto">The main doom process forks and creates as many process as there are lines in the ascii converted image, and then creates a shared memory segment with every single one of them.</p>
<p dir="auto">The main process copies each line in the image to the matching process's memory segment, and each child-process copies from its segment and writes over its <code>argv[0]</code>. That's it, really.</p>
<p dir="auto">Originally I wanted to do it with processes sorted by CPU usage, and create a process that consumes a specific CPU percentage, but that turned out to be pretty hard.
Then I though about using linux's <code>nice</code>, but as a user you're only allowed 19 possible values, and I wanted better graphics. Eventually I stumbled upon the idea of using virtual memory allocation, which as I said before, as pretty specific per process.</p>
<p dir="auto">I noticed that even when all the forked processes allocate exactly the same amount of memory, <code>htop</code> shows the frame in the right order. I believe that happens because maybe in case of equality the processes are then sorted by time of creation? This works on my system (and is actually a little better, because that way there is less space in which another process could "get into the frame"), but I wasn't sure how it would work on other people's systems and didn't want to take the chance. This also means that I could have probably just given all the processes a unique <code>nice</code> value, but whatever.</p>
<p dir="auto">Anyways, then I created a simple keylogger that works by opening the keyboard's device. This way the game is always playing in the background regardless of whether <code>htop</code> is open or not, which I think is neat.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Platforms</h2><a id="user-content-platforms" aria-label="Permalink: Platforms" href="#platforms"></a></p>
<p dir="auto">I only ever tested it on my Ubuntu 22.04. I know the keyboard device is named something else in WSL and Arch, you're welcome to port it if you like.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Troubleshooting</h2><a id="user-content-troubleshooting" aria-label="Permalink: Troubleshooting" href="#troubleshooting"></a></p>
<ol dir="auto">
<li>
<p dir="auto"><strong>Keyboard doesn't work</strong></p>
<p dir="auto">The device I'm trying to open is defined in <code>#define KEYBOARD_DEVICE</code> in the file <code>main.c</code>. I'm sure it won't work universally. I only tested the code on Ubuntu 22.04, and I know for a fact it won't work out of the box for WSL, and that the device in Arch is named something else. You're welcome to port it to your platform.
Try to <code>ll /dev/input/by-path</code>, and choose one of the options that has <code>kbd</code> in it.</p>
</li>
<li>
<p dir="auto"><strong>The frame is frozen</strong></p>
<p dir="auto">Maybe the <code>sed</code> command didn't work. You can change the <code>htop</code> configuation manually by hitting the F2 key -&gt; "Display options" -&gt; mark <code>[X]</code> on "Update process names on every refresh"</p>
</li>
<li>
<p dir="auto"><code>sed: can't read /home/&lt;user&gt;/.config/htop/htoprc: No such file or directory</code></p>
<p dir="auto">I guess this will probably happen if you've never used <code>htop</code> before. In that case run <code>htop</code>, quit, and run the <code>sed</code> command again.</p>
</li>
<li>
<p dir="auto">For some reason the main doom process crashed, and you're left with a ton of zombie processes doing nothing:
Run <code>sudo pkill doom-htop</code>.</p>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Further work required</h2><a id="user-content-further-work-required" aria-label="Permalink: Further work required" href="#further-work-required"></a></p>
<ul dir="auto">
<li><code>htop</code> moves the screen around when you're trying to walk around using the arrow keys which is pretty annoying. A simple but silly solution would be to change <code>htop</code>'s focus after you start your game, for example by pressing <code>a</code>, which opens the menu for selecting your processors, then it won't be as annoying.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">F.A.Q</h2><a id="user-content-faq" aria-label="Permalink: F.A.Q" href="#faq"></a></p>
<ol dir="auto">
<li>Q: Why did you make this? A: I thought it would be <a href="https://github.com/xoreaxeaxeax/movfuscator?tab=readme-ov-file#faq">funny</a>.</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">Freedoom is released under a BSD-like license which can be found in the file freedoom-license.txt in the main directory. I believe all other code is GPL'd.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Amazon grows to over 750k robots, replacing 100k humans (167 pts)]]></title>
            <link>https://finance.yahoo.com/news/amazon-grows-over-750-000-153000967.html</link>
            <guid>40104361</guid>
            <pubDate>Sun, 21 Apr 2024 09:40:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://finance.yahoo.com/news/amazon-grows-over-750-000-153000967.html">https://finance.yahoo.com/news/amazon-grows-over-750-000-153000967.html</a>, See on <a href="https://news.ycombinator.com/item?id=40104361">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><figure><div><p><img alt="Amazon Grows To Over 750,000 Robots As World's Second-Largest Private Employer Replaces Over 100,000 Humans" src="https://s.yimg.com/ny/api/res/1.2/crL.KglbbpVu4aTMXQgDVw--/YXBwaWQ9aGlnaGxhbmRlcjt3PTk2MDtoPTU0MA--/https://media.zenfs.com/en/Benzinga/f51c02b89361ae3258417df381d72400" data-src="https://s.yimg.com/ny/api/res/1.2/crL.KglbbpVu4aTMXQgDVw--/YXBwaWQ9aGlnaGxhbmRlcjt3PTk2MDtoPTU0MA--/https://media.zenfs.com/en/Benzinga/f51c02b89361ae3258417df381d72400"></p></div><p><figcaption>Amazon Grows To Over 750,000 Robots As World's Second-Largest Private Employer Replaces Over 100,000 Humans</figcaption></p></figure><p><strong>Amazon.com Inc.</strong> is rapidly advancing its use of robotics, deploying over 750,000 robots to work alongside its employees.</p><p>The world's second-largest private employer employs 1.5 million people. While that's a lot, it's a decrease of over 100,000 employees from the 1.6 million workers it had in 2021. Meanwhile, the company had 520,000 robots in 2022 and 200,000 robots in 2019. While Amazon is bringing on hundreds of thousands of robots per year, the company is slowly decreasing its employee numbers.</p><p>The robots, including new models like Sequoia and Digit, are designed to perform repetitive tasks, thereby improving efficiency, safety and delivery speed for <a href="https://finance.yahoo.com/news/earn-3-9-yield-amazon-144915357.html" data-ylk="slk:Amazon;elm:context_link;itc:0;sec:content-canvas;outcm:mb_qualified_link;_E:mb_qualified_link;ct:story;">Amazon</a>‘s customers. Sequoia, for example, speeds up inventory management and order processing in fulfillment centers, while Digit, a bipedal robot developed in collaboration with Agility Robotics, handles tasks like moving empty tote boxes.</p><p><strong>Don’t Miss:</strong></p><ul><li><p><strong>Executives and founders of Uber, Facebook and Apple are bullish on<a href="https://www.benzinga.com/money/aura?" rel="nofollow noopener" target="_blank" data-ylk="slk:this wellness app that you can co-invest;elm:context_link;itc:0;sec:content-canvas"> <strong>this wellness app that you can co-invest</strong></a> in at $1.15 per share.</strong></p></li><li><p><strong>Invest like a millionaire. Exclusive opportunity to<a href="https://www.benzinga.com/money/epic-games?" rel="nofollow noopener" target="_blank" data-ylk="slk:invest in Epic Games $17 billion gaming empire.;elm:context_link;itc:0;sec:content-canvas"> <strong>invest in Epic Games $17 billion gaming empire.</strong></a></strong></p></li></ul><p>The significant investment in robotics showcases Amazon’s commitment to innovation in its supply chain and highlights the company’s belief in the synergistic potential of human-robot collaboration. Despite the massive scale of automation, Amazon emphasizes that deploying robots has led to the creation of new skilled job categories at the company, reflecting a broader industry trend toward the integration of advanced technologies with human workforces.</p><p>Amazon's deployment of over 750,000 robots represents a significant move toward automation at the world's second-largest employer. The shift has the potential to significantly impact job dynamics within the company and beyond. While Amazon asserts that robots are meant to work collaboratively with human employees, assisting them with repetitive tasks to improve efficiency and workplace safety, concerns about job displacement and the implications for the workforce are inevitable.</p><p>Amazon’s integration of robots like Sequoia and Digit into its fulfillment centers is part of its broader strategy to enhance its supply chain operations through advanced technologies. The robots are designed to streamline operations and ensure faster delivery times to customers. The company emphasizes that robotic solutions support workplace safety and allow it to offer a wider range of products for same-day or next-day delivery.</p><p><strong>Trending: Invest alongside exec’s from Uber, Facebook and Apple in this<a href="https://www.benzinga.com/money/aura?" rel="nofollow noopener" target="_blank" data-ylk="slk:wellness app Transforming a $5.6 TRILLION dollar industry;elm:context_link;itc:0;sec:content-canvas"> <strong>wellness app Transforming a $5.6 TRILLION dollar industry</strong></a>.</strong></p><p>The introduction of such a large number of robots into the workforce raises questions about the future role of human labor in Amazon’s operational model. The impact on jobs, particularly tasks that are highly repetitive and could be easily automated, is a concern for many. Research from institutions like the Massachusetts Institute of Technology (MIT) has shown that industrial robots have a significant negative impact on workers, affecting jobs and wages in the areas where they are deployed. The broader discussion on the economic and political consequences of automation highlights widespread fears of job displacement and the potential for increased income inequality.</p><p>Despite these concerns, Amazon has pointed out the creation of 700 categories of skilled job types that previously didn't exist at the company, suggesting that automation can also lead to the creation of new types of employment opportunities. This evolution within Amazon’s workforce could reflect a shift in the nature of work where human employees move toward more complex, nonrepetitive tasks that require higher levels of skill and creativity.</p><p>Amazon could serve as a microcosm for broader trends in the economy, where the integration of robotics and artificial intelligence (AI) reshapes industries and the labor market. The challenge for <a href="https://www.benzinga.com/money/everything-you-need-to-know-about-amazon-stock?" rel="nofollow noopener" target="_blank" data-ylk="slk:Amazon;elm:context_link;itc:0;sec:content-canvas">Amazon</a>, and society at large, will be to navigate these changes in ways that maximize the benefits of automation while mitigating negative impacts on employment and ensuring that the gains from increased productivity are shared broadly across the workforce.</p><p><strong>Read About <a href="https://www.benzinga.com/alternative-investments/startups?" rel="nofollow noopener" target="_blank" data-ylk="slk:Startup Investing;elm:context_link;itc:0;sec:content-canvas"><strong>Startup Investing</strong></a>:</strong></p><ul><li><p><strong>This ‘Future of Gaming’ startup disrupting a $272 billion industry is<a href="https://www.benzinga.com/money/gameflip-2?" rel="nofollow noopener" target="_blank" data-ylk="slk:now letting anyone invest for a limited time;elm:context_link;itc:0;sec:content-canvas"> <strong>now letting anyone invest for a limited time</strong></a>.</strong></p></li><li><p><strong>This Uber-for-moving startup is quietly taking the world by storm,<a href="https://www.benzinga.com/money/muvr?" rel="nofollow noopener" target="_blank" data-ylk="slk:here’s how anyone can invest for a limited time;elm:context_link;itc:0;sec:content-canvas"> <strong>here’s how anyone can invest for a limited time</strong></a>.</strong></p></li></ul><p>"ACTIVE INVESTORS' SECRET WEAPON" Supercharge Your Stock Market Game with the #1 "news &amp; everything else" trading tool: Benzinga Pro - <a href="https://pro.benzinga.com/register/?utm_source=yahoo_finance" rel="nofollow noopener" target="_blank" data-ylk="slk:Click here to start Your 14-Day Trial Now!;elm:context_link;itc:0;sec:content-canvas">Click here to start Your 14-Day Trial Now!</a></p><p>Get the latest stock analysis from Benzinga?</p><ul><li><p><a href="https://www.benzinga.com/quote/AAPL?getReport=1" rel="nofollow noopener" target="_blank" data-ylk="slk:APPLE (AAPL): Free Stock Analysis Report;elm:context_link;itc:0;sec:content-canvas">APPLE (AAPL): Free Stock Analysis Report</a></p></li><li><p><a href="https://www.benzinga.com/quote/TSLA?getReport=1" rel="nofollow noopener" target="_blank" data-ylk="slk:TESLA (TSLA): Free Stock Analysis Report;elm:context_link;itc:0;sec:content-canvas">TESLA (TSLA): Free Stock Analysis Report</a></p></li></ul><p>This article <a href="https://www.benzinga.com/general/24/04/38202793/amazon-grows-to-over-750-000-robots-as-worlds-second-largest-private-employer-replaces-over-100-000" rel="nofollow noopener" target="_blank" data-ylk="slk:Amazon Grows To Over 750,000 Robots As World's Second-Largest Private Employer Replaces Over 100,000 Humans;elm:context_link;itc:0;sec:content-canvas">Amazon Grows To Over 750,000 Robots As World's Second-Largest Private Employer Replaces Over 100,000 Humans</a> originally appeared on <a href="https://www.benzinga.com/" rel="nofollow noopener" target="_blank" data-ylk="slk:Benzinga.com;elm:context_link;itc:0;sec:content-canvas">Benzinga.com</a></p><p><i>© 2024 Benzinga.com. Benzinga does not provide investment advice. All rights reserved.</i></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A hacker's guide to Language Models (139 pts)]]></title>
            <link>https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb</link>
            <guid>40103912</guid>
            <pubDate>Sun, 21 Apr 2024 07:50:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb">https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb</a>, See on <a href="https://news.ycombinator.com/item?id=40103912">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:fastai/lm-hackers" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="sdlb2bJbOdSinqKgGwUQFf-2GZrYIBc-_-5JKdaAteB4jeJajfzxwDqTKKSXAAmFPdoZ80-rwnwwPq1EwDkoiA" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="fastai/lm-hackers" data-current-org="fastai" data-current-owner="" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=57dhq0wqTm5%2BqCPCq4UWasfzwfodEllyKPyg1haFfdow1s6gDEYu6iUH5muGOGrpNTJ5wD5jptVNfuUCmykZ3Njk40pwjvRXqGeri63RQQmU3CzP7FD8WGxW1vnsHdsmukVXbNIU8RCLkYX1rexdsASposoLDMjLpZbhK8D59p6VUiVj%2FkiBoAxkl0otKHjkE%2F3VuPOrJ64rKXjHMDEjkFGt1VUtnd30a0NK7Cf9sz0oKu6cxhc%2B2uBEhXcbfnGzuF9HqEpOEC7uHG0qlQrrjqleoS9Uzr2klqG2F1s5X%2FGXlO7HtInCfGag7Y8OytwbAJ2zW5nNPm85m%2B5y%2Bb85FSbxixpjk8UUXpLFmqm9BNkDNpkxoloY8LJn9r1BsSQK3ALKff4D2p7q6KW0aZdZwv6evaUFLz3DZx%2FEe7qmkfXuJXQqKuifVMPk3A9RCHdylWZJLZ6FYG95fqencQGE5IouaKuD2y64FN3AfFL6LH9LE8dSuo9DQuS%2Fqd7YYnrg7CrP%2B3WS2YV8TWTIAohvKdMaQwTnQVn0Ub1Ee38FuOUUeD9q7ZV0bDnpPbb7563yRqA%3D--Ak63UQ%2FTxK4%2B3c8o--hm2Hmh1uc7cW0kw%2FfxNT%2FQ%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<dialog-helper>
  <dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="feedback-dialog" aria-modal="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="feedback-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<dialog-helper>
  <dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" id="custom-scopes-dialog" aria-modal="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      <scrollable-region data-labelled-by="custom-scopes-dialog-title">
        
      </scrollable-region>
      
</dialog></dialog-helper>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=fastai%2Flm-hackers" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/fastai/lm-hackers/blob/main/lm-hackers.ipynb&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="52e5385ce4cb785984bb5e02b2ddd2c0647fa3cf77dcc1642a73c1bbfc0394db" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I should have loved biology (2020) (283 pts)]]></title>
            <link>https://jsomers.net/i-should-have-loved-biology/</link>
            <guid>40103590</guid>
            <pubDate>Sun, 21 Apr 2024 06:28:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jsomers.net/i-should-have-loved-biology/">https://jsomers.net/i-should-have-loved-biology/</a>, See on <a href="https://news.ycombinator.com/item?id=40103590">Hacker News</a></p>
<div id="readability-page-1" class="page">

<p>By <a href="https://jsomers.net/">James Somers</a></p>
<p>I should have loved biology but I found it to be a lifeless recitation of names: the Golgi apparatus and the Krebs cycle; mitosis, meiosis; DNA, RNA, mRNA, tRNA.</p>
<p>In the textbooks, astonishing facts were presented without astonishment. Someone probably told me that every cell in my body has the same DNA. But no one shook me by the shoulders, saying how crazy that was. I needed Lewis Thomas, who wrote in <em>The Medusa and the Snail</em>:</p>
<blockquote>
<p>For the real amazement, if you wish to be amazed, is this process. You start out as a single cell derived from the coupling of a sperm and an egg; this divides in two, then four, then eight, and so on, and at a certain stage there emerges a single cell which has as all its progeny the human brain. The mere existence of such a cell should be one of the great astonishments of the earth. People ought to be walking around all day, all through their waking hours calling to each other in endless wonderment, talking of nothing except that cell.</p>
</blockquote>
<p>I wish my high school biology teacher had asked the class how an embryo could possibly differentiate—and then paused to let us really think about it. The whole subject is in the answer to that question. A chemical gradient in the embryonic fluid is enough of a signal to slightly alter the gene expression program of some cells, not others; now the embryo knows “up” from “down”; cells at one end begin producing different proteins than cells at the other, and these, in turn, release more refined chemical signals; ...; soon, you have brain cells and foot cells.</p>
<p>How come we memorized chemical formulas but didn’t talk about that? It was only in college, when I read Douglas Hofstadter’s <em>Gödel, Escher, Bach</em>, that I came to understand cells as recursively self-modifying programs. The language alone was evocative. It suggested that the embryo—DNA making RNA, RNA making protein, protein regulating the transcription of DNA into RNA—was like a small Lisp program, with macros begetting macros begetting macros, the source code containing within it all of the instructions required for life on Earth. Could anything more interesting be imagined?</p>
<p>Someone should have said this to me:</p>
<blockquote>
<p>Imagine a flashy spaceship lands in your backyard. The door opens and you are invited to investigate everything to see what you can learn. The technology is clearly millions of years beyond what we can make.</p>
<p>This is biology.</p>
<p><em>–Bert Hubert, <a href="https://berthub.eu/articles/posts/immune-system/">“Our Amazing Immune System”</a></em></p>
</blockquote>
<p>In biology class, biology wasn’t presented as a quest for the secrets of life. The textbooks wrung out the questing. We were nowhere acquainted with real biologists, the real questions they had, the real experiments they did to answer them. We were just given their conclusions.</p>
<figure>
<p><a href="https://user-images.githubusercontent.com/21294/94627410-73b6c680-028b-11eb-9501-d7453af56106.png" target="_blank"><img src="https://user-images.githubusercontent.com/21294/94627410-73b6c680-028b-11eb-9501-d7453af56106.png" alt=""></a></p><figcaption><a href="http://biochemical-pathways.com/#/map/1">The Roche Biochemical Pathways Poster</a></figcaption>
</figure>
<figure>
<p><img src="https://www.scifimoviezone.com/imageextrat/contact021.jpg" alt=""></p><figcaption>Plans for an alien machine, in <em>Contact</em></figcaption>
</figure>
<p>For instance I never learned that a man named Oswald Avery, in the 1940s, puzzled over two cultures of <em>Streptococcus</em> bacteria. One had a rough texture when grown in a dish; the other was smooth, and glistened. Avery noticed that when he mixed the smooth strain with the rough strain, every generation after was smooth, too. Heredity in a dish. What made it work? This was one of the most exciting mysteries of the time—in fact of all time.</p>
<p>Most experts thought that protein was somehow responsible, that traits were encoded soupily, via differing concentrations of chemicals. Avery suspected a role for nucleic acid. So, he did an experiment, one we could have replicated on our benches in school. Using just a centrifuge, water, detergent, and acid, he purified nucleic acid from his smooth strep culture. Precipitated with alcohol, it became fibrous. He added a tiny bit of it to the rough culture, and lo, that culture became smooth in the following generations. This fibrous stuff, then, was “the transforming principle”—the long-sought agent of heredity. Avery’s experiment set off a frenzy of work that, a decade later, ended in the discovery of the double helix.</p>
<p>In his <a href="https://www.maa.org/external_archive/devlin/LockhartsLament.pdf">“Mathematician’s Lament,”</a> Paul Lockhart describes how school cheapens mathematics by robbing us of the questions. We’re not just asked, hey, how much of the triangle takes up the box?</p>
<p><img src="https://user-images.githubusercontent.com/21294/94513448-b5446480-01ec-11eb-9089-f569f311c12b.png"></p>
<p>That’s a puzzle we might delight in. (If you drop a vertical from the top of the triangle, you end up with two rectangles cut in half; you discover that the area inside the triangle is equal to the area outside.) Instead, we’re told that if you ever find yourself wanting the area of a triangle, here’s the procedure:</p>
<p><img src="https://user-images.githubusercontent.com/21294/94513467-bffef980-01ec-11eb-91a2-70fab3176a0a.png"></p>
<p>Biology is like that, but worse because it’s a messier subject. The facts seem extra arbitrary. We’re told to distinguish “lipid bilayers” from “endoplasmic reticula” without understanding why we care about either in the first place.</p>
<p>Enormous subjects are best approached in thin, deep slices. I discovered this when first learning how to program. The textbooks never worked; it all only started to click when I started to do little projects for myself. The project wasn’t just motivation but an organizing principle, a magnet to arrange the random iron filings I picked up along the way. I’d care to learn about some abstract concept, like “memoization,” because I needed it to solve my problem; and these concepts would lose their abstractness in the light of my example.</p>
<p>Biology is no different. Learning begins with questions. How do embryos differentiate? Why are my eyes blue? How does a hamster turn cheese into muscle? Why does the coronavirus make some people much sicker than others?</p>
<p>*</p>
<p>A few months ago, I started a <a href="https://www.newyorker.com/magazine/2020/11/09/how-the-coronavirus-hacks-the-immune-system">magazine assignment</a> to answer some questions about SARS-CoV-2 and the immune system. I encountered paragraphs like this:</p>
<blockquote>
  <!--CR jsomers: all the certainty -->
<p>In low-MOI infections (MOI, 0.2), exogenous expression of ACE2 enabled SARS-CoV-2 to replicate and comprise ~54% of the total reads mapping more than 300x coverage across the ~30-kb genome (Figures 1A and 1B). Western blot analyses corroborated these RNA-seq data… It is noteworthy that, despite this dramatic increase in viral load, we observed neither activation of TBK1, the kinase responsible for IFN-I and IFN-III expression, nor induction of STAT1 and MX1, IFN-I-stimulated genes (Figure S1A; Sharma et al., 2003)…</p>
<p>–<a href="https://www.cell.com/cell/pdf/S0092-8674(20)30489-X.pdf">“Imbalanced Host Response to SARS-CoV-2 Drives Development of COVID-19,” <em>Cell</em></a></p>
</blockquote>
<p>It was hard to get through a sentence without having to consult Wikipedia. In immunology in particular the nomenclature is expansive. One sentence might refer to “leukocytes,” the next to monocytes, the next to lymphocytes. There are a lot of squares-and-rectangles situations: all interleukins are cytokines, but not all cytokines are interleukins?</p>
<p>I’ve never come across a subject so fractal in its complexity. It reminds me of computing that way. A day of programming might involve constructing an elaborate regular expression, investigating a file descriptor leak, debugging a race condition in the application you just wrote, and thinking through the interface of a module. Everywhere you look—the compiler, the shell, the CPU, the DOM—is an abstraction hiding lifetimes of work. Biology is like this, just much, much worse, because living systems aren’t intentionally designed. It’s all a big slop of global mutable state. Control is achieved by upregulating this thing while turning down the promoter of that thing’s repressor. You think you know how  something works—like when I thought I had a handle on the neutrophil, an important front-line player in the innate immune system—only to learn that it comes in several flavors, and more are still being discovered, and some of them seem to do the opposite of the ones you thought you knew. Everything in biology is like this. It’s all exceptions to the rule.</p>
<p>But biology, like computing, has a bottom, and the bottom is not abstract. It’s physical. It’s shapes bumping into each other. In fact the great revelation of twentieth-century molecular biology was the coupling of structure to function. An aperiodic crystal that forms paired helices is the natural store of heredity <em>because</em> of its ability to curl up and unwind and double itself with complements. Hemoglobin, the first protein studied in full crystallographic detail, was shown to be an efficient store of energy <em>because</em> of how oxygen atoms snap into its body like Legos, each snap widening the remaining slots, so that it loads itself up practically at a gulp. Most proteins are like this. The ones that drive locomotion twist like little motors; the ones that contract muscles climb and compress each other. Cells, too, are constantly in conversation, and the language they speak is shape. It’s keys entering locks: a protein might straddle the cell membrane, and when a cytokine (that’s a kind of signaling molecule) docks with it, it changes its shape, so that its grip loosens on some other molecule on the interior side of the membrane, as though fumbling a football—that football might be a signal itself, on its way to the nucleus.</p>
<p>I think my understanding of biology was too flow-charty in high school. I knew that <em>DNA → RNA → protein</em> and that this was called “gene expression,” but I was confused on the basics, like, how did genes actually “turn on”? And once they were on, were they on for good? It’s clearer when you think physically. Mammalian DNA isn’t laid out as one long double helix; it’s tightly coiled and coiled again, like this, around little circular proteins called histones:</p>
<figure>
<p><img src="https://user-images.githubusercontent.com/21294/94510096-ecfade80-01e3-11eb-848e-8a0c76dd0956.png" alt=""></p><figcaption>DNA curled around histones. Image from <a href="https://www.youtube.com/watch?v=Rn9sRkkqGT4">this Moderna video</a>, at 1:10</figcaption>
</figure>
<p>The structure of the resulting fiber has an effect on which genes are expressed. This is because the little molecular machine that transcribes DNA into RNA has to actually <a href="https://youtu.be/5MfSYnItYvg?t=39">ride along the helix</a>, and it can only ride along some parts of it, namely the parts that aren’t <a href="https://youtu.be/gbSIBhFwQ4s">curled up out of sight</a>. “Expressing” a gene just means that at a given moment, the machine is accessing a specific portion of DNA, resulting in lots of RNA transcripts, resulting in lots of the protein that the gene codes for. Kink the fiber a bit and you change what the machine can see, thus changing the distribution of proteins it produces. You have “reprogrammed” the cell. (There are many ways to control gene expression, maybe the most common being “repressors” that park somewhere on the DNA, physically blocking the transcription machinery.)</p>
<p>One of the workhorse techniques in modern biology, called <a href="https://youtu.be/fCd6B5HRaZ8">RNA sequencing</a>, or RNA-seq for short, takes a frozen cell and counts the RNA transcripts inside it. In effect you get a snapshot of all the proteins being expressed at that moment. The result is literally a big table mapping genes to transcript counts. You see that being one kind of cell versus another—or being in one kind of cellular mood versus another, say in health versus disease—is just a matter of having a different distribution across this table. RNA-seq results are <a href="https://www.nature.com/articles/nbt.2594">often</a> represented as vectors in high-dimensional space, the counts in the table forming the coordinates; cells move through this expression space as they self-regulate and adapt to their environment.</p>
<p>*</p>
<p>How do you develop a physical understanding of biology? I like pictures. One of my favorite books is called <a href="https://www.springer.com/gp/book/9780387849249"><em>The Machinery of Life</em></a>, by David Goodsell. It’s full of gorgeous hand-drawn illustrations. Here a bacterium’s flagellar motor is shown in context, then zoomed in on in an inset, with a third picture highlighting its functional elements:</p>
<p><img src="https://user-images.githubusercontent.com/21294/36645281-38d56c2a-1a34-11e8-82bd-0d574d6d5dae.png"></p>
<p><img src="https://user-images.githubusercontent.com/21294/36645283-45e9b1fa-1a34-11e8-96ff-5e84cafe11f6.png"></p>
<p><img src="https://user-images.githubusercontent.com/21294/94501488-ed897a00-01cf-11eb-8343-384f14e8b33b.jpg"></p>
<p>What makes the book work is that it’s basically a re-introduction to molecular biology with the following premise: the cell is <a href="https://www.righto.com/2011/07/cells-are-very-fast-and-crowded-places.html">a very fast and crowded place</a>, full of little machines, most of them protein, which you understand by taking a close look. It does an especially terrific job through insets like the above relating things at different scales. “Imagine your room filled with grains of rice. That will give you an idea of the billion or so cells that make up your fingertip.”</p>
<p>The writing is very good. It somehow gets you imagining the <em>motion</em> of these machines. It’s tempting when thinking about the cellular world to simply miniaturize our own; but at the cellular scale things behave weirdly. Movement is essentially by random diffusion. “The motions and the interactions of biological molecules are completely dominated by the surrounding water molecules… Inside the cell, [a] protein is battered from all sides by water molecules. It bounces back and forth, always at great speed, but takes a long time to get anywhere.”</p>
<p><img src="https://user-images.githubusercontent.com/21294/94513322-6ac2e800-01ec-11eb-86ef-076e01b73216.jpg"></p>
<p>It turns out that random diffusion is an incredibly slow way to travel large distances, but an incredibly fast way to explore at short distances. Being a protein inside a cell is like being at a crowded house party where it might take an hour to get across the room, but by the time you get there you’ve bumped into everybody six hundred thousand times.</p>
<p>This point is made beautifully in another favorite book of mine, <a href="https://www.springer.com/gp/book/9780387482750"><em>A Computer Scientist’s Guide to Cell Biology</em></a>, by William W. Cohen:</p>
<blockquote>
<p>Molecules that come close to an organelle tend to remain close to it for a while, and brush against it many times—Figure 20 gives some intuitions as to why this is true.</p>
</blockquote>
<p><img src="https://user-images.githubusercontent.com/21294/94501182-3a208580-01cf-11eb-9896-145bfc03838a.png"></p>
<blockquote>
<p>The result of this is that if receptors for a protein p cover even a small fraction of the surface of an organelle, the organelle will be surprisingly efficient at recognizing p. As an example, if only 0.02% of a typical eukaryotic cell’s surface has a receptor for p, the cell will be about half as efficient as if the entire surface were coated with receptors for p.</p>
</blockquote>
<p>This is the kind of fact that instantly clarifies how biology could possibly work. “Cell-sized objects thus have a ‘high bandwidth,’” Cohen writes. “They can recognize or absorb hundreds of different chemical signals, even if they are bounded by membranes.”</p>
<p>Cohen’s book is pitched as an attempt to distill what he learned in acquiring a “reading knowledge” of biology—enough to be able to follow along with a paper in <em>Cell</em>. He’s very good at explaining methods: how do biologists know what they know? For a computer scientist, a biologist’s methods can seem insane; the trouble comes from the fact that cells are too small, too numerous, too complex to analyze the way a programmer would, say in a step-by-step debugger. What biologists mostly do is stuff like:</p>
<ul>
<li>Spin things to 15,000 Gs in centrifuges to separate pieces having different densities.</li>
<li>Separate things of different sizes using gels and magnets. (“Gel electrophoresis.”)</li>
<li>Take one of those gels and blot it with special paper to splay the parts out. Then wash the paper with an antibody that binds to a specific protein. Finally, wash the paper with <em>another</em> antibody that binds to the first one, and fluoresces when it does so. See where the meta-antibody lights up—that’s the protein you were looking for. (I think I’m describing a “Western blot.”)</li>
<li>Use the fluorescent antibody trick to tag cells expressing one or more proteins of interest. Then squeeze the cells through a tube so small that only one fits at a time. As each cell passes by, shine a laser through it to read its fluorescent tags, and use an electric charge to redirect it to a particular bin. Now you can sort and count cells that match your criteria. (“<a href="https://www.youtube.com/watch?v=EQXPJ7eeesQ">Flow cytometry</a>.”)</li>
<li>Genetically alter microorganisms to make molecular machines to spec; systematically turn off one gene at a time in a cell line and see what changes; edit the genome of a whole animal, and observe its life.</li>
</ul>
<p>Cohen found, and I have too, that in trying to acquire a reading knowledge of biology it’s almost more useful to study the methods than any individual facts. That’s because the methods are highly conserved across studies. <em>Everybody</em> does Western blots. <em>Everybody</em> does flow cytometry and RNA-seq. You’ll see this stuff in every paper. (Or variations on the same themes: separation, sorting, selection, genetic manipulation.)</p>
<p>So that’s the foundation. Or almost: I have left for last my favorite resource of all, an incredible book called <em><a href="https://www.cshlpress.com/default.tpl?cart=1601425278428641528&amp;fromlink=T&amp;linkaction=full&amp;linksortby=oop_title&amp;--eqSKUdatarq=294">The Eighth Day of Creation: Makers of the Revolution in Biology</a></em>, by Horace Freeland Judson. Parts of this book were serialized in the New Yorker in the 1970s. It is the <em>Power Broker</em> of biology, a tomic masterwork. It is not just comprehensive—Judson had hundreds of conversations with Francis Crick, with Jacques Monod and François Jacob, with their friends and spouses and colleagues; he read every paper, he read all their letters—but it pulls no punches scientifically. Judson always just describes the real thing.</p>

<p>And he emphasizes wrong turns. For example, before the discovery of tRNA—the adapter molecules that link triplets of RNA bases to the amino acids they code for—there was much confusion. It was widely believed that there had to be some kind of punctuation, because how else would one know where to start transcribing, or how to delimit one codon from the next? Certain mental models were ingrained: a going theory was that RNA formed specially shaped pockets for the different amino acids. The idea was that if you zoomed in on each triplet or quartet or whatever (the scheme was then unknown), it would always form the same unique shape that only one kind of amino acid could fit into. The amino acid chain would be formed right there alongside the RNA strand, using it almost as a mold. This was thought to happen in the nucleus. The idea that protein synthesis happened via an adapter, and that the nucleic acids therefore acted less like a mold than a digital code, more purely information—this was a major surprise.</p>
<blockquote>
  <p>Sitting on the grass at Woods Hole, Crick was talking about genes and proteins, in particular about his assumption that they were colinear and Benzer and Brenner’s plan to show as much, when Ephrussi took him aback by asking how he knew that amino acids were not put in their primary sequence by something in the cytoplasm. . . . “I don’t think Boris necessarily believed it, but it was an idea he thought wasn’t impossible.”</p>
  <p>. . .</p>
  <p>Crick also cast his skeptical eye over Watson and Rich’s attempts to build models of RNA. “Of course, you realize that our ideas on that were totally wrong. We thought that RNA had some structure with the twenty cavities, it was that period. Mm-hmm. Unfortunately people have forgotten what it is we didn’t know at the time.”</p>
</blockquote>
<p>Put another way, the book gives us a view of science <em>before</em> discovery. It is a practitioner’s view of the subject. It is the opposite of a textbook.</p>

<p>*</p>

<p>Trying to study the immune system has gotten me into a <a href="http://worrydream.com/">Bret Victor</a> sort of mood, wondering what could be done, or built, to make understanding this subject easier. A few things come to mind:</p>
<p>There are some incredible YouTube explainers. <a href="https://www.youtube.com/channel/UC6QYFutt9cluQ3uSM963_KQ">Ninja Nerd Science</a>’s videos on the immune system were a miracle—all delivered by a kid in grad school. He is a genius. What he does so well is what Goodsell, in that <em>Machinery of Life</em> book, does so well, what those famous <a href="https://www.youtube.com/watch?v=wJyUtbn0O5Y">“Inner Life of a Cell”</a> 3D animations do so well: he helps you “see the unseeable.”</p>

<figure>
<p><img src="https://user-images.githubusercontent.com/21294/99346396-877db280-2862-11eb-96ee-f680cc549b14.png" alt=""></p><figcaption><a href="https://www.youtube.com/channel/UC6QYFutt9cluQ3uSM963_KQ">Ninja Nerd Lectures YouTube channel</a></figcaption>
</figure>

<p>But I wonder whether it should be easier for regular people to create useful illustrations. Consider how easy it is to write, tooling-wise: on the web, you are only ever one click away from a Markdown-enabled textarea that allows you to create and publish pretty, hyperlinked documents. Anyone with a keyboard can contribute a few sentences to Wikipedia or answer a question on Stack Exchange. Drawing, by contrast, is hard, and animating is at least an order of magnitude harder. And yet these media are essential for understanding biological processes.</p>
<p>So what do we do?</p>
<p>It’s telling that when I was recently on a Zoom with a PhD student who was explaining RNA-seq, he pulled out his iPad Pro and essentially made a Khan Academy lecture as he talked, drawing along the way. These tools need to become more common and cheaper.</p>

<p>But we also need more software like <a href="https://web.archive.org/web/20200925063749/https://ami.org/professional-resources/expert-techniques/129-pattern-brushes-in-adobe-illustrator">pattern brushes in Adobe Illustrator</a>, <a href="https://biorender.com/">BioRender</a>, and <a href="https://ccsb.scripps.edu/cellpaint/">CellPAINT</a> to make it un-tedious to draw complex objects. We need more software like <a href="https://clarafi.com/tools/mmaya/">Molecular Maya</a>, but simplified even further, à la Victor’s <a href="http://worrydream.com/#!/StopDrawingDeadFish">Stop Drawing Dead Fish</a>, to make animating accessible to anyone who can gesture.</p>

<figure>
<p><img src="https://user-images.githubusercontent.com/21294/99431123-3c9e8200-28d8-11eb-928e-2fb154df69c2.png" alt=""></p><figcaption><a href="https://web.archive.org/web/20200925063749/https://ami.org/professional-resources/expert-techniques/129-pattern-brushes-in-adobe-illustrator">Quickly draw an endothelial lining with pattern brushes in Adobe Illustrator</a></figcaption>
</figure>

<figure>
<p><img src="https://user-images.githubusercontent.com/21294/99346530-d88da680-2862-11eb-89d2-84df12a63d06.png" alt=""></p><figcaption><a href="https://clarafi.com/training/intro-mmaya-dsdna-kit/">Molecular Maya’s double-stranded DNA kit</a></figcaption>
</figure>

<p>Using vector graphics and Undo history, it should be possible to make collaboratively editable images, i.e., images that can be slowly improved as part of a knowledge project like Wikipedia or Stack Exchange.</p>
<p>I want to be able to take a screenshot of the whiteboard in a Ninja Nerd lecture—a big beautiful diagram of the players in the adaptive immune system—and lasso sections of it, linking to sub-diagrams, some filled in by me, some by others, illustrating each of the parts in turn. We should have big, collaboratively edited zoomable “maps”—hierarchical diagrams—that are easy to navigate, work in standard browsers, are embeddable in blog posts, and so on.</p>
<p>Of course we need to teach more people how to draw. It’s an underrated skill. And how to write vividly, as in the wonderful books above.</p>
<p>But biology is uniquely suited to simulation—it’s a world of machines that are too small to see. The trouble is, it requires too much specialized skill to create three-dimensional interactive simulations. We need a toolkit that’s like <a href="https://mockmechanics.com/">MockMechanics</a>, or Minecraft, that maybe even <em>is</em> Minecraft, but focused on biology. Or something much better.</p>

<!-- 
<figure>
<div style="text-align: center;"><img src="https://user-images.githubusercontent.com/21294/94638623-64924180-02a8-11eb-8cf8-a2a4d5380139.png" alt="" style=""/></a></div><figcaption><a href="https://americanhistory.si.edu/collections/search/object/nmah_334939">Watson and Crick’s metal-and-wire model of the double helix</a></figcaption>
</figure>
-->

<p>It’s no coincidence that Watson and Crick depended for their discovery on a literal <a href="https://digitalcommons.rockefeller.edu/transforming-principle-dna/23/">physical model</a> that was <a href="https://americanhistory.si.edu/collections/search/object/nmah_334939">machined</a> for them specially. Victor’s Dynamicland <a href="http://worrydream.com/cdg/ResearchAgenda-v0.19-poster.pdf">imagines</a> an immersive collaborative space in which such models can be built—now that we have computers—as quickly as you can have a conversation.</p>

<p>This is exactly what I wanted as I was writing my immune system article. I wanted to conjure models I could play with in my hand. I wanted a museum where I could walk around inside the epithelium during an immune response. I wanted to put ideas into physical space, like on a pinboard—TLRs go <em>here</em>, with the other innate armament; CD4+ T cells are <em>there</em>, in the adaptive world—but I wanted it to be as searchable, copy-pasteable, shareable, and composable as text.</p>

<figure>
<p><img src="https://user-images.githubusercontent.com/21294/94639098-71636500-02a9-11eb-8aec-3d01ccea1ba7.png" alt=""></p><figcaption><a href="http://worrydream.com/cdg/ResearchAgenda-v0.19-poster.pdf">Bret Victor’s vision of dynamic tools for thinking</a></figcaption>
</figure>

<p>I think we also need inspiration. There is a romance in biology, as in any other science, that a movie like <em>Good Will Hunting</em> could bring out. We need heroes. Whoever delivers us from this pandemic in the form of a slam dunk vaccine, or a cheap quick reliable test, should become a household name, not for their own glory but for our kids—a Feynman for them to dream about someday becoming.</p>

<h2>Reading list</h2>
<ul>
  <li><em><a href="https://www.springer.com/gp/book/9780387849249">The Machinery of Life</a></em>, David Goodsell</li>
  <li><em><a href="https://www.amazon.com/Bionanotechnology-Lessons-David-S-Goodsell/dp/047141719X">Bionanotechnology: Lessons from Nature</a></em>, David Goodsell</li>
  <li><em><a href="https://www.springer.com/gp/book/9780387482750">A Computer Scientist’s Guide to Cell Biology</a></em>, William W. Cohen</li>
  <li><em><a href="https://www.cshlpress.com/default.tpl?cart=1601425278428641528&amp;fromlink=T&amp;linkaction=full&amp;linksortby=oop_title&amp;--eqSKUdatarq=294">The Eighth Day of Creation: Makers of the Revolution in Biology</a></em>, Horace Freeland Judson</li>
  <li><em><a href="https://www.amazon.com/Medusa-Snail-Notes-Biology-Watcher/dp/0140243194">The Medusa and the Snail: More Notes of a Biology Watcher</a></em>, Lewis Thomas</li>
</ul>

<p><em>See <a href="https://jsomers.net/">jsomers.net</a> for more of my writing.</em>


</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Programming Is Mostly Thinking (660 pts)]]></title>
            <link>http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html</link>
            <guid>40103407</guid>
            <pubDate>Sun, 21 Apr 2024 05:40:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html">http://agileotter.blogspot.com/2014/09/programming-is-mostly-thinking.html</a>, See on <a href="https://news.ycombinator.com/item?id=40103407">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-4896867988576448796" itemprop="description articleBody">
<div dir="ltr" trbidi="on">
<blockquote>
<span><br></span><span>Pretend you have a really great programming day.</span>&nbsp;</blockquote>
<blockquote>
<span>You only have to attend a few meetings, have only a few off-topic conversations, don't get distracted or interrupted much, don't have to do a bunch of status or time reporting, and you put in a good six hours of serious programming [note: this RARELY happens in an 8-10 hour day].</span>&nbsp;</blockquote>
<blockquote>
<span>I want to review your work in the morning, so I print out a diff of your day's work before going home.</span>&nbsp;</blockquote>
<blockquote>
<span>Sadly, overnight the version control system crashes and they have to recover from the previous day's backup. You have lost an entire day's work.</span>&nbsp;</blockquote>
<blockquote>
<span>If I give you the diff, how long will it take you to type the changes back into the code base and recover your six-hours' work? </span></blockquote>
<br>
<h3>
Programming is 11/12ths Thinking</h3> <p> I've been touting this figure for some time now, and people keep asking me where the study is that produced such an odd number.  </p><p> Well, it's not pulled out of thin air and it's not the result of a thorough scientific study.  </p><p> I have done informal polls now for a few years, though I've not kept good records. My goal was not to become the scientist who cracks the statistical/mathematical code for programming activities. I was looking for a reasonable answer to a reasonable question. </p><p> However, this answer surprised me. In a long Quora post titled "<a href="#">How do programmers code so quickly?</a>"  one responder offered that it was a combination of physical skills (muscle memory, skill with tools, debugging skills,  typing skill) and knowing where to search for info. His post was swamped and overwhelmed by posts explaining that typing and tools are not the most important aid to quick code production.</p></div><p dir="ltr" trbidi="on"><br><h3>Software Factories</h3></p><div dir="ltr" trbidi="on">&nbsp; 
<p>I have seen the stickers and slogans on stickers and social media for a long time that "<a href="https://blog.ploeh.dk/2018/09/17/typing-is-not-a-programming-bottleneck/">typing is not the bottleneck</a>" (though every once in a while the inability of some programmers to type is <b>a </b>bottleneck).</p>

<p>
I am keenly aware that most management still subscribes to the idea that <i>motion is work</i>. They are fairly convinced that a lack of <i>motion</i> is a lack of <i>work</i>. That makes sense in a lawn care service, a factory assembly line, or a warehouse operation.</p>

<p>
Nearly all of the visible work done in producing physical goods is motion. People roll steel, stamp, press, mill, pick and place, bolt/screw/rivet, and on.&nbsp;</p>

<p>
Modern factories produce goods with Computer Numerical Control machines, which produce perfect copies of an original model that may not even exist in real life. These machines work from abstract models -- just data, really -- and perform perfect motion. Humans tend the machines, rather than working the wood by hand.</p>

<p>
I have some great guitars that were produced at affordable costs because of the degree of automation brought by such machines.&nbsp;</p>

<p>
Great boutique guitars are produced entirely by hand at higher cost and I don't put down that effort either. The world has room for both.</p>

<p>
<iframe allowfullscreen="allowfullscreen" frameborder="0" height="266" mozallowfullscreen="mozallowfullscreen" src="https://www.youtube.com/embed/PhOpgMDkfwc?feature=player_embedded" webkitallowfullscreen="webkitallowfullscreen" width="320"></iframe></p>



<p>
Software developers have perfected the factory. It runs flawlessly bit-perfect copies. You just click the "copy" or "download" button. It's so cheap that the purchasers happily cover the costs of the factory. Those who are cautious will double check the checksums that come with the download, but most people don't bother. The machines are reliable and efficient and quick and cheap.&nbsp;</p>

<p>
Once the initial model (really, just data) exists, then the marginal cost of all the bit-perfect copies is essentially zero. Yes, this is just copying and not creating, but that's what factories do. Custom shops might produce unique items (like guitars) but factories create copies of originals.</p>

<div><p>
The software factory tends to give you a progress bar, so you can visualize the motion of bits, but in many ways you can say that the product doesn't really exist. It's a pattern of tiny charged v. uncharged areas of metal on a plate (well, probably) and you don't even pay for the plate or the magnet or the laser when you create the copy. It's already there.</p><p>

Software is an intellectual good.</p></div>
<h3>
The Design Shop</h3>

<p>
In my years of working with Uncle Bob Martin, I heard him continually tell customers and students that software development is not a fabrication operation, but a design operation. Once the initial design is done, all the duplication is done by machines at nearly zero cost.</p>

<p>
So what programmers and testers and POs and Scrum Masters and software management area all doing (if they're doing it right) is designing the data model that will later be used by the factory to create copies for use by customers, patrons, and other people in the community the software is intended to serve.&nbsp;</p>

<p>
Yet the mechanistic, Industrial-Age idea of software development as a factory persists, and developers dutifully try to make it look like they're doing physical labor at the detriment of the process.&nbsp;</p>

<p>
All intellectual activities are hard to observe and monitor. An idea that is 80% complete has no physical manifestation. It's an idea, and it's not done yet. Sometimes we have experiments or proof-of-concept code or notes, but they don't give an accurate "% complete" number as does physical work.</p>

<p>
A chair being manufactured looks about 50% done at the 50% mark. &nbsp;When it's done, it looks done.</p>

<div><p>
A design for a chair may not exist on paper until it is more than 70% complete. And we don't know that it's really 70% done, because it's not finished being designed yet.</p><h3> The Answer: Really? </h3></div><p>
I have asked this question at conventions, client companies, to my peers, to colleagues, and to strangers I have met for the first time when I find out they are programmers. </p><p> The answer I receive most often is "about half an hour." </p><p> I could use the 8-hour day, ignoring meetings and interruptions and status reports, but that feels like padding the answer. I stick to the six hours doing things that programmers identify as programming work.</p><p>  There are twelve half-hours in six hours. One half-hour to retype all the changes made in six hours of hard programming work.  </p><p>What in the world can that mean? How can it be so little?</p></div><h3>The Meaning Behind the Answer</h3><p>Right now I suspect a bunch of managers are about to go yell at their programmers for putting in a half-hour's work in an 8-hour day! That would be a horrible misunderstanding of what was actually happening.</p><div dir="ltr" trbidi="on"> <p>  What is really happening? </p><div>
<ul>
<li>Programmers were typing on and off all day. Those 30 minutes are to recreate the <i><b>net result</b></i> of all the work they wrote, un-wrote, edited, and reworked through the day. It is not all the effort they put in, it is only the <i>residue of the effort.</i></li>
<li>Programmers are <i><b>avoiding defects</b></i> as best they can. In order to do that, they have to be continuously evaluating the code as they write it, hypothesizing the kinds of defects or security vulnerabilities they might be introducing. After all, they receive their harshest criticism for introducing defects into the shared code base.&nbsp;</li>
<li>Programming is a kind of <i><b>lossy compression</b></i>. The code only says what the program must do when it is running. Why a programmer chose one particular way over others, how it influences the rest of the system, what errors were introduced and removed, and what pitfalls it avoids are not (generally) present in the text of the program.</li>
<li>Most of the work is not in making the change, but in <i><b>deciding how to make the change</b></i>. Deciding requires us to understand the code that already exists. This is especially time-consuming when the code is messy or the design is not very obvious in the source code.&nbsp;</li>
<li>Programmers work in a <b><i>social context</i></b>&nbsp;since all their results are integrated into a shared code base (and most use pair programming or other "many eyes" techniques). Programmers may be helping other programmers or testers or operations people get a handle on their work. Connecting and communicating with others has benefits and costs that don't appear in the code.&nbsp;</li>
</ul>
</div>

<div><p>
Six hours of intellectual work (reading, researching, deciding, confirming, validating, verifying) translates to about 30 minutes worth of net lines-of-code change to a code base.</p><p>

That's not additional lines of code. We often have weeks when we fix bugs and add features and have fewer lines of code at end of the week than we had at the beginning of the week. I once got in trouble for having multiple weeks where we had negative lines of code -- we didn't know the 'grand boss' over our team was reporting SLOC as if it measured progress. Sigh.&nbsp;</p></div>

<div><p>
Programmers will gladly explain that the work they did was reading, learning, understanding, sometimes guessing, researching, debugging, testing, compiling, running, hypothesizing and disproving their ideas of what the code should look like. In short, they were thinking and deciding.</p><div><p>
Most of what goes on is intellectual work.</p><div><p>
One of the quora responders wrote:</p><blockquote>
<span>You see the fingers flying over the keyboard; you don't see the hours spent in talking to users, discussing the problems with coworkers, doing research and thinking the problems through.</span></blockquote>
</div>
<div><p>
Another suggested:</p><blockquote>
<span>I achieve it firstly (to the extent that I do) by 'helping' the customer to eliminate the unnecessary notions from their idea, which they often mistakenly call 'requirements' and sometimes even say they are 'must have'. This is the biggest possible acceleration in the delivery of a solution because I can do an infinite amount of no work in no time at all.</span></blockquote>
</div><p>
And yet another:</p><blockquote>
<span>Really good developers do 90% or more of the work before they ever touch the&nbsp; keyboard; really understanding the requirements and devising an appropriate solution.</span></blockquote><p>
These are not unique unusual answers. I find that most of the time, "knowing what not to write", "doing less," "working in smaller steps", and "having first figured out what to do" are common answers. Programming is much more about thinking than about typing.</p></div>
</div>

<p>
I have examined a lot of the change logs (diffs). It has consistently looked like 30+/-10 minutes of change on a good day (at least to me).&nbsp;</p>

<p>
I'm confident enough to tout this number as effectively true, though I should mention that no company I work with has so far been willing to delete a whole day's work to prove or disprove this experiment yet. &nbsp;Remember, I have only estimates and examinations of daily diffs to work from. The result here is not scientific.</p>

<div><p>
I should also let you know that people who do more typing or more cut/paste are often doing less thinking and understanding, which results in more errors and more burden on other programmers to understand and correct their code.</p><p><span><i>Code is just the residue of the work.</i></span></p>
<h3>
So What?</h3>
<br></div>

<p>
If programming is 1/12th motion and 11/12ths thinking, then we shouldn't push people to be typing 11/12ths of the time. We should instead provide the materials, environment, and processes necessary to ensure that the thinking we do is of high quality.&nbsp;</p>

<p>
Doing otherwise is optimizing the system for the wrong effect.</p>

<div><p>
What if we changed our tactics, and intentionally built systems for thinking together about software and making decisions easier to make? I think that productivity lies in this direction.</p><p>

So I invite you: how can you experiment with learning on-the-job to create systems where the thinking is optimized?&nbsp;</p></div>

</div>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Glibc Buffer Overflow in Iconv (159 pts)]]></title>
            <link>https://www.openwall.com/lists/oss-security/2024/04/18/4</link>
            <guid>40103188</guid>
            <pubDate>Sun, 21 Apr 2024 04:31:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.openwall.com/lists/oss-security/2024/04/18/4">https://www.openwall.com/lists/oss-security/2024/04/18/4</a>, See on <a href="https://news.ycombinator.com/item?id=40103188">Hacker News</a></p>
<div id="readability-page-1" class="page">


<table>
<tbody><tr>

<td>
<a href="https://www.openwall.com/"><img src="https://www.openwall.com/logo.png" width="182" height="80" alt="Openwall"></a>
</td><td>
<div>
<ul>
<li><a href="https://www.openwall.com/">Products</a>
<ul>
<li><a href="https://www.openwall.com/Owl/">Openwall GNU/*/Linux &nbsp; <i>server OS</i></a>
</li><li><a href="https://www.openwall.com/lkrg/">Linux Kernel Runtime Guard</a>
</li><li><a href="https://www.openwall.com/john/">John the Ripper &nbsp; <i>password cracker</i></a>
<ul>
<li><a href="https://www.openwall.com/john/">Free &amp; Open Source for any platform</a>
</li><li><a href="https://www.openwall.com/john/cloud/">in the cloud</a>
</li><li><a href="https://www.openwall.com/john/pro/linux/">Pro for Linux</a>
</li><li><a href="https://www.openwall.com/john/pro/macosx/">Pro for macOS</a>
</li></ul>
</li><li><a href="https://www.openwall.com/wordlists/">Wordlists &nbsp; <i>for password cracking</i></a>
</li><li><a href="https://www.openwall.com/passwdqc/">passwdqc &nbsp; <i>policy enforcement</i></a>
<ul>
<li><a href="https://www.openwall.com/passwdqc/">Free &amp; Open Source for Unix</a>
</li><li><a href="https://www.openwall.com/passwdqc/windows/">Pro for Windows (Active Directory)</a>
</li></ul>
</li><li><a href="https://www.openwall.com/yescrypt/">yescrypt &nbsp; <i>KDF &amp; password hashing</i></a>
</li><li><a href="https://www.openwall.com/yespower/">yespower &nbsp; <i>Proof-of-Work (PoW)</i></a>
</li><li><a href="https://www.openwall.com/crypt/">crypt_blowfish &nbsp; <i>password hashing</i></a>
</li><li><a href="https://www.openwall.com/phpass/">phpass &nbsp; <i>ditto in PHP</i></a>
</li><li><a href="https://www.openwall.com/tcb/">tcb &nbsp; <i>better password shadowing</i></a>
</li><li><a href="https://www.openwall.com/pam/">Pluggable Authentication Modules</a>
</li><li><a href="https://www.openwall.com/scanlogd/">scanlogd &nbsp; <i>port scan detector</i></a>
</li><li><a href="https://www.openwall.com/popa3d/">popa3d &nbsp; <i>tiny POP3 daemon</i></a>
</li><li><a href="https://www.openwall.com/blists/">blists &nbsp; <i>web interface to mailing lists</i></a>
</li><li><a href="https://www.openwall.com/msulogin/">msulogin &nbsp; <i>single user mode login</i></a>
</li><li><a href="https://www.openwall.com/php_mt_seed/">php_mt_seed &nbsp; <i>mt_rand() cracker</i></a>
</li></ul>
</li><li><a href="https://www.openwall.com/services/">Services</a>
</li><li id="narrow-li-1"><a>Publications</a>
<ul>
<li><a href="https://www.openwall.com/articles/">Articles</a>
</li><li><a href="https://www.openwall.com/presentations/">Presentations</a>
</li></ul>
</li><li><a>Resources</a>
<ul>
<li><a href="https://www.openwall.com/lists/">Mailing lists</a>
</li><li><a href="https://openwall.info/wiki/">Community wiki</a>
</li><li><a href="https://github.com/openwall">Source code repositories (GitHub)</a>
</li><li><a href="https://cvsweb.openwall.com/">Source code repositories (CVSweb)</a>
</li><li><a href="https://www.openwall.com/mirrors/">File archive &amp; mirrors</a>
</li><li><a href="https://www.openwall.com/signatures/">How to verify digital signatures</a>
</li><li><a href="https://www.openwall.com/ove/">OVE IDs</a>
</li></ul>
</li><li id="last-li"><a href="https://www.openwall.com/news">What's new</a>
</li></ul>
</div>


</td></tr></tbody></table>




<a href="https://www.openwall.com/lists/oss-security/2024/04/18/3">[&lt;prev]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/18/5">[next&gt;]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/17/9">[&lt;thread-prev]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/18/">[day]</a> <a href="https://www.openwall.com/lists/oss-security/2024/04/">[month]</a> <a href="https://www.openwall.com/lists/oss-security/2024/">[year]</a> <a href="https://www.openwall.com/lists/oss-security/">[list]</a>
<pre>Date: Thu, 18 Apr 2024 18:42:42 +0200
From: Solar Designer &lt;solar@...nwall.com&gt;
To: oss-security@...ts.openwall.com
Subject: Re: The GNU C Library security advisories update for 2024-04-17: GLIBC-SA-2024-0004/CVE-2024-2961: ISO-2022-CN-EXT: fix out-of-bound writes when writing escape sequence

On Wed, Apr 17, 2024 at 02:36:02PM -0300, Adhemerval Zanella Netto wrote:
&gt; GLIBC-SA-2024-0004:
&gt; ===================
&gt; ISO-2022-CN-EXT: fix out-of-bound writes when writing escape sequence
&gt; 
&gt; The iconv() function in the GNU C Library versions 2.39 and older may
&gt; overflow the output buffer passed to it by up to 4 bytes when converting
&gt; strings to the ISO-2022-CN-EXT character set, which may be used to
&gt; crash an application or overwrite a neighbouring variable.
&gt; 
&gt; ISO-2022-CN-EXT uses escape sequences to indicate character set changes
&gt; (as specified by RFC 1922).  While the SOdesignation has the expected
&gt; bounds checks, neither SS2designation nor SS3designation have its;
&gt; allowing a write overflow of 1, 2, or 3 bytes with fixed values:
&gt; '$+I', '$+J', '$+K', '$+L', '$+M', or '$*H'.
&gt; 
&gt; CVE-Id: CVE-2024-2961
&gt; Public-Date: 2024-04-17
&gt; Vulnerable-Commit: 755104edc75c53f4a0e7440334e944ad3c6b32fc (2.1.93-169)
&gt; Fix-Commit: f9dc609e06b1136bb0408be9605ce7973a767ada (2.40)
&gt; Fix-Commit: 31da30f23cddd36db29d5b6a1c7619361b271fb4 (2.39-31)
&gt; Fix-Commit: e1135387deded5d73924f6ca20c72a35dc8e1bda (2.38-66)
&gt; Fix-Commit: 89ce64b269a897a7780e4c73a7412016381c6ecf (2.37-89)
&gt; Fix-Commit: 4ed98540a7fd19f458287e783ae59c41e64df7b5 (2.36-164)
&gt; Fix-Commit: 36280d1ce5e245aabefb877fe4d3c6cff95dabfa (2.35-315)
&gt; Fix-Commit: a8b0561db4b9847ebfbfec20075697d5492a363c (2.34-459)
&gt; Fix-Commit: ed4f16ff6bed3037266f1fa682ebd32a18fce29c (2.33-263)
&gt; Fix-Commit: 682ad4c8623e611a971839990ceef00346289cc9 (2.32-140)
&gt; 
&gt; Reported-By: Charles Fol

I hope Charles will share further detail with oss-security in due time,
but meanwhile his upcoming OffensiveCon talk abstract reveals a bit:

<a href="https://www.offensivecon.org/speakers/2024/charles-fol.html" rel="nofollow">https://www.offensivecon.org/speakers/2024/charles-fol.html</a>

&gt; CHARLES FOL
&gt; ICONV, SET THE CHARSET TO RCE: EXPLOITING THE GLIBC TO HACK THE PHP ENGINE
&gt; 
&gt; Abstract
&gt; A few months ago, I stumbled upon a 24 years old buffer overflow in the
&gt; glibc. Despite being reachable in multiple well-known libraries or
&gt; programs, it proved rarely exploitable. Indeed, this was not a foos bug:
&gt; with hard-to-achieve preconditions, it did not even provide a nice
&gt; primitive. On PHP however, it lead to amazing results: a new
&gt; exploitation technique that affects the whole PHP ecosystem, and the
&gt; compromission of several applications.
&gt; 
&gt; This talk will first walk you through the discovery of the bug and its
&gt; limitations, before describing the conception of several remote binary
&gt; PHP exploits, and through them offer unique insight in the internal of
&gt; the engine of the web language, and the difficulties one faces when
&gt; exploiting it.
&gt; 
&gt; BIO
&gt; Charles Fol, also known as cfreal, is a security researcher at LEXFO /
&gt; AMBIONICS. He has discovered remote code execution vulnerabilities
&gt; targeting renowned CMS and frameworks such as Drupal, Magento, Symfony
&gt; or Laravel, but also enjoys binary exploitation, to escalate privileges
&gt; (Apache, PHP-FPM) or compromise security solutions (DataDog's Sqreen,
&gt; Fortinet SSL VPN, Watchguard). He is the creator for PHPGGC, the go-to
&gt; tool to exploit PHP deserialization, and an expert in PHP internals.

The event is on May 10-11th, so in 3 weeks from now.

Alexander
</pre>
<p><a href="http://www.openwall.com/blists/">Powered by blists</a> - <a href="http://lists.openwall.net/">more mailing lists</a>


</p><p>
Please check out the
<a href="https://oss-security.openwall.org/wiki/">
Open Source Software Security Wiki</a>, which is counterpart to this
<a href="https://oss-security.openwall.org/wiki/mailing-lists/oss-security">mailing list</a>.
</p><p>
Confused about <a href="https://www.openwall.com/lists/">mailing lists</a> and their use?
<a href="https://en.wikipedia.org/wiki/Electronic_mailing_list">Read about mailing lists on Wikipedia</a>
and check out these
<a href="https://www.complang.tuwien.ac.at/anton/mail-news-errors.html">guidelines on proper formatting of your messages</a>.
</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Racket Language (257 pts)]]></title>
            <link>https://racket-lang.org/</link>
            <guid>40102912</guid>
            <pubDate>Sun, 21 Apr 2024 03:18:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://racket-lang.org/">https://racket-lang.org/</a>, See on <a href="https://news.ycombinator.com/item?id=40102912">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="doc"><top-section> <a href="https://racket-lang.org/"><span id="logo"><img alt="small logo" src="https://racket-lang.org/img/racket-logo.svg">&nbsp;Racket</span></a>

</top-section>

<section id="pull-quote"><section-content><li></li></section-content></section>

<div><p><label for="racket-lang"><span>Racket, the Programming Language</span></label></p><div><p><img alt="large logo" src="https://racket-lang.org/img/racket-logo.svg"></p><div><p>#lang racket/gui</p><pre><p>(<a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" onclick="javascript:cancel_bubble(event)">define</a> my-language 'English)</p><p>(<a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" onclick="javascript:cancel_bubble(event)">define</a> translations<br>  #hash([Chinese . "你好 世界"]<br>        [English . "Hello world"]<br>        [French . "Bonjour le monde"]<br>        [German . "Hallo Welt"]<br>        [Greek . "Γειά σου, κόσμε"]<br>        [Portuguese . "Olá mundo"]<br>        [Spanish . "Hola mundo"]<br>        [Thai . "สวัสดีชาวโลก"]<br>        [Turkish . "Merhaba Dünya"]))</p><p>(<a href="http://docs.racket-lang.org/reference/define.html#(form._((lib._racket/private/base..rkt)._define))" onclick="javascript:cancel_bubble(event)">define</a> my-hello-world<br>  (<a href="http://docs.racket-lang.org/reference/hashtables.html#(def._((quote._~23~25kernel)._hash-ref))" onclick="javascript:cancel_bubble(event)">hash-ref</a> translations my-language<br>            "hello world"))</p><p>(<a href="http://docs.racket-lang.org/gui/Windowing_Functions.html#(def._((lib._mred/main..rkt)._message-box))" onclick="javascript:cancel_bubble(event)">message-box</a> "" my-hello-world)</p></pre></div></div><p><label for="mature"><span>Mature</span></label></p><p><label for="practical"><span>Practical</span></label></p><p><label for="extensible"><span>Extensible</span></label></p><p><label for="robust"><span>Robust</span></label></p><p><label for="polished"><span>Polished</span></label></p></div>

<div><p><label for="racket-lop"><span>Racket, the Language-Oriented Programming Language</span></label></p><div id="lang4"><p>#lang datalog</p><pre>ancestor(A, B) <a href="https://docs.racket-lang.org/datalog/interop.html?q=%3A-#%28form._%28%28lib._datalog%2Fmain..rkt%29._~3a-%29%29" onclick="javascript:cancel_bubble(event)">:-</a> parent(A, B).<br>ancestor(A, B) <a href="https://docs.racket-lang.org/datalog/interop.html?q=%3A-#%28form._%28%28lib._datalog%2Fmain..rkt%29._~3a-%29%29" onclick="javascript:cancel_bubble(event)">:-</a><br>  parent(A, C), ancestor(C, B).<br>parent(john, douglas).<br>parent(bob, john).<br>ancestor(A, B)?</pre></div><p><label for="little-macros"><span>Little Macros</span></label></p><div><p>Racket allows programmers to <a href="https://docs.racket-lang.org/guide/pattern-macros.html" onclick="javascript:cancel_bubble(event)">add new syntactic constructs</a> in the same way that other languages permit the formulation of procedures, methods, or classes.  All you need to do is formulate a simple rule that rewrites a custom syntax to a Racket expression or definition.</p><p>Little macros can particularly help programmers with DRY where other features can’t. The example <abc>on the left</abc> <abc>above</abc> shows how to define a new syntax for measuring the time a task takes. The syntax avoids the repeated use of lambda. Note also how the macro is exported from this module as if it were an ordinary function.</p></div><p><label for="general-purpose"><span>General Purpose</span></label></p><div><p>Racket comes with a comprehensive suite of libraries: <a href="https://docs.racket-lang.org/gui/" onclick="javascript:cancel_bubble(event)">a cross-platform GUI toolbox</a>, a <a href="https://docs.racket-lang.org/web-server/index.html?q=%23lang%20web" onclick="javascript:cancel_bubble(event)">web server</a>, and more. <a href="https://pkgs.racket-lang.org/" onclick="javascript:cancel_bubble(event)">Thousands of additional packages</a> are a <a href="https://docs.racket-lang.org/pkg/getting-started.html?q=raco%20pkg#%28part._installing-packages%29" onclick="javascript:cancel_bubble(event)">single command</a> away: 3D graphics, a bluetooth socket connector, color maps, data structures, educational software, games, a quantum-random number generator, scientific simulations, web script testing, and many more.</p><p>Macros work with these tools. The example <abc>on the left</abc> <abc>above</abc> shows the implementation of a small number-guessing game. It is implemented in the GUI dialect of Racket, and demonstrates a number of language features.</p></div><p><label for="big-macros"><span>Big Macros</span></label></p><div><p><img src="https://racket-lang.org/img/big-macros-class.png" alt="Big Macros" width="350" height="262"></p><div><p>Getting to know the full Racket macro system will feel liberating, empowering, dazzling—like a whole new level of enlightenment. Developers can easily create a collection of co-operating macros to implement <a href="https://docs.racket-lang.org/reference/match.html" onclick="javascript:cancel_bubble(event)">algebraic pattern matching</a>, simple <a href="https://docs.racket-lang.org/teachpack/2htdpuniverse.html?q=big-bang#%28part._world._interactive%29" onclick="javascript:cancel_bubble(event)">event-handling</a>, or a <a href="https://pkgs.racket-lang.org/package/faster-minikanren" onclick="javascript:cancel_bubble(event)">logic-constraint solver</a>.</p><p>While Racket is a functional language, it has offered a sub-language of <a href="http://www.cs.utah.edu/plt/publications/aplas06-fff.pdf" onclick="javascript:cancel_bubble(event)">classes and objects, mixins and traits</a>, from the beginning. The macro-based implementation of a Java-like class system lives in a library and does not need any support from the core language. A Racket programmer can thus combine functional with object-oriented components as needed. </p></div></div><p><label for="easy-dsls"><span>Easy DSLs</span></label></p><div><p><img src="https://racket-lang.org/img/lang-video.png" alt="#lang video Dependency Graph" width="350" height="350"></p><div><p>Some languages convey ideas more easily than others. And some programming languages convey solutions better than others.  Therefore Racket is a language for <a href="https://docs.racket-lang.org/guide/hash-languages.html" onclick="javascript:cancel_bubble(event)">making languages</a>, so that a programmer can write every module in a well-suited language.</p><p>Often <a href="https://lang.video/" onclick="javascript:cancel_bubble(event)">an application domain</a> comes with several languages.  When you need a new language, you make it—on the fly. Open an IDE window; create a language right there, with just a few keystrokes; and run a module in this new language in a second IDE window.  Making new languages really requires no setup, no project files, no external tools, no nothing.</p></div></div><p><label for="ide-support"><span>IDE Support</span></label></p><div><p><img src="https://racket-lang.org/img/ide-support.png" alt="IDE Support" width="552" height="465"></p><div><p>Racket comes with its own IDE, <a href="https://docs.racket-lang.org/drracket/" onclick="javascript:cancel_bubble(event)">DrRacket</a> (<a href="https://www2.ccs.neu.edu/racket/pubs/jfp01-fcffksf.pdf" onclick="javascript:cancel_bubble(event)">née DrScheme</a>), and it sports some unique features. For example, when a programmer mouses over an identifier, the IDE draws an arrow back to where it was defined.</p><p>A programmer immediately benefits from DrRacket while using an alternative language, say <a href="https://docs.racket-lang.org/ts-guide/index.html" onclick="javascript:cancel_bubble(event)">Typed Racket</a>. Racket macros, even complex ones and those used to make new languages, record and propagate a sufficient amount of source information for DrRacket to act as if it understood the features of the new language.</p></div></div><p><label for="any-syntax"><span>Any Syntax</span></label></p><div><p><img src="https://racket-lang.org/img/ugly-syntax.png" alt="Dots and Colon-Pipes, too!" width="350" height="280"></p><div><p>Racket programmers usually love parentheses, but they have empathy for those who need commas and braces.  Hence, building languages with conventional surface syntax, like that of <a href="https://docs.racket-lang.org/datalog/datalog.html?q=datalog" onclick="javascript:cancel_bubble(event)">datalog</a>, is almost as easy as building parenthetical languages.</p><p>Racket’s ecosystem comes with <a href="https://docs.racket-lang.org/br-parser-tools/index.html?q=parsing" onclick="javascript:cancel_bubble(event)">parsing packages</a> that allow developers to easily map any syntax to a parenthesized language, which is then compiled to ordinary Racket with the help of Racket’s macro system. Such a language can also exploit the hooks of the IDE framework, so that its programmers may take advantage of Racket’s IDE.</p></div></div></div>

<div><p><label for="racket-ecosystem"><span>Racket, the Ecosystem</span></label></p><div><p><img alt="eighth RacketCon, 2018" src="https://racket-lang.org/img/racket-con-2018.png"></p></div><p><label for="software"><span>Software</span></label></p><p><label for="tutorials"><span>Tutorials &amp; Documentation</span></label></p><p><label for="community"><span>Community</span></label></p><p><label for="books"><span>Books</span></label></p><p><label for="education"><span>Education</span></label></p><div><table><tbody><tr><td><p>Education</p><p><a href="https://school.racket-lang.org/" onclick="javascript:cancel_bubble(event)">The Racket Summer School</a><br>a summer school for researchers, professionals, and (under)graduate students to the Racket philosophy of programming languages</p><p><a href="http://programbydesign.org/" onclick="javascript:cancel_bubble(event)">Program by Design (aka TeachScheme!)</a><br>a curriculum and training program for high school teachers and college faculty</p><p><a href="http://www.bootstrapworld.org/" onclick="javascript:cancel_bubble(event)">Bootstrap</a><br>a curriculum and training program for middle-school and high-school teachers</p></td><td></td><td><p><img src="https://racket-lang.org/img/four.png" alt="The Four Amigos" width="450" height="322"></p></td></tr></tbody></table></div><p><label for="swag"><span>Swag</span></label></p><div><table><tbody><tr><td><p>Swag</p><p><a href="https://devswag.com/products/racket-t-shirt" onclick="javascript:cancel_bubble(event)">Racket T-Shirts</a> — the perfect way to meet friends, influence people, and stay warm.</p><p><a href="https://devswag.com/products/racket" onclick="javascript:cancel_bubble(event)">Racket Stickers</a> — the indispensable accessory for laptops and textbooks.</p></td><td></td><td><img src="https://racket-lang.org/img/gear-and-stuff.jpg" alt="gear" width="272" height="364"></td></tr></tbody></table></div></div>

<section id="bottom"><section-title><p>Thank you</p></section-title><section-content><li></li></section-content></section>




</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bayer is getting rid of bosses and asking staff to ‘self-organize’ (156 pts)]]></title>
            <link>https://fortune.com/europe/2024/04/11/pharmaceutical-giant-bayer-ceo-bill-anderson-rid-bosses-staff-self-organize-save-2-billion/</link>
            <guid>40102779</guid>
            <pubDate>Sun, 21 Apr 2024 02:38:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fortune.com/europe/2024/04/11/pharmaceutical-giant-bayer-ceo-bill-anderson-rid-bosses-staff-self-organize-save-2-billion/">https://fortune.com/europe/2024/04/11/pharmaceutical-giant-bayer-ceo-bill-anderson-rid-bosses-staff-self-organize-save-2-billion/</a>, See on <a href="https://news.ycombinator.com/item?id=40102779">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>In a bid to claw back $2.15 billion, the struggling pharmaceutical giant Bayer CEO is doing away with middle managers and 99% of the company’s 1,362-page corporate handbook, allowing nearly 100,000 employees to self-manage.</p><div>



<p>Bayer, the 160-year-old German company known for inventing aspirin, has been stuck in a rut: Its market cap has plunged to two-decade lows—spurred by its so-far disastrous acquisition of Monsanto—and its CEO Bill Anderson believes that flattening hierarchy and slashing corporate bureaucracy could be key to turning it around.</p>



<p>When Anderson took the helm last June, he learned that the company’s rules and procedures handbook was longer than<em> </em><a href="https://www.youtube.com/watch?si=Zod8PkLwGmYRZ2r3&amp;v=_mubMfgrdIQ&amp;feature=youtu.be" target="_blank" rel="noopener"><em>War and Peace</em></a>. It’s why, he says, when he listened to feedback from the firm’s workforce, the same complaints surfaced repeatedly.&nbsp;</p>



<p>“They basically said: ‘Increasingly, we can’t get anything done,'” Anderson told <a href="https://www.businessinsider.com/bayer-bill-anderson-ceo-corporate-hierarchy-get-rid-of-bosses-2024-4" target="_blank" rel="noopener"><em>Business Insider</em></a>. “It’s just too hard to get ideas approved, or you have to consult with so many people to make anything happen.”</p>



<p>“We hire highly educated, trained people, and then we put them in these environments with rules and procedures and eight layers of hierarchy,” Anderson added. “Then we wonder why big companies are so lame most of the time.”</p>



<p>So, the company is going boss-less, or as he calls it, moving to “dynamic shared ownership.”</p>



<p>Whether or not it’s a fancy metaphor for a headcount reduction, Anderson has insisted that this new way of working could be revolutionary. “We don’t have to be that good to beat the current system,” the 57-year-old chief executive told the <a href="https://www.wsj.com/business/bayer-cuts-bosses-recovery-plan-f3c94865" target="_blank" rel="noopener"><em>Wall Street Journal</em></a><em>.</em></p>



<p>In the coming years, Bayer’s workforce will consist of constantly evolving “5,000 to 6,000 self-directed teams” that work together on projects of their choosing for 90 days, before regrouping for their next project.&nbsp;</p>



<p>Employees of Bayer’s consumer health division have already gotten a taste of this new structure—they’re being shown how to practically sign off on one another’s ideas without a manager in sight.</p>



<p>“Stand up, share an idea,” a corporate trainer ordered them during a training session, according to the<em> WSJ.</em> “You’re going to self-organize.”&nbsp;</p>



<h2>Is going boss-less enough to fix ‘broken’ Bayer?</h2>



<p>Whether or not Anderson’s plan lands, it will buy him time: The company is worth a quarter of its $122 billion peak from nine years ago, its shares have tanked by more than 50% in the last year, and investors are urging it to split.</p>



<p>The company has accumulated around €34.5 billion ($37.5 billion) in debt, not much less than the&nbsp;company’s €47.6 billion ($51.7 billion) in sales last year.</p>



<p>To top that off, since its acquisition of Monsanto in 2018, Bayer has been fighting thousands of claims that its <a href="https://fortune.com/2024/04/05/bayer-monsanto-roundup-weed-killer-supreme-court-ruling-punishment/" target="_self" rel="">Roundup weed killer causes cancer.</a></p>



<p>Even Anderson has compared the current state of the company to the time he fractured his leg skateboarding—“<a href="https://fortune.com/europe/2024/03/06/bayer-ceo-bill-anderson-pharma-fractured-leg-skateboarding-broken/" target="_self" rel="">badly broken</a>.” But looking ahead, he wrote in <em>Fortune </em>that<em> </em>“<a href="https://fortune.com/2024/03/21/bayer-ceo-bill-anderson-corporate-bureaucracy-19th-century-leadership/?utm_source=search&amp;utm_medium=suggested_search&amp;utm_campaign=search_link_clicks" target="_self" rel="">our radical reinvention will liberate our people</a>” while saving the company about €2 billion ($2.15 billion) in annual organizational costs by 2026.</p>



<h2>But cutting out middle management is nothing new</h2>



<p>It’s not clear exactly how many managers will be laid off or demoted. Bayer couldn’t confirm the exact figure to&nbsp;<em>Fortune&nbsp;</em>but a spokesperson said there will be “significant changes” and those impacted will be in the thousands, not hundreds. The<em> Journal</em> reported that 40% of management positions are headed for the chopping block in the U.S. pharmaceutical division alone.&nbsp;&nbsp;</p>



<p>Although Anderson is pitching the move as an innovative way of transforming its corporate hierarchy and giving employees more choice, trimming middle management to save costs and become more efficient is nothing new.&nbsp;</p>



<p>In fact, middle managers—defined as nonexecutives who oversee employees—made up almost a third of layoffs last year.</p>



<p>At Meta, where Mark Zuckerberg declared 2023 was going to be its “Year of Efficiency,” middle managers were the toll in that quest.&nbsp;&nbsp;</p>



<p>“I don’t think you want a management structure that’s just managers managing managers, managing managers, managing managers, managing the people who are doing the work,” Zuckerberg told staff in an <a href="https://www.theverge.com/2023/2/1/23581938/mark-zuckerberg-meta-earnings-q4-efficiency-cutting-managers" target="_blank" rel="noopener">all-hands meeting.</a></p>



<p>After laying off thousands of workers, the billionaire tech entrepreneur said that “<a href="https://about.fb.com/news/2023/03/mark-zuckerberg-meta-year-of-efficiency/" target="_blank" rel="noopener">flattening</a>” its internal hierarchy was core to its restructure—and he <a href="https://fortune.com/2023/06/09/mark-zuckerberg-elon-musk-twitter-meta-layoffs-middle-managers/" target="_self" rel="">credited Elon Musk</a> as the source of inspiration behind having “fewer layers of management.”</p>



<p>Meanwhile at <a href="https://fortune.com/company/alphabet/" target="_self" rel="">Google</a>—where more than 30,000 managers are employed—<a href="https://fortune.com/2023/02/06/middle-managers-tech-layoffs-efficiency-zuckerberg-facebook-google/" target="_self" rel="">12,000 people lost their jobs</a>, and at <a href="https://fortune.com/company/intel/" target="_self" rel="">Intel</a>, managers’ <a href="https://www.bloomberg.com/news/articles/2023-02-01/intel-cuts-pay-across-company-to-preserve-cash-for-investment" target="_blank" rel="noopener">pay was slashed</a>. Even beyond the tech industry, layoffs at <a href="https://www.efinancialcareers.co.uk/news/citigroup-s-20-000-job-cuts-are-not-what-you-think" target="_blank" rel="noopener">Citi</a> and <a href="https://fortune.com/company/fedex/" target="_self" rel="">FedEx</a> have massively impacted managers.</p></div></div>]]></description>
        </item>
    </channel>
</rss>