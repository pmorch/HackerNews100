<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 03 Feb 2024 17:00:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Physical cash is dying–and you don't need to be a conspiracist to worry (185 pts)]]></title>
            <link>https://www.prospectmagazine.co.uk/ideas/economics/64492/the-end-of-money-cashless-society</link>
            <guid>39239449</guid>
            <pubDate>Sat, 03 Feb 2024 11:46:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.prospectmagazine.co.uk/ideas/economics/64492/the-end-of-money-cashless-society">https://www.prospectmagazine.co.uk/ideas/economics/64492/the-end-of-money-cashless-society</a>, See on <a href="https://news.ycombinator.com/item?id=39239449">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
       <p id="e5lGRE2sAR9">One day over the summer, Piers Corbyn picked up a punnet of strawberries in the Aldi supermarket in Greenwich. He then went to the help desk and placed £1.19 in change on the counter. The controversial climate change denier and anti-vaxxer (and brother of former Labour leader Jeremy)—who, during the pandemic, released an unspeakable music video in which he sang “wearing a mask is like trying to keep a fart in your trousers” (the research is awaiting peer review)—was making a political point. This particular branch does not accept cash payments but tracks customers as they shop, before charging them via an app as they exit. Welcome to the cashless utopia—or, as Corbyn calls it, dystopia.</p><p id="eR4jAqSDVA0">Corbyn wasn’t having this Orwellian development. “So you people take that money—£1.19—and I will take my strawberries outside,” he tells staff, who, on the video he released on social media, can be heard remonstrating with him. “You can’t take that,” shouts one worker off camera, who advises him the police have been called. “If you want to call the police, call the police. I’ve paid my legal tender,” Corbyn retorts as he pushes his way through security gates designed only to be activated by the app. “Don’t break the doors,” shouts the same Aldi worker.&nbsp;</p><p id="euI88QTvOwk">Once outside, Corbyn victoriously hands out strawberries to supporters, telling them: “I paid by legal tender in this dystopian place.” “You should be able to spend whatever you want. It’s an absolute joke,” claims one of his supporters in the video.</p><p id="eYunPanMAuk">There are several problems with what Corbyn did, not least pompously calling supermarket workers “you people”. First, there is a Sainsbury’s opposite that almost certainly does take cash and whose strawberries, I imagine, are no less tasty than Aldi’s. More importantly, as critics pointed out on social media, Corbyn doesn’t grasp the concept of legal tender. “Most people think it means the shop has to accept the payment form. But that’s not the case,” explains the Bank of England website. “Legal tender has a narrow technical meaning which has no use in everyday life. It means that if you offer to fully pay off a debt to someone in legal tender, they can’t sue you for failing to repay.” In everyday life, shop owners can choose what payment they accept. If, say, you produce a £50 note to pay for a bunch of bananas, it’s perfectly legal for the shopkeeper to make sarcastic remarks and refuse your offer.</p><div><p id="ehtnQfv-GPZ">Physical cash, to the chagrin of Piers Corbyn, is in decline. It’s in such short supply that, in August, the Treasury moved to protect public demand for physical money by announcing that banks would be fined for failing to provide free access to cash withdrawals for consumers and businesses. “Whilst the growing choice and convenience of digital payments is great, cash has an important and continuing role to play,” said Andrew Griffith, economic secretary to the Treasury at the time. “People shouldn’t have to trek for hours to withdraw a tenner to put in someone’s birthday card—nor should businesses have to travel large distances to deposit cash takings.”</p></div><p id="enowLgIzX4Rv">But if the supply of cash is being safeguarded, is there really demand for it? When did you last put folding money inside a birthday card? According to research published in September by UK Finance, a trade association, nearly 22m Britons used cash only once a month or not at all in 2022. Just under one million mainly used cash. Since 2017, payments made by debit cards (including with phones and watches) have overtaken those made in physical cash. The trend may have been hastened by Covid: during lockdown, fewer retailers than ever wanted the loose change from Piers Corbyn’s or anybody else’s trousers, for fear that it could spread infection. But the decline is structural: the volume of UK payments that do not involve cash rose from 45 to 85 per cent in the decade to 2021.</p><p id="e4MTKlXkr_de">That said, something striking happened once the pandemic eased. For the first time in a decade, cash payments rose—admittedly only by 7 per cent, but bucking the longer-term trend. Why? UK Finance cites anecdotal evidence that, in a cost-of-living crisis and with inflation for a while into double figures, people were finding it easier to manage their money by paying in cash.</p><p id="eXa6-VaQ2Op">The long-term decline in the use of cash may be disappointing to one man in particular: King Charles III. After an unconscionable wait, the septuagenarian is finally getting his mug on the coins of the realm—only for fewer Britons to be using them than did during mummy’s reign. That, perhaps, is a shame, because these rather beautiful new coins that will enter circulation by the end of next year have been devised to nudge those who hold them in their hot little hands to behave in two socially interesting ways. Each coin has the denomination marked out in large numerals next to images of Britain’s flora and fauna, including threatened species. The 1p coin, for instance, depicts a hazel dormouse, which has seen its population halve since 2007. The 10p features a capercaillie, the world’s largest grouse, which can be found in a small part of Scotland and is threatened with extinction. Rebecca Morgan, director at the Royal Mint, explained the value of this new coinage: “The large numbers will be very appealing to children who are learning to count and about the use of money. Also, the animals and everything you see on these coins will appeal to children. They are great conversation starters.”</p><div><p id="e7gGGYCDGHx">One of the great joys of paying in cash is that it doesn’t leave a digital trail. Physical money can do things—encourage numeracy, make us realise that we need to act to save the capercaillie before it’s too late—that swiping a debit card on a soulless digital reader never will.</p></div><p id="eZYI0dWiZ7qH">The decline in cash is unwelcome, not just to Piers Corbyn, kings and the Mint’s design team, but to those who, voluntarily or otherwise, don’t have bank accounts. It may also create understandable worries regarding the drift of our digitised societies to a place where our every keystroke, phone call and eyeball roll is digitally harvested—by shady tech bros with shareholders to satisfy or authoritarian rulers with dubious agendas—in ways that would make Big Brother envious.&nbsp;</p><p id="ewkPaO3ab99">Cash, by contrast, is an “anonymous bearer instrument”, meaning it is traded without any records and payable to anyone (the opposite is an “order instrument” payable to a specific person). The Piers Corbynites apparently believe that cash liberates us from totalitarian oversight by the Man. Unless, of course, you decide, as Corbyn did when he took his stand in Aldi, to film the exchange and post it online.&nbsp;</p><p id="ez9ug1oQfPM">If the Orwellian ramifications of the rise of cashlessness seem far-fetched, consider what happened in Kenya last August. As Corbyn was paying for his strawberries in Greenwich, thousands were queuing in Nairobi to have their eyeballs scanned as part of the “Worldcoin” project, founded by OpenAI chief Sam Altman. In exchange for handing over their biometric data, some 350,000 Kenyans each received 25 free crypto tokens, worth approximately $50. Those tokens were transferred directly via Kenya’s main mobile payments app, M-Pesa.</p><p>

    <picture>
  <img data-src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/4a121e17c610-jeffries-inset1-ap-photoemilio-morenatti.jpg" alt="The stuff of science fiction: a man has his eye scanned by an orb for biometric registration to the cryptocurrency Worldcoin" src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/4a121e17c610-jeffries-inset1-ap-photoemilio-morenatti.jpg">
</picture>


      <span>The stuff of science fiction: a man has his eye scanned by an orb for biometric registration to the cryptocurrency Worldcoin © AP/Emilio Morenatti/Sipa Asia/Shutterstock</span>
</p><p id="etk8c4Kcpcu">But Worldcoin faced what’s being called a techlash over this project, not least because it seems like dystopian ­science fiction. A hardware unit known as an orb scans irises to identify individuals and prove they are human. Being able to verify a person in that way will be a key part of the new digital economy when artificial intelligence is integrated into society, according to the company.</p><p id="eXQXFhlIwfG">When the Kenyan government stepped in a week after Worldcoin’s launch in the east African republic to establish “the authenticity and legality of the aforesaid activities”, it was possibly also motivated by revulsion for what looks like a neo-colonialist enterprise predicated on plundering human data in ways redolent of how British imperialists violently exploited Kenya’s natural resources and human beings.</p><p id="ehhmdS2KRvf">Rachel O’Dwyer, lecturer in digital cultures at the National College of Art and Design in Dublin, argues that Altman’s Worldcoin project is symptomatic of a wider development of major digital platforms now trading your digital identity for “tokens”. “By tokens, I mean money-like things ranging from airtime credit and loyalty points to game tokens… and gift balances.” She also means NFTs—non-fungible tokens—unique digital assets that have turned the art world on its head, inducing it to value not boring old paintings and sculptures but works that exist only digitally.&nbsp;</p><blockquote>
 <p id="egk217C73F">One of the great joys of paying in cash is that it doesn’t leave a digital trail</p>
</blockquote><p id="ebdBQY4Dd_cr">“Tokens have always ghosted the economy of publicly mandated currency, but now they are coming to the fore, threatening to replace money itself. It raises the question: was money only ever a blip?”</p><p id="e0BKfbKk5mmZ">In her riveting new book <em>Tokens: The Future of Money in the Age of the Platform</em>, O’Dwyer argues that online platforms are becoming the new banks. Handing over one’s biometric data can be the condition of admission to this new monetary regime—something O’Dwyer describes as a Faustian pact.</p><p id="eNX-kXUi0wSx">But what does it mean when online platforms become the new banks? The radical dream that began with bitcoin inventor Satoshi Nakamoto’s breakthrough 2008 paper, “Bitcoin: A Peer-to-Peer Electronic Cash System”, was to cut out untrustworthy middlemen—especially central bankers—and realise a radical future of decentralised authority. This would allow, for instance, Argentine citizens to escape hyperinflation by holding bitcoin, not pesos.&nbsp;</p><div>
    <p><img data-src="https://media.prospectmagazine.co.uk/prod/images/portrait_small_fit/59a462301f32-prospectmar24cover-rgb.jpg" alt="magazine block image" src="https://media.prospectmagazine.co.uk/prod/images/portrait_small_fit/59a462301f32-prospectmar24cover-rgb.jpg"></p>
  </div><p id="edVhsi1I7XK8">Nakamoto’s innovation was creating a distributed ledger, a global registry of transactions that was not held by a single bank—as with a credit card—but by thousands of independent bitcoin “miners”. Because this “blockchain” is held not by a single entity but—at least in theory—by thousands of independent users, the need for a central, third-party authority is obviated and banks might become obsolete.</p><p id="ecQkw47azhR1">Fifteen years on, the dreams behind bitcoin’s radical reinvention of money have not been realised, just as the vision of a decentralised, uncensored, free internet foundered with its commercialisation. The cryptocurrency space has been taken over by charlatans and swindlers.</p><p id="eecckgTWploj">The consequence of all this is that bank-controlled cash appears—at least to those of a dystopian temper—to be at risk of steady replacement by payment in tokens. And examples of that development are not limited to Worldcoin.</p><p id="ep2S_w73OQri">Consider Amazon’s Mechanical Turk, a (bizarrely named) website owned by the vast retail multinational where humans are employed online to do tasks which, for the time being at least, are not suitable for artificial intelligence. This might include identifying specific content in an image or video, writing product descriptions or answering survey questions. The online ad reads: “Make money in your spare time. Get paid for completing simple tasks.” But, as O’Dwyer points out, thousands of Mechanical Turks without US bank accounts are not paid in cash—they are paid in Amazon gift cards.&nbsp;</p><p>

    <picture>
  <img data-src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/2201ea812c7e-jeffries-inset2-sipa-asiashutterstock.jpg" alt="The stuff of science fiction: top, a man has his eye scanned by an orb for biometric registration to the cryptocurrency Worldcoin; bottom, the world’s first large-scale crypto art exhibition in Beijing back in 2021. Images: AP/Emilio Morenatti/Sipa Asia/Shutterstock" src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/2201ea812c7e-jeffries-inset2-sipa-asiashutterstock.jpg">
</picture>


      <span>The world’s first large-scale crypto art exhibition in Beijing back in 2021 © AP/Emilio Morenatti/Sipa Asia/Shutterstock</span>
</p><p id="e99vmCaNP114">O’Dwyer argues such closed loops of token-based remuneration constrain freedom, and they are becoming more commonplace. In the United States, for instance, food stamps—known as SNAP benefits—are pre-loaded onto Electronic Benefits Transfer cards. These tokens can be used for fresh produce, but not alcohol. When I suggest to O’Dwyer that this sounds like fairly benign social nudge theory in action, she counters that the tokens cannot be used to pay for hygiene products such as tampons, nor for vitamins or medicines. What’s more, tokens can be used for cold deli food, but not for hot meals. “Why cold, pre-cooked meat but not half a rotisserie chicken? It seems there is something too ‘easy’—too idle, maybe—about buying a hot meal for your family using benefits.”&nbsp;</p><p id="eM_xSZwMu-9D">But such nudging through state payments to change behaviour is not new. In 2003, for instance, the Bolsa Família card was released in Brazil, giving households below the poverty line a monthly stipend of around $20 per vaccinated child attending school. In 2016, the UN World Food Programme trialled a system that issued relief payments through the use of biometrics. Refugees were able to buy items from the supermarket using their biometric data as a credential: all they needed to do was scan their iris to pay for an item. The idea was to improve convenience and prevent fraud. Since that trial, the World Food Programme’s Building Blocks initiative has become the world’s largest humanitarian use of blockchain technology. The WFP estimates it is responsible for financially supporting four million people each month in countries including Bangladesh, Jordan and, since mid-2022, Ukraine. The WFP reckons this technology helps tailor its support to meet humanitarian needs.&nbsp;</p><p id="eAZUghu3cDcN">O’Dwyer, though, has worries about this trend. Tokens can also be programmed to specify not only an exchange value, but a whole range of other terms and conditions that must be met before an exchange will take place. “Whose values are these? We’re not at liberty to know,” O’Dwyer says. This, no doubt, is what worries Piers Corbyn and his followers.</p><p id="eCGGtBg3N1Lr">Unlike him, though, O’Dwyer takes heart from human subversiveness in undermining the values of state-­proffered tokens. In Ireland in the 1980s, she tells me, there was a surfeit of butter resulting from the EU’s Common Agricultural Policy. There was so much butter—piled into great butter mountains, or stacked up like what O’Dwyer drolly calls “Kerrygold bullion”—that butter vouchers were issued to the poor and needy, effectively padding out dole money with food stamps. “MUST NOT BE EXCHANGED FOR ITEMS OTHER THAN BUTTER,” said the booklet that held the vouchers. But people did, with the assistance of sympathetic shopkeepers. The vouchers were accepted as payment for tobacco, alcohol and groceries. “They were passed around. People even put them to non-transactional uses—as a decoy for insurance discs displayed on a car’s windshield, one official paper masquerading as another.” You couldn’t have done that with physical money.&nbsp;</p><p id="eSBSrOaJvVP">I mention this phenomenon to Jen Parker, operations manager of the Oasis Partnership, a charity for supporting vulnerable people in Buckinghamshire. Six months ago, the partnership became involved in a project in High Wycombe to cut down on anti-social begging through the creation of three “diverted giving points”. These are card terminals allowing locals to make donations to groups offering assistance with shelter, food, and drugs and alcohol support. The hope for Thames Valley Police and local councillors backing the scheme was that scammers posing as beggars, deprived of cash handouts, would cease operations, thus reducing street unpleasantness in the town. “We thought it was a good way to ensure funds were given to the homeless community rather than going to services that wouldn’t help that community,” Parker tells me.</p><p id="eK9H_HcYzlB">The scheme also had the added benefit of encouraging locals to donate by swiping their cards—crucial when fewer people than ever have cash in their pockets. “I’m as guilty of this as anyone,” Parker says. “I just don’t carry cash around anymore. In the past I would have donated that way, but for a lot of people that’s not happening anymore, so initiatives like this are important.”&nbsp;</p><p>

    <picture>
  <img data-src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/8ce87f8dbede-jeffries-inset3-sipa-us-alamy-stock-photo.jpg" alt="Beggars in China with QR codes which collect personal data rather than money © Sipa US" src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/8ce87f8dbede-jeffries-inset3-sipa-us-alamy-stock-photo.jpg">
</picture>


      <span>Beggars in China with QR codes which collect personal data rather than money © Sipa US</span>
</p><p id="eI-DhyI2Lu0U">“We weren’t sure how much money we would make from these diverted giving points, but we planned to consult with homeless people through our… outreach workers and supply them with what they want—sleeping bags, food, whatever.”</p><p id="ewKqQLZZCng3">Sadly, Parker tells me, after six months, the scheme has only raised £200. “Whether that’s because people are not aware of them [the card terminals] I don’t know, but we haven’t much to spend on marketing. It might also be because High Wycombe is not that prosperous. There’s a similar scheme in Windsor which is probably more successful.”</p><p id="edjQZCbhRb2A">When I mention how Chinese beggars are equipped with QR codes, Parker surprises me by being enthusiastic. “It’s quite enterprising and it’s not as though anybody’s being coerced. If people want to give away their private data to help homeless beggars, that’s their choice. My concern would be, is the homeless person being paid a fair wage for effectively doing this work for these companies? If they are, then it seems quite a good system.</p><p id="eOiCPTNNd-Vy">“We have to think of new ways of financially supporting homeless people because their days of shaking a bucket for cash are over.”</p><blockquote>
 <p id="e8LhG1KQeAG">Some have rebelled against the money fetish by burning vast wodges of cash</p>
</blockquote><p id="ezgQyNQh96M">If so, that is a big change. Physical money has been part of human society for thousands of years. In early 2021, the world’s earliest known coin-minting site was uncovered in Henan Province, China—it dates back to 650BC.</p><p id="ecJOuoJUPMG">Karl Marx detected a downside to the monetary phenomenon, writing that “Money is the alienated essence of man’s labour and life; and this alien essence dominates him as he worships it.” In our godless age, the money fetish has replaced earlier deities, which has led some to rebel by burning vast wodges of cash. For instance, on 23rd August 1994, the chaotic music duo and performance artists Bill Drummond and Jimmy Cauty burned £1m of notes behind a boathouse on the Scottish island of Jura. They are not alone in attempting to reduce money’s power by sacrificing it to the flames. Jonathan Harris, also known as MBG (Money Burning Guy), has been burning money since 2007. “I see it as a ritual of disenchantment,” he has explained, “a de-fetishisation of money, a rite that paves the way for a new narrative.” Harris, author of <em>The Money Burner’s Manual: A Guide to Ritual Sacrifice</em>, claims on burnyourmoney.org that he and like-minded cash destroyers have burned £7,266,157 since 1969.&nbsp;</p><p>

    <picture>
  <img data-src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/63862012df42-jeffries-inset4-via-youtube.jpg" alt="The disconcerting and the downright daft: top, beggars in China with QR codes which collect personal data rather than money; bottom, Piers Corbyn during his stunt buying strawberries at a cashless Aldi. Images: Sipa US/Alamy Stock Photo/via YouTube" src="https://media.prospectmagazine.co.uk/prod/images/gm_preview/63862012df42-jeffries-inset4-via-youtube.jpg">
</picture>


      <span>Piers Corbyn during his stunt buying strawberries at a cashless Aldi © Alamy Stock Photo/via YouTube</span>
</p><p id="etBSIn8Fwa2N">Harris describes himself as high priest of the churchofburn.org, whose homepage is emblazoned with this quote from Charlie Waterhouse of Extinction Rebellion: “Church of Burn is a portal into a glorious world we’re not supposed to see. Where money’s power is revoked, reclaimed and reassigned. A sacrificial rite that rewrites our failing modern world. For once one has burnt money, what else is possible?” Such thinking suggests that Piers Corbyn doesn’t go far enough—he’s still championing physical cash.&nbsp;</p><div><p id="eKEr5fxi3Gm">For those who despise money itself, we should worry not just about the rise of cashless Aldis but such bizarre new phenomena as <em>Axie Infinity</em>. This is an online video game based around NFTs—themselves a mind-bending new development in the way society (or the very online parts of it) understands value—and developed by Vietnamese studio Sky Mavis. The game involves breeding and trading cartoon axolotls (a type of salamander) which can be swapped for money and which earn tokens that can also be swapped for money. During the pandemic, players in the Philippines and elsewhere made this game their work, collecting digital cartoon characters and using them to cash out. They converted the airy nothings of cyberspace into pesos.</p></div><p id="etZq_2LIIgIn">O’Dwyer sounds an optimistic note. Irish butter mountain subversives from the 1980s have their spiritual descendants today. Tokens are “lively and subversive,” she writes. “Users online and on the ground remake them to be paid in informal economies, to communicate, to protest, and to reimagine money… Gig workers, streamers, gamers and sex workers still find ways of transforming online gift cards, wish lists… and gaming tokens into liquid cash.” The future of money, even if it doesn’t include the physical cash that Piers Corbyn romanticises, may not be entirely dystopian.&nbsp;</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple releases Pkl – configuration as code language (405 pts)]]></title>
            <link>https://pkl-lang.org/index.html</link>
            <guid>39239265</guid>
            <pubDate>Sat, 03 Feb 2024 11:12:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pkl-lang.org/index.html">https://pkl-lang.org/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=39239265">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<div>
<p>Configuration that is <strong>Programmable</strong>, <strong>Scalable</strong>, and <strong>Safe</strong></p>
</div>
<div>
<div>
<div>
<p>bird.pkl</p>
<div>
<pre><code data-lang="pkl"><span>name</span> <span>=</span> <span>"Swallow"</span>

<span>job</span> <span>{</span>
  <span>title</span> <span>=</span> <span>"Sr. Nest Maker"</span>
  <span>company</span> <span>=</span> <span>"Nests R Us"</span>
  <span>yearsOfExperience</span> <span>=</span> <span>2</span>
<span>}</span></code></pre>
</div>
</div>
<p>↓</p>

<div id="tabpanel-1" role="tabpanel" tabindex="0" aria-labelledby="tab-1">
<pre><code data-lang="json">{
  "name": "Swallow",
  "job": {
    "title": "Sr. Nest Maker",
    "company": "Nests R Us",
    "yearsOfExperience": 2
  }
}</code></pre>
</div>



</div>
<div>
<div>
<p>Generate any static configuration format</p>
</div>
<p>Define all your data in Pkl, and generate output for JSON, YAML, Property Lists, and other
configuration formats.</p>
</div>
</div>
<div>
<div>
<div>
<p>Integrated application configuration</p>
</div>
<p>Embed Pkl into your applications for runtime configuration, and receive code generation for
<strong>Java</strong>, <strong>Kotlin</strong>, <strong>Swift</strong>, and <strong>Go</strong>.</p>
<p><span><img src="https://pkl-lang.org/_images/java_logo.svg" alt="java logo"></span> <span><img src="https://pkl-lang.org/_images/kotlin_logo.svg" alt="kotlin logo"></span> <span><img src="https://pkl-lang.org/_images/swift_logo.svg" alt="swift logo"></span> <span><img src="https://pkl-lang.org/_images/go_logo.svg" alt="go logo"></span></p>
</div>
<div id="tabpanel2-1" role="tabpanel" tabindex="0" aria-labelledby="tab2-1">
<pre><code data-lang="pkl"><span>module</span> <span>example</span><span>.</span><span>MyAppConfig</span>

<span>/// The hostname for the application</span>
<span>host</span><span>:</span> <span>String</span>

<span>/// The port to listen on</span>
<span>port</span><span>:</span> <span>UInt16</span><span>(</span><span>this</span> <span>&gt;</span> <span>1000</span><span>)</span></code></pre>
</div>
</div>
<div>
<div>
<p><img src="https://pkl-lang.org/_images/intellij.gif" alt="intellij">
</p>
</div>
<div>
<div>
<p>Incredible IDE Integration</p>
</div>
<p>Great tooling for writing Pkl with the same ease as a static typed language. We offer plugins and extensions for IntelliJ, Visual Studio Code and Neovim, with Language Server Protocol support coming soon.</p>
</div>
</div>
<div>
<div>
<div>
<p>Catch errors before deployment</p>
</div>
<p>With a rich type and validation system, catch configuration errors before deploying your application.</p>
</div>
<div>
<div>
<pre><code data-lang="pkl"><span>email</span><span>:</span> <span>String</span> <span>=</span> <span>"dev-team@company.com"</span>

<span>port</span><span>:</span> <span>Int</span><span>(</span><span>this</span> <span>&gt;</span> <span>1000</span><span>)</span> <span>=</span> <span>80</span></code></pre>
</div>
<p>↓</p>
<div>
<pre><code data-lang="shell">–– Pkl Error ––
Type constraint `this &gt; 1000` violated.
Value: 80

3 | port: Int(this &gt; 1000) = 80
              ^^^^^^^^^^^
at config#port (config.pkl, line 3)

3 | port: Int(this &gt; 1000) = 80
                             ^^
at config#port (config.pkl, line 3)

106 | text = renderer.renderDocument(value)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^</code></pre>
</div>
</div>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FOSDEM 2024 Live Streams (144 pts)]]></title>
            <link>https://fosdem.org/2024/schedule/streaming/</link>
            <guid>39238691</guid>
            <pubDate>Sat, 03 Feb 2024 09:05:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fosdem.org/2024/schedule/streaming/">https://fosdem.org/2024/schedule/streaming/</a>, See on <a href="https://news.ycombinator.com/item?id=39238691">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
      
      <ul>
        <li><a href="https://fosdem.org/2024/">FOSDEM 2024</a></li><li>/</li><li><a href="https://fosdem.org/2024/schedule/">Schedule</a></li><li>/</li><li>Live Streaming</li>
      </ul>
      

      
        
      

      

<p>Links to the live streaming in each room will appear on this page during the conference.
</p><p>Static overviews of the <a href="https://fosdem.org/2024/schedule/rooms/">rooms</a> and the 
<a href="https://fosdem.org/2024/schedule/roomtracks/">room occupation by track</a>
are available, too.</p>
<table>
  <thead>
    <tr>
      <th></th>
      <th>Room Schedule</th>
      
        <th>Saturday</th>
      
      
      
	<th>Happening Now (15:57 Saturday)</th>
	<th></th>
      
    </tr>
  </thead>
  <tbody>
    
        <tr>
          
            <th rowspan="2">J</th>
          
          <td><a href="https://fosdem.org/2024/schedule/room/janson/">Janson</a></td>
          
            
              
              <td>09:30-18:55: <a href="https://fosdem.org/2024/schedule/track/keynote/">Keynotes</a>, <a href="https://fosdem.org/2024/schedule/track/main_track_janson/">Main Track - Janson</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2871-ingesting-and-analyzing-millions-of-events-per-second-in-real-time-using-open-source-tools/">Ingesting and analyzing millions of events per second in real-time using open source tools<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/98CH89/">javier ramirez</a> (16:00-16:50)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/janson">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/j1106/">J.1.106</a></td>
          
            
              
              <td>10:30-18:30: <a href="https://fosdem.org/2024/schedule/track/educational/">FOSS Educational Programming Languages devroom</a>, <a href="https://fosdem.org/2024/schedule/track/junior/">FOSDEM junior</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3526-zim-workshop/">ZIM Workshop<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/VD3M7Y/">Karel Rosseel</a> (15:10-16:10)</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
      
    
        <tr>
          
            <th rowspan="6">K</th>
          
          <td><a href="https://fosdem.org/2024/schedule/room/k1105/">K.1.105 (La Fontaine)</a></td>
          
            
              
              <td>10:00-18:50: <a href="https://fosdem.org/2024/schedule/track/main_track_k_building/">Main Track - K Building</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2092-the-d-programming-language-for-modern-open-source-development/">The D Programming Language for Modern Open Source Development<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/X7E88B/">Mike Shah</a> (16:00-16:50)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/k1105">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/k3201/">K.3.201</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/software-defined-storage/">Software Defined Storage devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3281-chorus-effortless-ceph-s3-petabyte-migration/">Chorus - Effortless Ceph S3 Petabyte Migration<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/B8EAPD/">Sirisha Guduru</a> (15:30-16:00)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/k3201">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/k3401/">K.3.401</a></td>
          
            
              
              <td>10:30-18:40: <a href="https://fosdem.org/2024/schedule/track/perl-raku/">Perl and Raku devroom</a>, <a href="https://fosdem.org/2024/schedule/track/ruby/">Ruby devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2273-a-front-end-journey-back-to-rails/">A front-end journey back to Rails<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/VCQEFJ/">Kevin Vanzandberghe</a> (15:45-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/k3401">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/k4201/">K.4.201</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/libre-soc-fpga-and-vlsi/">Libre-SOC, FPGA and VLSI devroom</a>, <a href="https://fosdem.org/2024/schedule/track/dns/">DNS devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2835-algo-rollover-for-nl/">Algo-rollover for .nl<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/JCCKNH/">Stefan Ubbink</a> (16:00-16:30)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/k4201">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/k4401/">K.4.401</a></td>
          
            
              
              <td>10:30-18:20: <a href="https://fosdem.org/2024/schedule/track/railways-and-open-transport/">Railways and Open Transport devroom</a>, <a href="https://fosdem.org/2024/schedule/track/debuggers-and-analysis/">Debuggers and analysis tools devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1857-help-us-improve-time-manipulation-with-gdb/">Help us improve time manipulation with GDB<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/NHVLZ3/">Guinevere Larsen</a> (15:55-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/k4401">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/k4601/">K.4.601</a></td>
          
            
              
              <td>10:30-18:35: <a href="https://fosdem.org/2024/schedule/track/erlang/">Erlang, Elixir, Gleam and Friends devroom</a>, <a href="https://fosdem.org/2024/schedule/track/tool-the-docs/">Tool the docs devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2320-taming-abstraction/">Taming Abstraction<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/9B8G33/">Richard Smedley</a> (15:45-16:10)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/k4601">Watch Live!</a></td>
	    
	  
        </tr>
        
      
    
        <tr>
          
            <th rowspan="10">H</th>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h1301/">H.1301 (Cornil)</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/javascript/">JavaScript devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3665-building-your-own-javascript-runtime-with-rust/">Building your own JavaScript runtime with Rust<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/R7XBZT/">Leo Kettmeir</a> (15:40-16:10)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h1301">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h1302/">H.1302 (Depage)</a></td>
          
            
              
              <td>10:30-18:25: <a href="https://fosdem.org/2024/schedule/track/real-time-communications/">Real Time Communications (RTC) devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1806-moving-real-time-ai-inference-to-the-edge-with-infernos/">Moving real-time AI inference to the edge with Infernos<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/QHGAD3/">Maksym Sobolyev</a> (15:50-16:25)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h1302">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h1308/">H.1308 (Rolin)</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/rust/">Rust devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2703-a-deep-dive-into-tower/">A Deep Dive into Tower<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/QQTNWH/">Adrien Guillo</a> (16:00-16:40)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h1308">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h1309/">H.1309 (Van Rijn)</a></td>
          
            
              
              <td>10:30-18:55: <a href="https://fosdem.org/2024/schedule/track/foss-on-mobile-devices/">FOSS on Mobile Devices devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2972-wayland-s-input-method-is-broken-and-it-s-my-fault/">Wayland's input-method is broken and it's my fault<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/JJYLKL/">dcz</a> (16:00-16:25)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h1309">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h2111/">H.2111</a></td>
          
            
              <td>-</td>
            
          
	  
	    
	    
	      <td>No event scheduled.</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h2213/">H.2213</a></td>
          
            
              
              <td>10:30-18:35: <a href="https://fosdem.org/2024/schedule/track/collaboration-and_content-management/">Collaboration and Content Management devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3317-web-accessibility-and-environmental-sustainability-and-with-popular-cms/">Web Accessibility and Environmental Sustainability and with Popular CMS<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/89N3FA/">Mike Gifford</a> (15:50-16:35)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h2213">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h2214/">H.2214</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/energy/">Energy: Reimagining this Ecosystem through Open Source devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2614-can-open-source-development-drive-energy-transition-pypsa-earth-experience/">Can open source development drive energy transition? PyPSA-Earth experience<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/VMAQ8Y/">Ekaterina Fedotova</a> (16:00-16:25)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h2214">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h2215/">H.2215 (Ferrer)</a></td>
          
            
              
              <td>11:00-16:55: <a href="https://fosdem.org/2024/schedule/track/lightning_talks/">Lightning talks</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3662--serde-memdbg-sux-dsi-bitstream-webgraph-a-rust-ecosystem-for-large-graph-processing/">ε-serde / mem_dbg / sux / dsi-bitstream / webgraph: a Rust ecosystem for large graph processing<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/HXPKPK/">Sebastiano Vigna</a> (16:00-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/h2215">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h3242/">H.3242</a></td>
          
            
              <td>-</td>
            
          
	  
	    
	    
	      <td>No event scheduled.</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/h3244/">H.3244</a></td>
          
            
              <td>-</td>
            
          
	  
	    
	    
	      <td>No event scheduled.</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
      
    
        <tr>
          
            <th rowspan="14">U</th>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ua2114/">UA2.114 (Baudoux)</a></td>
          
            
              
              <td>15:00-18:05: <a href="https://fosdem.org/2024/schedule/track/community/">Community devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2310-meritocracy-or-do-ocracy-why-diversity-is-still-hard-and-what-can-we-do/">Meritocracy or Do-ocracy - why diversity is still hard and what can we do<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/M33RFP/">Cheuk Ting Ho</a> (15:45-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ua2114">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ua2118/">UA2.118 (Henriot)</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/hpc-big-data-data-science/">HPC, Big Data &amp; Data Science devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1784-semantically-driven-data-management-solution-for-i-o-intensive-hpc-workflows/">Semantically-driven data management solution for I/O intensive HPC workflows<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/YLUCS3/">Metin Cakircali</a> (16:00-16:30)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ua2118">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ua2220/">UA2.220 (Guillissen)</a></td>
          
            
              
              <td>15:00-19:00: <a href="https://fosdem.org/2024/schedule/track/legal/">Legal and Policy Issues devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2595-figuring-out-trademark-policy-on-the-fly/">Figuring out trademark policy on the fly<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/F3MQDJ/">Peter Eisentraut</a> (16:00-16:30)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ua2220">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub2147/">UB2.147</a></td>
          
            
              
              <td>10:30-18:00: <a href="https://fosdem.org/2024/schedule/track/virtualization-and-cloud-infrastructure/">Virtualization and Cloud Infrastructure devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1686-pipewire-audio-backend-in-qemu/">Pipewire audio backend in QEMU<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/C8BTZX/">Dorinda Bassey</a> (16:00-16:30)</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub2252a/">UB2.252A (Lameere)</a></td>
          
            
              
              <td>10:30-18:55: <a href="https://fosdem.org/2024/schedule/track/containers/">Containers devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1745-orchestrating-ebpf-applications-in-kubernetes-and-fedora/">Orchestrating eBPF Applications in Kubernetes and Fedora<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/KJF3MC/">Daniel Mellado</a>, <a href="https://fosdem.org/2024/schedule/speaker/9ZFXMD/">Dave Tucker</a> (15:40-16:10)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ub2252a">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub4132/">UB4.132</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/open-research/">Open Research devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3452-unlocking-research-data-management-with-inveniordm/">Unlocking Research Data Management with InvenioRDM<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/UTFYTH/">Javier</a>, <a href="https://fosdem.org/2024/schedule/speaker/8LWATJ/">Karolina</a>, <a href="https://fosdem.org/2024/schedule/speaker/FTWQWY/">Nicola</a> (16:00-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ub4132">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub4136/">UB4.136</a></td>
          
            
              <td>-</td>
            
          
	  
	    
	    
	      <td>No event scheduled.</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub4228/">UB4.228</a></td>
          
            
              <td>-</td>
            
          
	  
	    
	    
	      <td>No event scheduled.</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub5132/">UB5.132</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/free-java/">Free Java devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3454-zeroing-and-the-semantic-gap-between-host-and-guest/">Zeroing and the semantic gap between host and guest<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/ZZTDLL/">Volker Simonis</a> (15:50-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ub5132">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ub5230/">UB5.230</a></td>
          
            
              
              <td>10:30-18:35: <a href="https://fosdem.org/2024/schedule/track/network/">Network devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1818-bringing-routes-to-kubernetes-nodes-via-bgp-introducing-frr-k8s/">Bringing routes to Kubernetes nodes via BGP: introducing frr-k8s<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/YNBDXM/">Federico Paolinelli</a> (15:50-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ub5230">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ud2120/">UD2.120 (Chavanne)</a></td>
          
            
              
              <td>10:30-18:55: <a href="https://fosdem.org/2024/schedule/track/embedded-mobile-and-automotive/">Embedded, Mobile and Automotive devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-1725-zephyr-and-risc-v-i-ain-t-afraid-of-no-ghosts/">Zephyr and RISC-V: I Ain't Afraid Of No Ghosts<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/BRFSVJ/">Mohammed Billoo</a> (16:00-16:25)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ud2120">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ud2218a/">UD2.218A</a></td>
          
            
              
              <td>10:30-19:00: <a href="https://fosdem.org/2024/schedule/track/go/">Go devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2621-low-code-graphical-apps-with-go-top-to-bottom-/">Low code graphical apps with Go top to bottom!<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/Z8XBM7/">Andrew Williams</a> (16:00-16:30)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ud2218a">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ud2110/">UD2.110</a></td>
          
            
              <td>-</td>
            
          
	  
	    
	    
	      <td>No event scheduled.</td>
	    
	    
	      <td></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/ud2208/">UD2.208 (Decroly)</a></td>
          
            
              
              <td>15:00-19:00: <a href="https://fosdem.org/2024/schedule/track/microkernel/">Microkernel and Component-based OS devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3269-run-node-js-in-a-unikernel-reliably/">Run Node.js in a unikernel reliably<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/EPDHGF/">Andreia Ocanoaia</a> (15:50-16:10)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/ud2208">Watch Live!</a></td>
	    
	  
        </tr>
        
      
    
        <tr>
          
            <th rowspan="3">AW</th>
          
          <td><a href="https://fosdem.org/2024/schedule/room/aw1120/">AW1.120</a></td>
          
            
              
              <td>15:00-19:00: <a href="https://fosdem.org/2024/schedule/track/public-code-and-digital-public-goods/">Public Code and Digital Public Goods devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2818-some-updates-on-public-code-in-germany/">Some updates on Public Code in Germany<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/QRFUPD/">Marco</a> (15:45-16:15)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/aw1120">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/aw1121/">AW1.121</a></td>
          
            
              
              <td>10:30-17:30: <a href="https://fosdem.org/2024/schedule/track/bofc/">BOF - Track C</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-3715-flathub-flatpak-bof/">Flathub / Flatpak BOF<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/CYT9EL/">Bartłomiej Piotrowski</a>, <a href="https://fosdem.org/2024/schedule/speaker/TS8KFC/">razze</a> (16:00-17:00)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/aw1121">Watch Live!</a></td>
	    
	  
        </tr>
        
        <tr>
          
          <td><a href="https://fosdem.org/2024/schedule/room/aw1126/">AW1.126</a></td>
          
            
              
              <td>10:30-18:55: <a href="https://fosdem.org/2024/schedule/track/api/">APIs &amp; friends devroom</a>, <a href="https://fosdem.org/2024/schedule/track/open-source-design/">Open Source Design devroom</a></td>
            
          
	  
	    
	    
	      <td><a href="https://fosdem.org/2024/schedule/event/fosdem-2024-2897-liquid-prompt-yes-we-can-drastically-rethink-the-design-of-a-shell-prompt/">Liquid Prompt: yes, we can drastically rethink the design of a shell prompt<br><i></i></a> - <a href="https://fosdem.org/2024/schedule/speaker/ZRHLCN/">nojhan</a> (16:00-16:25)</td>
	    
	    
            <td><a href="https://live.fosdem.org/watch/aw1126">Watch Live!</a></td>
	    
	  
        </tr>
        
      
    
    
    
    
  </tbody>
</table>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[JetBrains' unremovable AI assistant meets irresistible outcry (233 pts)]]></title>
            <link>https://www.theregister.com/2024/02/01/jetbrains_unremovable_ai_assistant/</link>
            <guid>39238666</guid>
            <pubDate>Sat, 03 Feb 2024 08:59:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2024/02/01/jetbrains_unremovable_ai_assistant/">https://www.theregister.com/2024/02/01/jetbrains_unremovable_ai_assistant/</a>, See on <a href="https://news.ycombinator.com/item?id=39238666">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>JetBrains introduced an AI assistant in December to help programmers write code. Now the biz is trying to figure out how to allow its customers to get rid of it.</p>
<p>"JetBrains AI Assistant is similar to GitHub Copilot, but it’s deeply integrated into JetBrains development environments (IDEs), code editors, and other products," the software development tool maker, based in the Czech Republic, said at the time.</p>
<p>While neural-network-powered services have been widely hyped, they come with baggage – concerns about the security, legal risk, privacy, and ethics of large language models remain largely unresolved.</p>

    

<p>Google, Microsoft, and OpenAI have opted to offer indemnify customers under certain conditions to reassure those worried about potential legal claims arising from generative AI.</p>

        


        

<p>But not every outfit offering AI services can make this bet and in some cases <a target="_blank" href="https://www.theregister.com/2023/12/21/artificial_intelligence_is_a_liability/">there's a cost</a>. For example, Zoom last August had to clarify that it would not use people's chats and calls for AI training despite <a target="_blank" href="https://www.theregister.com/2023/08/08/zoom_ai_legalese_update/">a change</a> to its terms of service that allowed that.</p>
<p>Some JetBrains customers feel strongly about AI Assistant and really don't want the plugin to be present in their JetBrains applications at all, whether that's due to corporate policies that are incompatible with AI Assistant or other concerns. But because the plugin code has been "deeply integrated," removal has proven complicated.</p>

        

<p>More than dozen threads on JetBrains' YouTrack issue board have been posted seeking a way to delete, uninstall, or otherwise excise the AI Assistant plugin since it debuted.</p>
<p>A <a target="_blank" rel="nofollow" href="https://youtrack.jetbrains.com/issue/LLM-1760/Can-not-remove-Jetbrains-AI-Assistant-plugin-completely">thread</a> titled "Provide the possibility to remove a plugin completely from the system" makes the case for why one might not wish to have this plugin baked into the company's developer tools, such as the <a target="_blank" rel="nofollow" href="https://www.jetbrains.com/help/pycharm/ai-assistant.html">PyCharm</a>, <a target="_blank" rel="nofollow" href="https://www.jetbrains.com/help/idea/ai-assistant.html">IntelliJ IDEA</a>, and <a target="_blank" rel="nofollow" href="https://www.jetbrains.com/help/rider/AI_Assistant.html">other</a> applications.</p>
<ul>

<li><a href="https://www.theregister.com/2024/01/27/ai_coding_automatic/">If you use AI to teach you how to code, remember you still need to think for yourself</a></li>

<li><a href="https://www.theregister.com/2022/12/21/ai_assistants_bad_code/">Study finds AI assistants help developers produce code that's more likely to be buggy</a></li>

<li><a href="https://www.theregister.com/2023/09/05/gitlab_ai_coding/">AI coding is 'inescapable' and here to stay, says GitLab</a></li>

<li><a href="https://www.theregister.com/2024/01/26/kettle_tech_failures/">Technology truly is the gift that keeps on giving ... SNAFUs to highlight</a></li>
</ul>
<p>Software developers posting to the support forum raise a number of concerns, calling the plugin "<a target="_blank" rel="nofollow" href="https://youtrack.jetbrains.com/issue/LLM-1760/Can-not-remove-Jetbrains-AI-Assistant-plugin-completely#focus=Comments-27-8775047.0-0">bloatware</a>," <a target="_blank" rel="nofollow" href="https://youtrack.jetbrains.com/issue/LLM-1760/Can-not-remove-Jetbrains-AI-Assistant-plugin-completely#focus=Comments-27-8710484.0-0">a risk to corporate intellectual property</a>, a security issue, an annoyance, and a breach of trust.</p>
<p>"I just want to make it clear that I cannot use this product at the company I work for because security will not allow for a by-default AI implementation to be a part of the product," <a target="_blank" rel="nofollow" href="https://youtrack.jetbrains.com/issue/LLM-1973/Provide-the-possibility-to-remove-a-plugin-completely-from-the-system#focus=Comments-27-8951378.0-0">wrote</a> an individual posting under the name Rusty Deaton.</p>
<p>Another developer posting under the name Marcus Grenängen <a target="_blank" rel="nofollow" href="https://youtrack.jetbrains.com/issue/LLM-1760/Can-not-remove-Jetbrains-AI-Assistant-plugin-completely#focus=Comments-27-8766615.0-0">wrote</a>, "This is unacceptable. It should not bundle something by default that can send off the entire code base to God knows where. It's a real bad move JetBrains and I will not renew any subscriptions after this. It's a breach of trust that can't be undone."</p>
<h3>'Dubious'</h3>
<p>Yet another developer posting under the name Alan Burlison <a target="_blank" rel="nofollow" href="https://youtrack.jetbrains.com/issue/LLM-1760/Can-not-remove-Jetbrains-AI-Assistant-plugin-completely#focus=Comments-27-8753176.0-0">opined</a>, "The fact that this service is AI based and that you don't know the provenance of the code it provides to you is a huge issue on its own, due to the dubious licensing/IP/legal situation it creates. But the biggest issue is not because it's AI, it's because it is leaking the user's company's IP to who knows where, potentially to direct competitors."</p>
<p>In a statement to <em>The Register</em>, Matt Ellis, developer advocate at JetBrains, tried to address misapprehensions and to reassure to those alarmed by AI Assistant's persistence.</p>

        

<p>"Although the AI Assistant plugin is bundled, and the plugin itself is enabled, there is no AI functionality enabled by default, and no data is sent off-machine without your consent," said Ellis, echoing similar replies posted to some of the discussion threads. "You have to log in, accept the data policies and either purchase a subscription or start a trial."</p>
<blockquote>

<p>There is no AI functionality enabled by default, and no data is sent off-machine without your consent</p>
</blockquote>
<p>"Any data sent to the AI service is not used for training. We also have ML support for ranking and completion, and this is provided by on-device models and no data is sent off device."</p>
<p>Ellis said JetBrains has a lot of customers who are happy with the bundled plugin and so the biz is looking into how its AI helper can be both bundled and fully removable.</p>
<p>"The problem with removing a bundled plugin is that it can break application signatures and cause problems with updates," explained Ellis.</p>
<p>Asked what portion of JetBrains' customers have objected to AI Assistant, a spokesperson said, "We can't say for sure how well these opinions represent the position of all of our customers. We understand the strength of feeling, and we're listening to feedback from all parts of our community, including the many happy individuals and enterprises that are using the AI Assistant." ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AT&T applies to end obligation to service landlines in California (129 pts)]]></title>
            <link>https://www.cbsnews.com/sacramento/news/at-t-applies-to-end-obligation-to-service-landlines/</link>
            <guid>39238039</guid>
            <pubDate>Sat, 03 Feb 2024 06:32:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cbsnews.com/sacramento/news/at-t-applies-to-end-obligation-to-service-landlines/">https://www.cbsnews.com/sacramento/news/at-t-applies-to-end-obligation-to-service-landlines/</a>, See on <a href="https://news.ycombinator.com/item?id=39238039">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    
                                                                
                                                        
<article id="article-0" data-index="0" data-path="/sacramento/news/at-t-applies-to-end-obligation-to-service-landlines/">

  <div id="article-header" data-sort-time="1706841016000" data-update-time="1706841016000">
    <header><p>
          <a href="https://www.cbsnews.com/sacramento/local-news?ftag=CNM-16-10abg0d" data-invalid-url-rewritten-http="">
            Local News
            </a>
        </p>
      
      
      <div>

        <!-- show SVG here -->
                            <p><a href="https://www.cbsnews.com/sacramento/" data-invalid-url-rewritten-http="">
            <img width="60" height="60" alt="sacramento" src="https://www.cbsnews.com/assets/show/sacramento/logo-square-32.svg" loading="lazy"></a></p><!-- end show SVG -->


                  
        
        
        <p>
          <time datetime="2024-02-01T18:30:16-0800">February 1, 2024 / 6:30 PM PST</time>
          / CBS Sacramento
        </p>
        


</div>

          </header></div>

      




  
  
      
        
  <figure data-ads="{&quot;extraWordCount&quot;:50}"><div>
      
      
                      



  <svg xmlns="http://www.w3.org/2000/svg" style="position:absolute;width:0;height:0"><defs><symbol id="player-icon-pause" viewBox="0 0 32 32"><path d="M4 4h10v24h-10zM18 4h10v24h-10z"></path></symbol><symbol id="player-icon-play" viewBox="0 0 32 32"><path d="M6 4l20 12-20 12z"></path></symbol><symbol id="player-icon-close" viewBox="0 0 32 32"><line stroke-width="6" x1="3" y1="3" x2="29" y2="29"></line><line stroke-width="6" x1="29" y1="3" x2="3" y2="29"></line></symbol><symbol id="player-icon-fullscreen" viewBox="0 0 32 32"><path d="M32 0h-13l5 5-6 6 3 3 6-6 5 5z"></path><path d="M32 32v-13l-5 5-6-6-3 3 6 6-5 5z"></path><path d="M0 32h13l-5-5 6-6-3-3-6 6-5-5z"></path><path d="M0 0v13l5-5 6 6 3-3-6-6 5-5z"></path></symbol><symbol id="player-icon-drag" viewBox="0 0 40 55"><g fill="#f5f5f5"><circle cx="5" cy="5" r="5"></circle><circle cx="20" cy="5" r="5"></circle><circle cx="35" cy="5" r="5"></circle><circle cx="5" cy="20" r="5"></circle><circle cx="20" cy="20" r="5"></circle><circle cx="35" cy="20" r="5"></circle><circle cx="5" cy="35" r="5"></circle><circle cx="20" cy="35" r="5"></circle><circle cx="35" cy="35" r="5"></circle><circle cx="5" cy="50" r="5"></circle><circle cx="20" cy="50" r="5"></circle><circle cx="35" cy="50" r="5"></circle></g></symbol></defs></svg><div data-theme="default" data-component="viewability" data-viewability-options="true">
                  <svg><use xlink:href="#player-icon-drag"></use></svg><p><span>AT&amp;T pushing to discontinue landlines in California </span>
        
        

      </p></div>
          </div>
          <figcaption><a href="https://www.cbsnews.com/sacramento/video/at-t-pushing-to-discontinue-landlines-in-california/" data-invalid-url-rewritten-http="">
          
          <span>
            </span>

          <span>AT&amp;T pushing to discontinue landlines in California</span>

          <span>03:00</span>

                      </a>
                  
        
        
              </figcaption></figure><section><p>CAMPO SECO — AT&amp;T doesn't want to be in charge of landlines anymore. If another company doesn't step up, this could mean the end of landlines as we know them.</p><p>"I'm not exactly a helpless 80-year-old, but I deserve to have a phone that works," said Campo Seco resident Patricia Pereira.</p><p>AT&amp;T is applying to end its obligation to service landlines in certain areas of California. The application is pending under the California Public Utilities Commission, but the end of a landline means the end of communication for some people.</p><p>"Now I have no phone and they would not reconnect my landline because they said they're out of the business," Pereira said.</p><p>Pereira has relied on her landline for 58 years. She got a cell phone for the first time last year when her landline got disconnected, but she lives in a dead zone for cell phones. CBS13 had a hard time getting in touch with her because the call kept dropping.</p>

    

<p>"I had no safety. I had nothing to call law enforcement, an ambulance, anything that was an emergency. I had no way to get out," Pereira said.</p><p>She explained that she's been without a landline for more than a year.</p><p>"I retired from the Post Office. I came up here. I could not get a new landline. They said they can't install it so I said let's transfer the landline down there to up here. It's across the street," Pereira said.</p><p>Instead, it was disconnected altogether and she's been desperately asking for it back. AT&amp;T doesn't want that obligation anymore.</p>

    
    

<p>The company said in a statement to CBS13:</p><blockquote><p>"Our application seeks approval from the CPUC to remove outdated regulations in California and to help the limited remaining landline consumers transition to modern, alternative services to replace their current outdated ones. All AT&amp;T California customers will continue to receive their traditional landline services until an alternative service becomes available by AT&amp;T or another provider."</p></blockquote><p>"Look what they did to me," Pereira said. "How many little old ladies out there has this happened to, and they didn't know how to fight it? I'm a fighter." </p><p>Pereira said that most people in her rural area use a landline and calls it the most reliable form of communication.</p><p>"I'm just a customer who wants to have communication, and they've done it for 58 years. What is the problem?" she said.</p><p>The CPUC will be holding four public hearings on the matter through March.</p>
                  
        
      
                  
    <!-- data-recirc-source="queryly" -->

    <!-- tags --><ul>In:
          <li><a href="https://www.cbsnews.com/sacramento/tag/california/">California</a></li>
      </ul></section><div id="soft-login-gate" data-soft-login-gate-options="{&quot;url&quot;:&quot;https:\/\/www.cbsnews.com\/user\/email-check\/&quot;}" data-smart-banner-options="{&quot;cookieName&quot;:&quot;SB_soft-login-gate&quot;,&quot;bannerVisibleClass&quot;:&quot;soft-login-gate--visible&quot;,&quot;bannerHiddenClass&quot;:&quot;soft-login-gate--hidden&quot;,&quot;retryDays&quot;:0}" data-component="[&quot;soft-login-gate&quot;,&quot;smart-banner&quot;,&quot;logingate-cookie-check&quot;]">
    <p>Thanks for reading CBS NEWS. </p>
    <p>Create your free account or log in <br> for more features.</p>

    <form method="post" id="soft-login-gate__form">
        
        <div>
            <p>
                Please enter email address to continue
            </p>
            <p>
                Please enter valid email address to continue
            </p>
        </div>
    </form>
</div>
  
        
  </article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Goodbye Non-Kiss Appliances (220 pts)]]></title>
            <link>https://willbush.dev/blog/complex-appliances/</link>
            <guid>39238010</guid>
            <pubDate>Sat, 03 Feb 2024 06:24:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://willbush.dev/blog/complex-appliances/">https://willbush.dev/blog/complex-appliances/</a>, See on <a href="https://news.ycombinator.com/item?id=39238010">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article data-backlink-icon="<svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 24 24&quot; width=&quot;20&quot; height=&quot;20&quot;><path d=&quot;M9.41421 8L18.0208 16.6066L16.6066 18.0208L8 9.41421V17H6V6H17V8H9.41421Z&quot; fill=&quot;currentColor&quot;></path></svg>"><p>Yesterday, we gave away our ~6-year-old GE French-door refrigerator after a never-ending slog of repairs. At least the guy and his mother who came to pick it up have a side-hustle of repairing and reselling appliances. There's hope it won't end up in a landfill. He offered to sell me a 4-door Samsung. No Thanks! I'm done with over-complicated appliances. Refrigerator repair is not a skill I'm looking to hone any further.</p><span id="continue-reading"></span><h2 id="survivorship-bias">Survivorship bias</h2><p>I have a refrigerator in my garage that's a side-by-side style Kenmore (Model# 25354362402). The sticker on the inside indicates a manufacture date of <code>06-04</code>. It was bought as a scratch-and-dent model from Sears Outlet. At some point, over a decade ago, the relay on the compressor went out. The fix was cheap and easy. Later, we started having problems with the ice maker / dispenser. Instead of fixing it, we decided to get a new one and use the side-by-side as a second refrigerator in the garage. Since then, it's out-lived two French-door refrigerators we have had in the intervening time.</p><h2 id="the-french-door-woes-begin">The French-door woes begin</h2><p>For the replacement, we went with a French-door style Kenmore (Model# 79572053110) because, you know, all that space in the fridge, and again scratch / dent sale.</p><p>I don't even remember all the problems we had with it, and this was before I started keeping better records. I have the notes from the last repair receipt:</p><blockquote><p>cked unit ice build up around ice fan motor fines removed heater good no problem found.</p></blockquote><p>After about the second repair of the same issue, I was surprised they let me buy an extended warranty on it. Fast-forward past 6-10 (I forget) repairs / replacements of the same part and much hassle, they gave me store credit as though I bought it new without dents. The amount, I forget, but ended up being a curse because we felt compelled to use it all on an even fancier French-door refrigerator this time brand new.</p><p>I wish I could go back in time and slap myself in the face for deciding to buy another French-door refrigerator. I even remember thinking about the <a rel="nofollow noreferrer" href="https://en.wikipedia.org/wiki/KISS_principle">KISS principle</a> at the time, but somehow thought switching brands and spending 3x the amount would save us from the complexity.</p><h2 id="enter-the-ge-cafe">Enter the GE Café</h2><p>This refrigerator (model# CFE28TSHESS) sports all these <em>wonderful</em> features:</p><ul><li>touch screen LCD</li><li>ice, water, and hot water dispenser</li><li>RFID chipped water filters to lock-in customers to buy their $50 filters</li></ul><p>I keep notes and <code>TODO</code> tasks using <a rel="nofollow noreferrer" href="https://orgmode.org/">org-mode</a>, and I was just gathering my notes on this refrigerator and found I have written ~1300 words on it, not counting this blog post. The following is a summary.</p><p>The first annoyance was having to employ <a href="https://www.youtube.com/watch?v=ellbAY9IvgU" rel="nofollow noreferrer">a hack</a> to get around GE water filter lock-in.</p><p>I've had the evaporator fan fail on me twice. Once in 2020 and its replacement failed in 2022. When that happens, the fridge compartment doesn't cool well. A <a href="https://www.youtube.com/watch?v=IeG4CVkAFgs&amp;t=58s" rel="nofollow noreferrer">video on how to replace it</a> for context.</p><p>Ice builds up in the bottom of the freezer if the drain to the evaporation pan gets clogged. Cleaning the rubber hose and dust off the condenser is a yearly chore at least. It becomes the reason to take all the food out and fully clean everything. Otherwise, get ready to spend hours defrosting. One hack we found to speed it up was to pour nearly boiling water down the drain to defrost the ice build up.</p><p>Once the freezer stopped cooling, and we noticed the case was hot to the touch on the side between the freezer and fridge compartments. This ended up being due to a failed condenser fan. A real PITA to replace, by-the-way.</p><p>Around that time I found the technical service manual online and realized one can view error codes and run all sorts of tests via the LCD touch screen. Then I found out that the touch screen wasn't working. Since a new touch screen LCD assembly is over $300, so I ordered one off ebay instead.</p><p>We had a problem with the "new" LCD assembly intermittently pressing the hot water button on its own. Basically, the person I got the part from on ebay lied saying that it was brand new. It was refurbished. We could tell because there had been some soldering work done to the board. Instead of uninstalling it and returning it, we realized that button pressing over and over wasn't affecting any functionality (we don't use its hot water dispenser anyway). We just turned the sound off to stop the annoying repeated chiming noise.</p><p>From running fan tests in service mode, I could tell the odor remover fan also died, but I never cared to replace it. Fans are expensive!</p><p>Recently, it stopped working again. With the power of YouTube and a multi-meter I was able to test the capacitor on the relay was good, but the relay was bad. Replaced the relay, but the compressor still is not starting. Tested that it is getting 120VAC.</p><p>Here's my notes from my before replacing the relay:</p><pre><code><span>- Note taken on [2023-12-05 Tue 20:09] \\
</span><span>  WR07X10131 it was the relay that plugs into the compressor. It rattles when
</span><span>  shaken, and it doesn't have continuity between the two main pins.
</span><span>
</span><span>  | Fault Code Definition                              | code | count | days ago |
</span><span>  |----------------------------------------------------+------+-------+----------|
</span><span>  | Cold Water Cup Switch input missing                |  709 |    14 |        2 |
</span><span>  | Condenser Fan cannot reach target RPM              |  105 |     2 |        0 |
</span><span>  | FF Temp Exceeded 75°F                              |  303 |     1 |        0 |
</span><span>  | FZ Temp Exceeded 72.5°                             |  304 |     1 |        1 |
</span><span>  | Condenser Fan cannot reach target RPM              |  105 |     2 |        0 |
</span><span>  | N/A ????                                           |  800 |    63 |        0 |
</span><span>  | 5 consecutive FF abnormal defrosts.                |  203 |   244 |        1 |
</span><span>  | N/A ????                                           |  803 |   204 |        0 |
</span><span>  | N/A ????                                           |  600 |     2 |       13 |
</span><span>  | Deli Pan Fan Feedback Missing when fan is running. |  112 |   120 |        0 |
</span><span>  | FF Defrost Heater on for max time.                 |  201 |   217 |        0 |
</span></code></pre><p>Note the <code>Condenser Fan cannot reach target RPM</code> despite it being recently cleaned out with an air compressor and replaced on <code>2021-06-05</code>, the $74 fan can't reach RPM? It was working and has nothing to do with the compressor not running, but it's hard to justify spending more money to fix this thing with the non-stop fan issues.</p><p>At the limit of my refrigerator repair skills and wits' end, we decided to give away the GE refrigerator.</p><h2 id="keep-it-simple-stupid">Keep it simple, stupid!</h2><p>Based on <a href="https://www.youtube.com/watch?v=rKJgYVhZ6-w" rel="nofollow noreferrer">this video</a>, We are upgrading to simplicity. Top freezer refrigerator. <del>I'll get an ice maker add-on</del> (no dispenser) and a water pitcher for filtered water. After using ice trays for a few weeks, we decided it's actually not that bad and returned the ice maker.</p><p>We haven't decided on brand / model yet. I understand that the long-lasting refrigerator in my garage is probably a coincidence.</p><p>I'll admit engineering effort can tame complexity. For example, the combustion engine and hybrid cars are surprisingly reliable. And perhaps, for the right price, there are brands that have pulled it off with complex refrigerators. There's just not enough value added by any of the fancy features to warrant the potential headache.</p><h2 id="other-appliance-anecdotes">Other appliance anecdotes</h2><p>We're at the end of a long year of remodeling. There are lot of stories I could tell, but I feel like it's worth a mention to how painless it is to live without a garbage disposal. Another thing in my life I don't have to worry about.</p><p>Old-school top load washing machine has been serving us well for the most part (Maytag MVWP575GW). The shift actuator assembly did go bad once. It was about $60, but wasn't too hard to replace.</p><p>We have a Whirlpool dryer since about 2004 too. I replaced the heating element once a few years ago. Obviously, no extraneous features to worry about there.</p></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Over the Edge: The Use of Design Tactics to Undermine Browser Choice (298 pts)]]></title>
            <link>https://research.mozilla.org/browser-competition/over-the-edge-the-use-of-design-tactics-to-undermine-browser-choice/</link>
            <guid>39237567</guid>
            <pubDate>Sat, 03 Feb 2024 04:35:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://research.mozilla.org/browser-competition/over-the-edge-the-use-of-design-tactics-to-undermine-browser-choice/">https://research.mozilla.org/browser-competition/over-the-edge-the-use-of-design-tactics-to-undermine-browser-choice/</a>, See on <a href="https://news.ycombinator.com/item?id=39237567">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
  
<article id="post-656" class="page">
  

  <div>
    <p>In order to be able to choose their own browser, people must be free to download it, easily set it to default and to continue using it – all without interference from the operating system. Windows users do not currently enjoy this freedom of choice.</p>
<p>To investigate Microsoft’s tactics and the impact on consumers, Mozilla commissioned Harry Brignull and Cennydd Bowles, independent researchers and experts in harmful design. Today, the researchers have published a report detailing how Microsoft prevents effective browser choice on Windows. In the report, they document how Microsoft places its own browser — Edge — at the center of its operating system and weaponizes Windows’ user interface design to undermine people selecting rival browsers.</p>
<p>In some cases, the use of harmful design tactics is contrary to Microsoft’s own design guidelines. In many cases, it can lead to (and exacerbate) consumer harm and undermine competition from rival browsers. This kind of behavior is particularly concerning for an independent browser like Firefox, which is reliant on the operating systems provided by companies who are also rival browser vendors.</p>
<p>Self-preferencing from operating system/browser providers is an area Mozilla has previously highlighted, for example, in the <a href="https://research.mozilla.org/browser-competition/5wg/">Five Walled Gardens report</a>. Recently, details of many issues Mozilla experiences competing on major operating systems were published on the <a href="https://blog.mozilla.org/netpolicy/2024/01/19/platform-tilt/">Platform Tilt dashboard</a>.</p>
<p>Now, with the implementation of the Digital Markets Act in the European Union marking the start of a wave of global competition regulation, we hoped that the barriers to browser competition would be dismantled. However, even where there is movement in the right direction, improvements have been incomplete and are grudgingly offered only in markets where regulators have forced platform owners to make changes to respect browser choice. For example, Apple’s decision to allow alternative browser engines is only effective in the EU.</p>
<p>Similarly, Microsoft recently <a href="https://blogs.microsoft.com/eupolicy/2023/11/22/windows-updates-comply-dma-edge/">pledged</a> to stop some of the actions it takes to force Edge on users who have selected other browsers. Unfortunately, these changes only address a small number of the tactics outlined in this report. And, to make matters worse, they will only be deployed to users in the EEA.</p>
<p>Windows users everywhere, especially in the rest of the world, continue to have their choices inhibited, overridden and undermined by Microsoft’s use of harmful design. Regulatory action around the world is needed to restore browser choice and competition across all of the major platforms.</p>
<p><a href="https://research.mozilla.org/files/2024/01/Over-the-Edge-Report-January-2024.pdf"><strong>Download the full report (PDF, 5MB)</strong></a></p>
      </div>

  
</article><!-- #post -->
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Full $71M breakdown for The Village by M. Night Shyamalan (2003) [pdf] (179 pts)]]></title>
            <link>https://wlmager.com/wp-content/uploads/2012/10/Budget-The-Village-Shyamalan-copy.pdf</link>
            <guid>39237232</guid>
            <pubDate>Sat, 03 Feb 2024 03:13:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wlmager.com/wp-content/uploads/2012/10/Budget-The-Village-Shyamalan-copy.pdf">https://wlmager.com/wp-content/uploads/2012/10/Budget-The-Village-Shyamalan-copy.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=39237232">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Designer News is dead (144 pts)]]></title>
            <link>https://solomon.io/designer-news-is-dead/</link>
            <guid>39236777</guid>
            <pubDate>Sat, 03 Feb 2024 01:31:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://solomon.io/designer-news-is-dead/">https://solomon.io/designer-news-is-dead/</a>, See on <a href="https://news.ycombinator.com/item?id=39236777">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Designer News, once a daily destination for product designers, is dead. For many years, it was the best place on the internet to discuss designing and building software.</p>



<p>The community was recently sold to a job board called WeWorkRemotely. Since then, there has been a modal that states Designer News will no longer be supported. Today appears to be the day that it finally shuts down.</p>



<figure><img decoding="async" width="1644" height="1090" data-attachment-id="8306" data-permalink="https://solomon.io/designer-news-is-dead/designer-news-farewell-modal/" data-orig-file="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?fit=1644%2C1090&amp;ssl=1" data-orig-size="1644,1090" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Designer-News-Farewell-Modal" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?fit=640%2C424&amp;ssl=1" data-large-file="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?fit=1644%2C1090&amp;ssl=1" src="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=1644%2C1090&amp;ssl=1" alt="It’s been a great run! 👾

Designer News is transforming and joining the We Work Remotely family. Soon Designer News will no longer be available but we have great news, with the power of We Work Remotely, we’ll still help you find and list the best remote jobs. ✨
At We Work Remotely, you’ll find a community of remote companies and remote enthusiasts who are passionate about meaningful, flexible work.
This way, we’ll keep supporting amazing companies and creatives in their search.
If you’re a creative looking for work, you can start your journey here.
If you’re a company looking for creatives, you can learn more about We Work Remotely here.

Thanks for your support through the years and join us in the next part of this adventure! 🧭

The Designer News team" srcset="https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?w=1644&amp;ssl=1 1644w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=640%2C424&amp;ssl=1 640w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=768%2C509&amp;ssl=1 768w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=1536%2C1018&amp;ssl=1 1536w, https://i0.wp.com/solomon.io/wp-content/uploads/2024/02/Designer-News-Farewell-Modal.jpg?resize=1200%2C796&amp;ssl=1 1200w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"><figcaption>The shut down notification posted on Designer News. As you can see there was some quality front page content in it’s last hours—links to crypto posts on Pinterest and spam about sports betting apps.</figcaption></figure>



<p>What made Designer News unique was its focus on text-based discussions. In the design world, almost all online communities are dominated by aesthetics—think Dribbble or Behance. Designer News offered a space to delve into the more nuanced aspects of product design—discussions on functionality, implementation, accessibility, and team building. These types of discussions were completely absent in the more visually-oriented forums.</p>



<p>I was an early member of Designer News—number 484. For several years, I was a top contributor and was even invited to host the community podcast, <a href="https://solomon.io/tag/dn-fm/" data-type="link" data-id="https://solomon.io/tag/dn-fm/">DN FM</a>. The first few years, from 2013 to 2016, were filled with quality discussions with incredibly knowledgeable people. I’m grateful to those early members who taught me a ton.</p>



<p>Looking back, the early years were so good. DN’s invite-only policy kept discussion and post quality high. The site was available for everyone to see, but an invitation from another member was required to contribute. This made moderation easy.</p>



<p>At some point—I think around 2016—the site was set to open registration, allowing anyone to join and contribute. That’s fine, but an open community requires additional features to assist with moderation and moderators to do it. At that point, Designer News had neither. The following year, post quality started to decline, and by 2018, the site was mostly filled with spam.</p>



<p>Community moderator Catalin Cimpanu summed up the general sentiment in a 2020 <a href="https://web.archive.org/web/20230331094219/http://www.designernews.co/stories/104981-designernews-is-almost-dead" target="_blank" rel="noreferrer noopener">discussion about Designer News</a>.</p>



<blockquote>
<p>While this was a gated community, this place was just awesome. Now… listicles, how-to’s, ugly Dribbble shots, “trends” posts, endless UX hot takes, and run-of-the-mill “show site” submissions are the norm.</p>
</blockquote>



<p>Designer News was created by a company called Layervault, which had built a version control system for design files—essentially, Git for designers. At a time when design and engineering were coming closer together, the product made a lot of sense. </p>



<p>They were the ones that coined the term “flat design” with their post <a href="https://layervault.tumblr.com/post/32267022219/flat-interface-design" data-type="link" data-id="https://layervault.tumblr.com/post/32267022219/flat-interface-design" target="_blank" rel="noreferrer noopener">The Flat Design Era</a>. The team viewed the move away from skeumorphism as a more honest approach to design. I had the privilege to interview LayerVault’s co-founder and CEO, <a href="https://solomon.io/kelly-sutton-creator-of-designer-news-ceo-of-layervault/" data-type="post" data-id="4535">Kelly Sutton</a>, back in 2014. Unfortunately, the business couldn’t establish a solid foundation and ceased operations in 2015.</p>



<p><a href="https://www.metalab.com/" data-type="link" data-id="https://www.metalab.com/" target="_blank" rel="noreferrer noopener">Metalab</a> (or maybe <a href="https://www.tiny.com/" data-type="link" data-id="https://www.tiny.com/">Tiny</a>?) acquired Designer News that year. For a while, they were good stewards of the community, investing resources and organizing events for community members.</p>



<p>At one of those events in Atlanta, I had the opportunity to spend time with Max, one of the community organizers. Max was familiar with my interviews and asked if I’d be interested in hosting the Designer News podcast—what would become DN FM. Unlike with <a href="https://solomon.io/tag/signal-tower/" data-type="link" data-id="https://solomon.io/tag/signal-tower/">Signal Tower</a>, I had a producer and someone scheduling guests. I just had to show up and have a chat—well, that and put in hours of research. But it was a pretty good gig while it lasted.</p>



<p>Anyways, I’m not sure if anyone cares. I haven’t seen other posts about it. There’s no goodbye page. It’s kind of sad—so I felt compelled to write something.</p>



<p>The truth is Designer News is dead and has been dead for a long time. First, contributors like myself contributed less and less, then the regulars started visiting less frequently. Slowly, and then all of a sudden, the community turned into a ghost town.</p>



<p>If you’re a product designer or were a regular on Designer News, where do you have product discussions online? I’d love to find a replacement.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A decoder-only foundation model for time-series forecasting (161 pts)]]></title>
            <link>https://blog.research.google/2024/02/a-decoder-only-foundation-model-for.html</link>
            <guid>39235983</guid>
            <pubDate>Fri, 02 Feb 2024 23:34:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.research.google/2024/02/a-decoder-only-foundation-model-for.html">https://blog.research.google/2024/02/a-decoder-only-foundation-model-for.html</a>, See on <a href="https://news.ycombinator.com/item?id=39235983">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="post-body-6956767920612914706">
<p><span>Posted by Rajat Sen and Yichen Zhou, Google Research</span>


</p><p>
<a href="https://en.wikipedia.org/wiki/Time_series">Time-series</a> forecasting is ubiquitous in various domains, such as retail, finance, manufacturing, healthcare and natural sciences. In retail use cases, for example, it has been observed that <a href="https://www.mckinsey.com/featured-insights/artificial-intelligence/notes-from-the-ai-frontier-applications-and-value-of-deep-learning">improving demand forecasting accuracy</a> can meaningfully reduce inventory costs and increase revenue. Deep learning (DL) models have emerged as a popular approach for forecasting rich, multivariate, time-series data because they have proven to perform well in a variety of settings (e.g., DL models dominated the <a href="https://www.sciencedirect.com/science/article/pii/S0169207021001874">M5 competition leaderboard</a>).
</p>
<p>
At the same time, there has been rapid progress in large foundation language models used for natural language processing (NLP) tasks, such as <a href="https://en.wikipedia.org/wiki/Machine_translation">translation</a>, <a href="https://www.analyticsvidhya.com/blog/2023/09/retrieval-augmented-generation-rag-in-ai/">retrieval-augmented generation</a>, and <a href="https://en.wikipedia.org/wiki/Intelligent_code_completion">code completion</a>. These models are trained on massive amounts of <em>textual </em>data derived from a variety of sources like <a href="https://commoncrawl.org/">common crawl</a> and open-source code that allows them to identify patterns in languages. This makes them very powerful <a href="https://en.wikipedia.org/wiki/Zero-shot_learning">zero-shot</a> tools; for instance, <a href="https://blog.google/products/bard/google-bard-try-gemini-ai/">when paired with retrieval</a>, they can answer questions about and summarize current events.
</p>

<p>
Despite DL-based forecasters largely <a href="https://arxiv.org/abs/1704.04110">outperforming</a> traditional methods and progress being made in <a href="https://cloud.google.com/blog/products/ai-machine-learning/vertex-ai-forecasting">reducing training and inference costs</a>, they face challenges: most DL architectures require <a href="https://cloud.google.com/blog/products/ai-machine-learning/vertex-ai-forecasting">long and involved training and validation cycles</a> before a customer can test the model on a new time-series. A foundation model for time-series forecasting, in contrast, can provide decent out-of-the-box forecasts on unseen time-series data with no additional training, enabling users to focus on refining forecasts for the actual downstream task like <a href="https://en.wikipedia.org/wiki/Customer_demand_planning">retail demand planning</a>.
</p>

<p>
To that end, in “<a href="https://arxiv.org/pdf/2310.10688.pdf">A decoder-only foundation model for time-series forecasting</a>”, we introduce TimesFM, a single forecasting model pre-trained on a large time-series corpus of 100 billion real world time-points. Compared to the latest large language models (LLMs), TimesFM is much smaller (200M parameters), yet we show that even at such scales, its zero-shot performance on a variety of unseen datasets of different domains and temporal granularities come close to the state-of-the-art supervised approaches trained explicitly on these datasets. Later this year we plan to make this model available for external customers in <a href="https://cloud.google.com/vertex-ai/docs/tabular-data/forecasting/train-model#aiplatform_create_training_pipeline_tabular_forecasting_sample-python">Google Cloud Vertex AI</a>.
</p>


<h2>A decoder-only foundation model for time-series forecasting</h2>


<p>
LLMs are usually trained in a <a href="https://arxiv.org/pdf/1801.10198.pdf">decoder-only</a> fashion that involves three steps. First, text is broken down into subwords called tokens. Then, the tokens are fed into stacked causal <a href="https://arxiv.org/abs/1706.03762">transformer</a> layers that produce an output corresponding to each input token (it cannot attend to future tokens). Finally, the output corresponding to the <em>i</em>-th token summarizes all the information from previous tokens and predicts the (<em>i</em>+1)-th token. During inference, the LLM generates the output one token at a time. For example, when prompted with “What is the capital of France?”, it might generate the token “The”, then condition on “What is the capital of France? The” to generate the next token “capital” and so on until it generates the complete answer: “The capital of France is Paris”.
</p>

<p>
A foundation model for time-series forecasting should adapt to variable context (what we observe) and horizon (what we query the model to forecast) lengths, while having enough capacity to encode all patterns from a large pretraining dataset. Similar to LLMs, we use stacked transformer layers (self-attention and <a href="https://en.wikipedia.org/wiki/Feedforward_neural_network">feedforward</a> layers) as the main building blocks for the TimesFM model. In the context of time-series forecasting, we treat a patch (a group of contiguous time-points) as a token that was popularized by a recent <a href="https://arxiv.org/abs/2211.14730">long-horizon forecasting work</a>. The task then is to forecast the (<em>i</em>+1)-th patch of time-points given the <em>i</em>-th output at the end of the stacked transformer layers. 
</p>

<p>
However, there are several key differences from language models. Firstly, we need a <a href="https://en.wikipedia.org/wiki/Multilayer_perceptron">multilayer perceptron</a> block with residual connections to convert a patch of time-series into a token that can be input to the transformer layers along with <a href="https://machinelearningmastery.com/a-gentle-introduction-to-positional-encoding-in-transformer-models-part-1/">positional encodings</a> (PE). For that, we use a residual block similar to our prior work in <a href="https://arxiv.org/abs/2304.08424">long-horizon forecasting</a>. Secondly, at the other end, an output token from the stacked transformer can be used to predict a longer length of subsequent time-points than the input patch length, i.e., the output patch length can be larger than the input patch length.  
</p>

<p>
Consider a time-series of length 512 time-points being used to train a TimesFM model with input patch length 32 and output patch length 128. During training, the model is simultaneously trained to use the first 32 time-points to forecast the next 128 time-points, the first 64 time-points to forecast time-points 65 to 192, the first 96 time-points to forecast time-points 97 to 224 and so on. During inference, suppose the model is given a new time-series of length 256 and tasked with forecasting the next 256 time-points into the future. The model will first generate the future predictions for time-points 257 to 384, then condition on the initial 256 length input plus the generated output to generate time-points 385 to 512. On the other hand, if in our model the output patch length was equal to the input patch length of 32 then for the same task we would have to go through eight generation steps instead of just the two above. This increases the chances of more errors accumulating and therefore, in practice, we see that a longer output patch length yields better performance for long-horizon forecasting
</p>


<table><tbody><tr><td><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4G0lBOLUqlPIXJ3R68kjS984MBIKBPDBrCWtgmjVVTyQRqY6-rn3aHJjgxCbG-8csyBLsp0POILdeJ2VcsRy8lrip0k5DWsUpuL9LU1qOPXLW99mraNdd6HVU791NYqJeTyY7LjuMnOIo6RGmkxBQqqaPrSsC0dELrwy21QUs1Jgwxr8flmdNkDV2tZsT/s1084/image3.jpg"><img data-original-height="674" data-original-width="1084" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj4G0lBOLUqlPIXJ3R68kjS984MBIKBPDBrCWtgmjVVTyQRqY6-rn3aHJjgxCbG-8csyBLsp0POILdeJ2VcsRy8lrip0k5DWsUpuL9LU1qOPXLW99mraNdd6HVU791NYqJeTyY7LjuMnOIo6RGmkxBQqqaPrSsC0dELrwy21QUs1Jgwxr8flmdNkDV2tZsT/s16000/image3.jpg"></a></td></tr><tr><td>TimesFM architecture.</td></tr></tbody></table>

<br>


<h2>Pretraining data</h2>


<p>
Just like LLMs get better with more tokens, TimesFM requires a large volume of legitimate time series data to learn and improve. We have spent a great amount of time creating and assessing our training datasets, and the following is what we have found works best:
</p>




<p>

    <strong>Synthetic data helps with the basics.</strong> Meaningful synthetic time-series data can be generated using statistical models or physical simulations. These basic temporal patterns can teach the model the grammar of time series forecasting.
</p>
  
<p>  
    <strong>Real-world data adds real-world flavor.</strong> We comb through available public time series datasets, and selectively put together a large corpus of 100 billion time-points. Among these datasets there are <a href="https://trends.google.com/trends/">Google Trends</a> and <a href="https://meta.wikimedia.org/wiki/Research:Page_view">Wikipedia Pageviews</a>, which track what people are interested in, and that nicely mirrors trends and patterns in many other real-world time series. This helps TimesFM understand the bigger picture and generalize better when provided with domain-specific contexts not seen during training.
</p>


<h2>Zero-shot evaluation results</h2>


<p>
We evaluate TimesFM zero-shot on data not seen during training using popular time-series benchmarks. We observe that TimesFM performs better than most statistical methods like <a href="https://en.wikipedia.org/wiki/Autoregressive_integrated_moving_average">ARIMA</a>, <a href="https://en.wikipedia.org/wiki/Exponential_smoothing">ETS</a> and can match or outperform powerful DL models like <a href="https://arxiv.org/abs/1704.04110">DeepAR</a>, <a href="https://arxiv.org/abs/2211.14730">PatchTST</a> that have been <em>explicitly trained</em> on the target time-series.
</p>

<p>
We used the <a href="https://huggingface.co/datasets/monash_tsf">Monash Forecasting Archive</a> to evaluate TimesFM’s out-of-the-box performance. This archive contains tens of thousands of time-series from various domains like traffic, weather, and demand forecasting covering frequencies ranging from few minutes to yearly data. Following existing literature, we inspect the <a href="https://en.wikipedia.org/wiki/Mean_absolute_error">mean absolute error</a> (MAE) <a href="https://arxiv.org/abs/2310.07820">appropriately scaled</a> so that it can be averaged across the datasets. We see that zero-shot (ZS) TimesFM is better than most supervised approaches, including recent deep learning models. We also compare TimesFM to <a href="https://platform.openai.com/docs/models/gpt-3-5">GPT-3.5</a> for forecasting using a specific prompting technique proposed by <a href="https://arxiv.org/abs/2310.07820">llmtime(ZS)</a>. We demonstrate that TimesFM performs better than llmtime(ZS) despite being orders of magnitude smaller.
</p>


<table><tbody><tr><td><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIeNF6GcmbUvVvYpKxNSvwlm_swz6M3G7nTDl0INa2zq8AlvjTBCVuvwOw0dx48JCk4H3S0aBUcsvqj2BypV3340cblqgD6yktoLBXzpxA2fwoM4n_KU8m0TfaESjihc3nx29RYVTpO4g09RCK-rucPulH3gqEOU9jO7EZ_VbDcFnfB_RHXmdpuZO_T_-g/s1476/image2.png"><img data-original-height="876" data-original-width="1476" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEhIeNF6GcmbUvVvYpKxNSvwlm_swz6M3G7nTDl0INa2zq8AlvjTBCVuvwOw0dx48JCk4H3S0aBUcsvqj2BypV3340cblqgD6yktoLBXzpxA2fwoM4n_KU8m0TfaESjihc3nx29RYVTpO4g09RCK-rucPulH3gqEOU9jO7EZ_VbDcFnfB_RHXmdpuZO_T_-g/s16000/image2.png"></a></td></tr><tr><td>Scaled MAE (the lower the better) of TimesFM(ZS) against other supervised and zero-shot approaches on Monash datasets.</td></tr></tbody></table>




<p>
Most of the Monash datasets are short or medium horizon, i.e., the prediction length is not too long. We also test TimesFM on popular benchmarks for long horizon forecasting against a recent state-of-the-art baseline <a href="https://arxiv.org/abs/2211.14730">PatchTST</a> (and other long-horizon forecasting baselines). In the next figure, we plot the MAE on <a href="https://paperswithcode.com/dataset/ett">ETT</a> datasets for the task of predicting 96 and 192 time-points into the future. The metric has been calculated on the last test window of each dataset (as done by the <a href="https://arxiv.org/abs/2310.07820">llmtime</a> paper). We see that TimesFM not only surpasses the performance of llmtime(ZS) but also matches that of the supervised PatchTST model explicitly trained on the respective datasets. 
</p>





<table><tbody><tr><td><a href="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0DDM32GPO6zkmnIrObEP2OA92g45b-zSMHgCf-uNoj6Ed0M0zVsN7vmFmfgXT6Sh5p-W0xI1qj6YwXcqi3T6aD5hI9ZOJqT8Sobp43FGrtSsLUkI2poHnGml7Za4BMObSd6nEKUVL8wj7nHJDFYHbWaQOXOcfxvqXUcMxUZ3WVQW8Z5sabfFsi7M85_7I/s735/image1.png"><img data-original-height="433" data-original-width="735" src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEj0DDM32GPO6zkmnIrObEP2OA92g45b-zSMHgCf-uNoj6Ed0M0zVsN7vmFmfgXT6Sh5p-W0xI1qj6YwXcqi3T6aD5hI9ZOJqT8Sobp43FGrtSsLUkI2poHnGml7Za4BMObSd6nEKUVL8wj7nHJDFYHbWaQOXOcfxvqXUcMxUZ3WVQW8Z5sabfFsi7M85_7I/s16000/image1.png"></a></td></tr><tr><td>Last window MAE (the lower the better) of TimesFM(ZS) against llmtime(ZS) and long-horizon forecasting baselines on ETT datasets.</td></tr></tbody></table>

<br>


<h2>Conclusion</h2>


<p>
We train a decoder-only foundation model for time-series forecasting using a large pretraining corpus of 100B real world time-points, the majority of which was search interest time-series data derived from Google Trends and pageviews from Wikipedia. We show that even a relatively small 200M parameter pretrained model that uses our TimesFM architecture displays impressive zero-shot performance on a variety of public benchmarks from different domains and granularities. 
</p>


<h2>Acknowledgements</h2>


<p>
<em>This work is the result of a collaboration between several individuals across Google Research and Google Cloud, including (in alphabetical order): Abhimanyu Das, Weihao Kong, Andrew Leach, Mike Lawrence, Alex Martin, Rajat Sen, Yang Yang and Yichen Zhou.</em>
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[SeaweedFS fast distributed storage system for blobs, objects, files and datalake (302 pts)]]></title>
            <link>https://github.com/seaweedfs/seaweedfs</link>
            <guid>39235593</guid>
            <pubDate>Fri, 02 Feb 2024 22:57:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/seaweedfs/seaweedfs">https://github.com/seaweedfs/seaweedfs</a>, See on <a href="https://news.ycombinator.com/item?id=39235593">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="responsive-meta-container" data-turbo-replace="">
      <p>
        SeaweedFS is a fast distributed storage system for blobs, objects, files, and data lake, for billions of files! Blob store has O(1) disk seek, cloud tiering. Filer supports Cloud Drive, cross-DC active-active replication, Kubernetes, POSIX FUSE mount, S3 API, S3 Gateway, Hadoop, WebDAV, encryption, Erasure Coding.
      </p>

    <h3>License</h3>
  <p>
    <a href="https://github.com/seaweedfs/seaweedfs/blob/master/LICENSE" data-analytics-event="{&quot;category&quot;:&quot;Repository Overview&quot;,&quot;action&quot;:&quot;click&quot;,&quot;label&quot;:&quot;location:sidebar;file:license&quot;}">
      
     Apache-2.0 license
    </a>
  </p>


    <p>
        <a href="https://github.com/seaweedfs/seaweedfs/stargazers">
          
          <span>19.4k</span>
          stars
</a>        <a href="https://github.com/seaweedfs/seaweedfs/forks">
          
          <span>2.1k</span>
          forks
</a>          <a href="https://github.com/seaweedfs/seaweedfs/branches">
            
            <span>Branches</span>
</a>          <a href="https://github.com/seaweedfs/seaweedfs/tags">
            
            <span>Tags</span>
</a>        <a href="https://github.com/seaweedfs/seaweedfs/activity">
          
          <span>Activity</span>
</a>    </p>

      <div>
        <div data-view-component="true">
        <a href="https://github.com/login?return_to=%2Fseaweedfs%2Fseaweedfs" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;star button&quot;,&quot;repository_id&quot;:21827146,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/seaweedfs/seaweedfs&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="61d1ceb22294278bd66fa0be334cad85e51ec66dea39e31d2dcccff5ad68310c" aria-label="You must be signed in to star a repository" data-view-component="true">    <span data-view-component="true">
          Star
</span>
</a>        </div>
        <p>
                <a href="https://github.com/login?return_to=%2Fseaweedfs%2Fseaweedfs" rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;notification subscription menu watch&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;LOG_IN&quot;,&quot;originating_url&quot;:&quot;https://github.com/seaweedfs/seaweedfs&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="594b3e8b34a138503950ffd4f2d74337d2a10759bcc63aae2970688e416da16c" aria-label="You must be signed in to change notification settings" data-view-component="true">    Notifications
</a>
        </p>
          </div>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Carl Weathers has died (341 pts)]]></title>
            <link>https://www.bbc.co.uk/news/world-us-canada-68188746</link>
            <guid>39235336</guid>
            <pubDate>Fri, 02 Feb 2024 22:30:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.co.uk/news/world-us-canada-68188746">https://www.bbc.co.uk/news/world-us-canada-68188746</a>, See on <a href="https://news.ycombinator.com/item?id=39235336">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main id="main-content" data-testid="main-content"><article><header></header><div data-component="image-block"><figure><p><span><picture><source srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/C795/production/_132539015_carl.jpg.webp 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/C795/production/_132539015_carl.jpg.webp 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/C795/production/_132539015_carl.jpg.webp 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/C795/production/_132539015_carl.jpg.webp 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/C795/production/_132539015_carl.jpg.webp 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/C795/production/_132539015_carl.jpg.webp 976w" type="image/webp"><img alt="Carl Weathers" srcset="https://ichef.bbci.co.uk/news/240/cpsprodpb/C795/production/_132539015_carl.jpg 240w, https://ichef.bbci.co.uk/news/320/cpsprodpb/C795/production/_132539015_carl.jpg 320w, https://ichef.bbci.co.uk/news/480/cpsprodpb/C795/production/_132539015_carl.jpg 480w, https://ichef.bbci.co.uk/news/624/cpsprodpb/C795/production/_132539015_carl.jpg 624w, https://ichef.bbci.co.uk/news/800/cpsprodpb/C795/production/_132539015_carl.jpg 800w, https://ichef.bbci.co.uk/news/976/cpsprodpb/C795/production/_132539015_carl.jpg 976w" src="https://ichef.bbci.co.uk/news/976/cpsprodpb/C795/production/_132539015_carl.jpg" width="976" height="549" loading="eager"></picture></span><span role="text"><span>Image source, </span>Getty Images</span></p></figure></div><div data-component="text-block"><p><b>US actor Carl Weathers has died at the age of 76, according to his family.</b></p></div><div data-component="text-block"><p>Weathers, who starred as Apollo Creed in the first four Rocky films, "died peacefully in his sleep", according to a statement released by his family.</p></div><div data-component="text-block"><p>His other film credits include Predator, with Arnold Schwarzenegger, and Adam Sandler's Happy Gilmore.</p></div><div data-component="text-block"><p>Weathers, who began his career as an NFL linebacker, "was an exceptional human being who lived an extraordinary life", his family's statement added.</p></div><div data-component="text-block"><p>"Through his contributions to film, television, the arts and sports, he has left an indelible mark and is recognized worldwide and across generations," said the family. </p></div><div data-component="text-block"><p>"He was a beloved brother, father, grandfather, partner, and friend."</p></div><div data-component="text-block"><p>The athlete-turned-actor was comfortable starring in action and comedy, in appearances ranging from Arrested Development to The Mandalorian, where he featured in all three seasons of the Disney+ hit series. </p></div><div data-component="text-block"><p>His one-time co-star, the former California governor and superhero action star Schwarzenegger, praised Weathers on X, formerly Twitter: "Carl Weathers will always be a legend. An extraordinary athlete, a fantastic actor, and a great person. </p></div><div data-component="text-block"><p>"We couldn't have made Predator without him. And we certainly wouldn't have had such a wonderful time making it."</p></div><div data-component="text-block"><p>Born in 1948 in New Orleans, Weathers began his career playing football at San Diego State University, where he studied theatre acting, before joining the Oakland Raiders in 1970.</p></div><div data-component="text-block"><p>During his over 50-year career in Hollywood, he appeared in more than 75 films and TV shows, according to Deadline. </p></div><div data-component="text-block"><p>In 2021 he was nominated for an Emmy for his role in The Mandalorian. He directed two episodes of the Star Wars series, as well as episodes of Law &amp; Order and Chicago Med.</p></div><div data-component="text-block"><p>He was also known for Action Jackson, Close Encounters of the Third Kind, Eight Crazy Nights, Little Nicky and the Toy Story franchise.</p></div><div data-component="text-block"><p>Adam Sandler paid tribute on social media, writing: "A true great man. Great dad. Great actor. Great athlete."</p></div><div data-component="text-block"><p>"What a guy!! Everyone loved him," he wrote. "Love to his entire family and Carl will always be known as a true legend."</p></div><div data-component="text-block"><p>Breaking Bad actor Giancarlo Esposito said: "I will sorely miss my dear friend &amp; brother Carl Weathers. You are truly one of the most wonderful human beings I have had the honor &amp; pleasure of spending time with!"</p></div><div data-component="text-block"><p>In an interview with the Detroit News last year, Weathers called himself a "lucky guy".</p></div><div data-component="text-block"><p>There are so many people that came before me who I admired and whose success I wanted to emulate, and just kind of hit the benchmarks they hit in terms of success, who created a pathway that I've been able to walk and find success as a result," he said. "And hopefully I can inspire someone else to do good work as well." </p></div><div data-component="text-block"><p>"I guess I'm just a lucky guy."</p></div><section data-component="links-block"><p><h2>More on this story</h2></p></section></article></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Isn't the <html> Element 100% Supported on CanIUse.com? (284 pts)]]></title>
            <link>https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported</link>
            <guid>39235001</guid>
            <pubDate>Fri, 02 Feb 2024 21:56:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported">https://anderegg.ca/2024/02/02/why-isnt-the-html-element-100-supported</a>, See on <a href="https://news.ycombinator.com/item?id=39235001">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
				<article>
					
					<h3>February 02, 2024</h3>
					<p>I saw a <a href="https://mastodon.gamedev.place/@Ronflaix/111862153259345050">Mastodon post</a> that made me laugh this morning. It seemed sort of crazy that the <code>html</code> element <a href="https://caniuse.com/mdn-html_elements_html">wouldn’t have 100% support</a> on CanIUse.com. Heck, I’ve been using it since 1994 and it worked just fine back then! This led me down a bit of a rabbit hole.</p>

<p>A bit of background, first. <a href="https://caniuse.com/">Can I Use…</a> is a site that helps web developers track the adoption rate of web technologies. It estimates browser usage, measures feature compatibility, and spits out a number that tries to reflect how available a feature is. It’s a site I’ve been using almost since <a href="https://web.archive.org/web/20100430032738/http://caniuse.com/">it launched in 2010</a> and I’ve always found it really useful.</p>

<p>So why is it currently saying the <code>html</code> element only has 97.34% support? That’s less than the current support percentage for the <a href="https://caniuse.com/audio"><code>audio</code> element</a>! It also looks like the same is true for the <a href="https://caniuse.com/mdn-html_elements_a"><code>a</code></a> and <a href="https://caniuse.com/mdn-html_elements_p"><code>p</code></a> elements with exactly the same 97.34% support number.</p>

<p>One thing I learned when looking into this is that a lot of the data on the site actually comes from <a href="https://developer.mozilla.org/en-US/">MDN</a> <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup>. MDN is another resource I use and trust, so this seems reasonable to me. It also often has stats about feature uptake, so it makes sense for CanIUse.com to piggyback on that.</p>

<p>Looking at the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html">MDN page for the <code>html</code> element</a>, it has a <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html#browser_compatibility">browser compatibility section</a>. In that are two rows with a lot of red Xs. The first is for the optional <code>manifest</code> attribute on the <code>html</code> element. This is deprecated and was never standardized. The second is the related “<a href="https://w3c.github.io/webappsec-secure-contexts/">secure context required</a>”, which is an <a href="https://www.w3.org/standards/types/#x2-3-editor-s-draft">Editor’s Draft</a> —&nbsp;that is, not something currently on the standardization track. I don’t know how this was previously related to the <code>html</code> element, but that use was also <a href="https://caniuse.com/mdn-html_elements_html_manifest_secure_context_required">never standardized and is deprecated</a>.</p>

<p>So, there are two features listed here that almost all browsers <em>correctly</em> do not support. But still, it doesn’t look like this is the reason for the missing 2.66%. There are some browsers that are listed as “Support Unknown”. Adding up all the current usage for these browsers comes to 1.27%. There’s also an entry for Android Browser versions 2.1–4.3 which is listed as not supporting the <code>html</code> element — which I find highly dubious — but it’s listed as having a usage share of 0%. I suppose there might be some rounding errors here that would bump the 1.27% to 2.66%? But I still find this very unclear. Also, I feel very confident that those older browsers supported the <code>html</code> element!</p>

<p>So yeah, I don’t have a great answer for this. If you do, <a href="https://mastodon.social/@gavinanderegg">please let me know</a>! I’ve always taken the numbers from CanIUse.com with a few grains of salt, but I’ll be adding a few more going forward. I still think it’s a great resource.</p>

<hr>

<p><strong>UPDATE:</strong> <a href="https://cliff.social/@rezonant">rezonant</a> on Mastodon poked me to let me know that he posted a <a href="https://news.ycombinator.com/item?id=39236148">comment on Hacker News</a> that has a possible explanation. The short version: if you switch to “% of all tracked” in the top right beside “usage”, and then add up the “support unknown” browser number, you get 99.98%. It’s a lot easier to see how rounding errors could make this the correct number. Still, I think the way older browsers are handled here is confusing. It doesn’t affect the overall number too much, but in the case of base level elements like <code>html</code>, it seems odd.</p>

<hr>



				</article>
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenBSD System-Call Pinning (120 pts)]]></title>
            <link>https://lwn.net/SubscriberLink/959562/0578b8e463f790c1/</link>
            <guid>39233943</guid>
            <pubDate>Fri, 02 Feb 2024 20:33:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lwn.net/SubscriberLink/959562/0578b8e463f790c1/">https://lwn.net/SubscriberLink/959562/0578b8e463f790c1/</a>, See on <a href="https://news.ycombinator.com/item?id=39233943">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<!-- $Id: slink-trial,v 1.1 2005-11-04 21:27:01 corbet Exp $ -->
<center>
<table>
<tbody><tr><td>
<h3>Welcome to LWN.net</h3>
<p>
The following subscription-only content has been made available to you 
by an LWN subscriber.  Thousands of subscribers depend on LWN for the 
best news from the Linux and free software communities.  If you enjoy this 
article, please consider accepting the trial offer on the right.  Thank you
for visiting LWN.net!
</p></td><td>
<div>
<h3>Free trial subscription</h3>
           <p>
           Try LWN for free for 1 month: no payment
           or credit card required.  <a href="https://lwn.net/Promo/slink-trial2-3/claim">Activate
           your trial subscription now</a> and see why thousands of
           readers subscribe to LWN.net.
           
</p></div>
</td>
</tr>

</tbody></table>
</center>

<p>
<a href="https://en.wikipedia.org/wiki/Return-oriented_programming">
Return-oriented programming</a> (ROP) attacks are hard to defend against.
Partial mitigations such as address-space layout randomization, stack
canaries, and other techniques are commonly deployed to try and frustrate
ROP attacks. Now, OpenBSD is experimenting with a new
mitigation that makes it harder for attackers to make system
calls, although some security researchers have expressed doubt that it will
prove effective at stopping real-world attacks.
In his
announcement message, Theo de Raadt said that this work
"<q>makes some specific low-level attack
methods unfeasable on OpenBSD, which will force the use of other methods.</q>"
</p>

<p>
Return-oriented programming is one of a family of techniques that use
indirect jumps to call
bits of code that already exist in a process's address space in an
attacker-controlled order. The original attack involved overwriting the stack
with carefully chosen addresses so that a function would "return" to a new
location. Since the original discovery, other related attacks that use jumps
through function pointers, signals, and other indirect jumps have been developed.
</p>

<p>
In December, De Raadt sent a <a href="https://lwn.net/Articles/959664/">patch</a> to the
OpenBSD mailing list expanding OpenBSD's restrictions on the locations from
which a process can make system calls.
<a href="https://github.com/openbsd/src/commit/83762a71f74848f4d09174ce350838b4204957c5">
A previous commit</a> added code that declares a new ELF section which
specifies where particular system calls are located within a program, so that the
kernel can detect when a program tries to call a system call from the wrong
location. Since OpenBSD does not have a stable system-call interface (instead
suggesting that programs go through the C library for a stable interface), the
new sections will not need to be explicitly added to most binary programs.
Now that patch has <a href="https://lwn.net/Articles/959883/">been merged</a>,
finishing a process which De Raadt said has taken five years.
</p>

<h4>Background</h4>

<p>
OpenBSD <a href="https://lwn.net/Articles/806776/">already restricted</a> where programs can make
system calls. In 2019, De Raadt added code to ensure that system calls could only be
made from four locations: in the text of a static binary (that links the C
library statically, and so doesn't have a separate section at runtime), in the
signal trampoline (where a system call is required to return from a signal
handler), in the text of <tt>ld.so</tt> (the dynamic linker, that needs to make
system calls to set up the process's address space), and in the text of
<tt>libc.so</tt> (where the OpenBSD system call stubs live).
</p>

<p>
This code relied on a new
<a href="https://man.openbsd.org/msyscall"><tt>msyscall()</tt></a>
system call to let the linker inform the
kernel of where <tt>libc.so</tt>
(the shared object for the system's C library)
is mapped within the address space. In February
2023, De Raadt <a href="https://lwn.net/Articles/959668/">extended</a> these protections with the
introduction of
<a href="https://man.openbsd.org/OpenBSD-7.4/pinsyscall"><tt>pinsyscall()</tt></a>,
which is used to say where in the binary
a process is allowed to call
<a href="https://man.openbsd.org/execve.2"><tt>execve()</tt></a>. Both of these
system calls can only be invoked once by a given process, which is done by the
dynamic linker.
</p>

<pre>    int msyscall(void *addr, size_t len);
    int pinsyscall(int syscall, void *start, size_t len);
</pre>

<p>
Despite its more generic signature, <tt>pinsyscall()</tt> only supports
specifying a location for <tt>execve()</tt> calls.
</p>

<p>
These mechanisms were also intended to make it harder for ROP
attacks to gain a foothold. Requiring the address from which a system
call is made to be within the <tt>msyscall()</tt> block ensures that an
attack cannot make use of any ROP gadgets ending in a system call that may be
present outside of the specially designated areas.
Requiring that <tt>execve()</tt> calls come from one
specific location is also intended to make it harder for an attack to figure out
where to make a call from, since calling <tt>execve()</tt> to execute an
attacker-controlled program is a common stepping stone in an attack.
</p>
<p>
The new work obsoletes both of
these mechanisms, with De Raadt <a href="https://lwn.net/Articles/959666">suggesting</a> that
once the new code had been adopted for a release or two, they could
"<q>turn msyscall() and the less powerful pinsyscall(2) into NOPs, and
eventually remove them</q>".
</p>

<h4>The patch</h4>

<p>
The new work adds a new
<a href="https://man.openbsd.org/pinsyscalls.2"><tt>pinsyscalls()</tt></a>
system call:
</p>

<pre>    int pinsyscalls(void *start, size_t len, u_int *pintable, int npins);
</pre>

<p>
<tt>pinsyscalls()</tt> sends a "pintable" specifying from where in the process's
address space each possible system call is expected to be made.
The kernel uses the information in the table to check on entry
to the kernel whether it is being invoked from a specified location. This check
is intended to prevent a ROP attack from setting the system call number and then
jumping directly to a system-call CPU instruction corresponding to a different
system call. For example, an attack wishing to make an <tt>execve()</tt> call
would need to jump to the specific instruction in the C library that has been
added to the allowlist for that call, not another stub or
the middle of an unrelated instruction which simply happens to decode as a
system call instruction.
</p>

<p>
When setting up a new process, the dynamic linker uses <tt>pinsyscalls()</tt> to
inform the kernel about from where the process expects to make system calls.
The new work adds an "openbsd.syscalls" ELF section to
select programs: <tt>ld.so</tt>,
<tt>libc.so</tt>, and <tt>libc.a</tt>.
The new ELF section
contains an array of program offsets and system call numbers, indicating which
system call is expected at each location. This section is read by the dynamic
linker and used to provide a suitable pintable to the kernel.
Programs that link against the C library
can therefore benefit from the new protection immediately, without requiring
changes to their build process. Unlike Linux, OpenBSD
develops the kernel and user-space together, so the user-space components of this
work are already in place.
</p>

<p>
Security researchers have expressed doubt about how useful this check is at preventing
compromises. One researcher, "stein",
<a href="https://isopenbsdsecu.re/mitigations/pinsyscall/">
noted</a> that "<q>an attacker able to perform ROP can simply use the libc stub,
instead of issuing raw syscalls</q>", referring to the possibility of an attack
jumping directly to the instruction which has been added to the allowlist for a particular system call.
Another researcher, Saagar Jha, <a href="https://federated.saagarjha.com/notice/AcmzyfPcwc8KDVlOqm">
commented</a> on the new patch, saying
"<q>if you take this to its logical conclusion it's just 'applications should
specify which system calls they use' which is literally just what pledge does
and it’s enforced by the kernel and not in some weird ad-hoc IP to syscall
number lookup scheme</q>".
</p>

<p>
OpenBSD does have existing mitigations designed to make it difficult for ROP
attacks to determine the location of the C library system call stubs. One such
protection is
<a href="https://en.wikipedia.org/wiki/Address_space_layout_randomization">
address-space layout randomization</a> (ASLR), which has been standard
in many operating systems for a long time. OpenBSD takes randomization of a
program's address space a step farther by also re-linking the sections of the C
library in a random order on boot, meaning that an attack must determine not
only the offset of the C library in memory, but also the offset of the specific
code to which the attack wishes to jump within the library.
Unfortunately, dynamically linked programs have to have this information in the
symbol relocation table in order to allow for calls to the shared object.
Therefore attacks that can construct a way to read memory can frequently leak
enough offset information to circumvent these protections. De Raadt gave
<a href="https://twitter.com/i/broadcasts/1kvJpmkYkaZxE">a talk</a>
(with <a href="https://www.openbsd.org/papers/csw2023.pdf">slides</a>)
about ROP mitigations in OpenBSD at CanSecWest in 2023, including several other
protections designed to make leaking information about the contents of a program
harder.
</p>

<p>
Unlike <tt>pledge()</tt>, this patch has the advantage of securing an application even if
the developer does not make any special effort. However, this protection is most
useful to programs that statically link OpenBSD's C library; programs that use
dynamic linking will still have all of the system calls used by the C library in
their address space. <tt>pledge()</tt> also permits dropping unnecessary permissions after
startup, which allows applications to use a more restrictive set of permissions
than a static defense like <tt>pinsyscalls()</tt> can permit.
</p>

<p>
This work was difficult to bring to completion. One of the largest obstacles
were programs written in Go. In his announcement that the new work had been
merged, De Raadt said: "<q>The direct-syscalls-inside-the-binary model used by
go (and only go, noone
else in the history of the unix software does this) provided the biggest
resistance against this effort</q>". He thanked Joel Sing specifically for his
work to make the Go ecosystem compatible with the changes.
</p>

<p>
Since Linux permits programs to make system calls directly, without going
through a wrapper from a blessed C library, and is unlikely to change this
policy, additional steps would be needed to incorporate a similar mechanism
there. Some Linux programs make system calls directly in order to avoid
depending on a specific C library, but others make system calls directly in
order to use new features which have not yet been wrapped by the system's C
library; OpenBSD doesn't have this problem since its C library and kernel are
developed in lockstep.
</p>

<h4>Conclusion</h4>

<p>
OpenBSD has a long history of adding novel mitigations, some of which are
adopted by other projects and some of which are not. This work seems unlikely to
be adopted elsewhere, given the doubts around the practical benefit and the
costs of adding additional complexity to how system calls are performed.
This work does add another barrier to constructing a ROP
attack on OpenBSD, however, and seems especially beneficial for
statically linked programs that use only a few system calls and have not yet made
use of pledge.
</p><br clear="all">
               <br clear="all">
               <blockquote>
<p>
<b>Did you like this article?</b>  Please accept our 
<a href="https://lwn.net/Promo/slink-trial2-3/claim">trial subscription offer</a> to be
able to see more content like it and to participate in the discussion.
</p>
</blockquote>
<hr><p>
           (<a href="https://lwn.net/Login/?target=/Articles/959562/">Log in</a> to post comments)
           </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Limitarianism: The Case Against Extreme Wealth (149 pts)]]></title>
            <link>https://www.hive.co.uk/Product/Ingrid-Robeyns/Limitarianism--The-Case-Against-Extreme-Wealth/28866492</link>
            <guid>39233239</guid>
            <pubDate>Fri, 02 Feb 2024 19:46:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.hive.co.uk/Product/Ingrid-Robeyns/Limitarianism--The-Case-Against-Extreme-Wealth/28866492">https://www.hive.co.uk/Product/Ingrid-Robeyns/Limitarianism--The-Case-Against-Extreme-Wealth/28866492</a>, See on <a href="https://news.ycombinator.com/item?id=39233239">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="description"><p>â€˜The best case I've read for putting an upper limit on the accumulation of wealthâ€™ Richard WilkinsonNo-one deserves to be a millionaire.</p><p>Not even you. We all notice when the poor get poorer: when there are more rough sleepers and food bank queues start to grow.</p><p>But if the rich become richer, there is nothing much to see in public and, for most of us, daily life doesn't change. Or at least, not immediately.   In this astonishing, eye-opening intervention, world-leading philosopher and economist Ingrid Robeyns exposes the true extent of our wealth problem, which has spent the past fifty years silently spiralling out of control.</p><p>In moral, political, economic, social, environmental and psychological terms, she shows, extreme wealth is not only unjustifiable but harmful to us all - the rich included.   In place of our current system, Robeyns offers a breathtakingly clear alternative: limitarianism.</p><p>The answer to so many of the problems posed by neoliberal capitalism - and the opportunity for a vastly better world - lies in placing a hard limit on the wealth that any one person can accumulate. Because nobody deserves to be a millionaire. Not even you.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[New Super Secret Surveillance Court Covering Old Super Secret Surveillance Court (143 pts)]]></title>
            <link>https://www.techdirt.com/2024/02/02/we-shouldnt-allow-a-new-super-secret-surveillance-court-cover-up-the-civil-liberties-problems-of-the-old-super-secret-surveillance-court/</link>
            <guid>39233080</guid>
            <pubDate>Fri, 02 Feb 2024 19:32:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techdirt.com/2024/02/02/we-shouldnt-allow-a-new-super-secret-surveillance-court-cover-up-the-civil-liberties-problems-of-the-old-super-secret-surveillance-court/">https://www.techdirt.com/2024/02/02/we-shouldnt-allow-a-new-super-secret-surveillance-court-cover-up-the-civil-liberties-problems-of-the-old-super-secret-surveillance-court/</a>, See on <a href="https://news.ycombinator.com/item?id=39233080">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="storywrap-430653">


<h3>from the <i>not-fixing-the-problem</i> dept</h3>

<p>For years now we’ve been covering the big ongoing fights between the US and the EU regarding the transfer of user data across the Atlantic. The main issue was that due to somewhat different data protection/privacy laws between the EU and the US, the two keep trying to work out a “deal” that allows (mostly) US companies to stores data from EU users on servers in the US. This transatlantic data flow agreement is important. It would be difficult for many US companies to offer services to EU citizens without it.</p>
<p>But it’s been a fucking mess for over a decade. Almost entirely because of US surveillance programs.</p>
<p>The agreements to handle this have gone by various names, starting with the <a target="_blank" rel="noreferrer noopener" href="https://www.techdirt.com/2015/10/06/nsa-screws-up-another-thing-eu-court-justice-throws-internet-loop-ending-safe-harbor/">EU/US Privacy “safe harbor,”</a> and then later the <a target="_blank" rel="noreferrer noopener" href="https://www.techdirt.com/2022/03/29/eu-us-say-theyve-agreed-to-a-new-privacy-shield-that-doesnt-seem-to-deal-with-any-of-the-problems-of-the-old-one/">“Privacy Shield.”</a> In both cases, those agreements were eventually <a target="_blank" rel="noreferrer noopener" href="https://www.techdirt.com/2020/07/16/as-expected-us-surveillance-social-media-leads-to-eu-court-justice-rejecting-eu-us-privacy-shield/">rejected by the EU Court of Justice</a>, almost entirely because of the very big problem of the US’s surveillance activities, mostly overseen by the secretive FISA Court. (As a side note, EU government surveillance is in many ways worse than the US’s similar surveillance efforts, but somehow that never comes up in any of these discussions… but, I digress…).</p>
<p>Back in the fall of 2022, the EU and the US excitedly announced a new agreement to replace the old rejected agreements. Yet, as we pointed out at the time, unless they agreed to stop NSA surveillance on basically all electronic communications outside of the US, it wasn’t clear how it would actually fix the underlying reason these agreements keep getting thrown out.</p>
<p>As Politico recently detailed, the way the US has “fixed” this in the new privacy agreement… is to set up <a target="_blank" rel="noreferrer noopener" href="https://www.politico.com/news/2024/01/17/inside-bidens-secret-surveillance-court-00136175">an entirely new, entirely secretive surveillance court</a>. What could go wrong?</p>
<blockquote>
<p><em>Officially known as the Data Protection Review Court, it was authorized in an October 2022 executive order to fix a collision of European and American law that had been blocking the lucrative flow of consumer data between American and European companies for three years.</em></p>
<p><em>The court’s </em><a target="_blank" rel="noreferrer noopener" href="https://www.politico.com/news/2023/11/14/data-protection-review-court-judges-00127154"><em>eight judges were named last November</em></a><em>, including former U.S. Attorney General Eric Holder. Its existence has allowed companies to resume the lucrative transatlantic data trade with the blessing of EU officials.</em></p>
<p><em>The details get blurry after that.</em></p>
<p><em>The court’s location is a secret, and the Department of Justice will not say if it has taken a case yet, or when it will. Though the court has a clear mandate — ensuring Europeans their privacy rights under U.S. law — its decisions will also be kept a secret, from both the EU residents petitioning the court and the federal agencies tasked with following the law. Plaintiffs are not allowed to appear in person and are represented by a special advocate, appointed by the U.S. attorney general.</em></p>
</blockquote>
<p>That doesn’t seem that great.</p>
<p>Also, this new quasi-court has some other oddities, including that it is open to Europeans, but not Americans.</p>
<blockquote>
<p><em>U.S. residents who suspect they are under improper surveillance cannot go to the Data Protection Review Court. Under U.S. law, they can go to a federal court — but only if they can show a concrete wrong or harm that gives them legal standing, which presents a Catch-22, since they can’t prove what they don’t know.</em></p>
<p><em>Adam Klein, former chair of the Privacy and Civil Liberties Oversight Board, an independent agency within the Executive Branch, pointed to former Trump campaign adviser Carter Page as the type of individual who could have benefited from a mechanism like the DPRC. Page was surveilled by the FBI during the 2016 presidential election as part of a probe into Russian influence in U.S. politics — and Justice Department inspector general investigation later found a swath of errors and material omissions in the documents used to seek the surveillance warrant. An FBI lawyer ultimately pleaded guilty to altering a document used for that warrant.</em></p>
<p><em>But Page himself had little recourse. He filed a lawsuit in 2020 seeking $75 million from the government and several current and former FBI and DOJ officials for violating his constitutional rights. A </em><a target="_blank" rel="noreferrer noopener" href="https://www.politico.com/news/2022/09/01/trump-russia-fbi-doj-00054593"><em>federal judge called</em></a><em> the FBI’s conduct “troubling,” but ultimately found the law bars Page from pursuing a civil lawsuit. An appeal is pending.</em></p>
<p><em>Now, with the DPRC in place, “We’re in an odd place when non-residents have easier access to a place to raise their concerns about U.S. government surveillance than Americans do,” said Klein.</em></p>
</blockquote>
<p>But even Europeans have no clear path to using this court that is so secretive no one’s even entirely sure if it’s actually opened for business.</p>
<blockquote>
<p><em>According to the executive order, getting before the DPRC starts with a long preliminary process: a citizen complaint first has to shuttle between an EU data protection official and the U.S.’ Office of the Director of National Intelligence, which decides whether there was a civil rights violation from the data collection.</em></p>
<p><em>Regardless of the results, the response to the initial complaint will neither confirm or deny that the EU resident was under U.S. surveillance. The response will say there either was no violation found, or that there was a violation found and that the U.S. government took appropriate steps to resolve it. It won’t specify which one.</em></p>
<p><em>The EU resident can then appeal directly to the DPRC in America, — with the assistance of a court-appointed special advocate. That advocate will have the details from the underlying ODNI decision — although that decision remains off-limits to the person making the appeal.</em></p>
<p><em>“What are you going to write in the appeal? Nothing, because you don’t know what the answer is,” Schrems said. “As a lawyer, it’s really hard that you’ll ever win a case by saying ‘I appeal’ without saying what your problem is with the decision.”</em></p>
</blockquote>
<p>While this seems to be a setup designed to make bureaucrats on either side of the Atlantic pretend they’re doing something useful, it’s hard to see how it will actually solve the underlying problems. Which, again, are because of NSA surveillance rubber stamped by the other secretive court, the FISA Court.</p>
<p>Stacking up more secretive courts does not seem like a real solution. Fixing overly broad, mass surveillance is.</p>
<p>But apparently that’s off the table.</p>
<p>
Filed Under: <a href="https://www.techdirt.com/tag/data-protection-review-court/" rel="tag">data protection review court</a>, <a href="https://www.techdirt.com/tag/eu/" rel="tag">eu</a>, <a href="https://www.techdirt.com/tag/nsa/" rel="tag">nsa</a>, <a href="https://www.techdirt.com/tag/privacy-shield/" rel="tag">privacy shield</a>, <a href="https://www.techdirt.com/tag/secrecy/" rel="tag">secrecy</a>, <a href="https://www.techdirt.com/tag/surveillance/" rel="tag">surveillance</a>, <a href="https://www.techdirt.com/tag/transatlantic-data-flows/" rel="tag">transatlantic data flows</a>
<br>
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pkl, a Programming Language for Configuration (159 pts)]]></title>
            <link>https://pkl-lang.org/blog/introducing-pkl.html</link>
            <guid>39232976</guid>
            <pubDate>Fri, 02 Feb 2024 19:22:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pkl-lang.org/blog/introducing-pkl.html">https://pkl-lang.org/blog/introducing-pkl.html</a>, See on <a href="https://news.ycombinator.com/item?id=39232976">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="preamble">

<p>We are delighted to announce the open source first release of Pkl (pronounced <em>Pickle</em>), a programming language for producing configuration.</p>
<p>When thinking about configuration, it is common to think of static languages like JSON, YAML, or Property Lists.
While these languages have their own merits, they tend to fall short when configuration grows in complexity.
For example, their lack of expressivity means that code often gets repeated.
Additionally, it can be easy to make configuration errors, because these formats do not provide any validation of their own.</p>
<p>To address these shortcomings, sometimes formats get enhanced by ancillary tools that add special logic.
For example, perhaps there’s a need to make code more <a href="https://en.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourself"><abbr title="Don't Repeat Yourself">DRY</abbr></a>, so a special property is introduced that understands how to resolve references, and merge objects together.
Alternatively, there’s a need to guard against validation errors, so some new way is created to validate a configuration value against an expected type.
Before long, these formats almost become programming languages, but ones that are hard to understand and hard to write.</p>
<p>On the other end of the spectrum, a general-purpose language might be used instead.
Languages like Kotlin, Ruby, or JavaScript become the basis for <a href="https://en.wikipedia.org/wiki/Domain-specific_language"><abbr title="Domain-specific language">DSL</abbr></a>s that generate configuration data.
While these languages are tremendously powerful, they can be awkward to use for describing configuration, because they are not oriented around defining and validating data.
Additionally, these DSLs tend to be tied to their own ecosystems.
It is a hard sell to use a Kotlin DSL as the configuration layer for an application written in Go.</p>
<p>We created Pkl because we think that configuration is best expressed as a blend between a static language and a general-purpose programming language.
We want to take the best of both worlds; to provide a language that is declarative and simple to read and write, but enhanced with capabilities borrowed from general-purpose languages.
When writing Pkl, you are able to use the language features you’d expect, like classes, functions, conditionals, and loops.
You can build abstraction layers, and share code by creating packages and publishing them.
Most importantly, you can use Pkl to meet many different types of configuration needs.
It can be used to produce static configuration files in any format, or be embedded as a library into another application runtime.</p>
<p>We designed Pkl with three overarching goals:</p>
<div>
<ul>
<li>
<p>To provide safety by catching validation errors before deployment.</p>
</li>
<li>
<p>To scale from simple to complex use-cases.</p>
</li>
<li>
<p>To be a joy to write, with our best-in-class IDE integrations.</p>
</li>
</ul>
</div>
</div><div>
<h2 id="a-quick-tour-of-pkl"><a href="#a-quick-tour-of-pkl"></a><a href="#a-quick-tour-of-pkl">A Quick Tour of Pkl</a></h2>
<div>
<p>We created Pkl to have a familiar syntax to developers, and to be easy to learn. That is why we’ve included features like classes, functions, loops, and type annotations.</p>
<p>For example, here is a Pkl file (module) that defines a configuration schema for an imaginary web application.</p>
<div>
<table>
<tbody><tr>
<td>
<i title="Note"></i>
</td>
<td>
This file defines types, and not data. This is a common pattern in Pkl, and we call this a <em>template</em>.
</td>
</tr>
</tbody></table>
</div>
<div id="application-pkl">
<p>Application.pkl</p>
<div>
<pre><code data-lang="pkl"><span>module</span> <span>Application</span>

<span>/// The hostname that this server responds to.</span>
<span>hostname</span><span>:</span> <span>String</span>

<span>/// The port to listen on.</span>
<span>port</span><span>:</span> <span>UInt16</span>

<span>/// The environment to deploy to.</span>
<span>environment</span><span>:</span> <span>Environment</span>

<span>/// The database connection for this application</span>
<span>database</span><span>:</span> <span>Database</span>

<span>class</span> <span>Database</span> <span>{</span>
  <span>/// The username for this database.</span>
  <span>username</span><span>:</span> <span>String</span>

  <span>/// The password for this database.</span>
  <span>password</span><span>:</span> <span>String</span>

  <span>/// The remote host for this database.</span>
  <span>host</span><span>:</span> <span>String</span>

  <span>/// The remote port for this database.</span>
  <span>port</span><span>:</span> <span>UInt16</span>

  <span>/// The name of the database.</span>
  <span>dbName</span><span>:</span> <span>String</span>
<span>}</span>

<span>typealias</span> <span>Environment</span> <span>=</span> <span>"dev"</span><span>|</span><span>"qa"</span><span>|</span><span>"prod"</span></code></pre>
</div>
</div>
<p>And here is how configuration data might be defined:</p>
<div>
<p>localhost.pkl</p>
<div>
<pre><code data-lang="pkl"><span>amends</span> <span>"Application.pkl"</span>

<span>hostname</span> <span>=</span> <span>"localhost"</span>

<span>port</span> <span>=</span> <span>3599</span>

<span>environment</span> <span>=</span> <span>"dev"</span>

<span>database</span> <span>{</span>
  <span>host</span> <span>=</span> <span>"localhost"</span>
  <span>port</span> <span>=</span> <span>5786</span>
  <span>username</span> <span>=</span> <span>"admin"</span>
  <span>password</span> <span>=</span> <span>read</span><span>(</span><span>"env:DATABASE_PASSWORD"</span><span>)</span> <i data-value="1"></i><b>(1)</b>
  <span>dbName</span> <span>=</span> <span>"myapp"</span>
<span>}</span></code></pre>
</div>
</div>

<p>It is easy to create variations of the same base data by <a href="https://pkl-lang.org/main/current/language-reference/index.html#amending-objects" class="page">amending</a>.
For example, let’s imagine that we want to run four databases locally, as sidecars.
This uses a <a href="https://pkl-lang.org/main/current/language-reference/index.html#for-generators" class="page">for generator</a> to produce four variations, each of which amends the base <code>db</code> and specifies a different port.</p>
<div>
<p>sidecars.pkl</p>
<div>
<pre><code data-lang="pkl"><span>import</span> <span>"Application.pkl"</span>

<span>hidden</span> <span>db</span><span>:</span> <span>Application</span><span>.</span><span>Database</span> <span>=</span> <span>new</span> <span>{</span>
  <span>host</span> <span>=</span> <span>"localhost"</span>
  <span>username</span> <span>=</span> <span>"admin"</span>
  <span>password</span> <span>=</span> <span>read</span><span>(</span><span>"env:DATABASE_PASSWORD"</span><span>)</span>
  <span>dbName</span> <span>=</span> <span>"myapp"</span>
<span>}</span>

<span>sidecars</span> <span>{</span>
  <span>for</span> <span>(</span><span>offset</span> <span>in</span> <span>List</span><span>(</span><span>0</span><span>,</span> <span>1</span><span>,</span> <span>2</span><span>,</span> <span>3</span><span>)</span><span>)</span> <span>{</span>
    <span>(</span><span>db</span><span>)</span> <span>{</span>
      <span>port</span> <span>=</span> <span>6000</span> <span>+</span> <span>offset</span>
    <span>}</span>
  <span>}</span>
<span>}</span></code></pre>
</div>
</div>
<p>Pkl programs can be easily rendered to common formats.</p>
<div id="tabs-1">
<div>
<ul>
<li id="tabs-1-yaml">
<p>YAML</p>
</li>
<li id="tabs-1-json">
<p>JSON</p>
</li>
<li id="tabs-1-xml">
<p>XML</p>
</li>
</ul>
</div>
<div id="tabs-1-yaml--panel" aria-labelledby="tabs-1-yaml">
<div>
<pre><code data-lang="text">$ export DATABASE_PASSWORD=hunter2
$ pkl eval --format yaml sidecars.pkl</code></pre>
</div>
<div>
<pre><code data-lang="yaml">sidecars:
- username: admin
  password: hunter2
  host: localhost
  port: 6000
  dbName: myapp
- username: admin
  password: hunter2
  host: localhost
  port: 6001
  dbName: myapp
- username: admin
  password: hunter2
  host: localhost
  port: 6002
  dbName: myapp
- username: admin
  password: hunter2
  host: localhost
  port: 6003
  dbName: myapp</code></pre>
</div>
</div>
<div id="tabs-1-json--panel" aria-labelledby="tabs-1-json">
<div>
<pre><code data-lang="text">$ export DATABASE_PASSWORD=hunter2
$ pkl eval --format json sidecars.pkl</code></pre>
</div>
<div>
<pre><code data-lang="json">{
  "sidecars": [
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6000,
      "dbName": "myapp"
    },
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6001,
      "dbName": "myapp"
    },
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6002,
      "dbName": "myapp"
    },
    {
      "username": "admin",
      "password": "hunter2",
      "host": "localhost",
      "port": 6003,
      "dbName": "myapp"
    }
  ]
}</code></pre>
</div>
</div>
<div id="tabs-1-xml--panel" aria-labelledby="tabs-1-xml">
<div>
<pre><code data-lang="text">$ export DATABASE_PASSWORD=hunter2
$ pkl eval --format xml sidecars.pkl</code></pre>
</div>
<div>
<pre><code data-lang="xml">&lt;?xml version="1.0" encoding="UTF-8"?&gt;
&lt;root&gt;
  &lt;sidecars&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6000&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6001&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6002&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
    &lt;Database&gt;
      &lt;username&gt;admin&lt;/username&gt;
      &lt;password&gt;hunter2&lt;/password&gt;
      &lt;host&gt;localhost&lt;/host&gt;
      &lt;port&gt;6003&lt;/port&gt;
      &lt;dbName&gt;myapp&lt;/dbName&gt;
    &lt;/Database&gt;
  &lt;/sidecars&gt;
&lt;/root&gt;</code></pre>
</div>
</div>
</div>
<div>
<h3 id="built-in-validation"><a href="#built-in-validation"></a><a href="#built-in-validation">Built-in Validation</a></h3>
<p>Configuration is about data. And data needs to be valid.</p>
<p>In Pkl, validation is achieved using type annotations.
And, type annotations can optionally have constraints defined on them.</p>
<p>Here is an example, that defines the following constraints:</p>
<div>
<ul>
<li>
<p><code>age</code> must be between 0 and 130.</p>
</li>
<li>
<p><code>name</code> to not be empty.</p>
</li>
<li>
<p><code>zipCode</code> must be a string with five digits.</p>
</li>
</ul>
</div>
<div>
<p>Person.pkl</p>
<div>
<pre><code data-lang="pkl"><span>module</span> <span>Person</span>

<span>name</span><span>:</span> <span>String</span><span>(</span><span>!</span><span>isEmpty</span><span>)</span>

<span>age</span><span>:</span> <span>Int</span><span>(</span><span>isBetween</span><span>(</span><span>0</span><span>,</span> <span>130</span><span>)</span><span>)</span>

<span>zipCode</span><span>:</span> <span>String</span><span>(</span><span>matches</span><span>(</span><span>Regex</span><span>(</span><span>"<span>\\</span>d{5}"</span><span>)</span><span>)</span><span>)</span></code></pre>
</div>
</div>
<p>A failing constraint causes an evaluation error.</p>
<div>
<p>alessandra.pkl</p>
<div>
<pre><code data-lang="pkl"><span>amends</span> <span>"Person.pkl"</span>

<span>name</span> <span>=</span> <span>"Alessandra"</span>

<span>age</span> <span>=</span> <span>-</span><span>5</span>

<span>zipCode</span> <span>=</span> <span>"90210"</span></code></pre>
</div>
</div>
<p>Evaluating this module fails:</p>
<div>
<pre><code data-lang="text">$ pkl eval alessandra.pkl
–– Pkl Error ––
Type constraint `isBetween(0, 130)` violated.
Value: -5

5 | age: Int(isBetween(0, 130))
             ^^^^^^^^^^^^^^^^^
at Person#age (file:///Person.pkl)

5 | age = -5
          ^^
at alessandra#age (file:///alessandra.pkl)

106 | text = renderer.renderDocument(value)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
at pkl.base#Module.output.text (https://github.com/apple/pkl/blob/0.25.0/stdlib/base.pkl#L106)</code></pre>
</div>
<p>Constraints are arbitrary expressions.
This allows you to author types that can express any type of check that can be expressed in Pkl.
Here is a sample type that must be a string with an odd length, and whose first letter matches the last letter.</p>
<div>
<pre><code data-lang="pkl"><span>name</span><span>:</span> <span>String</span><span>(</span><span>length</span><span>.</span><span>isOdd</span><span>,</span> <span>chars</span><span>.</span><span>first</span> <span>==</span> <span>chars</span><span>.</span><span>last</span><span>)</span></code></pre>
</div>
</div>
<div>
<h3 id="sharing-packages"><a href="#sharing-packages"></a><a href="#sharing-packages">Sharing Packages</a></h3>
<p>Pkl provides the ability to publish <em>packages</em>, and to import them as dependencies in a project.
This provides an easy way to share Pkl code that can be used in other projects.</p>
<p>It is easy to create your own package and publish them as GitHub releases, or to upload them anywhere you wish.</p>
<p>Packages can be imported via the absolute URI:</p>
<div>
<pre><code data-lang="{pkl">import "package://pkg.pkl-lang.org/pkl-pantry/pkl.toml@1.0.0#/toml.pkl"

output {
  renderer = new toml.Renderer {}
}</code></pre>
</div>
<p>Alternatively, they can be managed as dependencies of a <a href="https://pkl-lang.org/main/current/language-reference/index.html#projects" class="page">project</a>.
Using a project allows Pkl to resolve version conflicts between different versions of the same dependency within a dependency graph.
It also means that you can import packages by a simpler name.</p>
<div>
<p>PklProject</p>
<div>
<pre><code data-lang="pkl"><span>amends</span> <span>"pkl:Project"</span>

<span>dependencies</span> <span>{</span>
  [<span>"toml"</span><span>]</span> <span>{</span> <span>uri</span> <span>=</span> <span>"package://pkg.pkl-lang.org/pkl-pantry/pkl.toml@1.0.0"</span> <span>}</span>
<span>}</span></code></pre>
</div>
</div>
<div>
<p>myconfig.pkl</p>
<div>
<pre><code data-lang="pkl"><span>import</span> <span>"@toml/toml.pkl"</span>

<span>output</span> <span>{</span>
  <span>renderer</span> <span>=</span> <span>new</span> <span>toml</span><span>.</span><span>Renderer</span> <span>{</span><span>}</span>
<span>}</span></code></pre>
</div>
</div>
<p>A set of packages are maintained by us, the Pkl team. These include:</p>
<div>
<ul>
<li>
<p><a href="https://github.com/apple/pkl-pantry" target="_blank" rel="noopener">pkl-pantry</a> — a monorepo that publishes many different packages.</p>
</li>
<li>
<p><a href="https://github.com/apple/pkl-k8s" target="_blank" rel="noopener">pkl-k8s</a> — templates for defining Kubernetes descriptors.</p>
</li>
</ul>
</div>
</div>
</div>
</div><div>
<h2 id="language-bindings"><a href="#language-bindings"></a><a href="#language-bindings">Language Bindings</a></h2>
<div>
<p>Pkl can produce configuration as textual output, and it can also be embedded as a library into other languages via our language bindings.</p>
<p>When binding to a language, Pkl schema can be generated as classes/structs in the target language.
For example, the <a href="#application-pkl">Application.pkl</a> example from above can be generated into Swift, Go, Java, and Kotlin.
Pkl even includes documentation comments in the target language.</p>
<div id="tabs-2">
<div>
<ul>
<li id="tabs-2-swift">
<p>Swift</p>
</li>
<li id="tabs-2-go">
<p>Go</p>
</li>
<li id="tabs-2-java">
<p>Java</p>
</li>
<li id="tabs-2-kotlin">
<p>Kotlin</p>
</li>
</ul>
</div>
<div id="tabs-2-swift--panel" aria-labelledby="tabs-2-swift">
<pre><code data-lang="swift">import PklSwift

public enum Application {}

extension Application {
    public enum Environment: String, CaseIterable, Decodable, Hashable {
        case dev = "dev"
        case qa = "qa"
        case prod = "prod"
    }

    public struct Module: PklRegisteredType, Decodable, Hashable {
        public static var registeredIdentifier: String = "Application"

        /// The hostname that this server responds to.
        public var hostname: String

        /// The port to listen on.
        public var port: UInt16

        /// The environment to deploy to.
        public var environment: Environment

        /// The database connection for this application
        public var database: Database

        public init(hostname: String, port: UInt16, environment: Environment, database: Database) {
            self.hostname = hostname
            self.port = port
            self.environment = environment
            self.database = database
        }
    }

    public struct Database: PklRegisteredType, Decodable, Hashable {
        public static var registeredIdentifier: String = "Application#Database"

        /// The username for this database.
        public var username: String

        /// The password for this database.
        public var password: String

        /// The remote host for this database.
        public var host: String

        /// The remote port for this database.
        public var port: UInt16

        /// The name of the database.
        public var dbName: String

        public init(username: String, password: String, host: String, port: UInt16, dbName: String) {
            self.username = username
            self.password = password
            self.host = host
            self.port = port
            self.dbName = dbName
        }
    }
}</code></pre>
</div>
<div id="tabs-2-go--panel" aria-labelledby="tabs-2-go">
<div>
<p>Application.pkl.go</p>
<div>
<pre><code data-lang="go">package application

type Application struct {
	// The hostname that this server responds to.
	Hostname string `pkl:"hostname"`

	// The port to listen on.
	Port uint16 `pkl:"port"`

	// The environment to deploy to.
	Environment Environment.Environment `pkl:"environment"`

	// The database connection for this application
	Database *Database `pkl:"database"`
}</code></pre>
</div>
</div>
<div>
<p>Database.pkl.go</p>
<div>
<pre><code data-lang="go">// Code generated from Pkl module `Application`. DO NOT EDIT.
package application

type Database struct {
	// The username for this database.
	Username string `pkl:"username"`

	// The password for this database.
	Password string `pkl:"password"`

	// The remote host for this database.
	Host string `pkl:"host"`

	// The remote port for this database.
	Port uint16 `pkl:"port"`

	// The name of the database.
	DbName string `pkl:"dbName"`
}</code></pre>
</div>
</div>
<div>
<p>environment/Environment.pkl.go</p>
<div>
<pre><code data-lang="go">// Code generated from Pkl module `Application`. DO NOT EDIT.
package Environment

import (
	"encoding"
	"fmt"
)

type Environment string

const (
	Dev  Environment = "dev"
	Qa   Environment = "qa"
	Prod Environment = "prod"
)

// String returns the string representation of Environment
func (rcv Environment) String() string {
	return string(rcv)
}</code></pre>
</div>
</div>
</div>
<div id="tabs-2-java--panel" aria-labelledby="tabs-2-java">
<pre><code data-lang="java">import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import java.util.Objects;
import org.pkl.config.java.mapper.Named;
import org.pkl.config.java.mapper.NonNull;

public final class Application {
  /**
   * The hostname that this server responds to.
   */
  public final @NonNull String hostname;

  /**
   * The port to listen on.
   */
  public final int port;

  /**
   * The environment to deploy to.
   */
  public final @NonNull Environment environment;

  /**
   * The database connection for this application
   */
  public final @NonNull Database database;

  public Application(@Named("hostname") @NonNull String hostname, @Named("port") int port,
      @Named("environment") @NonNull Environment environment,
      @Named("database") @NonNull Database database) {
    this.hostname = hostname;
    this.port = port;
    this.environment = environment;
    this.database = database;
  }

  public static final class Database {
    /**
     * The username for this database.
     */
    public final @NonNull String username;

    /**
     * The password for this database.
     */
    public final @NonNull String password;

    /**
     * The remote host for this database.
     */
    public final @NonNull String host;

    /**
     * The remote port for this database.
     */
    public final int port;

    /**
     * The name of the database.
     */
    public final @NonNull String dbName;

    public Database(@Named("username") @NonNull String username,
        @Named("password") @NonNull String password, @Named("host") @NonNull String host,
        @Named("port") long port, @Named("dbName") @NonNull String dbName) {
      this.username = username;
      this.password = password;
      this.host = host;
      this.port = port;
      this.dbName = dbName;
    }
  }

  public enum Environment {
    DEV("dev"),

    QA("qa"),

    PROD("prod");

    private String value;

    private Environment(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return this.value;
    }
  }
}</code></pre>
</div>
<div id="tabs-2-kotlin--panel" aria-labelledby="tabs-2-kotlin">
<pre><code data-lang="kotlin">import kotlin.Int
import kotlin.Long
import kotlin.String

data class Application(
  /**
   * The hostname that this server responds to.
   */
  val hostname: String,
  /**
   * The port to listen on.
   */
  val port: Int,
  /**
   * The environment to deploy to.
   */
  val environment: Environment,
  /**
   * The database connection for this application
   */
  val database: Database
) {
  data class Database(
    /**
     * The username for this database.
     */
    val username: String,
    /**
     * The password for this database.
     */
    val password: String,
    /**
     * The remote host for this database.
     */
    val host: String,
    /**
     * The remote port for this database.
     */
    val port: Int,
    /**
     * The name of the database.
     */
    val dbName: String
  )

  enum class Environment(
    val value: String
  ) {
    DEV("dev"),

    QA("qa"),

    PROD("prod");

    override fun toString() = value
  }
}</code></pre>
</div>
</div>
<p>Using code generation is just one of the many ways to embed Pkl within an application.
Our language bindings also provide evaluator APIs to control Pkl evaluation at a low level, and users are free to interact with Pkl at the abstraction level that makes the most sense for their application.</p>
</div>
</div><div>
<h2 id="editor-support"><a href="#editor-support"></a><a href="#editor-support">Editor Support</a></h2>
<div>
<p>We believe that a programming language is only as good as the experience of writing it.
That is why we aim to provide best-in-class editor support.
When writing Pkl in an editor, users are guided through the process of filling in configuration data from a given template.
Additionally, the editors provide instant feedback if any values are invalid, and documentation is immediately available when called upon.</p>
<p>We are also releasing our <a href="https://pkl-lang.org/intellij/current/index.html" class="page">IntelliJ plugin</a>, which provides rich support for JetBrains editors, including IntelliJ, Webstorm, GoLand, and PyCharm. These plugins are able to analyze a Pkl program and provide features like autocompletion, go-to-definition, and refactoring support.</p>
<p>Here are some of the features that are available:</p>
<div id="tabs-3">
<div>
<ul>
<li id="tabs-3-autocompletion">
<p>Autocompletion</p>
</li>
<li id="tabs-3-navigation">
<p>Navigation</p>
</li>
<li id="tabs-3-validation">
<p>Validation</p>
</li>
</ul>
</div>
<div id="tabs-3-autocompletion--panel" aria-labelledby="tabs-3-autocompletion">
<p><img src="https://pkl-lang.org/blog/_images/introducing-pkl/intellij-autocomplete.gif" alt="Autocomplete in IntelliJ">
</p>
</div>
<div id="tabs-3-navigation--panel" aria-labelledby="tabs-3-navigation">
<p><img src="https://pkl-lang.org/blog/_images/introducing-pkl/intellij-navigation.gif" alt="Navigation in IntelliJ">
</p>
</div>
<div id="tabs-3-validation--panel" aria-labelledby="tabs-3-validation">
<p><img src="https://pkl-lang.org/blog/_images/introducing-pkl/intellij-validation.gif" alt="Validation in IntelliJ">
</p>
</div>
</div>
<p>In addition, we are also planning on supporting the <a href="https://microsoft.github.io/language-server-protocol/">Language Server Protocol</a>, which will provide a similar level of integration in other editors.</p>
<div>
<table>
<tbody><tr>
<td>
<i title="Note"></i>
</td>
<td>
We are also releasing two other plugins: our <a href="https://pkl-lang.org/vscode/current/index.html" class="page">VS Code</a> plugin, and our <a href="https://pkl-lang.org/neovim/current/index.html" class="page">neovim</a> plugin. Today, these plugins only provide basic editing features like syntax highlighting and code folding.
</td>
</tr>
</tbody></table>
</div>
</div>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Over 2 percent of the US's electricity generation now goes to Bitcoin (152 pts)]]></title>
            <link>https://arstechnica.com/science/2024/02/over-2-percent-of-the-uss-electricity-generation-now-goes-to-bitcoin/</link>
            <guid>39232838</guid>
            <pubDate>Fri, 02 Feb 2024 19:09:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/science/2024/02/over-2-percent-of-the-uss-electricity-generation-now-goes-to-bitcoin/">https://arstechnica.com/science/2024/02/over-2-percent-of-the-uss-electricity-generation-now-goes-to-bitcoin/</a>, See on <a href="https://news.ycombinator.com/item?id=39232838">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Mining stakes    —
</h4>
            
            <h2 itemprop="description">US government tracking the energy implications of booming bitcoin mining in US.</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2024/02/GettyImages-1305523746-800x560.jpg" alt="Digital generated image of golden helium balloon in shape of bitcoin sign inflated with air pump and moving up against purple background.">
      <figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/02/GettyImages-1305523746.jpg" data-height="1449" data-width="2070">Enlarge</a> <span>/</span> It takes a lot of energy to keep pumping out more bitcoins.</p></figcaption>  </figure>

  




<!-- cache hit 265:single/related:c7edd0a16981d46bb6aabcd738c3c786 --><!-- empty -->
<p>What exactly is bitcoin mining doing to the electric grid? In the last few years, the US has seen a boom in cryptocurrency mining, and the government is now trying to track exactly what that means for the consumption of electricity. While its analysis is preliminary, the Energy Information Agency (EIA) estimates that large-scale cryptocurrency operations are now <a href="https://www.eia.gov/todayinenergy/detail.php?id=61364">consuming over 2 percent of the US's electricity</a>. That's roughly the equivalent of having added an additional state to the grid over just the last three years.</p>
<h2>Follow the megawatts</h2>
<p>While there is some small-scale mining that goes on with personal computers and small rigs, most cryptocurrency mining has moved to large collections of specialized hardware. While this hardware can be pricy compared to personal computers, the main cost for these operations is electricity use, so the miners will tend to move to places with low electricity rates. The EIA report notes that, in the wake of a crackdown on cryptocurrency in China, a lot of that movement has involved relocation to the US, where keeping electricity prices low has generally been a policy priority.</p>
<p>One independent estimate made by the <a href="https://ccaf.io/cbnsi/cbeci">Cambridge Centre for Alternative Finance</a> had the US as the home of just over 3 percent of the global bitcoin mining at the start of 2020. By the start of 2022, that figure was nearly 38 percent.</p>
<p>The Cambridge Center also estimates the global electricity use of all bitcoin mining, so it's possible to multiply that by the US's percentage and come up with an estimate for the amount of electricity that boom has consumed. Because of the uncertainties in these estimates, the number could be anywhere from 25 to 91 Terawatt-hours. Even the low end of that range would mean bitcoin mining is now using the equivalent of Utah's electricity consumption (the high end is roughly Washington's), which has significant implications for the electric grid as a whole.</p>
<p>So, the EIA decided it needed a better grip on what was going on. To get that, it went through trade publications, financial reports, news articles, and congressional investigation reports to identify as many bitcoin mining operations as it could. With 137 facilities identified, it then inquired about the power supply needed to operate them at full capacity, receiving answers for 101 of those facilities.</p>                                            
                                                        
<p>If running all-out, those 101 facilities would consume 2.3 percent of the US's average power demand. That places them on the high side of the Cambridge Center estimates.</p>
<h2>Finding power-ups</h2>
<p>The mining operations fall in two major clusters: one in Texas, and one extending from western New York down the Appalachians to southern Georgia. While there are additional ones scattered throughout the US, these are the major sites.</p>
<p>The EIA has also found some instances where the operations moved in near underutilized power plants and sent generation soaring again. Tracking the history of five of these plants showed that generation had fallen steadily from 2015 to 2020, reaching a low where they collectively produced just half a Terawatt-hour. Miners moving in nearby tripled production in just a year and has seen it rise to over 2 Terawatt-hours in 2022.</p>
<figure><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/02/Screenshot-2024-02-02-at-1.31.33%E2%80%AFPM.png" data-height="535" data-width="1123" alt="Power plants near bitcoin mining operations have seen generation surge over the last two years."><img alt="Power plants near bitcoin mining operations have seen generation surge over the last two years." src="https://cdn.arstechnica.net/wp-content/uploads/2024/02/Screenshot-2024-02-02-at-1.31.33%E2%80%AFPM-980x467.png" width="980" height="467"></a><figcaption><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2024/02/Screenshot-2024-02-02-at-1.31.33%E2%80%AFPM.png" data-height="535" data-width="1123">Enlarge</a> <span>/</span> Power plants near bitcoin mining operations have seen generation surge over the last two years.</p></figcaption></figure>
<p>These are almost certainly fossil fuel plants that might be reasonable candidates for retirement if it weren't for their use to supply bitcoin miners. So, these miners are contributing to all of the health and climate problems associated with the continued use of fossil fuels.</p>
<p>The EIA also found a number of strategies that miners used to keep their power costs low. In one case, they moved into a former aluminum smelting facility in Texas to take advantage of its capacious connections to the grid. In another, they put a facility next to a nuclear plant in Pennsylvania and set up a direct connection to the plant. The EIA also found cases where miners moved near natural gas fields that produced waste methane that would otherwise have been burned off.</p>
<p>Since bitcoin mining is the antithesis of an essential activity, several mining operations have signed up for demand-response programs, where they agree to take their operations offline if electricity demand is likely to exceed generating capacity in return for compensation by the grid operator. It has been widely reported that one facility in Texas—the one at the former aluminum smelter site—<a href="https://www.tpr.org/technology-entrepreneurship/2023-09-06/texas-paid-a-bitcoin-miner-more-than-30-million-to-power-down-during-heat-wave">earned over $30 million</a> by shutting down during a heat wave in 2023.</p>
<p>To better understand the implications of this major new drain on the US electric grid, the EIA will be performing monthly analyses of bitcoin operations during the first half of 2024. But based on these initial numbers, it's clear that the relocation of so many mining operations to the US will significantly hinder efforts to bring the US's electric grid to carbon neutrality.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: The classic Minesweeper on an irregular grid (268 pts)]]></title>
            <link>https://polyreplay.com/minesweepertwist</link>
            <guid>39232572</guid>
            <pubDate>Fri, 02 Feb 2024 18:48:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://polyreplay.com/minesweepertwist">https://polyreplay.com/minesweepertwist</a>, See on <a href="https://news.ycombinator.com/item?id=39232572">Hacker News</a></p>
<div id="readability-page-1" class="page">
    


<div id="loader">
					<p><span id="loader-percent-label">0%</span>
					</p>
					
					
				</div>




	


  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[jj init – getting serious about replacing Git with Jujutsu (124 pts)]]></title>
            <link>https://v5.chriskrycho.com/essays/jj-init/</link>
            <guid>39232456</guid>
            <pubDate>Fri, 02 Feb 2024 18:40:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://v5.chriskrycho.com/essays/jj-init/">https://v5.chriskrycho.com/essays/jj-init/</a>, See on <a href="https://news.ycombinator.com/item?id=39232456">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      


<p>
      <b><a href="https://v4.chriskrycho.com/2018/assumed-audiences.html">Assumed audience</a>:</b>
      People who have worked with Git or other modern version control systems like Mercurial, Darcs, Pijul, Bazaar, etc., and have at least a basic idea of how they work.

   </p><p><a href="https://github.com/martinvonz/jj#command-line-completion">Jujutsu</a> is a new version control system from a software engineer at Google, where it is on track to replace Google’s existing  with Perforce, Piper, and Mercurial. I find it interesting both for the approach it takes and for its careful design choices in terms of both implementation details and user interface. It offers one possible answer to a question I first started asking <a href="https://v4.chriskrycho.com/2014/next-gen-vcs.html">most of a decade ago</a>: <em>What might a next-gen version control system look like — one which actually learned from the best parts of all of this generation’s systems, including Mercurial, Git, Darcs, Fossil, etc.?</em></p>
<p>To answer that question, it is important to have a sense of what those lessons are. This is trickier than it might seem. Git has substantially the most<span></span> <span>“</span>mind-share” in the current generation; most software developers learn it and use it not because they have done any investigation of the tool and its alternatives but because it is a <em>de facto</em> standard: a situation which arose in no small part because of its<span></span> <span>“</span>killer app” in the form of GitHub. Developers who have been around for more than a decade or so have likely seen more than one version control system — but there are many, <em>many</em> developers for whom Git was their first and, so far, last <abbr title="version control system">VCS</abbr>.</p>
<p>The problems with Git are many, though. Most of all, its infamously terrible command line interface results in a terrible user experience. In my experience, very few working  developers have a good mental model for Git. Instead, they have a handful of commands they have learned over the years: enough to get by, and little more. The common rejoinder is that developers ought to learn how Git works internally — that everything will make more sense that way.</p>
<p>This is nonsense. Git’s internals are <em>interesting</em> on an implementation level, but frankly add up to an incoherent mess in terms of a user mental model. This is a classic mistake for software developers, and one I have fallen prey to myself any number of times. I do not blame the Git developers for it, exactly. No one should have to understand the internals of the system to use it well, though; that is a simple failure of software design. Moreover, even those internals do not particularly <em>cohere</em>. The index, the number of things labeled<span></span> <span>“</span>-ish” in the glossary, the way that a<span></span> <span>“</span>detached <code>HEAD</code><span></span><span>”</span> interacts with branches, the distinction between tags and branches, the important distinctions between commits, refs, and objects… It is not that any one of those things is bad in isolation, but as a set they do not amount to a mental model I can describe charitably. Put in programming language terms: One of the reasons the<span></span> <span>“</span>surface syntax” of Git is so hard is that its semantics are a bit confused, and that <em>inevitably</em> shows up in the interface to users.</p>
<p>Still, a change in a system so deeply embedded in the software development ecosystem is not cheap. Is it worth the cost of adoption?  Well, Jujutsu has a trick up its sleeve: there is no adoption cost. You just install it — <code>brew install jj</code> will do the trick on macOS — and run a single command in an existing Git repository, and… that’s it. (“There is no step 3.”) I expect that mode will always work, even though there will be a migration step at some point in the future, when Jujutsu’s own, non-Git backend becomes a viable — and ultimately the recommended — option. I am getting ahead of myself though. The first thing to understand is what Jujutsu is, and is not.</p>
<p>Jujutsu is two things:</p>
<ol>
<li>
<p><strong>It is a new front-end to Git.</strong> This is <em>by far</em> the less interesting of the two things, but in practice it is a substantial part of the experience of using the tool today. In this regard, it sits in the same notional space as something like <a href="https://github.com/Byron/gitoxide">gitoxide</a>. Jujutsu’s <code>jj</code> is far more usable for day to day work than gitoxide’s <code>gix</code> and <code>ein</code> so far, though, and it also has very different aims. That takes us to:</p>
</li>
<li>
<p><strong>It is a new design for distributed version control.</strong> This is by far the more interesting part. In particular, Jujutsu brings to the table a few key concepts — none of which are themselves novel, but the combination of which is <em>really</em> nice to use in practice:</p>
<ul>
<li><em>Changes</em> are distinct from <em>revisions</em>: an idea borrowed from Mercurial, but quite different from Git’s model.</li>
<li>Conflicts are first-class items: an idea borrowed from <a href="https://pijul.org/">Pijul</a> and <a href="https://darcs.net/">Darcs</a>.</li>
<li>The user interface is not only reasonable but actually <em>really good</em>: an idea borrowed from… literally every <abbr>VCS</abbr> other than Git.</li>
</ul>
</li>
</ol>
<p>The combo of those means that you can use it today in your existing Git repos, as I have been for the past six months, and that it is a <em>really good</em> experience using it that way. (Better than Git!) Moreover, given it is being actively developed at and by Google for use as a replacement for its current custom <abbr>VCS</abbr> setup, it seems like it has a good future ahead of it. Net: at a minimum you get a better experience for using Git with it. At a maximum, you get an incredibly smooth and shallow on-ramp to what I earnestly hope is the future of version control.</p>
<p>Jujutsu is <em>not</em> trying to do every interesting thing that other Git-alternative <abbr>DVCS</abbr> systems out there do. Unlike <a href="https://pijul.org/">Pijul</a>, for example, it does not work from a theory of patches such that the order changes are applied is irrelevant. However, as I noted above and show in detail below, jj <em>does</em> distinguish between <em>changes</em> and <em>revisions</em>, and has first-class support for conflicts, which means that many of the benefits of Pijul’s handling come along anyway. Unlike <a href="https://fossil-scm.org/home/doc/trunk/www/index.wiki">Fossil</a>, Jujutsu is also not trying to be an all-in-one tool. Accordingly: It does not come with a replacement for GitHub or other such<span></span> <span>“</span>forges”. It does not include bug tracking. It does not support chat or a forum or a wiki. Instead, it is currently aimed at just doing the base <abbr title="version control system">VCS</abbr> operations well.</p>
<p>Finally, there is a thing Jujutsu is not <em>yet</em>: a standalone <abbr>VCS</abbr> ready to use <em>without</em> Git. It supports its own,<span></span> <span>“</span>native” back end for the sake of keeping that door open for future capabilities, and the test suite exercises both the Git and the<span></span> <span>“</span>native” back end, but the<span></span> <span>“</span>native” one is not remotely ready for regular use. That said, this one I do expect to see change over time!</p>
<p>One of the really interesting bits about picking up Jujutsu is realizing just how weirdly Git has wired your brain, and re-learning how to think about how a version control system can work. It is one thing to believe — very strongly, in my case! — that Git’s <abbr title="user interface">UI</abbr> design is deeply janky (and its underlying model just so-so); it is something else to experience how much better a <abbr title="version control system">VCS</abbr> <abbr title="user interface">UI</abbr> can be (even without replacing the underlying model!).</p>
<p><img src="https://cdn.chriskrycho.com/images/unlearn.gif" alt="Yoda saying “You must unlearn what you have learned.”"></p><p>Time to become a Jedi Knight. Jujutsu Knight? Jujutsu Master? Jujutsu apprentice, at least. Let’s dig in!</p>
<details><summary>Outline</summary>
<ul>
<li><a href="#using-jujutsu">Using Jujutsu</a>
<ul>
<li><a href="#revisions-and-revsets">Revisions and revsets</a></li>
<li><a href="#changes">Changes</a></li>
<li><a href="#split">Split</a></li>
<li><a href="#first-class-conflicts">First-class conflicts</a></li>
<li><a href="#changing-changes">Changing changes</a></li>
<li><a href="#branches">Branches</a></li>
<li><a href="#git-interop">Git interop</a></li>
<li><a href="#is-it-ready">Is it ready?</a></li>
</ul>
</li>
<li><a href="#conclusion">Conclusion</a></li>
<li><a href="#appendix-kaleidoscope-setup-and-tips">Appendix: Kaleidoscope setup and tips</a></li>
</ul>
</details>
<h2 id="using-jujutsu" tabindex="-1"><a href="#using-jujutsu">Using Jujutsu</a></h2>
<p>That is all interesting enough philosophically, but for a tool that, if successful, will end up being one of a software developer’s most-used tools, there is an even more important question: <em>What is it actually like to use?</em></p>
<p>Setup is painless. Running <code>brew install jj</code> did everything I needed. As with most modern Rust-powered <abbr title="command line interface">CLI</abbr> tools,<sup><a href="#fn1" id="fnref1">1</a></sup> Jujutsu comes with great completions right out of the box. I did make one post-install tweak, since I am going to be using this on existing Git projects: I updated my <code>~/.gitignore_global</code> to ignore <code>.jj</code> directories anywhere on disk.<sup><a href="#fn2" id="fnref2">2</a></sup></p>
<p>Using Jujutsu in an existing Git project is also quite easy.<sup><a href="#fn3" id="fnref3">3</a></sup> You just run <code>jj init --git-repo &lt;path to repo&gt;</code>. That’s the entire flow. After that you can use <code>git</code> and <code>jj</code> commands alike on the repository, and everything Just Works™, right down to correctly handling <code>.gitignore</code> files. I have since run <code>jj init</code> in every Git repository I am actively working on, and have had no issues in many months. It is also possible to initialize a Jujutsu copy of a Git project <em>without</em> having an existing Git repo, using <code>jj git clone</code>, which I have also done, and which works well.</p>
<figure>

<figcaption>Cloning <a href="https://true-myth.js.org/">true-myth</a> and initializing it as a Jujutsu repo</figcaption>
</figure>
<p>Once a project is initialized, working on it is fairly straightforward, though there are some significant adjustments required if you have deep-seated habits from Git!</p>
<h3 id="revisions-and-revsets" tabindex="-1"><a href="#revisions-and-revsets">Revisions and revsets</a></h3>
<p>One of the first things to wrap your head around when first coming to Jujutsu is its approach to its <em>revisions</em> and <em>revsets</em>, i.e.<span></span> <span>“</span>sets of revision”. Revisions are the fundamental elements of changes in Jujutsu, not<span></span> <span>“</span>commits” as in Git. <a href="https://github.com/martinvonz/jj/blob/f3d6616057fb3db3f9227de3da930e319d29fcc7/docs/revsets.md">Revsets</a> are then expressions in a functional language for selecting a set of revisions. Both the idea and the terminology are borrowed directly from Mercurial, though the implementation is totally new. (Many things about Jujutsu borrow from Mercurial — a decision which makes me quite happy.) The vast majority of Jujutsu commands take a <code>--revision</code>/<code>-r</code> command to select a revision. So far that might not sound particularly different from Git’s notion of commits and commit ranges, and they are indeed similar at a surface level. However, the differences start showing up pretty quickly, both in terms of working with revisions and in terms of how revisions are a different notion of <em>change</em> than a Git commit.</p>
<p>The first place you are likely to experience how revisions and revsets are different — and neat! — is with the <code>log</code> command, since looking at the commit log is likely to be something you do pretty early in using  a new version control tool. (Certainly it was for me.) When you clone a repo and initialize Jujutsu in it and then run <code>jj log</code>, you will see something rather different from what <code>git log</code> would show you — indeed, rather different from anything I even know <em>how</em> to get <code>git log</code> to show you.  Per [the tutorial][tutorial]’s note on the <code>log</code> command specifically:</p>
<blockquote>
<p>By default, <code>jj log</code> lists your local commits, with some remote commits added for context. The <code>~</code> indicates that the commit has parents that are not included in the graph. We can use the <code>-r</code> flag to select a different set of revisions to list.</p>
</blockquote>
<p>What <code>jj log</code> <em>does</em> show by default was still a bit non-obvious to me, even after that. <em>Which</em> remote commits added for context, and why? The answer is in the <code>help</code> output for <code>jj log</code><span></span><span>’</span>s <code>-r</code>/<code>--revisions</code> option:</p>
<blockquote>
<p>Which revisions to show. Defaults to the <code>ui.default-revset</code> setting, or <code>@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())</code> if it is not set</p>
</blockquote>
<p>I will come back to this revset in a moment to explain it in detail. First, though, this shows a couple other interesting features of Jujutsu’s approach to revsets and thus the <code>log</code> command. First, it treats some of these operations as <em>functions</em> (<code>tags()</code>, <code>branches()</code>, etc.). I don’t have a deep handle on this yet, but I plan to come back to it. (There is a whole list <a href="https://github.com/martinvonz/jj/blob/main/docs/revsets.md#functions">here</a>!) This is not a surprise if you think about what<span></span> <span>“</span>expressions in a functional language” implies… but it was a surprise to me because I had not yet read that bit of documentation. Second, it makes<span></span> <span>“</span>operators” <a href="https://github.com/martinvonz/jj/blob/main/docs/revsets.md#operators">a first-class idea</a>. Git <em>has</em> operators, but this goes a fair bit further:</p>
<ul>
<li>
<p>It includes <code>-</code> for the parent and <code>+</code> for a child, and these stack and compose, so writing <code>@-+-+</code> is the same as <code>@</code> as long as the history is linear. (<a href="https://github.com/martinvonz/jj/discussions/1905#discussioncomment-6533386">That is an important distinction!</a>)</p>
</li>
<li>
<p>It supports union <code>|</code>, intersection <code>&amp;</code>, and difference <code>~</code> operators.</p>
</li>
<li>
<p>A leading <code>::</code>, which means<span></span> <span>“</span>ancestors”. A trailing <code>::</code> means<span></span> <span>“</span>descendants”. Using <code>::</code> between commits gives a view of the directed acyclic graph range between two commits. Notably, <code>&lt;id1&gt;::&lt;id2&gt;</code> is just <code>&lt;id1&gt;:: &amp; ::&lt;id2&gt;</code>.</p>
</li>
<li>
<p>There is also a <code>..</code> operator, which also composes appropriately (and, smartly, is the same as <code>..</code> in Git when used between two commits, <code>&lt;id1&gt;..&lt;id2&gt;</code>). The trailing version, <code>&lt;id&gt;..</code>, is interesting: it is<span></span> <span>“</span>revisions that are not ancestors of <code>&lt;id&gt;</code><span></span><span>”</span>. Likewise, the leading version <code>..&lt;id&gt;</code> is all revisions which <em>are</em> ancestors of <code>&lt;id&gt;</code></p>
</li>
</ul>
<p>Now, I used <code>&lt;id&gt;</code> here, but throughout these actually operate on revsets, so you could use them with any revset. For example, <code>..tags()</code> will give you the ancestors of all tags. This strikes me as <em>extremely</em> interesting: I think it will dodge a lot of pain in dealing with Git histories, because it lets you ask questions about the history in a compositional way using normal set logic. To make that concrete: back in October, Jujutsu contributor @aseipp <a href="https://discord.com/channels/968932220549103686/969291218347524238/1169016692651864144">pointed out</a> how easy it is to use this to get a log which excludes <code>gh-pages</code>. (Anyone who has worked on a repo with a <code>gh-pages</code> branch knows how annoying it is to have it cluttering up your view of the rest of your Git history!) First, you define an alias for the revset that only includes the <code>gh-pages</code> branch: <code>'gh-pages' = 'remote_branches(exact:"gh-pages")'</code>. Then you can <em>exclude</em> it from other queries with the <code>~</code> negation operator: <code>jj log -r "all() ~ ancestors(gh-pages)"</code> would give you a log view for every revision with <code>all()</code> and then exclude every ancestor of the <code>gh-pages</code> branch.</p>
<p>Jujutsu also provides a really capable <a href="https://martinvonz.github.io/jj/v0.10.0/templates/">templating system</a>, which uses<span></span> <span>“</span>a functional language to customize output of commands”. That functional language is built on top of the functional language that the whole language uses for describing revisions (described in brief above!), so you can use the same kinds of operators in templates for output as you do for navigating and manipulating the repository. The template format is still evolving, but you can use it to customize the output today… while being aware that you may have to update it in the future. Keywords include things like <code>description</code> and <code>change_id</code>, and these can be customized in Jujutsu’s config. For example, I made this tweak to mine, overriding the built-in <code>format_short_id</code> alias:</p>
<pre><code><span>[template-aliases]</span>
<span>'format_short_id(id)'</span> = <span>'id.shortest()'</span>
</code></pre>
<p>This gives me super short names for changes and commits, which makes for a <em>much</em> nicer experience when reading and working with both in the log output: Jujutsu will give me the shortest unique identifier for a given change or commit, which I can then use with commands like <code>jj new</code>. Additionally, there are a number of built-in templates. For example, to see the equivalent of Git’s <code>log --pretty</code> you can use Jujutsu’s <code>log -T builtin_log_detailed</code> (<code>-T</code> for<span></span> <span>“</span>template”; you can also use the long from <code>--template</code>). You can define your own templates in a <code>[templates]</code> section, or add your own <code>[template-aliases]</code> block, using the template language and any combination of further functions you define yourself.</p>
<p>That’s all well and good, but even with reading the docs for the revset language and the templating language, it still took me a bit to actually quite make sense out of the default output, much less to get a handle on how to customize the output. Right now, the docs have a bit of a flavor of <i>explanations for people who already have a pretty good handle on version control systems</i>, and the description of what you get from <code>jj log</code> is a good example of that. As the project gains momentum, it will need other kinds of more-introductory material, but the current status is totally fair and reasonable for the stage the project is at. And, to be fair to Jujutsu, both the revset language and the templating language are <em>incredibly</em> easier to understand and work with than the corresponding Git materials.</p>
<p>Returning to the difference between the default output from <code>jj log</code> and <code>git log</code>, the key is that unless you pass <code>-r</code>, Jujutsu uses the <code>ui.default-revset</code> selector to provide a much more informative view than <code>git log</code> does. Again, the default is <code>@ | ancestors(immutable_heads().., 2) | heads(immutable_heads())</code>. Walking through that:</p>
<ul>
<li>The <code>@</code> operator selects the current head revision.</li>
<li>The <code>|</code> union operator says<span></span> <span>“</span>or this other revset”, so this will show <code>@</code> itself <em>and</em> the result of the other two queries.</li>
<li>The <code>immutable_heads()</code> function gets the list of head revisions which are, well, <a href="https://martinvonz.github.io/jj/v0.13.0/config/#set-of-immutable-commits">immutable</a>. By default, this is <code>trunk() | tags()</code>, so whatever the trunk branch is (most commonly <code>main</code> or <code>master</code>) and also any tags in the repository.</li>
<li>Adding <code>..</code> to the first <code>immutable_heads()</code> function selects revisions which are not ancestors of those immutable heads. This is basically asking for branches which are not the trunk and which do not end at a tag.</li>
<li>Then <code>ancestors(immutable_heads().., 2)</code> requests the ancestors of those branches, but only two deep.</li>
<li>Finally, <code>heads()</code> gets the tips of all branches which appear in the revset passed to it: a head is a commit with no children. Thus, <code>heads(immutable_heads())</code> gets <em>just</em> the branch tips for the list of revisions computed by <code>immutable_heads()</code>.<sup><a href="#fn4" id="fnref4">4</a></sup></li>
</ul>
<p>When you put those all together, your log view will always show your current head change, all the open branches which have not been merged into your trunk branch, and whatever you have configured to be immutable — out of the box, trunk and all tags. That is <em>vastly</em> more informative than <code>git log</code><span></span><span>’</span>s default output, even if it is a bit surprising the first time you see it. Nor is it particularly possible to get that in a single <code>git log</code> command. By contrast, getting the equivalent of <code>git log</code> is trivial.</p>
<p>To show the full revision history for a given commit, you can use  Since <code>jj log</code> always gives you the identifier for a revision, you can follow it up with <code>jj log --revision ::&lt;change id&gt;</code>, or <code>jj log -r ::&lt;change id&gt;</code> for short. For example, in one repo where I am trying this, the most recent commit identifier starts with <code>mwoq</code> (Jujutsu helpfully highlights the segment of the change identifier you need to use), so I could write <code>jj log -r ::mwoq</code>, and this will show all the ancestors of <code>mwoq</code>, or <code>jj log -r ..mwoq</code> to get all the ancestors of the commit except the root. (The root is uninteresting.) Net, the equivalent command for<span></span> <span>“</span>show me all the history for this commit” is:</p>
<pre><code>$ jj <span>log</span> -r ..@
</code></pre>
<p>Revsets are very powerful, very flexible, and yet much easier to use than Git’s operators. That is in part because of the language used to express them. It is also in part because revsets build on a fundamentally different view of the world than Git commits: Jujutsu’s idea of <em>changes</em>.</p>
<h3 id="changes" tabindex="-1"><a href="#changes">Changes</a></h3>
<p>In Git, as in Subversion and Mercurial and other version control systems before them, when you finish with a change, you <em>commit</em> it. In Jujutsu, there is no first-class notion of<span></span> <span>“</span>committing” code. This took me a fair bit to wrap my head around! Instead, Jujutsu has two discrete operations:  <code>describe</code> and <code>new</code>. <code>jj describe</code> lets you provide a descriptive message for any change. <code>jj new</code> starts a new change. You can think of <code>git commit --message "something I did"</code> as being equivalent to <code>jj describe --message "some I did" &amp;&amp; jj new</code>. This falls out of the fact that <code>jj describe</code> and <code>jj new</code> are orthogonal, and much more capable than <code>git commit</code> as a result.</p>
<p>The <code>describe</code> command works on <em>any</em> commit. It defaults to the commit that is the current working copy. If you want to rewrite a message earlier in your commit history, though, that is not a special operation like it is in Git, where you have to perform an interactive rebase to do it. You just call <code>jj describe</code> with a <code>--revision</code>  (or <code>-r</code> for short, as everywhere in Jujutsu) argument. For example:</p>
<pre><code><span># long version</span>
$ jj describe --revision abcd --message <span>"An updated message."</span>

<span># short version</span>
$ jj describe -r abcd -m <span>"An updated message."</span>
</code></pre>
<p>That’s it. How you choose to integrate that into your workflow is a matter for you and your team to decide, of course. Jujutsu understands that some branches should not have their history rewritten this way, though, and lets you specify what the<span></span> <span>“</span>immutable heads” revset should be accordingly. This actually makes it safer than Git, where the tool itself does not understand that kind of immutability and we rely on forges to protect certain branches from being targeted by a force push.</p>
<p>The <code>new</code> command is the core of creating any new change, and it does not require there to be only a single parent. You can create a new change with as many parents as is appropriate! Is a given change logically the child of four other changes, with identifiers <code>a</code>, <code>b</code>, <code>c</code>, and <code>d</code>? <code>jj new a b c d</code>. That’s it. One neat consequence that falls out of this: a merge in Jujutsu is just <code>jj new</code> with the requirement that it have at least two parents. (“At least two parents” because having multiple parents for a merge is not a special case as with Git’s<span></span> <span>“</span>octopus” merges.) Likewise, you do not need a <code>commit</code> command, because you can describe a given change at any time with <code>describe</code>, and you can create a new change at any time with <code>new</code>. If you already know the next thing you are going to do, you can even describe it by passing <code>-m</code>/<code>--message</code> to <code>new</code> when creating the new change!<sup><a href="#fn5" id="fnref5">5</a></sup></p>
<figure>

<figcaption>A demo of using <code>jj new</code> to create a three-parent merge</figcaption>
</figure>
<p>Most of the time with Git, I am doing one of two things when I go to commit a change:</p>
<ul>
<li>Committing everything that is in my working copy: <code>git commit --all</code><sup><a href="#fn6" id="fnref6">6</a></sup> is an <em>extremely</em> common operation for me.</li>
<li>Committing a subset of it, not by using Git’s <code>-p</code> to do it via that atrocious interface, but instead opening <a href="https://git-fork.com/">Fork</a> and doing it with Fork’s staging <abbr>UI</abbr>.</li>
</ul>
<p>In the first case, Jujutsu’s choice to skip Git’s<span></span> <span>“</span>index” looks like a very good one. In the second case, I was initially skeptical. Once I got the hang of working this way, though, I started to come around. My workflow with <a href="https://git-fork.com/">Fork</a> looks an <em>awful</em> lot like the workflow that Jujutsu pushes you toward with actually using a diff tool. With Jujutsu, though, <em>any</em> diff tool can work. Want to use Vim? <a href="https://gist.github.com/ilyagr/5d6339fb7dac5e7ab06fe1561ec62d45">Go for it.</a></p>
<p>What is more, Jujutsu’s approach to the working copy results in a <em>really</em> interesting shift. In every version control system I have worked with previously (including <a href="https://cvs.nongnu.org/"><abbr title="Concurrent Versions System">CVS</abbr></a>, <a href="https://en.wikipedia.org/wiki/PVCS"><abbr title="PVCS  Version Manager, originally Polytron Version Control System">PVCS</abbr></a>, <a href="https://subversion.apache.org/"><abbr title="Subversion">SVN</abbr></a>), the workflow has been some variation on:</p>
<ul>
<li>Make a bunch of changes.</li>
<li>Create a commit and write a message to describe it.</li>
</ul>
<p>With both Mercurial and Git, it also became possible to rewrite history in various ways. I use Git’s <code>rebase --interactive</code> command <em>extensively</em> when working on large sets of changes. (I did the same with Mercurial’s history rewriting when I was using it a decade ago.) That expanded the list of common operations to include two more:</p>
<ul>
<li>Possibly directly amend that set of changes and/or its description.</li>
<li>Possibly restructure history: breaking apart changes, reordering them, rewriting their message, changing what commit they land on top of, and more.</li>
</ul>
<p>Jujutsu flips all of that on its head. A <em>change</em>, not a <em>commit</em>, is the fundamental element of the mental and working model. That means that you can describe a change that is still<span></span> <span>“</span>in progress” as it were. I discovered this while working on a little example code for a blog post I plan to publish later this month: you can describe the change you are working on <em>and then keep working on it</em>. The act of describing the change is distinct from the act of<span></span> <span>“</span>committing” and thus starting a <em>new</em> change. This falls out naturally from the fact that the working copy state is something you can operate on directly: akin to Git’s index, but without its many pitfalls. (This simplification affects a lot of things, as I will discuss further below; but it is especially important for new learners. Getting my head around the index was one of those things I found quite challenging initially with Git a decade ago.)</p>
<p>When you are ready to start a new change, you use either <code>jj commit</code> to<span></span> <span>“</span>finalize” this commit with a message, or <code>jj new</code> to<span></span> <span>“</span>Create a new, empty change and edit it in the working copy”. Implied: <code>jj commit</code> is just a convenience for <code>jj describe</code> followed by <code>jj new</code>. And a bonus: this means that rewording a message earlier in history does not involve some kind of rebase operation; you just <code>jj describe --revision &lt;target&gt;</code>.</p>
<p>What is more, <code>jj new</code> lets you create a new commit anywhere in the history of your project, trivially:</p>
<pre><code>-A, --insert-after
      Insert the new change between the target commit(s) and their children

      [aliases: after]

-B, --insert-before
      Insert the new change between the target commit(s) and their parents

      [aliases: before]
</code></pre>
<p>You can do this using interactive rebasing with Git (or with history rewriting with Mercurial, though I am afraid my <code>hg</code> is rusty enough that I do not remember the details). What you cannot do in Git specifically is say<span></span> <span>“</span>Start a new change at point <em>x</em><span></span><span>”</span> unless you are in the middle of a rebase operation, which makes it inherently somewhat fragile. To be extra clear: Git allows you to check out make a new change at any point in your graph, but it creates a branch at that point, and none of the descendants of that original point in your commit graph will come along without explicitly rebasing. Moreover, even once you do an explicit rebase and cherry-pick in the commit, the original commit is still hanging out, so you likely need to delete that branch. With <code>jj new -A &lt;some change ID&gt;</code>, you just insert the change directly into the history. Jujutsu will rebase every child in the history, including any merges if necessary; it<span></span> <span>“</span>just works”. That does not guarantee you will not have conflicts, of course, but Jujutsu also handles conflicts better — way better — than Git. More on that below.</p>
<p>I never use <code>git reflog</code> so much as when doing interactive rebases. Once I got the hang of Jujutsu’s ability to <code>jj new</code> anywhere, it basically obviates most of the places I have needed Git’s interactive rebase mode, especially when combined with Jujutsu’s aforementioned support for<span></span> <span>“</span>first-class conflicts”. There <em>is</em> still an escape hatch for mistakes, though: <code>jj op log</code> shows all the operations you have performed on the repo — and frankly, is much more useful and powerful than <code>git reflog</code>, because it logs <em>all</em> the operations, including whenever Jujutsu updates its view of your working copy via <code>jj status</code>, when it fetches new revisions from a remote.</p>
<p>Additionally, Jujutsu allows you to see how any change has evolved over time. This handily solves multiple pain points in Git. For example, if you have made changes in your working copy, and would like to split it into multiple changes, Git only has a binary state to let you tease those apart: staged, or not. As a result, that kind of operation ranges in difficulty from merely painful to outright impossible. With its <code>obslog</code> command,<sup><a href="#fn7" id="fnref7">7</a></sup> Jujutsu allows you to see how a change has evolved over time. Since the working copy is just one more kind of<span></span> <span>“</span>change”, you can very easily <a href="https://github.com/martinvonz/jj/blob/3d0b3d57d82c5fe77527704d008256b7d995209c/docs/FAQ.md#i-accidentally-amended-the-working-copy-how-do-i-move-the-new-changes-into-its-own-commit">retrieve</a> earlier state — any time you did a <code>jj status</code> check, or any other command which snapshotted the state of the repository (which is most of them). That applies equally to earlier changes. If you just rebased, for example, and realize you moved some changes to code into the wrong revision, you can use the combination of <code>obslog</code> and <code>new</code> and <code>restore</code> (or <code>move</code>) to pull it back apart into the desired sequence of changes. (This one is hard to describe, so I may put up a video of it later!)</p>
<h3 id="split" tabindex="-1"><a href="#split">Split</a></h3>
<p>This also leads to another significant difference with Git: around breaking up your current set of changes on disk. As I noted above, Jujutsu treats the working copy itself as a commit instead of having an<span></span> <span>“</span>index” like Git. Git really <em>only</em> lets you break apart a set of changes with the index, using <code>git add --patch</code>. Jujutsu instead has a <code>split</code> command, which launches a diff editor and lets you select what you want to incorporate — rather like <code>git add --patch</code> does. As with all of its commands, though, <code>jj split</code> works exactly the same way on <em>any</em> commit; the working copy commit gets it<span></span> <span>“</span>for free”.</p>
<p>Philosophically, I really like this. Practically, though, it is a slightly bumpier experience for me than the Git approach at the moment. Recall that I do not use <code>git add --patch</code> directly. Instead, I always stage changes into the Git index using a graphical tool like <a href="https://git-fork.com/">Fork</a>. That workflow is slightly nicer than editing a diff — at least, as Jujutsu does it today. In Fork (and similar tools), you start with <em>no</em> changes and add what you want to the change set you want. By contrast, <code>jj split</code> launches a diff view with <em>all</em> the changes from a given commit present: splitting the commit involves <em>removing</em> changes from the right side of the diff so that it has only the changes you want to be present in the first of two new commits; whatever is <em>not</em> present in the final version of the right side when you close your diff editor ends up in the second commit.</p>
<p>If this sounds a little complicated, that is because it is — at least for today. That qualifier is important, because a lot of this is down to tooling, and we have about as much dedicated tooling for Jujutsu as Git had in 2007, which is to say: not much. Qualifier notwithstanding, and philosophical elegance notwithstanding, the complexity is still real here in early 2024. There are two big downsides as things stand. First, I find it comes with more cognitive load. It requires thinking in terms of negation rather than addition, and the<span></span> <span>“</span>second commit” becomes less and less visible over time as you remove it from the first commit. Second, it requires you to repeat the operation when breaking up something into more than two commits. I semi-regularly take a single bucket of changes on disk and chunk it up into <em>many</em> more than just 2 commits, though! That significantly multiplies the cognitive overhead.</p>
<p>Now, since I started working with Jujutsu, the team has switched the default view for working with these kinds of diffs to using <code>scm-diff-editor</code>, a <abbr title="textual user interface">TUI</abbr> which has a first-class notion of this kind of workflow.<sup><a href="#fn8" id="fnref8">8</a></sup> That <abbr>TUI</abbr> works reasonably well, but is much less pleasant to use than something like the nice <abbr>GUI</abbr>s of <a href="https://git-fork.com/">Fork</a>  or <a href="https://www.git-tower.com/mac">Tower</a>.</p>
<p>The net is: when I want to break apart changes, at least for the moment I find myself quite tempted to go back to Fork and Git’s index. I do not think this problem is intractable, and I think the <em>idea</em> of <code>jj split</code> is right. It just — “just”! — needs some careful design work. Preferably, the <code>split</code> command would make it straightforward to generate an arbitrary number of commits from one initial commit, and it would allow progressive creation of each commit from a<span></span> <span>“</span>vs. the previous commit” baseline. This is the upside of the index in Git: it does actually reflect the reality that there are three separate<span></span> <span>“</span>buckets” in view when splitting apart a change: the baseline before all changes, the set of all the changes, and the set you want to include in the commit. Existing diff tools do not really handle this — other than the integrated index-aware diff tools in Git clients, which then have their own oddities when interacting with Jujutsu, since it ignores the index.</p>
<h3 id="first-class-conflicts" tabindex="-1"><a href="#first-class-conflicts">First-class conflicts</a></h3>
<p>Another huge feature of Jujutsu is its support for <em>first-class conflicts</em>. Instead of a conflict resulting in a nightmare that has to be resolved before you can move on, Jujutsu can incorporate both the merge and its resolution (whether manual or automatic) directly into commit history. Just having the conflicts in history does not seem that weird.<span></span> <span>“</span>Okay, you committed the text conflict markers from git, neat.” But: having the conflict and its resolution in history, especially when Jujutsu figured out how to do that resolution for you, as part of a rebase operation? That is just plain <em>wild</em>.</p>
<p>A while back, I was working on a change to <a href="https://github.com/true-myth/true-myth">a library</a> I maintain<sup><a href="#fn9" id="fnref9">9</a></sup> and decided to flip the order in which I landed two changes to <code>package.json</code>. Unfortunately, those changes were adjacent to each other in the file and so flipping the order they would land in seemed likely to be painfully difficult. It was actually trivial. First of all, the flow itself was great: instead of launching an editor for interactive rebase, I just explicitly told Jujutsu to do the rebases: <code>jj rebase --revision &lt;source&gt; --destination &lt;target&gt;</code>. I did that for each of the items I wanted to reorder and I was done. (I could also have rebased a whole series of commits; I just did not need to in this case.) Literally, that was it: because Jujutsu had agreed with me that <abbr>JSON</abbr> is a terrible format for changes like this and committed a merge conflict, then <em>resolved</em> the merge conflict via the next rebase command, and simply carried on.</p>
<p>At a mechanical level, Jujutsu will add conflict markers to a file, not unlike those Git adds in merge conflicts. However, unlike Git, those are not just markers in a file. They are part of a system which understands what conflicts are semantically, and therefore also what <em>resolving</em> a conflict is semantically. This not only produces nice automatic outcomes like the one I described with my library above; it also means that you have more options for how to accomplish a resolution, and for how to treat a conflict. Git trains you to see a conflict between two branches as a problem. It requires you to solve that problem before moving on. Jujutsu <em>allows</em> you to treat a conflict as a problem which much be resolved, but it does not <em>require</em> it. Resolving conflicts in merges in Git is often quite messy. It is even worse when rebasing. I have spent an incredibly amount of time attempting merges only to give up and <code>git reset --hard &lt;before the merge&gt;</code>, and possibly even more time trying to resolve a conflicting in a rebase only to bail with <code>git rebase --abort</code>. Jujutsu allows you to create a merge, leave the conflict in place, and then introduce a resolution in the <em>next</em> commit, telling the whole story with your change history.</p>
<figure>

<figcaption>Conflict resolution with merges</figcaption>
</figure>
<p>Likewise with a rebase: depending on whether you require all your intermediate revisions to be able to be built or would rather show a history including conflicts, you could choose to rebase, leave all the intermediate changes conflicted, and resolve it only at the end.</p>
<figure>

<figcaption>Conflict resolution with rebases</figcaption>
</figure>
<p>Conflicts are inevitable when you have enough people working on a repository. Honestly: conflicts happen when I am working <em>alone</em> in a repository, as suggested by my anecdote above. Having this ability to keep working with the repository even in a conflicted state, as well as to resolve the conflicts in a more interactive and iterative way is something I now find difficult to live without.</p>
<h3 id="changing-changes" tabindex="-1"><a href="#changing-changes">Changing changes</a></h3>
<p>There are a few other niceties which fall out of Jujutsu’s distinction between changes and commits, especially when combined with first-class conflicts.</p>
<p>First up, <code>jj squash</code> takes all the changes in a given commit and, well, <em>squashes</em> them into the parent of that commit.<sup><a href="#fn10" id="fnref10">10</a></sup> Given a working copy with a bunch of changes, you can move them straight into the parent by just typing <code>jj squash</code>. If you want to squash some change besides the one you are currently editing, you just pass the <code>-r</code>/<code>--revision</code> flag, as with most Jujutsu commands: <code>jj squash -r abc</code> will squash the change identified by <code>abc</code> into its parent. You can also use the <code>--interactive</code> (<code>-i</code> for short) argument to move just a part of a change into its parent. Using that flag will pop up your configured diff editor just like <code>jj split</code> will and allow you to select which items you want to move into the parent and which you want to keep separate. Or, for an even faster option, if you have specific files to move while leaving others alone, and you do not need to handle subsections of those files, you can pass them as the final arguments to the command, like <code>jj squash ./path/a ./path/c</code>.</p>
<p>As it turns out, this ability to  move part of one change into a different change is a really useful thing to be able to do in general. I find it particularly handy when building up a set of changes where I want each one to be coherent — say, for the sake of having a commit history which is easy for others to review. You <em>could</em> do that by doing some combination of <code>jj split</code> and <code>jj new --after &lt;some change ID&gt;</code> and then doing <code>jj rebase</code> to move around the changes… but as usual, Jujutsu has a better way. The <code>squash</code> command is actually just a shortcut for Jujutsu’s <code>move</code> command with some arguments filled in. The <code>move</code> command has <code>--from</code> and <code>--to</code> arguments which let you specify which revisions you want to move between. When you run <code>jj squash</code> with no other arguments, that is the equivalent of <code>jj move --from @ --to @-</code>. When you run <code>jj squash -r abc</code>, that is the equivalent of <code>jj move --from abc --to abc-</code>. Since it takes those arguments explicitly, though, <code>move</code> lets you move changes around between <em>any</em> changes. They do not need to be anywhere near each other in history.</p>
<figure>

<figcaption>A demo of using <code>jj move</code></figcaption>
</figure>
<p>This eliminates another entire category of places I have historically had to reach for <code>git rebase --interactive</code>. While there are still a few times where I think Jujutsu could use something akin to Git’s interactive rebase mode, they are legitimately <em>few</em>, and mostly to do with wanting to be able to do batch reordering of commits. To be fair, though, I only want to do that perhaps a few times a year.</p>
<h3 id="branches" tabindex="-1"><a href="#branches">Branches</a></h3>
<p>Branches are another of the very significant differences between Jujutsu and Git — another place where Jujutsu acts a bit more like Mercurial, in fact. In Git, everything happens on named branches. You <em>can</em> operate on anonymous branches in Git, but it will yell at you constantly about being on a<span></span> <span>“</span>detached <code>HEAD</code><span></span><span>”</span>. Jujutsu inverts this. The normal working mode in Jujutsu is just to make a series of changes, which then naturally form<span></span> <span>“</span>branches” in the change graph, but which do not require a name out of the gate. You can give a branch a name any time, using <code>jj branch create</code>. That name is just a pointer to the change you pointed it at, though; it does not automatically<span></span> <span>“</span>follow” you as you do <code>jj new</code> to create new changes. (Readers familiar with Mercurial may recognize that this is very similar to its <a href="https://wiki.mercurial-scm.org/Bookmarks">bookmarks</a>), though without the notion of<span></span> <span>“</span>active” and<span></span> <span>“</span>inactive” bookmarks.)</p>
<p>To update what a branch name points to, you use the <code>branch set</code> command.  To completely get rid of a branch, including removing it from any remotes you have pushed the branch to, you use the <code>branch delete</code> command. Handily, if you want to forget all your <em>local</em> branch operations (though not the changes they apply to), you can use the <code>branch forget</code> command. That can come in useful when your local copy of a branch has diverged from what is on the remote and you don’t want to reconcile the changes and just want to get back to whatever is on the remote for that branch. No need for <code>git reset --hard origin/&lt;branch name&gt;</code>, just <code>jj branch forget &lt;branch name&gt;</code> and then the next time you pull from the remote, you will get back its view of the branch!</p>
<figure>

<figcaption>It’s not just me who wants this!</figcaption>
</figure>
<p>Jujutsu’s defaulting to anonymous branches took me a bit to get used to, after a decade of doing all of my work in Git and of necessity having to do my work on named branches. As with so many things about Jujutsu, though, I have very much come to appreciate this default. In particular,I find this approach makes really good sense for all the steps where I am not yet sharing a set of changes with others. Even once I <em>am</em> sharing the changes with others, Git’s requirement of a branch name can start to feel kind of silly at times. Especially for the case where I am making some small and self-contained change, the name of a given branch is often just some short, <a href="https://en.wikipedia.org/wiki/Snake_case">snake-case</a>-ified version of the commit message. The default log template shows me the current set of branches, and their commit messages are usually sufficiently informative that I do not need anything else.</p>
<p>However, there are some downsides to this approach in practice, at least given today’s ecosystem. First, the lack of a<span></span> <span>“</span>current branch”&nbsp;makes for some extra friction when working with tools like GitHub, GitLab, Gitea, and so on. The GitHub model (which other tools have copied) treats branches as the basis for all work. GitHub displays warning messages about commits which are not on a branch, and will not allow you to create a pull request from an anonymous branch. In many ways, this is simply because Git itself treats  branches as special and important. GitHub is just following Git’s example of loud warnings about being on a<span></span> <span>“</span>detached <code>HEAD</code><span></span><span>”</span> commit, after all.</p>
<p>What this means in practice, though, is that there is an extra operation required any time you want to push your changes to GitHub or a similar forge. With Git, you simply <code>git push</code> after making your changes. (More on Git interop below.) Since Git keeps the current branch pointing at the current <code>HEAD</code>, Git aliases <code>git push</code> with no arguments to <code>git push &lt;configured remote for current branch&gt; &lt;current branch&gt;</code>. Jujutsu does not do this, and given how its branching model works today, <em>cannot</em> do this, because named branches do not<span></span> <span>“</span>follow” your operations. Instead, you must first explicitly set the branch to the commit you want to push. In the most common case, where you are pushing your latest set of changes, that is just <code>jj branch set &lt;branch name&gt;</code>; it takes the current change automatically. Only then can you run <code>jj git push</code> to actually get an update. This is only a paper cut, but it is a paper cut. It is one extra command every single time you go to push a change to share with others, or even just to get it off of your machine.<sup><a href="#fn11" id="fnref11">11</a></sup> That might not seem like a lot, but it adds up.</p>
<p>There is a real tension in the design space here, though. On the one hand, the main time I use branches in Jujutsu at this point is for pushing to a Git forge like GitHub. I rarely feel the need for them for just working on a set of changes, where <code>jj log</code> and <code>jj new &lt;some revision&gt;</code> give me everything I need. In that sense, it seems like having the branch<span></span> <span>“</span>follow along” with my work would be natural: if I have gone to the trouble of creating a name for a branch and pushing it to some remote, then it is very likely I want to keep it up to date as I add changes to the branch I named. On the other hand, there is a big upside to not doing that automatically: pushing changes becomes an intentional act. I cannot count the number of times I have been working on what is essentially just an experiment in a Git repo, forgotten to change from the <code>foo-feature</code> to a new <code>foo-feature-experiment</code> branch, and then done a <code>git push</code>. Especially if I am collaborating with others on <code>foo-feature</code>, now I have to force push back to the previous to reset things, and let others know to wait for that, etc. That never happens with the Jujutsu model. Since updating a named branch is always an intentional act, you can experiment to your heart’s content, and know you will never <em>accidentally</em> push changes to a branch that way. I go back and forth: Maybe the little bit of extra friction when you <em>do</em> want to push a branch is worth it for all the times you do not have to consciously move a branch backwards to avoid pushing changes you are not yet ready to share.</p>
<p>(As you might expect, the default of anonymous branches has some knock-on effects for how it interacts with Git tooling in general; I say more on this below.)</p>
<p>Jujutsu also has a handy little feature for when you have done a bunch of work on an anonymous branch and are ready to push it to a Git forge. The <code>jj git push</code> subcommand takes an optional <code>--change</code>/<code>-c</code> flag, which creates a branch based on your current change ID. It works really well when you only have a single change you are going to push and then continually work on, or any time you are content that your current change will remain the tip of the branch. It works a little <em>less</em> well when you are going to add further changes later, because you need to then actually use the branch name with <code>jj branch set push/&lt;change ID&gt; -r &lt;revision&gt;</code>.</p>
<p>Taking a step back, though, working with branches in Jujutsu is <em>great</em> overall. The <code>branch</code> command is a particularly good lens for seeing what a well-designed <abbr title="command line interface">CLI</abbr> is like and how it can make your work easier. Notice that the various commands there are all of the form <code>jj branch &lt;do something&gt;</code>. There are a handful of other <code>branch</code> subcommands not mentioned so far: <code>list</code>, <code>rename</code>, <code>track</code>, and <code>untrack</code>. Git has slowly improved its design here over the past few years, but still lacks the straightforward coherence of Jujutsu’s design. For one thing, all of these are <em>subcommands</em> in Jujutsu, not like Git’s mishmash of flags which can be combined in some cases but not others, and have different meanings depending on where they are deployed. For another, as with the rest of Jujutsu’s <abbr title="command line interface">CLI</abbr> structure, they use the same options to mean the same things. If you want to list all the branches which point to a given set of revisions, you use the <code>-r</code>/<code>--revisions</code> flag, exactly like you do with any other command involving revisions in Jujutsu. In general, Jujutsu has a very strong and careful distinction between <em>commands</em> (including subcommands) and <em>options</em>. Git does not. The <code>track</code> and <code>untrack</code> subcommands are a perfect example. In Jujutsu, you track a remote branch by running a command like <code>jj branch track &lt;branch&gt;@&lt;remote&gt;</code>. The corresponding Git command is <code>git branch --set-upstream-to &lt;remote&gt;/&lt;branch&gt;</code>. But to <em>list and filter</em> branches in Git, you also pass flags, e.g. <code>git branch --all</code> is the equivalent of <code>jj branch list --all</code>. The Git one is shorter, but also notably less coherent; there is no way to build a mental model for it. With Jujutsu, the mental model is obvious and consistent: <code>jj &lt;command&gt; &lt;options&gt;</code> or <code>jj &lt;context&gt; &lt;command&gt; &lt;options&gt;</code>, where <code>&lt;context&gt;</code> is something like <code>branch</code> or <code>workspace</code> or <code>op</code> (for operation).</p>
<h3 id="git-interop" tabindex="-1"><a href="#git-interop">Git interop</a></h3>
<p>Jujutsu’s native back end exists, and every feature has to work with it, so it will some day be a real feature of the <abbr>VCS</abbr>. Today, though, the Git backend is the only one you should use. So much so that if you try to run <code>jj init</code> without passing <code>--git</code>, Jujutsu won’t let you by default:</p>
<pre><code>&gt; jj init
Error: The native backend is disallowed by default.
Hint: Did you mean to pass `--git`?
Set `ui.allow-init-native` to allow initializing a repo with the native backend.
</code></pre>
<p>In practice, you are going to be using the Git backend. In practice, I have been using the Git backend for the last seven months, full time, on every one of my personal repositories and all the open source projects I have contributed to. With the sole exception of someone watching me while we pair, no one has noticed, because the Git integration is that solid and robust.</p>
<p>Jujutsu’s Git integration currently runs on <code>libgit2</code>, so there is effectively no risk of breaking your repo because of a <dash-wrap>Jujutsu – Git</dash-wrap> interop issue. To be sure, there can be bugs in Jujutsu itself, and you can do things using Jujutsu that will leave you in a bit of a mess, but the same is true of <em>any</em> tool which works on your Git repository. The risk might be very slightly higher here than with your average <abbr>GUI</abbr> Git client, since Jujutsu is mapping different semantics onto the repository, but I have extremely high confidence in the project at this point, and I think you can too.</p>
<p><mark>TODO: finish section</mark></p>
<h3 id="is-it-ready" tabindex="-1"><a href="#is-it-ready">Is it ready?</a></h3>
<p>Unsurprisingly, given the scale of the problem domain, there are still some rough edges and gaps. For example: commit signing with <abbr title="GNU Privacy Guard">GPG</abbr> or <abbr title="secure shell">SSH</abbr> does not yet work. There is an open <abbr title="pull request">PR</abbr> for the basics of the feature with <abbr title="GNU Privacy Guard">GPG</abbr> support, and <abbr title="secure shell">SSH</abbr> support will be straightforward to add once the basics, but landed it has not.<sup><a href="#fn12" id="fnref12">12</a></sup> The list of actual gaps or missing features is getting short, though. When I started using Jujutsu back in July 2023, there was not yet any support for sparse checkouts or for workspaces (analogous to Git worktrees). Both of those landed in the interval, and there is consistent forward motion from both Google and non-Google contributors. In fact, the biggest gap I see as a regular user in Jujutsu itself is the lack of the kinds of capabilities that will hopefully come once work starts in earnest on the native back end.</p>
<p>The real gaps and rough edges at this point are down to the lack of an ecosystem of tools around Jujutsu, and the ways that existing Git tools interact with Jujutsu’s design for Git interop. The lack of tooling is obvious: no one has built the equivalent of <a href="https://git-fork.com/">Fork</a> or <a href="https://www.git-tower.com/mac">Tower</a>, and there is no native integration in <abbr title="integrated development environment">IDE</abbr>s like IntelliJ or Visual Studio or in editors like <abbr title="Visual Studio">VS</abbr> Code or Vim. Since Jujutsu currently works primarily in terms of Git, you will get <em>some</em> useful feedback. All of those tools expect to be working in terms of Git’s index and not in terms of a Jujutsu-style working copy, though. Moreover, most of them (unsurprisingly!) share Git’s own confusion about why you are working on a detached <code>HEAD</code> nearly all the time. On the upside, viewing the history of a repo generally works well, with the exception that some tools will not show anonymous branches/detached <code>HEAD</code>s other than one you have actively checked out. Detached heads also tend to confuse tools like GitHub’s <code>gh</code>; you will often need to do a bit of extra manual argument-passing to get them to work. (<code>gh pr create --web --head &lt;name&gt;</code> is has been showing up in my history a lot for exactly this reason.)</p>
<p>Some of Jujutsu’s very nice features also make other parts of working on mainstream Git forges a bit wonky. For example, notice what each of these operations has in common:</p>
<ul>
<li>Inserting changes at arbitrary points.</li>
<li>Rewording a change description.</li>
<li>Rebasing a series of changes.</li>
<li>Splitting apart commits.</li>
<li>Combining existing commits.</li>
</ul>
<p>They are all changes to history. If you have pushed a branch to a remote, doing any of these operations with changes on that branch and pushing to a remote again will be a <em>force push</em>. Most mainstream Git forges handle force pushing pretty badly. In particular, GitHub has some support for showing diffs between force pushes, but it is very basic and loses all conversational context. As a result, any workflow which makes heavy use of force pushes will be bumpy. Jujutsu is not to blame for the gaps in those tools, but it certainly does expose them.<sup><a href="#fn13" id="fnref13">13</a></sup> Nor do I not blame GitHub for the quirks in interop, though. It is not JujutsuLab after all, and Jujutsu is doing things which do not perfectly map onto the Git model. Since most open source software development happens on forges like GitHub and GitLab, though, these things do  regularly come up and cause some friction.</p>
<p>The biggest place I feel this today is in the lack of tools designed to work with Jujutsu around splitting, moving, and otherwise interactively editing changes. Other than <a href="https://github.com/arxanas">@arxanas</a><span></span><span>’</span> excellent <code>scm-diff-editor</code>, the <abbr title="text user interface">TUI</abbr>, which Jujutsu bundles for editing diffs on the command line, there are zero <em>good</em> tools for those operations. I mean it when I say <code>scm-diff-editor</code> is excellent, but I also do not love working in a <abbr title="text user interface">TUI</abbr> for this kind of thing, so  I have cajoled both <a href="https://kaleidoscope.app/">Kaleidoscope</a> and BBEdit into working to some degree. As I noted when describing how jj split` works, though, it is not a particularly good experience. These tools are simply not designed for this workflow. They understand an index, and they do not understand splitting apart changes. Net, we are going to want new tooling which actually understands Jujutsu.</p>
<p>There are opportunities here beyond implementing the same kinds of capabilities that <em>many</em> editors, <abbr title="integrated development environment">IDE</abbr>s, and dedicated <abbr title="version control system">VCS</abbr> viewers provide today for Git. Given a tool which makes rebasing, merging, re-describing changes, etc. are all normal and easy operations, <abbr title="graphical user interface">GUI</abbr> tools could make all of those much easier. Any number of the Git <abbr title="graphical user interface">GUI</abbr>s have tried, but Git’s underlying model simply makes it clunky. That does not have to be the case with Jujutsu. Likewise, surfacing things like Jujutsu’s operation and change evolution logs should be much easier than surfacing the Git reflog, and provide easier ways to recover lost work or simply to change one’s mind.</p>
<h2 id="conclusion" tabindex="-1"><a href="#conclusion">Conclusion</a></h2>
<p>Jujutsu has become my version control tool of choice since I picked it up over the summer. The rough edges and gaps I described throughout this write-up notwithstanding, I <em>much</em> prefer it to working with Git directly. I do not hesitate to recommend that you try it out on personal or open source projects. Indeed, I actively recommend it! I have used Jujutsu almost exclusively for the past seven months, and I am not sure what would make me go back to using Git other than Jujutsu being abandoned entirely. Given its apparently-bright future at Google, that seems unlikely.<sup><a href="#fn14" id="fnref14">14</a></sup> Moreover, because using it in existing Git repositories is transparent, there is no inherent reason individual developers or teams cannot use it today. (Your corporate security policy might have be a different story.)</p>
<p>Is Jujutsu ready for you to roll out at your Fortune 500 company? Probably not. While it is improving at a steady clip — most of the rough edges I hit in mid-2023 are long since fixed — it is still undergoing breaking changes in design here and there, and there is effectively no material out there about how to use it yet. (This essay exists, in part, as an attempt to change that!) Beyond Jujutsu itself, there is a lot of work to be done to build an ecosystem around it. Most of the remaining rough edges are squarely to do with the lack of understanding from other tools.  The project is marching steadily toward a 1.0 release… someday. As for when that might be, there are as far as I know no plans: there is still too much to do. Above all, I am very eager to see what a native Jujutsu backend would look like. Today, it is<span></span> <span>“</span>just” a much better model for working with Git repos. A world where the same level of smarts being applied to the front end goes into the back end too is a world well worth looking forward to.</p>
<section aria-role="note"><p>Thoughts, comments, or questions? Discuss:</p>
<ul>
<li><a href="https://news.ycombinator.com/item?id=39232456">Hacker News</a></li>
<li><a href="https://lobste.rs/s/pvvbhm/jj_init">lobste.rs</a></li>
<li><a href="https://www.linkedin.com/feed/update/urn:li:activity:6923287174180212736/">LinkedIn</a></li>
<li><a href="https://mastodon.social/@chriskrycho/111863369362392797">Mastodon</a></li>
<li><a href="https://www.threads.net/@chriskrycho/post/C22w19OgBJV">Threads</a></li>
<li><a href="https://bsky.app/profile/chriskrycho.com/post/3kkhe5pxuek27">Bluesky</a></li>
<li><a href="https://twitter.com/chriskrycho/status/1753489910600712246?s=20">Twitter/X</a></li>
</ul>
</section>
<h2 id="appendix-kaleidoscope-setup-and-tips" tabindex="-1"><a href="#appendix-kaleidoscope-setup-and-tips">Appendix: Kaleidoscope setup and tips</a></h2>
<p>As alluded to above, I have done my best to make it possible to use <a href="https://kaleidoscope.app/">Kaleidoscope</a>, my beloved diff-and-merge tool, with Jujutsu. I have had only mixed success. The appropriate setup that gives the best results so far:</p>
<ol>
<li>
<p>Add the following to your Jujutsu config (<code>jj config edit --user</code>) to configure Kaleidoscope for the various diff and merge operations:</p>
<pre><code><span>[ui]</span>
<span>diff-editor</span> = [<span>"ksdiff"</span>, <span>"--wait"</span>, <span>"$left"</span>, <span>"--no-snapshot"</span>, <span>"$right"</span>, <span>"--no-snapshot"</span>]
<span>merge-editor</span> = [<span>"ksdiff"</span>, <span>"--merge"</span>, <span>"--output"</span>, <span>"$output"</span>, <span>"--base"</span>, <span>"$base"</span>, <span>"--"</span>, <span>"$left"</span>, <span>"--snapshot"</span>, <span>"$right"</span>, <span>"--snapshot"</span>]
</code></pre>
<p>I will note, however, that I have still not been 100% successful using Kaleidoscope this way. In particular, <code>jj split</code> does not give me the desired results; it often ends up reporting<span></span> <span>“</span>Nothing changed” when I close Kaleidoscope.</p>
</li>
<li>
<p>When opening a <em>file</em> diff, you must <kbd>Option</kbd><kbd>⎇</kbd>-double-click, <em>not</em> do a normal double-click, so that it will preserve the <code>--no-snapshot</code> behavior. That <code>--no-snapshot</code> argument to <code>ksdiff</code> is what makes the resulting diff editable, which is what Jujutsu needs for its just-edit-a-diff workflow. I have been in touch with the Kaleidoscope folks about this, which is how I even know about this workaround; they are evaluating whether it is possible to make the normal double-click flow preserve the <code>--no-snapshot</code> in this case so you do not <em>have</em> to do the workaround.</p>
</li>
</ol>
<hr>
<section>
<ol>
<li id="fn1"><p>Yes, it is written in Rust, and it is pretty darn fast. But Git is written in C, and is <em>also</em> pretty darn fast. There are of course some safety upsides to using Rust here, but Rust is not particularly core to Jujutsu’s<span></span> <span>“</span>branding”. It was just a fairly obvious choice for a project like this at this point — which is exactly what I have long hoped Rust would become! <a href="#fnref1">↩︎</a></p>
</li>
<li id="fn2"><p>Pro tip for Mac users: add <code>.DS_Store</code> to your <code>~/.gitignore_global</code> and live a much less annoyed life — whether using Git or Jujutsu. <a href="#fnref2">↩︎</a></p>
</li>
<li id="fn3"><p>I did have <a href="https://github.com/martinvonz/jj/issues/1794">one odd hiccup</a> along the way due to a bug (already fixed, though not in a released version) in how Jujutsu handles a failure when initializing in a directory. While confusing, the problem was fixed in the next release… and this is what I expected of still-relatively-early software. <a href="#fnref3">↩︎</a></p>
</li>
<li id="fn4"><p>This is not quite the same as Git’s <code>HEAD</code> or as Mercurial’s<span></span> <span>“</span>tip” — there is only one of either of those, and they are not the same as each other! <a href="#fnref4">↩︎</a></p>
</li>
<li id="fn5"><p>If you look at the <code>jj help</code> output today, you will notice that Jujutsu has <code>checkout</code>, <code>merge</code>, and <code>commit</code> commands. Each is just an alias for a behavior using <code>new</code>, <code>describe</code>, or both, though:</p>
<ul>
<li><code>checkout</code> is just an alias for <code>new</code></li>
<li><code>commit</code> is just a shortcut for <code>jj describe -m "&lt;some message&gt;" &amp;&amp; jj new</code></li>
<li><code>merge</code> is just <code>jj new</code> with an implicit <code>@</code> as the first argument.</li>
</ul>
<p>All of these are going to go away in the medium term with both documentation and output from the <abbr title="command line interface">CLI</abbr> that teach people to use <code>new</code> instead. <a href="#fnref5">↩︎</a></p>
</li>
<li id="fn6"><p>Actually it is normally <code>git ci -am "&lt;message&gt;"</code> with <code>-a</code> for<span></span> <span>“</span>all” (<code>--all</code>) and <code>-m</code> for the message, and smashed together to avoid any  needless extra typing. <a href="#fnref6">↩︎</a></p>
</li>
<li id="fn7"><p>The name is from Mercurial’s <a href="https://www.mercurial-scm.org/doc/evolution/">evolution</a> feature, where it refers to changes which have become <em>obsolescent</em>, thus <code>obslog</code> is the<span></span> <span>“</span>obsolescent changes log”. I recently suggested to the Jujutsu maintainers that renaming this might be helpful, because it took me six months of daily use to discover this incredibly helpful tool. <a href="#fnref7">↩︎</a></p>
</li>
<li id="fn8"><p>They also enabled support for a three-pane view in <a href="https://meld.app/">Meld</a>, which allegedly makes it somewhat better. However, Meld is pretty janky on macOS (as <a href="https://www.gtk.org/">GTK</a> apps basically always are), and it has a <em>terrible</em> startup time for reasons that are unclear at this point, which means this was not a great experience in the first place… and Meld <a href="https://github.com/yousseb/meld/issues/147">crashes on launch</a> on the current version of macOS. <a href="#fnref8">↩︎</a></p>
</li>
<li id="fn9"><p>Yes, this is what I do for fun on my time off. At least: partially. <a href="#fnref9">↩︎</a></p>
</li>
<li id="fn10"><p>For people coming from Git, there is also an <code>amend</code> alias, so you can use <code>jj amend</code> instead, but it does the same thing as <code>squash</code> and in fact the help text for <code>jj amend</code> makes it clear that it just <em>is</em> <code>squash</code>. <a href="#fnref10">↩︎</a></p>
</li>
<li id="fn11"><p>If that sounds like paranoia, well, you only have to lose everything on your machine once due to someone spilling a whole cup of water on it at a coffee shop to learn to be a bit paranoid about having off-machine backups of everything. I <code>git push</code> all the time. <a href="#fnref11">↩︎</a></p>
</li>
<li id="fn12"><p>I care about about this feature and have some hopes of helping get it across the line myself here in February 2024, but we will see! <a href="#fnref12">↩︎</a></p>
</li>
<li id="fn13"><p>There are plenty of interesting arguments out there about the GitHub collaboration design, alternatives represented by the Phabricator or Gerrit review models, and so on. This piece is long enough without them! <a href="#fnref13">↩︎</a></p>
</li>
<li id="fn14"><p>Google is famous for killing <em>products</em>, but less so developer tools. <a href="#fnref14">↩︎</a></p>
</li>
</ol>
</section>

   </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When should you give up on a project that doesn't work? (231 pts)]]></title>
            <link>https://www.preethamrn.com/posts/when-should-you-give-up</link>
            <guid>39232004</guid>
            <pubDate>Fri, 02 Feb 2024 18:07:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.preethamrn.com/posts/when-should-you-give-up">https://www.preethamrn.com/posts/when-should-you-give-up</a>, See on <a href="https://news.ycombinator.com/item?id=39232004">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><!--[-->I spent a lot of my free time after work over the last month working on a project and today I'm giving up.<!--]--></p><p><!--[-->The idea was based on a simple hypothesis. People enjoy surfing Wikipedia to find interesting articles by randomly clicking on links. What if there was a way to search for articles by clicking on locations? In fact, Wikipedia used to have this feature built into their apps (they still have it but now it's only a <a href="https://en.wikipedia.org/wiki/Special:Nearby" rel="nofollow" target="_blank"><!--[-->website<!--]--></a>). There are a few issues with Wikipedia's solution though:<!--]--></p><ol><!--[--><li><!--[-->They don't show the points on a map so you'd have to guess where the articles are in relation to each other (or plug the coordinates into a map separately)<!--]--></li><li><!--[-->They sort articles by distance and not by popularity or some other heuristic.<!--]--></li><!--]--></ol><p><!--[-->My hypothesis was that if you could drag around a map to search for articles nearby and sort them by pageviews it would be more fun and could potentially help with vacation planning. I was wrong and here's how I found out.<!--]--></p><h4 id="_1-initial-passion"><a href="#_1-initial-passion"></a><!--[-->1. Initial passion<!--]--></h4><p><!--[-->The first week of the project was great. Day 1, I was able to integrate OpenStreetMaps and the Wikipedia API to list all the articles in the area with their view counts.
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/day1.png" onerror="this.setAttribute('data-error', 1)" alt="Day 1 progress" loading="lazy" data-nuxt-img=""><!--]--></p><p><!--[-->By Day 3, I supported fetching articles progressively as you moved the map around, added a page view filter, and added popups which linked to the Wikipedia page.
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/day3.png" onerror="this.setAttribute('data-error', 1)" alt="Day 3 progress" loading="lazy" data-nuxt-img=""><!--]--></p><p><!--[-->By the end of the first week, I had finished most of the basic UI. The map takes up the full screen, it's possible to collapse the list of articles, and you can sort by views. By this point I had everything I needed to validate my hypothesis. Instead I decided to keep adding more random features without having a clear vision in mind until...
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/week1.png" onerror="this.setAttribute('data-error', 1)" alt="Week 1 progress" loading="lazy" data-nuxt-img=""><!--]--></p><h4 id="_2-excuses"><a href="#_2-excuses"></a><!--[-->2. Excuses<!--]--></h4><p><!--[-->After the first week, I ended up getting busier with various tasks at work while also having to travel around. I told myself I would try to get some work done on the project if I got free time but somehow that never ended up happening. At the time I figured I couldn't be so hard on myself because I did actually have other stuff to do, but in hindsight I think this is where my lack of motivation started to kick in. Was I subconsciously afraid that the project wasn't going to work out the way I thought it would?<!--]--></p><h4 id="_3-fake-productivity"><a href="#_3-fake-productivity"></a><!--[-->3. Fake productivity<!--]--></h4><p><!--[-->After one week of not getting much done, I decided to kick it into high gear and make a bunch of changes.<!--]--></p><ol><!--[--><li><!--[-->Changing UI libraries to naive-ui and again to Quasar<!--]--></li><li><!--[-->Changing the color of map markers based on how popular an article is<!--]--></li><li><!--[-->Using the Navigator.geolocation property to search for articles near the user's location<!--]--></li><li><!--[-->Loading more details when clicking a popup<!--]--></li><li><!--[-->Adding a crosshair to the center of the map so you know where you're loading from<!--]--></li><li><!--[-->A bunch of different CSS tweaks<!--]--></li><!--]--></ol><p><!--[-->A week passed and here's what I ended up with. It certainly looks a lot better, although what you don't see is the horrible lag that happens when you first load the page (and whenever you move around the map), the fact that the popups often don't load until all the page views are fetched (I'm assuming because of some rate limiting on Wikipedia's side), and how the table on the right breaks down and becomes practically useless after moving around the map for a while and accumulating thousands of articles in the list. Don't get me started on how it looks on a phone.
<img src="https://www.preethamrn.com/_ipx/h_30&amp;w_30&amp;f_webp&amp;blur_1&amp;q_80/posts/when-should-you-give-up/final-result.png" onerror="this.setAttribute('data-error', 1)" alt="Final result" loading="lazy" data-nuxt-img=""><!--]--></p><h4 id="_4-pushing-tasks-back-by-days"><a href="#_4-pushing-tasks-back-by-days"></a><!--[-->4. Pushing tasks back by days<!--]--></h4><p><!--[-->Once the low effort tasks dried up I wasn't sure what to do next. I started to realize that a lot of things would need to be built from the ground up and had to confront the fact that what I was doing just wasn't working.<!--]--></p><p><!--[-->The website was laggy, the most viewed articles were just the city pages (which aren't particularly interesting coordinates to visit on a vacation), and many of the prominent articles that showed up were things like <a href="https://en.wikipedia.org/wiki/YouTube_headquarters_shooting" rel="nofollow" target="_blank"><!--[-->YouTube headquarters shooting<!--]--></a>" and "<a href="https://en.wikipedia.org/wiki/Death_of_Jeffrey_Epstein" rel="nofollow" target="_blank"><!--[-->Death of Jeffrey Epstein<!--]--></a>" while more interesting places like "<a href="https://en.wikipedia.org/wiki/Pittock_Mansion" rel="nofollow" target="_blank"><!--[-->Pittock Mansion<!--]--></a>" and "<a href="https://en.wikipedia.org/wiki/Ghirardelli_Square" rel="nofollow" target="_blank"><!--[-->Ghirardelli Square<!--]--></a>" were hard to come by. I'm surprised the first two even had coordinates to begin with.<!--]--></p><p><!--[-->What I really needed to do was overhaul the algorithm that I used to sort and display articles to users, improve the map controls to be less laggy, make the page more responsive on first load, and set a better zoom level which helped highlight the articles that were loaded.<!--]--></p><p><!--[-->But still, I spent the next few days continuing to mess around with the CSS, add mobile UI support, and improve the popup and table displays. None of these solved the core problem and here's what I have today - <a href="https://wikimaps.vercel.app/" rel="nofollow" target="_blank"><!--[-->Wikimaps<!--]--></a>.<!--]--></p><h4 id="_5-giving-up"><a href="#_5-giving-up"></a><!--[-->5. Giving up<!--]--></h4><p><!--[-->The reason it was so hard to get to this stage was the fear that I was wrong with my hypothesis. I tricked myself into believing that if I just kept making these small incremental changes that I'd make it fun to use again. But in reality, I think I probably should have quit after week 1... or at least drastically changed how I approached things. Maybe I'll come back to this project some other day, but for now, it'll go back on the shelf.<!--]--></p><p><!--[-->Why am I writing this? Partially as a cautionary tale to myself and others so in the future I won't make the same mistake. Partially because I spent the last month making something and I didn't want that to go to waste. And partially in the hope that sharing this idea with others<sup><a aria-current="page" href="https://www.preethamrn.com/posts/when-should-you-give-up#user-content-fn-1" aria-describedby="footnote-label" data-footnote-ref="" id="user-content-fnref-1"><!--[-->1<!--]--></a></sup> might reignite some of that initial passion that I had.<!--]--></p><p><!--[-->I think the biggest takeaway from this is that if something is worth building, you'll know right away. A barely functional prototype from <a href="https://www.preethamrn.com/posts/2020-year-in-review#pokemon-dens"><!--[-->another project I worked on almost 4 years ago<!--]--></a> got over <a href="https://www.reddit.com/r/PokemonSwordAndShield/comments/eqn6h4/interactive_map_of_the_wild_area_with_list_of/" rel="nofollow" target="_blank"><!--[-->1000 upvotes on Reddit<!--]--></a> in a day just based off of a gif.<!--]--></p><p><!--[-->For now I'm on to bigger and brighter pastures. I have another project in the works and this time I'll make sure to test my hypothesis as early as possible.<!--]--></p><section data-footnotes=""><ol><!--[--><li id="user-content-fn-1"><!--[-->I already posted this on <a href="https://www.reddit.com/r/InternetIsBeautiful/comments/1af6odr/a_website_which_lists_popular_wikipedia_articles/" rel="nofollow" target="_blank"><!--[-->Reddit<!--]--></a> and got some interest. However most of the suggested changes were "fake productivity" things like supporting showing distance in meters, supporting non-English articles, and fixing minor bugs with geolocation so I probably won't get back to it <a aria-current="page" href="https://www.preethamrn.com/posts/when-should-you-give-up#user-content-fnref-1" aria-label="Back to reference 1" data-footnote-backref=""><!--[-->↩<!--]--></a><!--]--></li><!--]--></ol></section></div><p> Written by <a href="https://www.twitter.com/preethamrn">@preethamrn</a>: Software developer at Uber with a degree in CS. Go, Storage, Distributed Systems, Bouldering, Rubik's Cubes. <a href="https://www.github.com/preethamrn">Github</a></p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[How is a binary executable organized? Let's explore it (440 pts)]]></title>
            <link>https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/</link>
            <guid>39231663</guid>
            <pubDate>Fri, 02 Feb 2024 17:43:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/">https://jvns.ca/blog/2014/09/06/how-to-read-an-executable/</a>, See on <a href="https://news.ycombinator.com/item?id=39231663">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
     <p>I used to think that executables were totally impenetrable. I’d
compile a C program, and then that was it! I had a Magical Binary
Executable that I could no longer read.</p>

<p>It is not so! Executable file formats are regular file formats that
you can understand. I’ll explain some simple tools to start! We’ll be
working on Linux, with ELF binaries. (binaries are kind of the
definition of platform-specific, so this is all platform-specific.)
We’ll be using C, but you could just as easily look at output from any
compiled language.</p>

<p>Let’s write a simple C program, <code>hello.c</code>:</p>

<pre><code>#include &lt;stdio.h&gt;

int main() {
    printf("Penguin!\n");
}
</code></pre>

<p>Then we compile it (<code>gcc -o hello hello.c</code>), and we have a binary called
<code>hello</code>. This originally seems impenetrable (how do we even binary?!),
but let’s see how we can investigate it! We’re going to learn what
<strong>symbols</strong>, <strong>sections</strong>, and <strong>segments</strong> are. At a high level:</p>

<ul>
<li><strong>symbols</strong> are like function names, and are used to answer “If I call
<code>printf</code> and it’s defined somewhere else, how do I find it?”</li>
<li>symbols are organized into <strong>sections</strong> – code lives in one section
(<code>.text</code>), and data in another (<code>.data</code>, <code>.rodata</code>)</li>
<li>sections are organized into <strong>segments</strong></li>
</ul>



<p>Throughout we’ll use a tool called <code>readelf</code> to look at these.</p>

<p>So, let’s dive into our binary!</p>

<h2 id="step-1-open-it-in-a-text-editor">Step 1: open it in a text editor!</h2>

<p>This is most naive possible way to view a binary. If run <code>cat hello</code>,
I get something like this:</p>

<pre>ELF&gt;@@H@8
@@@@@@��88@@@@�� ((`(`�
PP`P`��P�td@,,Q�tdR�td((`(`��/lib64/ld-linux-x86-64.so.2GNUGNUϨ�n��8�w�j7*oL�h��
__gmon_start__libc.so.6puts__libc_start_mainGLIBC_2.2.5ui
1```H��k����H���5 H�[]�fff.�H�=p
UH��t�H��]�H`��]Ð�UH����@�����]Ð�����������H�l$�L�d$�H�- L�%
L�l$�L�t$�L�|$�H�\$�H��8L)�A��I��H��I���s���H��t1@L��L��D��A��H��H9�u�H�\H�l$L�d$L�l$
L�t$(L�|$0H��8��Ð�������������UH��SH�H�
H���t�(`DH���H�H���u�H�[]Ð�H��o���H��Penguin!;,����H
</pre>

<p>There’s text here, though! This was not a total failure. In particular
it says “Penguin!” and “ELF”. ELF is the name of the binary format. So
that’s something! Then there are a bunch of unprintable symbols, which
isn’t a huge surprise because this is a binary.</p>

<h2 id="step-2-use-readelf-to-see-the-symbol-table">Step 2: use <code>readelf</code> to see the symbol table</h2>

<p>Throughout we’re going to use a tool called <code>readelf</code> to explore our
binary. Let’s start by running <code>readelf --symbols</code> on it. (another
popular tool to do this is <code>nm</code>)</p>

<pre><code>$ readelf --symbols hello 
   Num:    Value          Size Type    Bind   Vis      Ndx Name
    48: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND puts@@GLIBC_2.2.5
    59: 0000000000400410     0 FUNC    GLOBAL DEFAULT   13 _start
    61: 00000000004004f4    16 FUNC    GLOBAL DEFAULT   13 main
</code></pre>

<p>(<a href="https://gist.github.com/jvns/0f82a7655d32bb6b331e">full output here</a>)</p>

<p>Here we see three <em>symbols</em>: <code>main</code> is the address of my <code>main()</code>
function. <code>puts</code> looks like a reference to the <code>printf</code> function I called
in it (which I guess the compiler changed to <code>puts</code> as an
optimization?). <code>_start</code> is pretty important.</p>

<p>When the program starts running, you might think it starts at <code>main</code>.
It doesn’t! It <em>actually</em> goes to <code>_start</code>. This does a bunch of Very
Important Things that I don’t understand very well, including calling
<code>main</code>. So I won’t explain them.</p>

<p>So, what’s a symbol?</p>

<h3 id="symbols">Symbols</h3>

<p>When you write a program, you might write a function called <code>hello</code>.
When you compile the program, the binary for that function is labelled
with a <strong>symbol</strong> called <code>hello</code>. If I call a function (like <code>printf</code>)
from a library, we need a way to look up the code for that function!
The process of looking up functions from libraries is called
<strong>linking</strong>. It can happen either just after we compile the program
(“static linking”) or when we run the program (“dynamic linking”).</p>

<p>So symbols are what allow linking to work! Let’s find the symbol for
printf! It’ll be in <code>libc</code>, where all the C standard library
functions are.</p>

<p>If I run <code>nm</code> on my copy of libc, it tells me “no symbols”. But the
internet tells me I can use <code>objdump -tT</code> instead! This works!
<code>objdump -tT /lib/x86_64-linux-gnu/libc-2.15.so</code> gives me
<a href="https://gist.github.com/jvns/13bae55c3d463cdad809">this output</a>.</p>

<p>If you look at it, you’ll see <code>sprintf</code>, <code>strlen</code>, <code>fork</code>, <code>exec</code>, and
everything you might expect libc to have. From here we can start to
imagine how dynamic linking works – we see that <code>hello</code> calls <code>puts</code>,
and then we can look up the location of <code>puts</code> in libc’s symbol table.</p>

<h2 id="step-3-use-objdump-to-see-the-binary-and-learn-about-sections">Step 3: use <code>objdump</code> to see the binary, and learn about sections!</h2>

<p>Opening our binary in a text editor was a bad way to open it.
<code>objdump</code> is a better way. Here’s an excerpt:</p>

<pre><code>$ objdump -s hello
Contents of section .text:
 400410 31ed4989 d15e4889 e24883e4 f0505449  1.I..^H..H...PTI
 400420 c7c0a005 400048c7 c1100540 0048c7c7  ....@.H....@.H..
 400430 f4044000 e8c7ffff fff49090 4883ec08  ..@.........H...
Contents of section .interp:
 400238 2f6c6962 36342f6c 642d6c69 6e75782d  /lib64/ld-linux-
 400248 7838362d 36342e73 6f2e3200           x86-64.so.2.    
Contents of section .rodata:
 4005f8 01000200 50656e67 75696e21 00        ....Penguin!.   
</code></pre>

<p>You can see that it shows us all the bytes in the file as hex on the
left, and a translation into ASCII on the right.</p>

<p>The are a whole bunch of <strong>sections</strong> here (see
<a href="https://gist.github.com/jvns/64aa2c85e083e0031609">this gist</a> for the
whole thing). This shows you all the bytes in your binary! Some
sections we care about:</p>

<ul>
<li><code>.text</code> is the program’s actual code (the assembly). <code>_start</code> and
<code>main</code> are both part of the <code>.text</code> section.</li>
<li><code>.rodata</code> is where some read-only data is stored (in this case, our
string “Penguin!”)</li>
<li><code>.interp</code> is the filename of the dynamic linker!</li>
</ul>

<p>The major difference between <em>sections</em> and <em>segments</em> is that
sections are used at link time (by <code>ld</code>) and segments are used at
execution time. <code>objdump</code> shows us the contents of the sections, which
is nice, but doesn’t give us as much metadata about the sections as
I’d like. Let’s try <code>readelf</code> instead:</p>

<pre><code>$ readelf --sections hello
Section Headers:
  [Nr] Name              Type             Address           Offset
       Size              EntSize          Flags  Link  Info  Align
  [13] .text             PROGBITS         0000000000400410  00000410
       00000000000001d8  0000000000000000  AX       0     0     16
  [15] .rodata           PROGBITS         00000000004005f8  000005f8
       000000000000000b  0000000000000000   A       0     0     4
  [24] .data             PROGBITS         0000000000601010  00001010
       0000000000000010  0000000000000000  WA       0     0     8
  [25] .bss              NOBITS           0000000000601020  00001020
       0000000000000010  0000000000000000  WA       0     0     8
  [26] .comment          PROGBITS         0000000000000000  00001020
       000000000000002a  0000000000000001  MS       0     0     1
Key to Flags:
  W (write), A (alloc), X (execute), M (merge), S (strings), l (large)
  I (info), L (link order), G (group), T (TLS), E (exclude), x (unknown)
  O (extra OS processing required) o (OS specific), p (processor specific)
</code></pre>

<p>(<a href="https://gist.github.com/jvns/37ce4ad26758b403f6b3">full output</a>)</p>

<p>Neat! We can see <code>.text</code> is executable and read-only, <code>.rodata</code> (“read
only data”) is read-only, and <code>.data</code> is read-write.</p>

<h2 id="step-4-look-at-some-assembly">Step 4: Look at some assembly!</h2>

<p>We mentioned briefly that <code>.text</code> contains assembly code. We can
actually look at what it is really easily. If we were magicians, we
would already be able to read and understand this:</p>

<pre><code>Contents of section .text:
 400410 31ed4989 d15e4889 e24883e4 f0505449  1.I..^H..H...PTI
 400420 c7c0a005 400048c7 c1100540 0048c7c7  ....@.H....@.H..
 400430 f4044000 e8c7ffff fff49090 4883ec08  ..@.........H...
</code></pre>

<p>It starts with <code>31ed4989</code>. Those are bytes that our CPU interprets as
code! And runs! However we are not magicians (I don’t know what <code>31
ed</code> means!) and so we will use a disassembler instead.</p>

<pre><code>$ objdump -d ./hello
Disassembly of section .text:

0000000000400410 &lt;_start&gt;:
  400410:       31 ed                   xor    %ebp,%ebp
  400412:       49 89 d1                mov    %rdx,%r9
  400415:       5e                      pop    %rsi
  400416:       48 89 e2                mov    %rsp,%rdx
  400419:       48 83 e4 f0             and    $0xfffffffffffffff0,%rsp
</code></pre>

<p><a href="https://gist.github.com/jvns/75298b0a5b6cde5de175">full output here</a></p>

<p>So we see that <code>31 ed</code> is xoring two things. Neat! That’s all the
assembly we’ll do for now.</p>

<h2 id="step-5-segments">Step 5: Segments!</h2>

<p>Finally, a program is organized into <strong>segments</strong> or <strong>program
headers</strong>. Let’s look at the segments for our program using <code>readelf
--segments hello</code>.</p>

<pre><code>Program Headers:
  [... removed ...]
  INTERP         0x0000000000000238 0x0000000000400238 0x0000000000400238
                 0x000000000000001c 0x000000000000001c  R      1
      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]
  LOAD           0x0000000000000000 0x0000000000400000 0x0000000000400000
                 0x00000000000006d4 0x00000000000006d4  R E    200000
  LOAD           0x0000000000000e28 0x0000000000600e28 0x0000000000600e28
                 0x00000000000001f8 0x0000000000000208  RW     200000
  [... removed ...]

 Section to Segment mapping:
  Segment Sections...
   00     
   01     .interp 
   02 .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym
       .dynstr .gnu.version .gnu.version_r .rela.dyn .rela.plt .init .plt
       .text .fini .rodata .eh_frame_hdr .eh_frame
   03     .ctors .dtors .jcr .dynamic .got .got.plt .data .bss 
   04     .dynamic 
   05     .note.ABI-tag .note.gnu.build-id 
   06     .eh_frame_hdr 
   07     
   08     .ctors .dtors .jcr .dynamic .got 

</code></pre>

<p>Segments are used to determine how to separate different parts of the
program into memory. The first <code>LOAD</code> segment is marked R E (read /
execute) and the second is <code>RW</code> (read/write). <code>.text</code> is in the first
segment (we want to read it but never write to it), and <code>.data</code>,
<code>.bss</code> are in the second (we need to write to them, but not execute
them).</p>

<h2 id="not-magic">Not magic!</h2>

<p>Executables aren’t magic. ELF is a file format like any other! You can
use <code>readelf</code>, <code>nm</code>, and <code>objdump</code> to inspect your Linux binaries. Try
it out! Have fun.</p>

<p>Other resources:</p>

<ul>
<li>I found
<a href="http://www.bottomupcs.com/elf.html">this introduction to ELF</a>
helpful for explaining sections and segments</li>
<li>There’s a wonderful
<a href="https://code.google.com/p/corkami/wiki/ELF101">graphic showing the structure of an ELF binary</a>.</li>
<li>For learning more about how linkers work, there’s a wonderful
<a href="http://lwn.net/Articles/276782/">20 part series about linkers</a>,
which I wrote about
<a href="http://jvns.ca/blog/2013/12/10/day-40-learning-about-linkers/">here</a>
and
<a href="http://jvns.ca/blog/2013/12/10/day-40-12-things-i-learned-today-about-linkers/">here</a>.</li>
<li>I haven’t talked much about assembly at all here! Read Dan Luu’s
<a href="http://danluu.com/edit-binary/">Editing Binaries: Easier than it sounds</a></li>
</ul>

<p><small> Thanks very much to the amazing
<a href="http://akaptur.github.io/">Allison Kaptur</a> and
<a href="http://danluu.com/">Dan Luu</a> for reading a draft of this.</small></p>
</div></div>]]></description>
        </item>
    </channel>
</rss>