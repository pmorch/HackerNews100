<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sat, 09 Sep 2023 09:00:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[FTC judge rules Intuit broke law, must stop advertising TurboTax as “free” (142 pts)]]></title>
            <link>https://arstechnica.com/tech-policy/2023/09/ftc-judge-rules-intuit-broke-law-must-stop-advertising-turbotax-as-free/</link>
            <guid>37441982</guid>
            <pubDate>Sat, 09 Sep 2023 03:26:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/tech-policy/2023/09/ftc-judge-rules-intuit-broke-law-must-stop-advertising-turbotax-as-free/">https://arstechnica.com/tech-policy/2023/09/ftc-judge-rules-intuit-broke-law-must-stop-advertising-turbotax-as-free/</a>, See on <a href="https://news.ycombinator.com/item?id=37441982">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Free should mean free    —
</h4>
            
            <h2 itemprop="description">Intuit plans appeal, slams FTC's "predetermined decision."</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/09/getty-tax-form-800x533.jpg" alt="A United States tax filing form. A pen and a calculator sit on top of the form.">
      <figcaption><p>Getty Images | Sasirin Pamai</p></figcaption>  </figure>

  




<!-- cache hit 95:single/related:16d38a88412d5af49aa3d756ebb11895 --><!-- empty -->
<p>The Federal Trade Commission's chief administrative law judge ruled that Intuit violated US law with deceptive advertising and should be forced to stop promoting TurboTax as "free" unless all conditions imposed on the free offer are immediately and conspicuously displayed to consumers.</p>
<p>The <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/intuit_initial_decision_public_redacted_1.pdf">initial decision</a> by Administrative Law Judge D. Michael Chappell was released today and is subject to an automatic review by the full commission. The FTC commissioners will likely rule against Intuit, which issued a statement indicating that it will take the matter to federal court. The order would be in effect for 20 years if it survives appeal.</p>
<p><a href="https://www.intuit.com/blog/news-social/intuit-responds-to-u-s-federal-trade-commissions-anticipated-decision-and-reaffirms-its-commitment-to-free-tax-preparation/">The response from Intuit</a> noted that the administrative law judge is "an employee of the FTC" and "ruled in favor of the FTC in the agency's own lawsuit." The FTC filed an <a href="https://www.ftc.gov/news-events/news/press-releases/2022/03/ftc-sues-intuit-its-deceptive-turbotax-free-filing-campaign">administrative complaint</a> against Intuit in March 2022.</p>
<p>"Intuit will appeal this groundless and seemingly predetermined decision by the FTC to rule in its own favor and is confident that when the matter ultimately returns to a neutral body Intuit will prevail, as it has previously in this matter," the company said.</p>
<p>Intuit also said it "already adheres to most of the advertising practices in the FTC's erroneous decision. There is no monetary penalty, and Intuit expects no significant impact to its business."</p>
<h2>Clearly and conspicuously</h2>
<p>According to Chappell's 242-page ruling, "the evidence proves that Intuit engaged in deceptive advertising in violation of Section 5 of the FTC Act." Intuit "advertised to consumers that they could file their taxes online for free using TurboTax, when in truth, for approximately two-thirds of taxpayers, the advertised claim was false," he wrote.</p>                                            
                                                        
<p>The order said Intuit "must not represent that a good or service is 'Free'" unless it actually offers the good or service for free to all consumers, or "All the terms, conditions, and obligations upon which receipt and retention of the 'Free' good or service are contingent are set forth clearly and conspicuously at the outset of the offer so as to leave no reasonable probability that the terms of the offer might be misunderstood."</p>
<p>Moreover, if an Intuit good or service is not free for most US taxpayers, that fact must be "disclosed clearly and conspicuously at the outset of any disclosures required" by the order. The order defines "clearly and conspicuously" in some detail.</p>
<p>"In any communication that is solely visual or solely audible, the disclosure must be made through the same means through which the communication is presented," it says. "In any communication made through both visual and audible means, such as a television advertisement, the disclosure must be presented simultaneously in both the visual and audible portions of the communication even if the representation requiring the disclosure is made in only one means."</p>
<p>The order then provides more specifics on how disclosures must be conveyed in various formats. For example, visual disclosures "must stand out from any accompanying text or other visual elements so that it is easily noticed, read, and understood," and audible disclosures "must be delivered in a volume, speed, and cadence sufficient for ordinary consumers to easily hear and understand it."</p>
<p>Similarly strict requirements apply to online advertisements, product labels, and face-to-face communications. The disclosures also "must not be contradicted or mitigated by, or inconsistent with, anything else in the communication."</p>                                            
                                                        
<h2>Court denied FTC injunction request</h2>
<p>At the same time it filed the administrative complaint last year, the FTC also <a href="https://arstechnica.com/tech-policy/2022/03/turbotax-maker-sued-by-ftc-over-deceptive-ads-that-promise-free-tax-filing/">sued Intuit</a> in US District Court for the Northern District of California. In the federal court, a judge denied the FTC's motion for a preliminary injunction in an April 2022 <a href="https://storage.courtlistener.com/recap/gov.uscourts.cand.393685/gov.uscourts.cand.393685.66.0.pdf">order</a> that said the issue could remain on hold while the FTC's administrative process unfolds.</p>
<p>The ruling said that "Intuit had removed several of the most plausibly deceptive advertisements—that is, three videos that repeated the word 'free' a dozen or more times over 30 seconds before a very brief disclaimer."</p>
<p>"However, if Intuit resumes its full advertising campaign... or the facts on the ground change significantly, the FTC may return to this Court to request relief," US District Judge Charles Breyer wrote.</p>
<p>In a separate case involving all 50 US states and the District of Columbia, Intuit, in May 2022, <a href="https://arstechnica.com/tech-policy/2022/05/turbotax-forced-to-stop-misleading-free-free-free-ads-and-pay-back-141m/">agreed</a> to pay $141 million in restitution to nearly 4.4 million consumers who "started using TurboTax's Free Edition for tax years 2016 through 2018 and were told that they had to pay to file even though they were eligible to file for free using the IRS Free File program offered through TurboTax," New York Attorney General Letitia James' office said at the time. Under that settlement, Intuit was required to stop its "free, free, free" ad campaign.</p>
<p>In its response to the administrative law judge's decision, Intuit said it expected the ruling because of the FTC's "flawed and highly questionable process, Chair Lina Khan's previous public and prejudicial statements against Intuit, and the fact that the FTC has ruled in its own favor in nearly every consumer protection case for the last two decades."</p>
<p>"We believe the FTC's decision is improper, wholly ignores the facts, and tramples on the foundations of an independent American judicial system with its serving as prosecutor, judge, and jury on its own matters," Intuit said.</p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LogoScale – A method for vectorizing small, crappy logos (166 pts)]]></title>
            <link>https://msprout.notion.site/LogoScale-A-Method-for-Vectorizing-Small-Crappy-Logos-dc0035b7473c44f8b94ffc4026d286c0</link>
            <guid>37440631</guid>
            <pubDate>Fri, 08 Sep 2023 23:38:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://msprout.notion.site/LogoScale-A-Method-for-Vectorizing-Small-Crappy-Logos-dc0035b7473c44f8b94ffc4026d286c0">https://msprout.notion.site/LogoScale-A-Method-for-Vectorizing-Small-Crappy-Logos-dc0035b7473c44f8b94ffc4026d286c0</a>, See on <a href="https://news.ycombinator.com/item?id=37440631">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Snoop unto them as they snoop unto you (182 pts)]]></title>
            <link>https://blog.dataparty.xyz/blog/snoop-unto-them/</link>
            <guid>37440104</guid>
            <pubDate>Fri, 08 Sep 2023 22:26:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.dataparty.xyz/blog/snoop-unto-them/">https://blog.dataparty.xyz/blog/snoop-unto-them/</a>, See on <a href="https://news.ycombinator.com/item?id=37440104">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>03. September 2023</p><div>
        
          
          <p><img src="https://blog.dataparty.xyz/images/defcon-31-snoop-unto-them/podium-4.png" alt="defcon-31-snoop-unto-them/podium-4.png"></p><p>The official videos from DEFCON 31 have been posted!</p>
<p>Below you can watch our talk “Snoop unto them as they snoop unto you”. The <a href="https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20video%20and%20slides/DEF%20CON%2031%20-%20Snoop%20on%20to%20them%2C%20as%20they%20snoop%20on%20to%20us%20-%20Alan%20Meekins.mp4">talk</a>, <a href="https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20presentations/nullagent%20rekcahdam%20-%20Snoop%20on%20to%20them%20as%20they%20snoop%20on%20to%20us.pdf">slides</a>, <a href="https://media.defcon.org/DEF%20CON%2031/DEF%20CON%2031%20presentations/nullagent%20rekcahdam%20-%20Snoop%20on%20to%20them%20as%20they%20snoop%20on%20to%20us/">files</a> and <a href="https://rfparty.xyz/">code</a> are also available for download.</p>



<video width="100%" poster="https://blog.dataparty.xyz/images/defcon-31-snoop-unto-them/podium-1.png" controls="">
    <source src="https://blog.dataparty.xyz/images/defcon-31-snoop-unto-them/DEF%20CON%2031%20-%20Snoop%20on%20to%20them,%20as%20they%20snoop%20on%20to%20us%20-%20nullagent.mp4" type="video/mp4">
</video>


<h2 id="follow-and-support">Follow and Support</h2>
<p>If you enjoyed our talk, please consder following:</p>
<ul>
<li>Buy us a coffee - <a href="https://ko-fi.com/dataparty">https://ko-fi.com/dataparty</a></li>
<li>Get rfparty - <a href="https://rfparty.xyz/">https://rfparty.xyz</a></li>
<li>Mastodon - <a href="https://partyon.xyz/@dataparty">https://partyon.xyz/@dataparty</a></li>
<li>Instagram - <a href="https://www.instagram.com/datapartydao">https://www.instagram.com/datapartydao</a></li>
<li>Twitter - <a href="https://twitter.com/datapartydao">https://twitter.com/datapartydao</a></li>
<li>Join our discord <a href="https://discord.gg/JrYQ3f4Pxz">https://discord.gg/JrYQ3f4Pxz</a></li>
</ul>
<h2 id="mailing-list">Mailing List</h2>


<!-- Begin Mailchimp Signup Form -->





</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Decoded: GNU Coreutils (2018) (216 pts)]]></title>
            <link>https://maizure.org/projects/decoded-gnu-coreutils/</link>
            <guid>37439535</guid>
            <pubDate>Fri, 08 Sep 2023 21:15:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://maizure.org/projects/decoded-gnu-coreutils/">https://maizure.org/projects/decoded-gnu-coreutils/</a>, See on <a href="https://news.ycombinator.com/item?id=37439535">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">

    <main id="main" role="main">

<div>
<article id="post-252" class="page">
	
	<div>
<p><i>October 2018
<br>&nbsp;&nbsp;updated: September 2019</i></p>
<p><img src="https://maizure.org/projects/decoded-gnu-coreutils/GNU.png" width="640" height="320" alt="coreutils brought to you by the GNU project"></p>
<p>This is a long-term project to decode all of the GNU coreutils in version 8.3.</p> 
<p>This resource is for novice programmers exploring the design of command-line utilities. It is best used as an accompaniment providing useful background while reading the <a href="https://github.com/MaiZure/coreutils-8.3/tree/master/src">source code</a> of the utility you may be interested in. This is <strong>not</strong> a user guide -- Please see applicable <a href="http://man7.org/linux/man-pages/dir_by_project.html#coreutils">man pages</a> for instructions on using these utilities.</p>
<p><strong>Status</strong>: Complete!
</p><ul>
<li>Phase 1 [<strong>complete</strong>] - Each utility has a dedicated page discussing the namespace and execution overview.</li>
<li>Phase 2 [<strong>complete</strong>] - Expanded discussion about important design decisions and algorithms. Tracing utility lineage both from UNIX and early Coreutils. Porting content to something more collaborative. Enhancing source walkthrough to something more useful. Creating a source code evolution visualizer</li>
<li>Phase indefinite - Line by line code walkthrough for each utility will be accomplished over a long period. <a href="https://github.com/MaiZure/decoded-coreutils">GitHub repo available</a> to gather line-by-line notes. This segment was deferred due to consistent feedback that readers were more interested in high-level discussion. </li>
</ul>


<hr>
	
<h2>The GNU Core Utilities</h2>
<p>I'll link the utility pages here at the top. Click the command name for the detailed page decoding that utility. The discussion, source code, and walkthroughs are available on each page. <strong>Bolded</strong> utilities have been expanded as part of phase 2. Enjoy!</p>


<h2>Helpful background for code reading</h2><p>
The GNU coreutils has its foibles. Many of these utilities are approaching 30 years old and include revisions by many people over the years. Here are some things to keep in mind when reading the code:
</p><ul>
<li><strong>Tiny programs</strong> - These utilities are small, (mostly) single-source file programs designed to do one thing and do it well. They are not designed for long life or to scale beyond their role. Consequently, we see designs often considered 'bad practice' such as:
  <ul>
  <li>Many globals</li>
  <li>Liberal use of macros</li>
  <li><code>goto</code> statements</li>
  <li>Long functions with nested switchs/loops</li>
  </ul>
</li>
<li><strong>Know POSIX</strong> - Start with the <a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap12.html#tag_12_02">Utility Syntax Guidelines</a>. In general, POSIX supports interoperability by defining appropriate inputs and outputs, but leaves the 'work' to the implementation. While the GNU coreutils <a href="https://www.gnu.org/software/coreutils/manual/html_node/Standards-conformance.html">may not strictly conform</a> to POSIX, many ideas are entrenched: permission bits, uids/gids, environment variables, exit status, and about <a href="http://www.open-std.org/jtc1/sc22/open/n4217.pdf">3718 pages</a> of more trivia. </li>
<li><strong>Outside help</strong> - Portability is a complex problem and coreutils relies on extra help from a related project: <a href="https://www.gnu.org/s/gnulib/">gnulib</a>. Almost every utility includes functions from gnulib which are specially designed for common problems used in many places across various systems - No need to reinvent the wheel.</li>
<li><strong>Launched from a shell</strong> - The Core utilities expect support from a shell such as bash, zsh, ksh, and others. The shell forks/clones in to the utility, passes the arguments, sets up the environment, redirects I/O via pipes, and retains exit values.</li>
<li><strong>Three families</strong> - GNU coreutils were originally three distinct packages for shell, text, and file utilities. Utilities within the same type share many of the same design patterns.</li>
</ul>

<h3>Basic design</h3>
<p>Most CLI utilities look something close to this:</p>
<p><img src="https://maizure.org/projects/decoded-gnu-coreutils/general_cli_utility.png" width="1080" height="240" alt="General CLI procedure"></p>
<p>The key ideas:</p>
<ul>
<li>A setup phase for flags, options, localization, etc</li>
<li>An argument parsing phase thats reads input to set execution parameters</li>
<li>A processing/execution phase that prepares input for one or more syscalls</li>
<li>Many opportunities to check constraints and fail out of execution
  <ul><li>Distinct EXIT status hint about problem location</li>
  <li>EXIT_FAILURE is general and commonly used</li></ul>
</li>
<li>Providing feedback after failed execution</li>
</ul>
<p>This is the framework I'll use to organize the decoding of each utility. We'll see that each has a unique variant of this idea which range from a few lines to thousands of lines. I'd categorize the variants in three groups: trivial, wrappers, and full utilities</p>

<p><strong>Trivial utilities</strong><br>
Trivial utilities have a unique set up phase which defines a macro in a couple lines. Then it 'includes' the source of another utility in which the macro forces a specific flow control. Examples include: <em>arch</em>, <em>dir</em>, and <em>vdir</em></p>

<p><strong>Wrapper utilities</strong><br>
Wrappers perform setup and parse command line options which are passed directly as arguments to a syscall. The result of the syscall is the result of the utility. These utilities do little processing on their own. Examples include: <em>link</em>, <em>whoami</em>, <em>hostid</em>, <em>logname</em>, and more</p>

<p><strong>Full utilities</strong><br>
The diagram above shows a design for full utilities. A setup phase, an option/argument parsing phase, and execution. Execution means processing input data and may invoke many syscalls along the way to handle more data until complete. Most utilities fall in to this category.</p>

<hr>

<h2>Digging deeper</h2>
<p>Let's go through the most common ideas shared across many of the utilities. Knowing these concepts beforehand should speed up code reading.</p>

<h3 id="i18n">Utility Initialization</h3>
<p>All utilities have a short initialization procedure near the beginning of <code>main()</code>: </p>
<pre>  initialize_main (&amp;argc, &amp;argv);
  set_program_name (argv[0]);
  setlocale (LC_ALL, "");
  bindtextdomain (PACKAGE, LOCALEDIR);
  textdomain (PACKAGE);

  atexit (close_stdout);
</pre>
<p>This preamble solves a few administrative issues; the most important of which are <a href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/locale.h.html">internationalization</a> and assigning the exit action. I'll go through each of these lines <a href="https://maizure.org/projects/decoded-gnu-coreutils/index.html#commonlines">below</a>. This lines don't impact the specific action of a utility.</p>

<h3 id="getopt">Parsing with Getopt</h3>
<p>Ever wonder why command line utilities have had the same look and feel for the past 40 years? You can thank the <a href="https://www.gnu.org/software/libc/manual/html_node/Parsing-Program-Arguments.html">Getopt</a> toolset. The bare minimum you need to know to follow the coreutils is:</p>
<ul>
<li>Command line options can be 'short' and 'long', prefixed with (-) and (--) respectively. Short options are defined as a string while long options use a <a href="https://www.gnu.org/software/libc/manual/html_node/Getopt-Long-Options.html#Getopt-Long-Options">struct</a>.</li>
<li>Short options use 1) only a letter if the option has no argument, 2) A single colon (:) for mandatory arguments, and (::) for optional arguments. For example, the short option string for <em>kill</em> is: <code>Lln:s:t</code>. Which says that <code>L</code>, <code>l</code>, <code>t</code> take no arguments but <code>n</code> and <code>s</code> need an argument.</li>
<li>Long options often have a short analogue</li>
<li>The <code>getopt_long()</code> function returns the next option and is used in all utilities</li>
<li>The <code>optind</code> index is a position within the <code>argv[]</code> array for the next argument.</li>
<li>The <code>optarg</code> char pointer points to the value of the option's argument.</li>
</ul>

<h3 id="fts">Traversing the file system with fts</h3>
<p>Unix-like systems often support the <a href="https://www.freebsd.org/cgi/man.cgi?query=fts&amp;apropos=0&amp;sektion=3&amp;manpath=FreeBSD+11.2-RELEASE+and+Ports&amp;arch=default&amp;format=html">fts</a> library to easily manage walking through the file system. The basic hand-waved details are:</p>
<ul>
<li>The tree is represented by an <code>FTS</code> structure built by calling <code>fts_open()</code> or <code>xfts_open()</code> on a path.</li>
<li>A node (file/directory) from the tree is a <code>FTSENT</code> structure.</li>
<li>Calling <code>fts_read()</code> on the FTS generates <code>FTSENT</code>s. This is walking the tree.</li>
<li>The <code>FTSENT-&gt;fts_info</code> field describes the entries. It is used often to decide how to handle the entry.</li>
</ul>

<h3>Syscall wrappers, and helpers</h3>
<p>coreutils often invokes syscalls through wrappers and helpers beyond those provided by libc. Many are linked through the <a href="https://www.gnu.org/software/gnulib/">Gnulib project</a>.</p>
<h4>write</h4>
<p>libc provides many text writing functions, such as <code>fwrite()</code> for buffered stream access, and the <code>write()</code> syscall wrapper. Coreutils brings in non-standard functions such as <code>full_write()</code>. The <a href="https://github.com/coreutils/gnulib/blob/master/lib/full-write.c">full_write()</a> function continuously retries writes unless there is a hard failure. It relies on <a href="https://github.com/coreutils/gnulib/blob/master/lib/safe-read.c">safe_write()</a> to retry the <code>write()</code> syscall across interrupts. Other write-related helpers are used only in a single utility. Such as <code>iwrite()</code> in <em>dd</em>, <code>cwrite()</code> in <em>split</em>. I'll discuss those within the utilities themselves.</p>

<h3>Common functions</h3>
<p>All utilities use at least three functions: <code>main()</code>, <code>usage()</code>, and <code>_()</code>.</p>
<p>The <code>usage()</code> function displays help for the utility that includes a list of input parameters, their meaning, and appropriate syntax.</p>
<p>The <code>_()</code> function is really a macro defined in <code>system.h</code> that binds simple strings to the Native Language Support capability in GNU <a href="https://github.com/coreutils/gnulib/blob/master/lib/gettext.h">gettext.h</a>. If it's a string meant to be shown to the user, it's probably wrapped with this function.</p>

<h3 id="commonlines">Common code lines</h3>
<p>The following code lines occur in most non-trivial utilities:</p>
<p><code>#include "system.h"</code><br>
This header defines system-dependent marcos, variables, and useful non-standard functions. It provides 'translations' necessary to allow coreutils to build on as many architectures as possible. Overall, this header is a patchwork of corner cases lacking serious organization -- but it works!. Many C standard and POSIX headers are included within this header, such as: <em>unistd.h</em>, <em>limits.h</em>, <em>ctypes.h</em>, <em>time.h</em>, <em>string.h</em>, <em>errno.h</em>, <em>stdbool.h</em>, <em>stdlib.h</em>, <em>fcntl.h</em>, <em>inttypes.h</em>, and <em>locale.h</em>.</p>

<p><code>#define PROGRAM_NAME "cat"</code><br>
Defines the official name for the utility. Used in the 'version' check.</p>

<p><code>#define AUTHORS proper_name ("Richard M. Stallman")</code><br>
Defines the authors for the utility. Used in the 'version' check.</p>

<p><code>emit_try_help ()</code><br>
Prints help suggestion after failed output. Includes a link to the online documents. This will appear at the beginning of <code>usage()</code></p>

<p><code>emit_ancillary_info (PROGRAM_NAME)</code><br>
Prints common extra help info after the command-specific output. Includes a link to the online documents. This appears close to the end of <code>usage()</code></p>

<p><code>exit (status)</code><br>
Syscall to end execution with the given status. This appears at the end of <code>usage()</code></p>

<p><code>initialize_main(&amp;argc, &amp;argv)</code><br>
Special handler for VMS forcing built-in wildcard expansion. This is defined away for most other operating systems</p>

<p><code>set_program_name(argv[0]);</code><br>
Saves the basic program name using the first input argument. Discards the path component of argv[0].</p>

<p><code>setlocale(LC_ALL, "");</code><br>
Sets up internationalization options during execution. Provided by <a href="https://www.gnu.org/software/libc/manual/html_node/Setting-the-Locale.html">libc</a> in <code>&lt;locale.h&gt;</code></p>

<p><code>bindtextdomain (PACKAGE, LOCALEDIR);</code><br>
Sets the directory of intenationalization features using the <a href="https://www.gnu.org/software/gettext/">free software</a> gettext.h </p>

<p><code>textdomain (PACKAGE);</code><br>
Sets the text domain to enable i18n.</p>

<p><code>atexit(close_stdout);</code><br>
Registers the <a href="https://github.com/gagern/gnulib/blob/master/lib/closeout.c">close_stdout</a> function for call when the program ends. This flushes the buffer steam in addition to closing.</p>

<p><code>IF_LINT(something);</code><br>
Suppresses GCC warnings if using a linter by including the code within the parens. Usually this is NOP</p>

<h3>C idioms</h3>
<p>There are a few idioms buried in the coreutils source that may be unfamiliar to beginners.</p><p><code>!!</code><br>
The double exclaimation point is exactly what you see, a double unary NOT operation. The purpose is to coerce a value in to a boolean. It's often used to make a flag from a function return value.</p>
<p><code>do { ... } while (0)</code><br>
The non-loop often encloses a multi-statement macro to ensure proper tokenization after preprocessor substitution. The core use-case is as a consequent: 
</p><pre>if (condition)
  MACRO;
else 
  something else
</pre><p>
Note that lack of semi-colon after while -- It's manually added after the macro in the C code.</p>

<hr>

<h2>Utility Maintenance</h2>
<p>An active project like coreutils is always evolving. In general, updates proceed across three arcs:</p>
<ul>
<li><strong>Project-wide changes</strong> - These are larger scale changes to underlying architecture and dependencies across all utilities. Some highlights include:
  <ul>
  <li>1995: Native language support was added thanks to the GNU <a href="https://www.gnu.org/software/gettext/manual/html_node/History.html">gettext project</a>. This incorporated the <code>_()</code> macro around most text output lines. Internationalization support expanded in 1996, adding several initializers to <code>main()</code> as discussed in the previous section</li>
  <li>1995: Short descriptions of utility purpose were added to usage output</li>
  <li>2003: VMS wildcard support. This is visible via the <code>initialize_main()</code> function</li>
  <li>2016: The <code>die()</code> macro replaces most <code>exit()</code> and <code>error()</code> functions on failure paths to avoid compiler warnings</li>
  <li>Various: Incorporating macro constants such as EXIT_SUCCESS, PROGRAM_NAME, AUTHORS, among others.</li>
  </ul>
</li>
<li><strong>Utility-specific updates</strong> - Many changes apply only to a subset or single utility. These cases usually fall in to three categories: bug fixes, new features, and optimizations. Examples of each type include:</li>
  <ul>
  <li>Bug: The <em>join</em>, <em>sort</em>, and <em>uniq</em> commands were susceptible to an overflow attack until <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=commit;h=b2eadd109c3a508011705761dfe24a35180d925d">patched</a> in 2016</li>
  <li>Feature: The <code>--output</code> option was <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob;f=src/df.c;hb=dae8d223b69bdea7c8913d33640a7b36ef0ff755">added</a> to <em>df</em> in 2013</li>
  <li>Optimization: The <em>yes</em> utility performance <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=commitdiff;h=35217221c211f3116f374f305654462195aa634a">improved</a> with better buffering</li>
  </ul>
<li><strong>Annual maintenance</strong> - At a minimum, the copyright years of all utilities are updated. Another administrative change includes updating the FSF address. These changes have no effect on execution</li>
</ul>
<p>For curious readers, I've included an 'evolution' view within each utility page to visualize utility changes over time.</p>

<h3>Contributing</h3>
<p>People interested in contributing should read everything on the <a href="https://www.gnu.org/software/coreutils/">GNU project page</a>. The <a href="https://git.savannah.gnu.org/cgit/coreutils.git/plain/HACKING">contribution guidelines</a> and list of <a href="https://www.gnu.org/software/coreutils/rejected_requests.html">rejected features</a> are especially enlightening. Finally, go through the <a href="https://lists.gnu.org/archive/html/coreutils/">mailing list archives</a> to get an idea of what contributions are most valuable. A very short list of things to consider before writing any code:</p>
<ul>
<li>Can this functionality be reproduced with existing tools?</li>
<li>Does your contribution break backwards compatibility?</li>
<li>Does the proposed behavior deviate significantly from POSIX?</li>
</ul>
<p>Not sure? Send your concerns to the community on the mailing list</p>

<hr>

<h2>Fun stuff</h2>
<p>Veteran developers looking for a reason to peek inside these utilities may want to start their journey here.</p>
<h3>Trivia</h3>
<p>
Shortest utility: <strong>false</strong> (2 lines - tied with arch, dir, and vdir)<br>
Shortest standalone utility: <strong>true</strong> (80 lines) -- the <a href="http://git.savannah.gnu.org/gitweb/?p=coreutils.git;a=blob;f=src/true.c;hb=5d4eefe8d858f8d832d0038175dd1b461e7004c5">first version</a> is almost a minimum C program!<br>
Longest utility: <strong>ls</strong> (5308 lines)
</p>
<ul>
<li>Many utilities trace back to Research UNIX in the 1970s. A handful even further back to Multics</li>
<li>The oldest spiritual ancestor is the CTSS <em>LISTF</em> command (~1963). Thankfully shorted to <em>ls</em>
<ul><li>LISTF is one of the original 18 utilities in the <a href="http://larch-www.lcs.mit.edu:8001/~corbato/sjcc62/">1962 design paper</a> </li></ul>
</li><li>The distinct syntax of the <em>dd</em> utility is reminiscent of the OS/360 <a href="https://en.wikipedia.org/wiki/Job_Control_Language#Concatenating_input_files">job control language</a> (early 1960s).</li>
<li>The <em>sort</em> program is the only utility that takes advantage of multi-threading</li>
<li>The <em>fmt</em> utility demonstrates optimization of lines and paragraphs using feature costs</li>
<li>The deceptively simple <em>yes</em> utility has high-performance output using page-aligned memory buffers</li>
<li>The <em>df</em> utility is faster than <em>du</em>. The former uses device metadata while the latter checks all files</li>
<li><em>cksum</em> includes two entry points, one for normal operation and one to generate the CRC-32 table</li>
<li>There is no failure condition for the <em>echo</em> utility</li>
<li>The design of the <em>test</em> and <em>expr</em> utilities departs significantly from the typical utility</li>
<li><em>su</em> was originally maintained by coreutils/shellutils</li>
<li>My personal least used utilities are <em>tsort</em> and <em>ptx</em> - I tested them once in the late 1990s</li>
</ul>


<h3>Interesting implementations</h3>
<p>There are a few standalone code snippets within coreutils worth investigating:</p>
<ul>
<li>An <a href="https://en.wikipedia.org/wiki/ISAAC_(cipher)">ISAAC cipher</a> for random numbers used by <a href="https://maizure.org/projects/decoded-gnu-coreutils/shuf.html"><em>shuf</em></a> and <a href="https://maizure.org/projects/decoded-gnu-coreutils/shuf.html"><em>shred</em></a></li>
<li><a href="https://en.wikipedia.org/wiki/Reservoir_sampling">Reservoir sampling</a> used by <a href="https://maizure.org/projects/decoded-gnu-coreutils/shuf.html"><em>shuf</em></a></li>
<li>Legacy <a href="https://en.wikipedia.org/wiki/SYSV_checksum">System V</a> and <a href="https://en.wikipedia.org/wiki/BSD_checksum">BSD</a> checksums used in <a href="https://maizure.org/projects/decoded-gnu-coreutils/sum.html"><em>sum</em></a></li>
<li>Left-associative expression evaluation used in <a href="https://maizure.org/projects/decoded-gnu-coreutils/expr.html"><em>expr</em></a></li>
<li><a href="https://www.cs.auckland.ac.nz/~pgut001/pubs/secure_del.html">Secure overwrite</a> used by the <a href="https://maizure.org/projects/decoded-gnu-coreutils/shred.html"><em>shred</em></a> utility</li>
<li>The <a href="https://en.wikipedia.org/wiki/Cyclic_redundancy_check">CRC-32 checksum</a> computed by <a href="https://maizure.org/projects/decoded-gnu-coreutils/cksum.html"><em>cksum</em></a> utility</li>
<li><a href="https://en.wikipedia.org/wiki/Merge_sort">Merge sort</a> as adapted for <a href="https://maizure.org/projects/decoded-gnu-coreutils/sort.html"><em>sort</em></a></li>
<li>The litany of mathemagic behind <a href="https://maizure.org/projects/decoded-gnu-coreutils/factor.html"><em>factor</em></a>
</li></ul>
<hr>

<h2>FAQ</h2>
<p><strong>Nice project! How can I donate to support this effort?</strong><br>
Thanks for the thoughts; unfortunately I'm not configured to receive personal donations. But feel free to share your time or money with the <a href="https://my.fsf.org/donate/">Free Software Foundation</a> -- That's where all the collaborative efforts happen!
</p>

    </div>

	</article>
</div>

        
      
    </main>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The rxv64 Operating System: MIT's xv6, in Rust, for SMP x86_64 machines (113 pts)]]></title>
            <link>https://github.com/dancrossnyc/rxv64</link>
            <guid>37439391</guid>
            <pubDate>Fri, 08 Sep 2023 21:03:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/dancrossnyc/rxv64">https://github.com/dancrossnyc/rxv64</a>, See on <a href="https://news.ycombinator.com/item?id=37439391">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">The rxv64 Operating System</h2>
<p dir="auto">rxv64 is a pedagogical operating system written in Rust that targets
multiprocessor x86_64 machines.  It is a reimplementation of the xv6
operating system from MIT.</p>
<p dir="auto">As a pedagogical system, it supports very little hardware other than
the text-mode CGA device, serial port, PS/2 keyboard controller, and
PCIe AHCI SATA storage devices.</p>
<p dir="auto">See the xv6 README for more information on provenance and intended
use.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Using LD_PRELOAD to cheat, inject features and investigate programs (143 pts)]]></title>
            <link>https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/</link>
            <guid>37439125</guid>
            <pubDate>Fri, 08 Sep 2023 20:41:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/">https://rafalcieslak.wordpress.com/2013/04/02/dynamic-linker-tricks-using-ld_preload-to-cheat-inject-features-and-investigate-programs/</a>, See on <a href="https://news.ycombinator.com/item?id=37439125">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><strong>This post assumes some basic C skills.</strong></p>
<p>Linux puts you in full control. This is not always seen from everyone’s perspective, but a power user loves to be in control. I’m going to show you a basic trick that lets you heavily influence the behavior of most applications, which is not only fun, but also, at times, useful.</p>
<h4>A motivational example</h4>
<p>Let us begin with a simple example. Fun first, science later.</p>
<pre title="random_num.c:">#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;time.h&gt;

int main(){
  srand(time(NULL));
  int i = 10;
  while(i--)&nbsp;printf("%d\n",rand()%100);
  return 0;
}
</pre>
<p>Simple enough, I believe. I compiled it with no special flags, just</p>
<blockquote>
<pre>gcc random_num.c -o random_num</pre>
</blockquote>
<p>I hope the resulting output is obvious – ten randomly selected numbers 0-99, hopefully different each time you run this program.</p>
<p>Now let’s pretend we don’t really have the source of this executable. Either delete the source file, or move it somewhere – we won’t need it. We will significantly modify this programs behavior, yet without touching it’s source code nor recompiling it.</p>
<p>For this, lets create another simple C file:</p>
<pre title="unrandom.c:">int rand(){
    return 42; //the most random number in the universe
}
</pre>
<p>We’ll compile it into a shared library.</p>
<blockquote>
<pre>gcc -shared -fPIC unrandom.c -o unrandom.so</pre>
</blockquote>
<p>So what we have now is an application that outputs some random data, and a custom library, which implements the rand() function as a constant value of 42. &nbsp;Now… just run <em>random_num&nbsp;</em>this way,&nbsp;and watch the result:</p>
<blockquote>
<pre>LD_PRELOAD=$PWD/unrandom.so ./random_nums</pre>
</blockquote>
<p>If you are lazy and did not do it yourself (and somehow fail to guess what might have happened), I’ll let you know – the output consists of ten 42’s.</p>

<p><!--more-->This may be even more impressive it you first:</p>
<blockquote>
<pre>export LD_PRELOAD=$PWD/unrandom.so</pre>
</blockquote>
<p>and then run the program normally. An unchanged app run in an apparently usual manner seems to be affected by what we did in our tiny library…</p>
<h6><strong>Wait, what? What did just happen?</strong></h6>
<p>Yup, you are right, our program failed to generate random numbers, because it did not use the “real” rand(), but the one we provided – which returns 42 every time.</p>
<h6><strong>But we *told* it to use the real one. We programmed it to use the real one. Besides, at the time we created that program, the fake rand() did not even exist!</strong></h6>
<p>This is not entirely true. We did not choose which rand() we want our program to use. We told it just to use rand().</p>
<p>When our program is started, certain libraries (that provide functionality needed by the program) are loaded. We can learn which are these using&nbsp;<em>ldd</em>:<em><br>
</em></p>
<blockquote>
<pre>$ <strong>ldd random_nums</strong>
linux-vdso.so.1 =&gt; (0x00007fff4bdfe000)
libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f48c03ec000)
/lib64/ld-linux-x86-64.so.2 (0x00007f48c07e3000)</pre>
</blockquote>
<p>What you see as the output is the list of libs that are needed by&nbsp;<em>random_nums</em>. This list is built into the executable, and is determined compile time. The exact output might slightly differ on your machine, but a <strong>libc.so</strong> must be there – this is the file which provides core C functionality. That includes the “real” rand().</p>
<p>We can have a peek at what functions does libc provide. I used the following to get a full list:</p>
<blockquote>
<pre>nm -D /lib/libc.so.6</pre>
</blockquote>
<p>The <em>nm</em> command lists symbols found in a binary file. The -D flag tells it to look for dynamic symbols, which makes sense, as libc.so.6 is a dynamic library. The output is very long, but it indeed lists rand() among many other standard functions.</p>
<p>Now what happens when we set up the environmental variable LD_PRELOAD? This variable&nbsp;<strong>forces some libraries to be loaded for a program</strong>. In our case, it loads <em>unrandom.so</em> for&nbsp;<em>random_num</em>, even though the program itself does not ask for it. The following command may be interesting:<em><br>
</em></p>
<blockquote>
<pre>$ <strong>LD_PRELOAD=$PWD/unrandom.so ldd random_nums</strong>
linux-vdso.so.1 =&gt;  (0x00007fff369dc000)
/some/path/to/unrandom.so (0x00007f262b439000)
libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f262b044000)
/lib64/ld-linux-x86-64.so.2 (0x00007f262b63d000)</pre>
</blockquote>
<p>Note that it lists our custom library. And indeed this is the reason why it’s code get’s executed:&nbsp;<em>random_num</em>&nbsp;calls rand(), but if&nbsp;<em>unrandom.so</em> is loaded it is our library that provides implementation for rand(). Neat, isn’t it?</p>
<h4>Being transparent</h4>
<p>This is not enough. I’d like to be able to inject some code into an application in a similar manner, but in such way that it will be able to function normally. It’s clear if we implemented open() with a simple “<em>return 0;</em>“, the application we would like to hack should malfunction. The point is to be <strong>transparent</strong>, and to actually call the original open:</p>
<pre title="inspect_open.c:">int open(const char *pathname, int flags){
  /* Some evil injected code goes here. */
  return open(pathname,flags); // Here we call the "real" open function, that is provided to us by libc.so
}
</pre>
<p>Hm. Not really. This won’t call the “original” open(…). Obviously, this is an endless recursive call.</p>
<p>How do we access the “real” open function? It is needed to use the programming interface to the dynamic linker. It’s simpler than it sounds. Have a look at this complete example, and then I’ll explain what happens there:</p>
<pre title="inspect_open.c:">#define _GNU_SOURCE
#include &lt;dlfcn.h&gt;

typedef int (*orig_open_f_type)(const char *pathname, int flags);

int open(const char *pathname, int flags, ...)
{
    /* Some evil injected code goes here. */

    orig_open_f_type orig_open;
    orig_open = (orig_open_f_type)dlsym(RTLD_NEXT,"open");
    return orig_open(pathname,flags);
}

</pre>
<p>The <i>dlfcn.h</i> is needed for <em>dlsym</em> function we use later. That strange&nbsp;<em>#define</em> directive instructs the compiler to enable some non-standard stuff, we need it to enable&nbsp;<em>RTLD_NEXT</em> in&nbsp;<em>dlfcn.h</em>. That typedef is just creating an alias to a complicated pointer-to-function type, with arguments just as the original open – the alias name is&nbsp;<em>orig_open_f_type</em>, which we’ll use later.</p>
<p>The body of our custom open(…) consists of some custom code. The last part of it creates a new function pointer&nbsp;<em>orig_open</em> which will point to the original open(…) function. In order to get the address of that function, we ask&nbsp;<em>dlsym</em>&nbsp;to find for us the next “open” function on dynamic libraries stack. Finally, we call that function (passing the same arguments as were passed to our fake “open”), and return it’s return value as ours.</p>
<p>As the “evil injected code” I simply used:</p>
<pre title="inspect_open.c (fragment):">printf("The victim used open(...) to access '%s'!!!\n",pathname); //remember to include stdio.h!
</pre>
<p>To compile it, I needed to slightly adjust compiler flags:</p>
<blockquote>
<pre>gcc -shared -fPIC &nbsp;inspect_open.c -o inspect_open.so -ldl</pre>
</blockquote>
<p>I had to append&nbsp;<em>-ldl</em>, so that this shared library is linked to <em>libdl</em>, which provides the <em>dlsym</em> function. (Nah, I am not going to create a fake version of <em>dlsym</em>, though this might be fun.)</p>
<p>So what do I have in result? A shared library, which implements the open(…) function so that it behaves&nbsp;<strong>exactly</strong> as the real open(…)… except it has a side effect of <em>printf</em>ing the file path :-)</p>
<p>If you are not convinced this is a powerful trick, it’s the time you tried the following:</p>
<blockquote>
<pre>LD_PRELOAD=$PWD/inspect_open.so gnome-calculator</pre>
</blockquote>
<p>I encourage you to see the result yourself, but basically it lists every file this application accesses. In real time.</p>
<p>I believe it’s not that hard to imagine why this might be useful for debugging or investigating unknown applications. Please note, however, that this particular trick is not quite complete, because <em>open()</em> is not the only function that opens files… For example, there is also&nbsp;<em>open64()</em> in the standard library, and for full investigation you would need to create a fake one too.</p>
<h4><strong>Possible uses</strong></h4>
<p>If you are still with me and enjoyed the above, let me suggest a bunch of ideas of what can be achieved using this trick. Keep in mind that you can do all the above&nbsp;without to source of the&nbsp;affected&nbsp;app!</p>
<ol>
<li><del>Gain root privileges.</del> Not really, don’t even bother, you won’t bypass any security this way. (A quick explanation for pros: no libraries will be preloaded this way if ruid != euid)</li>
<li>Cheat games:&nbsp;<strong>Unrandomize.</strong> This is what I did in the first example. For a fully working case you would need also to implement a custom&nbsp;<em>random()</em>,&nbsp;<em>rand_r()</em><em>, random_r()</em>. Also some apps may be reading from&nbsp;<em>/dev/urandom</em> or so, you might redirect them to&nbsp;<em>/dev/null</em>&nbsp;by running the original <em>open()</em> with a modified file path. Furthermore, some apps may have their own random number generation algorithm, there is little you can do about that (unless: point 10 below). But this looks like an easy exercise for beginners.</li>
<li>Cheat games: <b>Bullet time.&nbsp;</b>Implement all standard time-related functions pretend the time flows two times slower. Or ten times slower. If you correctly calculate new values for time measurement, timed <em>sleep</em> functions, and others, the affected application will believe the time runs slower (or faster, if you wish), and you can experience awesome bullet-time action.<br>
Or go <strong>even one step further</strong> and let your shared library also be a DBus client, so that you can communicate with it real time. Bind some shortcuts to custom commands, and with some additional calculations in your fake timing functions you will be able to enable&amp;disable the slow-mo or fast-forward anytime you wish.</li>
<li>Investigate apps:&nbsp;<strong>List accessed files.</strong> That’s what my second example does, but this could be also pushed further, by recording and monitoring all app’s file I/O.</li>
<li>Investigate apps:&nbsp;<strong>Monitor internet access.</strong> You might do this with Wireshark or similar software, but with this trick you could actually gain control of what an app sends over the web, and not just look, but also affect the exchanged data. Lots of possibilities here, from detecting spyware, to cheating in multiplayer games, or analyzing &amp; reverse-engineering&nbsp;protocols of closed-source applications.</li>
<li>Investigate apps:&nbsp;<strong>Inspect GTK structures.</strong>&nbsp;Why just limit ourselves to standard library? Let’s inject code in all GTK calls, so that we can learn what widgets does an app use, and how are they structured. This might be then rendered either to an image or even to a gtkbuilder file! Super useful if you want to learn how does some app manage its interface!</li>
<li><strong>Sandbox unsafe applications.</strong> If you don’t trust some app and are afraid that it may wish to<em> rm -rf /&nbsp;</em>or do some other unwanted file activities, you might potentially redirect all it’s file IO to e.g. /tmp by appropriately&nbsp;modifying the arguments it passes to all file-related functions (not just <em>open</em>, but also e.g. removing directories etc.). It’s more difficult trick that a chroot, but it gives you more control. It would be only as safe as complete your “wrapper” was, and unless you really know what you’re doing, don’t actually run any&nbsp;malicious&nbsp;software this way.</li>
<li><strong>Implement features.</strong> <a href="http://www.zlibc.linux.lu/index.html">zlibc</a> is an actual library which is run this precise way; it uncompresses files on the go as they are accessed, so that any application can work on compressed data without even realizing it.</li>
<li><strong>Fix bugs.&nbsp;</strong>Another real-life example: some time ago (I am not sure this is still the case) Skype – which is closed-source – had problems capturing video from some certain webcams. Because the source could not be modified as Skype is not free software, this was fixed by preloading a library that would correct these problems with video.</li>
<li>Manually <strong>access application’s own memory</strong>. Do note that you can access all app data this way. This may be not impressive if you are familiar with software like CheatEngine/scanmem/GameConqueror, but they all require root privileges to work. LD_PRELOAD does not. In fact, with a number of clever tricks your injected code might access all app memory, because, in fact, it gets executed by that application itself. You might modify everything this application can. You can probably imagine this allows a lot of low-level hacks… but I’ll post an article about it another time.</li>
</ol>
<p>These are only the ideas I came up with. I bet you can find some too, if you do – share them by commenting!</p>
<hr>

	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Consumers defrauded on Zelle are left high and dry by the banks that created it [pdf] (113 pts)]]></title>
            <link>https://www.warren.senate.gov/imo/media/doc/ZELLE%20REPORT%20OCTOBER%202022.pdf</link>
            <guid>37438934</guid>
            <pubDate>Fri, 08 Sep 2023 20:23:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.warren.senate.gov/imo/media/doc/ZELLE%20REPORT%20OCTOBER%202022.pdf">https://www.warren.senate.gov/imo/media/doc/ZELLE%20REPORT%20OCTOBER%202022.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=37438934">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Scammers can exploit email forwarding flaws to impersonate high-profile domains (167 pts)]]></title>
            <link>https://today.ucsd.edu/story/forwarding_based_spoofing</link>
            <guid>37438478</guid>
            <pubDate>Fri, 08 Sep 2023 19:45:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://today.ucsd.edu/story/forwarding_based_spoofing">https://today.ucsd.edu/story/forwarding_based_spoofing</a>, See on <a href="https://news.ycombinator.com/item?id=37438478">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">



		
	
		


	<section id="feature-detail-hero">
		<p>   
			
					
			
			
			<h2>Some of the domains vulnerable include Mastercard, The Washington Post and the Department of State</h2>
			
		</p>
		
		
		
				
			
			
			
			
			
			
	</section>
	
		<section id="wysiwyg">
    
  
  
    
	 <!-- START DATE STORIES IN NEW FORMAT -->
	 
	 <!-- START OF AUTHORS-BLOCK FOR MOBILE  -->
	 
	 <!-- END OF AUTHORS-BLOCK FOR MOBILE -->
	 
	 

		  <!-- START NEW CONTENT BLOCK -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
							
							
							
						   <p><span><span>Sending an email with a forged address is easier than previously thought, due to flaws in the process that allows email forwarding, according to a research team led by computer scientists at the University of California San Diego.&nbsp;</span></span></p>

<p><span><span>The issues researchers uncovered have a broad impact, affecting the integrity of email sent from tens of thousands of domains, including those representing organizations in the U.S. government–such as the majority of U.S. cabinet email domains, including state.gov, as well as security agencies. Key financial service companies, such as Mastercard, and major news organizations, such as The Washington Post and the Associated Press, are also vulnerable.&nbsp;</span></span></p>

<p><span><span>It's called forwarding-based spoofing and researchers found that they can send email messages impersonating these organizations, bypassing the safeguards deployed by email providers such as Gmail and Outlook. Once recipients get the spoofed email, they are more likely to open attachments that deploy malware, or to click on links that install spyware on their machine.</span></span><br>
&nbsp;</p>
										
						</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
							
						   <p><span><span>Such spoofing is made possible by a number of vulnerabilities centered on forwarding emails, the research team found. The original protocol used to check the authenticity of an email implicitly assumes that each organization operates its own mailing infrastructure, with specific IP addresses not used by other domains. But today, many organizations outsource their email infrastructure to Gmail and Outlook. As a result, thousands of domains have delegated the right to send email on their behalf to the same third party. </span></span><span><span>While these third-party providers validate that their users only send email on behalf of domains that they operate, this protection can be bypassed by email forwarding.&nbsp;</span></span></p>

<p><span><span>For example, state.gov, the email domain for the Department of State, allows Outlook to send emails on their behalf. This means emails claiming to be from state.gov would be considered legitimate if they came from Outlook’s email servers. As a result, an attacker can create a spoofed email–an email with a fake identity–pretending, for example, to come from the Department of State--and then forward it through their personal Outlook account. Once they do this, the spoofed email will now be treated as legitimate by the recipient, as it is coming from an Outlook email server.</span></span></p>
										
						</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
										<!-- 
  This figure is meant to be part of a Article/Feature Detail page. It provides 
  data attributes for the slideshow carousel script to target the image and
  caption for dynamically pulling into the slideshow modal
  - Supported variables
  -- image-src
  -- image-alt
  -- image-caption
  -- image-size
-->

	<figure data-slideshow-item="" data-slideshow-image-src="https://today.ucsd.edu/news_uploads/Alex_Liu_portrait_%28200width%29.jpeg" data-slideshow-image-alt="Portrait of PhD student Alex Liu" data-slideshow-image-caption="<p>{/exp:typographee}</p><div>Alex Liu, a PhD student in the UC San Diego Department of Computer Science and Engineering, led the research.&nbsp;</div>">
	  <img data-src="https://today.ucsd.edu/news_uploads/Alex_Liu_portrait_%28200width%29.jpeg" alt="Portrait of PhD student Alex Liu" src="https://today.ucsd.edu/news_uploads/Alex_Liu_portrait_%28200width%29.jpeg">
	  
	  <figcaption>
	    <p>Alex Liu, a PhD student in the UC San Diego Department of Computer Science and Engineering, led the research.&nbsp;</p>
	  </figcaption>
	  
	</figure>
	
										<p><span><span>Versions of this flaw also exist for five other email providers, including iCloud. The researchers also discovered other smaller issues that impact users of Gmail and Zohomail– a popular email provider in India.&nbsp;</span></span></p>

<p><span><span>Researchers reported the issue to Microsoft, Apple and Google but to their knowledge, it has not been fully fixed.&nbsp;</span></span></p>

<p><span><span>“That is not surprising since doing so would require a major effort, including dismantling and repairing four decades worth of legacy systems,” said Alex Liu, the paper’s first author and a Ph.D. student in the Jacobs School Department of Computer Science and Engineering at UC San Diego. “While there are certain short-term mitigations that will significantly reduce the exposure to the attacks we have described here, ultimately email needs to stand on a more solid security footing if it is to effectively resist spoofing attacks going forward.”&nbsp;</span></span></p>

<p><span><span>The team presented their findings at the 8th IEEE European Symposium on Privacy and Security, July 3 to 7, 2023, in Delft, where the work won best paper.&nbsp;</span></span></p>
													
								 	</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
										<!-- 
  This figure is meant to be part of a Article/Feature Detail page. It provides 
  data attributes for the slideshow carousel script to target the image and
  caption for dynamically pulling into the slideshow modal
  - Supported variables
  -- image-src
  -- image-alt
  -- image-caption
  -- image-size
-->

	<figure data-slideshow-item="" data-slideshow-image-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-09-01_at_4.00.49_PM_.png" data-slideshow-image-alt="A chart showing how an attack would work" data-slideshow-image-caption="<p>{/exp:typographee}</p><p>Example of a spoofed email attack exploiting open forwarding and relaxed validation for forwarded email from well-known providers</p>">
	  <img data-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-09-01_at_4.00.49_PM_.png" alt="A chart showing how an attack would work" src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-09-01_at_4.00.49_PM_.png">
	  
	  <figcaption>
	    <p>Example of a spoofed email attack exploiting open forwarding and relaxed validation for forwarded email from well-known providers</p>
	  </figcaption>
	  
	</figure>
	
										<h3><span><span>Different attacks</span></span></h3>

<p><span><span>Researchers developed four different types of attacks using forwarding.&nbsp;</span></span></p>

<p><span><span>For the first three, they assumed that an adversary controls both the accounts that send and forward emails. The attacker also needs to have a server capable of sending spoofed email messages and an account with a third party provider that allows open forwarding.&nbsp;</span></span></p>

<p><span><span>The attacker starts by creating a personal account for forwarding and then adds the spoofed address to the accounts’s white list–a list of domains that won’t be blocked even if they don’t meet security standards. The attacker configures their account to forward all email to the desired target. The attacker then forges an email to look like it originated from state.gov and sends the email to their personal Outlook account. Then all the attacker has to do is forward the spoofed email to their target.&nbsp;</span></span></p>

<p><span><span>More than 12 percent of the Alexa 100K most popular email domains–the most popular domains on the Internet– are vulnerable to this attack. These include a large number of news organizations, such as the Washington Post, the Los Angeles Times and the Associated Press, as well as domain registrars like GoDaddy, financial services, such as Mastercard and Docusign and large law firms. In addition, 32% of .gov domains are vulnerable, including the majority of US cabinet agencies, a range of security agencies, and agencies working in the public health domain, such as CDC. At the state and local level, virtually all primary state government domains are vulnerable and more than 40% of all .gov domains are used by cities.&nbsp;</span></span></p>

<p><span><span>In a second version of this attack, an attacker creates a personal Outlook account to forward spoofed email messages to Gmail. In this scenario, the attacker takes on the identity of a domain that is also served by Outlook, then sends the spoofed message from their own malicious server to their personal Outlook account, which in turn forwards it to a series of Gmail accounts.&nbsp;</span></span></p>

<p><span><span>Roughly 1.9 billion users worldwide are vulnerable to this attack.&nbsp;</span></span></p>

<p><span><span>Researchers also found variations of this attack that work for four popular mailing list services: Google groups, mailman, listserv and Gaggle.</span></span></p>
													
								 	</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
										<!-- 
  This figure is meant to be part of a Article/Feature Detail page. It provides 
  data attributes for the slideshow carousel script to target the image and
  caption for dynamically pulling into the slideshow modal
  - Supported variables
  -- image-src
  -- image-alt
  -- image-caption
  -- image-size
-->

	<figure data-slideshow-item="" data-slideshow-image-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-08-31_at_2.54.47_PM_.png" data-slideshow-image-alt="Screenshot of a spoofed email " data-slideshow-image-caption="<p>{/exp:typographee}</p><div>The researchers were able to spoof a wide range of email addresses</div>">
	  <img data-src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-08-31_at_2.54.47_PM_.png" alt="Screenshot of a spoofed email " src="https://today.ucsd.edu/news_uploads/Screen_Shot_2023-08-31_at_2.54.47_PM_.png">
	  
	  <figcaption>
	    <p>The researchers were able to spoof a wide range of email addresses</p>
	  </figcaption>
	  
	</figure>
	
										<h3><span><span>Potential solutions</span></span></h3>

<p><span><span>Researchers disclosed all vulnerabilities and attacks to providers. Zoho patched their issue and awarded the team a bug bounty. Microsoft also awarded a bug bounty and confirmed the vulnerabilities. Mailing list service Gaggle said it would change protocols to resolve the issue. Gmail also fixed the issues the team reported and iCloud is investigating.&nbsp;</span></span></p>

<p><span><span>But to truly get to the root of the issue, researchers recommend disabling open forwarding, a process that allows users to configure their account to forward messages to any designated email address without any verification by the destination address. This process is in place for Gmail and Outlook. In addition, providers such as Gmail and Outlook implicity trust high-profile email services, delivering messages forwarded by these emails regardless.&nbsp;</span></span></p>

<p><span><span>Providers should also do away with the assumption that emails coming from another major provider are legitimate, a process called relaxed validation policies.</span></span></p>

<p><span><span>In addition, researchers recommend that mailing lists request confirmation from the true sender address before delivering email.&nbsp;</span></span></p>

<p><span><span>“A more fundamental approach would be to standardize various aspects of forwarding,” the researchers write. “However, making such changes would require system-wide cooperation and will likely encounter many operational issues.”&nbsp;</span></span></p>
													
								 	</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		  
		    <!-- START IF COPY -->
		   
		      <div>
							
						   <h3><span><span>Methods&nbsp;</span></span></h3>

<p><span><span>For each service, researchers created multiple test accounts and used them to forward email to recipient accounts they controlled. They then analyzed the resulting email headers to better understand which forwarding protocol the service used. They tested their attacks on 14 email providers, which are used by 46% of the most popular internet domains and government domains.&nbsp;</span></span></p>

<p><span><span>They also created mailing lists under existing services provided by UC San Diego, and by mailing list service Gaggle.&nbsp;</span></span></p>

<p><span><span>Researchers only sent spoofed email messages to accounts they created themselves. They first tested each attack by spoofing domains they created and controlled. Once they verified that the attacks worked, they ran a small set of experiments that spoofed emails from real domains. Still, the spoofed emails were only sent to test accounts the researchers created.&nbsp;</span></span></p>

<p><span><span>“One fundamental issue is that email security protocols are distributed, optional and independently configured components,” the researchers write. This creates a large and complex attack surface with many possible interactions that cannot be easily anticipated or administrated by any single party. “</span></span></p>



<p><a href="https://arxiv.org/pdf/2302.07287.pdf"><span><span><span>Forward Pass: On the Security Implications of Email Forwarding Mechanism and Policy</span></span></span></a></p>

<p><span><span>Alex Enze Liu, Ariana Mirian, Grant Ho, Geoffrey M. Voelker and Stefan Savage, UC San Diego Department of Computer Science and Engineering</span></span></p>

<p><span><span>Gautam Akiwate, Stanford University</span></span></p>

<p><span><span>Mattijs Jonker, University of Twente, Netherlands</span></span></p>


										
						</div>
		      
		    <!-- END IF COPY -->
		    
		    <!-- START OPTIONAL STAND ALONE IMAGE -->
		    
		    <!-- END OPTIONAL STAND ALONE IMAGE -->
		    
		  <!-- END CONTENT BLOCK -->
		  
	
	  
      
  

  <!-- START TOPICS & SHARE MOBILE  -->
  <div>
    <!--
  This renders topics, share this, and optional text copy
  - Supported variables
  -- topics
-->

	
	<!-- begin new story format -->
	
		
		
		
		<h2>Share This:</h2>
		
	<!-- end new story format -->	
		

  </div>
  <!-- END TOPICS & SHARE MOIBILE -->
</section>

	

	<section>
        <div>
    <h2>
      You May Also Like
    </h2>
    
  </div>
        
        <div>
                     
                     
                     
	                     <p><a href="https://today.ucsd.edu/story/avocado-genome-is-at-the-center-of-new-study" alt="Avocado Genome is at the Center of New Study">
	                             <img srcset="https://today.ucsd.edu/news_uploads/_special-lead-mobile/PR20230905_avocado_genome.jpg 350w, https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg 864w" sizes="(min-width: 768px) 864px, 350px" data-src="https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg" alt="Avocado Genome is at the Center of New Study" width="750" height="488">
	                         </a>
	                     </p>
                     
                     
                 </div>
        
        
        
        
        <div>
                        
                        
                        
	                        <p><a href="https://today.ucsd.edu/story/avocado-genome-is-at-the-center-of-new-study" alt="Avocado Genome is at the Center of New Study">
	                                <img srcset="https://today.ucsd.edu/news_uploads/_special-lead-mobile/PR20230905_avocado_genome.jpg 350w, https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg 864w" sizes="(min-width: 768px) 864px, 350px" data-src="https://today.ucsd.edu/news_uploads/_special-lead-desk/PR20230905_avocado_genome.jpg" alt="Avocado Genome is at the Center of New Study" width="750" height="488">
	                            </a>
	                        </p>
                        
                    </div>
    </section>
	<div id="subscribe">
    <div>
        <h2>Stay in the Know</h2>
        <p>Keep up with all the latest from UC San Diego. Subscribe
          to the newsletter today.
        </p>
      </div>
    <div>
        <form novalidate="" data-subscribe-form="" action="subscribe.html" method="post" data-form_type="newsletter_signup">
          <div>
            <p><label for="subscriber-email">
              Email
            </label>
            </p><div data-validation-message="email">
              <p>Please provide a valid email address.</p></div>
          </div>
          
        </form>
      </div>
  </div>
<!-- START Subscribe Modal -->

<!-- STOP Subscribe Modal -->
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Conway's Game of Life in TypeScript's type system (157 pts)]]></title>
            <link>https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts</link>
            <guid>37438028</guid>
            <pubDate>Fri, 08 Sep 2023 19:11:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts">https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts</a>, See on <a href="https://news.ycombinator.com/item?id=37438028">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:RuyiLi/cursed-typescript" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="rXhtpzy8T9tucZdfmMism4ayvoGzHadW86FR021itWZfgseLIjvzySHHUN1YZIuK85p-0pdgfSbBZ9oaPpnXHg" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="RuyiLi/cursed-typescript" data-current-org="" data-current-owner="RuyiLi" data-logged-in="false">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      
      
</modal-dialog></div>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      
      
</modal-dialog></div>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=RuyiLi%2Fcursed-typescript" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/RuyiLi/cursed-typescript/blob/master/random/game-of-life.ts&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="db9c2b08cfb028db801ca0caba8afdbeaf76a7397a7fe31cb8f14e68d77f8efd" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Safety Inspector Fired for Finding Too Many Defects Could Cost Railroad Millions (207 pts)]]></title>
            <link>https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520</link>
            <guid>37437764</guid>
            <pubDate>Fri, 08 Sep 2023 18:51:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520">https://jalopnik.com/safety-inspector-fired-for-finding-too-many-defects-cou-1850817520</a>, See on <a href="https://news.ycombinator.com/item?id=37437764">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>You would think that if you worked as a track inspector for a railroad company, reporting defects would make you good at your job. After all, wouldn’t the company want to know where its trains should slow down and where repairs need to be made? Ignoring those problems <span><a data-ga="[[&quot;Embedded Url&quot;,&quot;Internal link&quot;,&quot;https://jalopnik.com/overworked-inspector-missed-major-track-problems-two-da-1850699999&quot;,{&quot;metric25&quot;:1}]]" href="https://jalopnik.com/overworked-inspector-missed-major-track-problems-two-da-1850699999">would be a recipe for train derailments</a></span> that could cost the company a lot of money and could injure or even kill employees. According to former track inspector Don Sanders, you would be wrong, at least if you work for <span><a data-ga="[[&quot;Embedded Url&quot;,&quot;Internal link&quot;,&quot;https://jalopnik.com/over-2-000-railroad-workers-filed-safety-complaints-ove-1850320431&quot;,{&quot;metric25&quot;:1}]]" href="https://jalopnik.com/over-2-000-railroad-workers-filed-safety-complaints-ove-1850320431">Burlington Northern Santa Fe</a></span>.</p><div data-video-id="195640" data-monetizable="true" data-position="sidebar" data-video-title="2024 Polestar 2 | First Drive" data-video-blog-id="12" data-video-network="jalopnik" data-video-duration="238" data-playlist="195640,195639,195630" data-current="195640"><div><p>2024 Polestar 2 | First Drive</p></div><video disablepictureinpicture="" muted="" playsinline="" width="100%" height="100%" crossorigin="anonymous" preload="none"><source data-src="https://vid.kinja.com/prod/195640/195640_240p.mp4" label="240p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_480p.mp4" label="480p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_720p.mp4" label="720p" type="video/mp4"><source data-src="https://vid.kinja.com/prod/195640/195640_1080p.mp4" label="1080p" type="video/mp4"><track kind="captions" label="English" src="https://kinja.com/api/videoupload/caption/21134.vtt" srclang="en"></video><div><ul><li data-label="">Off</li><li data-label="English">English</li></ul></div></div><p><span><a data-ga="[[&quot;Embedded Url&quot;,&quot;External link&quot;,&quot;https://kstp.com/kstp-news/top-news/a-track-inspector-claimed-he-was-fired-for-reporting-too-many-defects-his-secret-recordings-may-cost-bnsf-millions/&quot;,{&quot;metric25&quot;:1}]]" href="https://kstp.com/kstp-news/top-news/a-track-inspector-claimed-he-was-fired-for-reporting-too-many-defects-his-secret-recordings-may-cost-bnsf-millions/" target="_blank" rel="noopener noreferrer">KSTP-TV reports</a></span> Sanders had previously sued BNSF back in 2017, claiming he was retaliated against after he reported “too many defects.” The jury found in his favor, and BNSF is currently appealing the multi-million-dollar judgment. This isn’t the first time BNSF found itself in court, either. After a train derailed back in March, the news channel  “...found BNSF had repeatedly been sanctioned or admonished in court for destroying evidence or retaliating against employees.”</p><p>But now, KSTP-TV has obtained a series of previously unreleased secretly recorded phone calls from the lawsuit. And let’s just say they do not make BNSF look good. In one, you can hear an employee ask, “Why can’t we just fix the (expletive) defects?” In another from 2015, Sanders’ supervisor is clearly upset that he called the Federal Railroad Administration.</p><p>“Why in the world would we ever call the FRA about anything? Unless I’m absolutely blatantly telling you to break the rules,” the supervisor says. “They know the rule book better than anybody,” Sanders responds. “Have I ever called the FRA on you because you told me not to follow the rules like you do all the time? No.”</p><p>Another former BNSF track inspector, Kevin Gaylor, told KSTP-TV he<!-- --> was working with Sanders on a track inspection trip when they both received a call from their boss criticizing their performance. “We were both called and criticized for putting out too many slow order defects,” Gaylor said. “Every track inspector on this system can tell you their experiences about the pressure that’s put on.”</p><p>A slow order is given when a defect is found that is serious enough that trains need to reduce their speed until they pass. </p><p>In another one of the calls, Sanders’ boss sounds upset about a reported defect potentially putting his job in jeopardy, saying, “All I can say is I need your help right now to keep my ass from getting fired.” “I need to just look the other way?” Sanders responds. “No. We just need to have a conversation,” his boss replies.</p><p>According to court records obtained by KSTP-TV, that supervisor still has his job and was actually given a raise and a near <!-- -->$20,000 bonus. The performance review that led to that raise and bonus specifically referenced the fact that “Don Sanders is no longer working for BNSF” and the reduction in slow orders.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FTC judge decides Intuit’s ‘free’ TurboTax ads misled consumers (314 pts)]]></title>
            <link>https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing</link>
            <guid>37437311</guid>
            <pubDate>Fri, 08 Sep 2023 18:19:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing">https://www.theverge.com/2023/9/8/23864538/turbotax-intuit-ftc-deceptive-practices-free-tax-filing</a>, See on <a href="https://news.ycombinator.com/item?id=37437311">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article id="content"><div><div><div><h2>FTC judge decides Intuit’s ‘free’ TurboTax ads did mislead consumers</h2><p><span><span> / </span><h2>The FTC ruled TurboTax ‘deceived consumers’ by advertising its tax filing service as ‘free.’</h2></span></p></div><div><p><span>By</span> <span><span></span> <span><a href="https://www.theverge.com/authors/emma-roth">Emma Roth</a></span><span>, <span>a news writer who covers the streaming wars, consumer tech, crypto, social media, and much more. Previously, she was a writer and editor at MUO. </span></span></span></p><p><time datetime="2023-09-08T17:52:39.793Z"> <!-- -->Sep 8, 2023, 5:52 PM UTC</time><span>|</span></p><div><h2>Share this story</h2></div></div></div><div><figure><span><span></span><img alt="A photo showing the TurboTax logo on a laptop" sizes="(max-width: 768px) calc(100vw - 100px), (max-width: 1180px) 700px, 600px" srcset="https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/16x11/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 16w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/32x21/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 32w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/48x32/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 48w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/64x43/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 64w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/96x64/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 96w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/128x85/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 128w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/256x171/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 256w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/376x251/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 376w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/384x256/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 384w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/415x277/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 415w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/480x320/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 480w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/540x360/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 540w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/640x427/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 640w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/750x500/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 750w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/828x552/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 828w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1080x720/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1080w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1200x800/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1200w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1440x960/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1440w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/1920x1280/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 1920w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2048x1365/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 2048w, https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2400x1600/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg 2400w" src="https://duet-cdn.vox-cdn.com/thumbor/0x0:4000x2670/2400x1600/filters:focal(1953x736:1954x737):format(webp)/cdn.vox-cdn.com/uploads/chorus_asset/file/24906420/1235036842.jpg" decoding="async" data-nimg="responsive"></span><p><cite>Image: Getty</cite></p></figure></div></div><div><div><p>Intuit, the parent company of TurboTax, is still facing blowback over claims it tricked people into using its “free” tax filing service that wasn’t actually free. In <a href="https://www.ftc.gov/news-events/news/press-releases/2023/09/administrative-law-judge-issues-initial-decision-ftcs-case-against-intuit-inc?utm_campaign=administrative_law_judge_&amp;utm_content=1694185883&amp;utm_medium=social&amp;utm_source=twitter">a ruling on Friday</a>, the Federal Trade Commission’s chief administrative law judge (ALJ) ruled that Intuit “deceived consumers” and “engaged in deceptive advertising.”</p><div><p>The <a href="https://www.ftc.gov/system/files/ftc_gov/pdf/intuit_initial_decision_public_redacted_1.pdf">ruling includes several pages</a> of commercials and online ads where Intuit advertised its “Free Edition” software. While the name implies that the service is, well, <em>free</em>, people wound up having to pay to use it — <a href="https://www.theverge.com/2022/3/29/23002219/ftc-turbo-tax-irs-free-tax-prep-software-intuit-misleading">sparking a lawsuit from the FTC</a> and a <a href="https://www.theverge.com/2022/5/4/23057463/intuit-141-million-agreement-new-york-attorney-general-turbotax-free">$141 million payout to affected users</a>. Meanwhile, Intuit’s <em>actually</em> no-cost Free File version, which it launched in partnership with the IRS, <a href="https://www.theverge.com/2019/4/26/18518211/turbotax-free-tax-filing-hidden-google-search-results">remained exceedingly difficult to find</a>. In 2021, Intuit <a href="https://www.theverge.com/2021/7/17/22581587/turbotax-parent-company-intuit-opts-out-irs-free-file-program">exited the program</a> after the <a href="https://www.theverge.com/2020/1/1/21045779/irs-turbotax-free-file-h-r-block-tax-preparation-new-rules">IRS stopped letting companies</a> hide their free filing services from search engines.</p></div><p>The FTC’s ALJ determined that there is a “cognizant danger of a recurring violation” by Intuit and issued a cease-and-desist order that prohibits the company from “engaging in deceptive practices in the future.” The ruling prevents Intuit from representing a product as free unless it actually <em>is</em> free for everyone to use and “clearly and conspicuously discloses any terms that would limit the offer.”</p><p><a href="https://www.intuit.com/blog/news-social/intuit-responds-to-u-s-federal-trade-commissions-anticipated-decision-and-reaffirms-its-commitment-to-free-tax-preparation/">In a response provided</a> in advance of the FTC’s ruling, Intuit calls the agency’s investigation process “flawed and highly questionable,” noting “Intuit already adheres to most of the advertising practices in the FTC’s erroneous decision.” The company adds that it has “been clear, fair, and transparent” with customers and remains “committed to free tax preparation.”</p><div><p>Hopefully, we won’t need to rely on potentially deceptive third parties to file our taxes online going forward. The IRS is working on a government-backed <a href="https://www.theverge.com/2023/5/17/23727414/irs-free-direct-tax-filing-test">free filing service that it will pilot during the 2024 tax season</a>.</p></div></div><div><p>Most Popular</p><ol><li><a href="https://www.theverge.com/2023/9/7/23862311/google-chrome-redesign-material-you-web-store"><h2>Chrome is about to look a bit different</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/7/23863192/google-pixel-8-pro-watch-2"><h2>Google teaser previews Pixel Watch 2 and both Pixel 8 phones</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/7/23863258/bmw-cancel-heated-seat-subscription-microtransaction"><h2>BMW drops plan to charge a monthly fee for heated seats</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/8/23864172/tesla-next-generation-car-cybertruck-design-price"><h2>Tesla’s $25,000 ‘next-generation car’ will have a Cybertruck design</h2></a><hr></li><li><a href="https://www.theverge.com/2023/9/8/23864150/ios-16-6-1-iphone-security-vulnerability-0-day-exploit-patch-update"><h2>iOS 16.6.1 fixes a big iPhone security vulnerability used to install Pegasus spyware</h2></a><hr></li></ol></div></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cerabyte: ceramic storage poised to usher in 'yottabyte era' (135 pts)]]></title>
            <link>https://www.tomshardware.com/news/cerabyte-ceramic-storage-poised-to-usher-in-yottabyte-era</link>
            <guid>37436092</guid>
            <pubDate>Fri, 08 Sep 2023 16:49:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/news/cerabyte-ceramic-storage-poised-to-usher-in-yottabyte-era">https://www.tomshardware.com/news/cerabyte-ceramic-storage-poised-to-usher-in-yottabyte-era</a>, See on <a href="https://news.ycombinator.com/item?id=37436092">Hacker News</a></p>
<div id="readability-page-1" class="page"><article aria-label="article" data-id="2jPTmxydQnRPHod9Y5BSVB">
<header>
<nav aria-label="Breadcrumbs">
<ol>
<li>
<a href="https://www.tomshardware.com/news" aria-label="Return to News">News</a>
</li>
</ol>
</nav>


</header>
<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg"><source type="image/jpeg" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1920-80.jpg 1920w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg"><img src="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-320-80.jpg" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" srcset="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh-1920-80.jpg 1920w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/pjGqJvuVAVkcBnXC3Q9rFh.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Cerabyte)</span>
</figcaption>
</div>

<div id="article-body">
<p>A technology startup has made startling claims for its innovative ceramic nanolayer-based storage. <a href="https://www.cerabyte.com/" data-url="https://www.cerabyte.com/">Cerabyte</a> asserts it will disrupt the $500B storage market by reducing data center storage TCO by 75%. More specifically, its roadmaps sketch out CeraMemory cartridges (2025-30) storing between 10 PB and 100 PB, and its CeraTape (2030-35) with up to 1 EB capacity per tape. According to the startup, these new formats are poised to address density, performance, and access paradigms, as well as the cost and sustainability demands of datacenters.</p><div data-nosnippet=""><p><iframe data-lazy-priority="high" data-lazy-src="https://www.youtube.com/embed/n7YHiKJdKhg" allowfullscreen=""></iframe></p></div><p>Cerabyte, a German storage startup, has published <a href="https://storagedeveloper.org/events/agenda/session/527" data-url="https://storagedeveloper.org/events/agenda/session/527">an abstract</a> from its upcoming presentation at the 2023 Storage Developer Conference in Fremont, California (h/t <a href="https://blocksandfiles.com/2023/09/04/cerabytes-last-for-ever-ceramic-nano-memory-storage-and-yottabyte-era-roadmap/" data-url="https://blocksandfiles.com/2023/09/04/cerabytes-last-for-ever-ceramic-nano-memory-storage-and-yottabyte-era-roadmap/">Blocks and Files</a>). Here, for the first time, it will detail how it will introduce CeraMemory with inorganic nanolayers, using 50-100 atoms thick ceramics to store information. Scaling ceramic data storage technology from 100nm to 3nm bit sizes will scale the corresponding data density from GB/cm2 to units measured in TB/cm2, reckons Cerabyte.</p><p>To record data to CeraMemory, Cerabyte says that a laser beam or particle beam structures data matrices similar to QR codes. Data reading can be done with equipment using high-resolution microscopic imaging techniques or electron beam microscopy. Initially, there will be no need for particle beams/electron microscopy, as those technologies will only be required later in the roadmaps at the highest densities.</p><p>So, capacities look impressive, but what about performance? In its abstract from the 'Ceramic Nano Memory – Data Storage for the Yottabyte Era' presentation, Cerabyte says its technology can read and write data at GB/s class speeds. These read/write technologies are "low power," according to the storage startup.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1200-80.jpg.webp 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg"><source type="image/jpeg" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg"><img src="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh.jpg" srcset="https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/BqpDSZBu5SJdHyjdU4bWSh-1200-80.jpg 1200w"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Cerabyte)</span></figcaption></figure><p>Another seemingly excellent inherent property of ceramic storage is the touted media durability and longevity. On its website, Cerabyte says that its media can last "5,000+ years" and that the data stored can ensure through "a wide temperature range of -273°C (-460°F) to 300°C (570°F)." We have used quotes here, as those are extraordinary figures. Additionally, it is boasted that CeraMemory is resistant to corrosive, acidic, radioactive environments and EMP disruption.</p><div data-nosnippet=""><p><iframe data-lazy-priority="low" data-lazy-src="https://www.youtube.com/embed/6CJs4-qJmfQ" allowfullscreen=""></iframe></p></div><p>Blocks and Files has some background information about the two road-mapped storage formats mentioned above. The first Cerabyte solution, CeraMemory, will come as a cartridge that contains sheets with ceramic coatings. If you looked closely at the data stored, it would look like "quasi-punched cards in nano-scale." That might be another way of describing a tiny QR code.</p><p>Meanwhile, CeraTape (2030-35) gives away the storage medium type in its name. These data tapes will have a 5 µm thick substrate with a 10 nm thick ceramic coating. The arrival of these multi-layered tapes will usher in TB/cm2 scale densities.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1200-80.jpg.webp 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg"><source type="image/jpeg" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg"><img src="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg" alt="Cerabyte ceramic storage tech" onerror="if(this.src &amp;&amp; this.src.indexOf('missing-image.svg') !== -1){return true;};this.parentNode.replaceChild(window.missingImage(),this)" data-normal="https://vanilla.futurecdn.net/tomshardware/media/img/missing-image.svg" data-srcset="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1200-80.jpg 1200w" data-sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh.jpg" srcset="https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/nc9CPacaKK579X23zcBQMh-1200-80.jpg 1200w"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Cerabyte)</span></figcaption></figure><p>Cerabyte says it works closely with major players in related tech/manufacturing segments. Its presentation at the 2023 Storage Developer Conference, which takes place between September 18 and 21, looks set to be one to watch.</p>
</div>
<div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent"><section><p>Join the experts who read Tom's Hardware for the inside track on enthusiast PC tech news — and have for over 25 years. We'll send breaking news and in-depth reviews of CPUs, GPUs, AI, maker hardware and more straight to your inbox.</p></section></div>
<div id="slice-container-authorBio"><p>Mark Tyson is a Freelance News Writer at Tom's Hardware US. He enjoys covering the full breadth of PC tech; from business and semiconductor design to products approaching the edge of reason.</p></div>



<!-- Drop in a standard article here maybe? -->


</section>




<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>

</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FAA closes SpaceX Starship mishap investigation (152 pts)]]></title>
            <link>https://apnews.com/article/spacex-starship-launch-accident-faa-a8d6cec63de579af4b6d5f040e51825d</link>
            <guid>37435656</guid>
            <pubDate>Fri, 08 Sep 2023 16:19:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apnews.com/article/spacex-starship-launch-accident-faa-a8d6cec63de579af4b6d5f040e51825d">https://apnews.com/article/spacex-starship-launch-accident-faa-a8d6cec63de579af4b6d5f040e51825d</a>, See on <a href="https://news.ycombinator.com/item?id=37435656">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-module="" data-padding="none">
                    
                    
                        
                            

    <div><figure>
    

    
        <picture data-crop="medium-3x2">
    
        <source media="(min-width: 1280px)" type="image/webp" width="980" height="653" srcset="https://dims.apnews.com/dims4/default/4034ecb/2147483647/strip/true/crop/6600x4398+0+2/resize/980x653!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 1280px)" width="980" height="653" srcset="https://dims.apnews.com/dims4/default/391d036/2147483647/strip/true/crop/6600x4398+0+2/resize/980x653!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 1024px)" type="image/webp" width="820" height="546" srcset="https://dims.apnews.com/dims4/default/dc53b5c/2147483647/strip/true/crop/6600x4395+0+3/resize/820x546!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 1024px)" width="820" height="546" srcset="https://dims.apnews.com/dims4/default/06a468e/2147483647/strip/true/crop/6600x4395+0+3/resize/820x546!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 768px)" type="image/webp" width="1024" height="683" srcset="https://dims.apnews.com/dims4/default/2122adf/2147483647/strip/true/crop/6598x4401+1+0/resize/1024x683!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 768px)" width="1024" height="683" srcset="https://dims.apnews.com/dims4/default/f09d6ac/2147483647/strip/true/crop/6598x4401+1+0/resize/1024x683!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x" loading="lazy">

    

    
        <source media="(min-width: 600px)" type="image/webp" width="767" height="511" srcset="https://dims.apnews.com/dims4/default/9e9d57a/2147483647/strip/true/crop/6600x4397+0+2/resize/767x511!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/7b753e5/2147483647/strip/true/crop/6600x4397+0+2/resize/1534x1022!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source media="(min-width: 600px)" width="767" height="511" srcset="https://dims.apnews.com/dims4/default/c7fe7b1/2147483647/strip/true/crop/6600x4397+0+2/resize/767x511!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/82b170e/2147483647/strip/true/crop/6600x4397+0+2/resize/1534x1022!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source media="(max-width: 599px)" type="image/webp" width="567" height="378" srcset="https://dims.apnews.com/dims4/default/16e053e/2147483647/strip/true/crop/6600x4400+0+1/resize/567x378!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/54746bd/2147483647/strip/true/crop/6600x4400+0+1/resize/1134x756!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source media="(max-width: 599px)" width="567" height="378" srcset="https://dims.apnews.com/dims4/default/732e673/2147483647/strip/true/crop/6600x4400+0+1/resize/567x378!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/c19939d/2147483647/strip/true/crop/6600x4400+0+1/resize/1134x756!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source type="image/webp" width="320" height="213" srcset="https://dims.apnews.com/dims4/default/b084902/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/c413c5f/2147483647/strip/true/crop/6600x4393+0+4/resize/640x426!/format/webp/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    
        <source width="320" height="213" srcset="https://dims.apnews.com/dims4/default/2f11a83/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/99b5f9e/2147483647/strip/true/crop/6600x4393+0+4/resize/640x426!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" loading="lazy">

    

    <img alt="FILE - SpaceX's Starship turns after its launch from Starbase in Boca Chica, Texas, Thursday, April 20, 2023. The Federal Aviation Administration has closed its accident investigation into SpaceX's failed debut of its Starship mega rocket. The FAA said Friday, Sept. 8, that multiple problems led to the launch explosion on April 20 over the Gulf of Mexico, off the South Texas coast. (AP Photo/Eric Gay, File)" srcset="https://dims.apnews.com/dims4/default/2f11a83/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 1x,https://dims.apnews.com/dims4/default/99b5f9e/2147483647/strip/true/crop/6600x4393+0+4/resize/640x426!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5 2x" width="320" height="213" src="https://dims.apnews.com/dims4/default/2f11a83/2147483647/strip/true/crop/6600x4393+0+4/resize/320x213!/quality/90/?url=https%3A%2F%2Fassets.apnews.com%2F12%2F93%2F56be1ec94a28790b5ccf469a7ca6%2F15b85e64340e4e0a8d6d983e7b1bb3b5" loading="lazy">
</picture>

    

    
        <div>
            <div><figcaption><p>FILE - SpaceX’s Starship turns after its launch from Starbase in Boca Chica, Texas, Thursday, April 20, 2023. The Federal Aviation Administration has closed its accident investigation into SpaceX’s failed debut of its Starship mega rocket. The FAA said Friday, Sept. 8, that multiple problems led to the launch explosion on April 20 over the Gulf of Mexico, off the South Texas coast. (AP Photo/Eric Gay, File)</p></figcaption></div>
            <bsp-lead-superlead-ui></bsp-lead-superlead-ui>
        </div>
    
</figure>
</div>



                        
                    

                    <div>
                                        <p>CAPE CANAVERAL, Fla. (AP) — SpaceX must take a series of steps before it can launch its mega rocket again after its <span><a href="https://apnews.com/article/spacex-starship-launch-elon-musk-d9989401e2e07cdfc9753f352e44f6e2" target="_blank" rel="noopener">debut ended in an explosion</a></span>, federal regulators said Friday. </p><p>The Federal Aviation Administration said it closed its investigation into <span><a href="https://apnews.com/article/spacex-musk-starship-launch-test-flight-11de145e989e0534b6399640bc437b8e" target="_blank" rel="noopener">SpaceX’s failed debut of Starship</a></span>, the world’s biggest rocket. The agency is requiring SpaceX to take 63 corrective actions and to apply for a modified FAA license before launching again. </p><p>FAA official said multiple problems led to the April launch explosion, which sent pieces of concrete and metal hurtling for thousands of feet (meters) and created a plume of pulverized concrete that spread for miles (kilometers) around.</p>
    

<p>SpaceX founder Elon Musk said in the accident’s aftermath that he improved the 394-foot (120-meter) rocket and strengthened the launch pad. A new Starship is on the redesigned pad, awaiting liftoff. It will fly empty, as before.</p><p>During the initial test flight, the rocketship had to be destroyed after it tumbled out of control shortly after liftoff from Boca Chica Beach. The wreckage crashed into the Gulf of Mexico. SpaceX said fuel leaks during ascent caused fires to erupt at the tail of the rocket, severing connection with the main flight computer and leading to a loss of control.</p><p>That flight “provided numerous lessons learned,” the company said in a statement. </p>

<p>NASA wants to use Starship to land astronauts back on the moon in another few years. Musk’s ultimate goal is to build a fleet of Starships to carry people and supplies to Mars. </p><h2>___</h2><p>The Associated Press Health and Science Department receives support from the Howard Hughes Medical Institute’s Science and Educational Media Group. The AP is solely responsible for all content.</p>
                                    </div>

                    


                    
    



                    
    



                    
    


                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Async Rust Is A Bad Language (608 pts)]]></title>
            <link>https://bitbashing.io/async-rust.html</link>
            <guid>37435515</guid>
            <pubDate>Fri, 08 Sep 2023 16:10:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bitbashing.io/async-rust.html">https://bitbashing.io/async-rust.html</a>, See on <a href="https://news.ycombinator.com/item?id=37435515">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
    <p>But to get at whatever the hell I mean by that,
we need to talk about why <code>async</code> Rust exists in the first place.
Let’s talk about:</p>

<h2 id="modern-concurrency-theyre-green-theyre-mean--they-ate-my-machine">Modern Concurrency: They’re Green, They’re Mean, &amp; They Ate My Machine</h2>

<p><img src="https://assets.bitbashing.io/images/gofast.png" alt="gotta go fast"></p>

<!-- ## Why are we here? -->

<p>Suppose we want our code to go fast. We have two big problems to solve:</p>

<ol>
  <li>
    <p>We want to use the whole computer. Code runs on CPUs, and in 2023,
even my phone has eight of the damn things. If I want to use more than
12% of the machine, I need several cores.</p>
  </li>
  <li>
    <p>We want to keep working while we wait for slow things to complete
instead of just twiddling our thumbs.
Sending a message over the Internet, or even opening a file<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" rel="footnote">1</a></sup>
takes eternities in computer time—we could literally do
<em>millions</em> of other things meanwhile.</p>
  </li>
</ol>

<p>And so, we turn to our friends <em>parallelism and concurrency</em>.
It’s a favorite hobby of CS nerds to quibble over distinctions between the two,
so to oversimplify:</p>

<p><strong>Parallelism</strong> is about running code <em>in parallel</em> on several CPUs.</p>

<p><strong>Concurrency</strong> is about breaking a problem into separate, independent parts.</p>

<p>These <a href="https://www.youtube.com/watch?v=oV9rvDllKEg">are not the same thing</a>—single-core
machines have been running code concurrently for half a century now—but they are related.
So much online <em>well akshually</em>-ing ignores how we often break programs
into concurrent pieces <em>so that</em> those pieces can run in parallel,
and interleave in ways that keep our cores crunching!
(If we didn’t care about performance, why would we bother?)</p>

<h3 id="how-do-i-concurrency">How do I concurrency?</h3>

<p>One of the simplest ways to build a concurrent system is to split code into multiple processes.
After all, the operating system is a lean, mean, concurrency machine,
conspiring with your hardware to make each process think it has the
whole box to itself.
And the OS’s scheduler gives us parallelism for free, running <em>time slices</em> of
any process that’s ready on an available CPU core.
Once upon a time this was
<a href="https://en.wikipedia.org/wiki/Common_Gateway_Interface"><em>the</em> way</a>,
and we still employ it today whenever we pipe shell commands together.</p>

<figure>
<img src="https://cube-drone.com/103.gif">
<figcaption>
All hail <a href="https://cube-drone.com/">CubeDrone</a>
</figcaption>
</figure>

<p>But this approach has its limitations. Inter-process communication is not cheap,
since most implementations copy data to OS memory and back.<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" rel="footnote">2</a></sup></p>

<h3 id="mutex-based-concurrency-considered-harmful-or-hoare-was-right">Mutex-Based Concurrency Considered Harmful, or, <em>Hoare Was Right</em></h3>

<blockquote>
  <p>Some people, when confronted with a problem, think, “I know, I’ll use threads,”
and then two they hav erpoblesms.<br>
– Ned Batchelder</p>
</blockquote>

<p>We can avoid these overheads using <em>threads</em>—processes that share the same memory.
Common wisdom <!-- ---ones you'll learn in any operating systems
course---tell --> teaches us to connect them with mysterious beasts,
like <em>mutexes</em>, <em>condition variables</em>, and <em>semaphores</em>. This is a dangerous game!
Simple mistakes will plague you with <em>race conditions</em>
and <em>deadlocks</em> and other terrible diseases that fill your code with bugs,
but only on Tuesdays when it’s raining and the temperature is is a multiple of three.
And god help you if you want to learn how this stuff actually works on modern
hardware.<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" rel="footnote">3</a></sup></p>

<p>There is Another Way.
In his 1978 paper, <em>Communicating Sequential Processes</em>, Tony Hoare
suggested connecting threads with queues, or <em>channels</em>,
which they can use to send each other messages.
This has many advantages:</p>

<ul>
  <li>
    <p>Threads enjoy process-like isolation from the rest of the program,
since they don’t share memory.
(Bonus points for memory-safe languages that make it hard to
accidentally scramble another thread!)</p>
  </li>
  <li>
    <p>Each thread has a very obvious set of inputs (the channels it receives from)
and outputs (the channels it sends to).
This is easy to reason about, and easy to debug!
Instrument the channels for powerful visibility into your system,
measuring each thread’s throughput.</p>
  </li>
  <li>
    <p>Channels <em>are the synchronization</em>.
If a channel is empty, the receiver waits until it’s not.
If a channel is full, the sender waits.
Threads never sleep while they have work to do,
and gracefully pause if they outpace the rest of the system.</p>
  </li>
</ul>

<p>After decades of mutex madness,
many modern languages heed Hoare’s advice and
provide channels in their standard library.
In Rust, we call them
<a href="https://doc.rust-lang.org/std/sync/mpsc/fn.sync_channel.html"><code>std::sync::mpsc::sync_channel</code></a>.</p>

<p>Most software can stop here, building concurrent systems with threads and channels.<sup id="fnref:4" role="doc-noteref"><a href="#fn:4" rel="footnote">4</a></sup>
Combine them with tools to parallelize CPU-intensive loops
(like Rust’s <a href="https://crates.io/crates/rayon">Rayon</a>
or Haskell’s <a href="https://hackage.haskell.org/package/parallel-3.2.2.0/docs/Control-Parallel-Strategies.html"><code>par</code></a>),
and you’ve got a powerful cocktail.</p>

<p>But…</p>

<h3 id="ludicrous-speed-go">Ludicrous Speed, go!</h3>

<p><img src="https://assets.bitbashing.io/images/ludicrous-speed.jpg" alt="going to plaid"></p>

<p>Some problems demand a <em>lot</em> of concurrency.
The canonical example, described by Dan Kagel as the
<a href="https://web.archive.org/web/19990508164301/http://www.kegel.com/c10k.html"><em>C10K problem</em></a>
back in 1999, is a web server connected to tens of thousands of concurrent users.
At this scale, threads won’t cut it—while they’re <em>pretty</em> cheap,<sup id="fnref:5" role="doc-noteref"><a href="#fn:5" rel="footnote">5</a></sup>
fire up a thread per connection and your computer will grind to a halt.</p>

<p>To solve this, some languages provide a concurrency model where:</p>

<ol>
  <li>
    <p>Tasks are created and managed in <em>userspace</em>,
i.e., without the operating system’s help.</p>
  </li>
  <li>
    <p>A <em>runtime</em> schedules these tasks onto a pool of OS threads,
usually sized so that each CPU core gets a thread, to maximize parallelism.</p>
  </li>
</ol>

<p>This scheme goes by many names—<em>green threads, lightweight threads,
lightweight processes, fibers, coroutines</em>, and more—complete with pedantic
nerds endlessly debating the subtle differences between them.</p>

<p>Rust comes at this problem with an “async/await” model,
seen previously in places like C# and Node.js.<sup id="fnref:6" role="doc-noteref"><a href="#fn:6" rel="footnote">6</a></sup>
Here, functions marked <code>async</code> don’t block, but immediately return
a <em>future</em> or <em>promise</em> that can be awaited to produce the result.</p>
<div><pre><code><span>fn</span> <span>foo</span><span>()</span> <span>-&gt;</span> <span>i32</span> <span>{</span> <span>/* returns an int when called */</span> <span>}</span>

<span>async</span> <span>fn</span> <span>bar</span><span>()</span> <span>-&gt;</span> <span>i32</span> <span>{</span> <span>/* returns a future we can .await to get an int */</span> <span>}</span>
</code></pre></div>

<h2 id="painawait"><code>pain.await</code></h2>

<p>On one hand, futures in Rust are exceedingly small and fast,
thanks to their <em>cooperatively scheduled, stackless</em> design.
But unlike other languages with userspace concurrency,
Rust tries to offer this abstraction while <em>also</em> promising the programmer
total low-level control.</p>

<p>There’s a fundamental tension between the two, and the poor <code>async</code> Rust programmer
is perpetually caught in the middle, torn between the language’s design goals
and the massively-concurrent world they’re trying to build.
Rust attempts to statically verify the lifetime of every object and reference
in your program, all at compile time.
Futures promise the opposite: that we can break code
<em>and the data it references</em> into thousands of little pieces,
runnable at any time, on any thread,
based on conditions we can only know once we’ve started!
A future that reads data from a client should only run when that client’s socket
has data to read, and no lifetime annotation will tells us when that might be.</p>

<h2 id="send-help">Send help</h2>

<p>Assuring the compiler that everything will be okay runs into the same challenges
you see when working with raw threads.
Data must either be marked <code>Send</code> and moved,
or passed through references with <code>'static</code> lifetimes.
Both are easier said than done.
Moving (at least without cloning)
is often a non-starter, since it’s common in <code>async</code> code to spawn many
tasks that share common state.
And references are a pain too—there’s no
<a href="https://doc.rust-lang.org/std/thread/fn.scope.html"><code>thread::scope</code></a> equivalent to help us
bound futures’ lifetimes to anything short of “forever”.</p>

<p>is out,</p>
<div><pre><code><span>async</span> <span>fn</span> <span>foo</span><span>(</span><span>&amp;</span><span>BIG_GLOBAL_STATIC_REF_OR_SIMILAR_HORROR</span><span>,</span> <span>sendable_chungus</span><span>.clone</span><span>())</span>
</code></pre></div>
<p>is in.</p>

<p>And unlike launching raw threads, where you might have to deal with these annoyances
in a handful of functions,
this happens <em>constantly</em> due to
<a href="https://journal.stuffwithstuff.com/2015/02/01/what-color-is-your-function/"><code>async</code>’s viral nature</a>.
Since any function that calls an <code>async</code> function must itself be <code>async</code>,<sup id="fnref:7" role="doc-noteref"><a href="#fn:7" rel="footnote">7</a></sup>
you need to solve this problem everywhere, all the time.</p>

<h2 id="just-arc-my-shit-up">Just Arc my shit up</h2>

<p>A seasoned Rust developer will respond by saying that Rust gives us simple tools
for dynamic lifetimes spanning multiple threads.
We call them “atomic reference counts”,
or <a href="https://doc.rust-lang.org/std/sync/struct.Arc.html"><code>Arc</code></a>.
While it’s true that they solve the immediate problem—borrows check and our
code compiles—they’re far from a silver bullet.
Used pervasively, <code>Arc</code> gives you the world’s worst garbage collector.
Like a GC, the lifetime of objects and the resources they represent
(memory, files, sockets) is unknowable.
But you take this loss without the wins you’d get from an actual GC!</p>

<p>Don’t buy the “GC is slow” FUD—the claim is a misunderstanding of
latency vs. throughput at best and a bizarre psyop at worst.
A modern, moving garbage collector gets you more allocation throughput,
less fragmentation, and means you don’t have to play Mickey Mouse games with
weak pointers to avoid cycle leaks.
You can even trick systems programmers into leveraging GC in one of the world’s
most important software projects by calling it
<a href="https://www.kernel.org/doc/html/next/RCU/whatisRCU.html">“deferred destruction”</a>.
More on that another day.</p>

<h2 id="other-random-nonsense">Other random nonsense</h2>

<ul>
  <li>
    <p>Because Rust coroutines are stackless, the compiler turns each one into
a state machine that advances to the next <code>.await</code>.<sup id="fnref:42" role="doc-noteref"><a href="#fn:42" rel="footnote">8</a></sup>
But this makes any recursive <code>async</code> function a recursively-defined type!
A user just trying to call a function from itself is met with
inscrutable errors until they manually box it or use a
<a href="https://crates.io/crates/async-recursion">crate</a> that does the same.</p>
  </li>
  <li>
    <p>There’s an important distinction between a <em>future</em>—which does nothing
until awaited—and a <a href="https://docs.rs/tokio/latest/tokio/task/fn.spawn.html"><code>task</code></a>,
which spawns work in the runtime’s thread pool… returning a future that
marks its completion.</p>
  </li>
  <li>
    <p>There’s nothing keeping you from calling blocking code inside a future,
and there’s nothing keeping that call from blocking the runtime thread it’s on.
You know, the entire thing we’re trying to avoid with all this <code>async</code> business.</p>
  </li>
</ul>

<h2 id="running-away">Running away</h2>

<p><img src="https://assets.bitbashing.io/images/run-away.jpg"></p>

<p>Mixed together, this all gives <code>async</code> Rust a much different flavor than
“normal” Rust. One with many more gotchas,
that is harder to understand and teach,
and that pushes users to either:</p>

<ul>
  <li>
    <p>Develop a deep understanding of how these abstractions actually work,<sup id="fnref:69" role="doc-noteref"><a href="#fn:69" rel="footnote">9</a></sup>
writing complicated code to handle them, or</p>
  </li>
  <li>
    <p>Sprinkle <code>Arc</code>, <code>Pin</code>, <code>'static</code>, and other sacred runes throughout their
code and hope for the best.</p>
  </li>
</ul>

<p>Rust proponents (I’d consider myself one!) might call these criticisms overblown.
But I’ve seen whole teams of experienced developers,
trying to use Rust for some new project, mired in this minutia.
To whatever challenges teaching Rust has, <code>async</code> adds a whole new set.</p>

<p>The degree to which these problems <em>just aren’t a thing</em> in other languages
can’t be overstated either.
In Haskell or Go, “async code” is just normal code.
You might say this isn’t a fair comparison—after all,
those languages hide the difference between blocking and non-blocking
code behind fat runtimes, and lifetimes are handwaved with garbage collection.
But that’s exactly the point!
These are pure wins when we’re doing this sort of programming.</p>

<p>Maybe Rust isn’t a good tool for massively concurrent, userspace software.
We can save it for the 99% of our projects that
<a href="#mutex-based-concurrency-considered-harmful-or-hoare-was-right">don’t have to be</a>.</p>

<hr>



  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zinc-air batteries as an alternative to lithium-ion: study (129 pts)]]></title>
            <link>https://www.ecu.edu.au/newsroom/articles/research/move-over-lithium-ion-zinc-air-batteries-a-cheaper-and-safer-alternative</link>
            <guid>37435215</guid>
            <pubDate>Fri, 08 Sep 2023 15:49:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ecu.edu.au/newsroom/articles/research/move-over-lithium-ion-zinc-air-batteries-a-cheaper-and-safer-alternative">https://www.ecu.edu.au/newsroom/articles/research/move-over-lithium-ion-zinc-air-batteries-a-cheaper-and-safer-alternative</a>, See on <a href="https://news.ycombinator.com/item?id=37435215">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="mainContent">

        <!-- Hero Section //-->
        
        
        

        
        
        <!-- Page Body Content //-->
        <article aria-labelledby="articleHeading">

            
            

            <div id="content_container_1045624">
<p>Zinc-air batteries have emerged as a better alternative to lithium in a recent Edith Cowan University (ECU) <a href="https://onlinelibrary.wiley.com/doi/10.1002/eom2.12394">study</a> into the advancement of sustainable battery systems.</p><p>ECU's Dr Muhammad Rizwan Azhar led the project which discovered lithium-ion batteries, although a popular choice for electric vehicles around the world, face limitations related to cost, finite resources, and safety concerns.</p><p>"Rechargeable zinc-air batteries (ZABs) are becoming more appealing because of their low cost, environmental friendliness, high theoretical energy density, and inherent safety," Dr Muhammad Rizwan Azhar said.</p><p>"With the emergence of next-generation long-range vehicles and electric aircraft in the market, there is an increasing need for safer, more cost-effective, and high-performance battery systems that can surpass the capabilities of lithium-ion batteries."</p><h2>Zinc-air: An explainer</h2><p>A zinc–air battery consists of a zinc negative electrode and an air positive electrode.</p><p>The major disadvantage of these has been the limited power output, due to poor performance of air electrodes and short lifespan – until now.</p><p>ECU's breakthrough has enabled engineers to use a combination of new materials, such as carbon, cheaper iron and cobalt based minerals to redesign zinc-air batteries.</p><p>"The new design has been so efficient it suppressed the internal resistance of batteries, and their voltage was close to the theoretical voltage which resulted in a high peak power density and ultra-long stability,"&nbsp;&nbsp;&nbsp;Dr Azhar said.</p><p>"In addition to revolutionising the energy storage industry, this breakthrough contributes significantly to building a sustainable society, reducing our reliance on fossil fuels, and mitigating environmental impacts.”</p><p>"By using natural resources, such as zinc from Australia and air, this further enhances the cost-effectiveness and viability of these innovative zinc-air batteries for the future."</p><h2>Viable and reliable</h2><p>Dr Azhar said while renewable resources such as solar, wind, and hydro energy play a critical role in the future of green energy, they are not completely reliable solutions as they are intermittent sources of energy.</p><p>"Due to the abundance of zinc available in countries such as Australia, and the ubiquity of air, this becomes a highly viable and reliable energy storage solution," Dr Azhar explained.</p><p>ECU's re-design of zinc-air batteries brings Australia closer to achieving the UN sustainable development goals and targets set by the Paris Agreement, which was established in late 2015 to emphasise the need for sustainable energy resources to limit climate change.</p>
</div>

            

        </article>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Procreate Dreams (417 pts)]]></title>
            <link>https://procreate.com/dreams</link>
            <guid>37434918</guid>
            <pubDate>Fri, 08 Sep 2023 15:32:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://procreate.com/dreams">https://procreate.com/dreams</a>, See on <a href="https://news.ycombinator.com/item?id=37434918">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page-content"><main role="main" aria-label="Page Content"><div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/hero-still_en.c0a8d91.jpg"></p> </div> <div><h2>Available November 22</h2> <p>Procreate Dreams</p> <svg aria-label="Procreate Dreams™" width="266" height="25" viewBox="0 0 266 25" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_2590_10490)"><path d="M10.4219 0H0V23.8937H5.36108V14.9824H10.4267C15.478 14.9824 18.7566 11.7372 18.7566 7.43879C18.7566 3.1404 15.4733 0 10.4219 0ZM9.60228 10.9557H5.35631V4.02676H9.60228C12.0612 4.02676 13.4956 5.59458 13.4956 7.43879C13.4956 9.283 12.0612 10.9557 9.60228 10.9557ZM41.1016 6.10925C35.6071 6.10925 32.0902 9.83102 32.0902 15.1873C32.0902 20.5436 35.6071 24.3369 41.1016 24.3369C46.5961 24.3369 50.1463 20.6151 50.1463 15.1873C50.1463 9.75954 46.6295 6.10925 41.1016 6.10925ZM41.1016 20.4817C38.371 20.4817 36.7984 18.261 36.7984 15.1921C36.7984 12.1232 38.3662 9.96922 41.1016 9.96922C43.8369 9.96922 45.4381 12.1899 45.4381 15.1921C45.4381 18.1943 43.8703 20.4817 41.1016 20.4817ZM60.4205 21.8827C56.9037 21.8827 54.8545 19.1188 54.8545 15.3637C54.8545 11.6085 56.9037 8.84459 60.4205 8.84459C63.2893 8.84459 64.8238 10.5172 65.3003 12.7379H68.1691C67.5877 9.12098 64.8238 6.45712 60.4205 6.45712C55.3025 6.45712 52.124 10.2456 52.124 15.3684C52.124 20.4912 55.2977 24.2797 60.4205 24.2797C65.0287 24.2797 67.826 21.4443 68.2739 17.5891H65.4766C65.0668 20.048 63.4609 21.8875 60.4253 21.8875L60.4205 21.8827ZM88.8986 6.45235C83.9473 6.45235 80.602 10.2075 80.602 15.4637C80.602 20.72 83.709 24.2702 88.8271 24.2702C92.6823 24.2702 95.5511 22.0876 96.5089 18.4326H93.4019C92.5822 20.8915 90.6713 21.878 88.7604 21.878C85.7915 21.878 83.7424 19.5239 83.5375 16.0737V15.9355H96.6471V15.3541C96.6471 10.2361 93.8498 6.44282 88.8986 6.44282V6.45235ZM83.609 13.8244C84.1189 10.7507 85.9297 8.83982 88.8652 8.83982C91.9723 8.83982 93.745 10.9557 93.8165 13.8244H83.609ZM106.383 6.45235C102.251 6.45235 99.6255 8.67303 99.5206 12.2233H102.318C102.456 10.1408 104.024 8.84459 106.378 8.84459C108.87 8.84459 110.405 10.3457 110.405 12.7713V13.5242H108.051C101.189 13.5242 98.7677 15.9498 98.7677 19.1903C98.7677 22.1925 100.988 24.07 104.334 24.07C107.441 24.07 109.523 22.4975 110.343 21.2013H110.41V23.8985H113.14V12.7713C113.14 8.87794 110.548 6.45712 106.383 6.45712V6.45235ZM110.41 17.3079C110.41 19.662 107.951 21.816 104.948 21.816C102.833 21.816 101.498 20.8248 101.498 19.1188C101.498 17.2079 102.999 15.7068 108.051 15.7068H110.405V17.3127L110.41 17.3079ZM136.028 6.45235C131.077 6.45235 127.732 10.2075 127.732 15.4637C127.732 20.72 130.839 24.2702 135.957 24.2702C139.812 24.2702 142.681 22.0876 143.639 18.4326H140.532C139.712 20.8915 137.801 21.878 135.89 21.878C132.921 21.878 130.872 19.5239 130.667 16.0737V15.9355H143.777V15.3541C143.777 10.2361 140.98 6.44282 136.028 6.44282V6.45235ZM130.739 13.8244C131.249 10.7507 133.06 8.83982 135.995 8.83982C139.102 8.83982 140.875 10.9557 140.946 13.8244H130.739ZM73.7112 10.989V6.82882H70.9139V23.8985H73.7112V16.5598C73.7112 11.8754 75.8604 9.76907 80.1731 9.80243V6.76211C77.1852 7.0385 74.9026 8.2918 73.7112 10.9938V10.989ZM25.2471 10.9223V6.55243H20.434V23.8937H25.2471V17.3747C25.2471 13.1668 26.853 11.1606 31.3659 11.2845V6.44759C28.297 6.73351 26.2335 8.05353 25.2471 10.9223ZM120.87 1.36767H118.072V5.75184C118.072 6.35228 117.586 6.83835 116.986 6.83835H115.976C115.856 6.83835 115.728 6.83835 115.59 6.83835H114.484V9.22105H118.068V18.2658C118.068 21.8827 120.493 24.1368 124.315 24.1368C125.149 24.1368 125.916 24.0129 126.593 23.7889V21.3061C125.764 21.592 124.987 21.6778 124.315 21.6778C122.061 21.6778 120.87 20.4817 120.87 18.2658V9.22105H127.117V6.83359H120.87V1.36767Z" fill="white"></path> <path d="M190.03 6.61929C185.298 6.61929 182.086 10.3697 182.086 15.4782C182.086 20.5867 185.165 24.2703 190.063 24.2703C193.78 24.2703 196.587 22.1402 197.469 18.5566H195.744C194.967 21.4302 192.703 22.8836 190.03 22.8836C186.28 22.8836 183.811 20.0768 183.706 15.7832V15.6116H197.636V15.2733C197.602 10.2029 194.729 6.61929 190.03 6.61929ZM183.74 14.3964C184.111 10.6079 186.442 7.97266 190.03 7.97266C193.618 7.97266 195.949 10.5746 196.049 14.3964H183.744H183.74ZM207.438 6.61929C203.583 6.61929 201.014 8.57787 200.776 12.1281H202.329C202.601 9.42135 204.56 7.9679 207.433 7.9679C210.307 7.9679 212.303 9.72633 212.303 12.5665V14.02H208.787C202.43 14.02 200.099 16.3169 200.099 19.5669C200.099 22.307 202.296 24.1655 205.508 24.1655C206.742 24.1655 207.805 23.9558 208.706 23.5984C208.729 23.5889 208.753 23.5841 208.777 23.5746C208.806 23.5651 208.83 23.5508 208.858 23.5365C209.03 23.465 209.196 23.384 209.354 23.303C209.416 23.2696 209.482 23.241 209.544 23.2077C209.554 23.2029 209.568 23.1934 209.578 23.1886C210.221 22.836 210.817 22.3928 211.36 21.859C211.722 21.5016 212.027 21.1061 212.303 20.6915V23.8986H213.824V12.5713C213.824 8.92098 211.222 6.61929 207.433 6.61929H207.438ZM212.308 17.3033C212.141 20.6153 209.535 22.8502 205.818 22.8502C203.316 22.8502 201.624 21.5302 201.624 19.5383C201.624 17.0365 203.449 15.278 208.791 15.278H212.308V17.3081V17.3033ZM236.736 6.59546C234.105 6.59546 232.008 8.06797 230.936 10.6556C230.198 8.07274 228.148 6.59546 225.275 6.59546C222.725 6.59546 220.714 7.97266 219.685 10.3887V7.00052H218.184V23.8939H219.752V14.9683C219.795 11.6134 221.22 8.02508 225.07 8.02508C228.106 8.02508 229.712 9.86453 229.712 13.3433V23.8891H231.279V14.9635C231.303 11.6087 232.709 8.02032 236.597 8.02032C239.657 8.02032 241.206 9.80734 241.206 13.3385V23.8843H242.778V13.2003C242.778 8.99723 240.577 6.58117 236.736 6.58117V6.59546ZM252.986 14.5299C249.774 13.7197 248.015 13.4481 248.015 11.2179C248.015 8.9877 250.179 7.93931 252.447 7.93931C255.302 7.93931 257.103 9.2212 257.522 11.9851H259.019C258.533 8.36819 256.217 6.61929 252.481 6.61929C249.474 6.61929 246.495 7.76775 246.495 11.318C246.495 14.4965 248.897 14.9016 252.681 15.8499C256.098 16.66 257.718 17.0984 257.718 19.3334C257.718 21.9019 255.554 22.917 252.952 22.917C249.726 22.917 247.72 21.2729 247.401 18.2278H245.871C246.228 22.0592 248.749 24.2656 252.919 24.2656C256.536 24.2656 259.243 22.6787 259.243 19.2619C259.243 16.0834 256.841 15.4734 252.986 14.5299ZM157.358 0.224121H150.353V23.8986H157.192C164.707 23.8986 168.929 19.3763 168.929 12.0614C168.929 4.74649 164.74 0.224121 157.358 0.224121ZM157.192 22.3975H152.021V1.72522H157.358C163.682 1.72522 167.161 5.39458 167.161 12.0614C167.161 18.7282 163.525 22.3975 157.192 22.3975ZM176.31 8.24906C175.081 9.2212 174.218 10.5746 173.718 12.2997V6.97193H172.298V23.8986H173.756V16.8697C173.756 15.116 174.061 13.5768 174.676 12.252C175.291 10.9272 176.12 9.98843 177.163 9.28315C178.207 8.57787 179.356 8.22523 180.609 8.22523H181.376V6.78608H180.571C178.96 6.78608 177.535 7.27215 176.306 8.24429L176.31 8.24906Z" fill="#F7235B"></path> <path d="M260.31 4.0219H259.185V3.59302H261.883V4.0219H260.753V6.9288H260.31V4.0219ZM262.536 3.59302H263.065L264.256 6.39984L265.447 3.59302H266V6.9288H265.552V4.40314L264.485 6.9288H264.027L262.974 4.45556V6.9288H262.531V3.59302H262.536Z" fill="#F7235B"></path></g> <defs><clipPath id="clip0_2590_10490"><rect width="266" height="25" fill="white"></rect></clipPath></defs></svg> <p>Procreate Dreams is an all-new animation app packed with powerful tools that anyone can use. Create engaging hand-drawn animations, motion graphics and enhance them with photos, videos&nbsp;and&nbsp;sound. </p> <!----></div></div> <!----> <!----> <div><p>Procreate Dreams <span>has everything you need to create rich 2D animations, expressive videos, and breathtaking stories.</span></p></div> <div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/painting_en.eb98cb8.jpg" alt="" height="1300" width="1734"></p></div> <div><h2>Draw &amp; paint
                            </h2> <p>All-new drawing experience.</p> <p>Bring gorgeous texture to your animations with all your favorite Procreate brushes and more resolution than ever before. Flick the timeline away to make more&nbsp;room&nbsp;to&nbsp;draw.</p></div></div> <section><div><h2><span><img src="https://procreate-assets-cdn.procreate.art/img/performing.28c91e2.png" width="16" height="16"></span>Performing
                </h2> <p>Now anyone can animate, <span>record motion or effects through touch and instantly respond to the movie as&nbsp;it&nbsp;plays.</span></p></div> <div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/performing_en.29f6a7d.jpg" alt="" height="1300" width="1734"></p></div> <p><img src="https://procreate-assets-cdn.procreate.art/img/performing-overlay.e168a14.png" alt=""></p></div></section> <div><h2>
                    Multi-touch Timeline
                </h2> <p>A revolutionary timeline <span>made for animation, with fluid gestures that keep you focused on&nbsp;creating.</span></p></div> <div><div><h2>
                                Audio &amp; video
                            </h2> <p>Edit video and enrich with&nbsp;sound.</p> <p>Bring your animations to life with dramatic voice overs, and atmospheric music and sound&nbsp;effects.</p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/audio-landscape_en.979fb7f.jpg" alt="" width="1300" height="1734"></p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/audio-portrait_en.40ff00f.jpg" alt="" width="1734" height="1300"></p></div> <div><h3>High-resolution video</h3> <p>Perform lightning-fast edits as you work with gorgeous 4K ProRes footage.</p></div></div> <div><div><h2>
                    Stage
                </h2> <p>Set the scene.</p> <p>Create massive sets for characters to come to life, all in a single project. Draw beyond the Stage or keep elements Backstage until the perfect moment. Focus in on the details with simple pinch gestures to Zoom, Pan and Rotate around&nbsp;the&nbsp;stage.</p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/stage_bg.20e62cb.jpg" alt=""></p> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/stage_en.a35a85f.jpg" alt="" width="1734" height="1300"></p></div></div></div> <div><div><p><span>Procreate Dreams is packed with everything you need to bring your art and stories to life, and </span>this is only&nbsp;the&nbsp;beginning.</p></div> <div><div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/tile-effects_en.1ee948a.jpg"></p><video src="https://procreate-assets-cdn.procreate.art/videos/tile-effects_en.76c00b7.mp4" poster="https://procreate-assets-cdn.procreate.art/img/tile-effects_en.1ee948a.jpg" playsinline="" muted="muted" autoplay="autoplay" loop="loop"></video></div> <div><h3>Live Motion &amp; Effects</h3> <p>Adjust any time.</p></div></div> <div><h3>Keyframes</h3> <p>Power and precision made&nbsp;simple.</p></div> <div><h3>Real-time Rendering</h3> <p>Get more time for creativity, instantly playback your movie as you make&nbsp;edits.</p></div> <div><h3>Onion Skins</h3> <p>Easily activate and customize Onion&nbsp;Skins.</p></div> <div><h3>Text &amp; Type</h3> <p>Animate type and import custom&nbsp;fonts.</p></div></div></div> <div><div><p><img src="https://procreate-assets-cdn.procreate.art/img/file.9e15da3.jpg" width="454" height="461" alt=""></p><h2>File format of the future.</h2> <p>All your assets are bundled into one file made for iCloud synchronization and backups. With saved undo history and instant open, the new Procreate file format is made for the next-generation of Procreate&nbsp;products.</p></div> <ul role="presentation"><li><div> <h3>Instant Open</h3></div> <p>Dive straight into creating. Procreate Dreams’ files open and close in an instant.</p></li><li><div> <h3>Automatic Saving</h3></div> <p>Never forget to save, every change you make is instantly saved.</p></li><li><div> <h3>iCloud Support</h3></div> <p>Organize and backup with iCloud synchronization.</p></li><li><div> <h3>Eternal History</h3></div> <p>Experiment without the risk of losing your work with saved undo history.</p></li></ul></div> <div><div><h2>Made for iPad &amp; Apple Pencil</h2> <p>The Perfect Match.</p> <p>From the leading developers for iPad, Procreate Dreams once again delivers an unmatched experience for touch and Apple Pencil. Experience natural and responsive painting, supercharged timeline editing, and&nbsp;more.</p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/pencil-landscape_en.522aaac.jpg" alt="" width="1300" height="1734"></p></div> <div><p><img src="https://procreate-assets-cdn.procreate.art/img/pencil-portrait_en.bad4795.jpg" alt="" width="1734" height="1300"></p></div> <p><img src="https://procreate-assets-cdn.procreate.art/img/dreams-pencil.d98fe86.png" width="1500" height="460" alt=""></p></div> <div><p>Art is for everyone. <span>Procreate Dreams is set to welcome a whole new generation of&nbsp;creators.</span></p></div> <div id="notify-me"><p><img src="https://procreate-assets-cdn.procreate.art/img/laser-left.c0f62a8.jpg" alt=""> <img src="https://procreate-assets-cdn.procreate.art/img/laser-right.a4b7c33.jpg" alt=""></p><div><p><img src="https://procreate-assets-cdn.procreate.art/img/dreams-app-icon.f2bc29c.png" width="100" height="100" alt=""></p> <p>No subscriptions. Just $19.99 USD. Available November&nbsp;22.</p> </div></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bees struggle to find flowers because of air pollution (237 pts)]]></title>
            <link>https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution</link>
            <guid>37434381</guid>
            <pubDate>Fri, 08 Sep 2023 14:59:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution">https://www.birmingham.ac.uk/news/2023/bees-struggle-to-find-flowers-because-of-air-pollution</a>, See on <a href="https://news.ycombinator.com/item?id=37434381">Hacker News</a></p>
<div id="readability-page-1" class="page"><div type="news"><figure><img src="https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg" alt="A bee on a purple flower." srcset="https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=200 200w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=400 400w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=600 600w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=800 800w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1000 1000w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1200 1200w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1400 1400w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1600 1600w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=1800 1800w,https://www.birmingham.ac.uk/media-library/header-images/pexels-pixabay-65656.x37fbec8c.jpg?w=2000 2000w"><figcaption><span>Photo credit: Pixabay. </span></figcaption></figure><p><span><p>A research team comprising the UK Centre for Ecology &amp; Hydrology (UKCEH) and the Universities of Birmingham, Reading, Surrey and Southern Queensland, found that ozone substantially changes the size and scent of floral odour plumes given off by flowers, and that it reduced honeybees' ability to recognise odours by up to 90% from just a few metres away.<em> </em></p>
<p>Ground-level ozone typically forms when nitrogen oxide emissions from vehicles and industrial processes react with volatile organic compounds emitted from vegetation in the presence of sunlight.</p></span></p><div><blockquote><div><p>Our study provides robust evidence that the changes due to ground-level ozone on floral scent cause pollinators to struggle to carry out their crucial role in the natural environment also with implications for food security.</p><p><cite>Professor Christian Pfrang, University of Birmingham</cite></p></div></blockquote></div><p><span><p>Professor Christian Pfrang from the University of Birmingham who collaborated on the research said: “Our study provides robust evidence that the changes due to ground-level ozone on floral scent cause pollinators to struggle to carry out their crucial role in the natural environment also with implications for food security.”</p>
<p>The findings suggest that ozone is likely to be having a negative impact on wildflower abundance and crop yields. International research has already established that ozone has a negative impact on food production because it damages plant growth.</p>
<p>Dr Ben Langford, an atmospheric scientist at UKCEH who led the study said: "Some 75% of our food crops and nearly 90% of wild flowering plants depend, to some extent, upon animal pollination, particularly by insects. Therefore, understanding what adversely affects pollination, and how, is essential to helping us preserve the critical services that we rely upon for production of food, textiles, biofuels and medicines, for example."</p>
<p>The researchers used a 30-m wind tunnel at Surrey University to monitor how the size and shape of odour plumes changed in the presence of ozone. As well as decreasing the size of the odour plume the scientists found that the scent of the plume changed substantially as certain compounds reacted away much faster than others.</p>
<p>Honeybees were trained to recognise the same odour blend and then exposed to the new, ozone-modified odours. Pollinating insects use floral odours to find flowers and learn to associate their unique blend of chemical compounds with the amount of nectar it provides, allowing them to locate the same species in the future.</p>
<p>The research showed that towards the centre of plumes, 52% of honeybees recognised an odour at 6 metres, decreasing to 38% at 12 m. At the edge of plumes, which degraded more quickly, 32% of honeybees recognised a flower from 6 m away and just a tenth of the insects from 12 m away.</p>
<p>The study indicates that ozone could also affect insects’ other odour-controlled behaviours such as attracting a mate.</p>
<p>The research was funded by the Natural Environment Research Council, part of UK Research and Innovation, and was published in the journal <a href="https://www.sciencedirect.com/science/article/pii/S0269749123013386?via%3Dihub"><em>Environmental Pollution</em></a>.</p>
<p>Professor Christian Pfrang concluded: "We know that air pollution has a detrimental effect on human health, biodiversity and the climate, but now we can see how it prevents bees and other pollinating insects from carrying out their key job. This should act as a wake-up call to take action on air pollution and help safeguard food production and biodiversity for the future."</p></span></p><div><h2>Featured staff</h2></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dating app Grindr loses nearly half its staff after trying to force RTO (122 pts)]]></title>
            <link>https://www.cnn.com/2023/09/08/business/grindr-return-to-office-union/index.html</link>
            <guid>37434293</guid>
            <pubDate>Fri, 08 Sep 2023 14:54:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnn.com/2023/09/08/business/grindr-return-to-office-union/index.html">https://www.cnn.com/2023/09/08/business/grindr-return-to-office-union/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=37434293">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-uri="cms.cnn.com/_components/video-resource/instances/h_8710257b98c3cc87e5d5d5601429b08b-h_d769b1babdb73fdff1c1f78211f20c52-pageTop@published" data-component-name="video-resource" data-editable="lede" data-fixed-ratio="16x9" data-video-id="business/2023/08/07/exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business.cnn" data-live="" data-analytics-aggregate-events="true" data-custom-experience="" data-asset-type="" data-medium-env="prod" data-autostart="true" data-show-ads="true" data-source="CNN" data-featured-video="true" data-headline="Employees face shift back to working from the office" data-description="Eagle Hill Consulting CEO Melissa Jezior discusses the balance between remote, hybrid, and fully in-person work.<br />" data-duration="02:13" data-source-html="<span class=&quot;video-resource__source&quot;> - Source:
                <a href=&quot;https://www.cnn.com/&quot; class=&quot;video-resource__source-url&quot;>CNN</a>
    </span>" data-fave-thumbnails="{&quot;big&quot;: { &quot;uri&quot;: &quot;https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=16x9&amp;q=h_540,w_960,c_fill&quot; }, &quot;small&quot;: { &quot;uri&quot;: &quot;https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=16x9&amp;q=h_540,w_960,c_fill&quot; }  }" data-vr-video="" data-show-html="<!-- unable to render partial show without a supplied context -->" data-check-event-based-preview="" data-network-id="" data-details="" data-freewheel-lede="true">
            <div data-image-variation="image" data-breakpoints="{&quot;image--eq-extra-small&quot;: 115, &quot;image--eq-small&quot;: 300}" data-uri="cms.cnn.com/_components/image/instances/thumbnail-image-4894e08d36d25c489e49921b3286acc1@published" data-name="exp remote work return to office jezior live 080703PSEG3 cnni business_00002301" data-component-name="image" data-observe-resizes="" data-original-ratio="0.5625" data-original-height="1080" data-original-width="1920" data-url="https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=original" data-unselectable="true" id="player-cms.cnn.com/_components/video-resource/instances/h_8710257b98c3cc87e5d5d5601429b08b-h_d769b1babdb73fdff1c1f78211f20c52-pageTop@published">
       <picture><img src="https://media.cnn.com/api/v1/images/stellar/prod/230807172636-exp-remote-work-return-to-office-jezior-live-080703pseg3-cnni-business-00002301.png?c=16x9&amp;q=w_850,c_fill" alt="exp remote work return to office jezior live 080703PSEG3 cnni business_00002301.png" onload="this.classList.remove('image__dam-img--loading')" onerror="imageLoadError(this)" height="1080" width="1920"></picture>
    </div>
            
            <div>
                <p>Employees face shift back to working from the office</p>
                <p><span>
                            02:13
                        </span>
                        <span> - Source:
                <a href="https://www.cnn.com/">CNN</a>
    </span>
                </p>
            </div>
        </div><div data-editable="content" itemprop="articleBody" data-reorderable="content">
                    <p><cite>
      <span data-editable="location">New York</span>
      <span data-editable="source">CNN</span>
        &nbsp;—&nbsp;
    </cite>
</p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_129FACE6-7B25-F500-940E-713B296BFB4C@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      LGBTQ dating app Grindr ended its <a href="https://www.cnn.com/2023/04/09/success/hybrid-wfh-remote-work/index.html" target="_blank">remote work </a>policies and forced employees to relocate. Nearly half of its staff left.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_A17DEE50-2D29-5B60-447A-71568E3933D5@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      In early August, Grindr announced a return-to-office mandate. The policy gave workers two weeks to choose between relocating to their respective team’s newly assigned “hub” city to work in-person twice a week or leave the company with severance, according to the Communications Workers of America (CWA).
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_20176EF6-DB4F-F7DA-4CFE-715690A99240@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Approximately 80 of Grindr’s 178 workers were forced to leave as of August 31, the <a href="https://code-cwa.org/stories/grindr-united-cwa-files-unfair-labor-0" target="_blank">CWA said</a> Wednesday. Many of these workers were hired remotely and were required to relocate to new “hub” cities — New York, Chicago, Los Angeles, San Francisco and Washington D.C.
  </p>

  



  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_1D9105D4-9E93-CCF7-9669-7157A21FFC92@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The CWA also said the return-to-work policy was retaliatory and in response to a union drive at the company. Just two weeks prior to Grindr’s policy change, a majority of employees filed to organize a union. 
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_E3ACDE27-21C5-EE11-1199-7150BDC811D1@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “Rather than recognize the union, the company issued a new return-to-office policy requiring staff to relocate or quit,” the CWA said in a statement. The union has filed an unfair labor practice charge against Grindr with the National Labor Relations Board.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_76847653-4287-43A1-2EFB-7501BD542D32@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      A Grindr spokesperson said the latest claims by the union “have no merit.”
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_01F39A34-B4D9-B996-2910-7503A08BDBD8@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      “We are looking forward to returning to the office in a hybrid model in October and further improving productivity and collaboration for our entire team,” the spokesperson said. 
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_10B2FB85-BD2E-47B1-DA82-716BAB26DD0F@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The dispute highlights the tensions between employers and workers over return-to-office policies more than three years after the Covid-19 pandemic forced millions of white-collar employees to work remotely.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_319D5DDD-4225-5637-EDD6-716E23945C20@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      According to the Conference Board’s August <a href="https://www.prnewswire.com/news-releases/survey-73-of-companies-struggle-to-get-workers-back-to-the-office-301890629.html" target="_blank">survey</a> of 185 US HR executives, 73% of organizations reported challenges getting workers to return to the workplace. 
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_90570D57-5F12-1644-7504-74B91D6820FA@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      The push for on-site work may be hindering efforts to retain workers. Seventy-one percent of employers that are mandating their on-site work policy reported difficulty retaining workers, according to the survey.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_398BBFFF-12F6-C09A-F93F-716E2749ED06@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Some big-name employers have said they will get tough on enforcing their return-to-office mandates after Labor Day.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_E62D8A34-2520-E936-7095-716E274BC2DE@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Last month, Amazon CEO Andy Jassy told employees they were free to disagree with the company’s policy requiring them to be in the office at least three days a week. But, he added, if they don’t comply, <a href="https://www.cnn.com/2023/08/29/business/amazon-jobs-return-to-office/index.html" target="_blank">their futures at Amazon</a> might not be, um, bright. A few weeks prior, the company had sent emails to some employees letting them know their badge swipes indicated they were not coming in as often as required.
  </p>

  <p data-uri="cms.cnn.com/_components/paragraph/instances/paragraph_F3069C21-00DE-4281-27AD-716E274C7915@published" data-editable="text" data-component-name="paragraph" data-article-gutter="true">
      Meta, meanwhile, told employees that by September 5 those already assigned to an office must come in three days a week, and managers would track attendance, <a href="https://www.businessinsider.com/meta-rto-policy-updates-stricter-mandate-2023-8" target="_blank">according to a report</a> from Business Insider. Noncompliance could result in disciplinary action, including a lower performance rating or, if unaddressed, dismissal.
  </p>

  <p data-uri="cms.cnn.com/_components/footnote/instances/022a9b576cf7ccb08c6a614be2c26f4f@published" data-editable="text" data-article-gutter="true">
  CNN’s Jeanne Sahadi contributed to this article.
</p>

                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bun v1.0.0 (900 pts)]]></title>
            <link>https://github.com/oven-sh/bun/releases/tag/bun-v1.0.0</link>
            <guid>37434117</guid>
            <pubDate>Fri, 08 Sep 2023 14:41:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/oven-sh/bun/releases/tag/bun-v1.0.0">https://github.com/oven-sh/bun/releases/tag/bun-v1.0.0</a>, See on <a href="https://news.ycombinator.com/item?id=37434117">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-pjax="true" data-test-selector="body-content" data-view-component="true"><p>Today is an exciting day.</p>
<p>To install Bun v1.0:</p>
<div data-snippet-clipboard-copy-content="curl https://bun.sh/install | bash
# or you can use npm
# npm install -g bun"><pre>curl https://bun.sh/install <span>|</span> bash
<span><span>#</span> or you can use npm</span>
<span><span>#</span> npm install -g bun</span></pre></div>
<p>To upgrade to Bun v1.0:</p>

<p><strong><a href="https://bun.sh/blog/bun-v1.0" rel="nofollow">Read Bun v1.0.0's release notes on Bun's blog</a></strong></p>
<h2>What's Changed</h2>
<ul>
<li>Fix assertion failure with sourcemaps in multi-threaded transpiler by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1866764461" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4321" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4321/hovercard" href="https://github.com/oven-sh/bun/pull/4321">#4321</a></li>
<li>Automatically hot reload Bun.serve() by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1867861824" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4344" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4344/hovercard" href="https://github.com/oven-sh/bun/pull/4344">#4344</a></li>
<li>Fix the crash when importing a module that does not exist. by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1867933376" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4348" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4348/hovercard" href="https://github.com/oven-sh/bun/pull/4348">#4348</a></li>
<li>More improvements to debugger support by <a data-hovercard-type="user" data-hovercard-url="/users/Electroid/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Electroid">@Electroid</a> in <a data-error-text="Failed to load title" data-id="1867868912" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4345" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4345/hovercard" href="https://github.com/oven-sh/bun/pull/4345">#4345</a></li>
<li>Set the timezone in spawn in tests by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1867799292" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4337" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4337/hovercard" href="https://github.com/oven-sh/bun/pull/4337">#4337</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/Electroid/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Electroid">@Electroid</a>'s dap changes by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1868545792" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4367" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4367/hovercard" href="https://github.com/oven-sh/bun/pull/4367">#4367</a></li>
<li>Fix some edge cases in the <code>env</code> param of <code>spawn</code>. by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1868423993" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4364" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4364/hovercard" href="https://github.com/oven-sh/bun/pull/4364">#4364</a></li>
<li>just kernel32 things by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1868079933" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4354" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4354/hovercard" href="https://github.com/oven-sh/bun/pull/4354">#4354</a></li>
<li>make pending_response and metdata life cycle more clear and make fetch more reliable by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1867266294" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4331" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4331/hovercard" href="https://github.com/oven-sh/bun/pull/4331">#4331</a></li>
<li>Bring uSockets &amp; uWebSockets forks into Bun's repository by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1869762034" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4372" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4372/hovercard" href="https://github.com/oven-sh/bun/pull/4372">#4372</a></li>
<li>remove uws from .gitmodules by <a data-hovercard-type="user" data-hovercard-url="/users/prabhatexit0/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/prabhatexit0">@prabhatexit0</a> in <a data-error-text="Failed to load title" data-id="1870139917" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4374" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4374/hovercard" href="https://github.com/oven-sh/bun/pull/4374">#4374</a></li>
<li>use <code>options.fd</code> if provided for <code>fs.Read/WriteStream</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1870343306" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4378" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4378/hovercard" href="https://github.com/oven-sh/bun/pull/4378">#4378</a></li>
<li>feat(node:dns): implement <code>dns.reverse</code>. by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1867288054" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4332" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4332/hovercard" href="https://github.com/oven-sh/bun/pull/4332">#4332</a></li>
<li>fix <a data-error-text="Failed to load title" data-id="1868157856" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4356" data-hovercard-type="issue" data-hovercard-url="/oven-sh/bun/issues/4356/hovercard" href="https://github.com/oven-sh/bun/issues/4356">#4356</a> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1871176685" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4386" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4386/hovercard" href="https://github.com/oven-sh/bun/pull/4386">#4386</a></li>
<li>Fix close callback and open event for fs streams by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1870863608" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4384" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4384/hovercard" href="https://github.com/oven-sh/bun/pull/4384">#4384</a></li>
<li>add unix socket support for <code>node:http.server</code> by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1871937343" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4390" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4390/hovercard" href="https://github.com/oven-sh/bun/pull/4390">#4390</a></li>
<li>fix(node-fetch): use stream.Readable instead of web streams by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1872419767" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4394" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4394/hovercard" href="https://github.com/oven-sh/bun/pull/4394">#4394</a></li>
<li>Fix assertion failure in spawn-related tests by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1872765282" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4400" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4400/hovercard" href="https://github.com/oven-sh/bun/pull/4400">#4400</a></li>
<li>More support for DAP by <a data-hovercard-type="user" data-hovercard-url="/users/Electroid/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Electroid">@Electroid</a> in <a data-error-text="Failed to load title" data-id="1870714529" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4380" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4380/hovercard" href="https://github.com/oven-sh/bun/pull/4380">#4380</a></li>
<li>reset signal handlers in Bun.spawn  by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1872992873" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4405" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4405/hovercard" href="https://github.com/oven-sh/bun/pull/4405">#4405</a></li>
<li>fix(http/https) disable decompress on http/https client by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1872747697" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4399" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4399/hovercard" href="https://github.com/oven-sh/bun/pull/4399">#4399</a></li>
<li>minor rebuild diffs by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1874167506" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4416" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4416/hovercard" href="https://github.com/oven-sh/bun/pull/4416">#4416</a></li>
<li>exit handlers for resetting tty by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1874494661" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4419" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4419/hovercard" href="https://github.com/oven-sh/bun/pull/4419">#4419</a></li>
<li>[install] fix stale root life-cycle script in lockfile by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1873804873" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4411" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4411/hovercard" href="https://github.com/oven-sh/bun/pull/4411">#4411</a></li>
<li>add life cycle scripts to lockfile metahash by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1874556936" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4420" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4420/hovercard" href="https://github.com/oven-sh/bun/pull/4420">#4420</a></li>
<li>feat(node:fs): add <code>cp</code>/<code>cpSync</code>/<code>promises.cp</code> + async <code>copyFile</code> by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1867808424" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4340" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4340/hovercard" href="https://github.com/oven-sh/bun/pull/4340">#4340</a></li>
<li>Fix(semver): fix matching with pre-release version by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1873885927" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4412" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4412/hovercard" href="https://github.com/oven-sh/bun/pull/4412">#4412</a></li>
<li>get name if not provided in <code>FormData.append</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1876297886" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4434" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4434/hovercard" href="https://github.com/oven-sh/bun/pull/4434">#4434</a></li>
<li><code>bun install</code> correctly join dependency URLs by <a data-hovercard-type="user" data-hovercard-url="/users/Parzival-3141/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Parzival-3141">@Parzival-3141</a> in <a data-error-text="Failed to load title" data-id="1874571928" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4421" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4421/hovercard" href="https://github.com/oven-sh/bun/pull/4421">#4421</a></li>
<li>only set initial debugger breakpoint once by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1876691243" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4441" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4441/hovercard" href="https://github.com/oven-sh/bun/pull/4441">#4441</a></li>
<li>fix(runtime): <code>fs.cp</code> edge cases by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1876475429" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4439" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4439/hovercard" href="https://github.com/oven-sh/bun/pull/4439">#4439</a></li>
<li>fix(runtime): fix dns_resolver crash by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1876392249" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4435" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4435/hovercard" href="https://github.com/oven-sh/bun/pull/4435">#4435</a></li>
<li>fix <code>Bun.serve</code> with tls and <code>Bun.file</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1878260371" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4450" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4450/hovercard" href="https://github.com/oven-sh/bun/pull/4450">#4450</a></li>
<li>keep <code>export * as</code> by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1878359573" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4451" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4451/hovercard" href="https://github.com/oven-sh/bun/pull/4451">#4451</a></li>
<li>Fix typo in docs/api/tcp by <a data-hovercard-type="user" data-hovercard-url="/users/JorgeJimenez15/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/JorgeJimenez15">@JorgeJimenez15</a> in <a data-error-text="Failed to load title" data-id="1877639175" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4445" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4445/hovercard" href="https://github.com/oven-sh/bun/pull/4445">#4445</a></li>
<li>docs: fix http simple example log statement by <a data-hovercard-type="user" data-hovercard-url="/users/karlbohlmark/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/karlbohlmark">@karlbohlmark</a> in <a data-error-text="Failed to load title" data-id="1866713541" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4320" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4320/hovercard" href="https://github.com/oven-sh/bun/pull/4320">#4320</a></li>
<li>fix(runtime): Fix <code>fs.stat().mtime</code> on MacOS by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1876686471" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4440" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4440/hovercard" href="https://github.com/oven-sh/bun/pull/4440">#4440</a></li>
<li>fix(syscall): fix handling syscall errno by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1879111833" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4461" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4461/hovercard" href="https://github.com/oven-sh/bun/pull/4461">#4461</a></li>
<li>fix(HTMLRewriter) buffer response before transform by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1874231888" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4418" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4418/hovercard" href="https://github.com/oven-sh/bun/pull/4418">#4418</a></li>
<li>docs typo: <code>loaders</code> -&gt; <code>loader</code> by <a data-hovercard-type="user" data-hovercard-url="/users/Hanaasagi/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Hanaasagi">@Hanaasagi</a> in <a data-error-text="Failed to load title" data-id="1880491139" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4476" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4476/hovercard" href="https://github.com/oven-sh/bun/pull/4476">#4476</a></li>
<li>fix zlib deflate on fetch by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1880908416" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4483" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4483/hovercard" href="https://github.com/oven-sh/bun/pull/4483">#4483</a></li>
<li>remove <code>chmod</code> usage with <code>--bun</code> flag by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1881020191" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4490" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4490/hovercard" href="https://github.com/oven-sh/bun/pull/4490">#4490</a></li>
<li>fix dup syscall on Windows by <a data-hovercard-type="user" data-hovercard-url="/users/CGQAQ/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/CGQAQ">@CGQAQ</a> in <a data-error-text="Failed to load title" data-id="1881479165" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4496" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4496/hovercard" href="https://github.com/oven-sh/bun/pull/4496">#4496</a></li>
<li>minor rebuild diffs by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1880944679" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4486" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4486/hovercard" href="https://github.com/oven-sh/bun/pull/4486">#4486</a></li>
<li>fix ipv6 localhost fetch by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1881603924" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4498" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4498/hovercard" href="https://github.com/oven-sh/bun/pull/4498">#4498</a></li>
<li>fix checkout/build failure due to <code>src/deps/uws</code> by <a data-hovercard-type="user" data-hovercard-url="/users/alexlamsl/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/alexlamsl">@alexlamsl</a> in <a data-error-text="Failed to load title" data-id="1882195698" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4505" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4505/hovercard" href="https://github.com/oven-sh/bun/pull/4505">#4505</a></li>
<li>fix(install): ensure all lockfile structs do not have undefined padding by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1872767125" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4401" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4401/hovercard" href="https://github.com/oven-sh/bun/pull/4401">#4401</a></li>
<li>fix(fetch) fix proxy tunneling by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1882739448" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4510" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4510/hovercard" href="https://github.com/oven-sh/bun/pull/4510">#4510</a></li>
<li>fix(fetch) always use readable stream if it is available by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1882049039" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4503" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4503/hovercard" href="https://github.com/oven-sh/bun/pull/4503">#4503</a></li>
<li>fix(node:net): emit close event on connection error by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1867753431" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4336" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4336/hovercard" href="https://github.com/oven-sh/bun/pull/4336">#4336</a></li>
<li>feat(runtime): Implement <code>fs.watchFile</code> by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1879253940" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4467" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4467/hovercard" href="https://github.com/oven-sh/bun/pull/4467">#4467</a></li>
<li>Align <code>process.nextTick</code> execution order with Node by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1873731484" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4409" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4409/hovercard" href="https://github.com/oven-sh/bun/pull/4409">#4409</a></li>
<li>fix text decode trim by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1881341557" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4495" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4495/hovercard" href="https://github.com/oven-sh/bun/pull/4495">#4495</a></li>
<li>update root certs by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1881887797" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4499" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4499/hovercard" href="https://github.com/oven-sh/bun/pull/4499">#4499</a></li>
<li>Update development.md by <a data-hovercard-type="user" data-hovercard-url="/users/ThatOneBro/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/ThatOneBro">@ThatOneBro</a> in <a data-error-text="Failed to load title" data-id="1880872801" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4480" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4480/hovercard" href="https://github.com/oven-sh/bun/pull/4480">#4480</a></li>
<li>allocate task for <code>ThreadSafeFunction</code>  by <a data-hovercard-type="user" data-hovercard-url="/users/dylan-conway/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/dylan-conway">@dylan-conway</a> in <a data-error-text="Failed to load title" data-id="1883142644" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4513" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4513/hovercard" href="https://github.com/oven-sh/bun/pull/4513">#4513</a></li>
<li>fix(runtime): fix <code>events.once</code> not using a once listener. by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1884083624" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4520" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4520/hovercard" href="https://github.com/oven-sh/bun/pull/4520">#4520</a></li>
<li>Update node:fs compat docs cp/cpSync/watchFile/unwatchFile by <a data-hovercard-type="user" data-hovercard-url="/users/birkskyum/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/birkskyum">@birkskyum</a> in <a data-error-text="Failed to load title" data-id="1884738020" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4525" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4525/hovercard" href="https://github.com/oven-sh/bun/pull/4525">#4525</a></li>
<li>feat(fetch) rejectUnauthorized and checkServerIdentity by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1883289117" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4514" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4514/hovercard" href="https://github.com/oven-sh/bun/pull/4514">#4514</a></li>
<li>Progress for Next.js  by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1879256121" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4468" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4468/hovercard" href="https://github.com/oven-sh/bun/pull/4468">#4468</a></li>
<li>revert by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1885940498" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4539" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4539/hovercard" href="https://github.com/oven-sh/bun/pull/4539">#4539</a></li>
<li>fix(fetch) closeAndFail instead of close by <a data-hovercard-type="user" data-hovercard-url="/users/cirospaciari/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/cirospaciari">@cirospaciari</a> in <a data-error-text="Failed to load title" data-id="1885865893" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4537" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4537/hovercard" href="https://github.com/oven-sh/bun/pull/4537">#4537</a></li>
<li>fix(cli): final touches for 1.0 by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1885930252" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4538" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4538/hovercard" href="https://github.com/oven-sh/bun/pull/4538">#4538</a></li>
<li>Doc updates for v1.0 by <a data-hovercard-type="user" data-hovercard-url="/users/colinhacks/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/colinhacks">@colinhacks</a> in <a data-error-text="Failed to load title" data-id="1880943801" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4485" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4485/hovercard" href="https://github.com/oven-sh/bun/pull/4485">#4485</a></li>
<li>Bump version to Bun 1.0.0 by <a data-hovercard-type="user" data-hovercard-url="/users/paperdave/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/paperdave">@paperdave</a> in <a data-error-text="Failed to load title" data-id="1886235919" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4543" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4543/hovercard" href="https://github.com/oven-sh/bun/pull/4543">#4543</a></li>
<li>Fix typo in sveltekit.md by <a data-hovercard-type="user" data-hovercard-url="/users/hiadamk/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hiadamk">@hiadamk</a> in <a data-error-text="Failed to load title" data-id="1886503690" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4550" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4550/hovercard" href="https://github.com/oven-sh/bun/pull/4550">#4550</a></li>
<li>Fix a couple important bugs by <a data-hovercard-type="user" data-hovercard-url="/users/Jarred-Sumner/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/Jarred-Sumner">@Jarred-Sumner</a> in <a data-error-text="Failed to load title" data-id="1886824940" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4560" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4560/hovercard" href="https://github.com/oven-sh/bun/pull/4560">#4560</a></li>
</ul>
<h2>New Contributors</h2>
<ul>
<li><a data-hovercard-type="user" data-hovercard-url="/users/prabhatexit0/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/prabhatexit0">@prabhatexit0</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1870139917" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4374" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4374/hovercard" href="https://github.com/oven-sh/bun/pull/4374">#4374</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/JorgeJimenez15/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/JorgeJimenez15">@JorgeJimenez15</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1877639175" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4445" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4445/hovercard" href="https://github.com/oven-sh/bun/pull/4445">#4445</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/karlbohlmark/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/karlbohlmark">@karlbohlmark</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1866713541" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4320" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4320/hovercard" href="https://github.com/oven-sh/bun/pull/4320">#4320</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/birkskyum/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/birkskyum">@birkskyum</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1884738020" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4525" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4525/hovercard" href="https://github.com/oven-sh/bun/pull/4525">#4525</a></li>
<li><a data-hovercard-type="user" data-hovercard-url="/users/hiadamk/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/hiadamk">@hiadamk</a> made their first contribution in <a data-error-text="Failed to load title" data-id="1886503690" data-permission-text="Title is private" data-url="https://github.com/oven-sh/bun/issues/4550" data-hovercard-type="pull_request" data-hovercard-url="/oven-sh/bun/pull/4550/hovercard" href="https://github.com/oven-sh/bun/pull/4550">#4550</a></li>
</ul>
<p><strong>Full Changelog</strong>: <a href="https://github.com/oven-sh/bun/compare/bun-v0.8.1...bun-v1.0.0"><tt>bun-v0.8.1...bun-v1.0.0</tt></a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Flexport is rescinding a bunch of signed offer letters (341 pts)]]></title>
            <link>https://twitter.com/typesfast/status/1700092765798048093</link>
            <guid>37433681</guid>
            <pubDate>Fri, 08 Sep 2023 14:07:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/typesfast/status/1700092765798048093">https://twitter.com/typesfast/status/1700092765798048093</a>, See on <a href="https://news.ycombinator.com/item?id=37433681">Hacker News</a></p>
Couldn't get https://twitter.com/typesfast/status/1700092765798048093: Error [ERR_FR_TOO_MANY_REDIRECTS]: Maximum number of redirects exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Emoji Generator with AI (320 pts)]]></title>
            <link>https://emoji.fly.dev</link>
            <guid>37433523</guid>
            <pubDate>Fri, 08 Sep 2023 13:54:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://emoji.fly.dev">https://emoji.fly.dev</a>, See on <a href="https://news.ycombinator.com/item?id=37433523">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  <header>
  <p>
    <h2>
      Recents (view at your own risk...)
    </h2>
    
  </p>
  
</header>

  <ul id="recent-predictions" phx-update="stream" role="list">
    <li id="recent_predictions-24147">
      
      <p>
        :github-octocat:
      </p>
      
    </li><li id="recent_predictions-24146">
      
      <p>
        :github:
      </p>
      
    </li><li id="recent_predictions-24149">
      
      <p>
        :kitler:
      </p>
      
    </li><li id="recent_predictions-24144">
      
      <p>
        :heart-emoji-wearing-a-cape:
      </p>
      
    </li><li id="recent_predictions-24153">
      
      <p>
        :andrew-schein:
      </p>
      
    </li><li id="recent_predictions-24152">
      
      <p>
        :person-named-jp:
      </p>
      
    </li><li id="recent_predictions-24148">
      
      <p>
        :girl-scientist:
      </p>
      
    </li><li id="recent_predictions-24150">
      
      <p>
        :iphone-14-pro:
      </p>
      
    </li><li id="recent_predictions-24142">
      
      <p>
        :suit-and-tied-puppy,-only-one-head:
      </p>
      
    </li><li id="recent_predictions-24143">
      
      <p>
        :ghostbuster-proton-pack:
      </p>
      
    </li><li id="recent_predictions-24141">
      
      <p>
        :mayonaise-person:
      </p>
      
    </li><li id="recent_predictions-24140">
      
      <p>
        :man-that-hung-himself.-its-a-suicide!:
      </p>
      
    </li><li id="recent_predictions-24139">
      
      <p>
        :farting-cat:
      </p>
      
    </li><li id="recent_predictions-24138">
      
      <p>
        :devilish-blonde-girl:
      </p>
      
    </li><li id="recent_predictions-24137">
      
      <p>
        :butthead:
      </p>
      
    </li><li id="recent_predictions-24136">
      
      <p>
        :mild-panic:
      </p>
      
    </li><li id="recent_predictions-24135">
      
      <p>
        :wtf:
      </p>
      
    </li><li id="recent_predictions-24131">
      
      <p>
        :keanu-reeves:
      </p>
      
    </li><li id="recent_predictions-24130">
      
      <p>
        :portuguese-music:
      </p>
      
    </li><li id="recent_predictions-24134">
      
      <p>
        :anthony:
      </p>
      
    </li><li id="recent_predictions-24132">
      
      <p>
        :rick-astley-meme:
      </p>
      
    </li><li id="recent_predictions-24128">
      
      <p>
        :concerned-frog:
      </p>
      
    </li><li id="recent_predictions-24129">
      
      <p>
        :ned-flanders:
      </p>
      
    </li><li id="recent_predictions-24126">
      
      <p>
        :havanese-dog-with-grey-with-black-ear-tips-in-emoji-style-with-a-smile:
      </p>
      
    </li><li id="recent_predictions-24123">
      
      <p>
        :unicron:
      </p>
      
    </li><li id="recent_predictions-24124">
      
      <p>
        :potato-head:
      </p>
      
    </li><li id="recent_predictions-24125">
      
      <p>
        :nestor-kirchner:
      </p>
      
    </li><li id="recent_predictions-24122">
      
      <p>
        :female-chinese-mystic:
      </p>
      
    </li><li id="recent_predictions-24121">
      
      <p>
        :italian-greyhound-in-sunglasses:
      </p>
      
    </li><li id="recent_predictions-24115">
      
      <p>
        :adderall-mountain:
      </p>
      
    </li><li id="recent_predictions-24117">
      
      <p>
        :guy-in-a-blue-shirt-looking-over-shoulder-at-woman-in-a-red-dress:
      </p>
      
    </li><li id="recent_predictions-24116">
      
      <p>
        :criminal:
      </p>
      
    </li><li id="recent_predictions-24113">
      
      <p>
        :five-people-shaking-hands:
      </p>
      
    </li><li id="recent_predictions-24112">
      
      <p>
        :robot:
      </p>
      
    </li><li id="recent_predictions-24111">
      
      <p>
        :andreas:
      </p>
      
    </li><li id="recent_predictions-24109">
      
      <p>
        :tok-emoji-of-balenciaga-le-cagole:
      </p>
      
    </li><li id="recent_predictions-24108">
      
      <p>
        :go-fcuk-yourself:
      </p>
      
    </li><li id="recent_predictions-24110">
      
      <p>
        :hollowpoiint:
      </p>
      
    </li><li id="recent_predictions-24107">
      
      <p>
        :hundred-cats:
      </p>
      
    </li><li id="recent_predictions-24106">
      
      <p>
        :cariñosa:
      </p>
      
    </li>
  </ul>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple vs. Meta: The Illusion of Privacy (348 pts)]]></title>
            <link>https://growth.design/case-studies/apple-privacy-policy</link>
            <guid>37433495</guid>
            <pubDate>Fri, 08 Sep 2023 13:52:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://growth.design/case-studies/apple-privacy-policy">https://growth.design/case-studies/apple-privacy-policy</a>, See on <a href="https://news.ycombinator.com/item?id=37433495">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__next"><p><img alt="Case Study" fetchpriority="high" decoding="async" data-nimg="fill" sizes="100vw" srcset="https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=640&amp;q=75 640w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=750&amp;q=75 750w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=828&amp;q=75 828w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=1080&amp;q=75 1080w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=1200&amp;q=75 1200w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=1920&amp;q=75 1920w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=2048&amp;q=75 2048w, https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=3840&amp;q=75 3840w" src="https://growth.design/_next/image?url=https%3A%2F%2Fs3.amazonaws.com%2Ffiles.growth.design%2Fcms%2Fclm5pkvfc000h0tl96w4x3j37.png&amp;w=3840&amp;q=75"></p><div><p>Loading<span>…</span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Rivet – open-source AI Agent dev env with real-world applications (153 pts)]]></title>
            <link>https://rivet.ironcladapp.com/</link>
            <guid>37433218</guid>
            <pubDate>Fri, 08 Sep 2023 13:29:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rivet.ironcladapp.com/">https://rivet.ironcladapp.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37433218">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="__docusaurus">
<main><div id="hero"><h2>The Open-Source Visual AI Programming Environment</h2><p><a href="https://github.com/Ironclad/rivet/releases/latest" target="_blank">Download</a><a href="https://github.com/Ironclad/rivet/releases/latest">Latest Release</a></p><div><p>Built and used by</p><p><a href="https://www.ironcladapp.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/ironclad-logo-white.png" height="40px" width="209px" alt="Link to Ironclad"></a></p></div><p><img height="300px" src="https://rivet.ironcladapp.com/img/graph.png" alt="Rivet Graph"></p><p>∨</p></div><div id="what-is-rivet"><h2>What is Rivet?</h2><div><p>Rivet is a visual programming environment for building AI agents with LLMs. Iterate on your prompt graphs in Rivet, then run them directly in your application. With Rivet, teams can effectively design, debug, and collaborate on complex LLM prompt graphs, and deploy them in their own environment.</p><p>At Ironclad, we struggled to build AI agents programmatically. Rivet's visual environment, easy debugger, and remote executor unlocked our team's ability to collaborate on increasingly complex and powerful LLM prompt graphs.</p><p><img src="https://rivet.ironcladapp.com/img/ironclad-logo.png" height="16px"> is the leading digital contracting platform.<!-- --> <a href="https://ironcladapp.com/product/ai-based-contract-management/" target="_blank">Ironclad AI</a> <!-- -->helps legal teams with everything from reviewing contracts faster to answering questions about their obligations.<!-- --> <!-- -->Learn more at <a href="https://www.ironcladapp.com/" target="_blank">ironcladapp.com</a>.</p><p>Rivet is built and used by <img src="https://rivet.ironcladapp.com/img/ironclad-logo.png" height="16px"> Research.</p></div></div><div id="features"><h2>Why Rivet?</h2><div><div><h3>Visualize and Build</h3><p>Visualize and build complex chains to create applications for production — not just prototyping.</p></div><div><h3>Debug Remotely</h3><p>See what's under the hood and observe the execution of prompt chains in your application, in real-time.</p></div><div><h3>Collaborate</h3><p>Rivet graphs are just YAML files, so you can version them in your team's repository, and review them using your favorite code review tools.</p></div></div></div><div id="demo-video"><h2>See it in Action</h2><p><iframe width="560" height="315" src="https://www.youtube.com/embed/HhgM9MiShwA?si=ULy6PThLVtV7D-Ab&amp;rel=0" title="Rivet Demo" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen=""></iframe></p></div><div id="use-cases"><h2>What the Community is Saying</h2><div><div><p>Rivet's visual programming environment is a game-changer. The visual nature of the tool, paired with how collaborative it is, allows us to create complex chains for AI agents in drastically less time than it would take in other environments. It's the best tool out there.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-todd-berman.jpeg" alt="Todd Berman"></p><div><p>Todd Berman, CTO</p><p><a href="https://www.attentive.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-attentive.svg" alt="Attentive"></a></p></div></div></div><div><p>Rivet really addressed some limitations that we were hitting up against... and some we didn't know we had. The visualization makes a big difference when working through agentic logic and really makes it easy to see what the AI is doing. But the ability to debug and collaborate across the team made a huge difference as well - we've used it to launch our virtual mortgage servicing agent and are excited to see how the tool continues to evolve.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-teddy-coleman.jpeg" alt="Teddy Coleman"></p><div><p>Teddy Coleman, CTO</p><p><a href="https://www.willowservicing.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-willow.webp" alt="Willow Servicing"></a></p></div></div></div><div><p>In order to build great product experiences we have to be able to iterate quickly. Leveraging tools like Rivet allows us to more accurately understand the tradeoffs between things like speed and quality as we build AI-powered experiences in Bento.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-emily-wang.jpeg" alt="Emily Wang"></p><div><p>Emily Wang, CEO</p><p><a href="https://www.trybento.co/products/bentoai" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-bento.svg" alt="Bento"></a></p></div></div></div><div><p>Rivet is an amazing tool for rapidly prototyping and visually understanding complex AI workflows. It's been wonderful collaborating with Ironclad to integrate AssemblyAI's audio transcription and understanding models into the Rivet ecosystem. We're excited to see what developers create equipped with such a powerful and capable toolkit!</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-domenic-donato.jpeg" alt="Domenic Donato"></p><div><p>Domenic Donato, VP of Technology</p><p><a href="https://www.assemblyai.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-assemblyai.svg" alt="AssemblyAI"></a></p></div></div></div><div><p>Rivet is a super slick and compelling tool for prompt construction and LLM composition, particularly when you're trying to combine AI with many existing tools and APIs. I can see this becoming a popular tool for those working on robust and reliable AI applications.</p><div><p><img width="80" src="https://rivet.ironcladapp.com/img/use-case-quotes/profile-beyang-liu.jpeg" alt="Beyang Liu"></p><div><p>Beyang Liu, CTO</p><p><a href="https://www.sourcegraph.com/" target="_blank"><img src="https://rivet.ironcladapp.com/img/use-case-quotes/logo-sourcegraph.svg" alt="Sourcegraph"></a></p></div></div></div></div></div><div id="ironclad-contract-ai"><h2><img src="https://rivet.ironcladapp.com/img/ironclad-logo-white.png" height="24px"> Contract AI</h2><p>Ironclad Contract AI (CAI) is a virtual contract assistant, powered by AI agents, and developed with Rivet. CAI is capable of answering diverse questions about every stage of the contract lifecycle, directly using Ironclad's existing capabilities, like contract search, workflow process, and data visualization.</p><p>You can<!-- --> <a href="https://ironcladapp.com/product/ironclad-contract-ai/" target="_blank">learn more about CAI here</a>.</p></div><div id="get-started"><h2>Get Started</h2><p>Start building AI agents with Rivet in just a few simple steps!</p><ul><li>Follow the <a href="https://rivet.ironcladapp.com/docs/getting-started/installation">Getting Started</a> guide, to learn how to build AI agent graphs in Rivet.</li><li><a href="https://rivet.ironcladapp.com/docs/api-reference/getting-started-integration">Integrate Rivet</a> into your Node or TypeScript application.</li><li>Experiment with the<!-- --> <a href="https://github.com/Ironclad/rivet-example" target="_blank">Rivet example application</a>, to get a sense for what developing and debugging a chat application looks like in Rivet.</li></ul></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Aardvark'd: The Fog Creek Documentary, 18 Years Later (405 pts)]]></title>
            <link>https://mtlynch.io/aardvarkd/</link>
            <guid>37433186</guid>
            <pubDate>Fri, 08 Sep 2023 13:26:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mtlynch.io/aardvarkd/">https://mtlynch.io/aardvarkd/</a>, See on <a href="https://news.ycombinator.com/item?id=37433186">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>In 2005, Joel Spolsky’s software company, Fog Creek, filmed a documentary about their summer internship program. The film is called <em>Aardvark’d: 12 Weeks with Geeks</em>, and it follows four college interns as they design, implement, and launch a completely new software product.</p><p>That’s not the interesting part.</p><p>Looking back on this documentary 18 years later, it’s striking how many interviews it captured with people who would go on to greater fame and success:</p><ul><li>Paul Graham and Jessica Livingston, months after they co-founded Y Combinator</li><li>Aaron Swartz, Steve Huffman, and Alexis Ohanian, months after they launched reddit</li><li>Joel Spolsky and Michael Pryor before their mega-hits like StackOverflow and Trello</li></ul><p><em>Aardvark’d</em> sold about 5,000 copies on DVD, mostly to fans of Joel’s blog, but it quickly faded from popular consciousness.</p><p>As a longtime Joel Spolsky fanboy, I’ve always been curious to watch <em>Aardvark’d</em>. I was delighted that the film’s producer recently published it <a href="https://www.youtube.com/watch?v=YbrkZ07LKbk">for free on YouTube</a> at 1080p resolution.</p><p>At the time of this writing, <em>Aardvark’d</em> has only 41 views on YouTube, which is surprisingly low given the rarity of its interviews.</p><figure><a href="https://www.youtube.com/watch?v=YbrkZ07LKbk"><img sizes="(min-width: 768px) 650px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/3351b475a9f312a36ac2aa9184d85f690481fadf/1e849/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/68ea5fe8f1b7a5742eac80a7cd7dddfc4a8cd722/d037f/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/42983a127c2cf343d0f30024332e4f68ae06a069/54725/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/dfc94971510bb4064426a954e16be48a19c798e1/8e7e9/aardvarkd/41-views_hu291d5d21dc25e43a21a5e9de2c26c26f_124522_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/9bb00ef1ad477c68c239548382621f47827c3cfa/2b3ff/aardvarkd/41-views.webp 1240w" src="https://d33wubrfki0l68.cloudfront.net/9bb00ef1ad477c68c239548382621f47827c3cfa/2b3ff/aardvarkd/41-views.webp" alt="" loading="lazy"></a><figcaption><p><em>Aardvark’d</em> currently has only 41 views <a href="https://www.youtube.com/watch?v=YbrkZ07LKbk">on YouTube</a>.</p></figcaption></figure><h2 id="what-was-going-on-in-2005">What was going on in 2005?<a href="#what-was-going-on-in-2005" arialabel="Anchor"> 🔗︎</a></h2><p>To understand what makes <em>Aardvark’d</em> a fun watch, you need to understand what was going on with indie software in 2005.</p><h3 id="fog-creek-software">Fog Creek Software<a href="#fog-creek-software" arialabel="Anchor"> 🔗︎</a></h3><p>At the time of filming, <a href="https://en.wikipedia.org/wiki/Joel_Spolsky">Joel Spolsky</a> was 40 years old. He had co-founded Fog Creek in 2000 with Michael Pryor. Aside from the founders, Fog Creek had six employees. They sold two products: FogBugz, a bug-tracking application, and CityDesk, a web publishing tool. The company was profitable enough to get by without external investors, but they weren’t experiencing any kind of exponential hypergrowth.</p><figure><a href="https://mtlynch.io/aardvarkd/joel.webp"><img sizes="(min-width: 768px) 400px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/c1e35fc0433b83b20a1d1205b0ded9ff288092bc/c1e52/aardvarkd/joel_hub441d78b9fa5f134ac8668827fae2328_21732_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/651e0f4daa6c3525065becc66b92870a1337cdb9/755e0/aardvarkd/joel_hub441d78b9fa5f134ac8668827fae2328_21732_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/ba7adc2e5aa7a353257daf5d0d5a7b70c4d892af/89586/aardvarkd/joel.webp 706w" src="https://d33wubrfki0l68.cloudfront.net/ba7adc2e5aa7a353257daf5d0d5a7b70c4d892af/89586/aardvarkd/joel.webp" alt="" loading="lazy"></a><figcaption><p>Joel Spolsky, Fog Creek co-founder, in 2005</p></figcaption></figure><h3 id="y-combinator">Y Combinator<a href="#y-combinator" arialabel="Anchor"> 🔗︎</a></h3><p><a href="https://en.wikipedia.org/wiki/Paul_Graham_(programmer)">Paul Graham</a> and <a href="https://en.wikipedia.org/wiki/Jessica_Livingston">Jessica Livingston</a> had just co-founded <a href="https://en.wikipedia.org/wiki/Y_Combinator">Y Combinator</a>, which would become one of the most successful startup accelerators in the world, launching companies like Airbnb, Dropbox, and Stripe.</p><figure><a href="https://mtlynch.io/aardvarkd/paul-jessica.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/53e93c463b952dad20690065db15139ee92137b6/fc5bf/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/96ff8919faaab7d0ae27a68b4740f3e2f9e7b071/3cf69/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/06b52690ffeaa7c495fb1929e9f3e57ff20dee73/9bce0/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/4441c047f25cc3b137a6acb171a7f3626733d231/4a499/aardvarkd/paul-jessica_hu9941cc2db587034bf8e896c230747b22_50884_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/08aadd025ec5b4c144c3b66837b6895279fe973e/e5212/aardvarkd/paul-jessica.webp 1428w" src="https://d33wubrfki0l68.cloudfront.net/08aadd025ec5b4c144c3b66837b6895279fe973e/e5212/aardvarkd/paul-jessica.webp" alt="" loading="lazy"></a><figcaption><p>Y Combinator co-cofounders Paul Graham and Jessica Livingston in 2005</p></figcaption></figure><p>Graham was 41 years old, and Livingston was 34. Seven years prior, Graham had sold his startup <a href="https://en.wikipedia.org/wiki/Viaweb">Viaweb</a> to Yahoo for $50M. He then became popular online for <a href="http://paulgraham.com/articles.html">his essays about startups and software</a>. Livingston was not active in the startup community at the time, having come from a career in marketing.</p><p>Graham and Livingston <a href="http://paulgraham.com/worked.html">had been dating for two years</a> but weren’t married yet. The documentary interviews them in the middle of Y Combinator’s first batch of startups, which included a then-unknown social media platform called <a href="https://en.wikipedia.org/wiki/Reddit">reddit</a>.</p><h3 id="reddit">reddit<a href="#reddit" arialabel="Anchor"> 🔗︎</a></h3><p>reddit had launched a few months before the documentary began filming, and it wasn’t yet on anyone’s radar.</p><p>At the time, reddit only allowed users to post links — there was no commenting. <a href="https://en.wikipedia.org/wiki/Fark">Fark</a>, <a href="https://en.wikipedia.org/wiki/Digg">digg</a>, and <a href="https://en.wikipedia.org/wiki/Slashdot">slashdot</a> were still the dominant platforms for social link sharing.</p><figure><a href="https://mtlynch.io/aardvarkd/reddit-2005.webp"><img sizes="(min-width: 768px) 650px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/84fe204e4f51f1e0c12e7637187960cf59b1484a/760b7/aardvarkd/reddit-2005_hu2c0c0e6d79446fe8fcd3dc887d88840e_19328_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/e91f66a691bfd8d5f2db4e41652fb02698ab7fbe/4a906/aardvarkd/reddit-2005_hu2c0c0e6d79446fe8fcd3dc887d88840e_19328_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/daf756f9e003d4765c38a2a40def188aa1e92058/0cdfa/aardvarkd/reddit-2005_hu2c0c0e6d79446fe8fcd3dc887d88840e_19328_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/8ac18e591887588d6a648951ec2abde2d650c822/1b0bc/aardvarkd/reddit-2005.webp 1073w" src="https://d33wubrfki0l68.cloudfront.net/8ac18e591887588d6a648951ec2abde2d650c822/1b0bc/aardvarkd/reddit-2005.webp" alt="" loading="lazy"></a><figcaption><p>The reddit homepage <a href="https://web.archive.org/web/20050804002153/http://www.reddit.com/">in 2005</a></p></figcaption></figure><p>Early in 2005, college roommates Steve Huffman and Alexis Ohanian drove to Boston to attend one of Paul Graham’s lectures about startups. After the talk, Graham had dinner with Huffman, Ohanian, and a few other attendees. The conversations inspired Graham to create Y Combinator, and reddit was in the first batch of investments.</p><figure><a href="https://mtlynch.io/aardvarkd/ohanian-swartz-huffman.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/ef1b3cd50fac19f534b0038169d1d2ec5ba5e7fe/2f30e/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/96e16e86f02abfb516ff72ff3455e14db5bfb3f6/0f843/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/09cc207b6404c5b9bca0643fe8cec0dc59d2aaf3/e3506/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/be78946da5849ec52fa9a97f0777609b62c86d13/37cff/aardvarkd/ohanian-swartz-huffman_hu7eee7e75df06811ff8abc8852d92ace0_57714_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/631d76c62e1604b848d638b68ac63c02906c8168/ed95a/aardvarkd/ohanian-swartz-huffman.webp 1857w" src="https://d33wubrfki0l68.cloudfront.net/631d76c62e1604b848d638b68ac63c02906c8168/ed95a/aardvarkd/ohanian-swartz-huffman.webp" alt="" loading="lazy"></a><figcaption><p>reddit co-founders (right to left) Alexis Ohanian, Aaron Swartz, and Steve Huffman in 2005</p></figcaption></figure><p>Aaron Swartz was 19 at the time of filming. He already impacted the early web as one of the authors of the <a href="https://www.rssboard.org/rss-validator/docs/rss1.html">RSS specification</a> and a founding contributor to <a href="https://creativecommons.org/">Creative Commons</a>.</p><p>An undergrad at Stanford in 2005, Swartz was also accepted into Y Combinator’s first batch. When his company stalled, Graham suggested he <a href="https://qz.com/594715/when-aaron-swartz-met-paul-graham-his-life-and-the-entire-internet-changed-forever">merge with reddit</a>.</p><h2 id="back-when-they-were-getting-started-they-were-terrified">“Back when they were getting started, they were terrified”<a href="#back-when-they-were-getting-started-they-were-terrified" arialabel="Anchor"> 🔗︎</a></h2><p>As a documentary, <em>Aardvark’d</em> is not very good. The filmmaker didn’t have much experience, so the shots are always uncomfortably close to people’s faces, often with harsh lighting and mediocre sound quality.</p><figure><a href="https://mtlynch.io/aardvarkd/joel-lighting.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/896e50a701dee377e4a1e98717140ffe4241d970/2b84d/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/75b9eff95ee0fdb2dddcfdf2ae35314da9676447/c1c43/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/e3e84d46d30e8bbdf6b8823b897e7b539a4286fd/6a0d0/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/f6fdd8fb038c95dc7badb37f02b83e2a0109c2d1/6061f/aardvarkd/joel-lighting_hufaaebc049afa6719b3d5b14315b1eabb_31040_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/7f054f49799f4b9b810498efb5d6758f4ca787da/9c196/aardvarkd/joel-lighting.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/7f054f49799f4b9b810498efb5d6758f4ca787da/9c196/aardvarkd/joel-lighting.webp" alt="" loading="lazy"></a><figcaption><p>Joel Spolsky isn’t this luminescent in real life.</p></figcaption></figure><p>The film flits from topic to topic without ever landing on a cohesive story. Is it about the interns’ project? Or is it about the interns themselves? Or is it a story about Fog Creek as a company?</p><p>Still, I found it compelling.</p><p>Towards the end of the movie, Jessica Livingston captures so crisply what makes the film engaging:</p><blockquote><p>A lot of these tech startup founders who are extremely successful, back when they were getting started, they were terrified.</p><p>They were very unsure of what they were doing. They questioned things, and I’m sure doubted themselves…</p><p>And so to see these people as vulnerable people at one point in time is interesting to me.</p></blockquote><p>This vulnerability is what makes the film’s interviews with Steve Huffman so fascinating.</p><p>Huffman is currently the target of widespread ire for <a href="https://techcrunch.com/2023/06/16/reddit-ceo-lashes-out-on-protests-moderators-and-third-party-apps/">cutting third-party clients out of the platform they helped build</a>. But in 2005, Huffman was just a lovably doofy kid. In his interview, he admits that he had such intense nightmares about reddit having an outage that he slept with his laptop in bed with him.</p><figure><div><p><a href="https://mtlynch.io/aardvarkd/steve-huffman-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/4cad2a9227adfb7d9f2e34253746eb67c9f3bbbb/d69e8/aardvarkd/steve-huffman-2005_hu1fd649e5a44e0fa4d467a9b63c5aa0cb_20354_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/12d06290846d781e4a2dbf223ffb99a978adfb9f/bab3f/aardvarkd/steve-huffman-2005_hu1fd649e5a44e0fa4d467a9b63c5aa0cb_20354_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/32c2b686b8c27bf8d7a7293225d9d29e3348b563/ee0cc/aardvarkd/steve-huffman-2005.webp 694w" src="https://d33wubrfki0l68.cloudfront.net/32c2b686b8c27bf8d7a7293225d9d29e3348b563/ee0cc/aardvarkd/steve-huffman-2005.webp" alt="" loading="lazy"></a></p><p><a href="https://mtlynch.io/aardvarkd/steve-huffman-2017.webp"><img sizes="(min-width: 768px) 487px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/5b65927e21e494dec47255b5bfa3350cc8502cdd/6eb8c/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/ad127a1fcd6c86d42672fdd9c1b04f47c97f66dd/57d45/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/c70a842cd04673fa13e9f9820a30664e5be5e68a/7c883/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/a025f9c655fbb463b157d258eb030942134abfd8/786ae/aardvarkd/steve-huffman-2017_huf0c9188eaacdc73221ff90330d14dcf5_77676_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/9d89070140875b4e056376d47f65881124fd2df0/0e862/aardvarkd/steve-huffman-2017.webp 1222w" src="https://d33wubrfki0l68.cloudfront.net/9d89070140875b4e056376d47f65881124fd2df0/0e862/aardvarkd/steve-huffman-2017.webp" alt="" loading="lazy"></a></p></div><figcaption><p>Steve Huffman in 2005 (left) and in 2017 (right) (photo <a href="https://www.flickr.com/photos/websummit/26487734439/in/photostream/">by Cody Glenn/Web Summit</a>, used under <a href="https://creativecommons.org/licenses/by/2.0/">CC-BY-2.0</a>)</p></figcaption></figure><h2 id="the-infuriating-launch-day-scene">The infuriating launch day scene<a href="#the-infuriating-launch-day-scene" arialabel="Anchor"> 🔗︎</a></h2><p>There’s one <em>Aardvark’d</em> scene that drives me crazy.</p><p>The main storyline of the documentary is the interns’ summer project. Originally codenamed Aardvark, the interns’ app would eventually take the name Copilot.</p><p>No, not the AI coding assistant.</p><p>Fog Creek Copilot was a tool that let people provide remote computer assistance to friends, family, and co-workers.</p><figure><a href="https://mtlynch.io/aardvarkd/fog-creek-copilot.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/23409a927744fe6b160bc82c5d95d5cb2ac38662/59dbd/aardvarkd/fog-creek-copilot_hu88a270a4988b0caa4249d12d4e581510_142212_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/6ceedfafcca0c1c5150f8b2b27e561d45b0a164e/5cce6/aardvarkd/fog-creek-copilot_hu88a270a4988b0caa4249d12d4e581510_142212_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/cbd46aef627a843cd4df5a3af6b16a2b0ddf9693/b0f81/aardvarkd/fog-creek-copilot_hu88a270a4988b0caa4249d12d4e581510_142212_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/8eaf26fdb814ac1f471ed615bd1923f060f5065b/0e4c7/aardvarkd/fog-creek-copilot.webp 1180w" src="https://d33wubrfki0l68.cloudfront.net/8eaf26fdb814ac1f471ed615bd1923f060f5065b/0e4c7/aardvarkd/fog-creek-copilot.webp" alt="" loading="lazy"></a><figcaption><p><a href="https://web.archive.org/web/20080829161613/https://www.copilot.com/">Fog Creek Copilot</a> let people provide remote computer assistance to friends, family, and co-workers.</p></figcaption></figure><p>So, it’s the end of the internship, and Fog Creek is finally launching Copilot. This is the make-or-break moment for all the work we’ve watched the interns do throughout the movie.</p><p>The interns and employees compete to predict when their first sale will come through. Some guessed it would happen within a minute of launch, while others thought it might take up to an hour.</p><figure><a href="https://mtlynch.io/aardvarkd/sale-predictions.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/77a3dee26ccb95585632070b20484ae577cb66e7/eb923/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/84b68954257292365d229b25d22dc111b68489ea/9a839/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/9cf01845e2d58d5119b0df6fc3fd6ca87dcbd592/d61d0/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/5b94919e46b133adac0407050da9ae55c050d344/1d99b/aardvarkd/sale-predictions_hubf8cb9bbc5b39764251a459b65156fd3_16094_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/351762b2a6b0c7f12405cf28ccf5f9a4d3adf7a3/3506a/aardvarkd/sale-predictions.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/351762b2a6b0c7f12405cf28ccf5f9a4d3adf7a3/3506a/aardvarkd/sale-predictions.webp" alt="" loading="lazy"></a><figcaption><p>Fog Creek employees and interns make optimistic predictions about the first sale of Copilot</p></figcaption></figure><p>But the sale doesn’t come. As each minute rolls by, the interns glumly cross out predictions that turned out to be too optimistic. You’re watching the team grow increasingly worried that their product might be a complete flop.</p><figure><div><p><a href="https://mtlynch.io/aardvarkd/cross-off.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/b2f9f3afaa07bf872ea0fccdc27a71456c505357/ef667/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/3a4e5891131acd19e4f3c80ad6edf6ceda823406/dd358/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/37179c3de783315eb6282f4dd4393dc78c37b34a/05eb3/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/a67b7754b5cf5f1bab12ac7e79cb553fd10bb217/d8f23/aardvarkd/cross-off_hubecf1245dbb195e4ad39995e4053da00_36416_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/0f46bce58df47e76846c1d85fa573e89041e1d40/bba52/aardvarkd/cross-off.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/0f46bce58df47e76846c1d85fa573e89041e1d40/bba52/aardvarkd/cross-off.webp" alt="" loading="lazy"></a></p><p><a href="https://mtlynch.io/aardvarkd/waiting.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/f977371713dac6621120b1b44773ce7baf477f73/b2bee/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/bd932c2733ad190f1d1f5a656e43adb9c82c0220/1ce15/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/a6026b06b1dbce26bb33a8961e8d2196b473746d/f21cd/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/959e90216e6fad13bb2f5e05de92d1ceeb3c78ea/2aa24/aardvarkd/waiting_hu6f790f07573b3d3b92f28bf76acc8ffa_47414_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/f15b11590d22654952bc76aa4943dede96e80137/c1d47/aardvarkd/waiting.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/f15b11590d22654952bc76aa4943dede96e80137/c1d47/aardvarkd/waiting.webp" alt="" loading="lazy"></a></p></div><figcaption><p>Fog Creek interns anxiously awaiting their first customer</p></figcaption></figure><p>As a founder, I found this moment extremely relatable. There have been so many times where I put weeks or months of work into something that I was sure people would love. Then, I launched it only to discover that I was completely wrong and nobody was interested.</p><p>But the thing about failed software launches is that the failure isn’t a moment — it’s the minutes then hours after launch as hope drains away. Even if you don’t get the results you want immediately, there’s a desperate possibility that it could land on the front page of Hacker News or fall into the lap of someone with a huge audience. But every minute that ticks by, you know your chances of success are creeping ever closer to zero.</p><p>The documentary does a great job of capturing that anxiously ambiguous time for the Fog Creek interns. And then it just… forgets what it was doing.</p><p>There’s no resolution whatsoever! We cut to the next scene, and Joel is popping champagne. It’s not even clear if there’s been a sale or if they’re just celebrating the launch. You never see anyone sighing in relief or admitting defeat.</p><figure><a href="https://mtlynch.io/aardvarkd/joel-champagne.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/a00174b50e67b146cc385ef6deb14b5df2affe52/5fd2b/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/7f8b0eb1d3cfc7bd586431c8c2aee34d78031965/a7ab3/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/e0c03db16a3d922f80470f6b0c9203d7485b8bd0/f5001/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/1bf4d4eea1778613c643d01f914aabf7ba8a7fb3/193b0/aardvarkd/joel-champagne_hu54d08428145867e9961f0d05af5f9d15_54712_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/b4b550a7496ddc486fb53d86ef48efdaa8f3007c/ee6fb/aardvarkd/joel-champagne.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/b4b550a7496ddc486fb53d86ef48efdaa8f3007c/ee6fb/aardvarkd/joel-champagne.webp" alt="" loading="lazy"></a><figcaption><p>What are we celebrating, exactly?</p></figcaption></figure><p>It would be like if you ended the story of Little Red Riding Hood by saying, “And then Little Red Riding Hood realized her grandmother was a wolf! Suddenly, the wolf threw her to the floor and bared his razor-sharp teeth inches from her neck. Anyway, she ended up being fine. The End.”</p><h2 id="quotable-moments">Quotable moments<a href="#quotable-moments" arialabel="Anchor"> 🔗︎</a></h2><p>The documentary’s interviews are fun overall, but a couple of quotes delighted me.</p><h3 id="paul-graham-on-developers-and-businesspeople">Paul Graham, on developers and businesspeople<a href="#paul-graham-on-developers-and-businesspeople" arialabel="Anchor"> 🔗︎</a></h3><blockquote><p><a href="https://mtlynch.io/aardvarkd/graham-no-business-guys.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/71bd689bd13cceff17a0f5fc204c06c1e388def6/f5e96/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/9ffd18cf53efd1c413b0c2be75e3fc684fc07c8b/79066/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/947b5443774d58657be16034c75f46e68c435431/bd312/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/41b807f25c86f222df38f713abf5063891777e4a/6e7f9/aardvarkd/graham-no-business-guys_hu546c5201b5ef7a32f64a7726c1664a97_34884_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/9b32ec765100cb3517fcd00d5bef4f1b951457ac/f2df9/aardvarkd/graham-no-business-guys.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/9b32ec765100cb3517fcd00d5bef4f1b951457ac/f2df9/aardvarkd/graham-no-business-guys.webp" alt="" loading="lazy"></a></p><p>I think the relationship between hackers and business guys — at least in the beginning — is that you need hackers, and you don’t need business guys.</p><p>-Paul Graham</p></blockquote><h3 id="aaron-swartz-on-schoolwork-vs-hobby-projects">Aaron Swartz, on schoolwork vs. hobby projects<a href="#aaron-swartz-on-schoolwork-vs-hobby-projects" arialabel="Anchor"> 🔗︎</a></h3><blockquote><p><a href="https://mtlynch.io/aardvarkd/aaron-swartz.webp"><img sizes="(min-width: 768px) 600px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/17fca5b90afcf0bb2d98851297e5ed0bc803a534/bd3db/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/7a576c467f5024978323723f30e9294440080211/7be3d/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/ceceb36f111764c1260c31f628c79890917bf32d/a735a/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/3b39a830aef5f0c2f264d572d455fa985052595b/0c6bc/aardvarkd/aaron-swartz_hu20c1677275e6edb5a2130596f8d972ff_29882_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/4d76efaa9a9a800829e96cb0df3a98902e6eb58e/b2676/aardvarkd/aaron-swartz.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/4d76efaa9a9a800829e96cb0df3a98902e6eb58e/b2676/aardvarkd/aaron-swartz.webp" alt="" loading="lazy"></a></p><p>You don’t have to be in this fake world of school doing some silly assignment that has no real purpose. You can build something that’s actually useful. You can go put it up on your website, and people can really use it. If you can build something real, why spend your life doing stuff that’s fake?</p><p>-Aaron Swartz</p></blockquote><h2 id="fog-creek-didnt-finance-the-documentary">Fog Creek didn’t finance the documentary<a href="#fog-creek-didnt-finance-the-documentary" arialabel="Anchor"> 🔗︎</a></h2><p>In researching the documentary, one of the big surprises was that Fog Creek didn’t finance it.</p><p>I had remembered <em>Aardvark’d</em> as essentially a vanity project that Fog Creek funded as advertising. Re-reading the <a href="https://www.joelonsoftware.com/2005/03/23/documentary-filmmaker-wanted/">job posting</a>, I realized it was more of an angel investor model:</p><blockquote><p>We’re looking for a filmmaker who will finance and make the film themselves and own the rights. We want someone who can promote the film to typical documentary outlets.</p></blockquote><p>Spolsky said in his blog that he paid the filmmaker a $5k stipend and $5k for expenses. In <a href="https://web.archive.org/web/20230712203549/https://www.inc.com/magazine/20080101/how-hard-could-it-be-the-four-pillars-of-organic-growth.html">a later column</a> he wrote for <em>Inc.</em> magazine, he says, “We ended up paying the filmmaker about $30,000.”</p><p>Letting an external filmmaker assume ownership worked, apparently.</p><p>Fog Creek no longer cares about Copilot or <em>Aardvark’d</em>. They’ve taken <a href="https://web.archive.org/web/20060208042202/http://www.projectaardvark.com/">the interns’ development blog</a> offline, and Joel has let many of the Copilot links on his blog die, but the filmmaker still cared enough about <em>Aardvark’d</em> to upload a high-def copy to YouTube 18 years later.</p><h2 id="the-artifacts-of-aardvark">The artifacts of Aardvark<a href="#the-artifacts-of-aardvark" arialabel="Anchor"> 🔗︎</a></h2><p>After Fog Creek released Copilot, Joel Spolsky <a href="https://www.joelonsoftware.com/2005/08/17/the-project-aardvark-spec/">published the original functional spec</a>. The link to the actual PDF is now dead, but the Internet Archive <a href="https://web.archive.org/web/20051028171624/https://www.joelonsoftware.com/RandomStuff/copilot_spec.pdf">has a copy</a>.</p><figure><a href="https://mtlynch.io/aardvarkd/aardvark-spec.webp"><img sizes="(min-width: 768px) 300px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/953c49c2afaaaf28b64bd2f5e45c4c00af937177/5a036/aardvarkd/aardvark-spec_hubcc8d6553548ae6bc240d70571882cc1_45976_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/affc18ebd0c667516e24f719ff384f38a034e822/3d36f/aardvarkd/aardvark-spec_hubcc8d6553548ae6bc240d70571882cc1_45976_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/c0be49fcba5446fcd4d12a21245bed1403aea77f/a8b2f/aardvarkd/aardvark-spec_hubcc8d6553548ae6bc240d70571882cc1_45976_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/61cb84c45842d2e4de453423a66755de540aac08/83b76/aardvarkd/aardvark-spec.webp 897w" src="https://d33wubrfki0l68.cloudfront.net/61cb84c45842d2e4de453423a66755de540aac08/83b76/aardvarkd/aardvark-spec.webp" alt="" loading="lazy"></a><figcaption><p>Joel Spolsky’s <a href="https://web.archive.org/web/20051028171624/https://www.joelonsoftware.com/RandomStuff/copilot_spec.pdf">original functional spec</a> for Fog Creek Copilot (codename Aardvark)</p></figcaption></figure><p>Fog Creek adapted open-source VNC code for the Copilot client, so they were required under the <a href="https://en.wikipedia.org/wiki/GNU_General_Public_License">GPL</a> to publish their source code.</p><p>I unfortunately couldn’t find the source code for the original version of Copilot that the interns wrote. The <a href="https://web.archive.org/web/20150911071232/https://www.copilot.com/copilot_helper_src.zip/">earliest version I could find</a> was from 2011. By that point, they had rewritten the C# codebase in C++.</p><h2 id="what-happened-to-the-interns">What happened to the interns?<a href="#what-happened-to-the-interns" arialabel="Anchor"> 🔗︎</a></h2><p><a href="https://tghw.com/">Tyler Griffin Hicks-Wright</a> accepted a full-time position at Fog Creek after his internship and worked there for several years. He left in 2012 to start a photo backup startup called Snaposit. He sought funding from his <em>Aardvark’d</em> co-star, Paul Graham, but <a href="https://tghw.com/blog/well-that-sucks-what-else-you-got">Y Combinator rejected Tyler’s pitch</a>. Tyler shuttered the business a year later.</p><figure><a href="https://mtlynch.io/aardvarkd/tyler-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/b55ea861098db769131b14b34e8102fd6c084c10/74224/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/642a53820a1b283dce8cd6fbd492d9c0bb782dd7/4af0a/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/a5e7d17ecc38e9b6c2d9fe44ca5d8d048607ae33/1218f/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/6b8ac52a6a406f5926c7531f0fb39ae712494b44/d0ba8/aardvarkd/tyler-2005_hub71d24486fc38f550fd998852d0e5511_111468_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/156cdbfe4b0ff77e787fd841a009cbea2843d290/db0e6/aardvarkd/tyler-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/156cdbfe4b0ff77e787fd841a009cbea2843d290/db0e6/aardvarkd/tyler-2005.webp" alt="" loading="lazy"></a><figcaption><p>Tyler Griffin Hicks-Wright, software development intern on Aardvark</p></figcaption></figure><p>In 2014, Fog Creek restructured to spin out <a href="https://en.wikipedia.org/wiki/Trello">Trello</a>, its ultra-successful project management app. As part of the restructuring, Fog Creek sold the Copilot product to Tyler <a href="https://tghw.com/blog/copilot-coming-full-circle">for an undisclosed sum</a>. He ran Copilot on the side for eight years before <a href="https://news.ycombinator.com/item?id=31192812">shutting it down in April 2022</a>.</p><p><a href="https://twitter.com/mikelehen">Michael Lehenbauer</a> took a job at Microsoft after his <em>Aardvark’d</em> internship. He left in 2011 to join Firebase as employee #2, which I can only assume means he’s now relaxing on a superyacht somewhere.</p><figure><a href="https://mtlynch.io/aardvarkd/michael-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/b2f41295c39759fb123ea53ffa3748187b2f3673/9ef66/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/4a0e360455901d9474dc04034b90aa69c04c71a4/b09af/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/5b1f66b362e7653d119408a54523955796e511ed/fd8a2/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/7c097014c9e1efe64d686f7d58446a861727bf8b/cd8de/aardvarkd/michael-2005_hu4136fb84222d869ff5bb50598387cdb1_44226_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/b5416abe336480ea4d63a7f7b0bd7bb74447aba4/2e653/aardvarkd/michael-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/b5416abe336480ea4d63a7f7b0bd7bb74447aba4/2e653/aardvarkd/michael-2005.webp" alt="" loading="lazy"></a><figcaption><p>Michael Lehenbauer, software development intern on Aardvark</p></figcaption></figure><p><a href="https://www.bitquabit.com/meta/about/">Ben Pollack</a> worked at Fog Creek for several years. He seems to have <del>never caught the startup bug</del> (<strong>Edit</strong>: Ben <a href="https://news.ycombinator.com/item?id=37435723">responded</a> to say that he has worked mainly at startups, though not as early-stage as Fog Creek), mainly working at larger, more established companies. He has followed in Joel’s footsteps in blogging, as he writes regularly about software, technology, and his passion for functional programming, sometimes engaging in <a href="https://web.archive.org/web/20090523175306/http://hicks-wright.net/blog/my-language-features-are-your-libraries/">geeky online arguments with Tyler</a>.</p><figure><a href="https://mtlynch.io/aardvarkd/ben-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/16d910dc6f1a86b12a129b0385f3dabb78cc215d/f5e44/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/c8a6a0c7d3b6a164268aff02d7550286c40ce684/2c63a/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/0216112627473a1a190491c886d40b89ed0b7c44/97085/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/450eaa8ee6ee9f9d4083abddffe51d9a83ba46a1/fb850/aardvarkd/ben-2005_huc25fc7f3980c979e4044b1e839fe325e_64530_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/cbdc17f3dcbfa11d5506d3e71bf2d4df17d7cca7/26cb4/aardvarkd/ben-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/cbdc17f3dcbfa11d5506d3e71bf2d4df17d7cca7/26cb4/aardvarkd/ben-2005.webp" alt="" loading="lazy"></a><figcaption><p>Ben Pollack, software development intern on Aardvark</p></figcaption></figure><p><a href="https://www.yaronguez.com/">Yaron Guez</a> worked for several medtech and enterprise-y SaaS businesses. He’s the co-founder of <a href="https://www.trestian.com/#about">a buzzwordy consulting firm</a> and a dev manager at <a href="https://www.servicenow.com/">ServiceNow</a>.</p><figure><a href="https://mtlynch.io/aardvarkd/yaron-2005.webp"><img sizes="(min-width: 768px) 500px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/aca81e42b93058d7213018cd33fc4db2d7e2f316/c7e2a/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/48ba04f7095964e31b4b3a152bc19cd45208a029/effb0/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/320cb363169148f452450f9a4c6e8537a0f61bb2/735b9/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/f615af202abf83435e4c9b048611b02ba8f1d326/ea544/aardvarkd/yaron-2005_hu43663b01785d272699e3fdb004b06a1c_83374_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/cac3ce70b0adfa13c08a2664b0e868a842c29608/b0a62/aardvarkd/yaron-2005.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/cac3ce70b0adfa13c08a2664b0e868a842c29608/b0a62/aardvarkd/yaron-2005.webp" alt="" loading="lazy"></a><figcaption><p>Yaron Guez, project management intern on Aardvark</p></figcaption></figure><h2 id="liz-gordons-satisfying-career-trajectory">Liz Gordon’s satisfying career trajectory<a href="#liz-gordons-satisfying-career-trajectory" arialabel="Anchor"> 🔗︎</a></h2><p>One of the most affable characters in <em>Aardvark’d</em> is Liz Gordon, Fog Creek’s then recently-hired office manager.</p><p>Liz is presented in the film as the non-nerd outsider at Fog Creek. She ends up having to coddle and indulge a bunch of college interns, most of whom have somewhat inflated egos as subjects of a documentary.</p><figure><a href="https://mtlynch.io/aardvarkd/liz-gordon-laughing.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/38c8c8cfc88f7b5cd126ef321c6b09f26356a01e/75d01/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/a80d009c63bb354911ccdc80d7fadf073aedc93f/c02f3/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/ec14070f8a1f978cfc1f391259bc561f0f7b7093/a2a7e/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/f05f90d51f472a6532563341527612247d131154/4cb24/aardvarkd/liz-gordon-laughing_hu34339979105ac0063da3fd56ad68f5c6_28060_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/65744c13d0c660bfb1839d67ed0db74863dfda8a/b39b6/aardvarkd/liz-gordon-laughing.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/65744c13d0c660bfb1839d67ed0db74863dfda8a/b39b6/aardvarkd/liz-gordon-laughing.webp" alt="" loading="lazy"></a><figcaption><p>“There’s always a better way to do something, and that’s what [the interns] are always trying to figure out… what star trooper is going to kick some other superhero’s butt, and how they’re going to do it. Or what’s the best way to use a lightsaber.” -Liz Gordon</p></figcaption></figure><p>In one scene, she’s being interviewed on her birthday. Nobody remembered, so she had to buy herself a birthday hat. While she’s explaining this to the camera, one of her co-workers <em>shushes</em> her for making too much noise. On her birthday!</p><figure><a href="https://mtlynch.io/aardvarkd/liz-gordon-shush.webp"><img sizes="(min-width: 768px) 700px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/f628e73cc5733ab19e839fd0f6ff922c32e9a46f/bcc14/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/42d3aa812c2dab1996ca0f6b2c8dcce5b537d659/4e2ab/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/05fd9a85f1fe688829b8a025c60497a4f3baf4f5/6da32/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/41425748ebbd2d2a7453e0138784ec65548beb81/b7988/aardvarkd/liz-gordon-shush_huaa228325455cda16e594b64aea9b6360_64946_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/371a7c65d321981697aec1222a710d349c1f2523/30cbb/aardvarkd/liz-gordon-shush.webp 1280w" src="https://d33wubrfki0l68.cloudfront.net/371a7c65d321981697aec1222a710d349c1f2523/30cbb/aardvarkd/liz-gordon-shush.webp" alt="" loading="lazy"></a><figcaption><p>Liz Gordon being shushed on her birthday at the Fog Creek office</p></figcaption></figure><p>It turns out Liz stuck with Fog Creek and rose along with the company, eventually taking on the role of Head of People.</p><p>When Fog Creek spun out Trello into its own company, Liz became Trello’s VP of People and retained the position when Atlassian acquired Trello.</p><p>She’s now <a href="https://www.linkedin.com/in/elizabeth-hall-8939551b/">Liz Hall</a> and is a C-suite executive at <a href="https://splashthat.com/">Splash</a>, where I presume nobody tries to shush her on her birthday.</p><figure><a href="https://mtlynch.io/aardvarkd/liz-hall.webp"><img sizes="(min-width: 768px) 450px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/dbb7ef67393b23a7b523de71c6082b49568ebe62/6d9e1/aardvarkd/liz-hall_hua43e58e9b7537fa56aab7143ab6a92fa_41168_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/9b0d0c03ae8665d31fa30ed8b1b19420bfcd0acb/4ab1a/aardvarkd/liz-hall_hua43e58e9b7537fa56aab7143ab6a92fa_41168_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/1cbb5c6523fd2af354b96e50440b9c2560a2ce55/57017/aardvarkd/liz-hall_hua43e58e9b7537fa56aab7143ab6a92fa_41168_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/ebf2328ba378d1735ae419899052b693b45cc08f/69574/aardvarkd/liz-hall.webp 916w" src="https://d33wubrfki0l68.cloudfront.net/ebf2328ba378d1735ae419899052b693b45cc08f/69574/aardvarkd/liz-hall.webp" alt="" loading="lazy"></a><figcaption><p>Liz Hall is now Chief People Officer at Splash.</p></figcaption></figure><p><strong>Edit</strong>: According to <a href="https://news.ycombinator.com/item?id=37435723">a comment from Ben Pollack</a> in response to this post, the sound was not actually a “shush”:</p><blockquote><p>this coworker right here was starting to say “shit fuck shit dammit” on camera as he discovered that a stale precompiled header was getting picked up on the build box and then realized Lerone was rolling, so you’re hearing me halt myself before saying a pile of profanity on camera.</p></blockquote><h2 id="_make-better-software-the-training-series_"><em>Make Better Software: The Training Series</em><a href="#_make-better-software-the-training-series_" arialabel="Anchor"> 🔗︎</a></h2><p>Five years later, Fog Creek collaborated once again with <em>Aardvark’d</em> producer, Boondoggle Media, on a video course called <a href="https://boondogglemedia.com/project/make-better-software/"><em>Make Better Software: The Training Series</em></a>. Fog Creek <a href="https://web.archive.org/web/20110711014829/http://training.fogcreek.com/order.html">used to sell this course</a> for $2,000, but now Boondoggle Media has released it <a href="https://www.youtube.com/playlist?list=PLcIkt5s7w8D0ywp0CBmNFWRTFZic3pWNn">free on YouTube</a>.</p><p>I’m watching it, and it’s pretty good. It’s kind of like a video version of Joel Spolsky’s best blog posts. The series shows how Joel puts his many software philosophies into practice at Fog Creek.</p><p>Most of the Fog Creek characters from <em>Aardvark’d</em> are still there. You get to see slightly more grown-up versions of Tyler and Ben, who had at that point had several years of real-world experience.</p><figure><div><p><a href="https://mtlynch.io/aardvarkd/tyler-later.webp"><img sizes="(min-width: 768px) 400px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/23009fdde59c2e50233274f1612837a76908056e/d451a/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/3129aa5e18e7ba570df7c26d27121516791fc2b3/db230/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/a7bf9bf7f546f5cbbcbc07fbca16f0dfa28f7d80/b5fee/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/fdf5d210b2ec97c3cef0db2629edfd40401890bd/51a21/aardvarkd/tyler-later_huf51863011ae9053b20d1bf7c1c0b2f8f_115348_1200x0_resize_q90_h2_lanczos_2.webp 1200w,
https://d33wubrfki0l68.cloudfront.net/4c4485020dfcb1425cd31d1b897a4b83dda75588/93f05/aardvarkd/tyler-later.webp 1221w" src="https://d33wubrfki0l68.cloudfront.net/4c4485020dfcb1425cd31d1b897a4b83dda75588/93f05/aardvarkd/tyler-later.webp" alt="" loading="lazy"></a></p><p><a href="https://mtlynch.io/aardvarkd/ben-later.webp"><img sizes="(min-width: 768px) 441px, 98vw" srcset="https://d33wubrfki0l68.cloudfront.net/fe760f0edc0efa7fc2c49c3cab526972d5d8bfc5/832e6/aardvarkd/ben-later_hu02e0a26f26731e57c7561aa329e4ddda_43084_300x0_resize_q90_h2_lanczos_2.webp 300w,
https://d33wubrfki0l68.cloudfront.net/e2015454c0b28eae6c417470ac64054b3b3216d9/8442c/aardvarkd/ben-later_hu02e0a26f26731e57c7561aa329e4ddda_43084_600x0_resize_q90_h2_lanczos_2.webp 600w,
https://d33wubrfki0l68.cloudfront.net/00e85ba8150c8e07239e2431361011f2d162904a/84a9e/aardvarkd/ben-later_hu02e0a26f26731e57c7561aa329e4ddda_43084_800x0_resize_q90_h2_lanczos_2.webp 800w,
https://d33wubrfki0l68.cloudfront.net/b6e2d070fdcf22b9e6ac78150cd9dedf152fed15/73170/aardvarkd/ben-later.webp 808w" src="https://d33wubrfki0l68.cloudfront.net/b6e2d070fdcf22b9e6ac78150cd9dedf152fed15/73170/aardvarkd/ben-later.webp" alt="" loading="lazy"></a></p></div><figcaption><p>Tyler (left) and Ben (right) appear as full-time Fog Creek employees in <em>Make Better Software</em> five years after the filming of <em>Aardvark’d</em>.</p></figcaption></figure><h2 id="watch-the-films">Watch the films<a href="#watch-the-films" arialabel="Anchor"> 🔗︎</a></h2><p>Both movies are available for free on YouTube. If you’re a fan of Joel Spolsky, Paul Graham, or Aaron Swartz, I think <em>Aardvark’d</em> is worth a watch.</p><ul><li><a href="https://www.youtube.com/watch?v=YbrkZ07LKbk"><em>Aardvark’d: 12 Weeks with Geeks</em></a></li></ul><p>And if you’re a superfan of Joel Spolsky’s blog, <a href="https://www.joelonsoftware.com/">Joel on Software</a>, you’ll enjoy <em>Make Better Software</em>.</p><ul><li><a href="https://www.youtube.com/playlist?list=PLcIkt5s7w8D0ywp0CBmNFWRTFZic3pWNn"><em>Make Better Software: The Training Series</em></a></li></ul><blockquote><p lang="en" dir="ltr">An official copy of the 2005 documentary Aardvark'd was recently published on YouTube. It has just 109 views despite interviews with Paul Graham months after starting YC, reddit's co-founders months after reddit's launch, and Joel Spolsky before Trello/SO <a href="https://t.co/Km8MPpySm1">https://t.co/Km8MPpySm1</a></p>— Michael Lynch (@deliberatecoder) <a href="https://twitter.com/deliberatecoder/status/1700140534126244021?ref_src=twsrc%5Etfw">September 8, 2023</a></blockquote></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[TSMC warns AI chip crunch will last another 18 months (147 pts)]]></title>
            <link>https://www.theregister.com/2023/09/08/tsmc_ai_chip_crunch/</link>
            <guid>37432948</guid>
            <pubDate>Fri, 08 Sep 2023 13:03:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theregister.com/2023/09/08/tsmc_ai_chip_crunch/">https://www.theregister.com/2023/09/08/tsmc_ai_chip_crunch/</a>, See on <a href="https://news.ycombinator.com/item?id=37432948">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="body">
<p>Bad news for anyone looking to get their hands on Nvidia's top specced GPUs, such as the A100 or H100: it's not going to get any easier to source the parts until at least the end of 2024, TSMC has warned.</p>
<p>The problem, it seems, isn't that TSMC – which fabricates not just those GPUs for Nvidia but also components for AMD, Apple, and many others – can't make enough chips. Rather, a lack of advanced packaging capacity used to stitch the silicon together is holding up production, TSMC chairman Mark Liu told <a href="https://asia.nikkei.com/Business/Tech/Semiconductors/TSMC-sees-AI-chip-output-constraints-lasting-1.5-years" rel="nofollow">Nikkei Asia</a>.</p>
<p>According to Liu, TSMC is only able to meet about 80 percent of demand for its chip on wafer on substrate (CoWoS) packaging technology. This is used in some of the most advanced chips on the market today – particularly those that rely on high-bandwidth memory (HBM) which is ideal for AI workloads.</p>

    

<p>Liu expects this is a temporary bottleneck in the production of machine-learning accelerators and that additional CoWoS capacity should come online within a year and a half. Incidentally, TSMC recently announced plans to <a href="https://www.theregister.com/2023/07/26/tsmc_29b_chip_plant_taiwan/">expand</a> its advanced packaging capacity in Taiwan with a $3 billion facility at the Tongluo Science Park in Miaoli County.</p>

        


        

<p>Until TSMC can bring additional capacity online, Nvidia's H100 and older A100 – which power many popular generative AI models, such as GPT-4 – are at the heart of this shortage. However, it's not just Nvidia. AMD's upcoming Instinct MI300-series accelerators – which it <a href="https://www.theregister.com/2023/06/13/amd_epyc_announcement/">showed off</a> during its Datacenter and AI event in June – make extensive use of CoWoS packaging technology.</p>
<p>AMD's MI300A APU is currently sampling with customers and is slated to <a href="https://www.nextplatform.com/2023/06/14/the-third-time-charm-of-amds-instinct-gpu/">power</a> Lawrence Livermore National Laboratory's El Capitan system, while the MI300X GPU is due to start making its way into customers' hands in Q3.</p>

        

<p>We've reached out to AMD for comment on whether the shortage of CoWoS packaging capacity could impact availability of the chip and we'll let you know if we hear anything back.</p>
<ul>

<li><a href="https://www.theregister.com/2023/09/05/intel_tower_amd/">After failed takeover, Intel and Tower Semi aren't giving up on the relationship</a></li>

<li><a href="https://www.theregister.com/2023/09/01/rapidus_hiring_fab/">Rapidus ramps as construction begins on 2nm wafer fab</a></li>

<li><a href="https://www.theregister.com/2023/08/24/china_us_tech_restrictions/">China cooks covert chips, recruits global geeks to dodge US restrictions</a></li>

<li><a href="https://www.theregister.com/2023/08/18/ai_datacenter_evolution/">Our AI habit is already changing the way we build datacenters</a></li>
</ul>
<p>It's worth noting that TSMC's CoWoS isn't the only packaging tech out there. Samsung, which is <a href="https://www.bloomberg.com/news/articles/2023-09-01/samsung-surges-6-on-talk-it-s-joining-nvidia-s-ai-suppliers#xj4y7vzkg" rel="nofollow">rumored</a> to pick up some of the slack for the production of Nvidia GPUs, has I-Cube and H-Cube for 2.5D packaging and X-Cube for 3D packaging.</p>
<p>Intel, meanwhile, packages several of the chiplets used in its Ponte Vecchio <a target="_blank" href="https://www.theregister.com/2022/11/09/intel_max/">GPU Max</a> cards, but doesn't rely on CoWoS tech to stitch them together. Chipzilla has developed its own advanced packaging tech, which can work with chips from different fabs or process nodes. It's called embedded multi-die interconnect bridge (EMIB) for 2.5D packaging and Foveros for vertically stacking chiplets on top of one another. ®</p>                                
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[NYPD spent millions to contract with firm banned by Meta for fake profiles (200 pts)]]></title>
            <link>https://www.theguardian.com/us-news/2023/sep/08/new-york-police-tracking-voyager-labs-meta-contract</link>
            <guid>37431962</guid>
            <pubDate>Fri, 08 Sep 2023 10:45:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/us-news/2023/sep/08/new-york-police-tracking-voyager-labs-meta-contract">https://www.theguardian.com/us-news/2023/sep/08/new-york-police-tracking-voyager-labs-meta-contract</a>, See on <a href="https://news.ycombinator.com/item?id=37431962">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>New York law enforcement agencies have spent millions of dollars to expand their capabilities to track and analyze social media posts, new documents show, including by contracting with a surveillance firm accused of improperly scraping social media platforms for data.</p><figure id="dd2d329d-bc92-47a3-ba67-b508073654a9" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" deferuntil="idle" props="{&quot;richLinkIndex&quot;:1,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/us-news/2023/sep/05/nypd-protest-reform-lawsuit-george-floyd&quot;,&quot;text&quot;:&quot;NYPD agrees to ‘significantly’ change how it handles protests in the city&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;elementId&quot;:&quot;dd2d329d-bc92-47a3-ba67-b508073654a9&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;display&quot;:0,&quot;theme&quot;:0,&quot;design&quot;:0}}" config="{&quot;renderingTarget&quot;:&quot;Web&quot;}"></gu-island></figure><p>Documents obtained by the Surveillance Technology Oversight Project (Stop), a privacy advocacy non-profit and shared with the Guardian, reveal the New York police department in 2018 entered a nearly $9m contract with Voyager Labs, a surveillance company that has been sued by Meta for using nearly 40,000 fake Facebook accounts to collect data on an <a href="https://www.theguardian.com/technology/2023/jan/12/meta-voyager-labs-surveillance-fake-accounts" data-link-name="in body link">estimated 600,000 users.</a></p><p>NYPD purchased Voyager Labs products that the company claims can use artificial intelligence to analyze online human behavior and detect and predict fraud and crimes, the documents show.</p><p>A separate document reveals a contract between the Queens district attorney and Israeli firm Cobwebs Technologies, which also offers social network mapping products, as well as tools to track <a href="https://theintercept.com/2023/07/26/texas-phone-tracking-border-surveillance/" data-link-name="in body link">location</a> information through phones. It’s unclear how much that contract is worth.</p><p>Law enforcement across the United States have worked with social media analytics companies for years, hoping to more effectively and efficiently collect and make sense of the hordes of personal information available on the internet.</p><p>But experts have argued the practice can cross ethical and legal lines, particularly when used to access private information, make inferences or predict future criminality based on the content posted on social media, or otherwise help law enforcement skip obtaining subpoenas and warrants before gathering information on someone.</p><p>William Owens, the communications director at Stop, said there’s often also little public information available on law enforcement’s contracts with private surveillance companies, which make it difficult to hold law enforcement accountable to existing laws that protect people against privacy violations and unreasonable searches and seizures. “It takes something like a [Freedom of Information Law] request to then receive any information from the NYPD, which often is redacted,” he said.</p><p>The NYPD contract showed the department purchased Voyager Labs tools, Voyager Analytics and Genesis, for nearly $9m in 2018 and paid over $1.6m to renew the services in 2021. And the department confirmed to the Guardian it is still working with Voyager.</p><p>As the Guardian previously <a href="https://www.theguardian.com/us-news/2021/nov/17/police-surveillance-technology-voyager" data-link-name="in body link">reported</a>, Voyager Labs pitches itself as a software company that helps law enforcement surveil and investigate people by pulling together and reconstructing their entire digital lives.</p><p>Internal documents the civil rights organization The Brennan Center obtained and <a href="https://www.theguardian.com/us-news/2021/nov/17/police-surveillance-technology-voyager" data-link-name="in body link">shared with the Guardian</a> in 2021 show that Voyager tells its clients its analytics software can map out a person’s posts and their social connections. That includes the direct connections on social media platforms, as well as “indirect” connections or people with whom the subject of the investigation has at least four mutual friends. The company’s user guide indicates this allows the software to “unearth previously unknown middlemen or instances of improper association”. Even if someone deletes a friend, the company maintains an archive of their former connection.</p><p>The documents also show Voyager Analytics enables clients to create “avatars” or fake social media profiles to “collect and analyze information that is otherwise inaccessible”, a feature that has drawn the ire of social media companies. Facebook-parent company Meta sued in January to banVoyager from accessing any of its services. At the time, Meta alleged Voyager had made 38,000 fake Facebook and Instagram accounts. Months later, Meta said it discovered Voyager had created 17,000 new fake accounts, despite revoking the company’s access to Facebook and Instagram and sending two separate cease-and-desist letters. Voyager has filed to dismiss the lawsuit and denies making fake accounts<strong>. </strong></p><p>It’s hard to tell exactly how the NYPD is using Voyager software, given the lack of transparency into the contract.</p><p>But the department <a href="https://www.nyc.gov/assets/nypd/downloads/pdf/public_information/post-final/social-network-analysis-tools-nypd-impact-and-use-policy_4.9.21_final.pdf" data-link-name="in body link">did describe its overall policy on social network analysis tools</a> in a 2021 report on the privacy implications of the tools. In the paper, the department notes that it uses such tools to discover “information relevant to investigations and to address public safety concerns”.</p><p>The department uses the tools to analyze both publicly available information and “information that is viewable as a result of user privacy settings or practices”, according to the document. The latter is ambiguously phrased, but New York police are legally permitted to use fake social media profiles and if someone unknowingly accepts a friend request from a cop it counts as consent, according to Stop legal director David Siffert.</p><figure data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.NewsletterSignupBlockElement"><a data-ignore="global-link-styling" href="#EmailSignup-skip-link-15">skip past newsletter promotion</a><p id="EmailSignup-skip-link-15" tabindex="0" aria-label="after newsletter promotion" role="note">after newsletter promotion</p></figure><p>Social media analytics tools may also be used to find connections between potential subjects of a criminal investigation, the department stipulated in the paper, and to notify police when a person whose profile they have been tracking posts something new and collect and archive that new information.</p><p>NYPD declined to answer detailed questions about how it uses the tools. A spokesperson said in an emailed statement that “offenders” increasingly “utilize social media in furtherance of their unlawful activities” and that “Voyager assists the Department in preventing victimization and apprehending these offenders”. They do not use “features that would be described as predictive of future criminality”, the spokesperson added.</p><p>Voyager Labs would not comment on specific contracts but a spokesperson, William Colston, said the company was proud that governmental and law enforcement organizations have successfully used its platforms.</p><p>There are fewer details about Cobwebs Technologies and the Queens district attorney’s contract with the firm. The DA posted a notice in the April issue of the city record, an official journal for city agencies to share legal information such as contract procurements, that it had entered into a year-long contract with Cobwebs for its Tangles and Webloc products.</p><p>Much like Voyager, Cobwebs says Tangles, its web investigation platform, can help “easily identify new threats, reveal hidden connections” by analyzing personal and other data available on the internet. A company video shows the software may use <a href="https://www.vice.com/en/article/xgynn4/company-helping-irs-go-undercover-cobwebs-technologies" data-link-name="in body link">facial recognition and image recognition</a> in its processes and, like Voyager, maps out potential connections between people based on data from the internet and social media to create a “detailed” target profile.</p><p>An <a href="https://web.archive.org/web/20210725164419/https://cobwebs.com/products/location-intelligence-system/" data-link-name="in body link">archived</a> landing page on Cobweb’s site describes Webloc as a “location intelligence platform that provides access to vast amounts of location-based data in any specified geographic location”. The website does not specify where the tool gets that data. But a <a href="https://govtribe.com/file/government-file/lsj-rfq-ssa-geoint-webloc-swa-dot-pdf" data-link-name="in body link">2021 contract with the Navy</a> indicates Webloc collects location information through mobile phones in addition to other personal data such as demographic information and what apps are installed on devices.</p><p>The Queens DA declined to provide details on how it uses Coweb’s products, but did specify it does not use or subscribe to the location tracking feature the company offers and only accesses public information.</p><p>A spokesperson for Cobwebs, AJ Guenther, said the company does not comment on specific law enforcement contracts but said that Cobwebs operates<em> </em>“according to the law and we adhere to strict standards and regulations, like GDPR in the EU, in respect to privacy protection”.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Touch Pianist (643 pts)]]></title>
            <link>http://touchpianist.com/</link>
            <guid>37431644</guid>
            <pubDate>Fri, 08 Sep 2023 09:56:08 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://touchpianist.com/">http://touchpianist.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37431644">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="non-canvas">
        <!-- <span class="glyphicon glyphicon-refresh gly-spin" id="pre-preload-spin"></span> -->
        <p><span>Loading Touch Pianist...</span>
        <span id="browser-notice">Chrome highly recommended.</span></p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[PgBouncer is useful, important, and fraught with peril (187 pts)]]></title>
            <link>https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html</link>
            <guid>37431560</guid>
            <pubDate>Fri, 08 Sep 2023 09:43:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html">https://jpcamara.com/2023/04/12/pgbouncer-is-useful.html</a>, See on <a href="https://news.ycombinator.com/item?id=37431560">Hacker News</a></p>
<div id="readability-page-1" class="page"><section><p><img src="https://cdn.uploads.micro.blog/98548/2023/e0723a5982.png" alt=""></p>
<p>To start, I want to say that I’m appreciative that PgBouncer exists and the work its open source maintainers put into it. I also love working with PostgreSQL, and I’m thankful for the incredible amount of work and improvements that go into it as well.</p>
<p>I also think community and industry enthusiasm around Postgres is at an all time high. There are more managed hosting options than ever (<a href="https://www.crunchydata.com/">Crunchy Data</a>, <a href="https://render.com/docs/databases">Render</a>, <a href="https://fly.io/docs/postgres/">Fly.io</a>, and on and on), deep extensions like <a href="https://postgresml.org/">PostgresML</a>, <a href="https://www.citusdata.com/">Citus</a> and <a href="https://www.timescale.com/">Timescale</a>, serverless options like <a href="https://neon.tech/">Neon</a>, and real-time services like <a href="https://supabase.com/">Supabase</a> with Postgres at their center. Postgres is a robust, advanced and <em>fast</em> RDBMS capable of handling the needs of most every application.</p>
<p>I just find the current state of recommendations and guidance around scaling Postgres to be confounding. And it feels surprising for new Postgres users to discover that one of the most common scaling options relies on a solution like PgBouncer.</p>
<p>Over the years I’ve read dozens of articles around scaling and maintaining Postgres databases, and they always understate the impact of PgBouncer on your application. They casually mention unusable features without any exploration, or the numerous ways you can silently break expected query behavior. The advice is just to turn it on. <strong>I want it to be clear that as your application scales, PgBouncer is often necessary but isn’t free</strong>.</p>
<p>The following sections provide an overview of what connection pooling is in general, how connection pooling modes work in PgBouncer and similar tools, and then I dig into every Postgres feature that does not work in PgBouncer transaction mode and what the implications are. This is the PgBouncer article I wish existed the first time I used it - let’s get going 🐘!</p>
<h3 id="contents">Contents</h3>
<ul>
<li><a href="#connection-pooling">What is connection pooling?</a></li>
<li><a href="#separate-tool">Why do I need a separate tool from Postgres?</a>
<ul>
<li><a href="#framework-pool">Framework pooling</a></li>
<li><a href="#client-pool">Client proxy pooling</a></li>
<li><a href="#server-pool">Server proxy pooling</a></li>
</ul>
</li>
<li><a href="#turn-it-on">Can I just turn on PgBouncer and get scaling for free?</a>
<ul>
<li><a href="#session-mode">Session mode</a></li>
<li><a href="#statement-mode">Statement mode</a></li>
<li><a href="#transaction-mode">Transaction mode</a></li>
</ul>
</li>
<li><a href="#perils">Perils</a>
<ul>
<li><a href="#invalid-statements">Detecting invalid statements 😑</a></li>
<li><a href="#lock-timeouts">Lock timeouts (SET/RESET) 🔓</a></li>
<li><a href="#statement-timeouts">Statement timeouts (SET/RESET) ⏳</a></li>
<li><a href="#transparency">Transparency 👻</a></li>
<li><a href="#prepared-statements">Prepared Statements (PREPARE/DEALLOCATE, Protocol-level prepared plans) ✔️</a></li>
<li><a href="#throughput">Pool throughout / Long running queries 🏃‍♂️</a></li>
<li><a href="#session-level-locks">Session Level Advisory Locks 🔐&nbsp;</a></li>
<li><a href="#listen-notify">Listen/Notify 📣</a></li>
<li><a href="#single-threaded">The single thread 🪡&nbsp;</a></li>
<li><a href="#pg_dump">pg_dump 🚮</a></li>
<li><a href="#unavailable">Other unavailable features 🫥</a></li>
</ul>
</li>
<li><a href="#linting">Linting 🧶</a></li>
<li><a href="#future-improvements">Can we improve connections without a pooler?</a></li>
<li><a href="#alternatives">PgBouncer alternatives</a></li>
</ul>
<h2 id="connection-pooling">What is connection pooling?</h2>
<p>PgBouncer is a lightweight connection pooler for PostgreSQL. What does that mean exactly? What is connection pooling and why is it needed?</p>
<p>Opening a connection is expensive: a new Postgres client connection involves TCP setup, process creation and backend initialization – all of which are costly in terms of time and system resources. A connection pool keeps a set of connections available for reuse so we can avoid that overhead past initial connection.</p>
<p>There are three main levels of connection pooling<sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup>:</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/0c4ffd30c0.jpg" alt=""></p>
<p><strong>Framework connection pooling</strong>. This is a common feature of many frameworks/libraries. Within a given process, you maintain a pool of active connections that are shared between code, generally running across threads. Whenever you handle some processing in a server request, a background process, a job, etc, you open a connection and keep that connection open. When that piece of work finishes and a new piece of work starts, you can reuse the connection without the expense of opening a new connection to the database every single time. These connections are usually local to a particular operating system process, so you gain no benefit outside of that process (and if you’re scaling Postgres, you probably have lots of processes)</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/d281d0294d.jpg" alt=""></p>
<p>One level higher, you can have <strong>client level connection pooling</strong> outside of your code. PgBouncer can handle this, and instead of independent unsharable process-isolated connections you proxy all of your connections through PgBouncer. But it runs on your server, so you still cannot share connections between servers (and again, when needing to do it you probably have lots of servers).</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/cd987b4e04.jpg" alt=""></p>
<p><strong>Server level connection pooling</strong>. Here we host PgBouncer independent of our servers and connect to a single central PgBouncer instance<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup>. This is the most robust form of connection pooling because independent of anything else in your code or server, you are guaranteed that any client connection is coming from the pool.</p>

<p>That’s all great but… why do we need it?</p>
<p>There are two primary layers to this:</p>
<ol>
<li>Maintaining connections is beneficial as a base feature. Less memory and io churn, less latency before running queries. Less pressure on the database constantly opening and closing connections.</li>
<li>Postgres connections get expensive very quickly. <em>Surprisingly</em> quickly.</li>
</ol>
<p>Here are some general community guidelines around allowable Postgres connection counts based on a mixture of community experience and specific benchmarking:</p>
<ul>
<li>In terms of what some managed services even offer: <a href="https://supabase.com/blog/supabase-pgbouncer">Supabase</a> offers a max of <em>50</em> connections, <a href="https://neon.tech/">Neon</a> offers a max of <em>100</em> connections, and <a href="https://render.com/docs/databases#connecting-to-your-database">Render</a> offers a max of 397 connections.</li>
<li>The general upper bound recommendation is a <em>max</em> of 500 active connections. Services like <a href="https://elements.heroku.com/addons/heroku-postgresql">Heroku Postgres</a> even <em>enforce</em> a hard limit of 500 connections<sup id="fnref:3"><a href="#fn:3" role="doc-noteref">3</a></sup></li>
<li>Even at 500 connections, your server is going to be strained. <a href="https://www.enterprisedb.com/postgres-tutorials/why-you-should-use-connection-pooling-when-setting-maxconnections-postgres">This more recent (as of 2023) enterprisedb article</a> analyzed connection performance and found that 300-400 active connections seems optimal. This <a href="https://brandur.org/postgres-connections">article from Brandur</a> is older (2018) but seems to reinforce this idea as well</li>
<li>There have been <a href="https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/improving-postgres-connection-scalability-snapshots/ba-p/1806462">some more recent connection improvements in Postgres</a> (as of version 14) handling idle connections more efficiently<sup id="fnref:4"><a href="#fn:4" role="doc-noteref">4</a></sup>, but active connections are still expensive<sup id="fnref:5"><a href="#fn:5" role="doc-noteref">5</a></sup> and idle connections have not reached the scale of a dedicated pooler</li>
<li>The reality of 500 connections is it sounds extremely low but those connections can handle <em>a ton of throughput</em>. The <em>problem</em> is, as a metric of pure concurrency, real connections have a hard upper limit. So if you try to have five thousand clients connect simultaneously, you’re going to start getting loads of connection errors<sup id="fnref:6"><a href="#fn:6" role="doc-noteref">6</a></sup>.</li>
</ul>
<p>To improve the cost of connection overhead, general connection pooling is helpful and a PgBouncer instance in its default session based mode can handle it. But to improve concurrency things have to get a bit… <em>quirky</em>.</p>
<p>There are two modes in PgBouncer which give clients access to more connections than Postgres <em>actually</em> has available. They rely on the idea that at any given time many of your connections are idle, so you can free up usage of idle connections to improve concurrency.</p>
<h2 id="turn-it-on">Can I just turn on PgBouncer and get scaling for free?</h2>
<p>Kind of? But not really? It’s complicated.</p>
<p>Internally, PgBouncer will manage a pool of connections for you. The default pooling mode it starts with, session pooling, is conservative, and in most cases will not provide improved concurrency<sup id="fnref:7"><a href="#fn:7" role="doc-noteref">7</a></sup>.</p>
<p>I’m going to hand wave a bit past two of the modes and focus on the typical recommendation.</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/7391257b1c.jpg" alt=""></p>
<p><strong>Session mode</strong> is the default and most conservative mode. This is a 1:1 - your local connection truly holds onto a full connection until you close it. This does little to help you scale connection concurrency, but it helps with latency and connection churn overhead.</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/6e486ad1b1.jpg" alt=""></p>
<p><strong>Statement mode</strong> is the most aggressive mode and means your connection goes back into the pool after <em>every statement</em>. You lose the ability to use transactions 😰 - that seems wild and unusable for only the most specialized of use cases.</p>

<p><img src="https://cdn.uploads.micro.blog/98548/2023/9e0451a965.jpg" alt=""></p>
<p>The mode that results in a more sane balance of improved concurrency and retained critical database features is <strong>transaction mode</strong>. Transaction mode means your connection stays consistent as long as you’re in a transaction. Once the transaction finishes, your code <em>thinks</em> it still has real connection but PgBouncer actually releases the connection back into the pool internally. This is <em>session sharing</em>, your session is going to be shared with other connections without being reset or closed.</p>
<p>Transaction mode is a powerful concept. Your code in general has lots of database downtime. Most code does not solely operate on the database - it takes CPU cycles, interacts with files, makes network calls, and calls other data stores. During that time, your connection sits idle and unused for what in computing and database terms is an eternity. By releasing that back into the pool outside of transactions you free up your idle connection for use by a client who actually needs it. This way your 500 available connections can services thousands of clients, instead of a 1:1 with the number of available connections.</p>
<pre><code>-- connection is actually pulled from the pool inside PgBouncer
BEGIN;
INSERT INTO...;
UPDATE;
COMMIT;
-- connection goes back to the pool inside PgBouncer
</code></pre>
<p>The problem with transaction mode is that this tiny configuration change quietly changes not only your ability to scale, but also the way your connections <em>behave</em>. It breaks the expected command semantics between client and database server. And understanding whether you’ve gotten things right in transaction mode is <em>very difficult</em>.</p>
<p>Let’s say you’ve been operating with PgBouncer in session mode (or operating without a proxy at all), and you make the switch to transaction mode. Your perspective on how you can use Postgres needs to change - so now we’re onto the <em>peril</em>.</p>
<h2 id="perils">Perils</h2>
<p>Many of the following items are documented shortcomings of PgBouncer in <a href="#transaction-mode">transaction mode</a>. But:</p>
<ol>
<li>They’re treated lightly</li>
<li>Their repercussions and downsides are not discussed</li>
<li>PgBouncer is often recommended without mentioning them</li>
<li>PgBouncer is often recommended at the same time as recommending incompatible transaction mode features like session level advisory locks and session level statement timeouts</li>
<li>The non-determinism introduced by using incompatible statements is not discussed (ie, I execute a statement in Process A and suddenly Process B errors out due to it)</li>
</ol>
<p>Assume anytime I mention PgBouncer after this point I am referring to <a href="#transaction-mode">transaction mode</a>. Here we go!</p>
<h3 id="invalid-statements">Detecting invalid statements 😑</h3>
<p>PgBouncer happily accepts statements that are not supported in transaction mode. The problem is pushed onto the developer, which means they <em>can</em> and <em>will</em> get it wrong<sup id="fnref:8"><a href="#fn:8" role="doc-noteref">8</a></sup>.</p>
<p>This is by design. The sense I get is that PgBouncer was specifically architected to not analyze any statements and so it would be a big change for them to handle this<sup id="fnref:9"><a href="#fn:9" role="doc-noteref">9</a></sup>.</p>
<p>Amazon has a similar tool to PgBouncer called RDS Proxy, and it has a feature called “<a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/rds-proxy-managing.html#rds-proxy-pinning">connection pinning</a>”. If it detects a statement that is incompatible with transaction mode, it will automatically hold that connection for that client for the duration of their session.</p>
<p>This is both highly useful and simultaneously problematic. It means query behavior is consistent with your expectations (🙌🏼) but also that you can silently kill all concurrency benefits (😑). If enough queries are run that trigger connection pinning, all of a sudden you may throttle your <a href="#throughput">throughput</a>. But it does give you an escape hatch for safely running statements which are not transaction compatible without having to jump through any hoops.</p>
<p>I’d be fine with some logging I could monitor. As far as I can tell there is nothing like this in PgBouncer, and so all the burden lands on you to get it right. As one engineer, or a few engineers, all aware of potential issues, you can probably maintain that. But what about dozens of engineers? Or hundreds? Thousands? All with varying levels of experience with databases and poolers? There’s going to be mistakes.</p>
<h3 id="lock-timeouts">Lock Timeouts (SET/RESET) 🔓</h3>
<p>Unless you <em>like</em> app downtime, you should be using a <code>lock_timeout</code> when running <a href="https://www.postgresql.org/docs/current/ddl.html">DDL</a>. It’s a critical aspect of <a href="https://medium.com/paypal-tech/postgresql-at-scale-database-schema-changes-without-downtime-20d3749ed680">zero downtime migrations</a>.</p>
<p>The idea is to set it to a limit that would be acceptable for queries in your application to slowdown by - waiting to acquire a lock can cause related queries to queue up behind your DDL operation:</p>
<pre><code>-- slow select
SELECT * FROM my_table;

-- DDL starts in separate process, blocked on acquiring the lock by the 
--    slow query
ALTER TABLE my_table...

-- Subsequent queries start queuing up...
SELECT * FROM my_table WHERE id = 123;
SELECT * FROM my_table WHERE id = 234;
--- ...
</code></pre>
<p>In that scenario, the slow query is running the show. Until it finishes, <em>all the other queries to that table are stuck</em>. That goes on long enough and users can’t use the system. A bit longer and your app starts timing out. A bit longer you’re running out of <em>connections</em>. Now you’re staring at a total app outage, about ready to kill all of your connections in a desperate attempt to salvage things, contemplating a career change to landscaping where you can at most impact one person at a time, right? That sounds nice, doesn’t it?</p>
<p>I’ve of course never experienced that. I’m just <em>very</em> creative 💀. But if <em>you</em> have experienced that, or you’d like to <em>avoid</em> experiencing that, use a <code>lock_timeout</code>:</p>
<pre><code>SET lock_timeout TO '2s';
</code></pre>
<p><em>Now</em> if your DDL cannot acquire a lock it will throw an error after 2 seconds. That should be an ok delay in running queries, and you can retry the operation later.</p>
<p>But wait! Are you connected to PgBouncer?! You may want to bring up that landscaping help-wanted listing again… 🌳</p>
<p><code>SET</code> operations apply at the <a href="#session-mode">session level</a>. This means that on a PgBouncer connection, there is no guarantee our <code>lock_timeout</code> will still be applied when we run our DDL:</p>
<pre><code>-- Process 1
-- PgBouncer pulls connection 1
SET lock_timeout TO '2s';
-- connection 1 goes back to the pool

-- Meanwhile, in Process 2:
-- PgBouncer pulls connection 3
SELECT id FROM my_table, pg_sleep(30);

-- Back in Process 1:
-- PgBouncer pulls connection 2
-- This connection has no lock_timeout set, so it will hang 
--    until our pg_sleep query finishes 30 seconds later, and all
--    queries to my_table after it are stuck for those 30 seconds as well
ALTER TABLE my_table...
</code></pre>
<p>It’d be easy to argue “don’t have slow queries”. And that should be the goal! But we don’t call it “happy path uptime 🌼”, we call it “<em>zero</em> downtime”. It means even if things go wrong, you don’t go down. There can also be other operations that hold a lock on your table, so you simply can’t rely on successfully acquiring that lock<sup id="fnref:10"><a href="#fn:10" role="doc-noteref">10</a></sup>.</p>
<p>So what can we do? There are two options:</p>
<ol>
<li>Bypass PgBouncer and go straight to the database</li>
<li>Use a transaction level <code>lock_timeout</code></li>
</ol>
<h4 id="bypassing-pgbouncer">Bypassing PgBouncer</h4>
<p>Your safest bet is to go with option (1). You should have some ability to directly connect to your database, so take advantage of it and don’t jump through hoops to run DDL safely.</p>
<p>The biggest obstacle you hit with (1) is <a href="#transparency">transparency</a>: PgBouncer <em>really</em> doesn’t want you to know whether you are connected to the real database or not. There’s no <em>easy</em> answer there, but by validating a setup where you consistently run your DDL process directly against Postgres then you’re set.</p>
<h4 id="use-transaction-level-statements">Use transaction level statements</h4>
<p>There is a transaction local equivalent to the <code>SET</code> statement: <code>SET LOCAL</code>. Using our example from earlier:</p>
<pre><code>-- Process 1
-- PgBouncer pulls connection 1
BEGIN;
SET LOCAL lock_timeout TO '2s';
-- connection 1 stays checked out

-- Meanwhile, in Process 2:
-- PgBouncer pulls connection 3
SELECT id FROM my_table, pg_sleep(30);

-- Back in Process 1:
-- Connection 1 is still checked out
ALTER TABLE my_table...
-- lock_timeout raises an error after 2 seconds waiting, and 
--    we avoid our downtime!
</code></pre>
<p>DDL in Postgres is transactional, so it’s valid to start our transaction, set our <code>lock_timeout</code> using <code>SET LOCAL</code>, then start our DDL operation. Our transaction local setting will stick with us until the transaction commits or rolls back, so we safely keep our timeout and rollback our DDL.</p>
<p>It’s not a <em>terrible</em> solution (1 is still better), except for two things:</p>
<ol>
<li>Concurrent indexes</li>
<li>Tooling</li>
</ol>
<p>Another zero downtime star is the concurrent index. When you create a new index on a table you run the chance of locking it up long enough to cause downtime. Here’s the answer to that problem:</p>
<pre><code>CREATE INDEX CONCURRENTLY index_name ON my_table;
</code></pre>
<p>Concurrent indexes are created without an exclusive lock, so your normal operations keep going while it builds the index in the background. The <em>problem</em> is they can’t be run in a transaction, so <code>SET LOCAL</code> is not an option.</p>
<p>Because they don’t require an exclusive lock, setting a <code>lock_timeout</code> is less important. But if there is contention and you just can’t get that index to acquire it’s shared lock, do you really want it to run forever?</p>
<p>As for (2), popular tooling usually does not handle <code>SET LOCAL</code> for you. In the Rails/ActiveRecord world there are several libraries that will automatically apply zero downtime policies for you, but they all assume you have an exclusive connection and operate at the <code>SET</code> session level.</p>
<p><a href="https://en.m.wikipedia.org/wiki/The_road_to_hell_is_paved_with_good_intentions">In PgBouncer, the road to downtime is paved with session level statements</a>.</p>
<p>Just go with (1), keep your sanity, throw away the diary entries about living out your days breathing in the smell of fresh cut grass, and connect directly to Postgres to run DDL with <code>SET lock_timeout</code> calls.</p>
<h3 id="statement-timeouts">Statement timeouts (SET/RESET) ⏳</h3>
<p>Determined not to repeat your experiences from <code>lock_timeout</code>, you read about this thing called <code>statement_timeout</code>. This little magic wand makes it so you control how long a statement is allowed to run 🪄.</p>
<p>So here it is:</p>
<pre><code>SET statement_timeout TO '2s';
</code></pre>
<p>Those greedy queries now don’t stand a chance. You can tame your long running queries and avoid blocking your DDL! You ignore my advice to always use <code>lock_timeout</code>, say “bye losers” to long running queries, and fire off that DDL again… oh god. Why are things slowing down. Now they’re timing out. <em>The connections are filling up.</em> What is <em>happening?</em></p>
<p><img src="https://media.tenor.com/MYZgsN2TDJAAAAAC/this-is.gif" alt=""></p>
<p>Oh riiiight. You forgot. You’re using PgBouncer. <code>SET</code> is off the table. Should have set that <code>lock_timeout</code> 🔐…</p>
<p>If I had a nickel for every time someone mentioned <code>SET statement_timeout</code> and PgBouncer in the same article…<sup id="fnref:11"><a href="#fn:11" role="doc-noteref">11</a></sup> I know no one sharing this content is doing it maliciously, but be aware that these are misleading and incompatible features.</p>
<h4 id="with-lock_timeout-why-does-statement_timeout-even-matter">With lock_timeout, why does statement_timeout even matter?</h4>
<ul>
<li>Statement timeouts are helpful for long running queries so they cancel earlier. If a client disconnects, Postgres will periodically check for the connection and try to cancel the query when it goes away. But a query <a href="https://dba.stackexchange.com/a/81424/256107">with runaway cpu</a> usage will just keep running even if the client dies or disconnects. That means you lose that connection until the query finishes, which can take minutes (or hours)</li>
<li>The database default is 0, which means there is no limit. In some contexts this is not a problem, but particularly for web requests this is excessive</li>
</ul>
<p>The first time I used <code>statement_timeout</code> was from a blog recommendation to limit statements for requests in web applications. In a web request, you usually have an upper limit on how long you allow them to run before they time out - this conserves resources, protects against runaway buggy code and helps with bad actors. It made sense that I’d set it to something conservative on all my web connections to deal with long running queries.</p>
<p>I deployed the code and for a little while things seemed to work well. Then I saw something odd. This started popping up:</p>
<pre><code>canceling statement due to statement timeout
</code></pre>
<p>But in my… <em>background jobs</em>? My web requests were tuned to be fast, but the constraints around my background processes were a bit… looser. Can you guess what I had recently enabled? PgBouncer in transaction mode. My session level statement timeout was being swapped out from my web request, picked up by my job, and caused my job to timeout instead - web request safety was off the rails and longer running jobs were intermittently failing.</p>
<p>So is there any way we can use it? There’s a couple ways I know of, but nothing great when pooling.</p>
<h4 id="our-old-friend-transaction">Our old friend transaction</h4>
<pre><code>BEGIN;
SET LOCAL statement_timeout '5s';
SELECT ...
COMMIT;
</code></pre>
<p>Something about wrapping a SELECT in a transaction feels kind of strange, but it works. If you have targeted concerns, you can wrap particular queries in a transaction and use <code>SET LOCAL</code> to localize the <code>statement_timeout</code>.</p>
<p>This is absolutely not a viable solution for a whole request lifecycle. If I wanted to attempt my web request level timeouts again, no way am I wrapping every web request in one giant transaction. Postgres doesn’t have a concept of nested transactions so any code I have that may be operating transactionally is gonna be in for some confusing surprises<sup id="fnref:12"><a href="#fn:12" role="doc-noteref">12</a></sup>. And most importantly, wrapping my whole request in a transaction means I’ve completely negated the benefit of proxy pooling - now my request lifecycles are basically 1:1 with my connection sessions.</p>
<h4 id="apply-statement-timeouts-per-user">Apply statement timeouts per user</h4>
<p>I’ve never tried it, but I’ve seen it recommended to set statement timeouts per user when using PgBouncer. That seems to have a couple problems I can think of:</p>
<ol>
<li>It’s not dynamically configurable.</li>
<li>It dilutes the pool of available connections per context</li>
</ol>
<p>(1) is definitely inconvenient. If you have different contexts where you’d like to apply different timeout constraints, this would be way too cumbersome to maintain.</p>
<p>But (2) <em>feels</em> like a deal breaker. If I want to constrain my web requests to a conservative timeout, but give my background processes more wiggle room, my pool size of real connections is now split instead of sharing a pool of total available database connections. I also have to manage making sure each context uses the appropriate user, or things will go badly.</p>
<p>It’s technically an option, but seems trickier to maintain and monitor.</p>
<h3 id="transparency">Transparency 👻</h3>
<p><img src="https://media2.giphy.com/media/xT5LMN0UgalbScp6uI/giphy.gif?cid=6c09b952f7248c90c21812529981462733f1d648a5076839&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<blockquote>
<p>I don’t understand why my session features aren’t working. I always make sure to use plenty of Postgr…PgBouncer?!</p>
</blockquote>
<p>It is very difficult to tell when you are or aren’t using PgBouncer, <a href="https://github.com/pgbouncer/pgbouncer/issues/249">which is unfortunately by design</a>. It considers itself a transparent proxy. In <a href="#session-mode">session mode</a>, that’s pretty much true. But in <a href="#transaction-mode">transaction</a> and <a href="#statement-mode">statement</a> mode you are working with bizarro Postgres. It all works the same except when it doesn’t.</p>
<p>So if you want a regular connection because you need a feature not available in transaction mode, being sure you did it right is extremely difficult.</p>
<p>I have had a hell of a time verifying that some servers are or aren’t running with PgBouncer. Server A is using pub sub, I don’t want it. Server B needs the throughput, I want it. How can I make sure someone never makes a mistake and attaches the server to the wrong place? Basically, I can’t.</p>
<p>When it comes to production code I like to be paranoid. On a large enough codebase, and team, and user base, unusual things are bound to happen, sometimes regularly. I try to write code and configure environments so the right way is easy and the wrong way is hard. PgBouncer does not make that easy.</p>
<p>On this particular point I’d love to say I have some kind of advice to act on, but it mostly takes testing and validating your setup. If someone out there has better ideas or tips, I am all ears.</p>
<h3 id="prepared-statements">Prepared Statements (PREPARE/DEALLOCATE, Protocol-level prepared plans) ✔️</h3>
<p>PgBouncer has a public relations problem when it comes to prepared statements. This is all the <a href="https://www.pgbouncer.org/features.html">PgBouncer docs say</a> about them:</p>
<table>
	<thead>
		<tr>
			<th>
				Feature
			</th>
			<th>
				Session pooling
			</th>
			<th>
				Transaction pooling
			</th>
		</tr>
	</thead>
	<tbody>
		<tr>
			<td>
				`PREPARE` / `DEALLOCATE`
			</td>
			<td>
				Yes
			</td>
			<td>
				Never
			</td>
		</tr>
		<tr>
			<td>
				Protocol-level prepared plans
			</td>
			<td>
				Yes
			</td>
			<td>
				No*
			</td>
		</tr>
	</tbody>
</table>
<blockquote>
<p>* It is possible to add support for that into PgBouncer</p>
</blockquote>
<p>Kind of feels… alarming. No prepared statements in transaction mode?! Aren’t those… important? Even further when you go to use PgBouncer with Hibernate or ActiveRecord (and I’m sure others) you’ll see the recommendation to configure them to <em>turn off</em> prepared statements 😱. Does it surprise you a bit to hear that? Make you feel a little queasy maybe?</p>
<p>I had it drilled into me early in my career that prepared statements are a critical part of protecting against SQL injection. In the <a href="https://cheatsheetseries.owasp.org/cheatsheets/SQL_Injection_Prevention_Cheat_Sheet.html">OWASP SQL Injection Prevention Cheatsheet</a> the very first recommendation is:</p>
<ul>
<li><strong>Use of Prepared Statements (with Parameterized Queries)</strong></li>
</ul>
<p>So PgBouncer tells me I need to <em>turn them off?</em></p>
<p><img src="https://thumbs.gfycat.com/AstonishingEarlyHornet-size_restricted.gif" alt=""></p>
<p>The first time I used PgBouncer in an application I spent <em>a lot</em> of time figuring out how turning off prepared statements was safe to do. It turns out that prepared statements in Postgres mean a few things, but come down to two main options:</p>
<ol>
<li>Named prepared statements</li>
<li>Unnamed prepared statements</li>
</ol>
<p><em>Named</em> prepared statements are reusable, and are tied to the connection session.</p>
<p><em>Unnamed</em> prepared statements are single use, and have no association to the connection session.</p>
<p>There are two ways to create a <em>named</em> prepared statement and one way to create an <em>unnamed</em> prepared statement:</p>
<ol>
<li><code>PREPARE</code></li>
<li>Protocol-level Parse/Bind/Execute with a name specified</li>
<li>Protocol-level Parse/Bind/Execute with no name specified</li>
</ol>
<p>PgBouncer says it doesn’t support prepared statements in either <code>PREPARE</code> or protocol-level format. What it <em>actually</em> doesn’t support are <em>named</em> prepared statements in any form. That’s because named prepared statements live in the session and in <a href="#transaction-mode">transaction mode</a> you can switch sessions.</p>
<pre><code>-- PgBouncer pulls connection 1
PREPARE bouncer_since (int, timestamp) AS
SELECT * 
FROM bouncers b
INNER JOIN guests g ON g.bouncer_id = b.id
WHERE b.id = $1 AND b.created &gt; $2;
-- connection 1 goes back to the pool

-- PgBouncer pulls connection 2
EXECUTE bouncer_since(1, now() - INTERVAL '2 days');
-- 💣 ERROR: prepared statement "bouncer_since" does not exist 💣
</code></pre>
<p>But <em>unnamed prepared statements are totally fine</em>. In fact, I’d be shocked if the current client library you’re using to connect to Postgres does not already switch to them if “prepared statements” (again, so damn misleading) are “turned off”.</p>
<p>But wait. What the heck is an unnamed statement? <code>PREPARE</code> <em>requires</em> a name… how can I make a prepared statement without a name?</p>
<h4 id="protocol-level-prepared-plans">Protocol-level prepared plans</h4>
<p><img src="https://media0.giphy.com/media/P5wPrhzZDdeJW/giphy.gif?cid=6c09b95256738d3ee35e24f988a790f60659836b97f75ee8&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<p>The alternative to the <code>PREPARE</code> statement is to directly communicate with Postgres at the protocol level.</p>
<p>I had to dig a bit to get a handle on this - I started from a common Ruby ORM called ActiveRecord, dug into the Ruby “pg” gem <em>it</em> uses, then went one layer deeper into <code>libpq</code>, which is part of Postgres itself.</p>
<p>If we use active record as an example, <a href="https://guides.rubyonrails.org/configuring.html#configuring-a-postgresql-database">when prepared statements are “disabled”</a>, the postgres adapter internally calls <code>exec_no_cache</code> in <code>activerecord/lib/active_record/connection_adapters/postgresql_adapter.rb</code>:</p>
<pre><code>def exec_no_cache(sql, name, binds...)
  #...
  conn.exec_params(sql, type_casted_binds)
</code></pre>
<p>That’s powered by the ruby “pg” gem, which when calling <code>exec_params</code> from ruby ultimately calls into the <code>libpq</code> function <code>PQsendQueryParams</code>:</p>
<pre><code>// Ruby "pg" gem
// ext/pg_connection.c
static VALUE
pgconn_async_exec_params(int argc, VALUE *argv, VALUE self) {}

// internally calls...
static VALUE
pgconn_send_query_params(int argc, VALUE *argv, VALUE self) {}

// internally calls this from the libpq c postgres internals:
// src/interfaces/libpq/fe-exec.c
int PQsendQueryParams(PGconn *conn,
  const char *command,
  int nParams,
  const Oid *paramTypes,
  const char *const *paramValues,
  const int *paramLengths,
  const int *paramFormats,
  int resultFormat) {}
</code></pre>
<p>What does <code>PQsendQueryParams</code> do? It calls an internal method named <code>PQsendQueryGuts</code>. Notice the empty string and <code>use unnamed statement</code> comment 🤔.</p>
<div><pre tabindex="0"><code data-lang="c"><span>return</span> <span>PQsendQueryGuts</span>(conn,
    command,
    <span>""</span>, <span>/* use unnamed statement */</span>
    nParams,
    paramTypes,
    paramValues,
    paramLengths,
    paramFormats,
    resultFormat);
</code></pre></div><p>What does <em>that</em> function do (aside from making me laugh every time I read the name <code>PQsendQueryGuts</code> 😆)? Internally <code>PQsendQueryGuts</code> communicates with Postgres at the protocol level:</p>
<pre><code>/* construct the Parse message */
if (pqPutMsgStart('P', conn) &lt; 0 ||
  pqPuts(stmtName, conn) &lt; 0 ||
  pqPuts(command, conn) &lt; 0) {}

/* Construct the Bind message */
if (pqPutMsgStart('B', conn) &lt; 0 ||
  pqPuts("", conn) &lt; 0 ||
  pqPuts(stmtName, conn) &lt; 0) {}

/* construct the Execute message */
if (pqPutMsgStart('E', conn) &lt; 0 ||
  pqPuts("", conn) &lt; 0 ||
  pqPutInt(0, 4, conn) &lt; 0 ||
  pqPutMsgEnd(conn) &lt; 0) {}
</code></pre>
<p>This is the Parse/Bind/Execute process I mentioned earlier.</p>
<ul>
<li>The code sends a <strong>P</strong>arse message with the query and an optional name. In our case the name is empty</li>
<li>The code then <strong>B</strong>inds params to that query (if the query is parameterized)</li>
<li>It then <strong>E</strong>xecutes using the combination of the parsed query and the bound params</li>
</ul>
<p>This is perfectly safe to do in transaction mode, and from a SQL safety perspective should behave identically to a named prepared statement.</p>
<h4 id="named-protocol-level-statements">Named protocol-level statements</h4>
<p>For comparison, when ActiveRecord has prepared statements turned on, things <em>look</em> a bit different, but by the end we’re in the same place:</p>
<pre><code>def exec_cache(sql, name, binds...)
  #...pseudo coded a bit but importantly
  #   it calls `prepare`
  if !cached
    stmt_key = conn.prepare(sql)
  # then it calls exec_prepared
  conn.exec_prepared(stmt_key, type_casted_binds)
</code></pre>
<p>It first has to call <code>prepare</code> with whatever sql we’re going to run. The caller is in charge of keeping track of whether the sql has been prepared before, otherwise Postgres will keep overwriting our previous sql and it might as well just execute an unnamed statement. Then it calls <code>exec_prepared</code> with only the <code>stmt_key</code>, which should match the name of a previously prepared query.</p>
<p>If we skip ahead to what gets called in <code>libpq</code>:</p>
<pre><code>// conn.prepare(sql)
int
PQsendPrepare(PGconn *conn,
    const char *stmtName, 
    const char *query,
    int nParams, 
    const Oid *paramTypes) {
  //...
  if (pqPutMsgStart('P', conn) &lt; 0 ||
      pqPuts(stmtName, conn) &lt; 0 ||
      pqPuts(query, conn) &lt; 0) {}
  //...
}
</code></pre>
<p>We see something similar to our earlier Parse/Bind/Execute, but now we’re <em>only</em> calling the <strong>P</strong>arse portion and this time we have a <code>stmtName</code>. We then trigger the prepared statement calling <code>exec_prepared</code>, which ultimately calls <code>PQsendQueryPrepared</code>:</p>
<pre><code>// conn.exec_prepared(stmt_key, type_casted_binds)
int
PQsendQueryPrepared(PGconn *conn,
    const char *stmtName,
    int nParams,
    const char *const *paramValues,
    const int *paramLengths,
    const int *paramFormats,
    int resultFormat) {
  //...
  return PQsendQueryGuts(conn,
      NULL,     // no sql
      stmtName, // named
      nParams,
      NULL,
      paramValues,
      paramLengths,
      paramFormats,
      resultFormat);
  //...
}
</code></pre>
<p>Anything look familiar? That’s the same <code>PQsendQueryGuts</code> function we called for the unnamed statement! This time it doesn’t hand a <code>command</code> in because we already parsed our SQL in the earlier <code>prepare</code> call. We also have a <code>stmtName</code> defined, instead of handing in an empty string. This version goes on to skip the <strong>P</strong>arse, call the <strong>B</strong>ind with the <code>stmtName</code>, then call <strong>E</strong>xecute - same flow as our unnamed version.</p>
<p>For SQL injection safety, both named and unnamed versions are equivalent: they separate query structure (Parse) from data values (Bind). Adding query bindings when not in a prepared statement simply makes an unnamed statement.</p>
<p>Nothing about these calls is specific to the <code>libpq</code> library, it’s just a rock solid implementation of them<sup id="fnref:13"><a href="#fn:13" role="doc-noteref">13</a></sup> - any language could make the same protocol calls. If a library is utilizing this protocol, they are doing the same things when binding to an unnamed prepared statement as they are when binding to a named prepared statement<sup id="fnref:14"><a href="#fn:14" role="doc-noteref">14</a></sup>.</p>
<p>As long as your code uses parameterized queries, “turning off” prepared statements for PgBouncer is safe, even if it seems a bit unnerving. There is a <a href="https://github.com/pgbouncer/pgbouncer/pull/757">PR to allow PgBouncer to track prepared statements</a>, so maybe this won’t cause people like me as much heartburn in the future 🥲.</p>
<h3 id="throughput">Pool throughput / Long running queries 🏃‍♂️</h3>
<p>We’ve got two types of connections to Postgres: active and idle. Idle connections are the backbone of poolers - having idle connections means we’ve got capacity to swap around transactions for connected clients. What about active connections?</p>
<p>An active connection means that connection is actively tied up by the database. For that timespan, the connection cannot be swapped out to do anything else until its operation completes. We know that active connections get expensive quickly, and we also know that most managed services range somewhere from 50 to 500 allowed total, non-pooled connections.</p>
<p>Using a max PgBouncer connection pool of 10k and Render’s managed Postgres service with a max of 397 total connections means we’d have:</p>
<p>10000 / 397 = ~25 connections per active connection</p>
<p>Using Supabase’s 50 connections the spread is even higher:</p>
<p>10000 / 50 = ~<em>200</em> connections per active connection</p>
<p>That means that for every long running operation, you are potentially down 200 connections worth of pooling.</p>
<p>These numbers are very back of the napkin and of course do not represent the true scaling capability and connection handling of a real pooler. But the point is this:</p>
<ul>
<li>Active connections are very valuable to a pooler</li>
<li>Long running queries disproportionally impact concurrency</li>
</ul>
<p>As an example, you’re using Render Postgres fronted by PgBouncer and you’ve got 10k available connections backed by the max of 397 Postgres connections. Let’s say a new feature is introduced for populating some graph data on your app’s landing page. It’s powered by a new query that looks great, has indexes, and seems well optimized. It’s even run against some load testing and representatively sized data as a QA check. It gets deployed to production and <em>OOF, it’s taking 15 seconds per query</em> 🐌. Users are logging in or navigating to the landing page all the time so within moments you’ve had thousands of hits to this query. Obviously this is going to get quickly rolled back, but what does it mean for your pool in the meantime?</p>
<p><img src="https://media1.giphy.com/media/137TKgM3d2XQjK/giphy.gif?cid=6c09b952ebbb45e59739e8c9dd3ca08d23031a7fe573cd54&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<p>It means you’re maxed out. Your pooler being there means at least you’re less likely to start erroring out right away, but transaction mode can’t fix a stuck query. For each of those 15 second chunks of time your concurrency basically went from 10k back down to 397.</p>
<p>This is not the general behavior you’ll see when using PgBouncer unless you’ve really got some intermittent trouble with runaway queries. But it does emphasize an important point to remember: these are not real Postgres connections. Your upper bound on long running, active queries is always constrained by your actual pool of real Postgres connections.</p>
<h4 id="guarding-against-slow-queries">Guarding against slow queries</h4>
<ul>
<li><a href="https://www.crunchydata.com/blog/logging-tips-for-postgres-featuring-your-slow-queries">Log your slow queries</a> using <code>log_min_duration_statement</code>. This option lets you set a threshold and if queries take long than that threshold Postgres will log the offending query. This won’t help the sudden mass slow query situation mentioned above, but it helps to keep an eye on overall app query health</li>
<li>Use <a href="https://www.postgresql.org/docs/current/libpq-single-row-mode.html">streaming queries</a> sparingly. In most client libraries you can set your query to run in “single row mode”. This means you retrieve your rows one at a time instead of getting one big result set at once. This is helpful for efficiency with very large result sets but is slower than a full result set query, and probably means you are running queries large enough to be slower in the first place</li>
<li>Use <a href="#statement-timeouts">statement timeouts</a>. This is tricky, especially when pooling, but see that section for ideas on how to approach it</li>
<li>Spread out reads across read replicas</li>
</ul>
<h3 id="session-level-locks">Session Level Advisory Locks 🔐</h3>
<p>Session level advisory locks work fine in PgBouncer.</p>
<p><img src="https://i.gifer.com/7DWJ.gif" alt=""></p>
<p>Sorry 🙈.</p>
<p>If you’ve read the previous sections you’ve already picked up on the pattern: “session” anything means it probably doesn’t work in <a href="#transaction-mode">transaction mode</a>. But what does that matter to you?</p>
<p>Advisory locks are a great option for creating simple, cross process, cross server application mutexes based on a provided integer key. Unlike traditional locks you use/encounter elsewhere in Postgres which are tied to tables or rows, advisory locks can be created independent of tables to control application level concerns. There are plenty of other tools you could use for this job outside of Postgres, but since Postgres is already part of your tech stack it’s a convenient and simple option.</p>
<p>Across languages a common use case for session level advisory locks is to hold a lock while database migrations (ie, DDL) are being run. For example:</p>
<pre><code>-- 1234 is arbitrary, it can be any integer
SELECT pg_advisory_lock(1234);
SET lock_timeout TO '1s';
ALTER TABLE my_table...;
INSERT INTO migrations VALUES (1234567);
-- If we don't explicitly unlock here, the lock will be held until this 
--    connection is closed
SELECT pg_advisory_unlock(1234);
</code></pre>
<p>If another connection went to acquire the same lock, it would be blocked:</p>
<pre><code>-- This will block indefinitely until the other connection is closed, 
--    or calls pg_advisory_unlock(1234)
SELECT pg_advisory_lock(1234);
</code></pre>
<p>This is largely an attempt to improve consistency of migration tracking, and help coordinate multi process deploys:</p>
<ul>
<li>Continuous deployment with the potential to trigger multiple deployments in succession</li>
<li>Propagating code changes to multiple servers with deploy scripts automatically triggering migrations in each context</li>
</ul>
<p>By waiting to acquire a lock at the Postgres level, each process waits for the first lock owner to finish before continuing, coordinating each process based on a shared lock key.</p>
<h3 id="once-more-with-strikefeelingstrike-pgbouncer">Once more, with <strike>feeling</strike> PgBouncer</h3>
<p>Now for the obligatory example of trying the same thing when connected to PgBouncer 🫠:</p>
<pre><code>-- Grab the lock on connection 1
SELECT pg_advisory_lock(1234);
-- Connection 1 goes back into pool
-- ...
-- Try to unlock on connection 2, which does not own the 1234 lock
SELECT pg_advisory_unlock(1234);
-- WARNING: you don't own a lock of type ExclusiveLock
</code></pre>
<p>We try to unlock, but because we’re on a different connection we can’t. The lock stays locked for as long as connection 1 stays alive, which means now no one else can acquire that lock unless that connection naturally closes at some point or is explicitly <code>pg_cancel_backend</code>ed 😓.</p>
<h3 id="more-session-advisory-lock-use-cases">More session advisory lock use cases</h3>
<p>Outside of migrations, advisory locks can serve other use cases:</p>
<ul>
<li>Application mutexes on sensitive operations like <a href="https://rclayton.silvrback.com/distributed-locking-with-postgres-advisory-locks">ledger updates</a></li>
<li><a href="https://jeremydmiller.com/2020/05/05/using-postgresql-advisory-locks-for-leader-election/">Leader election</a> for maintaining a single but constant daemon operation across servers</li>
<li>Exactly once run job controls for Postgres based job systems like <a href="https://github.com/bensheldon/good_job">GoodJob</a> and <a href="https://github.com/que-rb/que">Que</a></li>
</ul>
<p>If these things sound interesting or useful, they are! But only if you connect directly to Postgres.</p>
<h4 id="transaction-level-locks">Transaction level locks</h4>
<p>Advisory locks do have a transaction based companion:</p>
<pre><code>-- Process 1
BEGIN;
SELECT pg_advisory_xact_lock(1234);

-- Process 2 
-- Blocks while process 1 is in the transaction
SELECT pg_advisory_lock(1234);

-- Back in Process 1
SET LOCAL lock_timeout TO '1s';
ALTER TABLE my_table...;
INSERT INTO migrations VALUES (1234567);
COMMIT; -- automatically unlocks on commit or rollback
-- Process 2 now can acquire the lock

-- If you need to manually unlock while still in the transaction 
-- SELECT pg_advisory_xact_unlock(1234);
</code></pre>
<p>You could use it as a replacement for certain scenarios, like the above migration operating transactionally. For custom purposes, it’s a good alternative!</p>
<p>Unfortunately most migration tooling, things like leader election, and request or job lifetime locks, all use or require a longer lived lock than a single transaction could reasonably provide.</p>
<h4 id="turn-off-advisory-migration-locks">Turn off advisory migration locks</h4>
<p>If you need to run migrations against PgBouncer, in Rails you can turn them off with an <code>advisory_locks</code> flag in <code>database.yml</code>. Other migration tools likely have something similar. Do it at your <em>own</em> peril 🤷🏻‍♂️</p>
<h4 id="maintaining-a-separate-direct-connection-to-postgres">Maintaining a separate direct connection to Postgres</h4>
<p>If the lock is critical, but the operations past the lock fan out and acquire multiple connections, you could potentially have two pieces:</p>
<ul>
<li>A direct connection to Postgres where you acquire a session level advisory lock</li>
<li>Your normal <a href="#framework-pool">code level connection pooling</a> using your PgBouncer connections so it can capitalize on the scaling opportunities provided there</li>
</ul>
<p>There’s an obvious downside - you’re consuming an extra direct connection and potentially impacting <a href="#throughput">throughput</a> - but it’s an alternative available if needed.</p>
<h3 id="listen-notify">Listen / Notify 📣</h3>
<p>Postgres comes out of the box with a handy pub/sub feature called <a href="https://www.postgresql.org/docs/current/sql-listen.html">LISTEN</a>/<a href="https://www.postgresql.org/docs/current/sql-notify.html">NOTIFY</a>.</p>
<p>You simply call:</p>
<pre><code>LISTEN channel_name;
</code></pre>
<p>And that connection will receive <code>NOTIFY</code> events:</p>
<pre><code>NOTIFY channel_name, 'hi there!';
</code></pre>
<p>Like session level advisory locks, there are more robust pub/sub solutions out there. But the Postgres implementation works well, and you already have it available in your stack.</p>
<p>Looking at the example, you’ll notice that the <code>LISTEN</code> call is just a single statement, and it activates the listener for the current session. What have we said so many times already? Sessions bad. Transactions good… kind of.</p>
<h4 id="kind-of">kind of?</h4>
<p>Similar to prepared statements, the docs are misleading when it comes to <code>LISTEN</code>/<code>NOTIFY</code>.</p>
<p>PgBouncer officially lists <code>LISTEN</code>/<code>NOTIFY</code> as an unsupported feature in transaction mode, which is not precisely true. <code>LISTEN</code> does not work in transaction mode, but <code>NOTIFY</code> does.</p>
<p><code>NOTIFY</code> is a single statement, and doesn’t rely on any session semantics. It’s also transactional<sup id="fnref:15"><a href="#fn:15" role="doc-noteref">15</a></sup>:</p>
<pre><code>BEGIN;
NOTIFY channel_name, 'hi!';
ROLLBACK; -- no notification is sent
</code></pre>
<p>Both <code>NOTIFY</code> formats (inside and outside a transaction) work fine with transaction mode pooling. If you want to use pub/sub, you just need to make sure your <code>LISTEN</code>er is connected directly to Postgres. Since <a href="#transparency">it can be hard to tell if you’re connected to Postgres or PgBouncer</a> this is somewhat tricky, unfortunately.</p>
<p>I’ve built implementations <code>LISTEN</code>ing on a non-PgBouncer connection and <code>NOTIFY</code>ing on PgBouncer that work fine. There’s not much writing on this, but I have found this approach to work well.</p>
<h3 id="single-threaded">The single thread 🪡</h3>
<p>In contrast to the multi process monster that is Postgres, PgBouncer runs on a paltry single process with a single thread.</p>
<p>This means that no matter how capable a server is, PgBouncer is only going to utilize a max of one CPU core so once <a href="https://news.ycombinator.com/item?id=17187436">you’ve maxed out on that core</a> you can’t scale that single instance anymore.</p>
<p>A popular option is to <a href="https://www.crunchydata.com/blog/postgres-at-scale-running-multiple-pgbouncers">load balance PgBouncer instances</a>. Otherwise, almost every alternative to PgBouncer (like Odyssey, PgCat and Supavisor) utilize multiple cores.</p>
<p>If you’re using a managed Postgres service (like Crunchy Data, Supabase, Neon or Heroku), your default option is going with PgBouncer as a connection pooler - so it will be up to those services to offer a load balanced option.</p>
<h3 id="pg_dump">pg_dump 🚮</h3>
<p>If you’re running <code>pg_dump</code> against PgBouncer, it’s probably by mistake.</p>
<p>As far as I can tell, <code>pg_dump</code> is broken when run against PgBouncer. See <a href="https://github.com/pgbouncer/pgbouncer/issues/452">https://github.com/pgbouncer/pgbouncer/issues/452</a>.</p>
<p>The answer here is to make sure you’re using a direct connection to Postgres for utility operations like <code>pg_dump</code>.</p>
<h3 id="unavailable">Other unavailable features 🫥</h3>
<p><img src="https://media0.giphy.com/media/VCZgfe90H1tMTAW6n4/giphy.gif?cid=6c09b9526e2d6dfd051e5257c6dbce5ac862293219ad6e76&amp;rid=giphy.gif&amp;ct=g" alt=""></p>
<p>There are some remaining features which transaction mode is incompatible with as well<sup id="fnref:16"><a href="#fn:16" role="doc-noteref">16</a></sup>. I have less or no experience with these:</p>
<ul>
<li><code>WITH HOLD CURSOR</code> - A <code>WITH HOLD</code> continues to exist outside of a transaction, which seems like it could have handy use cases but I’ve never personally used it in my day to day.</li>
<li>PRESERVE/DELETE ROWS temp tables - temporary tables are a session level feature so will not work properly, and preserve/delete rows are modifiers on how those temporary tables behave on commit, and are unsupported</li>
<li>LOAD statement - this is for loading shared libraries into Postgres, so it makes sense this is not something you should be doing through a pooler. I haven’t actually tried, so I’m not sure if PgBouncer would stop you, but it requires super user privileges so it’s very unlikely that’s what your PgBouncer user has</li>
</ul>
<p>PgBouncer documents a simple “<a href="https://www.pgbouncer.org/features.html">SQL feature map for pooling modes</a>” where you can see all the features mentioned in this post.</p>
<h2 id="linting">Linting 🧶</h2>
<p>Aside from having identified potential issues - what can we do to avoid them in an automated way?</p>
<p>Surprisingly, not much exists. And by not much, I mean i’ve found nothing outside of advice.</p>
<p>It makes me feel a bit like I’m exaggerating the importance of these issues. Maybe I’m the oddball that has actually encountered many of them in real production usage and had to address them. I’ve had statement timeouts and lock timeouts misapplied. I’ve had to deal with rearranging connections because of code using a session advisory lock and <code>LISTEN</code>/<code>NOTIFY</code>, or drop libraries that use them. I’ve had to remember to turn off prepared statements in my ORM to avoid named prepared statement errors.</p>
<p>The implications can feel small, but they can be surprising and particularly around migrations can cause real serious downtime.</p>
<p>We lint everywhere. As engineers we try to automate away as many mistakes as possible with linting and specs. As development teams grow, the importance of automation becomes critical to scaling because otherwise someone somewhere is going to do the wrong thing and it won’t get caught.</p>
<p>Some ideas that would be great to see:</p>
<ul>
<li>PgBouncer optional process that detects bad queries and logs them</li>
<li>RDS connection pinning behavior</li>
<li>Static analysis tools for app queries</li>
<li>Runtime extension to client libraries</li>
<li>Making sure your development flow runs PgBouncer locally to try and encounter this behavior before running on production</li>
</ul>
<p>In the rails world there are <a href="https://github.com/braintree/pg_ha_migrations">several</a> <a href="https://github.com/doctolib/safe-pg-migrations">active</a> <a href="https://github.com/ankane/strong_migrations">gems</a> devoted to keeping a codebase safe from issues that would cause downtime while migrating tables (ie, zero downtime). But across ecosystems I could not find anything related to protecting against PgBouncer issues.</p>
<p>As a step in this direction, I’ve published a (currently experimental) gem for use in Rails/ActiveRecord apps called <a href="https://rubygems.org/gems/pg_pool_safe_query">pg_pool_safe_query</a>. It will log warnings if SQL is run that is incompatible with PgBouncer and raise an error if advisory locks and prepared statements are not disabled.</p>
<h2 id="future-improvements">Can we improve connections without a pooler?</h2>
<p>A more recent development in Postgres 14 was improvements to <a href="https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/analyzing-the-limits-of-connection-scalability-in-postgres/ba-p/1757266">snapshot scalability</a>, which seem to have resulted in big improvements in efficiently <a href="https://techcommunity.microsoft.com/t5/azure-database-for-postgresql/improving-postgres-connection-scalability-snapshots/ba-p/1806462#first-performance-improvements">maintaining more idle connections</a> in Postgres.</p>
<p>It’s exciting to see effort being applied to increasing connection efficiency in Postgres itself. The author of that snapshot scalability improvement lines up with my own frustrations:</p>
<ul>
<li>Ideally Postgres would better handle traffic spikes without requiring a pooler</li>
<li>Poolers cut out useful database features</li>
<li>Postgres itself would ideally move towards architecture changes across several key areas, eventually culminating in a larger move towards a lighter weight process/thread/async model which better aligns with the C10k problem out of the box</li>
</ul>
<p>Most of the work in the industry <em>seems</em> to concentrate on building better poolers, rather than improving the internals of Postgres connection handling itself<sup id="fnref:17"><a href="#fn:17" role="doc-noteref">17</a></sup>. Outside of PgBouncer you’ve got RDS Proxy, Odyssey, PgCat, Supavisor, PgPool II and I’m sure others. All have their own benefits but suffer from the same transactional scaling limitations.</p>
<p>In fairness to the <em>incredible</em> work that goes into Postgres - every performance improvement they make in every new version is also a connection scalability improvement. If the queries, indexes, plans, and processes are making big performance gains with each version then less connections can do more.</p>
<h2 id="alternatives">PgBouncer alternatives</h2>
<p>There are alternatives to PgBouncer, but the same transaction limitations apply to all of them: each has a transaction mode (or operate exclusively in transaction mode) that offers the best scaling. Once in transaction mode you can’t support most session level features anymore and you’re working off of the fact that database connections spend more time being idle than active.</p>
<p>They all have their own unique benefits in comparison, but have the same fundamental transaction limitations.</p>
<ul>
<li><a href="https://github.com/supabase/supavisor">Supavisor</a></li>
<li><a href="https://github.com/postgresml/pgcat">PgCat</a></li>
<li><a href="https://github.com/yandex/odyssey">Odyssey</a></li>
<li><a href="https://pgpool.net/mediawiki/index.php/Main_Page">Pg Pool II</a></li>
<li><a href="https://aws.amazon.com/rds/proxy/">RDS Proxy</a></li>
</ul>
<h2 id="am-i-finally-done-with-this-post">Am I finally done with this post?</h2>
<p>I think I’ve said enough.</p>
<p>Postgres is great. PgBouncer is important. Know what can go wrong and account for it.</p>
<p>🐘 ✌🏼 🐘</p>
<section role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>This <a href="https://brandur.org/postgres-connections">article from Brandur</a> details some additional nuances of handling connections and pools, but these three are the higher level version of it&nbsp;<a href="#fnref:1" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p>Technically it doesn’t have to be a single instance, it could be a round Robin of multiple PgBouncers, but from a client perspective you connect to a single one</p>
<p><a href="https://www.crunchydata.com/blog/postgres-at-scale-running-multiple-pgbouncers">https://www.crunchydata.com/blog/postgres-at-scale-running-multiple-pgbouncers</a>&nbsp;<a href="#fnref:2" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:3" role="doc-endnote">
<p><a href="https://elements.heroku.com/addons/heroku-postgresql">It’s even lower</a> on their lower powered options. It goes from 20, to 120, to 400, then 500 once you’re around their $400/mo plans.</p>
<p>Supabase has no standard plans with <a href="https://supabase.com/blog/supabase-pgbouncer">more than 50 connections</a>.</p>
<p><a href="https://render.com/docs/databases#connecting-to-your-database">Render.com’s managed Postgres offering</a> is based on memory available on each plan: 6 gigs or less is 97 connections, less than 10 gigs is 197 connections and over 10 gigs is 397 connections.</p>
<p>This isn’t totally unreasonable - managing more connections requires more cores and more memory in a process based model especially. But at their highest tiers these services don’t exceed 500 available connections.</p>
<p>More generalized services like Azure and Amazon RDS will let you go as high as you like, but that’ll go badly.&nbsp;<a href="#fnref:3" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:4" role="doc-endnote">
<p>Which is very exciting to see concentrated work on improving this aspect in Postgres internals! 🤘🏼&nbsp;<a href="#fnref:4" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:5" role="doc-endnote">
<p>This more recent crunchy data article on making sure your Postgres app is production ready implies the old standard of 500 connections is no longer accurate so I’d be curious to know more specifics since most resources still emphasize these numbers <a href="https://www.crunchydata.com/blog/is-your-postgres-ready-for-production">https://www.crunchydata.com/blog/is-your-postgres-ready-for-production</a>&nbsp;<a href="#fnref:5" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:6" role="doc-endnote">
<p>AFAIK this is largely true of any database and MySQL also has connection pooling solutions, but it does <em>seem</em> to be particularly necessary with postgres&nbsp;<a href="#fnref:6" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:7" role="doc-endnote">
<p>There are a couple caveats to this statement. Just having a dedicated low latency pool is an improvement so may slightly help concurrency. PgBouncer can also proxy multiple databases so you could increase read concurrency at least this way.</p>
<p>The queueing behavior of poolers can also be a benefit since you can wait for a connection to be available for longer, vs Postgres instantly rejecting the attempt: <a href="https://www.percona.com/blog/connection-queuing-in-pgbouncer-is-it-a-magical-remedy/">https://www.percona.com/blog/connection-queuing-in-pgbouncer-is-it-a-magical-remedy/</a>&nbsp;<a href="#fnref:7" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:8" role="doc-endnote">
<p>They do mention this in <a href="https://www.pgbouncer.org/features.html">their docs</a>:</p>
<p>&gt; “Note that “transaction” pooling breaks client expectations of the server by design and can be used only if the application cooperates by not using non-working features.”&nbsp;<a href="#fnref:8" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:9" role="doc-endnote">
<p><a href="https://github.com/pgbouncer/pgbouncer/issues/653">https://github.com/pgbouncer/pgbouncer/issues/653</a></p>
<p><a href="https://github.com/pgbouncer/pgbouncer/issues/249">https://github.com/pgbouncer/pgbouncer/issues/249</a></p>
<p>It also just seems to be something they’re not interested in doing&nbsp;<a href="#fnref:9" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:10" role="doc-endnote">
<p>The idea is you fail and continue to retry. See this article for some framework agnostic approaches to retries: <a href="https://postgres.ai/blog/20210923-zero-downtime-postgres-schema-migrations-lock-timeout-and-retries">https://postgres.ai/blog/20210923-zero-downtime-postgres-schema-migrations-lock-timeout-and-retries</a>&nbsp;<a href="#fnref:10" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:11" role="doc-endnote">
<p>I might have five nickels, but still, it happens. Also again I am grateful for anyone taking the time to write up content and share their expertise.&nbsp;<a href="#fnref:11" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:12" role="doc-endnote">
<p>That’s a topic for another time…&nbsp;<a href="#fnref:12" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:13" role="doc-endnote">
<p>In addition to the Ruby pg gem It’s used by the python <a href="https://github.com/psycopg/psycopg">psycopg</a> lib, and node <a href="https://github.com/brianc/node-libpq">node-libpq</a> package (and I’m sure many others). So it seems like most client libraries handle things safely enough at the protocol level to turn off prepared statements</p>
<p>If you are using Go with the pure Go lib/pq driver <a href="https://github.com/lib/pq/issues/889">see this issue</a> for how to properly handle unnamed statements. The <a href="https://github.com/launchbadge/sqlx/issues/368">rust sqlx library</a> seems to have a similar issue. Seems that if a library does not use libpq they end up in a bit of pain when trying to work with PgBouncer&nbsp;<a href="#fnref:13" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:14" role="doc-endnote">
<p>Named prepared statements can boost performance for repetitious queries because they bypass the Parse call on subsequent runs. That’s their primary benefit in comparison to unnamed statements&nbsp;<a href="#fnref:14" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:15" role="doc-endnote">
<p><code>LISTEN</code> can be <a href="https://www.postgresql.org/docs/current/sql-listen.html">called in a transaction as well</a>, but all that means is the session level listen won’t be triggered until the transaction commits, and won’t start listening at all if a rollback is triggered&nbsp;<a href="#fnref:15" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:16" role="doc-endnote">
<p>I do find myself asking “what is the point of nice features if you can’t use them at scale because of transaction mode pooling”? Not being able to use certain features at scale should never preclude them from being built - but it’s a disappointing reality&nbsp;<a href="#fnref:16" role="doc-backlink">↩︎</a></p>
</li>
<li id="fn:17" role="doc-endnote">
<p>I’m a <em>little</em> afraid to have made this statement and the potential for someone to come back at me angry about this being an oversimplification 😅&nbsp;<a href="#fnref:17" role="doc-backlink">↩︎</a></p>
</li>
</ol>
</section>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LibreWolf – Custom version of Firefox, focused on privacy, security and freedom (167 pts)]]></title>
            <link>https://librewolf.net/</link>
            <guid>37431474</guid>
            <pubDate>Fri, 08 Sep 2023 09:29:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://librewolf.net/">https://librewolf.net/</a>, See on <a href="https://news.ycombinator.com/item?id=37431474">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><main><div><p><img src="https://librewolf.net/icon.svg" alt="Logo"></p><h4>A custom version of Firefox, focused on privacy, security and freedom.</h4></div>
<h2 id="what-is-librewolf"><span id="what-is-librewolf"></span><a href="#what-is-librewolf">What is LibreWolf?</a></h2>
<p>This project is a custom and independent version of Firefox, with the primary
goals of privacy, security and user freedom.</p>
<p>LibreWolf is designed to increase protection against tracking and fingerprinting
techniques, while also including a few security improvements. This is achieved
through our privacy and security oriented settings and patches. LibreWolf also
aims to remove all the telemetry, data collection and annoyances, as well as
disabling anti-freedom features like DRM.</p>
<h2 id="main-features"><span id="main-features"></span><a href="#main-features">Main Features</a></h2>
<div><div><picture><source srcset="https://librewolf.net/icons/no-looking.avif" type="image/avif"><source srcset="https://librewolf.net/icons/no-looking.jxl" type="image/jxl"><source srcset="https://librewolf.net/icons/no-looking.webp" type="image/webp"><img src="https://librewolf.net/icons/no-looking.webp" alt="Icon No Telemetry"></picture><h5>No Telemetry</h5><p>No experiments, adware, annoyances, or unnecessary distractions.</p></div><div><p><img src="https://librewolf.net/icons/ublock.svg" alt="Icon Content Blocker Included"></p><h5>Content Blocker Included</h5><p><a href="https://addons.mozilla.org/en-US/firefox/addon/ublock-origin">uBlock Origin</a> is already included for your convenience.</p></div><div><picture><source srcset="https://librewolf.net/icons/lock.avif" type="image/avif"><source srcset="https://librewolf.net/icons/lock.jxl" type="image/jxl"><source srcset="https://librewolf.net/icons/lock.webp" type="image/webp"><img src="https://librewolf.net/icons/lock.webp" alt="Icon Enhanced Privacy"></picture><h5>Enhanced Privacy</h5><p>Hardened to maximize privacy, without sacrificing usability.</p></div><div><picture><source srcset="https://librewolf.net/icons/update.avif" type="image/avif"><source srcset="https://librewolf.net/icons/update.jxl" type="image/jxl"><source srcset="https://librewolf.net/icons/update.webp" type="image/webp"><img src="https://librewolf.net/icons/update.webp" alt="Icon Fast Updates"></picture><h5>Fast Updates</h5><p>LibreWolf is always built from the latest Firefox stable source, for up-to-date security and features along with stability.</p></div><div><p><img src="https://librewolf.net/icons/open-source.svg" alt="Icon Open Source"></p><h5>Open Source</h5><p>Everyone can participate in the development of LibreWolf. Join us on <a href="https://codeberg.org/librewolf">GitLab</a>, <a href="https://codeberg.org/librewolf">Codeberg</a> and <a href="https://matrix.to/#/#librewolf:matrix.org">Matrix</a>.</p></div></div>
<p>For more details read the full <a href="https://librewolf.net/docs/features">feature list</a>.</p>
<h2 id="contributing"><span id="contributing"></span><a href="#contributing">Contributing</a></h2>
<p>LibreWolf is a largely community-driven project and we don’t just say that. We
encourage you to join us in our
<a target="_blank" rel="noreferrer" href="https://matrix.to/#/#librewolf:matrix.org">Matrix</a> room. You can also visit us
on <a target="_blank" rel="noreferrer" href="https://www.reddit.com/r/LibreWolf/">r/librewolf</a> and
<a target="_blank" rel="noreferrer" href="https://lemmy.ml/c/librewolf">Lemmy</a>.</p>
<p>Merge requests, bug reports, and feature requests are welcome in all
<a target="_blank" rel="noreferrer" href="https://codeberg.org/librewolf">our repositories</a>. We value discussion, debate,
and feedback.</p>
<p>If you wish to contribute a build for a currently unsupported operating system,
we will do our best to support you.</p>
<h3 id="core-contributors"><span id="core-contributors"></span><a href="#core-contributors">Core contributors</a></h3>

<h3 id="questions"><span id="questions"></span><a href="#questions">Questions?</a></h3>
<p>Check out our <a href="https://librewolf.net/docs/faq">FAQ</a> first. Most questions can already be answered by
them. After that, you can also ask in our
<a target="_blank" rel="noreferrer" href="https://matrix.to/#/#librewolf:matrix.org">Matrix</a> room, or open a issue in our
<a target="_blank" rel="noreferrer" href="https://codeberg.org/librewolf/issues">issue tracker</a> for specific questions.</p></main></article></div>]]></description>
        </item>
    </channel>
</rss>