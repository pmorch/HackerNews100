<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 08 Jul 2024 02:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[I'm funding Ladybird because I can't fund Firefox (204 pts)]]></title>
            <link>http://jackkelly.name/blog/archives/2024/07/06/im_funding_ladybird_because_i_cant_fund_firefox/</link>
            <guid>40900648</guid>
            <pubDate>Sun, 07 Jul 2024 21:38:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://jackkelly.name/blog/archives/2024/07/06/im_funding_ladybird_because_i_cant_fund_firefox/">http://jackkelly.name/blog/archives/2024/07/06/im_funding_ladybird_because_i_cant_fund_firefox/</a>, See on <a href="https://news.ycombinator.com/item?id=40900648">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  <div><p>
  Posted on July  6, 2024
  
    by Jack Kelly
  

  
    </p>
  
</div>

  <p>I’ve been meaning to write this one for a while, but the <a href="https://ladybird.org/announcement.html">announcement of the
Ladybird Browser Initiative</a> makes now a particularly good time.</p>
<p><strong>TL;DR:</strong> Chrome is eating the web. I have wanted to
help fund a serious alternative browser for quite some time, and while
Firefox remains the largest potential alternative, Mozilla has never let
me. Since I can’t fund Firefox, I’m going to show there’s money in
user-funded web browsers by <a href="https://donorbox.org/ladybird">funding Ladybird instead</a>. You
should too.</p>
<!--more-->
<h2 id="why-browser-diversity-matters">Why Browser Diversity
Matters</h2>
<p>An open web requires a healthy ecosystem of several competing
browsers, where each has enough market share that no one vendor has de
facto control over web standards. That’s the world we used to have,
after Firefox cracked the dominance of Microsoft’s Internet Explorer
(IE) in the 1990s. IE’s poor support for internet standards held back
web development all through the late 1990s and early 2000s, and
competition from Firefox allowed developers to build “for the web”
instead of “for IE6”, forcing browser vendors to catch up.</p>
<p>Unfortunately, we are back in a world without healthy browser
competition. <a href="https://gs.statcounter.com/browser-market-share/">statcounter.com</a>
claims that Chrome, Google’s browser, has over 65% market share. Add
Edge (which uses Blink, Chrome’s browser engine, under the hood) and
you’re over 70%. This market dominance allows Google to push through
changes like its “Manifest V3” format for browser extensions, which
coincidentally cripples <a href="https://arstechnica.com/gadgets/2024/05/google-starts-deprecating-older-more-capable-chrome-extensions-next-week/">ad
blockers</a>.</p>
<details>
<summary>
Sidebar: Ad companies had their chance
</summary>
<p>While a discussion of the economics of ad-supported sites is outside
the scope of this post, someone will ask “don’t you like free things on
the internet?” if I don’t address it first.</p>
<p>Online advertising has become so obnoxious that ad blockers are
all-but-necessary for users to get anything done online. More than that,
I feel obliged to install ad blockers on family computers that I
support: skipping all those megabytes of random advertising JavaScript
significantly extends the lifespan of older computers and stops my
less-technical family members from being tricked into installing fake
malware versions of software. <a href="https://www.tomsguide.com/news/the-fbi-now-recommends-using-an-ad-blocker-heres-why">Even
the FBI recommends ad blockers</a>.</p>
Sorry, the online advertising industry had its chance, and they blew it.
</details>
<p>This is also the case for other user-hostile features like “Encrypted
Media Extensions” (aka “DRM for the web”). A healthy browser ecosystem
would have been able to vigorously push against features that take
control from the users; instead, <a href="https://www.jwz.org/blog/2024/06/mozillas-original-sin/">Mozilla
caved</a> in the hopes of maintaining Firefox market share but didn’t
even get that.</p>
<h2 id="why-wont-mozilla-let-me-fund-firefox">Why won’t Mozilla let me
Fund Firefox?</h2>
<p>According to the Mozilla Foundation’s <a href="https://foundation.mozilla.org/en/donate/help/#frequently-asked-questions">Donation
FAQ</a>, “Firefox is maintained by the Mozilla Corporation, a
wholly-owned subsidiary of the Mozilla Foundation. While Firefox does
produce revenue — chiefly through search partnerships — this earned
income is largely reinvested back into the Corporation”. “Search
partnerships” means “Google”, who made up <a href="https://en.wikipedia.org/wiki/Mozilla_Corporation#Google">81% of
Mozilla Corporation’s revenue in 2022</a>. This means Firefox’s primary
revenue source is also their direct competitor, and they seem to have
little ability to change that.</p>
<p>Mozilla has backed themselves into a very poor position. In recent
years, Mozilla Corporation has made several controversial moves in
pursuit of revenue. Off the top of my head, there was the <a href="https://www.theverge.com/2017/12/16/16784628/mozilla-mr-robot-arg-plugin-firefox-looking-glass">Mr.&nbsp;Robot
addon</a>, automatically loaded into people’s browsers to advertise a TV
show; <a href="https://www.makeuseof.com/firefox-stop-address-bar-sponsored-links/">sponsored
links in the address bar</a>; <a href="https://www.ghacks.net/2020/11/22/how-to-disable-sponsored-top-sites-in-the-firefox-web-browser/">sponsored
“top sites” on the “new tab” page</a> a reading list startup called
“Pocket”, <a href="https://venturebeat.com/mobile/mozilla-responds-to-firefox-user-backlash-over-pocket-integration/">integrated
into Firefox without warning</a>; and a Mozilla VPN service, complete
with <a href="https://www.theregister.com/2023/05/26/mozilla_apologizes_for_intrusive_vpn_ad/">in-browser
pop-up ads</a>. Cal Paterson has <a href="https://calpaterson.com/mozilla.html">another good list</a>.
Meanwhile, Firefox market share falls and the <a href="https://www.theregister.com/2024/02/09/mozilla_ceo_mitchell_baker_departs/">outgoing
Mozilla Corporation CEO</a> gets paid millions (<a href="https://assets.mozilla.net/annualreport/2022/mozilla-fdn-990-ty22-public-disclosure.pdf">6.9
million USD in 2022</a> — see page 8).</p>
<p>The problem is that many people specifically use Firefox because
they’re sick of advertising and cross-promotion everywhere and want a
browser that’s “just a browser”. On top of that, silently installing
addons like the Mr.&nbsp;Robot extension undermine user trust in one of the
most sensitive software projects people use.</p>
<p>Despite desperately trying to find more revenue sources, Mozilla
Corporation stubbornly refuses to <em>just let users fund Firefox</em>.
Mozilla Foundation even has a specific donation form for Thunderbird
(Mozilla’s mail client), but not Firefox. I’m sure they could have found
some way of making it work with their corporate structure, and it
baffles me that they haven’t.</p>
<h2 id="ladybird">Ladybird</h2>
<p>Ladybird used to be the web browser for <a href="https://serenityos.org/">SerenityOS</a>, a from-scratch hobby
operating system written by Andreas Kling (and community). On 2024-06-03
(about a month ago), he forked Ladybird into a <a href="https://github.com/LadybirdBrowser/ladybird">separate project</a>
and <a href="https://awesomekling.substack.com/p/forking-ladybird-and-stepping-down-serenityos">stepped
away from SerenityOS</a>. Presumably this was prep-work to launch the <a href="https://ladybird.org/">Ladybird Browser Initiative</a>, a
non-profit dedicated to building the rest of the browser.</p>
<p>They are very open that the browser is unfinished — the first alpha
release is planned for 2026. But they have running code, and I can
<em>actually help fund them</em>. Wesley Moore <a href="https://www.wezm.net/v2/posts/2024/how-much-is-a-browser-worth/">runs
some numbers</a> in a similar post to this one, and concludes that 15
USD/month (~22.50 AUD in July 2024) is a good amount for a recurring
donation. I’m in; are you?</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The internet is already over (2022) (119 pts)]]></title>
            <link>https://samkriss.substack.com/p/the-internet-is-already-over</link>
            <guid>40899761</guid>
            <pubDate>Sun, 07 Jul 2024 19:17:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://samkriss.substack.com/p/the-internet-is-already-over">https://samkriss.substack.com/p/the-internet-is-already-over</a>, See on <a href="https://news.ycombinator.com/item?id=40899761">Hacker News</a></p>
<div id="readability-page-1" class="page"><div dir="auto"><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png" width="1368" height="1156" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1156,&quot;width&quot;:1368,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:2532343,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2F19221e8d-a9aa-4143-b9a6-1e6f951faa44_1368x1156.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>There’s a phrase that’s been living inside my head lately, a brain parasite, some burrowing larva covered in thorns and barbs of words. When it moves around in there it churns at the soft tissues like someone’s stuck a very small hand blender in my skull. It repeats itself inside the wormy cave system that used to be my thoughts. It says </span><em>you will not survive. You will not survive. You will not survive.</em></p><p><span>Earlier this year, an article in the </span><em>Cut</em><span> reported that the cool thing now is to have messy hair and smoke cigarettes again. You might remember it; the piece was widely mocked for a day or two, and then it vanished without a trace, which is how these things tend to go. But the headline was incredible, and it stuck with me. </span><em><a href="https://www.thecut.com/2022/02/a-vibe-shift-is-coming.html" rel="">A Vibe Shift Is Coming. Will Any Of Us Survive It?</a></em><span> Everyone else seemed to focus on the ‘vibe shift’ stuff, but the second part was much more interesting. To talk about </span><em>survival</em><span>—what extraordinary stakes, for a piece that was, in essence, about how young people are wearing different types of shoes from the shoes that you, as a slightly older person who still wants to think of themselves as young, wear. Everything is stripped back to the rawest truth: that you are a fragile creature perishing in time. And all you need to do is apply Betteridge’s Law for the real content to shine through. </span><em>No. None of you will survive</em><span>.</span></p><p><span>There was an ancient thought: that </span><em>Zeus feeds on the world</em><span>. ‘The universe is cyclically consumed by the fire that engendered it.’ Our God is a devourer, who makes things only for the swallowing. As it happens, this was the </span><em>first</em><span> thought, the first ever written down in a book of philosophy, the first to survive: that nothing survives, and the blankness that birthed you will be the same hole you crawl into again. Anaximander: ‘Whence things have their origin, thence also their destruction lies…’ In the Polynesian version, Maui tried to achieve immortality by taking the form of a worm and slithering into the vagina of Hine-nui-te-po, goddess of night and death.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-1-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-1-71503638" target="_self" rel="">1</a></span><span> He failed. Hine-nui-te-po’s pussy is full of obsidian teeth; when she stirred in the night those teeth sliced clean through his body. He dribbled out again, a loose mulch of the hero who conquered the Sun.</span></p><p><em>You will not survive</em><span> is not only a frightening idea. The things I hope for are doomed, and everything I try to create will be a failure, but so will everything I despise.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-2-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-2-71503638" target="_self" rel="">2</a></span><span> These days, it repeats itself whenever I see something that’s trying its hardest to make me angry and upset. There’s a whole class of these objects: they’re never particularly interesting or important; they just exist to jab you into thinking that the world is going in a particular direction, away from wherever you are. </span><em>One-Third Of Newborn Infants Now Describe Themselves As Polyamorous—Here’s Why That’s A Good Thing</em><span>. Should I get upset about this? Should I be concerned? Why bother? It will not survive.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-3-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-3-71503638" target="_self" rel="">3</a></span><span> </span><em>Meet The Edgy Influencers Making Holocaust Denial Hip Again</em><span>. Are we in trouble? Maybe, but even trouble is ending. </span><em>Everyone That Matters Has Started Wearing Jeans Over Their Heads With Their Arms Down The Leg Holes And Their Faces All Cramped Up In The Sweaty Groin Region, And They Walk Down The Street Like This, Bumping Into Things, And When They Sit Down To Eat They Just Pour Their Subscription-Service Meal-Replacement Slurry Over The Crotch Of Their Jeans And Lick At The Dribblings From The Inside, And They’re Covered In Flies And Smell Bad And Also They’re Naked From The Waist Down Because Their Trousers Are On Their Heads, That’s Part Of It Too—We Show You How To Get The Look!</em><span> How proud they are of their new thing. ‘The strong iron-hearted man-slaying Achilles, who would not live long.’</span></p><p><span>In fact, one of the things that will not survive is novelty itself: trends, fads, fashions, scenes, vibes. We are thrown back into cyclical time; what’s growing old is the cruel demand to make things new. It’s already trite to notice that all our films are franchises now, all our bestselling novelists have the same mass-produced non-style, and all our pop music sounds like a tribute act.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-4-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-4-71503638" target="_self" rel="">4</a></span><span> But consider that the cultural shift that had all those thirtysomething </span><em>Cut</em><span> writers so worried about their survival is simply the return of a vague Y2K sensibility, which was itself just an echo of the early 1980s. Angular guitar music again, flash photography, plaid. We’re on a twenty-year loop: the time it takes for a new generation to be born, kick around for a while, and then settle into the rhythm of the spheres.</span></p><p>Every time this happens, it coincides with a synodic conjunction of Jupiter and Saturn. Jupiter, the triumphant present; Saturn, senescence, decline. The son who castrates his father, the father who devours his sons: once every twenty years, they are indistinguishable in the sky. Astrologers call this the Great Chronocrator. The last one was at the end of 2020, and it’ll occur twice more in my lifetime: when these witless trendwatchers finally shuffle off, they’ll be tended on their deathbeds by a nurse with messy black eyeshadow and low-rise scrubs. Jupiter and Saturn will burn above you as a single point, and with your last rattling breaths you’ll still be asking if she thinks you’re cool. You don’t get it. ‘For oute of olde feldes, as men seith, cometh al this newe corn fro yeer to yere.’ We are entering a blissful new Middle Ages, where you simply soak in a static world until the waters finally close in over your head.</p><p><span>The things that </span><em>will</em><span> survive are the things that are already in some sense endless. The sea; the night; the word. Things with deep fathoms of darkness in them.</span></p><p>The internet will not survive.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg" width="1456" height="1042" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/a51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1042,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:413106,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fa51b61a9-059d-45ed-8104-eaa81b678cd5_1536x1099.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>In 1977, Ken Olsen declared that ‘there is no reason for any individual to have a computer in his home.’ In 1995, Robert Metcalfe predicted in </span><em>InfoWorld</em><span> that the internet would go ‘spectacularly supernova’ and then collapse within a year. In 2000, the </span><em>Daily Mail</em><span> reported that the ‘Internet may be just a passing fad,’ adding that ‘predictions that the Internet would revolutionise the way society works have proved wildly inaccurate.’ Any day now, the millions of internet users would simply stop, either bored or frustrated, and rejoin the real world.</span></p><p><span>Funny, isn’t it? You can laugh at these people now, from your high perch one quarter of the way into the twenty-first century. Look at these morons, stuck in their grubby little past, who couldn’t even correctly identify the shape of the year 2022. </span><em>You</em><span> can see it perfectly, because you’re smart.</span><em> You</em><span> know that the internet has changed everything, forever.</span></p><p>If you like the internet, you’ll point out that it’s given us all of human knowledge and art and music, instantly accessible from anywhere in the world; that you can arrive in a foreign city and immediately guide yourself to a restaurant and translate the menu and also find out about the interesting historical massacres that took place nearby, all with a few lazy swipes of your finger. So many interesting little blogs! So many bizarre subcultures! It’s opened up our experience of the world: now, nothing is out of reach.</p><p><span>To be honest, it’s difficult to reconstruct what the unbridled techno-optimists think; there’s so few of them left. Still, those who </span><em>don’t</em><span> like the internet usually agree with them on all the basics—they just argue that we’re now in touch with the </span><em>wrong sort</em><span> of thing: bad kids’ cartoons, bad political opinions, bad ways of relating to your own body and others. Which is why it’s so important to get all this unpleasant stuff off the system, and turn the algorithm towards what is good and true.</span></p><p><span>They might be right, but you could go deeper. The internet has enabled us to live, for the first time, entirely apart from other people. It replaces everything good in life with a low-resolution </span><a href="https://damagemag.com/2022/04/21/the-internet-is-made-of-demons/" rel="">simulation</a><span>. A handful of sugar instead of a meal: addictive but empty, just enough to keep you alive. It even seems to be killing off sex, replacing it with more cheap, synthetic </span><a href="https://onlyfans.com/" rel="">ersatz</a><span>. Our most basic biological drives simply wither in its cold blue light. People will cheerfully admit that the internet has destroyed their attention spans, but what it’s really done away with is your ability to </span><em>think</em><span>. Usually, when I’m doing something boring but necessary—the washing up, or walking to the post office—I’ll constantly interrupt myself; there’s a little Joycean warbling from the back of my brain. ‘Boredom is the dream bird that broods the egg of experience.’ But when I’m listlessly killing time on the internet, there is </span><em>nothing</em><span>. The mind does not wander. I am not there. That rectangular hole spews out war crimes and cutesy comedies and affirmations and porn, all of it mixed together into one general-purpose informational goo, and I remain in its trance, the lifeless scroll, twitching against the screen until the sky goes dark and I’m one day closer to the end. You lose hours to—what? An endless slideshow of barely interesting images and actively unpleasant text. </span><em>Oh, cool—more memes!</em><span> You know it’s all very boring, brooding nothing, but the internet addicts you to your own boredom. I’ve tried heroin: this is worse. More numb, more blank, more nowhere. A portable suicide booth; a device for turning off your entire existence. Death is no longer waiting for you at the far end of life. It eats away at your short span from the inside out.</span></p><p><span>But lately I’m starting to think that the last thing the internet destroys might be itself. I think they might be vindicated, Ken Olson and Robert Metcalfe and even, God forgive me, the </span><em>Daily Mail</em><span>.</span></p><p><span>In the future—not the distant future, but ten years, five—people will remember the internet as a brief dumb enthusiasm, like phrenology or the dirigible. They might still use computer networks to send an email or manage their bank accounts, but those networks will not be where culture or politics happens. The idea of spending </span><em>all day online</em><span> will seem as ridiculous as sitting down in front of a nice fire to read the phone book. Soon, people will find it incredible that for several decades all our art was obsessed with </span><em>digital computers</em><span>: all those novels and films and exhibitions about tin cans that make beeping noises, handy if you need to multiply two big numbers together, but so lifeless, so sexless, so grey synthetic glassy bugeyed spreadsheet plastic drab. And all your smug chortling over the people who failed to predict our internetty present—if anyone remembers it, it’ll be with exactly the same laugh.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-5-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-5-71503638" target="_self" rel="">5</a></span></p><p><span>You know, secretly, even if you’re pretending not to, that this thing is nearing exhaustion. There is simply </span><em>nothing there</em><span> online. All language has become rote, a halfarsed performance: even the outraged mobs are screaming on autopilot. Even genuine crises can’t interrupt the tedium of it all, the bad jokes and predictable thinkpieces, spat-out enzymes to digest the world. ‘Leopards break into the temple and drink all the sacrificial vessels dry; it keeps happening; in the end, it can be calculated in advance and is incorporated into the ritual.’ Online is not where people meaningfully </span><em>express themselves</em><span>; that still happens in the remaining scraps of the nonnetworked world. It’s a parcel of time you give over to the machine. Make the motions, chant its dusty liturgy. The newest apps even </span><a href="https://www.theguardian.com/media/2022/aug/21/its-a-modern-day-facebook-how-bereal-became-gen-zs-favourite-app" rel="">literalise this</a><span>: everyone has to post a selfie at exactly the same time, an inaudible call to prayer ringing out across the world. Recently, at a bar, I saw the room go bright as half the patrons suddenly started posing with their negronis. This is called </span><em>being real</em><span>. </span></p><p><span>Whoever you are, a role is already waiting for you. All those pouty nineteen-year-old lowercase nymphets, so fluent in their borrowed boredom, flatly reciting </span><em>don’t just choke me i want someone to cut off my entire head</em><span>. All those wide-eyed video creeps, their inhuman enthusiasm, </span><em>hi guys! hi guys!! so today we’re going to talk about—don’t forget to like and subscribe!! hi guys!!!</em><span> Even on the deranged fringes, a dead grammar has set in. The people who fake Tourette’s for TikTok and the people who fake schizophrenia for no reason at all. </span><em>VOICES HAVE REVEALED TO ME THAT YOUR MAILMAN IS A DEMONIC ARCHON SPAT FROM BABYLON’S SPINNING PIGMOUTH, GOD WANTS YOU TO KILL HIM WITH A ROCKET LAUNCHER</em><span>. Without even passing out of date, every mode of internet-speak already sounds antiquated. Aren’t you embarrassed? Can’t you hear, under the chatter of these empty forms, a long low ancient whine, the last mewl of that cat who wants to haz cheezburger?</span></p><p><span>When I say the internet is running dry, I am not just basing this off vibes. The exhaustion is measurable and real. 2020 saw a grand, mostly unnoticed shift in online behaviour: the </span><a href="https://www.rivaliq.com/blog/social-engagement-benchmark-trends-2020/" rel="">clickhogs all went catatonic</a><span>, thick tongues lolling in the muck. On Facebook, the average engagement rate—the number of likes, comments, and shares per follower—fell by 34%, from 0.086 to 0.057. Well, everyone knows that the mushrooms are spreading over Facebook, hundreds of thousands of users </span><a href="https://www.vox.com/recode/2022/2/2/22915110/facebook-meta-user-growth-decline-first-time-metaverse-mark-zuckerberg-tiktok-competition-earnings" rel="">liquefying out of its corpse</a><span> every year. But the same pattern is everywhere. Engagement fell 28% on Instagram and 15% on Twitter. (It’s </span><a href="https://www.digitalinformationworld.com/2022/03/this-new-report-reveals-surprising.html" rel="">kept falling since</a><span>.) Even on TikTok, the terrifying brainhole of tomorrow, the walls are closing in. Until 2020, the average daily time spent on the app kept rising in line with its growing user base; since then the number of users has kept growing, but the thing is capturing </span><a href="https://www.insiderintelligence.com/content/time-spent-tiktok-decline" rel="">less and less</a><span> of their lives.</span></p><p><span>And this was, remember, a year in which millions of people had nothing to do except engage with great content online—and in which, for a few months, liking and sharing the right content became an urgent moral duty. Back then, I thought the pandemic and the protests had permanently hauled our collective human semi-consciousness over to the machine. Like most of us, I couldn’t see what was really happening, but there were some people who could. Around the same time, strange new conspiracy theories started doing the rounds: that </span><a href="https://forum.agoraroad.com/index.php?threads/dead-internet-theory-most-of-the-internet-is-fake.3011/" rel="">the internet is empty</a><span>, that all the human beings you used to talk to have been replaced by bots and drones. ‘The internet of today is entirely sterile… the internet may seem gigantic, but it’s like a hot air balloon with nothing inside.’ They weren’t wrong.</span></p><p><span>What’s happening?</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-6-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-6-71503638" target="_self" rel="">6</a></span><span> Here’s a story from the very early days of the internet. In the 90s, someone I know started a collaborative online zine, a mishmash text file of barely lucid thoughts and theories. It was deeply weird and, in some strange corners, very popular. Years passed and technology improved: soon, they could break the text file into different posts, and see exactly how many people were reading each one. They started optimising their output: the most popular posts became the model for everything else; they found a style and voice that </span><em>worked</em><span>. The result, of course, was that the entire thing became rote and lifeless and rapidly collapsed. Much of the media is currently going down the same path, refining itself out of existence. Aside from the </span><em>New Yorker</em><span>’s fussy umlauts, there’s simply nothing to distinguish any one publication from any other. (And platforms like this one are not an </span><em>alternative</em><span> to the crisis-stricken media, just a further acceleration in the process.) The same thing is happening everywhere, to everyone. The more you relentlessly optimise your network-facing self, the more you chase the last globs of loose attention, the more frazzled we all become, and the less anyone will be able to sustain any interest at all.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-7-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-7-71503638" target="_self" rel="">7</a></span><span> </span></p><p>Everything that depends on the internet for its propagation will die. What survives will survive in conditions of low transparency, in the sensuous murk proper to human life.</p><p><span>For a while, it was possible to live your entire life online. The world teemed with new services: simply dab at an app, and the machine would summon some other slumping creature with a skin condition to deliver your groceries, or drive you in pointless circles around town, or meet you for overpriced drinks and awkward sex and vanish. Like everyone, I thought this was the inevitable shape of the future. ‘You’ll own nothing, and you’ll be happy.’ We’d all be reduced to a life spent swapping small services for the last linty coins in our pockets. </span><em>It’s Uber for dogs! It’s Uber for dogshit! It’s picking up a fresh, creamy pile of dogshit with your bare hands—on your phone!</em><span> But this was not a necessary result of new technologies. The internet was not subordinating every aspect of our lives </span><em>by itself</em><span>, under its own power. The online economy is an energy sink; it’s only survived this far as a </span><em>parasite</em><span>, in the bowels of something else.</span></p><p><span>That </span><em>something else</em><span> is a vast underground cavern of the dead, billions of years old.</span></p><p><span>The Vision Fund is an investment vehicle headquartered in London and founded by Japan’s SoftBank to manage some $150 billion, mostly from the sovereign wealth funds of Saudi Arabia and the UAE, which it’s poured into Uber and DoorDash and WeWork and Klarna and Slack. It provides the money that </span><a href="https://www.theatlantic.com/ideas/archive/2019/10/say-goodbye-millennial-urban-lifestyle/599839/" rel="">effectively subsidises</a><span> your autistic digital life. These firms could take over the market because they were so much cheaper than the traditional competitors—but most of them were never profitable; they survived on Saudi largesse. </span></p><p><span>Investors were willing to sit on these losses; it’s not as if there were many alternatives. Capital is no longer capable of effectively reproducing itself in the usual way, through the production of commodities. Twenty-five years ago manufacturing represented a </span><a href="https://data.worldbank.org/indicator/NV.IND.MANF.ZS" rel="">fifth of global GDP</a><span>; in 2020 it was down to 16%. Interest rates have hovered near zero for well over a decade as economies struggle to grow. Until this year, governments were still issuing negative-yield bonds, and </span><a href="https://www.bloomberg.com/news/articles/2021-08-01/trillions-of-negative-yielding-debt-redeem-europe-s-bond-bulls" rel="">people were buying them</a><span>—a </span><em>predictable</em><span> loss looked like the least bad option. The only reliable source of profits is in the extraction of raw materials: chiefly, pulling the black corpses of trillions of prehistoric organisms out of the ground so they can be set on fire. Which means that the feudal rulers of those corpselands—men like King Salman, Custodian of the Two Holy Mosques—ended up sitting on a vast reservoir of capital without many productive industries through which it could be valorised. So, as a temporary solution, they stuck it in the tech sector. </span></p><p><span>It didn’t matter that these firms couldn’t turn a profit. The </span><em>real</em><span> function was not to make money in the short term; it was to suck up vast quantities of user data. Where you go, what you buy; a perfect snapshot of millions of ordinary lives. They were betting that this would be the currency of the future, as fundamental as oil: the stuff that rules the world.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-8-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-8-71503638" target="_self" rel="">8</a></span></p><p><span>They were wrong, but in the process of being wrong, they created a monster. Your frictionless digital future, your very important culture wars, your entire sense of self—it’s just a waste byproduct of the perfectly ordinary, centuries-old global circulation of fuel, capital, and Islam. It turns out that if these three elements are arranged in one particular way, people will start behaving strangely. They’ll pretend that by spending all day on the computer they’re actually </span><em>fighting fascism</em><span>, or </span><em>standing up for women’s sex-based rights</em><span>, as if the entire terrain of combat wasn’t provided by a nightmare head-chopping theocratic state.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-9-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-9-71503638" target="_self" rel="">9</a></span><span> They’ll pretend that it’s normal to dance alone in silence for a front-facing camera, or that the intersection of art and technology is somehow an interesting place to be. For a brief minute, you’ll get the sociocultural Boltzmann entity we call the internet. ‘But nevertheless, it was only a minute. After nature had drawn a few breaths, the star cooled and congealed, and the clever beasts had to die.’</span></p><p><span>The tables are already being cleared at the great tech-sector chow-down.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-10-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-10-71503638" target="_self" rel="">10</a></span><span> Online services are reverting to market prices. The Vision Fund is the worst performing fund in SoftBank’s history; in the last quarter alone it’s </span><a href="https://www.bloomberg.com/news/articles/2022-05-12/softbank-vision-fund-posts-a-record-loss-as-son-s-bets-fail" rel="">lost over $20 billion</a><span>. Most of all, it’s now impossible to ignore that the promise propping up the entire networked economy—that user data could power a system of terrifyingly precise targeted advertising—was a lie. It simply does not work. ‘It sees that you bought a </span><a href="https://www.idler.co.uk/article/adam-curtis-social-media-is-a-scam/" rel="">ticket to Budapest</a><span>, so you get more tickets to Budapest…All they really know about you is your shopping.’ Now, large companies are cutting out their online advertising budgets entirely, and seeing </span><a href="https://marketinginsidergroup.com/marketing-strategy/digital-ads-dont-work-and-everyone-knows-it/" rel="">no change whatsoever</a><span> to their bottom line. One study found that algorithmically targeted advertising performed </span><em>worse</em><span> than ads </span><a href="https://pubsonline.informs.org/doi/pdf/10.1287/mksc.2019.1188" rel="">selected at random</a><span>. This is what </span><a href="https://www.lrb.co.uk/the-paper/v44/n09/donald-mackenzie/blink-bid-buy" rel="">sustains the entire media</a><span>, provides 80% of Google’s income and 99% of Facebook’s, and it’s made of magic beans.</span></p><p><span>A dying animal still makes its last few spastic kicks: hence the recent flurry of strange and stillborn ideas. Remember the Internet of Things? Your own lightbulbs blinking out ads in seizure-inducing Morse code, your own coffee machine calling the police if you try to feed it some unlicensed beans. Remember the Metaverse? The grisly pink avatar of Mark Zuckerberg, bobbing around like the ghost of someone’s foreskin through the scene of the recent genocides. </span><em>Wow! It’s so cool to immersively experience these bloodmires in VR!</em><span> More recent attempts to squeeze some kind of profit out of this carcass are, somehow, worse. </span><em>Here’s how web3 is about to disrupt the meat industry. Every time you buy a pound of tripe, your physical offal will be bundled with a dedicated TripeToken, which maintains its value and rarity even after the tripe has been eaten, thanks to a unique blockchain signature indexed to the intestinal microbiome of the slaughtered cattle! By eating large amounts of undercooked offal while trading TripeTokens on secondary markets, you can incentivise the spread of your favourite cattle diseases—and if one of the pathogens you own jumps the species barrier to start infecting humans, you’ve successfully monetised the next pandemic! Once you get sick, you can rent out portions of your own intestinal tract to an industrial meat DAO in exchange for SlaughterCoins. Because SlaughterCoins are linked via blockchain to the progressive disintegration of your body, they’re guaranteed to increase in value! And when your suffering becomes unbearable, local abattoirs will bid to buy up your SlaughterCoin wallet in exchange for putting you out of your misery with a bolt gun to the head! </em><span>Yes, the future is always capable of getting worse. But </span><em>this</em><span> future is simply never going to happen. Not the next generation of anything, just a short-term grift: the ship’s rats stripping the galley of all its silverware on their way out.</span></p><p>If you really want to see how impotent the internet is, though, you only have to look at politics. </p><p><span>Everyone agrees that the internet has </span><a href="https://www.theatlantic.com/magazine/archive/2022/05/social-media-democracy-trust-babel/629369/" rel="">swallowed our entire political discourse whole</a><span>. When politicians debate, they trade crap one-liners to be turned into gifs. Their strategists seem to think elections are won or lost </span><a href="https://thehill.com/opinion/white-house/3632191-the-dark-brandon-rises/" rel="">on memes</a><span>. Entire movements emerge out of flatulent little echo chambers; elected representatives giddy over the evils of seed oils or babbling about how it’s not their job to educate you. And it’s true that the internet has changed some things: mostly, it’s helped break apart the cohesive working-class communities that produce a strong left, and turned them into vague swarms of monads. But as a political </span><em>instrument</em><span>, all it can do is destroy anyone who tries to pick it up—because everything that reproduces itself through the internet is doomed. </span></p><p><span>Occasionally, online social movements do make something happen. A hand emerges from out of the cloud to squish some minor individual. Let’s get her friends to denounce her! Let’s find out where she lives! You can have your sadistic fun and your righteous justice at the same time: doesn’t it feel good to be good? But these movements build no institutions, create no collective subjects, and produce no meaningful change. Their only power is punishment—and this game only works </span><em>within</em><span> the internet, and only when everyone involved agrees to play by the internet’s rules.</span><span><a data-component-name="FootnoteAnchorToDOM" id="footnote-anchor-11-71503638" href="https://samkriss.substack.com/p/the-internet-is-already-over#footnote-11-71503638" target="_self" rel="">11</a></span><span> As soon as they run up against anything with a separate set of values—say, a Republican Party that wants to put its guy on the Supreme Court, #MeToo or no #MeToo—they instantly crumble. And if, like much of the contemporary left, you're left with nothing on which to build your political movement except a hodgepodge of online frenzies, you will crumble too. </span></p><p><span>The post-George Floyd demonstrations might be our era’s greatest tragedy: tens of millions of people mobilised in (possibly) the largest protest movement in human history, all for an urgent and necessary cause—and achieving precisely </span><em>nothing</em><span>. </span><a href="https://samkriss.com/2020/06/10/white-skin-black-squares/" rel="">At the time, I worried</a><span> that the mass street movement risked being consumed by the sterile politics of online; this is exactly what happened. Now, even that vague cultural halo is spent. Whatever </span><em>wokeness</em><span> was, as of 2022 it’s so utterly burned out as a cultural force that anyone still grousing about it 24/7 is a guaranteed hack. More recently, there’s been worry about the rise of the ‘</span><a href="https://www.vanityfair.com/news/2022/04/inside-the-new-right-where-peter-thiel-is-placing-his-biggest-bets" rel="">new right</a><span>’—a oozingly digitised political current whose </span><em>effective</em><span> proposition is that people should welcome a total dictatorship to prevent corporations posting rainbow flags on the internet. You can guess what I think of its prospects.</span></p><p><span>Things will survive in proportion to how well they’ve managed to insulate themselves from the internet and its demands. The </span><em>Financial Times </em><span>will outlive the </span><em>Guardian</em><span>. Paintings will outlive NFTs. Print magazines will outlive Substack. You will, if you play your cards right, outlive me. If anything interesting ever happens again, it will not be online. You will not get it delivered to your inbox. It will not have a podcast. This machine has never produced anything of note, and it never will.</span></p><p><em>A sword is against the internet, against those who live online, and against its officials and wise men. A sword is against its false prophets, and they will become fools. A sword is against its commentators, and they will be filled with exhaustion. A sword is against its trends and fashions and against all the posturers in its midst, and they will become out of touch. A sword is against its cryptocoins, and they will be worthless. A drought is upon its waters, and they will be dried up. For it is a place of graven images, and the people go mad over idols. So the desert creatures and hyenas will live there and ostriches will dwell there. The bots will chatter at its threshold, and dead links will litter the river bed. It will never again be inhabited or lived in from generation to generation.</em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg" width="1100" height="781" data-attrs="{&quot;src&quot;:&quot;https://bucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com/public/images/d3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:781,&quot;width&quot;:1100,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:117542,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/jpeg&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fbucketeer-e05bbc84-baa3-437e-9518-adb32be77984.s3.amazonaws.com%2Fpublic%2Fimages%2Fd3debefc-91c1-4a45-8509-fa16b752a687_1100x781.jpeg 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>I am aware that I’m writing this on the internet.</p><p>Whatever it is I’m doing here, you should not be part of it. Do not click the button below this paragraph, do not type in your email address to receive new posts straight to your inbox, and for the love of God, if you have any self-respect, do not even think about giving me any money. There is still time for you to do something else. You can still unchain yourself from this world that will soon, very soon, mean absolutely nothing.</p><p><span>As far as I can tell, Substack mostly functions as a kind of meta-discourse for Twitter. (At least, this is the part I’ve seen—there are also, apparently, recipes.) Graham Linehan posts fifty times a day on this platform, and all of it is just replying to tweets. This does not strike me as particularly sustainable. I have no idea what kind of demented pervert is actually reading this stuff, when you could be lying in a meadow by a glassy stream, </span><em>rien faire comme une bête</em><span>, eyes melting into the sky. According to the very helpful Substack employees I’ve spoken to, there are a set of handy </span><em>best practices</em><span> for this particular region of the machine: have regular open threads, chitchat with your subscribers, post humanising updates about your life. Form a </span><em>community</em><span>. I’m told that the most successful writing on here is friendly, frequent, and fast. Apparently, readers should know exactly what you’re getting at within the first three sentences. I do not plan on doing any of these things.</span></p><p>This is what I would like to do. I would like to see if, in the belly of the dying internet, it’s possible to create something that is not like the internet. I want to see if I can poke at the outlines of whatever is coming next. In a previous life, I was a sort of mildly infamous online opinion gremlin, best known for being extravagantly mean about other opinion writers whose writing or whose opinions I didn’t like. These days, I find most of that stuff very, very dull. I wonder if it’s possible to talk about things differently. Not rationally or calmly, away from the cheap point-scoring of online discourse—that would also be boring—but with a better, less sterile kind of derangement. I’m interested in the forms of writing that were here long before the internet, and which will be here long after it’s gone. Not thinkpieces or blogs, but the essay, the manifesto, the satyr, and the screed. Ludibria, pseudepigrapha, quodlibets. Or folktales. Prophecy. Dreams.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Modern-day spying: sometimes old technology is more secure (107 pts)]]></title>
            <link>https://www.economist.com/technology-quarterly/2024/07/01/sometimes-the-old-ways-of-espionage-are-the-best</link>
            <guid>40899487</guid>
            <pubDate>Sun, 07 Jul 2024 18:32:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.economist.com/technology-quarterly/2024/07/01/sometimes-the-old-ways-of-espionage-are-the-best">https://www.economist.com/technology-quarterly/2024/07/01/sometimes-the-old-ways-of-espionage-are-the-best</a>, See on <a href="https://news.ycombinator.com/item?id=40899487">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div data-body-id="cp2"><p data-component="paragraph"><span data-caps="initial">F</span><small>rom the</small> mid-1960s until 2008 anyone tuning a radio to shortwave frequencies between 5.422 and 16.084 <small>mh</small>z would periodically hear a jaunty flute playing a few bars of an English folk song. Then, in a clipped English accent, a female voice would read out numbers: “Zero, two, five, eight…” The transmissions were thought to be coded messages from <small>mi</small>6. The “Lincolnshire Poacher”, named after the jaunty tune, was one of many “number stations” used by spy agencies to communicate with agents in the field.</p><p data-component="paragraph">Some were wound up at the end of the cold war. What is curious is that so many persist: indeed <i>Priyom.org</i>, a website which tracks these stations, notes that activity has “significantly increased” since the mid-2010s, with broadcasts in voice, Morse code and digital signals. Russia is still a particularly keen user. With all the new technologies available,  why use radio broadcasts?</p></div><p>This article appeared in the Technology Quarterly section of the print edition under the headline “Old-school broadcasts”</p><div orientation="vertical" data-test-id="vertical"><div orientation="vertical"><figure><img alt="No way to run a country" loading="lazy" width="1280" height="1709" decoding="async" data-nimg="1" sizes="300px" srcset="https://www.economist.com/cdn-cgi/image/width=16,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 16w, https://www.economist.com/cdn-cgi/image/width=32,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 32w, https://www.economist.com/cdn-cgi/image/width=48,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 48w, https://www.economist.com/cdn-cgi/image/width=64,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 64w, https://www.economist.com/cdn-cgi/image/width=96,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 96w, https://www.economist.com/cdn-cgi/image/width=128,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 128w, https://www.economist.com/cdn-cgi/image/width=256,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 256w, https://www.economist.com/cdn-cgi/image/width=360,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 360w, https://www.economist.com/cdn-cgi/image/width=384,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 384w, https://www.economist.com/cdn-cgi/image/width=480,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 480w, https://www.economist.com/cdn-cgi/image/width=600,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 600w, https://www.economist.com/cdn-cgi/image/width=834,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 834w, https://www.economist.com/cdn-cgi/image/width=960,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 960w, https://www.economist.com/cdn-cgi/image/width=1096,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 1096w, https://www.economist.com/cdn-cgi/image/width=1280,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 1280w, https://www.economist.com/cdn-cgi/image/width=1424,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg 1424w" src="https://www.economist.com/cdn-cgi/image/width=1424,quality=80,format=auto/media-assets/image/20240706_DE_EU.jpg"></figure></div><div orientation="vertical"><h3 orientation="vertical">From the July 6th 2024 edition</h3><p orientation="vertical">Discover stories from this section and more in the list of contents</p><p><a href="https://www.economist.com/weeklyedition/2024-07-06" data-analytics="sidebar:weekly_edition"><span>Explore the edition</span></a></p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reasoning in Large Language Models: A Geometric Perspective (114 pts)]]></title>
            <link>https://arxiv.org/abs/2407.02678</link>
            <guid>40899309</guid>
            <pubDate>Sun, 07 Jul 2024 18:09:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2407.02678">https://arxiv.org/abs/2407.02678</a>, See on <a href="https://news.ycombinator.com/item?id=40899309">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2407.02678">View PDF</a>
    <a href="https://arxiv.org/html/2407.02678v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>The advancement of large language models (LLMs) for real-world applications hinges critically on enhancing their reasoning capabilities. In this work, we explore the reasoning abilities of large language models (LLMs) through their geometrical understanding. We establish a connection between the expressive power of LLMs and the density of their self-attention graphs. Our analysis demonstrates that the density of these graphs defines the intrinsic dimension of the inputs to the MLP blocks. We demonstrate through theoretical analysis and toy examples that a higher intrinsic dimension implies a greater expressive capacity of the LLM. We further provide empirical evidence linking this geometric framework to recent advancements in methods aimed at enhancing the reasoning capabilities of LLMs.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Romain Cosentino Dr [<a href="https://arxiv.org/show-email/4a6ed82a/2407.02678">view email</a>]      <br>    <strong>[v1]</strong>
        Tue, 2 Jul 2024 21:39:53 UTC (1,611 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A modern Jupyter client for macOS (324 pts)]]></title>
            <link>https://satyrn.app/</link>
            <guid>40899242</guid>
            <pubDate>Sun, 07 Jul 2024 17:59:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://satyrn.app/">https://satyrn.app/</a>, See on <a href="https://news.ycombinator.com/item?id=40899242">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-astro-cid-j7pv25f6=""> <section data-astro-cid-j7pv25f6=""> <div data-astro-cid-j7pv25f6=""> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fsatyrn-logo-cutout.DS2NSG70.png" alt="Satyrn App Logo" data-astro-cid-j7pv25f6="" width="467" height="297" loading="lazy" decoding="async"></p> <!-- <h1 class="text-6xl sm:text-8xl pb-4 font-extrabold ml-4 bg-clip-text text-transparent bg-gradient-to-b from-neutral-400 to-neutral-700">Satyrn</h1> --> <!-- <h1 class="text-6xl sm:text-8xl pb-4 font-extrabold ml-4 bg-clip-text text-transparent bg-gradient-to-b from-pink-500 to-violet-500 opacity-75">Satyrn</h1> --> </div> <h2 data-astro-cid-j7pv25f6="">A modern Jupyter client for Mac</h2> <!-- <h2 class={h2Class}>Jupyter made easy</h2> --> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fscreenshot-noborder.Db7C7PI4.png" alt="Satyrn App Screenshot" data-astro-cid-j7pv25f6="" width="1800" height="1340" loading="lazy" decoding="async"> </p> </section> <div data-astro-cid-j7pv25f6=""> <a href="https://discord.gg/JKS7fMAwfr" data-astro-cid-j7pv25f6=""> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fjoin-the-discord.DluEW6vl.png&amp;h=64" alt="Join discord" data-astro-cid-j7pv25f6="" width="205" height="64" loading="lazy" decoding="async"> </p> </a> </div> <div data-astro-cid-j7pv25f6=""> <section data-astro-cid-j7pv25f6=""> <h2 data-astro-cid-j7pv25f6="">Get coding faster</h2> <p data-astro-cid-j7pv25f6="">Faster startup times<br data-astro-cid-j7pv25f6=""> than VS Code and JupyterLab</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fstartup-time-noborder.MoHgGeh0.png" alt="Satyrn Startup Time Screenshot" data-astro-cid-j7pv25f6="" width="1800" height="1340" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Generate code inline with<br data-astro-cid-j7pv25f6=""> context aware prompt cells</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fsatyrn-ai.CTGkVtr4.gif" alt="Satyrn AI Screenshot" data-astro-cid-j7pv25f6="" width="800" height="608" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Stay in flow<br data-astro-cid-j7pv25f6=""> with a minimalist design</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fminimal-noborder.Blswq2X5.png" alt="Satyrn Command Pallet Screenshot" data-astro-cid-j7pv25f6="" width="1800" height="1340" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Get stuff done with a<br data-astro-cid-j7pv25f6=""> modern command palette</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fcommand-palette.Cv7bLbT3.gif" alt="Satyrn Command Pallet Screenshot" data-astro-cid-j7pv25f6="" width="800" height="613" loading="lazy" decoding="async"> </p> </section> <section data-astro-cid-j7pv25f6=""> <h2 data-astro-cid-j7pv25f6="">Simple and powerful</h2> <p data-astro-cid-j7pv25f6="">Stay organized with<br data-astro-cid-j7pv25f6=""> Black code formatting</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fcode-formatting.BpzbNjvi.gif" alt="Satyrn Code Formatting Screenshot" data-astro-cid-j7pv25f6="" width="800" height="608" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Copy your graphs and<br data-astro-cid-j7pv25f6=""> tables at the click of a button</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fcopy-stuff.59GJc-B1.gif" alt="Satyrn Copy Stuff Screenshot" data-astro-cid-j7pv25f6="" width="800" height="473" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Add new virtual environments<br data-astro-cid-j7pv25f6=""> with Satyrn's kernel manager</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fadd-kernels.Dsa552Br.gif" alt="Satyrn Add Kernels Screenshot" data-astro-cid-j7pv25f6="" width="600" height="495" loading="lazy" decoding="async"> </p> </section> <section data-astro-cid-j7pv25f6=""> <h2 data-astro-cid-j7pv25f6="">Easy setup</h2> <p data-astro-cid-j7pv25f6="">Works with all ipynb files,<br data-astro-cid-j7pv25f6=""> launched directly from your Finder</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fopen-from-finder.CrByVg2E.png" alt="Satyrn Open From Finder Screenshot" data-astro-cid-j7pv25f6="" width="2450" height="1738" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Automatically detects <br data-astro-cid-j7pv25f6="">existing kernels</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fkernel-manager.DS3CPmzt.png" alt="Satyrn Kernel Manager Screenshot" data-astro-cid-j7pv25f6="" width="2114" height="1602" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">No setup needed. Download<br data-astro-cid-j7pv25f6=""> the app and start coding.</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fsatyrn-dock-icon.BceNcK8L.png" alt="Satyrn Dock Screenshot" data-astro-cid-j7pv25f6="" width="2346" height="274" loading="lazy" decoding="async"> <img src="https://satyrn.app/.netlify/images?url=_astro%2Fsmall-dock.pEF5cv7l.png" alt="Satyrn App Logo" data-astro-cid-j7pv25f6="" width="1268" height="281" loading="lazy" decoding="async"> </p> </section> </div> <div data-astro-cid-j7pv25f6=""> <a href="https://discord.gg/JKS7fMAwfr" data-astro-cid-j7pv25f6=""> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fjoin-the-discord.DluEW6vl.png&amp;h=64" alt="Join discord" data-astro-cid-j7pv25f6="" width="205" height="64" loading="lazy" decoding="async"> </p> </a> </div> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Zuckerberg and Peter Thiel on Facebook, Millenials, and Predictions for 2030 (103 pts)]]></title>
            <link>https://www.techemails.com/p/mark-zuckerberg-peter-thiel-millennials</link>
            <guid>40898654</guid>
            <pubDate>Sun, 07 Jul 2024 16:28:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.techemails.com/p/mark-zuckerberg-peter-thiel-millennials">https://www.techemails.com/p/mark-zuckerberg-peter-thiel-millennials</a>, See on <a href="https://news.ycombinator.com/item?id=40898654">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p><em>Welcome to Internal Tech Emails: internal tech industry emails that surface in public records. 🔍 If you haven’t signed up, join 40,000+ others and get the newsletter:</em></p><p><strong>Internal Tech Emails is brought to you by… Compass </strong><span>(a GetWhys product)</span></p><div><figure><a target="_blank" href="https://www.getwhys.io/compass" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic" width="1032" height="720" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/a3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:720,&quot;width&quot;:1032,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:33011,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/heic&quot;,&quot;href&quot;:&quot;https://www.getwhys.io/compass&quot;,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fa3fe711e-cdbd-4c00-bf18-4f3b03a3760f_1032x720.heic 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><a href="https://www.getwhys.io/compass" rel="">Compass</a><span>&nbsp;lets you </span><strong>tap into customer feedback without spinning up a research study</strong><span>. How? </span><a href="https://www.getwhys.io/compass" rel="">Compass</a><span> pulls insights directly from recent interviews we've conducted with software buyers, users, and implementers. You get the same depth of insight as if you'd had those conversations yourself, without the cost or time commitment.</span></p><p><span>This is a&nbsp;shift&nbsp;in insight access that lets high-performing&nbsp;teams be effortlessly customer-centric. </span><strong><span>Docker, Snapchat, and Typeform are using&nbsp;</span><a href="https://www.getwhys.io/compass" rel="">Compass</a><span> to:</span></strong></p><ul><li><p>Write messaging that converts</p></li><li><p>Build features that solve customer needs</p></li><li><p>Deposition competitors in high-stakes deals</p></li></ul><p><a href="https://www.getwhys.io/compass" rel="">Compass</a><span> costs $99/mo, with no extra costs or lock-in.</span></p><p><strong>@TechEmails readers get their first month free with promo code TECHSAVVY.</strong></p><p><a href="https://app.getwhys.io/auth/register" rel="">Signing up</a><span> takes less than a minute.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://app.getwhys.io/auth/register&quot;,&quot;text&quot;:&quot;Try Compass for free&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://app.getwhys.io/auth/register" rel=""><span>Try Compass for free</span></a></p><p><strong>From:</strong><span> Nick Clegg</span><br><strong>Sent:</strong><span> Friday, December 20, 2019 8:13 PM</span><br><strong>To:</strong><span> Peter Thiel</span><br><strong>Subject:</strong><span> Milennials</span></p><p>Hi Peter</p><p>Sheryl suggested I reach out to you as she says you and Mark have been discussing the need for FB to remain more attuned to Milennials. Would be great if I could hear your thoughts so that I can help support the direction of travel.</p><p>Do tell me if/when you might be able to have a chat on the phone -- I am in London/Madrid from tomorrow till Jan 4th, but generally available.</p><p>Hope this finds you well otherwise.</p><p>Best</p><div><p><span>Nick</span></p><p><strong>From:</strong><span> Peter Thiel</span><br><strong>Date:</strong><span> Tuesday, December 31, 2019 at 1:03 AM</span><br><strong>To:</strong><span> Nick Clegg</span><br><strong>Cc:</strong><span> Mark Zuckerberg, Sheryl Sandberg, Marc Andreessen</span><br><strong>Subject:</strong><span> Re: Milennials</span></p></div><p>Hi Nick,</p><p>I thought it might be helpful to put some of my thoughts in writing and am taking the liberty of cc'ing a few others here.</p><p>In important ways, Facebook is the Millennial company par excellence. It was started by a team of Millennials and remains by far the most successful Millennial company; as measured by market capitalization, the next closest ones are Stripe and Airbnb, which at $35B and $30B, respectively, are each barely 5% the size of Facebook. The product was initially used by Millennial college students and became an important way in which the generational experience of Millennials differed radically from that of older people; and even today, Millennials remain our most active users.</p><p>As a result of this history and success, there is a certain sense in which Mark Zuckerberg has been cast as *the spokesman* for the Millennial generation — as the single person who gives voice to the hopes and fears and the unique experiences of this generation, at least in the USA. Some examples: When Mark shares on Facebook, a part of the narrative is a generational narrative, e.g., that young people are more comfortable with technology and therefore share more on Facebook than their elders. When Mark and Priscilla commit to giving away 99% of their wealth during their lifetimes (and do so at a much earlier age than, say, Buffett or Gates), then this story again gets understood in generational terms, e.g., that Millennials are more generous and philanthropic and start thinking about these things at a much earlier point in their lives. And more dramatically and powerfully, when Facebook connects the world, this gets cast in generational terms, e.g., that the younger generation will bridge the many divisions in our world and build a more peaceful world than past generations were able to build; and when these utopian hopes disappoint, Mark and Facebook receive a disproportionate amount of blame. [This whole arc was traced by David Kirkpatrick, whose 2011 book "The Facebook Effect" encapsulated his utopian projections for younger people generally and whose derangement in recent years can best be understood as the disappointment of these same unrealistic hopes.]</p><p>Of course, there are numerous ways in which this role (Mark as Millennial spokesman) is both pretty unfair and highly inappropriate. It is unfair because this much of a burden should not be placed on any single person; and it is inappropriate because Mark is a highly *unrepresentative* example of the Millennial generation, for a whole range of reasons that we do not need to enumerate. But even with these caveats, I believe that we might be better served by understanding that something like this is going on and trying to think about what it would mean for Mark to think of himself as a Millennial spokesman... and perhaps to contrast this with what I take to be our current policy (at least implicitly) — of Mark as a Baby Boomer construct of how a well-behaved Millennial is supposed to act. If forced to make a choice, I would always rather win popularity contests with Millennials than with Boomers!</p><p>[You can think of Pete Buttigieg as a (political) example of what Mark absolutely should *not* be: Buttigieg is very popular with older Baby Boomer voters and shockingly unpopular with Millennial voters of his age and younger. Buttigieg's basic message is that the system is working reasonably well and this is precisely why younger voters do not like him — he is the sort of super annoying Millennial who tells the Boomers what they want to hear and thereby glosses over the many ways in which the generational compact in our society has been badly broken.]</p><p>Now, it is much easier to describe a problem than to describe the solution, and I think a "Millennial tilt" or "Millennial message" needs to be thought through in very context-specific ways. Some of the following examples may be a bit unfair because 20/20 hindsight is always easier:</p><p>(1)&nbsp; As seen through a Boomer vs. Millennial lens, Mark's commencement speech at Harvard probably was a major missed opportunity. I take it as self-evident that universities worked for Boomers and do not work for younger people; and therefore the choice was between giving a positive speech that reassured the 60-something parents or a more critical speech that resonated with the 20-something graduates. In my judgment, we tilted way too far towards the former. [And I suspect that we never even thought that we were doing just that — if we are going to tilt in a Boomer direction, it should always be a matter of conscious choice.]</p><p>(2)&nbsp; From a Boomer vs. Millennial lens, one would have a very different set of philanthropic priorities. I would be tempted to draw a very sharp contrast between CZI and the Gates Foundation by asking questions about what kinds of philanthropy resonate with the younger generation (vs. what kinds of philanthropy Boomers think younger people should be doing!). As it is, CZI strikes me as a "me too" version of the Gates Foundation — which is problematic for the various reasons Marc and I discussed with Mark and Priscilla in Kauai.</p><p>(3)&nbsp; Perhaps we should consider Millennials as a diversity criterion for our Board of Directors. Besides some of the tech CEOs, who are the Millennials that we would consider adding to our Board? Should we aim to have two or three Millennials on our board? If we did, how would it change the nature of the discussion at the Board level?</p><p>(4)&nbsp; A more aggressive investment policy in the tech ecosystem in Silicon Valley would be another way in which Facebook could participate in and identify with the Millennial generation, closer to home. By contrast, the decision to spend money in buying back shares (from our Baby Boomer shareholders or the Baby Boomer money managers invested in Facebook stock) is perhaps the more conventionally Boomer tilt on what one should do with Facebook's positive cash flows.</p><p>These are just some brainstorming starters and I'm sure we can think of many other examples.</p><p>I will be back in California on January 3 and feel free to call me at [REDACTED]; would be happy to discuss more on the phone or in person.</p><div><p><span>Best,</span><br><span>Peter</span></p><p><strong>From:</strong><span> Nick Clegg</span><br><strong>Sent:</strong><span> Friday, January 3, 2020 10:42 AM</span><br><strong>To:</strong><span> Peter Thiel</span><br><strong>Cc:</strong><span> Mark Zuckerberg, Sheryl Sandberg, Marc Andreessen</span><br><strong>Subject:</strong><span> Re: Milennials</span></p></div><p>Thanks Peter – hugely thought provoking! I will indeed give you a call over the next few days if I may – I am flying back to California tomorrow.</p><p>My own – entirely kneejerk – response is to distinguish between FB's products which both do and should continue to engage Millennials, and the far greater difficulty of garnering any credit/virtue amongst Millennials from being a large, successful company.</p><p>In a recent YouGov survey, 70% of US Millennials said they'd vote for socialism. Big Tech – or indeed big anything – is particularly unpopular with Millennials. For Millennials, authenticity, agency, autonomy, idealism, altruism etc all seem to be top of their list of desirable virtues – for better or worse, they are difficult to reconcile with Silicon Valley these days.</p><p>And – again, for better or worse – our fate amongst policy makers, notwithstanding Gen X/Millennials like Hawley and AOC, is largely in the hands of Boomers.</p><p>So my instinct would be to accentuate Mark's already strong individual credentials as a builder and innovator rather than a leader/ founder of FB – though it is not straightforward to distinguish the two.</p><p>Looking forward to discussing.</p><p>Happy New Year</p><div><p><span>Best</span><br><span>Nick</span></p><p><strong>From:</strong><span> Mark Zuckerberg</span><br><strong>Sent:</strong><span> Saturday, January 4, 2020 2:36 PM</span><br><strong>To:</strong><span> Nick Clegg, Peter Thiel, Antonio Lucio</span><br><strong>Cc:</strong><span> Sheryl Sandberg, Marc Andreessen</span><br><strong>Subject:</strong><span> Re: Milennials</span></p></div><p>Peter: thanks for writing this all out and helping us articulate this.</p><p>Nick and others: for more background, Peter and I have had a number of conversations about what we expect the world to look like in 2030 so we can plan and position our future work accordingly. One theme we've discussed is that many important institutions in our society (eg education, healthcare, housing, efforts to combat climate change) are still run primarily by boomers in ways that transfer a lot of value from younger generations to boomers themselves. Our macro prediction for the next decade is that we expect this dynamic to shift very rapidly as more millennials + gen Zers can now vote and as the boomer generation starts to shrink. By the end of this decade, we expect more of these institutions to be run by and for the benefit of millennials and younger generations. I would bet we'll even see a millennial president within the next few cycles by 2032. This outlook for the future puts our current tone and positioning in stark contrast and has convinced me that we should shift the center of gravity in our messaging to be more focused on millennials.</p><p>From a policy perspective, even if boomers are still defining the policies right now, we should make sure we're setting ourselves up to win the debates over the next 5+ years and not just today. We want to be on the side of the future. So this still feels relevant.</p><p>From a marketing and comms perspective, this discussion also helps answer a question I've struggled with for some time: who is our core demographic? In trying to build a service for everyone, it often feels like we're not focused on anyone in particular. But because our service is built primarily by millennials, there has been a clear evolution where as our employees and I age and have kids, for example, our products evolve and get better for people in their 30s with kids. If we embrace that we are a company that is playing a disproportionate role in defining the experience of this generation as we grow and evolve, that could also be clarifying in terms of how we talk and who we're talking to.</p><p>Beyond how we talk, there's also a question of which issues we focus on and try to provide solutions for. For example, we work a lot on housing, but perhaps there are specific things we could do to make housing more affordable with an emphasis on younger people who don't have large families yet. Or given that so many people graduate college today burdened with crazy amounts of debt, perhaps we should have a larger program for hiring people who didn't go to college to help show that that's a reasonable path as well.</p><div><p><span>Finally, I think there's also some distinction between me and the company here. While our company has a special role in the lives of this generation, this is likely particularly important for how I show up because I am the most well-known person of my generation. That's why Peter and I have spent some timing discussing things like my philanthropy and commencement speech beyond just FB policies and products. I think this overall shift is something we should consider for how our company communicates and shows up more broadly, but it's something I'm definitely going to think about more in terms of how I communicate.</span></p><p><strong>From:</strong><span> Peter Thiel</span><br><strong>Date:</strong><span> Sunday, January 5, 2020 at 2:44 AM</span><br><strong>To:</strong><span> Mark Zuckerberg, Nick Clegg, Antonio Lucio</span><br><strong>Cc:</strong><span> Sheryl Sandberg, Marc Andreessen</span><br><strong>Subject:</strong><span> RE: Milennials</span></p></div><p>There are many themes that could be developed more here; let me make a few quick points for now:</p><p>Nick -- I certainly would not suggest that our policy should be to embrace Millennial attitudes unreflectively. I would be the last person to advocate for socialism. But when 70% of Millennials say they are pro-socialist, we need to do better than simply dismiss them by saying that they are stupid or entitled or brainwashed; we should try and understand why. And, from the perspective of a broken generational compact, there seems to be a pretty straightforward answer to me, namely, that when one has too much student debt or if housing is too unaffordable, then one will have negative capital for a long time and/or find it very hard to start accumulating capital in the form of real estate; and if one has no stake in the capitalist system, then one may well turn against it.</p><p>What I would add to Mark's summary is that, in a healthier society, the handover from the Boomers to the younger generations should have started some time ago (maybe as early as the 1990s for Gen X), and that for a whole variety of reasons, this generational transition has been delayed as the Boomers have maintained an iron grip on many US institutions. When the handover finally happens in the 2020s, it will therefore happen more suddenly and perhaps more dramatically than people expect or than such generational transitions have happened in the past. And that's why it's especially important for us to think about these issues and try and get ahead of them.</p><p>One example of such an "iron grip" from my colleague Eric Weinstein: Of the 67 top research universities in the US, 62 have Baby Boomer presidents (three are Silent Generation and only two are Generation X). Today, the median age of these 67 university presidents is 65 years-old... And this is very different from the recent past. Only thirty years ago, in 1990, the median age of these same university presidents was a much lower 52-years old; the older generation did not completely refuse to give up power; and therefore much greater generational diversity was to be found in university leadership.</p><p>Or, to take a small but suggestive example from US Presidential leadership: Three Presidents (Clinton, Bush 43, and Trump) were all born within 70 days of one another, in the summer of 1946. These three people were literally at the head of the Baby Boomer class that was born nine months after World War II ended in September 1945. In my mind, they somehow derived much of their power from the self-referential narcissism of the Boomers as this unusually large cohort of people voted for people like themselves and could afford to ignore anyone younger... and again, this iron grip has been maintained for a shockingly long period of time; but it will not be maintained forever.</p><div><p><span>--Peter</span></p><p><strong>From: </strong><span>Nick Clegg</span><br><strong>Date:</strong><span> Saturday, January 18, 2020 at 7:17 AM</span><br><strong>To:</strong><span> Peter Thiel, Mark Zuckerberg, Antonio Lucio</span><br><strong>Cc:</strong><span> Sheryl Sandberg, Marc Andreessen, John Pinette, Joel Kaplan</span></p></div><p>Mark, Peter</p><p>Attached an initial scoping doc on Millennial attitudes towards FB, Mark etc. With huge thanks to John Pinette – added here – and his team.</p><p>A few suggestions re follow up:</p><ul><li><p>The team will proceed with further research as mentioned in the paper asap so that we have a little more data on how to disaggregate Millennial expectations/hopes (the risk here is we apply a crude one-size-fits-all approach to a whole cohort)</p></li><li><p>Mark has already started to give us steers in our comms and marketing work (his New Year Post, the generational look/feel of the forthcoming "hear and be heard" ad campaign, less policy and more personal/innovative approach in his own comms plans etc) which the teams will build on.</p></li><li><p>The forthcoming "hear and be heard" ad campaign is designed to set off a conversation about how people relate to, and speak about, each other which has the potential to appeal to Millennials.</p></li><li><p>We have a team working on an ambitious long term project on loneliness/isolation which, again, has the potential to hold particular appeal to the Millennial sentiments set out in the paper. The latest plans will be presented to Mark next week.</p></li><li><p>As for bigger bets – climate change, housing, student debt etc – I suggest we wait for the additional research.</p></li><li><p>Finally, Antonio, John and I feel that this work should ideally be led by Millennials – not us – so we will circle back on that shortly too.</p></li></ul><p>Grateful for reactions.</p><div><p><span>N</span></p><p><strong>[This document is from Tennessee v. Meta (2024).]</strong></p></div><p><a href="https://x.com/TechEmails/status/1809972513935663590" rel="">Twitter link</a><br><a href="https://www.threads.net/@techemails/post/C9IGzSop0aJ" rel="">Threads link</a></p><p><strong>From:</strong><span> Bill Gates</span><br><strong>Sent:</strong><span> Thursday, April 06, 1995 2:55 PM</span><br><strong>Subject:</strong><span> Internet as a business tool</span></p><p>I know I am a broken record on this but I think our plans continue to underestimate the importance of an OPEN unified tools approach for the internet.</p><p>The demo I saw today when Windows 95 was showing its Internet capability was someone calling up the Fedex page on the Internet and typing in a package number and getting the status.</p><p>Imagine how much work it would have been for fedex to call us up and get that running on MSN and negotiate with us. Instead they just set it up. A very simple way to reach out to their customers.</p><div><p><span>The continued enhancement of the browser standards is amazing to me. Now its security and 3d and tables - what will it be within the next several years? Intelligent controls, directory — everything we are trying to define as standards.</span></p><p><strong>[This document is from U.S. v. Microsoft (2000).]</strong></p></div><p><a href="https://twitter.com/TechEmails/status/1804953149352054881" rel="">Twitter link</a><br><a href="https://www.threads.net/@techemails/post/C8kbpx8SdU6" rel="">Threads link</a></p><p><strong>Sponsor the Internal Tech Emails newsletter</strong><span>, and reach a curious and influential audience of 40,000+ tech founders, execs, engineers, and product managers.</span></p><p data-attrs="{&quot;url&quot;:&quot;https://docs.google.com/forms/d/e/1FAIpQLScxUNuo59uXLM2cpy6N5l6Xd1ThAMcFOMzrArOz5m1_GsTERQ/viewform&quot;,&quot;text&quot;:&quot;Inquire about sponsorships&quot;,&quot;action&quot;:null,&quot;class&quot;:null}" data-component-name="ButtonCreateButton"><a href="https://docs.google.com/forms/d/e/1FAIpQLScxUNuo59uXLM2cpy6N5l6Xd1ThAMcFOMzrArOz5m1_GsTERQ/viewform" rel=""><span>Inquire about sponsorships</span></a></p><p><em><span>Thanks for reading!</span><br><span>-Internal Tech Emails</span></em></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mongo but on Postgres and with strong consistency benefits (174 pts)]]></title>
            <link>https://github.com/event-driven-io/Pongo</link>
            <guid>40897518</guid>
            <pubDate>Sun, 07 Jul 2024 13:22:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/event-driven-io/Pongo">https://github.com/event-driven-io/Pongo</a>, See on <a href="https://news.ycombinator.com/item?id=40897518">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://discord.gg/fTpqUTMmVa" rel="nofollow"><img src="https://camo.githubusercontent.com/646fa91165592cb9152c3df012422574419e266e42dee5d3e2599569172af16d/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f7365727665722f6654707155544d6d56613f7374796c653d666c6174" alt="" data-canonical-src="https://dcbadge.vercel.app/api/server/fTpqUTMmVa?style=flat"></a> <a href="https://www.linkedin.com/in/oskardudycz/" rel="nofollow"><img src="https://camo.githubusercontent.com/591c02e8ff595d43e0b35b1b29aed639a7154b959cd8f8c854b9e176d885b094/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b6564496e2d3030373742353f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d7768697465" height="20px" data-canonical-src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white"></a> <a href="https://github.com/sponsors/oskardudycz/"><img src="https://camo.githubusercontent.com/8b2204667b446edec758f665f5bcf3d40cb42a774d0e3a21ad68ac5822a18528/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d476974487562266c696e6b3d68747470733a2f2f6769746875622e636f6d2f73706f6e736f72732f6f736b617264756479637a2f" alt="Github Sponsors" data-canonical-src="https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;link=https://github.com/sponsors/oskardudycz/"></a> <a href="https://event-driven.io/?utm_source=event_sourcing_nodejs" rel="nofollow"><img src="https://camo.githubusercontent.com/153af52926fe6b9f4a97a1899114ef2930e98819cbb1cc732e2fac27da6868c2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f626c6f672d6576656e742d2d64726976656e2e696f2d627269676874677265656e" alt="blog" data-canonical-src="https://img.shields.io/badge/blog-event--driven.io-brightgreen"></a> <a href="https://www.architecture-weekly.com/?utm_source=event_sourcing_nodejs" rel="nofollow"><img src="https://camo.githubusercontent.com/04c8da2e235a701f536522fd6693685986877d9c4022f80986423e718d24cc16/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539412538302d4172636869746563747572652532305765656b6c792d696d706f7274616e74" alt="blog" data-canonical-src="https://img.shields.io/badge/%F0%9F%9A%80-Architecture%20Weekly-important"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/event-driven-io/Pongo/blob/main/src/docs/public/social.png"><img src="https://github.com/event-driven-io/Pongo/raw/main/src/docs/public/social.png" alt=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Pongo</h2><a id="user-content-pongo" aria-label="Permalink: Pongo" href="#pongo"></a></p>
<p dir="auto">Pongo - Mongo but on Postgres and with strong consistency benefits.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto">Install Pongo as an npm module and save it to your package.json:</p>
<div dir="auto" data-snippet-clipboard-copy-content="npm install @event-driven-io/pongo"><pre>npm install @event-driven-io/pongo</pre></div>
<p dir="auto">Read also <a href="https://event-driven.io/en/introducting_pongo/" rel="nofollow">introduction article on my blog</a> for more context.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example</h2><a id="user-content-example" aria-label="Permalink: Example" href="#example"></a></p>
<p dir="auto">You can use Pongo syntax with explicit typing about supported syntax:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { pongoClient } from &quot;@event-driven-io/pongo&quot;;
import { v4 as uuid } from &quot;uuid&quot;;

type User = { name: string; age: number };

const connectionString =
  &quot;postgresql://dbuser:secretpassword@database.server.com:3211/mydb&quot;;

const pongoClient = pongoClient(connectionString);
const pongoDb = pongoClient.db();

const users = pongoDb.collection<User>(&quot;users&quot;);
const roger = { name: &quot;Roger&quot;, age: 30 };
const anita = { name: &quot;Anita&quot;, age: 25 };
const cruella = { _id: uuid(), name: &quot;Cruella&quot;, age: 40 };

// Inserting
await pongoCollection.insertOne(roger);
await pongoCollection.insertOne(cruella);

const { insertedId } = await pongoCollection.insertOne(anita);
const anitaId = insertedId;

// Updating
await users.updateOne({ _id: anitaId }, { $set: { age: 31 } });

// Deleting
await pongoCollection.deleteOne({ _id: cruella._id });

// Finding by Id
const anitaFromDb = await pongoCollection.findOne({ _id: anitaId });

// Finding more
const users = await pongoCollection.find({ age: { $lt: 40 } });"><pre><span>import</span> <span>{</span> <span>pongoClient</span> <span>}</span> <span>from</span> <span>"@event-driven-io/pongo"</span><span>;</span>
<span>import</span> <span>{</span> <span>v4</span> <span>as</span> <span>uuid</span> <span>}</span> <span>from</span> <span>"uuid"</span><span>;</span>

<span>type</span> <span>User</span> <span>=</span> <span>{</span> <span>name</span>: <span>string</span><span>;</span> <span>age</span>: <span>number</span> <span>}</span><span>;</span>

<span>const</span> <span>connectionString</span> <span>=</span>
  <span>"postgresql://dbuser:secretpassword@database.server.com:3211/mydb"</span><span>;</span>

<span>const</span> <span>pongoClient</span> <span>=</span> <span>pongoClient</span><span>(</span><span>connectionString</span><span>)</span><span>;</span>
<span>const</span> <span>pongoDb</span> <span>=</span> <span>pongoClient</span><span>.</span><span>db</span><span>(</span><span>)</span><span>;</span>

<span>const</span> <span>users</span> <span>=</span> <span>pongoDb</span><span>.</span><span>collection</span><span>&lt;</span><span>User</span><span>&gt;</span><span>(</span><span>"users"</span><span>)</span><span>;</span>
<span>const</span> <span>roger</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Roger"</span><span>,</span> <span>age</span>: <span>30</span> <span>}</span><span>;</span>
<span>const</span> <span>anita</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Anita"</span><span>,</span> <span>age</span>: <span>25</span> <span>}</span><span>;</span>
<span>const</span> <span>cruella</span> <span>=</span> <span>{</span> <span>_id</span>: <span>uuid</span><span>(</span><span>)</span><span>,</span> <span>name</span>: <span>"Cruella"</span><span>,</span> <span>age</span>: <span>40</span> <span>}</span><span>;</span>

<span>// Inserting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>roger</span><span>)</span><span>;</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>cruella</span><span>)</span><span>;</span>

<span>const</span> <span>{</span> insertedId <span>}</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>anita</span><span>)</span><span>;</span>
<span>const</span> <span>anitaId</span> <span>=</span> <span>insertedId</span><span>;</span>

<span>// Updating</span>
<span>await</span> <span>users</span><span>.</span><span>updateOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>,</span> <span>{</span> <span>$set</span>: <span>{</span> <span>age</span>: <span>31</span> <span>}</span> <span>}</span><span>)</span><span>;</span>

<span>// Deleting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>deleteOne</span><span>(</span><span>{</span> <span>_id</span>: <span>cruella</span><span>.</span><span>_id</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding by Id</span>
<span>const</span> <span>anitaFromDb</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>findOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding more</span>
<span>const</span> <span>users</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>find</span><span>(</span><span>{</span> <span>age</span>: <span>{</span> <span>$lt</span>: <span>40</span> <span>}</span> <span>}</span><span>)</span><span>;</span></pre></div>
<p dir="auto">Or use MongoDB compliant shim:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { MongoClient } from &quot;@event-driven-io/pongo&quot;;
import { v4 as uuid } from &quot;uuid&quot;;

type User = { name: string; age: number };

const connectionString =
  &quot;postgresql://dbuser:secretpassword@database.server.com:3211/mydb&quot;;

const pongoClient = new MongoClient(postgresConnectionString);
const pongoDb = pongoClient.db();

const users = pongoDb.collection<User>(&quot;users&quot;);
const roger = { name: &quot;Roger&quot;, age: 30 };
const anita = { name: &quot;Anita&quot;, age: 25 };
const cruella = { _id: uuid(), name: &quot;Cruella&quot;, age: 40 };

// Inserting
await pongoCollection.insertOne(roger);
await pongoCollection.insertOne(cruella);

const { insertedId } = await pongoCollection.insertOne(anita);
const anitaId = insertedId;

// Updating
await users.updateOne({ _id: anitaId }, { $set: { age: 31 } });

// Deleting
await pongoCollection.deleteOne({ _id: cruella._id });

// Finding by Id
const anitaFromDb = await pongoCollection.findOne({ _id: anitaId });

// Finding more
const users = await pongoCollection.find({ age: { $lt: 40 } }).toArray();"><pre><span>import</span> <span>{</span> <span>MongoClient</span> <span>}</span> <span>from</span> <span>"@event-driven-io/pongo"</span><span>;</span>
<span>import</span> <span>{</span> <span>v4</span> <span>as</span> <span>uuid</span> <span>}</span> <span>from</span> <span>"uuid"</span><span>;</span>

<span>type</span> <span>User</span> <span>=</span> <span>{</span> <span>name</span>: <span>string</span><span>;</span> <span>age</span>: <span>number</span> <span>}</span><span>;</span>

<span>const</span> <span>connectionString</span> <span>=</span>
  <span>"postgresql://dbuser:secretpassword@database.server.com:3211/mydb"</span><span>;</span>

<span>const</span> <span>pongoClient</span> <span>=</span> <span>new</span> <span>MongoClient</span><span>(</span><span>postgresConnectionString</span><span>)</span><span>;</span>
<span>const</span> <span>pongoDb</span> <span>=</span> <span>pongoClient</span><span>.</span><span>db</span><span>(</span><span>)</span><span>;</span>

<span>const</span> <span>users</span> <span>=</span> <span>pongoDb</span><span>.</span><span>collection</span><span>&lt;</span><span>User</span><span>&gt;</span><span>(</span><span>"users"</span><span>)</span><span>;</span>
<span>const</span> <span>roger</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Roger"</span><span>,</span> <span>age</span>: <span>30</span> <span>}</span><span>;</span>
<span>const</span> <span>anita</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Anita"</span><span>,</span> <span>age</span>: <span>25</span> <span>}</span><span>;</span>
<span>const</span> <span>cruella</span> <span>=</span> <span>{</span> <span>_id</span>: <span>uuid</span><span>(</span><span>)</span><span>,</span> <span>name</span>: <span>"Cruella"</span><span>,</span> <span>age</span>: <span>40</span> <span>}</span><span>;</span>

<span>// Inserting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>roger</span><span>)</span><span>;</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>cruella</span><span>)</span><span>;</span>

<span>const</span> <span>{</span> insertedId <span>}</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>anita</span><span>)</span><span>;</span>
<span>const</span> <span>anitaId</span> <span>=</span> <span>insertedId</span><span>;</span>

<span>// Updating</span>
<span>await</span> <span>users</span><span>.</span><span>updateOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>,</span> <span>{</span> <span>$set</span>: <span>{</span> <span>age</span>: <span>31</span> <span>}</span> <span>}</span><span>)</span><span>;</span>

<span>// Deleting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>deleteOne</span><span>(</span><span>{</span> <span>_id</span>: <span>cruella</span><span>.</span><span>_id</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding by Id</span>
<span>const</span> <span>anitaFromDb</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>findOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding more</span>
<span>const</span> <span>users</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>find</span><span>(</span><span>{</span> <span>age</span>: <span>{</span> <span>$lt</span>: <span>40</span> <span>}</span> <span>}</span><span>)</span><span>.</span><span>toArray</span><span>(</span><span>)</span><span>;</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">How does it work?</h2><a id="user-content-how-does-it-work" aria-label="Permalink: How does it work?" href="#how-does-it-work"></a></p>
<p dir="auto"><strong>Pongo treats PostgreSQL as a Document Database benefiting from JSONB support.</strong> Unlike the plain text storage of the traditional JSON type, JSONB stores JSON data in a binary format. This simple change brings significant advantages in terms of performance and storage efficiency.</p>
<p dir="auto">Pongo uses the following table structure for storing collections:</p>
<div dir="auto" data-snippet-clipboard-copy-content="CREATE TABLE IF NOT EXISTS &quot;YourCollectionName&quot; (
    _id UUID PRIMARY KEY,
    data JSONB
)"><pre><span>CREATE</span> <span>TABLE</span> <span>IF</span> NOT EXISTS <span><span>"</span>YourCollectionName<span>"</span></span> (
    _id UUID <span>PRIMARY KEY</span>,
    data JSONB
)</pre></div>
<p dir="auto"><strong>Essentially Pongo takes MongoDB api and translates it to the native PostgreSQL queries.</strong> It is a similar concept to <a href="https://martendb.io/" rel="nofollow">Marten</a> and AWS DocumentDB (see <a href="https://www.enterprisedb.com/blog/documentdb-really-postgresql" rel="nofollow">here</a> or <a href="https://news.ycombinator.com/item?id=18870397" rel="nofollow">there</a>, they seem to be using Mongo syntactic sugar on top of AuroraDB with Postgres).</p>
<p dir="auto"><strong>E.g. the MongoDB update syntax:</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="const pongoCollection = pongoDb.collection<User>(&quot;users&quot;);

await pongoCollection.updateOne(
  { _id: someId },
  { $push: { tags: &quot;character&quot; } }
);"><pre><span>const</span> <span>pongoCollection</span> <span>=</span> <span>pongoDb</span><span>.</span><span>collection</span><span>&lt;</span><span>User</span><span>&gt;</span><span>(</span><span>"users"</span><span>)</span><span>;</span>

<span>await</span> <span>pongoCollection</span><span>.</span><span>updateOne</span><span>(</span>
  <span>{</span> <span>_id</span>: <span>someId</span> <span>}</span><span>,</span>
  <span>{</span> <span>$push</span>: <span>{</span> <span>tags</span>: <span>"character"</span> <span>}</span> <span>}</span>
<span>)</span><span>;</span></pre></div>
<p dir="auto">will be translated to:</p>
<div dir="auto" data-snippet-clipboard-copy-content="UPDATE &quot;users&quot;
SET data = jsonb_set(data, '{tags}', (COALESCE(data->'tags', '[]'::jsonb) || to_jsonb('character')))
WHERE _id = '137ef052-e41c-428b-b606-1c8070a47eda';"><pre><span>UPDATE</span> <span><span>"</span>users<span>"</span></span>
<span>SET</span> data <span>=</span> jsonb_set(data, <span><span>'</span>{tags}<span>'</span></span>, (COALESCE(data<span>-</span><span>&gt;</span><span><span>'</span>tags<span>'</span></span>, <span><span>'</span>[]<span>'</span></span>::jsonb) <span>||</span> to_jsonb(<span><span>'</span>character<span>'</span></span>)))
<span>WHERE</span> _id <span>=</span> <span><span>'</span>137ef052-e41c-428b-b606-1c8070a47eda<span>'</span></span>;</pre></div>
<p dir="auto"><strong>Or for query:</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="const result = await pongoCollection
  .find({ &quot;address.history&quot;: { $elemMatch: { street: &quot;Elm St&quot; } } })
  .toArray();"><pre><span>const</span> <span>result</span> <span>=</span> <span>await</span> <span>pongoCollection</span>
  <span>.</span><span>find</span><span>(</span><span>{</span> <span>"address.history"</span>: <span>{</span> <span>$elemMatch</span>: <span>{</span> <span>street</span>: <span>"Elm St"</span> <span>}</span> <span>}</span> <span>}</span><span>)</span>
  <span>.</span><span>toArray</span><span>(</span><span>)</span><span>;</span></pre></div>
<p dir="auto">will result in:</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT data
FROM &quot;users&quot;
WHERE jsonb_path_exists(
  data,
  '$.address.history[*] ? (@.street == &quot;Elm St&quot;)'
);"><pre><span>SELECT</span> data
<span>FROM</span> <span><span>"</span>users<span>"</span></span>
<span>WHERE</span> jsonb_path_exists(
  data,
  <span><span>'</span>$.address.history[*] ? (@.street == "Elm St")<span>'</span></span>
);</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Storage</h3><a id="user-content-storage" aria-label="Permalink: Storage" href="#storage"></a></p>
<p dir="auto"><strong>The binary format of PostgreSQL JSONB means that data is pre-parsed, allowing faster read and write operations than text-based JSON.</strong> You don't have to re-parse the data every time you query it, which saves processing time and improves overall performance. Additionally, JSONB supports advanced indexing options like GIN and GiST indexes, making searches within JSONB documents much quicker and more efficient.</p>
<p dir="auto">Moreover, JSONB retains the flexibility of storing semi-structured data while allowing you to use PostgreSQL's robust querying capabilities. You can perform complex queries, joins, and transactions with JSONB data, just as you can with regular relational data.</p>
<p dir="auto"><strong>Contrary to common belief, JSON document data is structured.</strong> JSON has structure, but it is not enforced for each document. We can easily extend the schema for our documents, even for specific ones, by adding new fields. We should also not fail if the field we expect to exist, but doesn't.</p>
<p dir="auto">This flexibility, performance, and consistency combination makes PostgreSQL with JSONB a powerful tool. There are benchmarks showing that it can be even faster than MongoDB.</p>
<p dir="auto">Check more in:</p>
<ul dir="auto">
<li><a href="https://www.postgresql.org/docs/current/datatype-json.html" rel="nofollow">JSON Types Documentation</a></li>
<li><a href="https://www.postgresql.org/docs/current/functions-json.html" rel="nofollow">JSON Functions and Operators</a></li>
<li><a href="https://pganalyze.com/blog/gin-index#postgresql-jsonb-and-gin-indexes" rel="nofollow">PostgreSQL, JSONB and GIN Indexes by</a></li>
<li><a href="https://info.enterprisedb.com/rs/069-ALB-339/images/PostgreSQL_MongoDB_Benchmark-WhitepaperFinal.pdf" rel="nofollow">MongoDB vs PostgreSQL JSONB Benchmark</a></li>
<li><a href="https://ftisiot.net/postgresqljson/main/" rel="nofollow">How to JSON in PostgreSQL</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Is Pongo an ORM?</h2><a id="user-content-is-pongo-an-orm" aria-label="Permalink: Is Pongo an ORM?" href="#is-pongo-an-orm"></a></p>
<p dir="auto">It's not. It's focused on effective handling of the document data specifics. Node.js ORMs have capabilites to handle JSONB, e.g. DrizzleORM has a good support for that for basic operations. Yet, they're all but limited to querying, usually for advanced ones you need to fallback to JSONPath or JSONB functions (so raw SQL). As you saw above, this syntax is not super pleasant to deal with. That's why Pongo aims to do it for you.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Is it production ready?</h2><a id="user-content-is-it-production-ready" aria-label="Permalink: Is it production ready?" href="#is-it-production-ready"></a></p>
<p dir="auto">What's there it's safe to use, but it's far from being 100% compliant with MongoDB. Pongo is a fresh project, so some stuff can be missing.</p>
<p dir="auto">Pongo is a community project, so once you find something, we encourage you to send us a GH issue or Pull Request extending the support or test coverage!</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A reawakening of systems programming meetups (238 pts)]]></title>
            <link>https://notes.eatonphil.com/2024-07-07-systems-meetups.html</link>
            <guid>40897506</guid>
            <pubDate>Sun, 07 Jul 2024 13:20:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://notes.eatonphil.com/2024-07-07-systems-meetups.html">https://notes.eatonphil.com/2024-07-07-systems-meetups.html</a>, See on <a href="https://news.ycombinator.com/item?id=40897506">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <p>This year has seen a resurgence in really high quality systems
programming meetups. <a href="https://www.meetup.com/munich-database-meetup/">Munich Database
Meetup</a>, <a href="https://lu.ma/8ujc7st3?tk=DAAbmn">Berlin
Systems Group</a>, <a href="https://lu.ma/t6r4mi4v">SF Distributed
Systems Meetup</a>, <a href="https://nycsystems.xyz/">NYC
Systems</a>, <a href="https://twitter.com/BengaluruSys">Bengaluru
Systems</a>, to name a few.</p>
<p>This post summarizes a bit of disappointing recent tech meetup
history, the new trend of excellent systems programming meetups, and
ends with some encouragement and guidance for running your own systems
programming events.</p>
<p>I will be a little critical in this post but I want to preface by
saying: organizing meetups is really tough! It takes a lot of work and
I have a huge amount of respect for meetup organizers even when their
meetup style did not resonate with me.</p>
<p>Although much of this post talks about NYC Systems, the reason I think
this post is worth writing is because so many other meetups in a
similar vein popped up. I hope to encourage these other meetups and to
encourage folks in other major metros (London, for example) to start
similar meetups.</p>
<h3 id="meetups">Meetups</h3><p>I used to attend a bunch of meetups before the pandemic. But I quickly
got disillusioned. Almost every meetup was varying degrees of startups
pitching their product. The last straw for me was sitting through a talk
at a JavaScript meetup that was by a devrel employee of a startup who
literally gave a tutorial for their product.</p>
<p>There were also some pretty intelligent meetups like the New York
Haskell Users Group and the New York Emacs Meetup. But not being an
expert in either domain, and the attendees almost solely appearing to
be experts, I didn't particularly enjoy going.</p>
<p>There were a couple of meetups that felt inclusive for various
skill-levels of attendees yet still went into interesting
depth. Specifically, <a href="http://www.nylug.org/">New York Linux User
Group</a> and <a href="https://paperswelove.org/chapter/newyork/">Papers We Love
NYC</a>.</p>
<p>These meetups were exceptional because they were language- and
framework-agnostic, they would start broad to give you background, but
then go deep into a topic. Maybe you only understand 50% of what was
covered. But you get exposed to something new from an expert in a
domain.</p>
<p>Unfortunately, the pandemic happened and these two excellent meetups
basically have not come back.</p>
<h3 id="a-couple-of-students-in-munich">A couple of students in Munich</h3><p>The pandemic ended and I tried a couple of meetups I thought might be
better quality. Rust and Go. But they weren't much better than I
remembered. People would give a high level talk and brush over all the
interesting concepts.</p>
<p>I had been thinking of doing an in-person talk series since 2022.</p>
<blockquote><div lang="en" dir="ltr"><p>If I put together a systems/databases/distributed systems meetup in NYC (a physical meetup, not Zoom), who'd be interested (in attending, or presenting, or helping me organize, or donating space)?</p><p>No promises!</p></div>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1574875016067710976?ref_src=twsrc%5Etfw">September 27, 2022</a></blockquote> 
<p>But I was busy with TigerBeetle until December of 2023 when I was
messaged on LinkedIn by <a href="https://x.com/georg_kreuzmayr?lang=en">Georg
Kreuzmayr</a>, a graduate student
at Technical University of Munich (TUM).</p>
<p>Georg and his friends, fellow graduate students at TUM, started a
database club: <a href="https://www.tumuchdata.club/">TUMuchData</a>. We got to
talking about opportunities for collaboration and I started feeling a
bit embarrassed that a graduate student had more guts than I had to
get
<a href="https://notes.eatonphil.com/eight-years-of-tech-meetups.html">back</a>
onto the meetup organizer wagon.</p>
<p>A week later, with assurance from <a href="https://twitter.com/justinjaffray">Justin
Jaffray</a> that at least he would
show up with me if no one else did, I started the <a href="https://eatonphil.com/nyc-systems-coffee-club.html">NYC Systems Coffee
Club</a> to bring
together folks in NYC interested in any topic of systems programming
(e.g. compilers, databases, web browser internals, distributed
systems, formal methods, etc.). To bring them together in a completely
informal setting for coffee at 9am in the morning in a public space in
midtown Manhattan.</p>
<blockquote><div lang="en" dir="ltr"><p>Trying something new! If you're a dev in NYC working <br>on (or interested in) systems programming, grab a coffee and come hang out at 1 Bryant Park (indoor space) this Thursday 9AM - 9:30AM.</p><p>See post for details and fill out the Google Form or DM me!<a href="https://t.co/A4bzcPGy6x">https://t.co/A4bzcPGy6x</a> <a href="https://t.co/n1ECMd59ev">pic.twitter.com/n1ECMd59ev</a></p></div>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1734216183459512486?ref_src=twsrc%5Etfw">December 11, 2023</a></blockquote> 
<p>I set up that linked web page and started collecting subscribers to
the club via Google Form. Once a month I'd send an email out to the
list asking for RSVPs to this month's coffee club. The first 20 to
respond would get a calendar invite.</p>
<p><img src="https://notes.eatonphil.com/assets/coffee-club-invite.png" alt="/assets/coffee-club-invite.png"></p>
<p>And about the same time I started asking around on Twitter/LinkedIn if
someone would be interested in co-organizing a new systems programming
meetup in NYC. <a href="https://twitter.com/ngeloxyz">Angelo Saraceno</a>
immediately took me up on the idea and we met up.</p>
<h3 id="nyc-systems">NYC Systems</h3><p>We agreed on the premise: this would be a language- and
framework-agnostic meetup that was focused on engineering challenges,
not product pitches. It would be 100% for the sake of corporate
marketing, but corporate marketing of the <em>engineering team</em>, not the
product.</p>
<p><a href="https://nycsystems.xyz/">NYC Systems</a> was born!</p>
<p>We'd find speakers who could start broad and dive deep into some
interesting aspect of databases, programming languages, distributed
systems, and so on. Product pitches were necessary to establish a
context, but the focus of the talk would be about some interesting
recent technical challenge and how they dealt with it.</p>
<p>We'd schedule talks only every other month to ease our own burden in
organizing and finding great speakers.</p>
<p>Once Angelo and I had decided to go forward, the next two challenges
were finding speakers and finding a venue. Thanks to Twitter and
LinkedIn, finding speakers turned out to be the easy part.</p>
<p>It was harder to find a venue. It was surprisingly challenging to find
a company in NYC with a shared vision that the important thing about
being associated with a meetup like this is to be associated with the
quality of speakers and audience we can bring in by not allowing
transparent product pitches.</p>
<p>Almost every company in Manhattan with space we spoke with had a
requirement that they have their own speaker each night. That seemed
like a bad idea.</p>
<p>I think it was especially challenging to find a company willing to
relax about branding requirements like this because we were a new
meetup.</p>
<p>It was pretty frustrating not to find a sympathetic company with space
in Manhattan. And the only reason we didn't give up was because Angelo
was so adament that this kind of meetup actually happen. It's always
best to start something new with someone else for this exact
reason. You can keep each other going.</p>
<p>In the end we went with the only meetup that did not insist on their
own speaker or their own branding. A Brooklyn-based company whose CEO
immediately got in touch with me that they wanted to host us, <a href="https://trailofbits.com/">Trail
of Bits</a>.</p>
<h3 id="how-it-works">How it works</h3><p>To keep things easy, I set up a web page on my personal site with
information about the meetup. (Eventually we moved this to
<a href="https://nycsystems.xyz/">nycsystems.xyz</a>.) I set up a Google Form to
collect emails for a mailing list. And we started posting about the
group on Twitter and LinkedIn.</p>
<blockquote>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1758249063550447768?ref_src=twsrc%5Etfw">February 15, 2024</a></blockquote> 
<p>We published the event calendar in advance (an HTML table on the
website) and announced each event's speakers a week in advance of the
event. I'd send another Google Form to the mailing list taking RSVPs
for the night. The first 60 people to respond got a Google Calendar
invite.</p>
<p><img src="https://notes.eatonphil.com/assets/nyc-systems.png" alt="/assets/nyc-systems.png"></p>
<p>It's a bit of work, sure, but I'd do anything to avoid Meetup.com.</p>
<p>
  It is interesting to see every new systems programming meetup also
  not pick Meetup.com. The only one that went with it, Munich Database
  Meetup, is a revival of an existing group, the Munich NoSQL Meetup
  and presumably they didn't want to give up their subscribers. Though
  most others use lu.ma.
</p><p>The mailing list is now about 400+ people. And in each event RSVP we
have a wait list of 20-30 people. Of course although 60 people say Yes
initially, by the time of the event we have typically gotten about 50
people in attendance.</p>
<p>At each event, Trail of Bits provided screens, chairs, food, and
drink. Angelo had recording equipment so he took over audio/video
capturing (and later editing and publishing).</p>
<p>After each event we'd publish talk videos to our
<a href="https://www.youtube.com/@NYCSystems">@NYCSystems</a> Youtube.</p>
<h3 id="network-effects">Network effects</h3><p>In March 2024, the TUMuchData folks joined <a href="https://x.com/ifesdjeen">Alex
Petrov</a>'s Munich NoSQL Meetup to form the
Munich Database Meetup. In May, <a href="https://twitter.com/thegeeknarrator">Kaivalya
Apte</a> and <a href="https://twitter.com/mgill25">Manish
Gill</a> started the Berlin Systems Group,
inspired by Alex and the Munich Database Meetup.</p>
<blockquote>— Kaivalya Apte - The Geek Narrator (@thegeeknarrator) <a href="https://twitter.com/thegeeknarrator/status/1790782561515372676?ref_src=twsrc%5Etfw">May 15, 2024</a></blockquote> 
<p>In May 2024, two PhD students in the San Francisco Bay Area, <a href="https://x.com/ShadajL">Shadaj
Laddad</a> and <a href="https://x.com/conor_power23">Conor
Power</a>, started the SF Distributed
Systems meetup.</p>
<blockquote><p lang="en" dir="ltr">We’re super excited to be organizing a new SF Distributed Systems meetup NEXT WEEK! Our first meetup features <a href="https://twitter.com/julianhyde?ref_src=twsrc%5Etfw">@julianhyde</a> and <a href="https://twitter.com/conor_power23?ref_src=twsrc%5Etfw">@conor_power23</a> presenting work on extending SQL and applying algebraic properties, sign up at <a href="https://t.co/d2lLDaQ5iJ">https://t.co/d2lLDaQ5iJ</a></p>— Shadaj Laddad (@ShadajL) <a href="https://twitter.com/ShadajL/status/1790767187327889456?ref_src=twsrc%5Etfw">May 15, 2024</a></blockquote> 
<p>And in July 2024, <a href="https://twitter.com/shraddhaag">Shraddha Agrawal</a>,
<a href="https://twitter.com/anirudhRowjee">Anirudh Rowjee</a> and friends kicked
off the first Bengaluru Systems Meetup.</p>
<blockquote><div lang="en" dir="ltr"><p>Are you ready, Systems Enthusiasts of Bengaluru?</p><p>Speaking at our first-ever meetup on 6th July, we have:<a href="https://twitter.com/simsimsandy?ref_src=twsrc%5Etfw">@simsimsandy</a> with "Learn about the systems that power GenAI applications" and <a href="https://twitter.com/vivekgalatage?ref_src=twsrc%5Etfw">@vivekgalatage</a> with "The Browser Backstage: Performance vs Security" <br>(talks linked below!)</p></div>— Bengaluru Systems Meetup (@BengaluruSys) <a href="https://twitter.com/BengaluruSys/status/1808949578307183060?ref_src=twsrc%5Etfw">July 4, 2024</a></blockquote> 
<h3 id="suggestions">Suggestions</h3><p>First off, don't pay for anything yourself. Find a company who will
host. At the same time, don't feel the need to give in too much to the
demands of the company. I'd be happy to help you think through how to
talk about the event with companies. It is mutually beneficial for
them to get to give a 5-minute hiring/product pitch and not need to do
extensive branding nor to give a 30-minute product tutorial.</p>
<p>Second, keep a bit of pressure on speakers to not do an overview talk
and not to do a product pitch. Suggest that they tell the story of
some interesting recent bug or interesting recent feature. What
happened? Why was it hard? What did you learn?</p>
<p>Focusing on these types of talks will help you get a really
interesting audience.</p>
<p>I have been continuously surprised and impressed at the folks who show
up for NYC Systems. It's a mix of technical founders in the systems
space, pretty experienced developers in the systems space, graduate
students, and developers of all sorts.</p>
<p>I am certain we can only get these kinds of folks to show up because
we avoid product pitch-type talks.</p>
<p>Third, finding speakers is still hard! The best approach so far has
been to individually message folks in industry and academia who hang
out on Twitter. Sending out a public call is easy but doesn't often
pan out. So keep an eye on interesting companies in the area.</p>
<p>Another avenue I've been thinking about is messaging VC connections to
ask them if they know any engineers/technical founders/CTOs in the
area who could give an interesting technical talk.</p>
<p>Fourth, speak with other organizers! I finally met Alex Petrov in
person last month and we had a <a href="https://twitter.com/ifesdjeen/status/1806677549038063901">great
time</a>
talking about the challenges and joys of organizing really high
quality meetups.</p>
<p>I'm always happy to chat, DMs are open.</p>
<blockquote><p lang="en" dir="ltr">New post telling a bit of the history behind <a href="https://t.co/NEh1tm8v3Q">https://t.co/NEh1tm8v3Q</a>; why it only exists due to folks like <a href="https://twitter.com/georg_kreuzmayr?ref_src=twsrc%5Etfw">@georg_kreuzmayr</a> and <a href="https://twitter.com/ngeloxyz?ref_src=twsrc%5Etfw">@ngeloxyz</a>; the explosion of systems meetups around the world; and encouragement and suggestions for future organizers!<a href="https://t.co/dwe4TtmXKK">https://t.co/dwe4TtmXKK</a> <a href="https://t.co/ZMLkVYdZDJ">pic.twitter.com/ZMLkVYdZDJ</a></p>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1809934997442498812?ref_src=twsrc%5Etfw">July 7, 2024</a></blockquote> 

	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube embeds are bananas heavy and it’s fixable (302 pts)]]></title>
            <link>https://frontendmasters.com/blog/youtube-embeds-are-bananas-heavy-and-its-fixable/</link>
            <guid>40897205</guid>
            <pubDate>Sun, 07 Jul 2024 12:37:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://frontendmasters.com/blog/youtube-embeds-are-bananas-heavy-and-its-fixable/">https://frontendmasters.com/blog/youtube-embeds-are-bananas-heavy-and-its-fixable/</a>, See on <a href="https://news.ycombinator.com/item?id=40897205">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
<p>TL;DR: YouTube Embeds are like 1.3MB in size with no shared resources between multiple embeds. Using a <a href="https://github.com/paulirish/lite-youtube-embed">&lt;lite-youtube&gt;</a> Web Component is more like 100k, <em>does</em> share resources, and sacrifices no functionality.  </p>



<p>You can put a YouTube video on any website. They help you do it. Under the <strong>Share </strong>menu right on youtube.com there is an option to <strong>&lt;&gt; Embed</strong> and you’ll see bit of HTML with an <code>&lt;iframe&gt;</code> in it. </p>



<figure><img fetchpriority="high" decoding="async" width="1024" height="429" src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=1024%2C429&amp;ssl=1" alt="" srcset="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=1024%2C429&amp;ssl=1 1024w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=300%2C126&amp;ssl=1 300w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=768%2C322&amp;ssl=1 768w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=1536%2C643&amp;ssl=1 1536w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=2048%2C858&amp;ssl=1 2048w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"><figcaption>&lt;iframe&gt;s are never wonderful for performance, but they make sense for protected third-party content.</figcaption></figure>



<p>This is what I’m getting as I write:</p>


<pre aria-describedby="shcb-language-1" data-shcb-language-name="HTML, XML" data-shcb-language-slug="xml"><span><code><span>&lt;<span>iframe</span> 
  <span>width</span>=<span>"560"</span> 
  <span>height</span>=<span>"315"</span> 
  <span>src</span>=<span>"https://www.youtube.com/embed/LN1TQm942_U?si=EfW_M4bEHEO-idL3"</span>
  <span>title</span>=<span>"YouTube video player"</span>
  <span>frameborder</span>=<span>"0"</span>
  <span>allow</span>=<span>"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"</span>
  <span>referrerpolicy</span>=<span>"strict-origin-when-cross-origin"</span>
  <span>allowfullscreen</span>&gt;</span>
<span>&lt;/<span>iframe</span>&gt;</span></code></span><small id="shcb-language-1"><span>Code language:</span> <span>HTML, XML</span> <span>(</span><span>xml</span><span>)</span></small></pre>


<p>If I were Team YouTube, I’d get <code>loading="lazy"</code> on there to help with performance right away. No need for videos that aren’t even visible on the page to load right away. </p>


<pre aria-describedby="shcb-language-2" data-shcb-language-name="HTML, XML" data-shcb-language-slug="xml"><span><code><span><span><span>&lt;<span>iframe</span> </span>
</span></span><span><span><span>  <span>...</span></span>
</span></span><mark><span><span>  <span>loading</span>=<span>"lazy"</span></span>
</span></mark><span><span><span>  &gt;</span>
</span></span><span><span><span>&lt;/<span>iframe</span>&gt;</span>
</span></span></code></span><small id="shcb-language-2"><span>Code language:</span> <span>HTML, XML</span> <span>(</span><span>xml</span><span>)</span></small></pre>


<p>Plus I’d put some inline styles on there to keep the video fluid and maintain the original aspect ratio. Or you could target these and do that yourself in CSS. Here’s assuming the videos are the standard 16 / 9 aspect ratio:</p>


<pre aria-describedby="shcb-language-3" data-shcb-language-name="CSS" data-shcb-language-slug="css"><span><code><span>iframe</span><span>[src^=<span>"https://www.youtube.com/embed/"</span>]</span> {
  <span>inline-size</span>: <span>100%</span>;
  <span>block-size</span>: auto;
  <span>aspect-ratio</span>: <span>16</span> / <span>9</span>;
}</code></span><small id="shcb-language-3"><span>Code language:</span> <span>CSS</span> <span>(</span><span>css</span><span>)</span></small></pre>


<p>But… let’s not keep this HTML at all. I’m sure you read this blog post title, but let’s put a point on it:</p>



<figure><img decoding="async" width="952" height="1024" src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=952%2C1024&amp;ssl=1" alt="" srcset="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=952%2C1024&amp;ssl=1 952w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=279%2C300&amp;ssl=1 279w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=768%2C826&amp;ssl=1 768w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?w=1392&amp;ssl=1 1392w" sizes="(max-width: 952px) 100vw, 952px" data-recalc-dims="1"></figure>



<p>On a page with literally <em>nothing at all on it</em> other than a YouTube Embed, we’re looking at:</p>



<ul>
<li>32 requests</li>



<li>1.3 MB of data transfer</li>



<li>2.76s to load the page on my current WiFi connection</li>
</ul>



<p><a href="https://www.zachleat.com/web/youtube-embeds/">Zach Leatherman, equally exasperated by this</a>, noted:</p>



<blockquote>
<p>The weight also grows linearly with every embed—resources are&nbsp;<em>not</em>&nbsp;shared: two embeds weigh 2.4 MB; three embeds weigh 3.6 MB (you get the idea).</p>
</blockquote>



<p>Wow.</p>



<p>Looks like sizes are up a bit since Zach last looked as well.</p>



<h2 id="toc-1">The Appearance &amp; Functionality</h2>



<p>This is what you get from a YouTube Embed:</p>



<ul>
<li>You see a “poster” image of the video</li>



<li>You see the title of the video </li>



<li>You see a big play button — click it to play the video</li>
</ul>



<p>This is very little UI and functionality, which is fine! We can absolutely do all this without this many resources.</p>



<h2 id="toc-2">Why is it this way? 🤷‍♀️</h2>



<p>I don’t think we have any good answers here. In fact, I heard from a little birdie who ran it up the pole that they have tested lighter embeds and <em>found them to reduce engagement</em>. 😭</p>



<p>I’m just gonna straight up say I don’t believe it. It’s like when Google told us that taking up half the screen with AI generated answers led to people clicking on third-party results <em>more</em>, but then refused to show data or allow us to track those clicks ourselves.</p>



<p>And hey — sometimes there are unexpected results in testing. That’s why we test instead of guess. But because this is <em>so</em> counterintuitive and offtrack for so many other similar performance testing situations, this bears deeper scrutiny. It would benefit from an opening of the methodology and data. </p>



<p>Like if you tell me that if you hit people with a stick and they smile more, I’m gonna want you to stop until we can look at what’s going on there.</p>



<p>I <em>really</em> wish I could find a good link for this, but there is a famous story from YouTube engineers way-back-when who made a much lighter video page and put it into testing. They found, quite counterintuitively, that average page load times went <em>up.</em> But with a deeper look, they found that the lighter page was able to <em>reach more people, including people on low-power low-internet-speed devices</em> who were able to actually use YouTube for the first time, and them using it much more slowed those averages. That’s awesome! The speed of using the site was up <em>relatively</em> for everyone. The metric of the average page load speed was a red herring and ultimately not meaningful.</p>



<p>How do we know that’s not the same kind of thing happening here?</p>



<p>Remember the implications of all these resources isn’t just a little inconvenience. YouTube is so enormous we’re talking incredible amounts of wasted electricity and thus carbon output. Pulling a megabyte of data off every single YouTube Embed would be an incredible win all around. I might even say <em>not</em> improving this is environmentally negligent.</p>



<h2 id="toc-3">The Solution is to Replicate the Embed Experience Another Way. There are Open Source Web Components That Do It Well.</h2>



<p>With a little dab of irony, Google’s own performance champion Paul Irish has had a web component doing just this for years and years and years:</p>



<p><a href="https://github.com/paulirish/lite-youtube-embed">lite-youtube-embed</a></p>



<p>The pitch is solid:</p>



<blockquote>
<p>Provide videos with a supercharged focus on visual performance. This custom element renders just like the real thing but approximately 224× faster.</p>
</blockquote>



<p><strong>Two hundred and twenty four</strong> times faster. Which of course involves much less data transfer.</p>



<p>And I’d like to be very clear, also does the exact same thing as the default embed:</p>



<ul>
<li>You see a “poster” image of the video</li>



<li>You see the title of the video </li>



<li>You see a big play button — click it to play the video</li>
</ul>



<p>You lose nothing and gain tons of speed, efficiency, and default privacy.</p>



<h2 id="toc-4">Using Lite YouTube Embed</h2>



<ol>
<li>Link up the JavaScript to instantiate the Web Component</li>



<li>Use it</li>
</ol>



<p>You could install it from npm or copy and paste a copy into your own project or whatever. Or link it from a CDN:</p>


<pre aria-describedby="shcb-language-4" data-shcb-language-name="JavaScript" data-shcb-language-slug="javascript"><span><code><span>import</span> <span>"https://esm.sh/lite-youtube-embed"</span>;</code></span><small id="shcb-language-4"><span>Code language:</span> <span>JavaScript</span> <span>(</span><span>javascript</span><span>)</span></small></pre>


<p>That’s like this:</p>







<p>But the best way to use it is right in the README:</p>



<blockquote>
<p>Use this as your HTML, load the script asynchronously, and let the JS progressively enhance it.</p>
</blockquote>


<pre aria-describedby="shcb-language-5" data-shcb-language-name="HTML, XML" data-shcb-language-slug="xml"><span><code><span>&lt;<span>script</span> <span>defer</span> <span>src</span>=<span>"https://cdnjs.cloudflare.com/ajax/libs/lite-youtube-embed/0.3.2/lite-yt-embed.js"</span>&gt;</span><span>&lt;/<span>script</span>&gt;</span>

<span>&lt;<span>link</span> <span>rel</span>=<span>"stylesheet"</span> <span>href</span>=<span>"https://cdnjs.cloudflare.com/ajax/libs/lite-youtube-embed/0.3.2/lite-yt-embed.css"</span> <span>integrity</span>=<span>"sha512-utq8YFW0J2abvPCECXM0zfICnIVpbEpW4lI5gl01cdJu+Ct3W6GQMszVITXMtBLJunnaTp6bbzk5pheKX2XuXQ=="</span> <span>crossorigin</span>=<span>"anonymous"</span> <span>referrerpolicy</span>=<span>"no-referrer"</span> /&gt;</span>

<span>&lt;<span>lite-youtube</span> <span>videoid</span>=<span>"ogfYd705cRs"</span> <span>style</span>=<span>"background-image: url('https://i.ytimg.com/vi/ogfYd705cRs/hqdefault.jpg');"</span>&gt;</span>
  <span>&lt;<span>a</span> <span>href</span>=<span>"https://youtube.com/watch?v=ogfYd705cRs"</span> <span>class</span>=<span>"lty-playbtn"</span> <span>title</span>=<span>"Play Video"</span>&gt;</span>
    <span>&lt;<span>span</span> <span>class</span>=<span>"lyt-visually-hidden"</span>&gt;</span>Play Video: Keynote (Google I/O '18)<span>&lt;/<span>span</span>&gt;</span>
  <span>&lt;/<span>a</span>&gt;</span>
<span>&lt;/<span>lite-youtube</span>&gt;</span></code></span><small id="shcb-language-5"><span>Code language:</span> <span>HTML, XML</span> <span>(</span><span>xml</span><span>)</span></small></pre>


<p>With async loaded JavaScript, note the <code>background-image</code> is put into the HTML so it can all look right before the JavaScript loads. </p>







<h2 id="toc-5">Alternatives</h2>



<ul>
<li><a href="https://github.com/justinribeiro/lite-youtube">Shadow DOM version</a> (more protected styling, more annoying to style)</li>



<li>Do it yourself
<ul>
<li>Raymond Camden: <a href="https://www.raymondcamden.com/2022/11/17/building-a-youtube-embed-web-component-both-vanilla-and-webc-flavored">Building a YouTube Embed Web Component (both vanilla and WebC flavored)</a></li>



<li>Adrian Roselli: <a href="https://adrianroselli.com/2024/06/youtube-and-vimeo-web-component.html">YouTube and Vimeo Web Component</a></li>
</ul>
</li>



<li>Mux: <code><a href="https://github.com/muxinc/media-elements/tree/main/packages/youtube-video-element">&lt;youtube-video&gt;</a></code> (matches <code>&lt;video&gt;</code> DOM APIs)</li>



<li><a href="https://github.com/ibrahimcesar/react-lite-youtube-embed">React Port</a> &amp; <a href="https://github.com/vercel/next.js/tree/canary/packages/third-parties#youtube-embed">Next.js Official Version</a></li>
</ul>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Execute JavaScript in a WebAssembly QuickJS sandbox (146 pts)]]></title>
            <link>https://github.com/sebastianwessel/quickjs</link>
            <guid>40896873</guid>
            <pubDate>Sun, 07 Jul 2024 11:37:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sebastianwessel/quickjs">https://github.com/sebastianwessel/quickjs</a>, See on <a href="https://news.ycombinator.com/item?id=40896873">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">QuickJS - Execute JavaScript in a WebAssembly QuickJS Sandbox</h2><a id="user-content-quickjs---execute-javascript-in-a-webassembly-quickjs-sandbox" aria-label="Permalink: QuickJS - Execute JavaScript in a WebAssembly QuickJS Sandbox" href="#quickjs---execute-javascript-in-a-webassembly-quickjs-sandbox"></a></p>
<p dir="auto">This TypeScript package allows you to safely execute JavaScript code within a WebAssembly sandbox using the QuickJS engine. Perfect for isolating and running untrusted code securely, it leverages the lightweight and fast QuickJS engine compiled to WebAssembly, providing a robust environment for code execution.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li><strong>Security</strong>: Run untrusted JavaScript code in a safe, isolated environment.</li>
<li><strong>File System</strong>: Can mount a virtual file system</li>
<li><strong>Custom Node Modules</strong>: Custom node modules are mountable</li>
<li><strong>Fetch Client</strong>: Can provide a fetch client to make http(s) calls</li>
<li><strong>Test-Runner</strong>: Includes a test runner and chai based <code>expect</code></li>
<li><strong>Performance</strong>: Benefit from the lightweight and efficient QuickJS engine.</li>
<li><strong>Versatility</strong>: Easily integrate with existing TypeScript projects.</li>
<li><strong>Simplicity</strong>: User-friendly API for executing and managing JavaScript code in the sandbox.</li>
</ul>
<p dir="auto"><strong><a href="https://sebastianwessel.github.io/quickjs/" rel="nofollow">View the full documentation</a></strong></p>
<p dir="auto"><strong><a href="https://github.com/sebastianwessel/quickjs/tree/main/example">Find examples in the repository</a></strong></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Basic Usage</h2><a id="user-content-basic-usage" aria-label="Permalink: Basic Usage" href="#basic-usage"></a></p>
<p dir="auto">Here's a simple example of how to use the package:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { quickJS } from '@sebastianwessel/quickjs'

// General setup like loading and init of the QuickJS wasm
// It is a ressource intensive job and should be done only once if possible 
const { createRuntime } = await quickJS()

// Create a runtime instance each time a js code should be executed
const { evalCode } = await createRuntime({
  allowFetch: true, // inject fetch and allow the code to fetch data
  allowFs: true, // mount a virtual file system and provide node:fs module
  env: {
    MY_ENV_VAR: 'env var value'
  },
})


const result = await evalCode(`
import { join } as path from 'path'

const fn = async ()=>{
  console.log(join('src','dist')) // logs &quot;src/dist&quot; on host system

  console.log(env.MY_ENV_VAR) // logs &quot;env var value&quot; on host system

  const url = new URL('https://example.com')

  const f = await fetch(url)

  return f.text()
}
  
export default await fn()
`)

console.log(result) // { ok: true, data: '<!doctype html>\n<html>\n[....]</html>\n' }"><pre><span>import</span> <span>{</span> <span>quickJS</span> <span>}</span> <span>from</span> <span>'@sebastianwessel/quickjs'</span>

<span>// General setup like loading and init of the QuickJS wasm</span>
<span>// It is a ressource intensive job and should be done only once if possible </span>
<span>const</span> <span>{</span> createRuntime <span>}</span> <span>=</span> <span>await</span> <span>quickJS</span><span>(</span><span>)</span>

<span>// Create a runtime instance each time a js code should be executed</span>
<span>const</span> <span>{</span> evalCode <span>}</span> <span>=</span> <span>await</span> <span>createRuntime</span><span>(</span><span>{</span>
  <span>allowFetch</span>: <span>true</span><span>,</span> <span>// inject fetch and allow the code to fetch data</span>
  <span>allowFs</span>: <span>true</span><span>,</span> <span>// mount a virtual file system and provide node:fs module</span>
  <span>env</span>: <span>{</span>
    <span>MY_ENV_VAR</span>: <span>'env var value'</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>


<span>const</span> <span>result</span> <span>=</span> <span>await</span> <span>evalCode</span><span>(</span><span>`</span>
<span>import { join } as path from 'path'</span>
<span></span>
<span>const fn = async ()=&gt;{</span>
<span>  console.log(join('src','dist')) // logs "src/dist" on host system</span>
<span></span>
<span>  console.log(env.MY_ENV_VAR) // logs "env var value" on host system</span>
<span></span>
<span>  const url = new URL('https://example.com')</span>
<span></span>
<span>  const f = await fetch(url)</span>
<span></span>
<span>  return f.text()</span>
<span>}</span>
<span>  </span>
<span>export default await fn()</span>
<span>`</span><span>)</span>

<span>console</span><span>.</span><span>log</span><span>(</span><span>result</span><span>)</span> <span>// { ok: true, data: '&lt;!doctype html&gt;\n&lt;html&gt;\n[....]&lt;/html&gt;\n' }</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<p dir="auto">This lib is based on:</p>
<ul dir="auto">
<li><a href="https://github.com/justjake/quickjs-emscripten">quickjs-emscripten</a></li>
<li><a href="https://github.com/reearth/quickjs-emscripten-sync">quickjs-emscripten-sync</a></li>
<li><a href="https://github.com/streamich/memfs">memfs</a></li>
<li><a href="https://www.chaijs.com/" rel="nofollow">Chai</a></li>
</ul>
<p dir="auto">Tools used:</p>
<ul dir="auto">
<li><a href="https://bun.sh/" rel="nofollow">Bun</a></li>
<li><a href="https://biomejs.dev/" rel="nofollow">Biome</a></li>
<li><a href="https://hono.dev/" rel="nofollow">Hono</a></li>
<li><a href="https://github.com/poolifier/poolifier-web-worker">poolifier-web-worker</a></li>
<li><a href="https://github.com/isaacs/tshy">tshy</a></li>
<li><a href="https://github.com/mcollina/autocannon">autocannon</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the MIT License.</p>
<hr>
<p dir="auto">This package is ideal for developers looking to execute JavaScript code securely within a TypeScript application, ensuring both performance and safety with the QuickJS WebAssembly sandbox.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Malloc broke Serenity's JPGLoader, or: how to win the lottery (2021) (205 pts)]]></title>
            <link>https://sin-ack.github.io/posts/jpg-loader-bork/</link>
            <guid>40896102</guid>
            <pubDate>Sun, 07 Jul 2024 08:42:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sin-ack.github.io/posts/jpg-loader-bork/">https://sin-ack.github.io/posts/jpg-loader-bork/</a>, See on <a href="https://news.ycombinator.com/item?id=40896102">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>I got the chance to investigate an interesting bug in
<a href="https://serenityos.org/">SerenityOS</a> this week. It was related to the decoding
of JPG images in the operating system. For some reason, when a JPG image is
viewed, it comes out like this:</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/lenna-broken.png" alt="Lenna,
showing up with incorrect colors."><figcaption>
            <p>Lenna,
showing up with incorrect colors.</p>
        </figcaption>
</figure>

<p>Weird, huh? Also seems like a simple confusion of RGB vs. BGR. And sure enough,
making the following change on <code>JPGLoader.cpp</code>:</p>
<div><pre tabindex="0"><code data-lang="diff"><span><span><span>-   const Color color { (u8)block.y[pixel_index], (u8)block.cb[pixel_index], (u8)block.cr[pixel_index] };
</span></span></span><span><span><span></span><span>+   const Color color { (u8)block.cr[pixel_index], (u8)block.cb[pixel_index], (u8)block.y[pixel_index] };
</span></span></span><span><span><span></span>    context.bitmap-&gt;set_pixel(x, y, color);
</span></span></code></pre></div><p>makes the image show up correctly. Case closed!</p>
<p>…not. Why did this even break in the first place?</p>
<p>The last non-reverted change
to <code>JPGLoader.cpp</code> is reported by Git to be over a month ago:</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/commitlog.png" alt="Commit log
at the time of JPGLoader being broken."><figcaption>
            <p>Commit log
at the time of JPGLoader being broken.</p>
        </figcaption>
</figure>

<p>And I remembered very well that JPG images worked just fine about a week or two
ago, as I had set a JPG image as my background and would’ve noticed if it looked
wrong.</p>
<p>Well, time to bisect! I didn’t know when to start, so I picked the last 1000
commits (where images showed up correctly), and started bisecting.</p>
<h2 id="bisect-hell">Bisect hell</h2>
<p>Please skip to the next section if you’d like to avoid C++ whining.</p>
<p>SerenityOS, being an operating system project that focuses on doing its own
thing, also has its own standard library called AK (which stands for
<span title="Andreas Kling">Agnostic Kit</span>).
This library is analogous to
C++’s STL, but is more readable due to not having to support a myriad of
different operating systems and not having to contort oneself to conform to
<a href="https://www.gnu.org/prep/standards/">hideous coding standards</a>.</p>
<p>One of the nice things about having the standard library in the same repository
as its users is that making changes is very easy as the change propagates to
everyone who pulls from master. However, this is a double edged sword when it
comes to C++; because <em>everyone</em> includes the standard library (even if you
don’t include it, your includes will), and because C++’s template system means
that everything that’s templated has to include the definitions in the header as
well, this means that <em>anytime</em> someone touches AK in a commit, the <em>entire</em>
operating system has to be rebuilt (~3400 files at the time of writing).
<code>ccache</code>, while being useful in many situations, cannot handle this case.
Additionally, due to the breakneck pace of the SerenityOS project, someone ends
up touching AK at least once every 100 commits or so.</p>
<p>As a result, during the 1000 commits I ended up bisecting for, I had to build
SerenityOS from scratch about 4-5 times on a 2011 laptop with Sandy Bridge
Mobile. While this isn’t the fault of the project, I’m still mad.</p>
<h2 id="bisect-results">Bisect results</h2>
<p>So, after bisecting 1000 commits, rebuilding the OS from scratch several times
and pulling my hair out because I didn’t understand how bisect worked, I
<em>finally</em> found the commit that broke JPG images. Drumroll please…</p>
<pre tabindex="0"><code>f89e8fb71a4893911ee5125f34bd5bbb99327d33
Author:     Gunnar Beutner
AuthorDate: Sat May 15 10:06:41 2021 +0200

AK+LibC: Implement malloc_good_size() and use it for Vector/HashTable

This implements the macOS API malloc_good_size() which returns the
true allocation size for a given requested allocation size. This
allows us to make use of all the available memory in a malloc chunk.

For example, for a malloc request of 35 bytes our malloc would
internally use a chunk of size 64, however the remaining 29 bytes
would be unused.

Knowing the true allocation size allows us to request more usable
memory that would otherwise be wasted and make that available for
Vector, HashTable and potentially other callers in the future.
</code></pre><p>Uh, sorry, what?</p>
<p>But it was. Building the commit right before this one showed the image
correctly:</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/lenna-beforebroken.png" alt="Lenna, before it was broken."><figcaption>
            <p>Lenna, before it was broken.</p>
        </figcaption>
</figure>

<p>Initial discussion with other developers made me think that either <code>JPGLoader</code>
or something else up the chain is depending on the capacity of a <code>Vector</code> and
writing directly into it when it really shouldn’t. So I began hunting down
possible causes.</p>
<h2 id="a-surprising-discovery">A surprising discovery</h2>
<p>The commit seemed to touch the two main container types: <code>HashTable</code> (which
<code>HashMap</code> depends on) and <code>Vector</code>. Both are used in the <code>JPGLoader</code> code, and
either could be the cause of the problem here.</p>
<p>I picked <code>HashTable</code> at random, removed the offending line:</p>
<div><pre tabindex="0"><code data-lang="diff"><span><span>         new_capacity = max(new_capacity, static_cast&lt;size_t&gt;(4));
</span></span><span><span><span>-        new_capacity = kmalloc_good_size(new_capacity * sizeof(Bucket)) / sizeof(Bucket);
</span></span></span><span><span><span></span>
</span></span><span><span>         auto* old_buckets = m_buckets;
</span></span></code></pre></div><p>and rebuilt the system, while joking around in chat about how this can’t
possibly be the problem.</p>
<p>…but then it fixed the issue.</p>
<p>What? How? Why does the <code>HashTable</code> capacity being different matter?! <code>HashTable</code>
isn’t even a contiguous stream of data you can write to, so you shouldn’t even
be able to assume its capacity!</p>
<p>Before I present the full story to you, I’ll have give a brief background on how
<code>JPGLoader</code> used to work.</p>
<h2 id="non-deterministic-serial-component-iteration">Non-deterministic serial component iteration</h2>
<p>That’s really the most appropriate title I can give this section.</p>
<p><code>JPGLoader</code> previously would read information about a JPG component from the
“Start of Frame” section of the JPG file into a struct called <code>Component</code>, and
then store that in a <code>HashTable</code>. Of course, the order in a JPG file for each
component should always be <code>Y</code>, <code>Cb</code> and <code>Cr</code>, so the <code>Component</code> struct would
idiosyncratically carry a <code>serial_id</code>, which was the position of the <code>Component</code>
within the file. The reason the <code>Component</code>s were in a hash table was that they
would then be checked against the component ordering in a “Start of Scan”
section to make sure all the components in the SOS section are in the expected
order. Why this code was written this way instead of just checking against the
ID by linearly iterating over the <code>Component</code>s, I have no idea.</p>
<p>Anyway, these components would then be iterated over during the different
decoding stages of <code>JPGLoader</code>, during which the component information would be
used to perform transforms on macroblocks.</p>
<h2 id="getting-close">Getting close</h2>
<p>When I added some debug prints to see how the components were read, I saw this
in the commit with the broken colors:</p>
<pre tabindex="0"><code>ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 2
ImageDecoder(33:33): Looking at component 1
ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 2
ImageDecoder(33:33): Looking at component 1
...
</code></pre><p>And when I checked out the previous commit, I saw this:</p>
<pre tabindex="0"><code>ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 1
ImageDecoder(33:33): Looking at component 2
ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 1
ImageDecoder(33:33): Looking at component 2
...
</code></pre><p>The final piece of the puzzle: During the discussion of this bug with
<a href="https://twitter.com/the_semicolon_">CxByte</a> at my wit’s end, we ended up
manually messing with the order of the components to see what would happen, and
got this message:</p>
<pre tabindex="0"><code>ImageDecoder(32:32): Huffman stream exhausted. This could be an error!
ImageDecoder(32:32): Failed to build Macroblock 3277
</code></pre><p>…ah. Of course. It’s a stream.</p>
<h2 id="the-bug">The bug</h2>
<p>So, here’s a quick rundown of the bug:</p>
<ul>
<li>Someone used a <code>HashTable</code> to store objects that should be ordered, then
iterated over it using the basic <code>HashTable</code> iterator</li>
<li>The hash of the component IDs in the JPG files were passed into <code>int_hash</code>
for hash table bucket selection</li>
<li>Not only did they get <em>just the right value</em> to be in order, they got
inserted into a HashTable with <em>just the right amount</em> of buckets to be in
the correct order</li>
<li>This caused the Huffman stream to be read in the correct order for each
component, thereby masking the bug</li>
<li>This bug was masked since <code>JPGLoader</code>’s inception by sheer luck until someone
messed with the size of the <code>HashTable</code></li>
</ul>
<h2 id="the-fix">The fix</h2>
<p>And finally, at the end of about 10 hours of debugging, <a href="https://github.com/SerenityOS/Serenity/commit/a10ad24c760bfe713f1493e49dff7da16d14bf39">here is the
commit</a>
that fixed this monster of a bug:</p>
<pre tabindex="0"><code>a10ad24c760bfe713f1493e49dff7da16d14bf39
Author:     sin-ack
AuthorDate: Mon May 31 15:22:04 2021 +0000
Commit:     Linus Groh
CommitDate: Mon May 31 17:26:11 2021 +0100

LibGfx: Make JPGLoader iterate components deterministically

JPGLoader used to store component information in a HashTable, indexed
by the ID assigned by the JPEG file.  This was fine for most purposes,
however after f89e8fb7 this was revealed to be a flawed implementation
which causes non-deterministic iteration over components.

This issue was previously masked by a perfect storm of int_hash being
stable for the integer values 0, 1 and 2; and AK::HashTable having just
the right amount of buckets for the components to be ordered correctly
after being hashed with int_hash. However, after f89e8fb7,
malloc_good_size was used for determining the amount of space for
allocation; this caused the ordering of the components to change, and
images started showing up with the red and blue channels reversed. The
issue was finally determined to be inconsistent ordering after randomly
changing the order of the components caused Huffman decoding to fail.

This was the result of about 10 hours of hair-pulling and repeatedly
doing full rebuilds due to bisecting between commits that touched AK.
Gunnar, I like you, but please don't make me go through this again. :^)

Credits to Andrew Kaster, bgianf, CxByte and Gunnar for the debugging
help.
</code></pre><h2 id="final-thoughts">Final thoughts</h2>
<p>Sometimes the simplest problems might point at big mistakes within. I could’ve
probably fixed this by just swapping the order of the arguments right then and
there, and it would’ve worked; until someone else came along and changed the
order again. Thankfully, now we will be able to look at tubas with correct
colors in peace.</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/tuba.png" alt="A tuba with the
correct colors. Source: music123.com"><figcaption>
            <p>A tuba with the
correct colors. Source: music123.com</p>
        </figcaption>
</figure>

<h2 id="thanks">Thanks</h2>
<p>Thanks to CxByte, Gunnar, Andrew and Brian for their help with debugging this,
and their helpful tips. Gunnar in particular was the one who uncovered this bug,
and despite my satirical jab in the commit message helped uncover this very
interesting bug, so he’s the one who made this post possible.</p>
<p>Also, thanks to the person who introduced this bug (the commit log gets a little
fuzzy, so I’m not quite sure who did) and hope he buys a lottery ticket. :^)</p>
<p>And thank you for reading. I’ll probably post sometime in the future, but work’s
been keeping me busy. But maybe I’ll find another bug to suck me into a rabbit
hole. Stay tuned!</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[From the Transistor to the Web Browser, a rough outline for a 12 week course (104 pts)]]></title>
            <link>https://github.com/geohot/fromthetransistor</link>
            <guid>40895935</guid>
            <pubDate>Sun, 07 Jul 2024 07:54:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/geohot/fromthetransistor">https://github.com/geohot/fromthetransistor</a>, See on <a href="https://news.ycombinator.com/item?id=40895935">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">From the Transistor to the Web Browser</h2><a id="user-content-from-the-transistor-to-the-web-browser" aria-label="Permalink: From the Transistor to the Web Browser" href="#from-the-transistor-to-the-web-browser"></a></p>
<p dir="auto">Hiring is hard, a lot of modern CS education is really bad, and it's hard to find people who understand the modern computer stack from first principles.</p>
<p dir="auto">Now cleaned up and going to be software only. Closer to being real.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 1: Intro: Cheating our way past the transistor -- 0.5 weeks</h4><a id="user-content-section-1-intro-cheating-our-way-past-the-transistor----05-weeks" aria-label="Permalink: Section 1: Intro: Cheating our way past the transistor -- 0.5 weeks" href="#section-1-intro-cheating-our-way-past-the-transistor----05-weeks"></a></p>
<ul dir="auto">
<li>So about those transistors -- Course overview. Describe how FPGAs are buildable using transistors, and that ICs are just collections of transistors in a nice reliable package. Understand the LUTs and stuff. Talk briefly about the theory of transistors, but all projects must build on each other so we can’t build one.</li>
<li>Emulation -- Building on real hardware limits the reach of this course. Using something like Verilator will allow anyone with a computer to play.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 2: Bringup: What language is hardware coded in? -- 0.5 weeks</h4><a id="user-content-section-2-bringup-what-language-is-hardware-coded-in----05-weeks" aria-label="Permalink: Section 2: Bringup: What language is hardware coded in? -- 0.5 weeks" href="#section-2-bringup-what-language-is-hardware-coded-in----05-weeks"></a></p>
<ul dir="auto">
<li>Blinking an LED(Verilog, 10) -- Your first little program! Getting the simulator working. Learning Verilog.</li>
<li>Building a UART(Verilog, 100) -- An intro chapter to Verilog, copy a real UART, introducing the concept of MMIO, though the serial port may be semihosting. Serial test echo program and led control.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 3: Processor: What is a processor anyway? -- 3 weeks</h4><a id="user-content-section-3-processor-what-is-a-processor-anyway----3-weeks" aria-label="Permalink: Section 3: Processor: What is a processor anyway? -- 3 weeks" href="#section-3-processor-what-is-a-processor-anyway----3-weeks"></a></p>
<ul dir="auto">
<li>Coding an assembler(Python, 500) -- Straightforward and boring, write in python. Happens in parallel with the CPU building. Teaches you ARM assembly. Initially outputs just binary files, but changed when you write a linker.</li>
<li>Building a ARM7 CPU(Verilog, 1500) -- Break this into subchapters. A simple pipeline to start, decode, fetch, execute. How much BRAM do we have? We need at least 1MB, DDR would be hard I think, maybe an SRAM. Simulatable and synthesizable.</li>
<li>Coding a bootrom(Assembler, 40) -- This allows code download into RAM over the serial port, and is baked into the FPGA image. Cute test programs run on this.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 4: Compiler: A “high” level language -- 3 weeks</h4><a id="user-content-section-4-compiler-a-high-level-language----3-weeks" aria-label="Permalink: Section 4: Compiler: A “high” level language -- 3 weeks" href="#section-4-compiler-a-high-level-language----3-weeks"></a></p>
<ul dir="auto">
<li>Building a C compiler(Haskell, 2000) -- A bit more interesting, cover the basics of compiler design. Write in haskell. Write a parser. Break this into subchapters. Outputs ARM assembly.</li>
<li>Building a linker(Python, 300) -- If you are clever, this should take a day. Output elf files. Use for testing with QEMU, semihosting.</li>
<li>libc + malloc(C, 500) -- The gateway to more complicated programs. libc is only half here, things like memcpy and memset and printf, but no syscall wrappers.</li>
<li>Building an ethernet controller(Verilog, 200) -- Talk to a real PHY, consider carefully MMIO design.</li>
<li>Writing a bootloader(C, 300) -- Write ethernet program to boot kernel over UDP. First thing written in C. Maybe don’t redownload over serial each time and embed in FPGA image.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 5: Operating System: Software we take for granted -- 3 weeks</h4><a id="user-content-section-5-operating-system-software-we-take-for-granted----3-weeks" aria-label="Permalink: Section 5: Operating System: Software we take for granted -- 3 weeks" href="#section-5-operating-system-software-we-take-for-granted----3-weeks"></a></p>
<ul dir="auto">
<li>Building an MMU(Verilog, 1000) -- ARM9ish, explain TLBs and other fun things. Maybe also a memory controller, depending on how the FPGA is, then add the init code to your bootloader.</li>
<li>Building an operating system(C, 2500) -- UNIXish, only user space threads. (open, read, write, close), (fork, execve, wait, sleep, exit), (mmap, munmap, mprotect). Consider the debug interface you are using, ranging from printf to perhaps a gdbremote stub into kernel. Break into subchapters.</li>
<li>Talking to an SD card(Verilog, 150) -- The last hardware you have to do. And a driver</li>
<li>FAT(C, 300) -- A real filesystem, I think fat is the simplest</li>
<li>init, shell, download, cat, ls, rm(C, 250) -- Your first user space programs.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 6: Browser: Coming online -- 1 week</h4><a id="user-content-section-6-browser-coming-online----1-week" aria-label="Permalink: Section 6: Browser: Coming online -- 1 week" href="#section-6-browser-coming-online----1-week"></a></p>
<ul dir="auto">
<li>Building a TCP stack(C, 500) -- Probably coded in the kernel, integrate the ethernet driver into the kernel. Add support for networking syscalls to kernel. (send, recv, bind, connect)</li>
<li>telnetd, the power of being multiprocess(C, 50) --  Written in C, user can connect multiple times with telnet. Really just a bind shell.</li>
<li>Space saving dynamic linking(C, 300) -- Because we can, explain how dynamic linker is just a user space program. Changes to linker required.</li>
<li>So about that web(C, 500+) -- A “nice” text based web browser, using ANSI and terminal niceness. Dynamically linked and nice, nice as you want.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 7: Physical: Running on real hardware -- 1 week</h4><a id="user-content-section-7-physical-running-on-real-hardware----1-week" aria-label="Permalink: Section 7: Physical: Running on real hardware -- 1 week" href="#section-7-physical-running-on-real-hardware----1-week"></a></p>
<ul dir="auto">
<li>Talking to an FPGA(C, 200) -- A little code for the USB MCU to bitbang JTAG.</li>
<li>Building an FPGA board -- Board design, FPGA BGA reflow, FPGA flash, a 50mhz clock, a USB JTAG port and flasher(no special hardware, a little cypress usb mcu to do jtag), a few leds, a reset button, a serial port(USB-FTDI) also powering via USB, an sd card, expansion connector(ide cable?), and an ethernet port. Optional, expansion board, host USB port, NTSC TV out, an ISA port, and PS/2 connector on the board to taunt you. We provide a toaster oven and a multimeter thermometer to do reflow.</li>
<li>Bringup -- Compiling and downloading the Verilog for the board</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: BeaconDB – An Alternative to Mozilla Location Services (192 pts)]]></title>
            <link>https://beacondb.net/</link>
            <guid>40895672</guid>
            <pubDate>Sun, 07 Jul 2024 06:25:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://beacondb.net/">https://beacondb.net/</a>, See on <a href="https://news.ycombinator.com/item?id=40895672">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <ul> <li><b>ethically sourced</b>: opt-in only data collection</li> <li><b>privacy friendly</b>: published information is obfuscated to protect transmitters and contributors</li> <li> <b>abuse resistant</b>: updating existing data requires information
          only available in physical range of a beacon
</li> </ul> <h2>contribute</h2> <p>
beaconDB has recently started to accept submissions. to add coverage for your area you
        can use the following apps on your phone:
</p> <ul> <li> <a href="https://github.com/mjaakko/NeoStumbler">NeoStumbler</a>:
          supports cell towers, wifi networks and bluetooth devices
<ul> <li> <a href="https://f-droid.org/packages/xyz.malkki.neostumbler.fdroid/">download on F-Droid</a> </li> <li>
in the Settings tab, set the endpoint to <code>https://beacondb.net</code> </li> </ul> </li> <li> <a href="https://github.com/zamojski/TowerCollector">Tower Collector</a>: only supports cell towers
<ul> <li> <a href="https://f-droid.org/packages/info.zamojski.soft.towercollector/">download on F-Droid</a>
or
<a href="https://play.google.com/store/apps/details?id=info.zamojski.soft.towercollector">Google Play</a> </li> <li>
in Upload Preferences, enable support for custom MLS services and
              set the address to <code>https://beacondb.net/v2/geosubmit</code> </li> </ul> </li> </ul> <p>
data you submit will be aggregated and shared under a public domain
        license. for more information on how your data is handled, see the
<a href="https://beacondb.net/privacy">privacy notice</a>.
</p> <h2>usage</h2> <p> <b>
beaconDB is experimental and should not be used by critical services
</b> </p> <p>
if you own an Android phone running the latest preview version of <a href="https://microg.org/">microG</a>, you can easily give beaconDB a spin without needing to install
        anything. in microG Settings on the Location page, pressing the three
        dots in the top right lets you set a custom service URL. you can set
        this to <code>https://beacondb.net/</code> to give beaconDB a try.
</p> <p>
as beaconDB is starting from scratch there is likely no wifi coverage
        for your area. if beaconDB can't estimate your location using wifi, it
        will fallback to an approximate cell tower location sourced from MLS'
        final data dump. note that submissions will take at least 5 minutes to
        become available in the beaconDB API.
</p> <h2>developers</h2> <p>
beaconDB hosts an endpoint at
<code>https://beacondb.net/v1/geolocate</code> which is compatible with <a href="https://ichnaea.readthedocs.io/en/latest/api/geolocate.html">Ichnaea's request format</a>. if your software has a large amount of users, please don't use this
        as a default location service. beaconDB infrastructure is not yet
        capable of handling a large amount of requests.
</p> <p>
data dumps are currently not available as I'm still researching the
        measures I need to take to protect the privacy of both contributors and
        AP owners.
</p> <hr> <ul> <li>
source code <a href="https://codeberg.org/beacondb/beacondb">on Codeberg</a> </li> <li>
chat <a href="https://matrix.to/#/#_oftc_#beacondb:matrix.org">on Matrix</a>
and <a href="irc://irc.oftc.net/#beacondb">IRC</a> </li> <li> <a href="https://codeberg.org/beacondb/beacondb/issues">bug tracker</a> </li> <li><a href="https://beacondb.net/privacy">privacy notice</a></li> <li>made by <a href="https://joel.net.au/">Joel Koen</a></li> </ul> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Italy Fell Out of Love with Cilantro (135 pts)]]></title>
            <link>https://www.atlasobscura.com/articles/what-are-italian-herbs</link>
            <guid>40895441</guid>
            <pubDate>Sun, 07 Jul 2024 05:22:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.atlasobscura.com/articles/what-are-italian-herbs">https://www.atlasobscura.com/articles/what-are-italian-herbs</a>, See on <a href="https://news.ycombinator.com/item?id=40895441">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="article-body">
<p><span>When you think of Italian </span>herbs, cilantro (also known as coriander) is probably not the first one that comes to mind. Yet crack open the fifth-century Roman cookbook <em>Apicius</em>, and you’ll find it included in <a href="https://notjustdormice.wordpress.com/2014/10/07/coriander-the-nations-favourite-herb/">18 percent</a> of all recipes. Roman chefs prized both the citrusy seeds and pungent leaves of the plant they called <em>coriandrum</em> for sauces, salads, roasts, and flavored beverages, among other dishes.</p>
<p>Compare this with Pellegrino Artusi’s <em>Science in the Kitchen and the Art of Eating Well</em>, published in 1891 and often considered the foundational text of <a href="https://www.atlasobscura.com/articles/historical-italian-cookbook">modern Italian cuisine</a>. Coriander leaves are absent from the book’s nearly 800 recipes, and the seeds show up in just four desserts. Artusi also warned readers to beware of buying cinnamon powder from unscrupulous merchants who “throw in handfuls of coriander seeds to increase the volume with a cheap ingredient.” From this reference, we can infer that there was no lack of coriander in late 19th-century Italy. But at some point between <em>Apicius</em> and Artusi, Italians largely stopped cooking with it.</p>
<p>“In dishes, I would be surprised to ever find [coriander] in something from 1700 onwards,” says Karima Moyer-Nocchi, a culinary historian at the University of Siena in <a href="https://www.atlasobscura.com/things-to-do/italy">Italy</a>. Moyer-Nocchi explains that while coriander is not entirely absent from Italian cuisine today, its uses are far more limited than in past centuries. “Predominantly in central Italy, <em>porchetta</em> is going to be prepared with slightly crushed coriander seeds,” says Moyer-Nocchi. “Around the time when people are slaughtering their pigs, you’ll find big bags of coriander at the supermarket.” The leaves, on the other hand, “are absolutely not being used,” she adds. “I have to drive 45 minutes to a grocery store in another city to find it, or grow it myself.”</p>
<figure><img src="https://img.atlasobscura.com/Su_NMH3VLm2LvMVBnNpydvO57xpSu38TTyqdOKeDq5s/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9mOGJhMTdiOS1m/NzI1LTQwNDUtYjMx/MC0wMTBhOTkzZDIz/YjhmOGE5NDhhNTMy/ODg2OThmMzFfUG9y/Y2hldHRhXygzMTY4/MjA3OTQ2KS5qcGc.jpg" alt="The boneless rolled pork roast <em>porchetta</em> is seasoned with coriander seeds in some regions of Italy. " width="auto" data-kind="article-image" id="article-image-102585" data-src="https://img.atlasobscura.com/Su_NMH3VLm2LvMVBnNpydvO57xpSu38TTyqdOKeDq5s/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9mOGJhMTdiOS1m/NzI1LTQwNDUtYjMx/MC0wMTBhOTkzZDIz/YjhmOGE5NDhhNTMy/ODg2OThmMzFfUG9y/Y2hldHRhXygzMTY4/MjA3OTQ2KS5qcGc.jpg"><figcaption>The boneless rolled pork roast <em>porchetta</em> is seasoned with coriander seeds in some regions of Italy. <a target="_blank" href="https://commons.wikimedia.org/wiki/File:Porchetta_(3168207946).jpg">Pedro Angelini/CC BY 2.0</a></figcaption></figure>
<p>Native to Europe, Asia, and North Africa, coriander has a long and widespread history of human cultivation. Latin <em>coriandrum</em>, the source of many modern names for the plant, was borrowed from the Ancient Greek <em>koriandron</em> or <em>koriadnon</em>. The Romans developed a taste for the ingredient through the extensive Greek influence on their cuisine.</p>
<p>During the Roman era, Moyer-Nocchi says, “coriander is being grown locally in Italy, whereas other spices are coming in through the trade routes.” Coriander was also imported due to high demand. Pliny the Elder wrote in the first century that the herb was extensively grown in Roman Egypt. Archaeologists have found coriander seeds alongside those of other herbs like dill and fennel at Roman sites throughout Europe, <a href="https://www.researchgate.net/figure/The-Roman-distribution-of-coriander-waterlogged-records-only_fig2_225354890">including Britain</a>. The frequency with which these seeds are found, and the fact that they have been discovered in remote settlements far from centers of power, demonstrates that coriander was consumed by all levels of Roman society.</p>
<p>Aside from food, coriander was cultivated for medicinal purposes like soothing stomach aches, and for food preservation thanks to the seeds’ antibacterial properties, which is why they are still used in some of Italy’s regional salt-cured meats.</p>
<p>Moyer-Nocchi describes a combination of factors that contributed to coriander’s decline after the fall of Rome. One was that the former empire absorbed influences from Germanic tribes to the north like the Visigoths, “who don’t have that tradition” of cooking with coriander. Another was that coriander’s local availability made it less elite than other spices. “Culturally, it’s not an expression of anyone’s wealth,” says Moyer-Nocchi. Instead, Asian spices like cinnamon and cardamom, imported from afar at great cost, became medieval status symbols.</p>
<figure><img src="https://img.atlasobscura.com/XvJHzI2Hk4-gzxR-GCbBx_Nu-t3f_iiNuTUSXdCDPP4/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9hZmU2NTdjZC00/MTAxLTRiNWYtYTE3/Mi04MjE1ZGJkYjc1/MmI5OWVhN2Y5MzE0/YjA4YjNlMzhfUHVs/bHVtX051bWlkaWN1/bV8oTnVtaWRpYW5f/Q2hpY2tlbilfYWNj/b21wYW5pZWRfd2l0/aF9Db25jaGljbGFf/Q3VtX2ZhYmFfKEJl/YW5zX3dpdGhfQ3Vt/aW4pXygxNjM1NzYz/MzE1NSkuanBn.jpg" alt="&quot;Numidian chicken,&quot; named for a region in Roman North Africa, is one of many dishes in the ancient cookbook <em>Apicius</em> made with coriander." width="auto" data-kind="article-image" id="article-image-102587" data-src="https://img.atlasobscura.com/XvJHzI2Hk4-gzxR-GCbBx_Nu-t3f_iiNuTUSXdCDPP4/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9hZmU2NTdjZC00/MTAxLTRiNWYtYTE3/Mi04MjE1ZGJkYjc1/MmI5OWVhN2Y5MzE0/YjA4YjNlMzhfUHVs/bHVtX051bWlkaWN1/bV8oTnVtaWRpYW5f/Q2hpY2tlbilfYWNj/b21wYW5pZWRfd2l0/aF9Db25jaGljbGFf/Q3VtX2ZhYmFfKEJl/YW5zX3dpdGhfQ3Vt/aW4pXygxNjM1NzYz/MzE1NSkuanBn.jpg"><figcaption>“Numidian chicken,” named for a region in Roman North Africa, is one of many dishes in the ancient cookbook <em>Apicius</em> made with coriander. <a target="_blank" href="https://commons.wikimedia.org/wiki/File:Pullum_Numidicum_(Numidian_Chicken)_accompanied_with_Conchicla_Cum_faba_(Beans_with_Cumin)_(16357633155).jpg">Carole Raddato/CC BY-SA 2.0 </a></figcaption></figure>
<p>Moyer-Nocchi explains that medieval Italians divided spices into two categories: “sweet” and “strong.” Powdered blends of sweet spices—including sugar—were used in a majority of dishes, but “coriander is put over into the strong spices with pepper,” she says, “so it’s going to be used less.” Coriander leaves fell even further out of fashion than the seeds because their distinct flavor clashed with the trendy imported ingredients of the time, such as rosewater. In 1544, physician and botanist Pietro Andrea Mattioli described the leaves as smelling like <a href="https://www.google.com/books/edition/The_Oxford_Companion_to_Italian_Food/-HStec87HdcC?hl=en&amp;gbpv=1&amp;dq=mattioli+coriander&amp;pg=PT169&amp;printsec=frontcover">bed bugs or stink bugs</a>, a comparison <a href="https://www.foodpassages.com/jottings-by-joel/intowner-columns/saved-from-the-two-headed-serpent-the-curious-history-of-coriander-part-i/">echoed by later authors</a>.</p>
<p>Coriander leaf was already mostly absent from Italian cuisine by the Renaissance, but the seeds continued to be used as a spice. They were also coated in sugar to make <em>confetti</em>, or <a href="https://www.merriam-webster.com/dictionary/comfit">“comfits” in English</a>. These were chewed at banquets as an after-dinner mouth freshener and digestive, similar to <em>mukhwas</em>, the mixture of sweetened whole spices chewed in South Asia today <a href="https://www.thespruceeats.com/mukhwa-dessert-recipes-1957834">for the same purpose</a>. At festive celebrations, coriander comfits were thrown and scattered, giving rise to the English word “confetti” for the paper particles that <a href="https://italoamericano.org/italian-curiosities-coriandoli/">later replaced them</a>. In modern Italy, paper confetti is still called <em>coriandoli</em>, meaning “coriander seeds,” while <em>confetti</em> usually refers to a different kind of comfit, the sugared almonds given out <a href="https://www.google.com/books/edition/Italian_False_Friends/APs2DwAAQBAJ?hl=en&amp;gbpv=1&amp;dq=coriandolo+confetti&amp;pg=PT49&amp;printsec=frontcover">at weddings and communions</a>.</p>
<p>Italy enjoyed a reputation as a center of culinary innovation and refinement until the end of the 16th century, says Moyer-Nocchi, when France replaced it as Europe’s trend-setter. “And that’s where spices just fall by the wayside,” she says. French chefs of the 17th and 18th centuries deliberately set themselves apart from the earlier Italian tradition by focusing on fresh herbs instead of dried spices and specific ingredient pairings instead of sweet and strong spice blends.</p>
<p>As Italian chefs looked to the example of the French, “Italy frankly lost its culinary identity with the utter dominance of France for the next two centuries,” says Moyer-Nocchi. And when a distinct Italian culinary identity emerged with the unification of the modern nation in the 19th century, long-abandoned coriander was not revived, but left behind.</p>
<figure><img src="https://img.atlasobscura.com/QMnUfAhbffUcEktW4SAxFXuuGYHrM8ka-BqVxM9PaEw/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9kODdlY2EwZi00/N2RlLTRmMzktODZl/MS0yN2ZjNjM3Y2Y4/MDJmOGE5NDhhNTMy/ODg2OThmMzFfMjAx/Ny0wNi0yMl9TaWVu/YV8xNV8oY3JvcHBl/ZCkuanBn.jpg" alt="Coriander seed is sometimes used with other spices in <em>cavallucci</em>, a Christmas pastry from central Italy." width="auto" data-kind="article-image" id="article-image-102586" data-src="https://img.atlasobscura.com/QMnUfAhbffUcEktW4SAxFXuuGYHrM8ka-BqVxM9PaEw/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9kODdlY2EwZi00/N2RlLTRmMzktODZl/MS0yN2ZjNjM3Y2Y4/MDJmOGE5NDhhNTMy/ODg2OThmMzFfMjAx/Ny0wNi0yMl9TaWVu/YV8xNV8oY3JvcHBl/ZCkuanBn.jpg"><figcaption>Coriander seed is sometimes used with other spices in <em>cavallucci</em>, a Christmas pastry from central Italy. <a target="_blank" href="https://upload.wikimedia.org/wikipedia/commons/c/c8/2017-06-22_Siena_15_%28cropped%29.jpg">Nemo bis/CC BY-SA 3.0</a></figcaption></figure>
<p>Modern Italians see coriander as a foreign ingredient that separates them from other groups of people; what Moyer-Nocchi calls a “culinary marker.” “That comes down to a very basic sort of [idea], ‘What are the flavors that are going to express my identity?” she says. These days, “coriander just doesn’t fit into the <a href="https://www.atlasobscura.com/articles/do-italians-eat-spaghetti-and-meatballs">culinary grammar</a> of how Italians choose to express themselves.”</p>
<p>Moyer-Nocchi points out that coriander is not the only herb whose popularity has ebbed and flowed in Italy over the centuries. Marjoram was once widely used, but “no one necessarily associates that with Italy anymore,” she says. On the other hand, some of the flavors modern Italians use to express themselves have not actually been “Italian” for very long. Basil, which originated in Asia, has only been part of Italian cuisine for a few hundred years. “It’s very young, and yet seems so Italian,” Moyer-Nocchi says.</p>
<p>From Thailand with chilies to Belgium with chocolate, many modern nations have embraced once-foreign ingredients, folding them into their culinary identity until their absence <a href="https://www.atlasobscura.com/articles/dan-pashman-anythings-pastable-carbonara">becomes unthinkable</a>. The curious history of cilantro in Italy shows that the reverse is also true. Sometimes, an ingredient becomes so unpopular that we forget it’s been there all along.</p>
<p><em>Gastro Obscura covers the world’s most wondrous food and drink.
<br>
<a href="https://www.atlasobscura.com/newsletters/gastro-obscura">Sign up for our email, delivered twice a week</a>.</em></p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA["Out of Band" network management is not trivial (113 pts)]]></title>
            <link>https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OutOfBandManagementNotTrivial</link>
            <guid>40895167</guid>
            <pubDate>Sun, 07 Jul 2024 04:00:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OutOfBandManagementNotTrivial">https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OutOfBandManagementNotTrivial</a>, See on <a href="https://news.ycombinator.com/item?id=40895167">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>"Out of band" network management is not trivial</h2>

	<p><small>July  6, 2024</small></p>
</div><div><p>One of the Canadian news items of the time interval is that <a href="https://crtc.gc.ca/eng/publications/reports/xona2024.htm">a
summary of the official report on the 2022 Rogers Internet and phone
outage has been released</a> (see
also the <a href="https://www.cbc.ca/news/politics/rogers-outage-human-error-system-deficiencies-1.7255641">CBC summary of the summary</a>,
and the <a href="https://en.wikipedia.org/wiki/2022_Rogers_Communications_outage">Wikipedia page on the outage</a>). This
was an extremely major outage that took down both Internet and phone
service for a lot of people for roughly a day and caused a series
of failures in services and systems that turned out to rely on
Rogers for (enough of) their phone and Internet connectivity. In
the wake of the report, some people are (correctly) pointing to
Rogers not having any <a href="https://en.wikipedia.org/wiki/Out-of-band_management">"Out of Band" network management</a> capability
as one of the major contributing factors. Some people have gone so
far as to suggest that out of band network management is an obvious
thing that everyone should have. As it happens I have some opinions
on this, and the capsule summary is that out of band network
management is non-trivial.</p>

<p>(While the outage 'only' cut off an estimated 12 million people,
the total population of Canada is about 40 million people, so it
directly affected more than one in four Canadians.)</p>

<p>Obviously, doing out of band network management means that you need
a dedicated set of physical hardware for your OOB network; separate
switches, routers, local network cabling, and long distance fiber
runs between locations (whether that is nearby university buildings
or different cities). If you're serious, you probably want your OOB
fiber runs to have different physical paths than your regular network
fiber, so one backhoe accident can't cut both of them. This separate
network infrastructure has to run to everything you want to manage
and also to everywhere you want to manage your network from. This
is potentially a lot of physical hardware and networking, and as
they say it can get worse.</p>

<p>(This out of band network also absolutely has to be secure, because
it's a back door to your entire network.)</p>

<p>When you set up OOB network management, you have a choice to make;
is your OOB network the only way to manage equipment, or can you
manage equipment either 'in-band' through your regular network or
through the out of band network. If your OOB network is your only
way of managing things, you not only have to build a separate
network, you have to make sure it is fully redundant, because
otherwise you've created a single point of failure for (some)
management. If your OOB network is a backup, you don't necessarily
need as much redundancy (although you may want some), but now you
need to actively monitor and verify that both access paths work.
You also have two access paths to keep secure, instead of just one.</p>

<p>Security or rather access authentication is another complication
for out of band management networks. If you need your OOB network,
you have to assume that all other networks aren't working, which
means that everything your network routers, switches, and so on
need to authenticate your access has to be accessible through the
OOB management network (possibly in addition to through your regular
networks, if you also have in-band management). This may not be
trivial to arrange, depending on what sort of authentication system
you're using. You also need to make sure that your overall
authentication flow can complete using only OOB network information
and services (so, for example, your authentication server can't
reach out to a third party provider's MFA service to send push
notifications to <a href="https://utcc.utoronto.ca/~cks/space/blog/tech/MFABasicOptionsIn2023">authentication apps</a>
on people's phones).</p>

<p>Locally, <a href="https://support.cs.toronto.edu/">we</a> have what I would
describe as a discount out of band management network. It has a
completely separate set of switches, cabling, and building to
building fiber runs, and some things have their management interfaces
on it. It doesn't have any redundancy, which is acceptable in our
particular environment. Unfortunately, because it's a completely
isolated network, it can be a bit awkward to use, especially if you
want to put a device on it that would appreciate modern conveniences
like the ability to send alert emails if something happens (or even
send syslog messages to a remote server; currently <a href="https://utcc.utoronto.ca/~cks/space/blog/sysadmin/CentralizeSyslog">our central
syslog server</a> isn't on this network, although
we should probably fix that).</p>

<p>In many cases I think you're better off having redundant and and
hardened in-band management, especially with smaller networks.
Running an out of band network is effectively having two separate
networks to look after instead of just one; if you have limited
resources (including time and attention), I think you're further
ahead focusing on making a single network solid and redundant rather
than splitting your efforts.</p>
</div></div>]]></description>
        </item>
    </channel>
</rss>