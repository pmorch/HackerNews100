<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Thu, 02 Jan 2025 08:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Blogs rot. Wikis wait (117 pts)]]></title>
            <link>https://j3s.sh/thought/blogs-rot-wikis-wait.html</link>
            <guid>42571367</guid>
            <pubDate>Thu, 02 Jan 2025 03:32:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://j3s.sh/thought/blogs-rot-wikis-wait.html">https://j3s.sh/thought/blogs-rot-wikis-wait.html</a>, See on <a href="https://news.ycombinator.com/item?id=42571367">Hacker News</a></p>
<div id="readability-page-1" class="page">
<p>     blogs rot. wikis wait.
          2025-01-01

 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my
abyss is my wiki is my abyss is my
 wiki is my abyss is my wiki is my

              Abyss


   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⡀⠒⠒⠦⣄⡀
   ⠀⠀⠀⠀⠀⢀⣤⣶⡾⠿⠿⠿⠿⣿⣿⣶⣦⣄⠙⠷⣤⡀
   ⠀⠀⠀⣠⡾⠛⠉⠀⠀⠀⠀⠀⠀⠀⠈⠙⠻⣿⣷⣄⠘⢿⡄
   ⠀⢀⡾⠋⠀⠀⠀⠀⠀⠀⠀⠀⠐⠂⠠⢄⡀⠈⢿⣿⣧⠈⢿⡄
   ⢀⠏⠀⠀⠀⢀⠄⣀⣴⣾⠿⠛⠛⠛⠷⣦⡙⢦⠀⢻⣿⡆⠘⡇
   ⠀⠀⠀⠀⡐⢁⣴⡿⠋⢀⠠⣠⠤⠒⠲⡜⣧⢸⠄⢸⣿⡇⠀⡇
   ⠀⠀⠀⡼⠀⣾⡿⠁⣠⢃⡞⢁⢔⣆⠔⣰⠏⡼⠀⣸⣿⠃⢸⠃
   ⠀⠀⢰⡇⢸⣿⡇⠀⡇⢸⡇⣇⣀⣠⠔⠫⠊⠀⣰⣿⠏⡠⠃⠀⠀⢀
   ⠀⠀⢸⡇⠸⣿⣷⠀⢳⡈⢿⣦⣀⣀⣀⣠⣴⣾⠟⠁⠀⠀⠀⠀⢀⡎
   ⠀⠀⠘⣷⠀⢻⣿⣧⠀⠙⠢⠌⢉⣛⠛⠋⠉⠀⠀⠀⠀⠀⠀⣠⠎
   ⠀⠀⠀⠹⣧⡀⠻⣿⣷⣄⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣠⡾⠃
   ⠀⠀⠀⠀⠈⠻⣤⡈⠻⢿⣿⣷⣦⣤⣤⣤⣤⣤⣴⡾⠛⠉
   ⠀⠀⠀⠀⠀⠀⠈⠙⠶⢤⣈⣉⠛⠛⠛⠛⠋⠉
   ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠉⠉⠁

   wikis are companions

   a wiki for you--
   just you

   to add, read, delete,
   expand

   a changeling, chaotic,
   inconsistent, wild,
   forever flailing and
   uncertain,
   like you

   ...

   a blog is a storefront

   pretty products adorned, designed,
   pristine and tailored, for them

   skinny plastic legs
   poke through perfect plastic
   casing

   landfills of abandoned posts
   decay

   ...

   a wiki is an abyss

   thoughts written alone
   unravel, and
   stitch themselves with meaning

   ...

   blogs rot.
   wikis wait.


[0]⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⢰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡠⠖⠒⠒⠦⡄⠀⢠⠄⠀⠀⠀⠀
⠀⠀⠀⠀⠒⠀⠠⠄⠀⠀⠀⠀⠀⠀⠀⠐⠀⠀⠀⠀⠀⢠⣋⠂⢀⠀⠀⠀⠀⡠⠞⠀⠀⠀⠄⠀
⠂⠀⠀⠀⠀⠨⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⣿⡏⠀⣠⠔⠋⠀⠈⡇⠐⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⢀⠀⠀⠀⠀⠈⡣⣺⣥⣶⡀⠀⠄⣰⠁⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠚⠉⠘⠮⢍⣝⡥⠞⠁⠀⠀⠀⠀⠐⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⠀⠀⠀⠀⠀⠀⠀
⠀⠁⠀⠀⠀⠀⠄⠀⠀⠀⠀⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠄⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⢀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⢀⠔⠋⢠⠔⠊⠁⠀⠀⠉⠳⡄⠀⠀⠀⠀⠀⠀⠀⠀⠂⠀⠀⠀⠀⠀⠀⠀⢀
⠀⠀⠀⠀⠀⠀⠎⠁⣠⠊⠀⢀⡤⠂⠊⠉⠉⠉⠻⡆⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢀⠎⠀⠀⠀⠀⡐⠁⣠⠖⢦⠀⠸⡀⠀⠙⡄⠀⠀⠀⠀⠀⠀⠀⠀⡀⠀⠀⠀⠀⠀⠀
⠄⠀⠀⠀⡜⢠⠀⠀⠀⢐⠃⠀⡇⠀⢸⠀⠀⢸⠀⠀⢱⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⢊⠘⡄⠀⠀⠘⢆⣀⣀⣠⠃⠀⢠⠏⠀⠀⠰⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠘⣆⢳⡀⠀⠀⠀⠀⠀⣀⣀⡴⠊⠁⠀⠀⡆⠀⠀⠀⠀⠀⠁⠀⠀⠀⠀⠀⠀⠂⠀⠀
⠀⠀⠠⠀⠀⠀⠘⠪⠑⠒⠀⠀⠀⠀⠀⠀⠀⢀⡠⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠀⠁⠈⠈⠈⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
            ^ your wiki here




  p.s. i'm working on a new wiki to replace
       my website with - something
       new, from the ground up.

       git.j3s.sh/abyss - stay tuned

[0]: ascii art from
     https://emojicombos.com/galaxy-ascii-art

</p>
<p>follow me on <a href="https://merveilles.town/@j3s">mastodon!</a>
</p><p>last updated 2025-01-01T00:00:00.000Z

</p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The GPU, not the TPM, is the root of hardware DRM (182 pts)]]></title>
            <link>https://mjg59.dreamwidth.org/70954.html</link>
            <guid>42570988</guid>
            <pubDate>Thu, 02 Jan 2025 02:09:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mjg59.dreamwidth.org/70954.html">https://mjg59.dreamwidth.org/70954.html</a>, See on <a href="https://news.ycombinator.com/item?id=42570988">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>As part of their "Defective by Design" anti-DRM campaign, the FSF recently made the following claim:<br><q>Today, most of the major streaming media platforms utilize the TPM to decrypt media streams, forcefully placing the decryption out of the user's control</q> (from <a href="https://www.defectivebydesign.org/dayagainstdrm">here</a>).<br>This is part of an overall argument that Microsoft's insistence that only hardware with a TPM can run Windows 11 is with the goal of aiding streaming companies in their attempt to ensure media can only be played in tightly constrained environments.</p><p>I'm going to be honest here and say that I don't know what Microsoft's actual motivation for requiring a TPM in Windows 11 is. I've been talking about TPM stuff for a long time. My job involves writing a lot of TPM code. I think having a TPM enables a number of worthwhile security features. Given the choice, I'd certainly pick a computer with a TPM. But in terms of whether it's of sufficient value to lock out Windows 11 on hardware with no TPM that would otherwise be able to run it? I'm not sure that's a worthwhile tradeoff.</p><p>What I <em>can</em> say is that the FSF's claim is just 100% wrong, and since this seems to be the sole basis of their overall claim about Microsoft's strategy here, the argument is pretty significantly undermined. I'm not aware of any streaming media platforms making use of TPMs in any way whatsoever. There <em>is</em> hardware DRM that the media companies use to restrict users, but it's not in the TPM - it's in the GPU.</p><p>Let's back up for a moment. There's multiple different DRM implementations, but the big three are Widevine (owned by Google, used on Android, Chromebooks, and some other embedded devices), Fairplay (Apple implementation, used for Mac and iOS), and Playready (Microsoft's implementation, used in Windows and some other hardware streaming devices and TVs). These generally implement several levels of functionality, depending on the capabilities of the device they're running on - this will range from all the DRM functionality being implemented in software up to the hardware path that will be discussed shortly. Streaming providers can choose what level of functionality and quality to provide based on the level implemented on the client device, and it's common for 4K and HDR content to be tied to hardware DRM. In any scenario, they stream encrypted content to the client and the DRM stack decrypts it before the compressed data can be decoded and played.</p><p>The "problem" with software DRM implementations is that the decrypted material is going to exist somewhere the OS can get at it at some point, making it possible for users to simply grab the decrypted stream, somewhat defeating the entire point. Vendors try to make this difficult by obfuscating their code as much as possible (and in some cases putting some of it in-kernel), but pretty much all software DRM is at least somewhat broken and copies of any new streaming media end up being available via Bittorrent pretty quickly after release. This is why higher quality media tends to be restricted to clients that implement hardware-based DRM.</p><p>The implementation of hardware-based DRM varies. On devices in the ARM world this is usually handled by performing the cryptography in a Trusted Execution Environment, or TEE. A TEE is an area where code can be executed without the OS having any insight into it at all, with ARM's TrustZone being an example of this. By putting the DRM code in TrustZone, the cryptography can be performed in RAM that the OS has no access to, making the scraping described earlier impossible. x86 has no well-specified TEE (Intel's SGX is an example, but is no longer implemented in consumer parts), so instead this tends to be handed off to the GPU. The exact details of this implementation are somewhat opaque - of the previously mentioned DRM implementations, only Playready does hardware DRM on x86, and I haven't found any public documentation of what drivers need to expose for this to work.</p><p>In any case, as part of the DRM handshake between the client and the streaming platform, encryption keys are negotiated with the key material being stored in the GPU or the TEE, inaccessible from the OS. Once decrypted, the material is decoded (again either on the GPU or in the TEE - even in implementations that use the TEE for the cryptography, the actual media decoding may happen on the GPU) and displayed. One key point is that the decoded video material is still stored in RAM that the OS has no access to, and the GPU composites it onto the outbound video stream (which is why if you take a screenshot of a browser playing a stream using hardware-based DRM you'll just see a black window - as far as the OS can see, there <em>is</em> only a black window there).</p><p>Now, TPMs are sometimes referred to as a TEE, and in a way they are. However, they're fixed function - you can't run arbitrary code on the TPM, you only have whatever functionality it provides. But TPMs <em>do</em> have the ability to decrypt data using keys that are tied to the TPM, so isn't this sufficient? Well, no. First, the TPM can't communicate with the GPU. The OS could push encrypted material to it, and it would get plaintext material back. But the entire point of this exercise was to avoid the decrypted version of the stream from ever being visible to the OS, so this would be pointless. And rather more fundamentally, TPMs are <em>slow</em>. I don't think there's a TPM on the market that could decrypt a 1080p stream in realtime, let alone a 4K one.</p><p>The FSF's focus on TPMs here is not only technically wrong, it's indicative of a failure to understand what's actually happening in the industry. While the FSF has been focusing on TPMs, GPU vendors have quietly deployed all of this technology without the FSF complaining at all. Microsoft has enthusiastically participated in making hardware DRM on Windows possible, and user freedoms have suffered as a result, but Playready hardware-based DRM works just fine on hardware that doesn't have a TPM and will continue to do so.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My 25-year adventure in AI and ML (110 pts)]]></title>
            <link>https://austinhenley.com/blog/25yearsofai.html</link>
            <guid>42569913</guid>
            <pubDate>Wed, 01 Jan 2025 22:41:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://austinhenley.com/blog/25yearsofai.html">https://austinhenley.com/blog/25yearsofai.html</a>, See on <a href="https://news.ycombinator.com/item?id=42569913">Hacker News</a></p>
<div id="readability-page-1" class="page">
    <div>
				  <h2>Austin Z. Henley</h2>
				  <p>
						Associate Teaching Professor<br>
						Carnegie Mellon University
					</p>
				</div>

	  <hr>
	  
    
	  <hr>

	
	<small>12/31/2024</small><p>I never intended to work with AI or ML. It more so happened along the way naturally from using whatever tools I needed for the task, and eventually it took over. I didn't even realize it at the time.</p>

<p>Given that it is New Year's Eve, it seems appropriate to look back on my career to see how I got here. Let's go back to the year 2000 and walk through the major AI/ML projects I worked on.</p>

<hr>


<h3>If statements and random numbers</h3>

<p>I've talked about how I got into programming before: <a href="https://austinhenley.com/blog/mycomputingstory.html">Learning HTML was too hard so I made a compiler instead</a>. But along the way, I also tried to make video games (like any kid).</p>

<p>The first project I remember making in VB6 was a game based on <a href="https://en.wikipedia.org/wiki/Tamagotchi">Tamagotchi</a> pets.</p>

<img src="https://austinhenley.com/blog/images/tamagotchi.png" alt="">

<p>Unfortunately, I had no idea how to make the pet "come alive".</p>

<p>The best I came up with was a timer that triggers some effect every <i>X</i> seconds plus some conditionals. Increase pet's hunger every 10 seconds. Decrement health every 3 seconds if hunger level is greater than 5. Faint if health reaches 0.</p>

<p>Not a fun game at all.</p>

<p>Fast forward to high school. The biggest game I made at the time without giving up was a 2d space shooter where you defended yourself against waves of enemies while collecting simple powerups. A pretty standard exercise for a wanna-be game developer. For this, I hard coded a long, long sequence of if statements that used random numbers, how long you've been playing, how many shots you have fired, your hp, etc. to determine which wave of enemies to send out next. Finally, it felt <i>dynamic</i> and not entirely predictable. It was even almost fun. But no one would play it more than a few minutes. (Unfortunately, I can't find any screenshots from this era.)</p>

<img src="https://austinhenley.com/blog/images/programminggameaibook.jpg" alt="">

<p>Somewhere in the mid-2000s, I purchased the book <i>Programming Game AI by Example</i> (<a href="https://amzn.to/3VVu1DN">Amazon</a>). It took a few years to prove useful though...</p>


<h3>State machines and higher-order functions</h3>

<p>In college, I took it up a notch with my <a href="https://austinhenley.com/blog/makinggames.html">games</a>. They were played by millions, and I even made money! My coding skills were finally maturing, I could put what I read in books into practice, and my roommate spent every waking moment making games.</p>
    
<p>I used finite state machines for the enemy behaviors, the factory pattern to spawn and manage objects, and higher order functions to make enemies and weapons composable. Each unit, each weapon, and each bullet was given a set of behavior functions that would execute each frame to determine what happens next (e.g., the weapon will shoot bullets in bursts that are in the shape of a narrow cone that oscillates left and right 25 degrees; the bullets will slightly home into the nearest target and have a 1% chance of ricocheting)</p>

<img src="https://austinhenley.com/blog/images/ermy.png" alt="">

<p>I found that incrementally adding a bit of dynamism (i.e., based on the game state and the player's input) and variation (i.e., changing behaviors through randomness and composability) made my games much, much more fun. It required layers though. I needed to add this to everything: sprites, particle emitters, sound effects, enemies, bullets, and animations, not just the enemy behaviors.</p>

<p>The games started to feel alive!</p>

<img src="https://austinhenley.com/blog/images/darkestdays2.gif" alt="">


<p>But this isn't AI, right? In the end, it is just some handcrafted if statements and well-architectured function calls. <i>Hmmm</i>.</p>


<h3>First-order logic, knowledge representation, support vector machines, and neural networks</h3>

<p>After graduating, I enrolled in a MS program at the very last minute (as in, after the deadline and just before the Spring semester started). That meant most of the courses were full. I signed up for the only ones available, which included Artificial Intelligence and Neural Networks. I was hoping for a compilers course!</p>

<p>I was disappointed when I found out that neither of these courses involved any coding or how to implement what we learned. They were very high level and we spent a lot of arguing over definitions.</p>

<img src="https://austinhenley.com/blog/images/aibook.jpg" alt="">


<p>The AI course consisted of in-class discussions dissecting the famous book, <i>Artificial Intelligence: A Modern Approach, Third Edition</i> (<a href="https://amzn.to/4gDFmRq">Amazon</a>). I learned about planning, agents, first-order logic, and knowledge representation. It gave me some vocabulary for thinking about these problems, but I wasn't able to make the leap of applying any of it. <i>Sorry, <a href="https://www.norvig.com/">Norvig</a></i>.</p>

<img src="https://austinhenley.com/blog/images/neuralnetworkbook.jpg" alt="">


<p>The neural networks course was heavy on theory. We covered perceptrons, support vector machines, feedforward networks, hopfield models, and back propagation. The textbook wasn't useful so I won't link to it. I asked the professor how I could actually build a neural network and he said, <i>"I think there is a MATLAB package"</i>. Welp.</p>

<p>I spent the summer and fall trying to put this knowledge to use.</p>

<img src="https://austinhenley.com/blog/images/neuralavatar.png" alt="">


<p>I built a program for low-bandwidth video chat. I used OpenCV to detect the face, extract regions of the face, and then a classifier to determine the state of those regions. For example, is the mouth curving up? Is the left brow raised? Is the right eye open? I had several hundreds of labeled face images from some open database back then. The application sent the binary states over a socket to be used to draw an avatar using OpenGL.</p>

<p>It didn't work well. It was tedious to modify, it was extremely sensitive to lighting, minor changes to parameters would have big consequences, OpenCV was a pain to use, and training took forever.</p>

<p>I really had no idea what I was doing, but I eventually learned a lot and got it somewhat working! Here is a [very amateur] demo video that I uploaded in January 2013:</p>

<p>
    <iframe width="560" height="315" src="https://www.youtube.com/embed/GN3tjmGpdBY?si=0ODIfjFG7SqBxeOh" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen="">
    </iframe>
  </p>

<p>Over 1000 views!</p>

<h3>Decision trees, clustering, and recommendation algorithms</h3>

<p>As I got into my PhD, I needed statistical methods to analyze log data from code editors. Can I identify when a programmer is stuck or lost in the code? Can I predict which file they'll navigate to next? Can I accurately recommend code of interest?</p>

<img src="https://austinhenley.com/blog/images/cfar.png" alt="">

<p>I learned how to use the <a href="https://en.wikipedia.org/wiki/C4.5_algorithm">C4.5 algorithm</a> to generate decision trees, <a href="https://en.wikipedia.org/wiki/K-means_clustering">k-means</a> and <a href="https://en.wikipedia.org/wiki/DBSCAN">DBCSCAN</a> to cluster events, and <a href="https://en.wikipedia.org/wiki/Apriori_algorithm">Apriori</a> and <a href="https://en.wikipedia.org/wiki/Collaborative_filtering">collaborative filtering</a> to find associations between events. Although fairly simple, these are surprisingly powerful. In fact, I'd say that most of the time that you think you need a big neural network, you don't!</p>

<img src="https://austinhenley.com/blog/images/wandercode.png" alt="">

<br>

<img src="https://austinhenley.com/blog/images/dbscan.png" alt="">

<p>These methods got the job done. I published papers, did a bunch of internships, and built developer tools involving these, and eventually graduated.</p>

<p>If you want to read more about some of these projects, I recommend starting with:</p>

<ul>
<li>Data analysis on how developers look for information: <i>Foraging and Navigations, Fundamentally: Developers' Predictions of Value and Cost</i> (<a href="https://austinhenley.com/pubs/Piorkowski2016FSE_ValueCost.pdf">pdf</a>)</li>
<li>My Microsoft internship experience report about building a code review bot: <a href="https://austinhenley.com/blog/featurestheywanted.html">When users never use they features they asked for</a></li>
</ul>


<h3>Intelligent user interfaces</h3>

<p>As a new tenure-track professor in 2018, I needed a schtick that I would base all my research around. I chose <i>intelligent developer tools</i>, though it was much fuzzier of a concept in my head back then. My first week on the job, I submitted a grant proposal where I'd use predictive models to preemptively identify and correct programmers' misconceptions.</p>

<p>The <a href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=1850027">abstract</a> of the proposal said:</p>

<blockquote>In particular, this project will develop novel tool designs that accomplish three mutually supportive goals: (1) identify misconceptions that novice programmers have about their program's behavior by leveraging program analysis techniques and predictive models, (2) correct novice programmers' misconceptions and explain the rationale without disrupting the programmers, and (3) prevent future misconceptions by generating test code for the novice programmers that will catch unintended changes to the program's behavior.</blockquote>

<p>I summarized that project in my post, <a href="https://austinhenley.com/blog/inquisitivecodeeditor.html">An inquisitive code editor: Overcome bugs before you know you have them</a>.</p>

<p>Next, I collaborated on a <a href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=2008408">project</a> where we'd use models to predict the information needs of programmers and generate user interfaces for them on the fly (e.g., if they're looking through their git history for relevant code, generate a visualization comparing a recommended set of commits).</p>

<p>Then I tied all this work together into my grand vision: <i>Inquisitive Programming Environments as Learning Environments for Novices and Experts</i>. You can see the proposal (<a href="https://austinhenley.com/pubs/Henley2021NSFCAREER.pdf">pdf</a>) and my blog post on how I wrote it (<a href="https://austinhenley.com/blog/500kgrant.html">What a $500,000 grant proposal looks like</a>).</p>

<img src="https://austinhenley.com/blog/images/grantoverview.png" alt="">

<p>However, I <a href="https://austinhenley.com/blog/leavingacademia.html">resigned</a> right around the time I was notified the grant was being funded, so I didn't get to make more progress.</p>


<h3>Program synthesis and large-language models</h3>

<p>In January 2022, I joined the program synthesis team at Microsoft. Now I was immersed in AI. It was perfect timing because ChatGPT was released 10 months later and the world forced LLMs upon everything.</p>

<img src="https://austinhenley.com/blog/images/datawranglerbyexample.gif" alt="A gif of me performing the New Column by Example operation.">

<p>Although I was on an AI team, I often pushed back against applying AI unless we had a really compelling reason. What is the user problem we are trying to solve? Do we really need an LLM or could a few if statements suffice? Are we sure that natural language is the appropriate interface for this? I went on to share my opinions: <a href="https://austinhenley.com/blog/naturallanguageui.html">Natural language is the lazy interface</a> and <a href="https://austinhenley.com/blog/trappedchat.html">Don't trap me in a chat window</a>.</p>

<p>I worked on <i>a lot</i> of cool projects. Including:</p>

    <ul>
        <li>Investigating whether existing LLM attention weights can be used to predict where a human developer will look next
          <ul>
            <li><i>Follow-up Attention: An Empirical Study of Developer and Neural Model Code Exploration</i> (<a href="https://austinhenley.com/pubs/Paltenghi2024IEEE_FollowUpAttention.pdf">pdf</a>)</li>
          </ul>
        </li>
        <li>An AI tutor for data science
          <ul>
            <li>Motivation: <a href="https://austinhenley.com/blog/teachingpainpoints.html">The pain points of teaching computer science</a></li>
            <li>Motivation: <a href="https://austinhenley.com/blog/datasciencemistakes.html">Mistakes that data science students make</a></li>
          </ul>
        </li>
        <li>IntelliCode's user experience for multi-line code edit suggestions
          <ul>
            <li><a href="https://austinhenley.com/blog/intellicode.html">Exploring 50 user interfaces for AI code</a></li>
          </ul>
        </li>
        <li>LLM-based tools for data scientists
          <ul>
            <li>Motivation: <a href="https://austinhenley.com/blog/chatgptdatascience.html">Can ChatGPT do data science?</a> for motivation</li>
            <li>Tool: <i>Improving Steering and Verification in AI-Assisted Data Analysis with Interactive Task Decomposition</i> (<a href="https://austinhenley.com/pubs/Kazemitabaar2024UIST_LLMSteering.pdf">pdf</a>)</li>
            <li>Tool: <a href="https://austinhenley.com/blog/datawrangler.html">Data Wrangling with Data Wrangler</a></li>
          </ul>
        </li>
        <li>LLM-based tools for students
          <ul>
            <li>Motivation: <a href="https://austinhenley.com/blog/learningwithai.html">Learning to code with and without AI</a></li>
            <li>Tool: <a href="https://austinhenley.com/blog/codeaid.html">CodeAid: A classroom deployment of an LLM-based programming assistant</a></li>
            <li>Tool: <i>Exploring the Design Space of Cognitive Engagement Techniques with AI-Generated Code for Enhanced Learning</i> (<a href="https://austinhenley.com/pubs/Kazemitabaar2025IUI_AIFriction.pdf">pdf</a>)</li>
          </ul>
        </li>
        <li>Empirical study of how companies are building copilots
          <ul>
            <li><a href="https://austinhenley.com/blog/copilotpainpoints.html">The pain points of building a copilot</a></li>
          </ul>
        </li>
      </ul>

<p>Since <a href="https://austinhenley.com/blog/leavingmicrosoft.html">leaving</a> Microsoft, I continue to tinker on my own AI tools, such as <a href="https://austinhenley.com/blog/mirrorlang.html">Mirror</a> and <a href="https://austinhenley.com/blog/promptcontext.html">Promptclipper</a>.


</p><hr>

<p>It has been a fun 25 years.</p>

<p>What's next? I'm going to continue teaching, learning, and building.</p>



<p><small>There are Amazon affiliate links on this page.</small></p></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rails for Everything (251 pts)]]></title>
            <link>https://literallythevoid.com/blog/rails_for_everything.html</link>
            <guid>42569236</guid>
            <pubDate>Wed, 01 Jan 2025 20:58:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://literallythevoid.com/blog/rails_for_everything.html">https://literallythevoid.com/blog/rails_for_everything.html</a>, See on <a href="https://news.ycombinator.com/item?id=42569236">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
      <h2>Rails for everything</h2>

      <p><em>Published: 2025-01-01</em></p>

      <p>
        After spending part of my holiday building and deploying a new Rails 8
        application, It's clearer than ever that Rails is awesome, and it's
        especially great for small projects with a single developer.
      </p>

      <h3>Guide is good</h3>

      <p>
        The latest
        <a href="https://guides.rubyonrails.org/getting_started.html#Rails-philosophy">Getting Started with Rails</a>
        guide is really excellent. There's a bit of hand waving around
        installing Ruby (which is still more difficult than it needs to be). But
        if you follow it start to finish, you'll have a Rails app
        <strong>in production</strong>. And it isn't just
        <code>hello world</code>. Your app will have authentication, caching,
        rich text, continuous integration, and a database. That's a real
        application.
      </p>

      <p>If you're brand new to Rails, the guide is the best place to start.</p>

      <h3>SQLite is all you need</h3>

      <p>
        SQlite is a great tool, but its focus on backwards compatibility means
        that it wasn't ideal for a production database out of the box. You
        <a href="https://fractaledmind.github.io/2024/04/15/sqlite-on-Rails-the-how-and-why-of-optimal-performance/">had to add some gems</a>
        to get it ready to perform. However
        <a href="https://fractaledmind.github.io/2024/10/16/sqlite-supercharges-Rails/">Rails 8</a>
        deals with that for you, and SQLite is ready for production.
      </p>

      <p>
        Now that you SQLite is a more robust choice, you don't have to worry
        about spinning up a PostgreSQL server. On top of that, with tools like
        <a href="https://dev.37signals.com/solid-cache/">solid cache</a> you
        don't need to stand up redis either.
      </p>

      <p>Everything is running under Rails and within SQLite. Superb.</p>

      <h3>Easy CI</h3>

      <p>
        After I pushed my initial Rails commit, I got an unexpected email:
        <code>Run failed: CI - main</code>. My first thought was actually a
        malicious actor, but I was wrong.
        <a href="https://guides.rubyonrails.org/getting_started.html#continuous-integration-with-github-actions">Rails 8 comes with basic CI config</a>
        and
        <a href="https://docs.github.com/en/billing/managing-billing-for-your-products/managing-billing-for-github-actions/about-billing-for-github-actions">Github comes with 2000 free minutes per month</a>
        of actions usage.
      </p>

      <p>
        Aside from it being really cool to have CI with no effort, 2000 minutes
        of run time is a lot for solo developer!
      </p>

      <h3>Authentication generator</h3>

      <p>
        <a href="https://github.com/heartcombo/devise">Devise</a> is the
        canonical authentication gem. But it hides a lot of complexity and it's
        not exactly easy to configure correctly, especially for a beginner.
      </p>

      <p>
        Rails 8 adds a new authentication generator. It add a simple sign in
        flow for existing users. All you need to do is add a user via the Rails
        console and boom. You can log in.
      </p>

      <p>The generated code is pretty minimal and easy to read about.</p>

      <h3>Easy and fast deploys with Kamal</h3>

      <p>
        I am more than happy to leave deploys to my very smart friends in the
        ops team. To deploy a new Rails 8 app, I just needed to update a few
        items in <code>deploy.yml</code>, follow a few directions, and I had an
        app live! With SSL!
      </p>

      <p>
        Honestly it took less time to get a web app up than it took me to get
        SSL on a Github page.
      </p>

      <p>
        CI + easy deploys might be the best part about Rails 8. Even just using
        the getting started guide, it encourages best practices.
      </p>

      <h3>Conclusion</h3>

      <p>
        <a href="https://israilsdead.com/">Rails is not dead</a>; It's better
        than ever. Try using it to make something new this year.
      </p>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My favourite computer ergonomics hack (144 pts)]]></title>
            <link>https://blog.jacobvosmaer.nl/0036-beeper/</link>
            <guid>42569109</guid>
            <pubDate>Wed, 01 Jan 2025 20:39:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.jacobvosmaer.nl/0036-beeper/">https://blog.jacobvosmaer.nl/0036-beeper/</a>, See on <a href="https://news.ycombinator.com/item?id=42569109">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><i><a href="https://blog.jacobvosmaer.nl/">Jacob Vosmaer's blog</a></i></p>

<p>2024-12-31</p>

<p>In this post I will talk about my favourite computer ergonomics hack, a DIY device I call "The Beeper".</p>

<h2>Background</h2>

<p>I built the Beeper almost 8 years ago but I have never written a blog post about it and I thought it might be interesting. I do computer work sitting down at a desk at home. When I get focused on my work then I sit still for too long and my body starts hurting. The Beeper solves the sitting still problem.</p>

<p>The Beeper consitst of three parts: the hardware, the firmware runnning on the hardware, and software running on my work computer. If my computer screen is unlocked for too long, the Beeper starts beeping and because it is situated away from my desk I must get up to silence it. Mission accomplished: I stopped sitting still.</p>

<h2>Hardware</h2>

<p>The Beeper is built into a small ABS Hammond <a href="https://www.hammfg.com/electronics/small-case/plastic/1551">1551KTBU</a> enclosure.</p>

<p><img src="https://blog.jacobvosmaer.nl/0036-beeper/assets/beeper-outside.jpeg" alt="Exterior of the Beeper"></p>

<p>Inside the enclosure are an Adafruit Feather Huzzah ESP8266 development board, a momentary switch and a piezo buzzer. The buzzer is glued to the case.</p>

<p><img src="https://blog.jacobvosmaer.nl/0036-beeper/assets/beeper-inside.jpeg" alt="Interior components of the Beeper"></p>

<p>The switch connects to the RST and GND pins of the Huzzah. Pushing the switch resets the microcontroller. The buzzer is connected to a PWM pin and GND.</p>

<p>The Huzzah is powered over its Micro-USB port. I cut a hole in the case that lets the USB plug come through. ABS plastic is easy to drill, cut and file.</p>

<h2>Firmware</h2>

<p>I'm a little fuzzy on how I got the firmware working because it's so long ago and I don't work with ESP8266 or Lua often. I had to upload a <a href="https://www.nodemcu.com/index_en.html">NodeMCU</a> binary blob to the development board.  I then somehow configured the ESP8266 to connect to our home WiFi network and when it starts up it runs the following Lua script.</p>

<pre><code>
-- init.lua: Beeper firmare

pin0 = 3
pin2 = 4
pin5 = 1

-- Periodically blink the LED connected to pin0
function blink()
  gpio.mode(pin0, gpio.OUTPUT)
  gpio.write(pin0, gpio.HIGH)
  tmr.create():alarm(10000, tmr.ALARM_AUTO, function() 
    gpio.write(pin0, gpio.LOW)
    tmr.create():alarm(100, tmr.ALARM_SINGLE, function()
      gpio.write(pin0, gpio.HIGH)
    end)
  end)
end

-- TCP server that lets us remote-control the device over WiFi
function startserver()
  sv = net.createServer(net.TCP, 30)
  gpio.mode(pin2, gpio.OUTPUT)
  gpio.write(pin2, gpio.HIGH)
  gpio.mode(pin5, gpio.OUTPUT)
  if sv then
    sv:listen(5678, function(conn)
      conn:on("receive", function(sock)
        sock:close()
        gpio.write(pin2, gpio.LOW)
        beep()
      end)
    end)
  end
end

-- The beeping magic
function beep()
  freq = node.random(500) + 500
  delay = node.random(1000) + 1000
  pwm.setup(pin5, freq, 500)
  pwm.stop(pin5)
  tmr.create():alarm(delay/2, tmr.ALARM_SINGLE, function()
    pwm.start(pin5)
    tmr.create():alarm(delay, tmr.ALARM_SINGLE, beep)
  end)
end

blink()
startserver()
</code></pre>

<p>The high level description is that this script blinks an LED every 10s to show that the microcontroller hasn't halted and it starts a TCP server on port 5678. If anything connects to that port the connection handler calls a function called <code>beep()</code> which effectively loops forever because it keeps rescheduling itself with a timer. Every <code>beep()</code> invocation produces a shrill, annoying beep of random pitch and duration. I added the randomness because it makes it harder to mentally tune out the noise.</p>

<p>The only way to get this annoying beeping to stop is to reset the microcontroller with the switch.</p>

<h2>Software</h2>

<p>The software running on my laptop is the part I have had to tweak the most over the years. It has the biggest impact on the user experience and it is important to get this right, because if the Beeper is too annoying I will unplug it and then I no longer get the health benefits.</p>

<p>The current iteration of the laptop software is the following script.</p>

<pre><code>
#!/bin/sh
set -e

screen_locked() {
  ioreg -n Root -d1 -a | grep -q CGSSessionScreenIsLocked
}

external_monitor() {
  # The model identifier of my external monitor is EV2785
  system_profiler SPDisplaysDataType | grep -q EV2785
}

do_sleep() {
  sleep_time=1200
  expect_done=$(($(date +%s) + $sleep_time))
  sleep $sleep_time
  delta=$(($(date +%s) - $expect_done))
  if [ $(($delta * $delta)) -gt 100 ]
  then
    echo 'clock skew'
    exit 0
  fi
}

main() {
  do_sleep

  if ! screen_locked &amp;&amp; external_monitor &amp;&amp; ! pgrep -q zoom.us
  then
    echo hello | nc $IP $PORT
  fi
}

main
</code></pre>

<p>This script is started automatically by a macOS LaunchAgent. It sleeps for 20 minutes (which is the time I'm allowing myself not to move), checks if it is appropriate to beep and if so it activates the Beeper. If not then the script exits, macOS restarts it and we wait another 20 minutes.</p>

<p>If my screen is locked then I'm probably not sitting at my desk so we should not beep then. If I'm using my laptop somewhere else in the house away from my desk then the beeping would also be too annoying so we check if the external monitor that sits on my desk is connected to the computer. Finally, after many Zoom calls where I had to ask people to wait while I got up and turned off the beeper, I decided it would be better to not beep while I'm in a meeting.</p>

<p>It's certainly less awkward to not have the Beeper do its magic during a video call but in my experience video calls can be even worse than focused programming when it comes to sitting still too long. Arguably, I should not be suppressing the Beeper then. But I just got fed up with having to explain to the other participants in Zoom calls why I have to get up all the time.</p>

<h2>Conclusion and acknowledgments</h2>

<p>It's a silly device but it works. I am happy about how simple it is. It appears that the 10 seconds it takes for me to get up and push the button are enough to counteract the discomfort caused by sitting still too long.</p>

<p>As a closing thought I want to acknowledge and thank my wife for pointing out to me that I sit still too much and for putting up with the horrible screeching noises from the Beeper for the past 8 years and counting.</p>
<p>Tags:  <a href="https://blog.jacobvosmaer.nl/diy.html">diy</a></p>
<p><a href="https://blog.jacobvosmaer.nl/">Back</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Terence Tao: One of my papers got declined today (584 pts)]]></title>
            <link>https://mathstodon.xyz/@tao/113721192051328193</link>
            <guid>42568399</guid>
            <pubDate>Wed, 01 Jan 2025 19:12:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://mathstodon.xyz/@tao/113721192051328193">https://mathstodon.xyz/@tao/113721192051328193</a>, See on <a href="https://news.ycombinator.com/item?id=42568399">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Welcome to the Public Domain in 2025 (147 pts)]]></title>
            <link>https://blog.archive.org/2025/01/01/welcome-to-the-public-domain-in-2025/</link>
            <guid>42567280</guid>
            <pubDate>Wed, 01 Jan 2025 16:59:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.archive.org/2025/01/01/welcome-to-the-public-domain-in-2025/">https://blog.archive.org/2025/01/01/welcome-to-the-public-domain-in-2025/</a>, See on <a href="https://news.ycombinator.com/item?id=42567280">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			
<figure><a href="http://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025.png"><img decoding="async" width="1024" height="613" src="http://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-1024x613.png" alt="" srcset="https://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-1024x613.png 1024w, https://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-300x180.png 300w, https://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-768x460.png 768w, https://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-1536x919.png 1536w, https://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-2048x1226.png 2048w, https://blog.archive.org/wp-content/uploads/2025/01/PDDmontageRS_2025-624x373.png 624w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Image credit: Montage of materials moving into the public domain in 2025. Duke Law Center for the Study of the Public Domain.</figcaption></figure>



<h2>Celebrate the public domain with the Internet Archive in the following ways:</h2>



<ul>
<li><strong>Register</strong> for our Public Domain Day celebrations on January 22 – both <a href="https://www.eventbrite.com/e/singin-in-the-public-domain-public-domain-day-2025-tickets-1104135491979">virtual</a> and <a href="https://www.eventbrite.com/e/celebrate-public-domain-day-2025-at-the-internet-archive-tickets-1117297439719">in-person</a>.</li>



<li><strong>Submit</strong> a short film to our Public Domain Film Remix <a href="https://blog.archive.org/2024/12/16/2025-public-domain-day-remix-contest-the-internet-archive-is-looking-for-creative-short-films-made-by-you/">contest</a>.</li>



<li><strong>Explore</strong> the works that have entered the public domain in 2025, below.</li>
</ul>



<p>On January 1, 2025, we celebrate published works from 1929 and published sound recordings from 1924 entering the public domain! The passage of these works into the public domain celebrates our shared cultural heritage. The ability to breathe new life into long forgotten works, remix the most popular and enduring works of the time, and to better circulate the oddities we find in thrift stores, attics, and on random pockets of the internet are now freely available for us all.</p>



<p>While not at the same blockbuster level as 2024 with <a href="https://archive.org/details/steamboat-willie_1928"><em>Steamboat Willie</em>’s</a> passage into the public domain, works from 1929 still inhabit strong cultural significance today. The works of 1929 continue to capture the Lost Generation’s voice, the rise of sound film, and the emerging modern moment of the 1920s.&nbsp;</p>



<p><strong>Musical Compositions</strong></p>



<p>Show tunes and Jazz dominated the year with many standards that we remember today first being published. While best known for the 1952 film of the same name, <a href="https://archive.org/details/singin-in-the-rain-01">Singin’ in the Rain</a> was first published in 1929 and serves as the inspiration for our <a href="https://blog.archive.org/2024/12/16/2025-public-domain-day-remix-contest-the-internet-archive-is-looking-for-creative-short-films-made-by-you/">remix contest</a> this year. George Gershwin also officially published (and copyrighted) his suite <em>An American in Paris</em> following a premiere in late 1928.</p>



<p>Below is sheet music for some popular compositions of the time.</p>



<ul>
<li><a href="https://archive.org/details/singin-in-the-rain-01">Singin’ in the Rain</a></li>



<li><a href="https://archive.org/details/wedding-of-the-painted-doll-1929-sheet-music">Wedding of the Painted Doll</a></li>



<li><a href="https://archive.org/details/you-were-meant-for-me-1929-sheet-music/mode/2up">You Were Meant For Me</a></li>



<li><a href="https://archive.org/details/am-i-blue-1929-sheet-music">Am I Blue?</a></li>



<li><a href="https://archive.org/details/aint-misbehavin-1929-sheet-music">Ain’t Misbehavin’</a></li>



<li><a href="https://archive.org/details/what-is-this-thing-called-love-sheet-music-1929">What Is This Thing Called Love?</a></li>



<li><a href="https://archive.org/details/imslp-104723-pmlp-03667-ravel-bolero-cropped">Bolero</a></li>
</ul>



<p><img decoding="async" loading="lazy" src="https://lh7-rt.googleusercontent.com/docsz/AD_4nXe64S2RBCuwV3QgBs1QyzRvGGlsSxrPGp_hQmGdCWd7JWU2pLFezU3MX1GQD7gEf_xV7IJ7ngpOW1P9WfC7_FkMH2TTYWcClV2ecNkcfpNHk7tubARMMF4uH2JC6NWbTViccXoa5g?key=wO0fMbPUiRPFE3WA74sNCVBS" width="237" height="325"></p>



<p><strong>Literature</strong></p>



<p>Reflections on World War I continued with<a href="https://archive.org/details/dli.ernet.531939/mode/2up"> <em>A Farewell to Arms</em></a> by Ernest Hemingway, the first English translation of <a href="https://archive.org/details/allquietonwester0000unse_f7g8/mode/2up"><em>All Quiet on the Western Front</em></a>, and Richard Aldington’s <a href="https://archive.org/details/deathofheronovel0000rich/mode/2up"><em>Death of a Hero</em></a>. William Faulkner published his modernist novel <a href="https://archive.org/details/soundfury0000will_o8d3/mode/2up"><em>The Sound and the Fury</em></a>. A. A. Milne followed up 1928’s <a href="https://archive.org/details/houseatpoohcorne0000unse_e5y6"><em>The House at Pooh Corner</em></a> by adapting <a href="https://archive.org/details/windinwillows00grah"><em>The Wind in the Willows</em></a><em> </em>into the play <a href="https://archive.org/details/toad-of-toad-hall-1929"><em>Toad of Toad Hall</em></a>. Detective fiction thrived in 1929, with The Maltese Falcon serialized in Black Mask, Agatha Christie captivating readers with <a href="https://archive.org/details/sevendialsmyster0000agat_n1n0/mode/2up"><em>The Seven Dials Mystery</em></a>, and the first Ellery Queen novel, The Roman Hat Mystery, making its debut. Explore our <a href="https://archive.org/details/periodicals?tab=collection&amp;query=date%3A1929&amp;sort=-date">1929 periodicals</a> to find more hidden detective gems.</p>



<p><img decoding="async" loading="lazy" src="https://lh7-rt.googleusercontent.com/docsz/AD_4nXe89LykI0ONLADaL63mMqm9ZA5YpYxMrrvyGRp7a2v3Q25-wKjAZ9QTCwRHYe8KHUTjZTz6oEY5k4_zZGCQOv-1_Pqo8S3q46HWYelXrrpWggSlLLEMWwKZ3Fh4VO_EjGk0jgiJyg?key=wO0fMbPUiRPFE3WA74sNCVBS" width="205" height="301"></p>



<p>While not a towering work of literature, the first set of comic strips featuring Popeye also are joining the public domain. Popeye first made an appearance in <em>Thimble Theatre</em> on <a href="https://archive.org/details/popeyes-first-appearance-in-thimble-theatre-january-17-1929">January 17, 1929</a>. Initially just a side character for an adventure arc featuring gambling and sailing, Popeye rose quickly to fame. By February 4, 1931 the <em>Thimble Theatre</em> would feature a subtitle, <em>Starring Popeye</em>, before being renamed just Popeye later on.</p>



<p>Below is a further selection of works from the year:</p>



<ul>
<li><a href="https://archive.org/details/ropeplayinthreea00hami/mode/2up?view=theater"><em>Rope</em></a><em> </em>by Patrick Hamilton</li>



<li><a href="https://archive.org/details/a-room-of-ones-own_202208/mode/2up?q=A+Room+of+One%5C%27s+Own"><em>A Room of One’s Own</em></a> <em>by Virginia Woolfe</em></li>



<li><a href="https://archive.org/details/highwindinjamaic0000unse_c7o5/page/n3/mode/2up"><em>A High Wind in Jamaica</em></a><em> </em>by Richard Hughes</li>



<li><a href="https://archive.org/details/issexnecessary0000unse_u2j1/page/n5/mode/2up?q=Is+Sex+Necessary%3F"><em>Is Sex Necessary? Or, Why You Feel the Way You Do</em></a><em> </em>by E. B. White and James Thurber</li>



<li><a href="https://archive.org/details/lookhomewardange0000thom_f9h1/page/n5/mode/2up"><em>Look Homeward, Angel</em></a><em> </em>by Thomas Wolfe</li>
</ul>



<p>Dive into Archive’s literary collection to unearth more classics from <a href="https://archive.org/details/internetarchivebooks?tab=collection&amp;query=date%3A1929">1929</a>.</p>



<p><strong>Films</strong></p>



<p><img decoding="async" loading="lazy" src="https://lh7-rt.googleusercontent.com/docsz/AD_4nXfYdvV6W3ELpXhXvm5vfoHb1V5KgBXHBReKMD_7vCtS_agw744iZqjs2DAFwTVSEuL0CsGwCSmN7R315BpjC2Fwv7nCfdsARD3pR2K7xBNsw5U2-dieXdd-InzMQ31ZDKC9LKi4?key=wO0fMbPUiRPFE3WA74sNCVBS" width="298.3833017077799" height="222.2158273381295"></p>



<p>Last year Mickey Mouse made a splash with <a href="https://archive.org/details/steamboat-willie_1928"><em>Steamboat Willie</em></a> cruising into the public domain. This year <a href="https://archive.org/details/@smd5dq/lists/2/mickey-mouse-1929?sort=-date"><strong>TWELVE</strong></a><strong> </strong>more Mickey shorts join to flesh out the notable events of Mickey’s young career. He speaks his first words in <a href="https://archive.org/details/the-karnival-kid-1929"><em>The Karnival Kid</em></a>, he wears gloves for the first time in <a href="https://archive.org/details/the-opry-house-1929_202412"><em>The Opry House</em></a>, and Ub Iwerks leaves the studio at year’s end with <a href="https://archive.org/details/wild-waves-1929"><em>Wild Waves</em></a>. Disney animation also kickstarted their <em>Silly Symphonies</em> series with the haunting tales <a href="https://archive.org/details/the-skeleton-dance-1929"><em>The Skeleton Dance</em></a> and <a href="https://archive.org/details/hells-bells-1929"><em>Hell’s Bells</em></a>.</p>



<p>In <a href="https://archive.org/details/feature_films?tab=collection&amp;query=date%3A1929">1929</a>, if your film wanted to have any attention it needed sound. Musical films were everywhere with <a href="https://archive.org/details/musicals_202210/1929-02-01+-+The+Broadway+Melody+(1929).mp4"><em>The Broadway Melody</em></a><em> </em>winning the second ever Best Picture award at the Oscars, <a href="https://archive.org/details/the-hollywood-revue-1929"><em>The Hollywood Revue</em></a> introducing the world to “Singin’ in the Rain”, and the Marx Brothers making their big screen debut with <a href="https://archive.org/details/the-cocoanuts-1929_202412"><em>The Cocoanuts</em></a>.</p>



<p><img decoding="async" loading="lazy" src="https://lh7-rt.googleusercontent.com/docsz/AD_4nXcP9ZxMrKL61-d8QmGPk5poaAAyLJqPcQQUogbNltvPJTXeChaJ1i3lXYJPegyWniIcFhbhIYGOdGwcSQ_FcWNt5ck5TakVhNlOoMNFKytYS7qFZHeMwjNfz3UKf09MEePlAc5sBg?key=wO0fMbPUiRPFE3WA74sNCVBS" width="170" height="257"></p>



<p>Below is a list of more significant films from the year:</p>



<ul>
<li><a href="https://archive.org/details/all-americans-1929"><em>All Americans</em></a><em> </em>(dir. Joseph Santley)</li>



<li><a href="https://archive.org/details/blackmail_1929"><em>Blackmail</em></a><em> </em>(dir. Alfred Hitchcock)</li>



<li><a href="https://archive.org/details/lambchops-1929"><em>Lambchops</em></a><em> </em>(dir. Murray Roth)</li>



<li><a href="https://archive.org/details/StellasMerits1929ClaraBowFredricMarchMarcelineDayJackOakie"><em>The Wild Party</em></a><em> </em>(dir. Dorothy Arzner)</li>



<li><a href="https://archive.org/details/spite-marriage-1929"><em>Spite Marriage</em></a><em> </em>(dir. Buster Keaton and Edward Sedgwick)</li>



<li><a href="https://archive.org/details/1929-08-06-say-it-with-songs-1929"><em>Say It with Songs</em></a><em> </em>(dir. Lloyd Bacon)</li>



<li><a href="https://ia804708.us.archive.org/16/items/musicals_202210/1929-08-20%20-%20Hallelujah%20%281929%29.mp4"><em>Hallelujah</em></a><em> </em>(dir. King Vidor)</li>



<li><a href="https://archive.org/details/welcome-danger-1929"><em>Welcome Danger</em></a><em> </em>(dir. Clyde Bruckman and Malcolm St. Clair)</li>



<li><a href="https://archive.org/details/rec-20231215161834/The+Black+Watch+720p.mp4"><em>The Black Watch</em></a><em> </em>(dir. John Ford)</li>



<li>The first five <a href="https://archive.org/details/@smd5dq/lists/3/1929-silly-symphonies"><em>Silly Symphonies</em></a> (dir. Walt Disney or Ub Iwerks)</li>
</ul>



<p>Our film remix contest is ongoing until January 17, 2025, so please upload your submissions! Read more <a href="https://blog.archive.org/2024/12/16/2025-public-domain-day-remix-contest-the-internet-archive-is-looking-for-creative-short-films-made-by-you/">here</a>.</p>



<h2>Additional resources</h2>



<ul>
<li><a href="https://archive.us20.list-manage.com/track/click?u=38bd6154386f64fcd92204a25&amp;id=9986cec031&amp;e=caa90e5a55">Learn more</a> about what’s moving into the public domain in 2025 from Jennifer Jenkins and James Boyle of Duke Law’s Center for the Study of the Public Domain.</li>



<li>Check out the <a href="https://www.techdirt.com/2024/12/28/the-public-domain-game-jam-starts-next-week/">Public Domain Game Jam</a> from Techdirt.</li>



<li>Public Domain Review <a href="https://archive.us20.list-manage.com/track/click?u=38bd6154386f64fcd92204a25&amp;id=844175f270&amp;e=caa90e5a55">highlights the materials moving into the public domain</a> in 2025.</li>



<li>Interested in what’s happening with the public domain in Europe? Communia is hosting a <a href="https://archive.us20.list-manage.com/track/click?u=38bd6154386f64fcd92204a25&amp;id=2116ff8c9b&amp;e=caa90e5a55">one-day event</a> on January 9 in Brussels.</li>
</ul>



<p><strong>In honor of Public Domain Day, this post is published with a CC0 Waiver dedicating it to the public domain.</strong></p>
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why does storing 2FA codes in your password manager make sense? (102 pts)]]></title>
            <link>https://andygrunwald.com/blog/why-does-storing-two-factor-authentication-codes-in-your-password-manager-make-sense/</link>
            <guid>42567279</guid>
            <pubDate>Wed, 01 Jan 2025 16:59:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://andygrunwald.com/blog/why-does-storing-two-factor-authentication-codes-in-your-password-manager-make-sense/">https://andygrunwald.com/blog/why-does-storing-two-factor-authentication-codes-in-your-password-manager-make-sense/</a>, See on <a href="https://news.ycombinator.com/item?id=42567279">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>  <p>Modern login systems require a second factor (2FA) to log in, in addition to the standard username and password combination.
A Time-based one-time password (TOTP) as a 6-digit number is often used.
Password managers like <a href="https://1password.com/">1Password</a>, <a href="https://keepass.info/">KeePass (or respective forks)</a> and others offer the ability to store (and generate) the 2FA TOTP.</p>
<p>For a long time, I was asking myself:</p>
<p>Why is it recommended to have a Username, Password, and 2FA in the same storage (like 1Password)? Isn’t this against the basic idea of a second factor (regarding the storage places to gain access to)?</p>
<p>Or differently:</p>
<p>Is storing 2FA codes (for GitHub, Okta, etc.) in 1Password next to the username/password combination preferred? If yes, why?</p>
<p>Luckily enough, I had the opportunity to work with people who know their Security topic very well.
So, I just asked them ⬇️</p>
<hr>
<p><a href="https://www.linkedin.com/in/antti-kurittu/">Antti Kurittu</a> responded:</p>
<p><em>The main advantage of 2FA is that it is much more difficult to gain access to your accounts via phishing attacks. A time-based 2FA (TOTP) is time-sensitive, and a man-in-the-middle or proxy needs to be set up to capture that in real-time. Using 2FA with any provider or storage method protects against most phishing attacks seen in the wild.</em></p>
<p><em>1Password allows storing this token alongside your username and password. This is a convenient feature that is meant to make using 2FA easier. It is marginally less safe because the 2FA token is accessible to the attacker if they successfully compromise your password manager. Still, it does not remove the main benefit of using 2FA in the first place, which is neutering most phishing attacks. The 2FA token will still be required when the attacker tries to access your account.</em></p>
<p><em>The fact that 1Password offers to fill passwords based on domain name protects your account because a lookalike domain or an entirely fraudulent domain will not prompt 1Password to offer auto-filling but will require copy-pasting credentials from the app to the harmful website. If you see an autofill prompt, 1Password has associated those credentials with the website you’re accessing, including the 2FA prompt.</em></p>
<p><em>For <strong>maximum</strong> security, you can store your 2FA token elsewhere, like a YubiKey (see Yubico Authenticator) or Google Authenticator, and keep the recovery codes safe somewhere outside your computer, but for general purpose use, storing your 2FA in your password manager is an acceptable solution due to the convenience benefits it provides.</em></p>
<hr>
<p><a href="https://www.linkedin.com/in/jamesarlen/">Jamie Arlen</a> added furthermore:</p>
<p><em>There’s also the very simple view that backs the entire point of password managers: “Keeping your cryptographic keys safe is a seriously difficult problem to solve”. Centralizing them has a couple of downsides, but if you do a threat model and balance the unmitigated risks, using (for example) Google Authenticator to store your TOTP codes is significantly more likely to result in negative outcomes. The codes are only stored on the one easily lost/dropped/broken device. With 1Password, you’ve got access to them across all of your devices.</em></p>
<p><em>The pattern I use (and prefer both professionally and personally) is:</em></p>
<ul>
<li><em>Extensive use of password manager (I use 1Password) and not browser or operating system-based password storage. This requires active curation of the profiles for the various usernames/passwords I have.</em></li>
<li><em>Store all (except two) TOTP codes and screenshots of recovery keys in 1Password</em></li>
<li><em>Additionally, store recovery keys for personal use in an encrypted drive replicated through iCloud/OneDrive/Google Drive and to a private share located at a family member’s house with a separate memorable 32-character passphrase.</em></li>
<li><em>2 TOTP codes are not stored in 1Password.</em>
<ul>
<li><em>1Password’s own TOTP code</em></li>
<li><em>The TOTP code to my “account signup email” address</em></li>
</ul>
</li>
<li><em>These codes are stored on a set of three Yubikeys - one in my Every Day Carry (EDC), one in a safe place at home, and one in my bug-out bag. The recovery codes and initiation vectors for these are also in hardcopy with other important papers in a safety deposit box at the bank.</em></li>
</ul>
<p><em>It’s pretty secure, but most importantly, it’s a very usable system. The usability is what makes it so important. Much like the phrase “the best camera in the world is the one you have with you,” - the best password manager is the one that you actually use, and convenience will make it important.</em></p>
<hr>
<p>Thanks a lot, Antti and Jamie.</p>  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla replaces laid-off U.S. workers with foreigners using visas pushed by Musk (121 pts)]]></title>
            <link>https://www.msn.com/en-ca/autos/electric-cars/tesla-replaces-laid-off-u-s-workers-with-foreigners-using-visas-pushed-by-musk-report/ar-AA1wILAQ</link>
            <guid>42566784</guid>
            <pubDate>Wed, 01 Jan 2025 15:58:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.msn.com/en-ca/autos/electric-cars/tesla-replaces-laid-off-u-s-workers-with-foreigners-using-visas-pushed-by-musk-report/ar-AA1wILAQ">https://www.msn.com/en-ca/autos/electric-cars/tesla-replaces-laid-off-u-s-workers-with-foreigners-using-visas-pushed-by-musk-report/ar-AA1wILAQ</a>, See on <a href="https://news.ycombinator.com/item?id=42566784">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Databases in 2024: A Year in Review (498 pts)]]></title>
            <link>https://www.cs.cmu.edu/~pavlo/blog/2025/01/2024-databases-retrospective.html</link>
            <guid>42566192</guid>
            <pubDate>Wed, 01 Jan 2025 14:27:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cs.cmu.edu/~pavlo/blog/2025/01/2024-databases-retrospective.html">https://www.cs.cmu.edu/~pavlo/blog/2025/01/2024-databases-retrospective.html</a>, See on <a href="https://news.ycombinator.com/item?id=42566192">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>Like a shot to your <a target="_blank" href="https://youtu.be/pMoBAk-HFIg">dome piece</a>, I'm back to hit you with my annual roundup of what happened in the <a target="_blank" href="https://youtu.be/WkVohPC_YpU?t=37">rumble-tumble</a> game of databases. Yes, I used to write this article on the <a target="_blank" href="https://ottertune.com/">OtterTune</a> blog, but the company is dead (RIP). I'm doing this joint on my professor blog.</p>
<p>There is much to cover from the past year, from 10-figure acquisitions, vendors running wild in the streets with license changes, and the most famous database octogenarian splashing cash to recruit a college quarterback to impress his new dimepiece.</p>
<p>I promised my first wife that I would write more professionally this year. I have also been informed that some universities assign my annual blog articles as required reading in their database courses. Let's see how it goes.</p>
<p>Previous entries:</p>
<ul>
  <li> <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.cs.cmu.edu');" href="https://www.cs.cmu.edu/~pavlo/blog/2024/01/2023-databases-retrospective.html">Databases in 2023: A Year in Review</a></li>
  <li> <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.cs.cmu.edu');" href="https://www.cs.cmu.edu/~pavlo/blog/2022/12/2022-databases-retrospective.html">Databases in 2022: A Year in Review</a></li>
  <li> <a onclick="javascript:pageTracker._trackPageview('/outgoing/www.cs.cmu.edu');" href="https://www.cs.cmu.edu/~pavlo/blog/2021/12/2021-databases-retrospective.html">Databases in 2021: A Year in Review</a></li>
</ul>

<!-- *************** #1: LICENSES *************** -->
<h2 id="licenses">It’s My Database and I’m Going to License it the Way I Want! </h2>
<p>We live in the golden era of databases. There are many excellent (<a target="_blank" href="https://youtu.be/8Woy5I511L8">relational</a>) choices for all types of application domains. Many are open-source despite being built by for-profit companies backed by VC money.</p>
<p>But VCs want that money back and their <a target="_blank" href="https://youtu.be/1Za8BtLgKv8?t=290">trap</a> full, so these companies turn out a hosted service for their DBMSs on the cloud. But the cloud makes open-source DBMSs a tricky business. If a system becomes too popular, then a cloud vendor (like Amazon) slaps it up as a service and makes more money than the company paying for the development of the software. This threat is why many database companies change to more restrictive source code licenses that protect against cloud vendors from reselling their products. MongoDB was among the first to do this <a target="_blank" href="https://techcrunch.com/2018/10/16/mongodb-switches-up-its-open-source-license/">in 2018</a> when they switched to their <a target="_blank" href="https://en.wikipedia.org/wiki/Server_Side_Public_License">Server Side Public License</a> (SSPL).</p>
<p>This past year was a turbulent one for license changes, and the most prominent two were Redis™ and Elasticsearch.</p>
<h4 id="licenses-redis">Redis:</h4>
<p>Redis Ltd. (the company) is on an aggressive path towards its IPO. Originally starting as Redis Labs in 2011, they switched their name to <a target="_blank" href="https://redis.io/blog/becoming-one-redis/">Redis Ltd. in 2021</a> when they acquired the Redis trademark from its creator (<a target="_blank" href="https://github.com/antirez">Salvatore Sanfilippo</a>), who Redis Labs had bankrolled. Over the last few years, Redis Ltd. has attempted to consolidate control over the Redis landscape. The company has also tried to cast off the perception that the system is primarily used as an in-memory cache by adding support for vectors and other data models.</p>
<p>In March 2024, Redis Ltd. announced they were <a target="_blank" href="https://redis.io/blog/redis-adopts-dual-source-available-licensing/">switching</a> from the system's original (very permissive) <a target="_blank" href="https://en.wikipedia.org/wiki/BSD_licenses">BSD-3</a> license to a dual license comprising the proprietary <a target="_blank" href="https://redis.com/legal/rsalv2-agreement/">Redis Source Available License</a> and MongoDB's SSPL. The company announced this change the same day they announced the acquisition of <a target="_blank" href="https://www.speedb.io/">Speedb</a>, an <a target="_blank" href="https://github.com/speedb-io/speedb">open-source fork</a> of RocksDB.</p>
<p>The backlash to the Redis license move was <a target="_blank" href="https://lwn.net/Articles/966631/">quick</a>. The same week the license changed, <a target="_blank" href="https://www.thestack.technology/battle-of-the-redis-forks-begins/">two forks</a> were announced based on the original BSD-3 code line: <a target="_blank" href="https://valkey.io/">Valkey</a> and <a target="_blank" href="https://redict.io/">Redict</a>. Valkey started at Amazon, but engineers at Google and Oracle quickly joined. In only one week, the Valkey project clapped back at Redis Ltd. when it <a target="_blank" href="https://www.linuxfoundation.org/press/linux-foundation-launches-open-source-valkey-community">became part of the Linux Foundation</a>, and several major companies shifted their development efforts to it. Redis Ltd. did not help their perception of being up to no good when they got frisky with their beloved trademark and <a target="_blank" href="https://twitter.com/TomHacohen/status/1861137484249252093">started taking over open-source Redis extensions</a>.</p>
<p>In an obvious homage to when <a target="_blank" href="https://youtu.be/9xqvqybGMHk">Bushwick Bill (RIP), Scarface, and Willie D got back together in 2015</a>, the Redis' creator <a target="_blank" href="https://antirez.com/news/144">announced in December 2024</a> that he is in touch with the Redis Ltd. management and is looking to make a comeback to reunite the Redis community.</p>
<h4 id="licenses-elasticsearch">Elasticsearch:</h4>
<p>Elastic N.V. is the for-profit company backing the development of the leading text-search Elasticsearch DBMS. In 2021, they announced their <a target="_blank" href="https://www.elastic.co/blog/elastic-license-update">switch to a dual-license model</a> of the <a target="_blank" href="https://www.elastic.co/blog/elastic-license-v2">Elastic License</a> and MongoDB's SSPL. Again, this was in response to the rising prominence of Amazon's Elasticsearch offering, even though the service had been out <a target="_blank" href="https://aws.amazon.com/blogs/aws/new-amazon-elasticsearch-service/">since 2015</a>. Amazon didn't take this switch kindly and announced their <a target="_blank" href="https://opensearch.org/">OpenSearch</a> fork.</p>
<p>Three years later, Elastic N.V. announced in August 2024 that they <a target="_blank" href="https://www.elastic.co/blog/elasticsearch-is-open-source-again">reverted their license change</a> and switched to the <a target="_blank" href="https://en.wikipedia.org/wiki/GNU_Affero_General_Public_License">AGPL</a>. Their blog article announcing this change references Kendrick Lamar's songs (e.g., <a target="_blank" href="https://www.youtube.com/watch?v=H58vbez_m4E">Not Like Us</a>). Amazon did not like being called the <a target="_blank" href="https://www.bbc.com/news/articles/c0rgl497k59o">Drake of Databases</a> and announced the following month that they were transferring ownership of the <a target="_blank" href="https://www.linuxfoundation.org/press/linux-foundation-announces-opensearch-software-foundation-to-foster-open-collaboration-in-search-and-analytics">OpenSearch project to the Linux Foundation</a>.</p>
<!-- BEGIN: ANDY'S TAKE -->
<div>
<h3><img decoding="async" loading="lazy" src="https://www.cs.cmu.edu/~pavlo/images/blog/017/pavlo-head-sideview-lomo.png" alt="Andy's Head" width="32" height="41">Andy’s Take:</h3>
<p>This turmoil seems like a lot just over licenses, but remember, there is big money in databases. And this is just two systems! I didn't even discuss Greenplum <a target="_blank" href="https://news.ycombinator.com/item?id=40507691">quietly killing</a> off their open-source repository after nine years and going proprietary. But people did not notice because nobody willingly runs Greenplum anymore. The only DBMS I know of that made the same open-source reversal is <a target="_blank" href="https://github.com/ALTIBASE/altibase/blob/main/README.md">Altibase in 2023</a>.</p>
<p>I'll be blunt: I don't care for Redis. It is slow, it has fake <a target="_blank" href="https://redis.io/docs/latest/develop/interact/transactions/">transactions</a>, and its query syntax is a freakshow. Our experiments at CMU found <a target="_blank" href="https://www.dragonflydb.io/">Dragonfly</a> to have much more impressive performance numbers (even with a single CPU core). In my database course, I use the Redis query language as an example of <a target="_blank" href="https://youtu.be/fZbwD1gzjLk?t=2018">what not to do</a>. Nevertheless, I am sympathetic to Redis Ltd.'s plight of being overrun by Amazon. However, the company is overestimating the barrier of entry to build a simplistic system like Redis; it is much lower than building a full-featured DBMS (e.g., Postgres), so there are several alternatives to the OG Redis. They are not in position of strength where such posturing will be tolerated by the community.</p>
<p>The Elasticsearch saga is the same story as Redis, except they are further along in the plot: the company announces license change, competitors create an open-source fork, and the company reverts to an open-source license to muted fanfare.</p>
<p>Notice that Redis and Elasticsearch are receiving more backlash compared to other systems that made similar moves. There was no major effort to fork off MongoDB, <a target="_blank" href="https://neo4j.com/open-core-and-neo4j/">Neo4j</a>, <a target="_blank" href="https://www.infoq.com/news/2018/12/confluent-license-changes/">Kafka</a>, or <a target="_blank" href="https://web.archive.org/web/20240703021228/https://www.cockroachlabs.com/blog/oss-relicensing-cockroachdb/">CockroachDB</a> when they announced their license changes. CockroachDB even <a target="_blank" href="https://techcrunch.com/2024/08/15/cockroach-labs-shakes-up-its-licensing-to-force-bigger-companies-to-pay/">changed its license again in 2024</a> to make larger enterprises start paying up. It cannot be because the Redis and Elasticsearch install base is so much larger than these other systems, and therefore, there were more people upset by the change since the number of MongoDB and Kafka installations was equally as large when they switched their licenses. In the case of Redis, I can only think that people perceive Redis Ltd. as unfairly profiting off others' work since the company's founders were not the system's original creators. An analysis of Redis' source code repository also shows that a <a target="_blank" href="https://lwn.net/Articles/966631/">sizable percentage of contributions</a> to the DBMS comes from outside the company (e.g., Tencent, Alibaba). This "stolen valor" was the reason for the ire HashiCorp received when they <a target="_blank" href="https://techcrunch.com/2023/09/20/terraform-fork-gets-a-new-name-opentofu-and-joins-linux-foundation/">changed Terraform's license</a> in 2023.</p>
<p>The overarching issue in these license shuffles is the <a target="_blank" href="https://techcrunch.com/2023/12/26/the-eternal-struggle-between-open-source-and-proprietary-software/">long-term viability of open-source independent software vendors</a> (ISVs) in the database market. The cloud vendors are behemoths with infinite money. If an open-source DBMS takes off, they will start hosting it and make more money than the ISV. Or they will add your DBMS's wire protocol as a front-end to an existing DBMS, like when AWS added <a target="_blank" href="https://aws.amazon.com/about-aws/whats-new/2024/03/amazon-timestream-influxdb-available/">InfluxDB v2 protocol support</a> for their Timestream DBMS in March 2024. They can then be the girlfriend of the aforementioned Bushwick Bill and <a target="_blank" href="https://www.youtube.com/watch?v=i3M41aqHyfQ">shoot you in the eye</a>, like when AWS announced that their new Valkey-compatible services are <a target="_blank" href="https://www.lastweekinaws.com/blog/aws-valkey-play-when-a-fork-becomes-a-price-cut/">30% cheaper</a> than their Redis-compatible services.</p>
</div>
<!-- END: ANDY'S TAKE -->

<!-- *************** #2: GANGWAR *************** -->
<h2 id="gangwar">The Databricks vs. Snowflake Gangwar Continues </h2>
<p>There continues to be no love lost between Databricks and Snowflake. This fight is a classic database war that has spilled out into the streets. The two companies’ previous <a target="_blank" href="https://www.cs.cmu.edu/~pavlo/blog/2021/12/2021-databases-retrospective.html#benchmark-violence">feud over query performance</a> has expanded to other areas of data management and become much more expensive.</p>
<p>Databricks took the first shot in March 2024 when they announced they spent $10 million to build their <a target="_blank" href="https://www.databricks.com/blog/introducing-dbrx-new-state-art-open-llm">DBRX open-source LLM</a> with 132 billion parameters. The <a target="_blank" href="https://www.databricks.com/research/mosaic">Mosaic</a> team led the development of the DBRX model, which Databricks <a target="_blank" href="https://techcrunch.com/2023/06/26/databricks-picks-up-mosaicml-an-openai-competitor-for-1-3b/">acquired in 2023 for $1.3 billion</a>. One month later, Snowflake rolled up to the same corner and lit it up using their <a target="_blank" href="https://www.snowflake.com/en/blog/arctic-open-efficient-foundation-language-models-snowflake/">Arctic open-source LLM</a> with 480 billion parameters. Snowflake boasted they only spent <a target="_blank" href="https://www.chaosgenius.io/blog/snowflake-arctic-vs-dbrx/#top-10-key-differences%E2%80%94snowflake-arctic-vs-dbrx">$2 million to train their model</a> while outperforming DBRX for “enterprise” tasks like SQL generation. You can tell that Snowflake cares most about taking a shot at Databricks because their announcement shows other LLMs doing better than them (e.g., Llama3), but they highlight how they are better than DBRX. One AI researcher was confused about why <a target="_blank" href="https://medium.com/@mario.defelipe/my-deception-with-databricks-dbrx-and-snowflake-arctic-enterprise-llms-b4fd4faf752a#c0e4">Snowflake focused so much on DBRX</a> in their analysis and not the other models; this person does not know how much blood these two database rivals have spilled.</p>
<p>While the public LLM battle raged, another front in the war between Databricks and Snowflake opened up behind the scenes over catalogs. For most of the 2010s, Hive’s <a target="_blank" href="https://cwiki.apache.org/confluence/display/hive/hcatalog+usinghcat">HCatalog</a> has been the de facto catalog system on data lakes. <a target="_blank" href="https://iceberg.apache.org/">Iceberg</a> and <a target="_blank" href="https://hudi.apache.org/">Hudi</a> emerged as replacements in the late 2010s from Netflix and Uber, respectively, and both became top-level Apache projects backed by VC-funded startups. These systems provide a meta-data service to track files and support transactional ingestion of new data on an object store (e.g., S3). Databricks has a proprietary catalog service called <a target="_blank" href="https://www.databricks.com/product/unity-catalog">Unity</a>, which works with its <a target="_blank" href="https://delta.io/">DeltaLake</a> platform. Snowflake announced their <a target="_blank" href="https://www.snowflake.com/blog/expanding-the-data-cloud-with-apache-iceberg/">initial integration with Iceberg-backed tables</a> in 2022. They then <a target="_blank" href="https://medium.com/snowflake/an-overview-of-snowflake-apache-iceberg-tables-d5e85864ac99">expanded their support</a> for Iceberg over the next few years. Then, they looked into acquiring <a target="_blank" href="https://www.tabular.io/">Tabular</a>, the main company behind Iceberg, to compete against Databricks with Unity and DeltaLake. The story goes that Snowflake was about to <a target="_blank" href="https://financialpost.com/pmn/business-pmn/inside-the-snowflake-databricks-rivalry-and-why-both-fear-microsoft">close the deal for $600 million</a>. But then Databricks crashed the party and splashed <a target="_blank" href="https://techcrunch.com/2024/08/14/databricks-reportedly-paid-2-billion-in-tabular-acquisition/">$2 billion to acquire Tabular</a>. Databricks announced the acquisition the same day as the Snowflake CEO’s conference keynote address, where he was announcing their new <a target="_blank" href="https://venturebeat.com/data-infrastructure/snowflake-unveils-polaris-a-vendor-neutral-open-catalog-implementation-of-apache-iceberg/">open-source Polaris catalog service</a> in June 2024. Databricks continued to kick Snowflake in the teeth when they announced they were <a target="_blank" href="https://twitter.com/databricks/status/1801293028612837877">open-sourcing their Unity catalog</a> the following week. Straight  <a target="_blank" href="https://www.youtube.com/watch?v=50Tl8E0Vvms">murdergram</a>.</p>
<!-- BEGIN: ANDY'S TAKE -->
<div>
<h3><img decoding="async" loading="lazy" src="https://www.cs.cmu.edu/~pavlo/images/blog/017/pavlo-head-sideview-lomo.png" alt="Andy's Head" width="32" height="41">Andy’s Take:</h3>
<p>What is interesting about this database battle is that it is not just about raw performance numbers. It isn’t like the old Oracle versus Informix shootout of the 1990s, where they were mostly boasting about faster query latencies. It is true that the battle also went beyond just benchmark shots when <a target="_blank" href="https://archive.is/JvvhM">Informix sued Oracle</a> (and later had to <a target="_blank" href="https://www.cnet.com/tech/services-and-software/informix-withdraws-oracle-suit/">withdraw their suit</a>) because Oracle poached some top Informix executives. Later, the world found out that the Informix CEO had cooked the company’s books to <a target="_blank" href="https://www.sfgate.com/business/article/ex-ceo-at-informix-indicted-in-fraud-case-2751792.php">inflate revenue numbers</a> to look better against Oracle and had to do a <a target="_blank" href="https://www.eweek.com/database/ex-informix-ceo-gets-jail/">two-month bid</a> in the federal clink.</p>
<p>Instead, the Snowflake versus Databricks battle has expanded to be about the ecosystem around the database. That is, it is about the infrastructure people use to get their data into a database and then the tools they use on that data. Vectorized execution engines for analytical queries are a  <a target="_blank" href="https://db.cs.cmu.edu/seminar2024/">commodity</a> now. Databricks and every other OLAP vendor follow Snowflake’s architecture design from 2013, originally based on one of the Snowflake co-founders’ <a target="_blank" href="https://www.youtube.com/watch?v=moQY_eiHCTs">Ph.D. thesis</a>. What matters now are quality-of-life facets (which are hard to monetize and compare with competitors), compatibility with other tools, and AI/LLM magic.</p>
<p>At least the competition between Snowflake and Databricks has an upside for consumers. Such ferocity means better products and technology for data (e.g., Snowflake’s Polaris is now an  <a target="_blank" href="https://polaris.apache.org/">Apache project</a>) and eventually (hopefully) lower prices. It’s not like the previous pissing match between Oracle and SalesForce CEOs, where it was two rich guys taking pop shots at each other during their <a target="_blank" href="https://phys.org/news/2011-10-ellison-benioff-billionaire.html">expensive conferences</a>.</p>
</div>
<!-- END: ANDY'S TAKE -->

<!-- *************** #3: DUCKDB *************** -->
<h2 id="duckdb">Shoving Ducks Into Everything </h2>
<p>In the same way that Postgres is the default choice for anyone starting a new operational database, DuckDB has entered the zeitgeist as the default choice for someone wanting to run analytical queries on their data. Pandas previously held DuckDB's crowned position. Given DuckDB's insane portability, there are several efforts to stick it inside existing DBMSs that do not have great support for OLAP workloads. This year, we saw the release of four different extensions to stick DuckDB up inside Postgres.</p>
<p>The first announcement came in May 2024 when <a target="_blank" href="https://www.crunchydata.com/">Crunchy Data</a> revealed their <a target="_blank" href="https://www.crunchydata.com/blog/how-we-fused-duckdb-into-postgres-with-crunchy-bridge-for-analytics">proprietary bridge</a> for rewiring Postgres to route OLAP queries to DuckDB. They later announced an expanded version of their extension to leverage DuckDB's <a target="_blank" href="https://duckdb.org/docs/extensions/spatial/overview.html">geospatial capabilities</a> to <a target="_blank" href="https://www.crunchydata.com/blog/postgis-meets-duckdb-crunchy-bridge-for-analytics-goes-spatial">accelerate PostGIS queries</a>.</p>
<p>In June 2024, ParadeDB <a target="_blank" href="https://www.linkedin.com/posts/philippemnoel_im-incredibly-excited-to-announce-duckdb-activity-7212107481123020800-UUg6/">announced</a> their open-source extension (<a target="_blank" href="https://github.com/paradedb/pg_analytics">pg_analytics</a>) that uses Postgres' foreign data wrapper API to call into DuckDB; they previously were using DataFusion in an earlier version (<a target="_blank" href="https://github.com/paradedb/paradedb/tree/dev/pg_lakehouse">pg_lakehouse</a>) but switched to the Duck.</p>
<p>Then, in August 2024, the next DuckDB-for-Postgres extension (<a target="_blank" href="https://github.com/duckdb/pg_duckdb">pg_duck</a>) came out. The source code for this extension is hosted under the <a target="_blank" href="https://duckdblabs.com/">DuckDB Labs</a> GitHub organization. As such, this is the officially sanctioned DuckDB extension for Postgres. The original <a target="_blank" href="https://www.theregister.com/2024/08/20/postgresql_duckdb_extension/">announcement</a> touted this project as being a collaboration between <a target="_blank" href="https://motherduck.com/">MotherDuck</a>, <a target="_blank" href="https://www.hydra.so/">Hydra</a>, Microsoft, and <a target="_blank" href="https://neon.tech/">Neon</a>. The latter two were (allegedly) kicked out of the mix over a dispute on development controls, similar to <a target="_blank" href="https://youtu.be/ECAfnZIN1-A">Arabian Prince</a> leaving NWA. The repository now only lists it as a joint effort between MotherDuck and Hydra.</p>
<p>The latest DuckDB extension <a target="_blank" href="https://mooncake.dev/blog/how-we-built-pgmooncake">dropped</a> in November 2024 with <a target="_blank" href="https://github.com/Mooncake-Labs/pg_mooncake">pg_mooncake</a>. Mooncake differs from the other three because it supports writing data through Postgres into Iceberg tables with full transaction support.</p>
<!-- BEGIN: ANDY'S TAKE -->
<div>
<h3><img decoding="async" loading="lazy" src="https://www.cs.cmu.edu/~pavlo/images/blog/017/pavlo-head-sideview-lomo.png" alt="Andy's Head" width="32" height="41">Andy’s Take:</h3>
<p>Most OLAP queries do not access that much data. Fivetran analyzed traces from Snowflake and Redshift and showed that the <a target="_blank" href="https://www.fivetran.com/blog/how-do-people-use-snowflake-and-redshift">median amount of data scanned by queries is only 100 MB</a>. Such a small amount of data means a single DuckDB instance is enough for most to handle most queries.</p>
<p>DuckDB's convenience and portability are the reasons for its proliferation in the Postgres community. Although ClickHouse has existed since 2016, it was not as easy to run as DuckDB until recently (see this <a target="_blank" href="https://clickhouse.com/blog/clickhouse-over-the-years-with-benchmarks">blog article</a> that discusses the steps to deploy ClickHouse in 2018). These DuckDB extensions are a single entry point to the broader data ecosystem. Users no longer need to install separate extensions to access data in Iceberg and separately for S3. DuckDB can handle all of that for you. It allows organizations to gain high-performance analytics without needing an expensive data warehouse.</p>
<p>Postgres' support for extensions and plugins is impressive. One of the <a target="_blank" href="https://dsf.berkeley.edu/papers/ERL-M85-95.pdf">original design goals</a> of Postgres from the 1980s was to be extensible. The intention was to easily support new access methods and new data types and operations on those data types (i.e., object-relational). Since 2006, Postgres' "hook" API. Our <a target="_blank" href="http://reports-archive.adm.cs.cmu.edu/anon/2023/abstracts/23-144.html">research</a> shows that Postgres has the most expansive and diverse extension ecosystem compared to every other DBMS. We also found that the DBMS's lack of guard rails means that extensions can <a target="_blank" href="https://www.youtube.com/watch?v=U7v0fubktoY">interfere with each other and cause incorrect behavior</a>.</p>
<p>Earlier projects that added columnar storage to Postgres (e.g., Citus, Timescale) only solved part of the problem. Columnar data formats improve retrieving data from storage. However, a DBMS cannot fully exploit those formats if it still uses a <a target="_blank" href="https://www.youtube.com/watch?v=tsbbwiWw9VE&amp;list=PLSE8ODhjZXjYa_zX-KeMJui7pcN1rIaIJ&amp;index=5">row-oriented query processing model</a> (e.g., Postgres). Using DuckDB provides both columnar storage and vectorized query processing.</p>
<p>There is likely a <a target="_blank" href="https://en.wikipedia.org/wiki/Turducken">turducken</a> joke here involving an elephant, but I will not make it because I do not want to get <a target="_blank" href="https://www.cmu.edu/policies/faculty/appointment-and-tenure-policy.html#dismissal">fired</a> or put on probation by the university (again).</p>
</div>
<!-- END: ANDY'S TAKE -->

<!-- *************** #4: DUCKDB *************** -->
<h2 id="random">Random Happenings </h2>
<p>Many one-off events happened with databases last year that you might have overlooked. Here is a quick summary of them:</p>
<h4>Releases:</h4>
<ul>
    <li> <a target="_blank" href="https://aws.amazon.com/blogs/database/introducing-amazon-aurora-dsql/">Amazon Aurora DSQL</a>
    <p>There isn't much public information yet about how AWS implemented their new "Spanner-like" DBMS (see <a target="_blank" href="https://brooker.co.za/blog/2024/12/03/aurora-dsql">Mark Brooker's discussion</a> about the DBMS architecture). The key ideas are a distributed log service (rumors were it was going to be based on now-defunct QLDB) and timestamp ordering via <a target="_blank" href="https://aws.amazon.com/blogs/compute/its-about-time-microsecond-accurate-clocks-on-amazon-ec2-instances/">Time Sync</a>. But this announcement shows you how much brand recognition the name "Aurora" carries in the database world because AWS used it for this new DBMS that seemingly shares no code with their flagship Aurora Postgres RDS offering.
    </p></li>

    <li> <a target="_blank" href="https://cedardb.com/blog/ode_to_postgres/">CedarDB</a>
    <p><a target="_blank" href="https://umbra-db.com/">Umbra</a> is one of the most state-of-the-art DBMSs written by the world's <a onclick="javascript:pageTracker._trackPageview('/outgoing/twitter.com');" href="https://twitter.com/andy_pavlo/status/1221464821717258242">greatest database systems researcher</a> (<a onclick="javascript:pageTracker._trackPageview('/outgoing/en.wikipedia.org');" href="https://en.wikipedia.org/wiki/Thomas_Neumann">Thomas Neumann</a>). But Thomas is content with staying at his university to work on Umbra, remaining comfortably on top of the <a onclick="javascript:pageTracker._trackPageview('/outgoing/benchmark.clickhouse.com');" href="https://benchmark.clickhouse.com/">Clickbench</a> leaderboard, and not worrying about pesky customers. That's why his top Ph.D. students forked his code and are commercializing it as CedarDB.
    </p></li>

    <li> <a target="_blank" href="https://cloud.google.com/blog/products/databases/announcing-sql-support-for-bigtable">Google Bigtable</a>
    <p>The only interesting part of this announcement is that the former vanguard of the NoSQL movement in the late 2000s now supports SQL in 2024.
    </p></li>

    <li> <a target="_blank" href="https://turso.tech/blog/introducing-limbo-a-complete-rewrite-of-sqlite-in-rust">Limbo</a>
    <p>Turso has been working on the  <a target="_blank" href="https://libsql.org/">libSQL</a> fork of SQLite for a while, but they went all out in 2024 by announcing a complete rewrite of SQLite in Rust. In their announcement, they correctly point out that the value of SQLite is not just from its code, but also from the <a target="_blank" href="https://sqlite.org/th3.html">insane test engineering</a> that ensures it runs correctly everywhere. That is why the Limbo developers are working with a <a target="_blank" href="https://antithesis.com/">deterministic testing startup</a> by ex-FoundationDB people. See FoundationDB's <a target="_blank" href="https://www.youtube.com/watch?v=OJb8A6h9jQQ&amp;list=PLSE8ODhjZXjagqlf1NxuBQwaMkrHXi-iz&amp;index=22">2020 CMU-DB talk</a> for more information on what this testing means.
    </p></li>

    <li> <a target="_blank" href="https://www.microsoft.com/en-us/research/blog/introducing-garnet-an-open-source-next-generation-faster-cache-store-for-accelerating-applications-and-services/">Microsoft Garnet</a>
    <p>This key-value store is the successor to the impressive <a target="_blank" href="https://microsoft.github.io/FASTER/">FASTER</a> system from Microsoft Research. It is compatible with Redis and supports inter-query parallelism, larger-than-memory databases, and real transactions. Redis should <u>not</u> be anybody's first choice these days.
    </p></li>

    <li> <a target="_blank" href="https://dev.mysql.com/doc/relnotes/mysql/9.0/en/news-9-0-0.html">MySQL v9</a>
    <p>Six years after MySQL v8 went GA, the team turned v9 out on the streets. But people quickly found that it crashed if your database had <a target="_blank" href="https://perconadev.atlassian.net/browse/PS-9306">more than 8000 tables</a>. I am underwhelmed with the <a target="_blank" href="https://dev.mysql.com/doc/refman/9.0/en/mysql-nutshell.html">feature list</a> in this new major version. Oracle is putting all its time and energy into its proprietary <a target="_blank" href="https://www.oracle.com/mysql/">MySQL Heatwave</a> service. MySQL is still widely used, but the excitement is not there anymore. Everyone has moved on to Postgres.
    </p></li>

    <li> <a target="_blank" href="https://prometheus.io/blog/2024/11/14/prometheus-3-0/">Prometheus v3</a>
    <p>It has been seven years since the latest major version of Prometheus. There are so many <a target="_blank" href="https://dbdb.io/browse?compatible=prometheus">compatible alternatives</a> now that the OG Prometheus may not be the best option for some organizations.
    </p></li>
</ul>

<h4>Acquisitions:</h4>
<ul>
    <li> <a target="_blank" href="https://www.marketscreener.com/quote/stock/ALTERYX-INC-34336524/news/Clearlake-Capital-Group-and-Insight-Partners-Complete-Acquisition-of-Alteryx-46231296/">Alteryx → Private Equity</a>
    <p>I've never met anybody who uses Alteryx, and I don't have an opinion about them.
    </p></li>

    <li> <a target="_blank" href="https://www.prnewswire.com/news-releases/k1-acquires-mariadb-a-leading-database-software-company-and-appoints-new-ceo-302243508.html">MariaDB → Private Equity</a>
    <p>Hopefully the PE people buying the MariaDB Corporation can clean up the mess. See my analysis from last year about the <a target="_blank" href="https://www.cs.cmu.edu/~pavlo/blog/2024/01/2023-databases-retrospective.html#mariadb">MariaDB dumpster fire</a>.
    </p></li>

    <li> <a target="_blank" href="https://supabase.com/blog/supabase-aquires-oriole">OrioleDB → Supabase</a>
    <p>This purchase makes sense if you are one of the leading Postgres ISVs. Postgres has a great front-end but an <a target="_blank" href="https://www.cs.cmu.edu/~pavlo/blog/2023/04/the-part-of-postgresql-we-hate-the-most.html">outdated storage architecture</a>. OrioleDB fixes that problem.
    </p></li>

    <li> <a target="_blank" href="https://www.techtimes.com/articles/306944/20240731/database-startup-clickhouse-announces-peerdb-acquistion.htm">PeerDB → ClickHouse</a>
    <p>Better ETL tooling to get data out of Postgres and into ClickHouse. This is a smart move by ClickHouse, Inc.</p></li>

    <li> <a target="_blank" href="https://www.timescale.com/blog/best-postgresql-gui-popsql-joins-timescale/">PopSQL → Timescale</a>
    <p>They bought themselves a fancy SQL editor UI. It is a quality-of-life improvement.</p></li>

    <li> <a target="_blank" href="https://techcrunch.com/2024/03/21/redis-switches-licenses-acquires-speedb-to-go-beyond-its-core-in-memory-database/">Speedb → Redis Ltd.</a>
    <p>See the <a href="#licenses-redis">discussion</a> above. They are likely going to use Speedb to allow Redis to spill data to disk. Speedb's developers never explained what changes and improvements they made in their RocksDB fork (or I could not find it?). See Mark Callaghan's recent comparison of <a target="_blank" href="http://smalldatum.blogspot.com/2024/12/speedb-vs-rocksdb-on-large-server.html">Speedb vs. RocksDB</a>.
    </p></li>

    <li> <a target="_blank" href="https://www.reuters.com/markets/deals/openai-acquires-database-analytics-firm-rockset-2024-06-21/">Rockset → OpenAI</a>
    <p>This is big news for the company, but unfortunately they had to shutdown the DBaaS in September 2024. Rockset had a great engineering team with some of the best database engineers from Facebook. I just never liked how their DBMS stored three copies of your data in its indexes.
    </p></li>

    <li> <a target="_blank" href="https://www.cnbc.com/2024/06/04/databricks-is-buying-data-optimization-startup-tabular.html">Tabular → Databricks</a>
    <p>Again, see the <a href="#gangwar">discussion above</a>. Iceberg is the standard (sorry Hudi); even <a target="_blank" href="https://aws.amazon.com/about-aws/whats-new/2024/12/amazon-s3-tables-apache-iceberg-tables-analytics-workloads/">Amazon S3 now supports it</a>. It remains to be seen how the adoption of Polaris will evolve and whether they will be able to maintain compatibility in the long term.
    </p></li>

    <li> <a target="_blank" href="https://www.verta.ai/blog/cloudera-acquires-verta-operational-ai-platform-to-bring-trusted-hybrid-ai-to-the-enterprise">Verta.ai → Cloudera</a>
    <p>I guess Cloudera is still alive?
    </p></li>

    <li> <a target="_blank" href="https://www.warpstream.com/blog/warpstream-is-dead-long-live-warpstream">Warpstream → Confluent</a>
    <p>Rewriting Kafka in golang but then making it spill to S3. I'm happy for the Warpstream team, but Confluent could have done this themselves.
    </p></li>
</ul>

<h4>Funding:</h4>
<ul>
    <li><b>Databricks</b> - <a target="_blank" href="https://www.databricks.com/company/newsroom/press-releases/databricks-raising-10b-series-j-investment-62b-valuation">$10 billion Series J</a></li>
    <li><b>LanceDB</b> - <a target="_blank" href="https://siliconangle.com/2024/05/15/lancedb-raises-8m-speed-ai-models-open-source-vector-database/">$8 million Seed Round</a></li>
    <li><b>SDF</b> - <a target="_blank" href="https://www.geekwire.com/2024/data-warehousing-startup-sdf-led-by-microsoft-and-meta-vets-comes-out-of-stealth-mode/">$9 million Seed Round</a></li>
    <li><b>SpiceDB</b> - <a target="_blank" href="https://authzed.com/blog/series-a-funding">$12 million Series A</a></li>
    <li><b>TigerBeetle</b> - <a target="_blank" href="https://tigerbeetle.com/blog/2024-07-23-rediscovering-transaction-processing-from-history-and-first-principles">$24 million Series A</a></li>
</ul>

<p>There are a few more raises from <a target="_blank" href="https://cedardb.com/">CedarDB</a>, <a target="_blank" href="https://spiraldb.com/">SpiralDB</a>, and others but those amounts are not public yet.</p>
<h4>Deaths:</h4>
<ul>
    <li> <a target="_blank" href="https://www.infoq.com/news/2024/07/aws-kill-qldb/">Amazon QLDB</a>
    <p>If Amazon can't figure out how to make money on a blockchain database, then nobody can. And yes, I know QLDB is not a true P2P blockchain, but it's close enough.
    </p></li>

    <li> <a target="_blank" href="https://ottertune.com/">OtterTune</a>
    <p><a target="_blank" href="https://www.linkedin.com/in/dana-van-aken/">Dana</a>, <a target="_blank" href="https://www.linkedin.com/in/bohan-zhang-52b17714b">Bohan</a>, and I worked on this research project and startup for almost a decade. And now it is dead. I am disappointed at how a particular company treated us at the end, so they are forever banned from recruiting CMU-DB students. They know who they are and what they did.
    </p></li>
</ul>

<p>I want to also give special props to <a target="_blank" href="https://www.linkedin.com/in/andres-freund">Andres Freund</a> for discovering the <a target="_blank" href="https://arstechnica.com/security/2024/04/what-we-know-about-the-xz-utils-backdoor-that-almost-infected-the-world/">xz backdoor</a> in 2024 while working on Postgres at Microsoft. This attack was a <a target="_blank" href="https://twitter.com/thegrugq/status/1774392858101039419">two-year campaign</a> to inject malicious code into an important compression library widely used in computing. Although the backdoor targeted SSH and not Postgres directly, it is another example of why database engineers are some of the best programmers in the world.</p>
<!-- BEGIN: ANDY'S TAKE -->
<div>
<h3><img decoding="async" loading="lazy" src="https://www.cs.cmu.edu/~pavlo/images/blog/017/pavlo-head-sideview-lomo.png" alt="Andy's Head" width="32" height="41">Andy’s Take:</h3>
<p>Databricks has blown away all other fundraising in the world of databases for the second year in a row with a disgustingly brash <a target="_blank" href="https://www.prnewswire.com/news-releases/databricks-is-raising-10b-series-j-investment-at-62b-valuation-302333822.html">$10 billion Series J round</a>. This is after their <a target="_blank" href="https://www.databricks.com/company/newsroom/press-releases/databricks-raises-series-i-investment-43b-valuation">$500 million Series I</a> in 2023 and <a target="_blank" href="https://techcrunch.com/2021/08/31/databricks-raises-1-6b-at-38b-valuation-as-it-blasts-past-600m-arr/">$1.6 billion Series H</a> in 2021. What is different about this time is this funding was for <a target="_blank" href="https://sherwood.news/business/databricks-employees-are-cashing-in-on-its-series-j/">buying stock from employees</a> who were getting impatient about Databricks' inevitable IPO. CMU-DB has several alumni at Databricks, including a <a target="_blank" href="https://www.linkedin.com/in/prasmenon/">former #1 ranked Ph.D. student</a>. I know some of them are anxiously awaiting the Databricks IPO before deciding what to do next.</p>
<p>The upcoming year is going to be the <a target="_blank" href="https://youtu.be/UgpzENzpXUs">test of strength</a> for many database startups. Nobody wants to be the next <a target="_blank" href="https://share.chartiq.com/M53BOUC094.png">MariaDB Corporation</a>, and thus several are waiting to ride Databricks' wake before going IPO themselves. Declining interest rates in the upcoming year <a target="_blank" href="https://www.forbes.com/sites/donbutler/2024/10/09/interest-rates-and-the-search-for-liquidity-in-venture-capital/">may open up additional funding</a> for several database companies that have raised large amounts more than two years ago (e.g., CockroachDB, Starburst, Imply, DataStax, SingleStore, Firebolt). The one standout from this crowd is dbtLabs, which I have heard is comfortably crushing it.</p>
<p>See also the Database of Databases list of <a target="_blank" href="https://dbdb.io/browse?start-year=2024">new DBMSs released in 2024</a>.</p>
</div>
<!-- END: ANDY'S TAKE -->

<!-- *************** #5: LE *************** -->
<h2 id="larry">Can’t Stop, Won’t Stop </h2>
<!-- I only know two people over the age of 80: Mike Stonebraker and my father. Stonebraker is an intellectual powerhouse and is still crushing it. My father regrettably told me at Christmas last year that <a target="_blank" href="https://en.wikipedia.org/wiki/Anthony_Fauci">Anthony Fauci</a> should be in jail. -->

<p>Do you know who had their 80th birthday this year? The legendary Larry Ellison! Once again, we see that he is a man who refuses to settle down or <a target="_blank" href="https://youtu.be/hMX7bPGRw_E">be put into a box</a>. First, Larry propelled himself up Forbes' Billionaires List to become the <a target="_blank" href="https://www.forbes.com/sites/dereksaul/2024/09/10/larry-ellison-becomes-richer-than-zuckerberg-arnault-as-oracle-stock-rallies-to-record-high/">third richest person in the world</a>. In March 2024, the Oracle stock rose so much that he made <a target="_blank" href="https://www.cnbc.com/2024/03/12/larry-ellison-makes-15-billion-from-oracle-best-day-since-2021.html">$15 billion in a single day</a>. Flush with cash, Larry went shopping in July 2024 and signed a deal to purchase <a target="_blank" href="https://www.hollywoodreporter.com/business/business-news/paramount-larry-ellison-david-ellison-1236006769/">Paramount Studios at $6 billion</a> for his only son (third wife). He then decided to relax by buying a <a target="_blank" href="https://www.palmbeachdailynews.com/story/business/real-estate/2024/08/08/billionaire-ellison-buys-eau-palm-beach-resort-spa-near-palm-beach/74723944007/">Palm Beach resort for only $277 million</a>. These moves happened in just one year, and databases paid for all of it. But these are mere trifles compared to Larry's most significant accomplishment in 2024.</p>
<p>Everyone I know was surprised when our Larry Ellison news alerts woke us up in the middle of the night in November 2024. The headlines were touting how Larry helped the University of Michigan football program <a target="_blank" href="http://archive.today/2024.11.24-013436/https://frontofficesports.com/larry-ellison-michigan-nil-bryce-underwood/">recruit the premiere college quarterback</a>. The university had previously announced that this player was transferring from Louisiana State to Michigan. Their press release included a curious acknowledgement to "Larry and his wife Jolin" for helping with the recruiting effort. Reporters soon <a target="_blank" href="https://www.marketwatch.com/story/billionaire-larry-ellison-helped-give-a-high-school-student-10-million-to-play-football-for-michigan-and-gave-us-a-glimpse-behind-the-nil-curtain-6bf5d87f">confirmed</a> that this "Larry" was the one and only Larry Ellison! Larry contributed $12 million to the booster campaign to bankroll the best quarterback's move to Michigan.</p>
<p>The bigger mystery in this story was the identity of this "Jolin" person. Investigators found older photos of Larry watching a tennis match with a <a target="_blank" href="https://mgoblog.com/mgoboard/tennis-fans-who%27s-woman-michigan-hat-next-larry-ellison">woman wearing a Michigan hat</a>. Then, two weeks later, a major news organization broke the story at 5:30 am (my alerts woke me up again) that the <a target="_blank" href="http://archive.today/2024.12.07-023939/https://www.wsj.com/sports/football/michigan-recruiting-larry-ellison-bryce-underwood-842d2c9a">woman's identity was Jolin (Keren) Zhu</a> and they confirmed that she was Larry's new wife.</p>
<!-- BEGIN: ANDY'S TAKE -->
<div>
<h3><img decoding="async" loading="lazy" src="https://www.cs.cmu.edu/~pavlo/images/blog/017/pavlo-head-sideview-lomo.png" alt="Andy's Head" width="32" height="41">Andy’s Take:</h3>
<p>I am beaming with pride over what Larry accomplished in the past year. He famously did not graduate from any university and had no prior connection to the University of Michigan. And yet, because the love of his life went to Michigan about a decade ago, Larry made magic happen by writing a check for a measly $12 million (about 0.0055% of his net worth). I told Larry this especially means a lot to me because my <a target="_blank" href="https://web.eecs.umich.edu/~linmacse/">former #1 ranked Ph.D. student</a> is now a professor in Michigan's Computer Science department with their famous <a target="_blank" href="https://dbgroup.eecs.umich.edu/">Database Group</a>.</p>
<p>What is even more fantastic about this story is that Larry is again in love! Too many people struggle in today's world to find that special somebody. Dating apps are a mess, speed dating events are awkward, and it is now considered uncouth to hang around a playground to meet single parents when you do not have kids of your own. Then, just when you think you finally found the right person, it all falls apart when you learn they do not wash their socks regularly or like to put hot sauce on cold cereal. That is why everyone was telling me that Larry would never get married again after his <a target="_blank" href="https://web.archive.org/web/20101102010955/http://tech.fortune.cnn.com/tag/melanie-craft/">2010 divorce</a> from romance novelist Melanie Craft (fourth wife). Those people were telling me the same thing after his <a target="_blank" href="https://marketrealist.com/p/larry-ellison-girlfriend/">2020 divorce</a> from Nikita Kahn (fifth wife). But I knew better, and Larry proved me right with his surreptitious marriage to Keren Zhu (sixth wife)!</p>
</div>
<!-- END: ANDY'S TAKE -->

<!-- *************** CONCLUSION *************** -->
<h2>Conclusion</h2>

<p>I was planning on starting this article boasting how this is the first time in three years where I was celebrating NYE not sick. But then my biological daughter gave me COVID so I'm laid up with that. I got boosted back in September and they gave me Paxlovid, so I'll survive this.</p>
<p>I am disappointed that OtterTune is dead. But I learned a lot and got to work with many brilliant people. I am a big fan of <a target="_blank" href="https://www.intelcapital.com/">Intel Capital</a> and <a target="_blank" href="https://race.capital/">Race Capital</a> for sticking with us to the end. I hope to announce our next start-up soon (hint: it’s about databases).</p>
<p>In the meantime, I am happy to be back full-time at Carnegie Mellon University. <a target="_blank" href="https://jigneshpatel.org/">Jignesh Patel</a> and I have some baller research projects that we hope to turn out this upcoming year. I am also looking forward to teaching a new course on <a target="_blank" href="https://15799.courses.cs.cmu.edu/spring2025/">query optimization</a> this semester. I need to figure out to juice my stats because in September 2024, Wikipedia <a target="_blank" href="https://en.wikipedia.org/wiki/Wikipedia:Articles_for_deletion/Andy_Pavlo">removed the article about me</a> over not having enough citations.</p>
<p>We are staying true to <a target="_blank" href="https://youtu.be/APqWIjtzNGE?t=4941">DJ Mooshoo</a> while he is locked up in Cook County. We hope to free him in 2025.</p>
<p>Lastly, I want to give a shout-out to ByteBase for their article <a target="_blank" href="https://www.bytebase.com/blog/database-tool-review-2024/">Database Tools in 2024: A Year in Review</a>. In previous years, they emailed me asking for permission to translate my <a target="_blank" href="https://www.bytebase.com/blog/database-review-2021-andy-pavlo-chinese/">end-of-year database articles into Chinese</a> for their blog. This year, they could not wait for me to finish writing this one, so they jocked my flow and wrote their own off-brand article with the same title and premise.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ruby 3.4 Highlights (181 pts)]]></title>
            <link>https://blog.sinjakli.co.uk/2025/01/01/ruby-3-4-highlights/</link>
            <guid>42566141</guid>
            <pubDate>Wed, 01 Jan 2025 14:18:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.sinjakli.co.uk/2025/01/01/ruby-3-4-highlights/">https://blog.sinjakli.co.uk/2025/01/01/ruby-3-4-highlights/</a>, See on <a href="https://news.ycombinator.com/item?id=42566141">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

  

  <article>
    <p>Alright, you know the drill. The Ruby team do the hard work of putting together a new version packed with features and I pick my favourites and write about them.</p>

<p>If you’d like to read the full set of changes, they’re <a href="https://www.ruby-lang.org/en/news/2024/12/25/ruby-3-4-0-released/">over on the Ruby project website</a>. There’s plenty more good stuff in there—these were just the changes that stood out to me.</p>

<h3 id="default-block-parameter-name">Default block parameter name</h3>

<p>In many situations where we pass a block in Ruby, that block receives a single argument (<code>each</code>, <code>map</code>, <code>filter</code>, etc). A lot of the time, we end up giving that argument a fairly generic name like <code>item</code> because we know that we’re working through items in a list.</p>

<div><pre><code><span>[</span>
  <span>"beige chinos"</span><span>,</span>
  <span>"blue jorts"</span><span>,</span>
  <span>"rainbow jorts"</span><span>,</span>
<span>].</span><span>filter</span> <span>{</span> <span>|</span><span>item</span><span>|</span> <span>item</span> <span>=~</span> <span>/jorts/</span> <span>}</span>
<span># =&gt; ["blue jorts", "rainbow jorts"]</span>
</code></pre></div>

<p>In Ruby&nbsp;3.4, <code>it</code> has been <a href="https://bugs.ruby-lang.org/issues/18980">added as a default name</a> for the first parameter passed to a block. Rather than specifying a name in trivial cases like the one above, you can now write:</p>

<div><pre><code><span>[</span>
  <span>"beige chinos"</span><span>,</span>
  <span>"blue jorts"</span><span>,</span>
  <span>"rainbow jorts"</span><span>,</span>
<span>].</span><span>filter</span> <span>{</span> <span>it</span> <span>=~</span> <span>/jorts/</span> <span>}</span>
<span># =&gt; ["blue jorts", "rainbow jorts"]</span>
</code></pre></div>

<h3 id="better-connection-handling-happy-eyeballs-version-2">Better connection handling: “Happy Eyeballs Version 2”</h3>

<p>I’ll be honest: the reason this made my list this year is that seeing it in the changelog pointed me to an interesting RFC that I hadn’t heard of before! I spent a couple of hours down a rabbit hole reading RFCs and a few snippets of source code and I thought it was worth talking about.</p>

<p>Ruby&nbsp;3.4 adds an implementation of <a href="https://datatracker.ietf.org/doc/html/rfc8305">RFC8305</a> (<em>Happy Eyeballs Version 2: Better Connectivity Using Concurrency</em>) to its TCP socket implementation.</p>

<p>In a nutshell, the RFC is an attempt at describing a way for clients to handle multiple IP addresses being returned by DNS queries, particularly in the context of a dual-stack (IPv4 and IPV6) network. It describes how to make the DNS requests<sup id="fnref:a-vs-aaaa" role="doc-noteref"><a href="#fn:a-vs-aaaa" rel="footnote">1</a></sup>, how to order the addresses returned by them, and how to kick off concurrent connection attempts to those addresses in a way that balances giving the user a response quickly with not creating pointless load on servers<sup id="fnref:avoiding-overload" role="doc-noteref"><a href="#fn:avoiding-overload" rel="footnote">2</a></sup>.</p>

<p>RFC8305 builds on the earlier <a href="https://datatracker.ietf.org/doc/html/rfc6555">RFC6555</a>. RFC6555 talked in relatively high-level terms about what’s needed in an algorithm that uses a hostname to establish a connection in a dual-stack environment and made reference to an approach shared by Mozilla Firefox and Google Chrome at the time. RFC8305 goes beyond that and provides much more concrete descriptions of what should be done at each stage.</p>

<p>One thing I really like about their approach is that they provide <a href="https://datatracker.ietf.org/doc/html/rfc8305#section-8">sensible default values</a> for each of the tunable parameters of their algorithm, which were reached through empirical measurement of connection timings across a wide range of devices. A company with the reach of Apple, where this RFC originated, is well-placed to take measurements at the scale needed to find widely applicable defaults. It’s great to see the effort put into making the output of their work useful beyond the walls of their company.</p>

<p>I’m less bullish about the IPv6 transition than some of my friends. If that transition is going to be successful, it involves an unavoidable period of running dual-stack networks<sup id="fnref:maybe-avoidable" role="doc-noteref"><a href="#fn:maybe-avoidable" rel="footnote">3</a></sup>. When doing so caused trouble on my home network, I switched IPv6 off rather than trying to debug it<sup id="fnref:on-my-todo-list" role="doc-noteref"><a href="#fn:on-my-todo-list" rel="footnote">4</a></sup>. If we want people to embrace dual-stack networks—and ultimately IPv6—we need socket libraries that do the right thing by default.</p>

<h3 id="clearer-exception-backtraces">Clearer exception backtraces</h3>

<p>Okay, we’re done with the rabbit hole and we’ve got a simple one to round things off.</p>

<p>In Ruby&nbsp;3.4, exception backtraces <a href="https://bugs.ruby-lang.org/issues/19117">include the method owner</a> (class or module) as well as the name of the method that an exception was raised from.</p>

<p>Let’s look at some code that raises an exception:</p>

<div><pre><code><span>module</span> <span>Foo</span>
  <span>class</span> <span>Bar</span>
    <span>def</span> <span>inspect</span>
      <span>1</span> <span>+</span> <span>'1'</span>
    <span>end</span>
  <span>end</span>
<span>end</span>

<span>p</span> <span>Foo</span><span>::</span><span>Bar</span><span>.</span><span>new</span>
</code></pre></div>

<p>In Ruby&nbsp;3.3 and earlier, this would print a backtrace like:</p>

<div><pre><code>/tmp/foo.rb:4:in `+': String can't be coerced into Integer (TypeError)
	from /tmp/foo.rb:4:in `inspect'
	from /tmp/foo.rb:9:in `p'
	from /tmp/foo.rb:9:in `&lt;main&gt;'
</code></pre></div>

<p>Ruby&nbsp;3.4 prints out the name of the module/class that contains each of the methods in the stack track, like:</p>

<div><pre><code>/tmp/foo.rb:4:in `Integer#+': String can't be coerced into Integer (TypeError)
	from /tmp/foo.rb:4:in `Foo::Bar#inspect'
	from /tmp/foo.rb:9:in `Kernel#p'
	from /tmp/foo.rb:9:in `&lt;main&gt;'
</code></pre></div>

<p>It’s a small change, but I’m a big believer in anything that makes it quicker to understand what a piece of code is doing. I’m glad to see that the Ruby team still values developer experience so highly. It’s one of the best parts of writing the language.</p>

<p>That’s all from me. If you enjoyed this post, do get in touch with your own favourite feature from Ruby&nbsp;3.4 and the best cheese you’ve eaten this Christmas<sup id="fnref:cheese" role="doc-noteref"><a href="#fn:cheese" rel="footnote">5</a></sup>.</p>

<p>You can find me on <a href="https://tech.lgbt/@Sinjo">Mastodon</a> or <a href="https://bsky.app/profile/sinjo.dev">Bluesky</a>. ✌🏻💖🎄</p>



  </article>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[DOOM CAPTCHA (875 pts)]]></title>
            <link>https://doom-captcha.vercel.app/</link>
            <guid>42566112</guid>
            <pubDate>Wed, 01 Jan 2025 14:12:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://doom-captcha.vercel.app/">https://doom-captcha.vercel.app/</a>, See on <a href="https://news.ycombinator.com/item?id=42566112">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="modal">
    <h2>How it works</h2>
    <p>
      A CAPTCHA that lets you play DOOM® to prove you're human (for
      educational and entertainment purposes)
    </p>
    <p>
      The project works by leveraging <code>Emscripten</code> to compile a
      minimal port of Doom to <code>WebAssembly</code> and enable
      intercommunication between the <code>C</code>-based game runloop (<a href="https://github.com/rauchg/doom-captcha/tree/main/sdldoom-1.10/g_game.c"><code>g_game.c</code></a>) and the
      <code>JavaScript</code>-based CAPTCHA UI.
    </p>

    <p>
      Some extensions were made to the game to introduce relevant events
      needed for its usage in the context of a CAPTCHA.
    </p>

    <ul>
      <li>
        Started out with a minimal, <code>SDL</code>-based port of Doom that
        can be efficiently compiled to <code>WebAssembly</code>
      </li>
      <li>
        Tweaked the build to make it compatible with the shareware version of
        <code>wad</code> (<code>doom1.wad</code>) for legal use
      </li>
      <li>
        Introduced new unofficial process flags:
        <ul>
          <li>
            <code>-nomenu</code> (<a href="https://github.com/rauchg/doom-captcha/tree/main/sdldoom-1.10/m_menu.c"><code>m_menu.c</code></a>)
            to skip the main menu and jump straight into the game
          </li>
          <li>
            <code>-autoreborn</code> (<a href="https://github.com/rauchg/doom-captcha/tree/main/sdldoom-1.10/p_mobj.c"><code>p_mobj.c</code></a>)
            to automatically rebirth the player after a 2s delay
          </li>
        </ul>
      </li>
      <li>
        Introduced callbacks into <code>JS</code> land to be used by the
        CAPTCHA UI:
        <ul>
          <li><code>onPlayerBorn</code> when the player is born or reborn</li>
          <li><code>onPlayerKilled</code> when the player is killed</li>
          <li>
            <code>onEnemyKilled</code> when the main player kills an enemy
          </li>
        </ul>
      </li>
      <li>
        Tweaked the default process flags in
        <a href="https://github.com/rauchg/doom-captcha/tree/main/sdldoom-1.10/d_main.c"><code>d_main.c</code></a>
        to make the game more challenging:
        <ul>
          <li><code>-skill 5</code> sets the difficulty to "Nightmare!"</li>
          <li><code>-fast</code> makes it even harder</li>
          <li>
            <code>-warp e1m1</code> jumpstarts the game to where the action is
          </li>
          <li>
            <code>-nomenu</code> doesn't let the player trigger the main menu
          </li>
        </ul>
      </li>
    </ul>

    <p>
      <a href="https://v0.dev/chat/4X85A52Dzde?b=b_tOXbbZzZPgT">See the v0 UI generation</a>
      or
      <a target="_blank" href="https://github.com/rauchg/doom-captcha">get the source</a>.
    </p>

    <p>
      <em>Built on the shareware version of DOOM® released publically for
        non-commercial use. DOOM® is a registered trademark of id Software
        LLC, a ZeniMax Media company.</em>
    </p>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: API Parrot – Automatically Reverse Engineer HTTP APIs (345 pts)]]></title>
            <link>https://apiparrot.com/</link>
            <guid>42565821</guid>
            <pubDate>Wed, 01 Jan 2025 13:15:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://apiparrot.com/">https://apiparrot.com/</a>, See on <a href="https://news.ycombinator.com/item?id=42565821">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><h2><span><span>A</span><span>u</span><span>t</span><span>o</span><span>m</span><span>a</span><span>t</span><span>e</span></span> Any API</h2><p>API Parrot is the tool specifically designed to reverse engineer the HTTP APIs of any website. Making life easier for developers looking to automate, integrate or scrape websites without public APIs.</p></div><div id="features" aria-label="Features"><h2>Everything You Need, All in One Place</h2><p>From recording requests to exporting executable code, API Parrot has you covered, making the workflow fast and efficient.</p></div><div id="use-cases" aria-label="Use Cases"><h2>One tool, many uses</h2><p>API Parrot is designed to be a general tool to help you and your team with a variety of tasks. Here are a few examples of what you can do with it.</p></div><section id="download"><img alt="" loading="lazy" width="3000" height="1080" decoding="async" data-nimg="1" src="https://apiparrot.com/_next/static/media/blackbg.8f11808e.png"><div><h2>Explore API Parrot Yourself</h2><p>Dive into the Beta version for free today. Download now and see how easy and effective API replication can be!</p></div></section><div id="contact" aria-label="What our customers are saying"><h2>Get in Touch</h2><p>Feel free to drop us an email at any time. Whether you have questions about API Parrot, need assistance with the software, or just want to say hello, we’re always ready to assist you.</p><h2><a href="mailto:contact@apiparrot.com">contact@apiparrot.com</a></h2><p>If you have suggestions or want to report a bug, please submitt a issue on our <a href="https://github.com/apiparrot/apiparrot-desktop-releases/issues">GitHub</a> page.</p></div></div><div><div><div><p><img alt="Logo" loading="lazy" width="45" height="45" decoding="async" data-nimg="1" srcset="https://apiparrot.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo512.a21742d3.png&amp;w=48&amp;q=75 1x, https://apiparrot.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo512.a21742d3.png&amp;w=96&amp;q=75 2x" src="https://apiparrot.com/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Flogo512.a21742d3.png&amp;w=96&amp;q=75"></p><h2>api_parrot</h2></div><nav aria-label="quick links"></nav></div><div><p>Copyright © <!-- -->2025<!-- --> API Parrot All rights reserved.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[30% Drop In o1-Preview Accuracy When Putnam Problems Are Slightly Variated (506 pts)]]></title>
            <link>https://openreview.net/forum?id=YXnwlZe0yf&amp;noteId=yrsGpHd0Sf</link>
            <guid>42565606</guid>
            <pubDate>Wed, 01 Jan 2025 12:21:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openreview.net/forum?id=YXnwlZe0yf&#x26;noteId=yrsGpHd0Sf">https://openreview.net/forum?id=YXnwlZe0yf&#x26;noteId=yrsGpHd0Sf</a>, See on <a href="https://news.ycombinator.com/item?id=42565606">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><strong>Keywords<!-- -->:</strong> <span>Benchmarks, Large Language Models, Mathematical Reasoning, Mathematics, Reasoning, Machine Learning</span></p><p><strong>TL;DR<!-- -->:</strong> <span>Putnam-AXIOM is a challenging mathematical reasoning benchmark for LLMs, revealing significant reasoning performance gaps and the impact of data contamination.</span></p><p><strong>Abstract<!-- -->:</strong> <span>As large language models (LLMs) continue to advance, many existing benchmarks designed to evaluate their reasoning capabilities are becoming saturated. Therefore, we present the Putnam-AXIOM Original benchmark consisting of 236 mathematical problems from the William Lowell Putnam Mathematical Competition, along with detailed step-by-step solutions. To preserve the Putnam-AXIOM benchmark's validity and mitigate potential data contamination, we created the Putnam-AXIOM Variation benchmark with functional variations of 52 problems. By programmatically altering problem elements like variables and constants, we can generate unlimited novel, equally challenging problems not found online. We see that almost all models have significantly lower accuracy in the variations than the original problems. Our results reveal that OpenAI's o1-preview, the best performing model, achieves merely 41.95\% accuracy on the Putnam-AXIOM Original but experiences around a 30\% reduction in accuracy on the variations' dataset when compared to corresponding original problems.</span></p><p><strong>Concurrent Submissions<!-- -->:</strong> <span>ICLR 2025</span></p><p><strong>Submission Number<!-- -->:</strong> <span>86</span></p></div></div>]]></description>
        </item>
    </channel>
</rss>