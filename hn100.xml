<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Tue, 18 Feb 2025 23:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[South Korean regulator accuses DeepSeek of sharing user data with ByteDance (124 pts)]]></title>
            <link>https://www.bbc.com/news/articles/c4gex0x87g4o</link>
            <guid>43094651</guid>
            <pubDate>Tue, 18 Feb 2025 20:29:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bbc.com/news/articles/c4gex0x87g4o">https://www.bbc.com/news/articles/c4gex0x87g4o</a>, See on <a href="https://news.ycombinator.com/item?id=43094651">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-component="text-block"><p>South Korea has accused Chinese AI startup DeepSeek of sharing user data with the owner of TikTok in China.<!-- --></p><p>"We confirmed DeepSeek communicating with ByteDance," the South Korean data protection regulator told <!-- --><a target="_blank" href="https://en.yna.co.kr/view/AEN20250218005300315">Yonhap News Agency.<!-- --></a></p><p>The country had already <!-- --><a target="_self" href="https://www.bbc.co.uk/news/articles/clyzym0vn8go">removed DeepSeek from app stores<!-- --></a> over the weekend over data protection concerns.<!-- --></p><p>The Chinese app <!-- --><a target="_self" href="https://www.bbc.co.uk/news/articles/c5yv5976z9po">caused shockwaves<!-- --></a> in the AI world in January, wiping billions off global stock markets over claims its new model was trained at a much lower cost than US rivals such as ChatGPT.<!-- --></p></div><div data-component="text-block"><p>Since then, multiple countries have warned that user data may not be properly protected, and in February a US cybersecurity company <!-- --><a target="_blank" href="https://securityscorecard.com/blog/a-deep-peek-at-deepseek/#bytedance-code-implications:~:text=ByteDance%20Code%20Implications">alleged potential data sharing<!-- --></a> between DeepSeek and ByteDance.<!-- --></p><p>DeepSeek's apparent overnight impact saw it shoot to the top of App Store charts in the UK, US and many other countries around the world - although it now sits far below ChatGPT in UK rankings.<!-- --></p><p>In South Korea, it had been downloaded over a million times before being pulled from Apple and Google's App Stores on Saturday evening. <!-- --></p><p>Existing users can still access the app and use it on a web browser.<!-- --></p><p>The data regulator, the Personal Information Protection Commission (PIPC), told South Korea's Yonhap News Agency that despite finding a link between DeepSeek and ByteDance, it was "yet to confirm what data was transferred and to what extent".<!-- --></p><p>Critics of the Chinese state have long argued its National Intelligence Law <!-- --><a target="_self" href="https://www.bbc.co.uk/news/technology-65019279">allows the government<!-- --></a> to access any data it wants from Chinese companies.<!-- --></p><p>However, ByteDance, headquartered in Beijing, is owned by a number of global investors - <!-- --><a target="_self" href="https://www.bbc.co.uk/news/technology-64797355#:~:text=Article%20seven%20of%20China's%20National,TikTok%2C%20but%20all%20Chinese%20companies.&amp;text=Why%20does%20the%20US%20want%20to%20ban%20TikTok%3F">and others say<!-- --></a> the same law allows for the protection of private companies and personal data.<!-- --></p><p>Fears over user data being sent to China was one of the reasons the US Supreme Court upheld a ban on TikTok, which is owned by ByteDance. <!-- --></p><p>The US ban is <!-- --><a target="_self" href="https://www.bbc.co.uk/news/articles/c4g91kyjw07o">on hold until 5 April<!-- --></a> as President Donald Trump attempts to broker a resolution.<!-- --></p></div><div data-component="text-block"><p>Cybersecurity company Security Scorecard <!-- --><a target="_blank" href="https://securityscorecard.com/blog/a-deep-peek-at-deepseek/">published a blog<!-- --></a> on DeepSeek on 10 February which suggested "multiple direct references to ByteDance-owned" services.<!-- --></p><p>"These references suggest deep integration with ByteDance's analytics and performance monitoring infrastructure," it said in its review of DeepSeek's Android app.<!-- --></p><p>Security Scorecard expressed concern that along with privacy risks, DeepSeek "user behaviour and device metadata [are] likely sent to ByteDance servers".<!-- --></p><p>It also found data "being transmitted to domains linked to Chinese state-owned entities".<!-- --></p><p>On Monday, <!-- --><a target="_blank" href="https://www.pipc.go.kr/eng/user/ltn/new/noticeDetail.do">South Korea's PIPC said<!-- --></a> it "found out traffic generated by third-party data transfers and insufficient transparency in DeepSeek's privacy policy".<!-- --></p><p>It said DeepSeek was cooperating with the regulator, and acknowledged it had failed to to take into account South Korean privacy laws.<!-- --></p><p>But the regulator advised users "exercise caution and avoid entering personal information into the chatbot".<!-- --></p><p>South Korea has already followed a number of countries such as Australia and Taiwan in banning DeepSeek from government devices. <!-- --></p><p>The BBC has contacted the PIPC, ByteDance and DeepSeek's parent company, High Flyer, for a response.<!-- --></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AWS paywalling select knowledge base articles, requiring Premium Support plan (164 pts)]]></title>
            <link>https://repost.aws/knowledge-center/eks-api-server-unauthorized-error</link>
            <guid>43094467</guid>
            <pubDate>Tue, 18 Feb 2025 20:15:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://repost.aws/knowledge-center/eks-api-server-unauthorized-error">https://repost.aws/knowledge-center/eks-api-server-unauthorized-error</a>, See on <a href="https://news.ycombinator.com/item?id=43094467">Hacker News</a></p>
Couldn't get https://repost.aws/knowledge-center/eks-api-server-unauthorized-error: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Valve releases Team Fortress 2 game code (701 pts)]]></title>
            <link>https://github.com/ValveSoftware/source-sdk-2013/commit/0759e2e8e179d5352d81d0d4aaded72c1704b7a9</link>
            <guid>43094260</guid>
            <pubDate>Tue, 18 Feb 2025 19:57:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ValveSoftware/source-sdk-2013/commit/0759e2e8e179d5352d81d0d4aaded72c1704b7a9">https://github.com/ValveSoftware/source-sdk-2013/commit/0759e2e8e179d5352d81d0d4aaded72c1704b7a9</a>, See on <a href="https://news.ycombinator.com/item?id=43094260">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemscope="" itemtype="http://schema.org/SoftwareSourceCode" data-commit-hovercards-enabled="" data-discussion-hovercards-enabled="" data-issue-and-pr-hovercards-enabled="" data-project-hovercards-enabled="">
    <main id="js-repo-pjax-container">
      
  

    
    

    






  
  

  



<turbo-frame id="repo-content-turbo-frame" target="_top" data-turbo-action="advance">
    <div id="repo-content-pjax-container">
  <p>
  <h2>Commit</h2>
</p>

<p><a href="https://github.com/ValveSoftware/source-sdk-2013/commit/0759e2e8e179d5352d81d0d4aaded72c1704b7a9" data-hotkey="y">Permalink</a></p>


<div>
  <div>
    

    <p><a id="browse-at-time-link" href="https://github.com/ValveSoftware/source-sdk-2013/tree/0759e2e8e179d5352d81d0d4aaded72c1704b7a9" rel="nofollow">Browse files</a></p><tool-tip id="tooltip-068139a0-98a5-40d9-a6e4-e3e722c5cd8a" for="browse-at-time-link" popover="manual" data-direction="ne" data-type="description" data-view-component="true">Browse the repository at this point in the history</tool-tip>
  </div>


  <div>
  <include-fragment src="/ValveSoftware/source-sdk-2013/branch_commits/0759e2e8e179d5352d81d0d4aaded72c1704b7a9" id="async-branches-list">
    <div>
      
      <ul>
        <li>Loading branch information<span></span></li>
      </ul>
    </div>
</include-fragment></div>


  
</div>


  


  <diff-layout>
    
        </diff-layout>


</div>

</turbo-frame>


    </main>
  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My LLM codegen workflow (223 pts)]]></title>
            <link>https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/</link>
            <guid>43094006</guid>
            <pubDate>Tue, 18 Feb 2025 19:33:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/">https://harper.blog/2025/02/16/my-llm-codegen-workflow-atm/</a>, See on <a href="https://news.ycombinator.com/item?id=43094006">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><em>tl:dr; Brainstorm spec, then plan a plan, then execute using LLM codegen. Discrete loops. Then magic. ✩₊˚.⋆☾⋆⁺₊✧</em></p><p>I have been building so many small products using LLMs. It has been fun, and useful. However, there are pitfalls that can waste so much time. A while back a friend asked me how I was using LLMs to write software. I thought “oh boy. how much time do you have!” and thus this post.</p><p>(p.s. if you are an AI hater - scroll to the end)</p><p>I talk to many dev friends about this, and we all have a similar approach with various tweaks in either direction.</p><p>Here is my workflow. It is built upon my own work, conversations with friends (thx <a href="https://www.nikete.com/">Nikete</a>, <a href="https://nocruft.com/">Kanno</a>, <a href="https://fsck.com/">Obra</a>, <a href="https://github.com/KristopherKubicki">Kris</a>, and <a href="https://thinks.lol/">Erik</a>), and following many best practices shared on the various terrible internet <a href="https://news.ycombinator.com/">bad</a> <a href="https://twitter.com/">places</a>.</p><p>This is working well <strong>NOW</strong>, it will probably not work in 2 weeks, or it will work twice as well. ¯\_(ツ)_/¯</p><h2 id="lets-go">Let’s go</h2><figure role="group" aria-describedby="caption-I always find these AI-generated images to be suspect. Say hi to my juggalo coding robot angel!"><img title="" loading="lazy" decoding="async" src="https://harper.blog/images/posts/llm-coding-robot.webp" alt="Juggalo Robot" width="" height=""><figcaption id="caption-I always find these AI-generated images to be suspect. Say hi to my juggalo coding robot angel!">I always find these AI-generated images to be suspect. Say hi to my juggalo coding robot angel!</figcaption></figure><p>There are many paths for doing dev, but my case is typically one of two:</p><ul><li>Greenfield code</li><li>Legacy modern code</li></ul><p>I will show you my process for both paths</p><h2 id="greenfield">Greenfield</h2><p>I find the following process works well for greenfield development. It provides a robust planning and documentation approach, and allows you to execute easily in small steps.</p><figure role="group" aria-describedby="caption-Technically, there is a green field on the right. Leica Q, 5/14/2016"><img title="" loading="lazy" decoding="async" src="https://harper.blog/images/posts/greenfield.jpg" alt="Green field" width="" height=""><figcaption id="caption-Technically, there is a green field on the right. Leica Q, 5/14/2016">Technically, there is a green field on the right. Leica Q, 5/14/2016</figcaption></figure><h3 id="step-1-idea-honing">Step 1: Idea honing</h3><p>Use a conversational LLM to hone in on an idea (I use ChatGPT 4o / o3 for this):</p><pre tabindex="0"><code data-lang="prompt">Ask me one question at a time so we can develop a thorough, step-by-step spec for this idea. Each question should build on my previous answers, and our end goal is to have a detailed specification I can hand off to a developer. Let’s do this iteratively and dig into every relevant detail. Remember, only one question at a time.

Here’s the idea:

&lt;IDEA&gt;</code></pre><p>At the end of the brainstorm (it will come to a natural conclusion):</p><pre tabindex="0"><code data-lang="prompt">Now that we’ve wrapped up the brainstorming process, can you compile our findings into a comprehensive, developer-ready specification? Include all relevant requirements, architecture choices, data handling details, error handling strategies, and a testing plan so a developer can immediately begin implementation.</code></pre><p>This will output a pretty solid and straightforward spec that can be handed off to the planning step. I like to save it as <code>spec.md</code> in the repo.</p><blockquote><p>You can use this spec for a number of things. We are doing codegen here, but I have used it to bolster ideas by asking a reasoning model to poke holes in the idea (must go deeper!), to generate a white paper, or to generate a business model. You can pop it into deep research and get a 10k word supporting document in return.</p></blockquote><h3 id="step-2-planning">Step 2: Planning</h3><p>Take the spec and pass it to a proper reasoning model (<code>o1*</code>, <code>o3*</code>, <code>r1</code>):</p><p>(This is the TDD prompt)</p><pre tabindex="0"><code data-lang="prompt">Draft a detailed, step-by-step blueprint for building this project. Then, once you have a solid plan, break it down into small, iterative chunks that build on each other. Look at these chunks and then go another round to break it into small steps. Review the results and make sure that the steps are small enough to be implemented safely with strong testing, but big enough to move the project forward. Iterate until you feel that the steps are right sized for this project.

From here you should have the foundation to provide a series of prompts for a code-generation LLM that will implement each step in a test-driven manner. Prioritize best practices, incremental progress, and early testing, ensuring no big jumps in complexity at any stage. Make sure that each prompt builds on the previous prompts, and ends with wiring things together. There should be no hanging or orphaned code that isn't integrated into a previous step.

Make sure and separate each prompt section. Use markdown. Each prompt should be tagged as text using code tags. The goal is to output prompts, but context, etc is important as well.

&lt;SPEC&gt;</code></pre><p>(This is the non-tdd prompt)</p><pre tabindex="0"><code data-lang="prompt">Draft a detailed, step-by-step blueprint for building this project. Then, once you have a solid plan, break it down into small, iterative chunks that build on each other. Look at these chunks and then go another round to break it into small steps. review the results and make sure that the steps are small enough to be implemented safely, but big enough to move the project forward. Iterate until you feel that the steps are right sized for this project.

From here you should have the foundation to provide a series of prompts for a code-generation LLM that will implement each step. Prioritize best practices, and incremental progress, ensuring no big jumps in complexity at any stage. Make sure that each prompt builds on the previous prompts, and ends with wiring things together. There should be no hanging or orphaned code that isn't integrated into a previous step.

Make sure and separate each prompt section. Use markdown. Each prompt should be tagged as text using code tags. The goal is to output prompts, but context, etc is important as well.

&lt;SPEC&gt;</code></pre><p>It should output a prompt plan that you can execute with aider, cursor, etc. I like to save this as <code>prompt_plan.md</code> in the repo.</p><p>I then have it output a <code>todo.md</code> that can be checked off.</p><pre tabindex="0"><code data-lang="prompt">Can you make a `todo.md` that I can use as a checklist? Be thorough.</code></pre><p>You can save it as <code>todo.md</code> in the repo.</p><p>Your codegen tool should be able to check off the <code>todo.md</code> while processing. This is good for keeping state across sessions.</p><h4 id="yay-plan">Yay. Plan!</h4><p>Now you have a robust plan and documentation that will help you execute and build your project.</p><p>This entire process will take maybe <strong>15 minutes</strong>. It is pretty quick. Wild tbh.</p><h3 id="step-3-execution">Step 3: Execution</h3><p>There are so many options available for execution. The success really depends on how well step 2 went.</p><p>I have used this workflow with <a href="https://githubnext.com/projects/copilot-workspace">github workspace</a>, <a href="https://aider.chat/">aider</a>, <a href="https://www.cursor.com/">cursor</a>, <a href="https://github.com/Doriandarko/claude-engineer">claude engineer</a>, <a href="https://sweep.dev/">sweep.dev</a>, <a href="https://chatgpt.com/">chatgpt</a>, <a href="https://claude.ai/">claude.ai</a>, etc. It works pretty well with all the tools I have tried, and I imagine it will work well with any codegen tool.</p><p>I, however, prefer <strong>raw</strong> claude and aider:</p><h3 id="claude">Claude</h3><p>I essentially pair program with <a href="https://claude.ai/">claude.ai</a> and just drop each prompt in iteratively. I find that works pretty well. The back and forth can be annoying, but it largely works.</p><p>I am in charge of the initial boilerplate code, and making sure tooling is set up correctly. This allows for some freedom, choice, and guidance in the beginning. Claude has a tendency to just output react code - and having a solid foundation with the language, style, and tooling of your choice will help quite a bit.</p><p>I will then use a tool like <a href="https://github.com/yamadashy/repomix">repomix</a> to iterate when things get stuck (more about that later).</p><p>The workflow is like this:</p><ul><li>set up the repo (boilerplate, uv init, cargo init, etc)</li><li>paste in prompt into claude</li><li>copy and paste code from claude.ai into IDE</li><li>run code, run tests, etc</li><li>…</li><li>if it works, move on to next prompt</li><li>if it doesn’t work, use repomix to pass the codebase to claude to debug</li><li>rinse repeat ✩₊˚.⋆☾⋆⁺₊✧</li></ul><h3 id="aider">Aider</h3><p><a href="https://aider.chat/">Aider</a> is fun and weird to use. I find that it slots in well to the output of step 2. I can get really far with very little work.</p><p>The workflow is essentially the same as above but instead of pasting into claude, I am pasting the prompts into aider.</p><p>Aider will then “just do it” and I get to play <a href="https://orteil.dashnet.org/cookieclicker/">cookie clicker</a>.</p><blockquote><p>An aside: Aider does really great benchmarking of new models for codegen in their <a href="https://aider.chat/docs/leaderboards/">LLM leaderboards</a>. I find it to be a really great resource for seeing how effective new models are.</p></blockquote><p>Testing is nice with aider, because it can be even more hands off as aider will run the test suite and debug things for you.</p><p>The workflow is like this:</p><ul><li>set up the repo (boilerplate, uv init, cargo init, etc)</li><li>start aider</li><li>paste prompt into aider</li><li>watch aider dance ♪┏(・o･)┛♪</li><li>aider will run tests, or you can run app to verify</li><li>if it works, move on to next prompt</li><li>if it doesn’t work, Q&amp;A with aider to fix</li><li>rinse repeat ✩₊˚.⋆☾⋆⁺₊✧</li></ul><h3 id="results">Results</h3><p>I have built so so many things using this workflow: scripts, expo apps, rust cli tools, etc. It has worked across programming languages, and contexts. I do like it.</p><p>If you have a small or large project that you are procrastinating on, I would recommend giving it a shot. You will be surprised how far you can get in a short amount of time.</p><p>My hack to-do list is empty because I built everything. I keep thinking of new things and knocking them out while watching a movie or something. For the first time in years, I am spending time with new programming languages and tools. This is pushing me to expand my programming perspective.</p><h2 id="non-greenfield-iteration-incrementally">Non-greenfield: Iteration, incrementally</h2><p>Sometimes you don’t have greenfield, and instead need to iterate or do increment work on an established code base.</p><figure role="group" aria-describedby="caption-This is not a green field. A random photo from my grandfather’s camera - somewhere in Uganda in the 60s"><img title="" loading="lazy" decoding="async" src="https://harper.blog/images/posts/brownfield.jpg" alt="a brown field" width="" height=""><figcaption id="caption-This is not a green field. A random photo from my grandfather’s camera - somewhere in Uganda in the 60s">This is not a green field. A random photo from my grandfather’s camera - somewhere in Uganda in the 60s</figcaption></figure><p>For this I have a slightly different method. It is similar to above, but a bit less “planning based.” The planning is done per task, not for the entire project.</p><h3 id="get-context">Get context</h3><p>I think everyone who is knee-deep in AI dev has a different tool for this, but you need something to grab your source code and efficiently jam it into the LLM.</p><p>I currently use a tool called <a href="https://github.com/yamadashy/repomix">repomix</a>. I have a task collection defined in my global <code>~/.config/mise/config.toml</code> that allows me to do various things with my code base (<a href="https://mise.jdx.dev/">mise rules</a>).</p><p>Here is the LLM task list:</p><div><pre tabindex="0"><code data-lang="shell"><span><span>LLM:clean_bundles           Generate LLM bundle output file using repomix
</span></span><span><span>LLM:copy_buffer_bundle      Copy generated LLM bundle from output.txt to system clipboard <span>for</span> external use
</span></span><span><span>LLM:generate_code_review    Generate code review output from repository content stored in output.txt using LLM generation
</span></span><span><span>LLM:generate_github_issues  Generate GitHub issues from repository content stored in output.txt using LLM generation
</span></span><span><span>LLM:generate_issue_prompts  Generate issue prompts from repository content stored in output.txt using LLM generation
</span></span><span><span>LLM:generate_missing_tests  Generate missing tests <span>for</span> code in repository content stored in output.txt using LLM generation
</span></span><span><span>LLM:generate_readme         Generate README.md from repository content stored in output.txt using LLM generation</span></span></code></pre></div><p>I generate an <code>output.txt</code> that has the context from my code base. If I am blowing through tokens, and it is too big - I will edit the generate command to ignore parts of the code base that are not germane to this task.</p><blockquote><p>One thing really nice about <code>mise</code> is that the tasks can be redefined and overloaded in the working directory’s <code>.mise.toml</code>. I can use a different tool to dump/pack the code, and as long as it generates an <code>output.txt</code> I can use my LLM tasks. This is helpful when various codebases differ so much. I regularly override the <code>repomix</code> step to include broader ignore patterns, or just use a more effective tool to do the packing.</p></blockquote><p>Once the output.txt is generated, I pass it to the <a href="https://github.com/simonw/LLM">LLM</a> command to do various transformations and then save those as a markdown file.</p><p>Ultimately, the mise task is running this: <code>cat output.txt | LLM -t readme-gen &gt; README.md</code> or <code>cat output.txt | LLM -m claude-3.5-sonnet -t code-review-gen &gt; code-review.md</code>. This isn’t super complicated. the <code>LLM</code> command is doing the heavy lifting (supporting different models, saving keys, and using prompt templates).</p><p>For example, if I need a quick review and fix of test coverage I would do the following:</p><h4 id="claude-1">Claude</h4><ul><li>go to the directory where the code lives</li><li>run <code>mise run LLM:generate_missing_tests</code></li><li>look at the generated markdown file (<code>issue-prompts.md</code>)</li><li>grab the full context for the code: <code>mise run LLM:copy_buffer_bundle</code></li><li>paste that into claude along with the first missing test “issue”</li><li>copy the generated code from claude into my ide.</li><li>…</li><li>run tests</li><li>rinse repeat ✩₊˚.⋆☾⋆⁺₊✧</li></ul><h4 id="aider-1">Aider</h4><ul><li>go to the directory where the code lives</li><li>run aider (always make sure you are on a new branch for aider work)</li><li>run <code>mise run LLM:generate_missing_tests</code></li><li>look at the generated markdown file (<code>issue-prompts.md</code>)</li><li>paste the first missing test “issue” into aider</li><li>watch aider dance ♪┏(・o･)┛♪</li><li>…</li><li>run tests</li><li>rinse repeat ✩₊˚.⋆☾⋆⁺₊✧</li></ul><p>This is a pretty good way to incrementally improve a code base. It has been super helpful to do small amounts of work in a big code base. I have found that I can do any sized tasks with this method.</p><h3 id="prompt-magic">Prompt magic</h3><p>These quick hacks work super well to dig into places where we can make a project more robust. It is super quick, and effective.</p><p>Here are some of my prompts that I use to dig into established code bases:</p><h4 id="code-review">Code review</h4><pre tabindex="0"><code data-lang="prompt">You are a senior developer. Your job is to do a thorough code review of this code. You should write it up and output markdown. Include line numbers, and contextual info. Your code review will be passed to another teammate, so be thorough. Think deeply  before writing the code review. Review every part, and don't hallucinate.</code></pre><h4 id="github-issue-generation">GitHub Issue generation</h4><p>(I need to automate the actual issue posting!)</p><pre tabindex="0"><code data-lang="prompt">You are a senior developer. Your job is to review this code, and write out the top issues that you see with the code. It could be bugs, design choices, or code cleanliness issues. You should be specific, and be very good. Do Not Hallucinate. Think quietly to yourself, then act - write the issues. The issues will be given to a developer to executed on, so they should be in a format that is compatible with github issues</code></pre><h4 id="missing-tests">Missing tests</h4><pre tabindex="0"><code data-lang="prompt">You are a senior developer. Your job is to review this code, and write out a list of missing test cases, and code tests that should exist. You should be specific, and be very good. Do Not Hallucinate. Think quietly to yourself, then act - write the issues. The issues  will be given to a developer to executed on, so they should be in a format that is compatible with github issues</code></pre><p>These prompts are pretty <em>old and busted</em> (“boomer prompts” if I may). They need some refactoring. If you have ideas to make them better lmk.</p><h2 id="skiing-ᨒ-𖠰ᨒ-𖠰">Skiing ᨒ↟ 𖠰ᨒ↟ 𖠰</h2><p>When I describe this process to people I say “you have to aggressively keep track of what’s going on because you can easily get ahead of yourself.”</p><p>For some reason I say “over my skies” a lot when talking about LLMs. I don’t know why. It resonates with me. Maybe it’s because it is beautiful smooth powder skiing, and then all of a sudden you are like “WHAT THE FUCK IS GOING ON!,” and are completely lost and suddenly fall off a cliff.</p><p>I find that using a <strong>planning step</strong> (ala the Greenfield process above) can help keep things under control. At least you will have a doc you can double-check against. I also do believe that testing is helpful - especially if you are doing wild style aider coding. Helps keep things good, and tight.</p><p>Regardless, I still do find myself <strong>over my skies</strong> quite a bit. Sometimes a quick break or short walk will help. In this regard it is a normal problem-solving process, but accelerated to a breakneck speed.</p><blockquote><p>We will often ask the LLM to include ridiculous things in our not very ridiculous code. For instance, we asked it to create a lore file and then reference the lore in the user interface. This is for python cli tools. Suddenly there is lore, glitchy interfaces, etc. All to manage your cloud functions, your todo list or whatever. The sky is the limit.</p></blockquote><h2 id="i-am-so-lonely-">I am so lonely (｡•́︿•̀｡)</h2><p>My main complaint about these workflows is that it is largely a solo endeavor - i.e. the interfaces are all <em>single player mode</em>.</p><p>I have spent years coding by myself, years coding as a pair, and years coding in a team. It is always better with people. These workflows are not easy to use as a team. The bots collide, the merges are horrific, the context complicated.</p><p>I really want someone to solve this problem in a way that makes coding with an LLM a multiplayer game. Not a solo hacker experience. There is so much opportunity to fix this and make it amazing.</p><p>GET TO WORK!</p><h2 id="ⴵ-time-ⴵ">ⴵ Time ⴵ</h2><p>All this codegen has accelerated the amount of code that I as a single person am able to generate. However, there is a weird side effect. I find myself having a huge amount of “downtime” while waiting for the LLM to finish burning its tokens.</p><figure role="group" aria-describedby="caption-I remember this like it was yesterday"><img title="" loading="lazy" decoding="async" src="https://harper.blog/images/posts/apple-print-shop-printing.png" alt="Printing" width="" height=""><figcaption id="caption-I remember this like it was yesterday">I remember this like it was yesterday</figcaption></figure><p>I have changed how I work enough to start incorporating some practice that will try and eat the waiting time:</p><ul><li>I start the “brainstorming” process for another project</li><li>I listen to records</li><li>I play <a href="https://orteil.dashnet.org/cookieclicker/">cookie clicker</a></li><li>I talk with friends and robots</li></ul><p>It is awesome to be able to hack like this. Hack Hack Hack. I can’t think of another time I have been this productive in code.</p><h2 id="haterade--_-">Haterade ╭∩╮( •̀_•́ )╭∩╮</h2><p>A lot of my friends are like “fuck LLMs. They are terrible at everything.” I don’t mind this POV. I don’t share it, but I think it is important to be skeptical. There are an awful lot of reasons to hate AI. My main fear is about power consumption and the environmental impact. But… the code must flow. Right… sigh.</p><p>If you are open to learning more, but don’t want to dig in and become a cyborg programmer - my recommendation is not to change your opinion, but to read Ethan Mollick’s book about LLMs and how they can be used: <a href="https://www.penguinrandomhouse.com/books/741805/co-intelligence-by-ethan-mollick/"><strong>Co-Intelligence: Living and Working with AI.</strong></a></p><p>It does a good job of explaining the benefits without being a tech anarcho-capitalist bro type tome. I found it very helpful, and have had so many good and nuanced conversations with friends who have read it. Highly recommended.</p><p>If you are skeptical, but a bit curious - feel free to hit me up and let’s talk through all this madness. I can show you how we use LLMs, and maybe we could build something together.</p><p><em>thanks to <a href="https://derek.broox.com/">Derek</a>, <a href="https://nocruft.com/">Kanno</a>, <a href="https://fsck.com/">Obra</a>, and <a href="https://thinks.lol/">Erik</a> for taking a look at this post and suggesting edits. I appreciate it.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Nuclear fusion: WEST beats the world record for plasma duration (214 pts)]]></title>
            <link>https://www.cea.fr/english/Pages/News/nuclear-fusion-west-beats-the-world-record-for-plasma-duration.aspx</link>
            <guid>43093939</guid>
            <pubDate>Tue, 18 Feb 2025 19:26:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cea.fr/english/Pages/News/nuclear-fusion-west-beats-the-world-record-for-plasma-duration.aspx">https://www.cea.fr/english/Pages/News/nuclear-fusion-west-beats-the-world-record-for-plasma-duration.aspx</a>, See on <a href="https://news.ycombinator.com/item?id=43093939">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="ctl00_PlaceHolderMain_DisplayModePanel_top">
		
                <div>
                    <p id="ctl00_PlaceHolderMain_DisplayModePanel_top_TaxonomyFields_TaxonomyFieldsControl"><span><a href="https://www.cea.fr/english/Pages/SPECIAL-PAGES/Local-search.aspx?k=Press%20release">Press release</a></span> | <a href="https://www.cea.fr/english/Pages/SPECIAL-PAGES/Local-search.aspx?k=Energies">Energies</a> | <a href="https://www.cea.fr/english/Pages/SPECIAL-PAGES/Local-search.aspx?k=Fusion%20through%20magnetic%20containment">Fusion through magnetic containment</a> | <a href="https://www.cea.fr/english/Pages/SPECIAL-PAGES/Local-search.aspx?k=Nuclear%20fusion">Nuclear fusion</a></p>

                    
                    
                    
                    <p><img src="https://www.cea.fr/english/PublishingImages/thumbnails/photo-plasma.jpg" id="ctl00_PlaceHolderMain_DisplayModePanel_top_PeoplePicture_ImagetteField" width="218" height="138">
    <small id="ctl00_PlaceHolderMain_DisplayModePanel_top_PeoplePicture_SmallCredits">© CEA</small>
</p>

                    <div>
                        <p>​On 12 February, the CEA’s WEST machine was able to maintain a plasma for more than 22 minutes. In doing so, it smashed the previous record for plasma duration achieved with a tokamak. This leap forward demonstrates how our knowledge of plasmas and technological control of them over longer periods is becoming more mature, and offers hope that fusion plasmas can be stabilised for greater amounts of time in machines such as ITER.</p>
                    </div>
                </div><!--.cartouche-->

                <div id="bando-infos">
                    <p><em>
                    
                            Published on&nbsp;18 February 2025                      
                    
                    </em></p>


                </div><!--#bando-infos-->

                <div>
                    <div id="ctl00_PlaceHolderMain_DisplayModePanel_top_ctl02__ControlWrapper_RichHtmlField" aria-labelledby="ctl00_PlaceHolderMain_DisplayModePanel_top_ctl02_label"><p>​<strong>1,337 seconds: that was how long WEST, a tokamak run from the CEA Cadarache site in southern France&nbsp;and one of the EUROfusion consortium medium size Tokamak facilities, was able to maintain a plasma for on 12 February. </strong>This was a 25% improvement on the previous record time achieved with EAST, in China, a few weeks previously.</p><p><img src="https://www.cea.fr/english/PublishingImages/Pages/News/nuclear-fusion-west-beats-the-world-record-for-plasma-duration/plasma-record-image.jpg" alt="The plasma record reached a temperature of 50 million degrees." title="The plasma record reached a temperature of 50 million degrees. © CEA" id="img_o7r12ppr">&nbsp;</p><p>The plasma record reached a temperature of 50 million degrees. © CEA</p><p>Reaching durations such as these is <strong>a crucial milestone for machines like Iter</strong>, which will need to maintain fusion plasmas for several minutes. The end goal is to control the plasma, which is naturally unstable, while ensuring that all plasma-facing components are able to withstand its radiation without malfunctioning or polluting it.</p><p><img src="https://www.cea.fr/english/PublishingImages/Pages/News/nuclear-fusion-west-beats-the-world-record-for-plasma-duration/Vue-west-hall-tore.jpg" alt="WEST, the tokamak run by the CEA " title="WEST, the tokamak run by the CEA  © L. Godart/CEA" id="img_94elihk3">&nbsp;</p><p>WEST, the tokamak run by the CEA  © L. Godart/CEA</p><p>This is what CEA researchers intend to achieve and what explains the current record. Over the coming months, the WEST team will double down on its efforts to achieve very long plasma durations – up to several hours combined – but also to heat the plasma to even higher temperatures with a view to approaching the conditions expected in fusion plasmas.</p><p><strong>WEST is a CEA facility that benefits from the commission’s decades of experience in the use of tokamaks to study plasmas</strong>. It welcomes researchers from around the world, who make use of its key characteristics that allow long-duration plasmas, particularly its superconducting coils and actively cooled components. WEST is one facet of an international movement comprising other major experiments in which CEA researchers are heavily involved, such as JET, the Joint European Torus tokamak in the United Kingdom (closed in late 2023), which holds the record for fusion energy, JT-60SA in Japan, EAST in China, and KSTAR in South Korea, not to mention the flagship machine that is ITER.<br></p><blockquote><br>“WEST has achieved a new key technological milestone by maintaining hydrogen plasma for more than twenty minutes through the injection of 2 MW of heating power. Experiments will continue with increased power. This excellent result allows both WEST and the French community to lead the way for the future use of ITER.”, comment Anne-Isabelle Etienvre, Director of Fundamental Research at the CEA.<br></blockquote><h2>What is fusion used for?</h2><p>Nuclear fusion is a technology with the ultimate goal of controlling naturally unstable plasma. It uses even fewer resources and less fuel than fission, which was already very concentrated, and does not produce long-lived radioactive waste.&nbsp;&nbsp; &nbsp;</p><p>Of the various possible techniques for generating energy, the most advanced is magnetic confinement fusion , where plasma is held in a torus by an intense magnetic field and heated until the hydrogen nuclei fuse. Confinement fusion has been shown by JET to produce fusion power of 15 MW for several seconds.</p><p>France, home to both WEST and ITER, is well-placed to house the first prototype nuclear fusion reactor. Nuclear fusion is a source of energy that exploits nuclear reactions, with many possible complementary aspects with nuclear fission energy and associated techniques relating to neutrons and matter, which are well understood.</p><div><p>Nevertheless, given the infrastructure needed to produce this energy on a large scale, it is unlikely that fusion technology will make a significant contribution to achieving net-zero carbon emissions by 2050. For this, several technological sticking points need to be overcome, and the economic feasibility of this form of energy production must still be demonstrated.</p></div></div>
            
                     

                    <p id="ctl00_PlaceHolderMain_DisplayModePanel_top_GoToLink1_GoTopParagraph"><a href="#top" title="Go to the top of the page">Top page</a></p>
   
                            
                    
                    <!--#navmore-->


                    
                    <p id="navtags"><h2>Keywords&nbsp;:&nbsp;<a href="https://www.cea.fr/english/Pages/SPECIAL-PAGES/Local-search.aspx?k=fusion">fusion</a> | <a href="https://www.cea.fr/english/Pages/SPECIAL-PAGES/Local-search.aspx?k=plasma">plasma</a></h2></p><!--#navtags-->
                
                </div>
            
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Moving on from 18F (311 pts)]]></title>
            <link>https://ethanmarcotte.com/wrote/leaving-18f/</link>
            <guid>43093859</guid>
            <pubDate>Tue, 18 Feb 2025 19:18:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ethanmarcotte.com/wrote/leaving-18f/">https://ethanmarcotte.com/wrote/leaving-18f/</a>, See on <a href="https://news.ycombinator.com/item?id=43093859">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="content" tabindex="-1">

      






    

    

    <div>
      <p><strong>Note:</strong> This post gets into the last few weeks of American politics. If that’s not your cup of tea, or if that’s a stressful topic for you, please feel free to skip this one. (Also, it’s a bit long. Sorry about that.)</p>
<hr>
<p>Last week, I finished my tenure as <a href="https://ethanmarcotte.com/wrote/18f/">a designer at 18F</a>.</p>
<p>I want to state up front: I’m not leaving under a “<a href="https://www.afge.org/article/afge-cautions-feds-not-to-be-tricked-into-resigning-you-might-not-get-paid/">deferred resignation</a>”. I also wasn’t laid off. (Though it’s possible I almost was; more on that later.) Instead, I resigned from my position as a product designer, submitting two weeks’ notice…well, two weeks ago.</p>
<p>Before I get into any of that, I’d like to write a bit about 18F, and why it was so hard to leave.</p>
<hr>
<p>While I was writing this post, I thought I’d revisit <a href="https://ethanmarcotte.com/wrote/18f/">what I wrote when I joined 18F last May</a>:</p>
<blockquote>
<ol>
<li>Every single person I’ve met this week — and I’ve met quite a few! — has been smart, kind, <em>and</em> really happy to be working where they do. As someone new to the organization, that’s so encouraging to see.</li>
<li>It’s, like, remarkably energizing to be around people who are really (really, really) passionate about making digital services work better for people.</li>
</ol>
</blockquote>
<p>Honestly, that holds up. Because really, the thread here is the people working at 18F, and the culture they’d built: I really, <em>really</em> liked showing up for work each morning. Everyone I met at 18F was inviting and kind, and excited to talk about what they were working on. (And just as crucially, what they did <em>outside</em> work.)</p>
<p>And my goodness, they were helpful — which, as a new kid joining the team, I’m always going to remember. Here’s one example: during my first month, I was grousing about some weird little computer issue, and a random coworker just offered to hop on a call to look at it with me. They hadn’t dealt with the issue before, and they definitely hadn’t dealt with <em>me</em> before, but they thought they might help a coworker out. And that impulse — <em>maybe I can help someone out</em> — sums up so many of my interactions with everyone at 18F. They were, and are, a remarkable group of people.</p>
<p>At the same time, I was proud of the work I was doing. Alongside my coworkers at 18F, I worked with client teams to help them define requirements, refine their designs, and build better products. I even got asked to pitch in on a small branding project, and I’d be the last person to call myself a brand designer. But I mention that because I was often asked to stretch myself, and every single time I felt safe trying something new — safe, and supported by my team. I can count on one hand the number of times over my career that I’ve felt that kind of safety at work. I doubt that’s true of every job in government, but I know it was true for me at 18F.</p>
<p>I know it sounds pat, but 18F was one of the best places I’ve ever worked. Until it wasn’t, and I felt I had to leave.</p>
<hr>
<p>Before I dive in, here are a couple points that’ll become relevant:</p>
<ul>
<li>I was considered a <em>probationary</em> employee because I’d been employed by the government for less than a year. <a href="https://federalnewsnetwork.com/workforce-rightsgovernance/2025/02/what-are-the-rules-for-probationary-periods-and-federal-employees/">Probationary employees</a> don’t have most of <a href="https://www.mspb.gov/">the protections afforded to “full” employees</a>, and can be dismissed more easily.</li>
<li>Due to some idiosyncrasies of how our roles were defined, many (most?) people in my organization were legally not eligible to join a union.</li>
</ul>
<p>So. After last year’s election, I was trying to decide whether or not I could stay at the job. A far-right candidate had won the election<sup><a href="#fn-margins" id="fnref-fn-margins">1</a></sup>, and was threatening to <a href="https://en.wikipedia.org/wiki/Project_2025">reshape the government</a> into something more partisan, more regressive, and more autocratic. My job involved putting rectangles on screens, and couldn’t have been further from any kind of political influence or impact. But despite that, I didn’t know if I could let myself be part of that government, even in a small way. (Also, <a href="https://ethanmarcotte.com/wrote/catalog/">as you might have guessed</a>: I was panicking.)</p>
<p>During that time, a friend suggested that while things were calm at work, I should write down some lines I wouldn’t want to cross: things I’d want to watch out for that, if they materialized, might be a reason to leave. This was wonderful advice, and I’m grateful to them for it. Equipped with a plan, even a small one, I started thinking through what my lines would be.</p>
<p>I’ll spare you the whole list, but I’ll share three of the entries.</p>
<ol>
<li>First, I need to work remotely. If the incoming administration made good on its promise to end teleworking for federal workers, I’d likely have to find another job. (This is, of course, <a href="https://finance.yahoo.com/news/quarter-bosses-admit-return-office-104103939.html">why “return to office” policies happen</a>.)</li>
<li>The second line was whether I’d be asked to work on a project that could kill or surveil people. I know precisely what governments are capable of — for good and for ill. But one of the things that drew me to the work at 18F was that I understood they tried to weigh individual workers’ preferences when projects were staffed. I figured if that ever changed, and I was asked to work on something I was morally opposed to, it’d be time to leave.</li>
<li>The third was being asked to meet with someone who didn’t work for the government, and being asked to discuss what I did for work.</li>
</ol>
<p>The first two were things I looked into when I was first interviewing at 18F: some of the basic criteria I was screening potential employers for. The third was driven at least in part by the election, and by the billionaire they were putting in charge of “government tech modernization.” I expected that if things went south, he’d just try to run the same horrible <a href="https://web.archive.org/web/20221102222024/https://www.washingtonpost.com/technology/2022/10/29/elon-musk-twitter-takeover/#:~:text=The%20note%20continued%3A%20%E2%80%9CPlease%20come%20prepared%20with%20code%20as%20a%20backup%20to%20review%20on%20your%20own%20machines%20with%20Elon.%E2%80%9D%20Later%2C%20people%20inside%20the%20company%20reported%20that%20Tesla%20engineers%20were%20in%20fact%20reviewing%20the%20code.">Twitter layoffs handbook</a>, and bring in employees from his other companies to rank — and cull — workers.</p>
<p>But it wasn’t just about that. Many things started happening to the federal government after the inauguration, none of them good. While the administration was conducting its vicious rollback of civil liberties and publicly funded research, <a href="https://www.bbc.com/news/articles/c23vkd57471o#:~:text=Despite%20its%20full%20name%2C%20Doge%20is%20not%20an%20official%20government%20department%2C%20which%20would%20have%20had%20to%20be%20established%20by%20an%20act%20of%20Congress.">this billionaire’s so-called “department”</a> was sweeping through <a href="https://www.wired.com/story/elon-musk-lackeys-office-personnel-management-opm-neuralink-x-boring-stalin/">various federal agencies</a>,  pushing aside career civil servants and the law to <a href="https://abcnews.go.com/US/judge-decide-block-doge-accessing-sensitive-labor-department/story?id=118575362">hoover up</a> <a href="https://www.nbcnews.com/politics/doge/doge-affiliated-employee-accessed-irs-system-sensitive-taxpayer-inform-rcna192423">radioactively</a> <a href="https://www.cnn.com/2025/02/17/politics/doge-irs-taxpayer-data/index.html">sensitive data</a> — <em>our</em> data, bought and paid for with <em>our</em> tax dollars, I should add.<sup><a href="#fn-conflicts" id="fnref-fn-conflicts">2</a></sup> And from what I’d read the group was acting on <a href="https://www.washingtonpost.com/business/2025/02/04/elon-musk-government-legal-doge/">dubious legal authority</a>, and with even less <a href="https://oversightdemocrats.house.gov/sites/evo-subsites/democrats-oversight.house.gov/files/evo-media-document/2025-02-06.Dem%20Members%20to%20IGs%20re%20Musk.pdf">oversight</a> or <a href="https://www.404media.co/doge-employees-ordered-to-stop-using-slack-while-agency-transitions-to-a-records-system-not-subject-to-foia/">transparency</a>. I didn’t want to sit down with anyone involved in that, and pretend like any part of their work was lawful, legitimate, or moral.</p>
<p>Anyway. The list was a tremendous help; I’ll always be grateful to the friend who suggested it. But given the speed at which government typically moves, I assumed I’d have several months before I’d have to wrestle with any of these questions. If not longer.</p>
<p>(I know, I know. I’m in the future, too.)</p>
<p>A few weeks ago, a member of <a href="https://www.gsa.gov/about-us/newsroom/news-releases/gsa-announces-new-commissioners-tts-director-and-general-counsel-01242025">the new leadership</a> announced they’d be reaching out to workers to discuss their recent “technical wins”, in order to better understand how the organization worked. The stress on “<em>technical</em> wins” to a <a href="https://experience.dropbox.com/resources/cross-functional-teams">cross-functional organization</a> felt significant to me; it also felt significant that most of the sessions seemed to be getting scheduled with folks who’d only recently joined government — probationary employees.</p>
<p>Just to state the obvious, this isn’t what you do when you want to understand how your organization works; it <em>is</em> what you do when you’re preparing to slash the size of your workforce. As you might imagine, this caused no small amount of panic across the agency, including within 18F. The new leadership hadn’t communicated these plans to anyone before making their announcement, which left 18F’s own leaders and supervisors frantically working to fill in the information void.</p>
<p>Shortly after the announcement, I started hearing about folks who’d had their meetings, but that they didn’t meet with the director who said they’d be conducting the interviews. Instead, they found themselves on a call with people who wouldn’t say where they worked in government; in a few cases, some people wouldn’t disclose their last names, or any part of their names.</p>
<p>And while I was watching these reports trickle in, I got a calendar invitation for my own interview. From the first email announcing the meetings, I figured one of my lines was in danger of being crossed; I just figured I’d have more time.</p>
<p>With only a few hours before my interview, I did a quick overview of my options. It looked like this:</p>
<ol>
<li>I could do the interview.</li>
<li>I could refuse to do the interview.</li>
<li>I could delay: call out sick, take a personal day, whatever.</li>
<li>I could resign.</li>
</ol>
<p>The first item wasn’t really an option, as sitting down with this “department” wasn’t something I could let myself do. Refusing to participate would’ve likely been seen as insubordination by a probationary hire; delaying would’ve just been, well, delaying the inevitable. (It also could have been seen as insubordination.) My math would’ve been different if I wasn’t probationary or, even better, if I’d been allowed to join a union. But given my lack of labor protections, and the options available before me, leaving 18F — withholding my labor — felt like my best and only option. I called a meeting with my supervisor, and gave two weeks’ notice.</p>
<p>In a terrible coda, a large number of <a href="https://www.npr.org/2025/02/13/nx-s1-5296928/layoffs-trump-doge-education-energy">probationary employees were summarily let go</a> at <a href="https://fedscoop.com/gsa-looks-to-terminate-probationary-employees/">my agency</a> just before my last day.</p>
<hr>
<p>Leaving was the right call for me, but I’ll never feel good about the decision. I mean, there’s the grief angle: up until about a month ago, I was working on projects that felt like they mattered, and working alongside people who cared about helping government services work better for the public. A few months ago, I would’ve told you I’d like to stay there for years, which is not something I’ve said about any other place I’ve ever worked. I am incredibly sad to leave this job.</p>
<p>And look, being able to leave is, flatly, a privileged option: I can’t not work forever, but I <em>can</em> not work for a little bit. Most of my coworkers didn’t have that option. Some had just bought a house; some returned from parental leave, only to learn they might be losing the jobs they’d counted on to support their families.</p>
<p>I’m also angry at what was taken from me. At what’s <em>being</em> taken from all of us. I’ve watched a wonderful job, a wonderful place to work, a wonderful <em>team</em> get pulled apart by rich men in ill-fitting suits, each of them parroting the same talking points around “realignment” and “right-sizing”.<sup><a href="#fn-datalake" id="fnref-fn-datalake">3</a></sup></p>
<p>But what’s happening right now is not about “government efficiency,” nor is it about “cost-cutting.” I would gently urge you to look at the net worth of the people who are telling you otherwise. After all, there is no financial analysis; no review of possible downsides, no weighing of potential negative impacts. There is no discussion of <em>what could happen if our math is wrong?</em> Or even more importantly, no consideration of <em>who might be harmed?</em></p>
<p>Instead, as <a href="https://www.anildash.com/">Anil Dash</a> predicted, the billionaire’s so-called “efficiency“ “department” is best understood as a sprawling form of <a href="https://www.anildash.com/2025/01/04/DOGE-procurement-capture/">procurement capture</a>, in which a group of impossibly rich individuals are trampling over the regulations — and the federal workers — that stand between them and a deep, deep <a href="https://newrepublic.com/article/191506/musk-bezos-pichai-zuckerberg-microsoft-trump-climate">revenue</a> <a href="https://www.technologyreview.com/2024/12/04/1107897/openais-new-defense-contract-completes-its-military-pivot/">stream</a>: <a href="https://www.wired.com/story/elon-musk-lieutenant-gsa-ai-agency/">your tax dollars</a>. And as they do, they’re making an explicitly fascist move to roll back rights for every marginalized community in the country — for anyone who doesn’t look like them, or who stands in their way.</p>
<p>So, yes. This is a wholesale attack on the American safety net, led by billionaires and far-right politicians who are frighteningly comfortable with fascism and autocracy. The last month has been called a coup by <a href="https://www.usatoday.com/story/news/politics/2025/02/03/dems-elon-musk-doge-takeover-treasury/78187978007/">politicians</a>, <a href="https://www.techpolicy.press/anatomy-of-an-ai-coup/">researchers</a>, and <a href="https://therevolvingdoorproject.org/tracking-the-doge-treasury-raid/">watchdogs</a> alike. I don’t want to diminish the harm these people will do — the harm they are doing. I also don’t want to downplay the terror of this moment, because lord knows I fucking feel it.</p>
<p>At the same time: what’s happening right now is <em>also</em> a labor story.</p>
<p>If the American government is slow-moving, it’s because rapid change is deadly when you’re talking about healthcare, social security checks, market regulations, food safety, or any of the other countless critical functions it performs. Those federal agencies are, quite simply, infrastructure. And as <a href="http://debcha.org/">Deb Chachra</a> showed in <a href="https://www.penguinrandomhouse.com/books/612711/how-infrastructure-works-by-deb-chachra/">her excellent book</a>, infrastructure is how a society invests in its future: in its ongoing economic, societal, and political stability.</p>
<p>In government, that infrastructure is built by laws, policies, and regulations. But regulations alone do not infrastructure make. Regulations require <em>workers</em> to become infrastructure: those workers who labor to understand new policies, how best to enact them, and then work to make them legible and understandable to the American public — and, yes, to enforce them. Without those federal workers, and their labor, these systems fall apart. And the architects of this assault on the federal workforce are keenly aware of that fact.</p>
<p>The last month has, flatly, been hell. But even so, I wouldn’t trade away my time at 18F for anything. It was a fantastic place to work, filled with genuine, hard-working people who cared for that work <em>and</em> for each other. Even when things got rough, I saw the leaders of 18F scramble to answer their team’s questions; I saw coworkers reaching out to support each other in countless little ways. All while ensuring they got their project work in on time. I saw something wonderful at work, <em>in</em> my work. I’m always going to be grateful for that, and to my coworkers.</p>
<hr>
<h2 id="resources" tabindex="-1">Resources</h2>
<ul>
<li>Wired has some <a href="https://www.wired.com/story/doge-tts-fired/">good coverage on the layoffs I described above</a>, and <a href="https://www.wired.com/tag/elon-musk/">on the billionaire coup more generally</a>.</li>
<li>The <a href="https://www.instagram.com/workingfamilies/p/DGLZz2CP9bH/">Working Families Party</a> and <a href="https://emilyinyourphone.substack.com/p/everything-you-need-to-know-about">Emily Amick</a> both had some great primers on what it means to call your members of Congress, if that’s a thing you’re able to do.</li>
<li>If you’re looking for other ways to get engaged, <a href="https://bsky.app/profile/prisonculture.bsky.social">Mariame Kaba</a> has pulled together a massive list of <a href="https://docs.google.com/document/d/1OSWxykA1WHOi0vTPLAJDaCeVhR3uSfh7PhlCj4t4yT0/edit?tab=t.0">actions that are not protesting or voting</a>.</li>
</ul>
<hr>

    </div><!-- /end .post-content -->

    

    
    <!-- /end .post-footer -->
    


  </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Pi-hole v6 (307 pts)]]></title>
            <link>https://pi-hole.net/blog/2025/02/18/introducing-pi-hole-v6/</link>
            <guid>43093328</guid>
            <pubDate>Tue, 18 Feb 2025 18:31:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pi-hole.net/blog/2025/02/18/introducing-pi-hole-v6/">https://pi-hole.net/blog/2025/02/18/introducing-pi-hole-v6/</a>, See on <a href="https://news.ycombinator.com/item?id=43093328">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <p><img width="1024" height="1024" src="https://wp-cdn.pi-hole.net/wp-content/uploads/2024/08/v6-png.avif" alt="" decoding="async" fetchpriority="high" srcset="https://wp-cdn.pi-hole.net/wp-content/uploads/2024/08/v6-png.avif 1024w, https://wp-cdn.pi-hole.net/wp-content/uploads/2024/08/v6-150x150.png 150w, https://wp-cdn.pi-hole.net/wp-content/uploads/2024/08/v6-300x300.png 300w, https://wp-cdn.pi-hole.net/wp-content/uploads/2024/08/v6-768x768.png 768w, https://wp-cdn.pi-hole.net/wp-content/uploads/2024/08/v6-100x100.png 100w" sizes="(max-width: 1024px) 100vw, 1024px" data-has-transparency="false" data-dominant-color="211f1f"></p>
<p>We’re excited to announce the general release of Pi-hole v6!</p>
<h3>At a glance: What’s New in Pi-hole v6?</h3>
<h4>1. <strong>Embedded Web Server and REST API</strong></h4>
<p>We’ve integrated a new REST API and embedded web server directly into the <code>pihole-FTL</code> binary. This eliminates the need for <code>lighttpd</code> and <code>PHP</code>, reducing the installation footprint and boosting performance. The new API also offers server-side pagination for the query log, ensuring a faster and more responsive interface.</p>
<p>As <code>lua</code> has been embedded into the <code>pihole-FTL</code> binary for <a href="https://github.com/pi-hole/FTL/pull/913">some time now</a>, we have been able to leverage this to rewrite the web interface.<strong><code></code></strong></p>
<h4>2. <strong>Advanced Filtering and Allowlists</strong></h4>
<p>Pi-hole v6 introduces support for subscribed allowlists (Otherwise known as “Antigravity”). These lists work in much the same way as blocklists, but they&nbsp;<em>allow&nbsp;</em>domains instead of&nbsp;<em>denying</em> them</p>
<h4>3. <strong>Consolidated Configuration Files</strong></h4>
<p>We’ve streamlined configuration management by consolidating multiple settings files into a single, richly commented <code>toml</code> file, making it easier to manage and understand your settings. If you are migrating from v5, your existing configurations will be migrated automatically into this file. It can be found at <code>/etc/pihole/pihole.toml</code></p>
<p>Configuration can be set in multiple ways:</p>
<ul>
<li>Directly editing the <code>toml</code> file</li>
<li>Via the command line, e.g <code>pihole-FTL --config dns.upstreams 8.8.8.8</code></li>
<li>Using the API</li>
<li>Via the web interface (which uses the API 😉)</li>
<li>Via environment variables named, e.g <code>FTLCONF_dns_upstreams=8.8.8.8</code></li>
</ul>
<p>If setting via environment variables, it should be noted that this effectively makes the setting read-only, as the environment variable will always force the value to match itself. This is the preferred way to configure FTL in the docker container.</p>
<h4>4. <strong>Redesigned User Interface</strong></h4>
<p>The web interface has been completely overhauled with settings split into Basic and Expert modes. This allows users to customize their experience based on their comfort level and needs.</p>
<h4>5. <strong>HTTPS Support</strong></h4>
<p>Pi-hole v6 includes native HTTPS support, with options to provide your own certificates or use auto-generated ones.</p>
<h4>6. <strong>Docker</strong></h4>
<p>Additionally, the Docker image is now based on Alpine, significantly reducing the image size and opening up possibilities for future system support.</p>
<h3>Upgrading and Getting Started</h3>
<h4>Bare Metal</h4>
<p>Upgrading to Pi-hole v6&nbsp; should be straightforward. For existing users, we recommend backing up your current configuration before proceeding, as the upgrade is strictly a one-way operation.</p>
<p>During the upgrade operation, you will be presented with a dialog box asking if you wish to disable <code>lighttpd</code>. Doing so is probably appropriate for most users – unless you are using it to host web pages&nbsp;<em>other than</em> Pi-hole’s, in which case you may choose to keep it enabled. With <code>lighttpd</code> disabled, <code>pihole-FTL</code> will attempt to bind to ports 80 for HTTP and 443 for HTTPS. If there is any conflict on these ports, then it will revert to port 8080 for HTTP.</p>
<h4>Docker</h4>
<p>The docker image has undergone a complete rewrite from the ground up, and is now based on Alpine rather than Debian.&nbsp;The same migration scripts that run on bare metal will also run on Docker – your configurations will be migrated to the new format.</p>
<p>The exception to this is environment variables. You can start the container with the old variables in place but don’t expect them to work! It is recommended to read the docker section of our <a href="https://docs.pi-hole.net/docker/">docs page</a> before upgrading.</p>
<h3>Join the Community</h3>
<p>Pi-hole thrives thanks to our vibrant and supportive community. Whether you’re looking to share your experience, get advice, or stay informed about the latest updates, there’s a place for you. Join the conversation on our <a href="https://discourse.pi-hole.net/" target="_new" rel="noreferrer noopener">official forum</a> or connect with fellow users on our <a href="https://www.reddit.com/r/pihole/" target="_new" rel="noreferrer noopener">subreddit</a>. We look forward to welcoming you!</p>
<h3>Thank You for Your Support</h3>
<p>We want to express our heartfelt thanks to everyone who has supported Pi-hole throughout the years.</p>
<p>Your community contributions and donations are the lifeblood of this project, allowing us to maintain and continually improve Pi-hole while keeping it free for everyone. If you’d like to contribute to our ongoing efforts, please consider donating through our official <a href="https://pi-hole.net/donate" target="_new" rel="noreferrer noopener">donation page</a>. Every contribution, big or small, makes a significant difference in helping us deliver the best project that we can.</p>
<p>Thank you for being part of the Pi-hole community!</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Among top researchers 10% publish at unrealistic levels, analysis finds (125 pts)]]></title>
            <link>https://www.chemistryworld.com/news/among-worlds-top-researchers-10-publish-at-unrealistic-levels-analysis-finds/4020962.article</link>
            <guid>43093155</guid>
            <pubDate>Tue, 18 Feb 2025 18:16:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chemistryworld.com/news/among-worlds-top-researchers-10-publish-at-unrealistic-levels-analysis-finds/4020962.article">https://www.chemistryworld.com/news/among-worlds-top-researchers-10-publish-at-unrealistic-levels-analysis-finds/4020962.article</a>, See on <a href="https://news.ycombinator.com/item?id=43093155">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>About 10% of the most influential researchers worldwide in various scientific fields, including chemistry, are achieving ‘implausibly high’ publication and new co-author rates. Many are producing hundreds of papers each year and gaining hundreds to thousands of new collaborators annually, <a href="https://www.tandfonline.com/doi/full/10.1080/08989621.2024.2445280">according to recent analysis by researchers at King Fahd University of Petroleum and Minerals in Saudi Arabia</a>.</p>
<p>Geoscientists <a href="https://cpg.kfupm.edu.sa/bio/dr-peter-mora/">Peter Mora</a> and <a href="https://cpg.kfupm.edu.sa/bio/dr-simone-pilia/">Simone Pilia</a> found that an increasing number of researchers – about 20,000 out of the roughly 200,000 scientists on <a href="https://top2percentscientists.com/stanford-elsevier-top-scientists-list-2024/">Stanford’s ‘Top 2%’ researcher list</a> – are producing ‘anomalously high publication and co-authorship metrics’, indicating efforts to inflate their publication metrics. Roughly 1000 of these individuals have worked in academia for a decade or less, which<em> </em>indicates that these practices are emerging even at early career stages, the authors of the analysis noted. They argue that early-career researchers ‘exemplify the systemic incentive structures that encourage metric inflation across career stages’.</p>
<p>Mora and Pilia also examined the publication and co-authorship rates of 462 Nobel laureates in chemistry, physics, medicine and economics, and found similar results in terms of publication and new co-author rates, which tail off above threshold values of around 20 publications per year and 35 new co-authors annually.</p>
<p>Looking ahead, they argue that further research is needed to better understand the conditions where the quantity of research might affect its quality. However, they suggest that at ‘excessive rates’ these cases likely result from ‘paper pumping’ and low quality or unethical co-author practices such as co-author and citation networks. ‘In our opinion, it is difficult to believe that the majority of authors with excessive rates are able to consistently produce large quantities of high quality or groundbreaking research, with their input to each paper being substantial and within norms of what constitutes co-authorship,’ the researchers conclude. Mora and Pilia propose renormalising research metrics to remove the incentive for researchers to prioritise quantity or resort to unethical practices to boost their metrics.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Svelte 5 is not JavaScript (153 pts)]]></title>
            <link>https://hodlbod.npub.pro/post/1739830562159/</link>
            <guid>43091596</guid>
            <pubDate>Tue, 18 Feb 2025 16:29:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hodlbod.npub.pro/post/1739830562159/">https://hodlbod.npub.pro/post/1739830562159/</a>, See on <a href="https://news.ycombinator.com/item?id=43091596">Hacker News</a></p>
<div id="readability-page-1" class="page"><div event="naddr1qqxnzden8yurxvp4xcerzdfeqgsf03c2gsmx5ef4c9zmxvlew04gdh7u94afnknp33qvv3c94kvwxgsrqsqqqa28ae4fzd"><p>For the last couple of weeks, I've been dealing with the fallout of upgrading a web application to Svelte 5. Complaints about framework churn and migration annoyances aside, I've run into some interesting issues with the migration. So far, I haven't seen many other people register the same issues, so I thought it might be constructive for me to articulate them myself.</p>
    <p>I'll try not to complain too much in this post, since I'm grateful for the many years of Svelte 3/4 I've enjoyed. But I don't think I'll be choosing Svelte for any new projects going forward. I hope my reflections here will be useful to others as well.</p>
    <p>If you're interested in reproductions for the issues I mention here, you can find them below.</p>
    <ul>
    <li><a href="https://github.com/sveltejs/svelte/issues/15327">Can't save state to indexeddb</a></li>
    <li><a href="https://github.com/sveltejs/svelte/issues/15327">Component unmount results in undefined variables in closures</a></li>
    </ul>
    <h2>The Need for Speed</h2>
    <p>To start with, let me just quickly acknowledge what the Svelte team is trying to do. It seems like most of the substantial changes in version 5 are built around "deep reactivity", which allows for more granular reactivity, leading to better performance. Performance is good, and the Svelte team has always excelled at reconciling performance with DX.</p>
    <p>In previous versions of Svelte, the main way this was achieved was with the Svelte compiler. There were many ancillary techniques involved in improving performance, but having a framework compile step gave the Svelte team a lot of leeway for rearranging things under the hood without making developers learn new concepts. This is what made Svelte so original in the beginning.</p>
    <p>At the same time, it resulted in an even more opaque framework than usual, making it harder for developers to debug more complex issues. To make matters worse, the compiler had bugs, resulting in errors which could only be fixed by blindly refactoring the problem component. This happened to me personally at least half a dozen times, and is what ultimately pushed me to migrate to Svelte 5.</p>
    <p>Nevertheless, I always felt it was an acceptable trade-off for speed and productivity. Sure, sometimes I had to delete my project and port it to a fresh repository every so often, but the framework was truly a pleasure to use.</p>
    
    <p>Svelte 5 doubled down on this tradeoff — which makes sense, because it's what sets the framework apart. The difference this time is that the abstraction/performance tradeoff did not stay in compiler land, but intruded into runtime in two important ways:</p>
    <ul>
    <li>The use of proxies to support deep reactivity</li>
    <li>Implicit component lifecycle state</li>
    </ul>
    <p>Both of these changes improved performance <em>and</em> made the API for developers look slicker. What's not to like? Unfortunately, both of these features are classic examples of a <a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">leaky abstraction</a>, and ultimately make things <em>more</em> complex for developers, not less.</p>
    <h2>Proxies are not objects</h2>
    <p>The use of proxies seems to have allowed the Svelte team to squeeze a little more performance out of the framework, without asking developers to do any extra work. Threading state through multiple levels of components without provoking unnecessary re-renders in frameworks like React is an infamously difficult chore.</p>
    <p>Svelte's compiler avoided some of the pitfalls associated with virtual DOM diffing solutions, but evidently there was still enough of a performance gain to be had to justify the introduction of proxies. The Svelte team also <a href="https://svelte.dev/blog/runes">seems to argue</a> that their introduction represents an improvement in developer experience:</p>
    <blockquote>
    <p>we... can maximise both efficiency and ergonomics.</p>
    </blockquote>
    <p>Here's the problem: Svelte 5 <em>looks</em> simpler, but actually introduces <em>more</em> abstractions.</p>
    <p>Using proxies to monitor array methods (for example) is appealing because it allows developers to forget all the goofy heuristics involved with making sure state was reactive and just <code>push</code> to the array. I can't count how many times I've written <code>value = value</code> to trigger reactivity in svelte 4.</p>
    <p>In Svelte 4, developers had to understand how the Svelte compiler worked. The compiler, being a leaky abstraction, forced its users to know that assignment was how you signaled reactivity. In svelte 5, developers can just "forget" about the compiler!</p>
    <p>Except they can't. All the introduction of new abstractions really accomplishes is the introduction of more complex heuristics that developers have to keep in their heads in order to get the compiler to act the way they want it to.</p>
    <p>In fact, this is why after years of using Svelte, I found myself using Svelte stores more and more often, and reactive declarations less. The reason being that Svelte stores are <em>just javascript</em>. Calling <code>update</code> on a store is <em>simple</em>, and being able to reference them with a <code>$</code> was just a nice bonus — nothing to remember, and if I mess up the compiler yells at me.</p>
    <p>Proxies introduce a similar problem to reactive declarations, which is that they look like one thing but act like another on the edges.</p>
    <p>When I started using Svelte 5, everything worked great — until <a href="https://github.com/sveltejs/svelte/issues/15327">I tried to save a proxy to indexeddb</a>, at which point I got a <code>DataCloneError</code>. To make matters worse, it's impossible to reliably tell if something is a <code>Proxy</code> without <code>try/catch</code>ing a structured clone, which is a performance-intensive operation.</p>
    <p>This forces the developer to remember what is and what isn't a Proxy, calling <code>$state.snapshot</code> every time they pass a proxy to a context that doesn't expect or know about them. This obviates all the nice abstractions they gave us in the first place.</p>
    <h2>Components are not functions</h2>
    <p>The reason virtual DOM took off way back in 2013 was the ability to model your application as composed functions, each of which takes data and spits out HTML. Svelte retained this paradigm, using a compiler to sidestep the inefficiencies of virtual DOM and the complexities of lifecycle methods.</p>
    <p>In Svelte 5, component lifecycles are back, react-hooks style.</p>
    <p>In React, hooks are an abstraction that allows developers to avoid writing all the stateful code associated with component lifecycle methods. Modern React tutorials universally recommend using hooks instead, which rely on the framework invisibly synchronizing state with the render tree.</p>
    <p>While this does result in cleaner code, it also requires developers to tread carefully to avoid breaking the assumptions surrounding hooks. Just try accessing state in a <code>setTimeout</code> and you'll see what I mean.</p>
    <p>Svelte 4 had a few gotchas like this — for example, async code that interacts with a component's DOM elements has to keep track of whether the component is unmounted. This is pretty similar to the kind of pattern you'd see in old React components that relied on lifecycle methods.</p>
    <p>It seems to me that Svelte 5 has gone the React 16 route by adding implicit state related to component lifecycles in order to coordinate state changes and effects.</p>
    <p>For example, here is an excerpt from the documentation for <a href="https://svelte.dev/docs/svelte/$effect">$effect</a>:</p>
    <blockquote>
    <p>You can place $effect anywhere, not just at the top level of a component, as long as it is called during component initialization (or while a parent effect is active). It is then tied to the lifecycle of the component (or parent effect) and will therefore destroy itself when the component unmounts (or the parent effect is destroyed).</p>
    </blockquote>
    <p>That's very complex! In order to use <code>$effect</code>... effectively (sorry), developers have to understand how state changes are tracked. The <a href="https://svelte.dev/docs/svelte/lifecycle-hooks">documentation for component lifecycles</a> claims:</p>
    <blockquote>
    <p>In Svelte 5, the component lifecycle consists of only two parts: Its creation and its destruction. Everything in-between — when certain state is updated — is not related to the component as a whole; only the parts that need to react to the state change are notified. This is because under the hood the smallest unit of change is actually not a component, it’s the (render) effects that the component sets up upon component initialization. Consequently, there’s no such thing as a “before update”/"after update” hook.</p>
    </blockquote>
    <p>But then goes on to introduce the idea of <code>tick</code> in conjunction with <code>$effect.pre</code>. This section explains that "<code>tick</code> returns a promise that resolves once any pending state changes have been applied, or in the next microtask if there are none."</p>
    <p>I'm sure there's some mental model that justifies this, but I don't think the claim that a component's lifecycle is only comprised of mount/unmount is really helpful when an addendum about state changes has to come right afterward.</p>
    <p>The place where this really bit me, and which is the motivation for this blog post, is when state gets coupled to a component's lifecycle, even when the state is passed to another function that doesn't know anything about svelte.</p>
    <p>In my application, I manage modal dialogs by storing the component I want to render alongside its props in a store and rendering it in the <code>layout.svelte</code> of my application. This store is also synchronized with browser history so that the back button works to close them. Sometimes, it's useful to pass a callback to one of these modals, binding caller-specific functionality to the child component:</p>
    <pre><code>const {value} = $props()
    const callback = () =&gt; console.log(value)
    const openModal = () =&gt; pushModal(MyModal, {callback})
    </code></pre>
    <p>This is a fundamental pattern in javascript. Passing a callback is just one of those things you do.</p>
    <p>Unfortunately, if the above code lives in a modal dialog itself, the caller component gets unmounted before the callback gets called. In Svelte 4, this worked fine, but in Svelte 5 <code>value</code> gets updated to <code>undefined</code> when the component gets unmounted. <a href="https://github.com/sveltejs/svelte/issues/15325">Here's a minimal reproduction</a>.</p>
    <p>This is only one example, but it seems clear to me that <em>any</em> prop that is closed over by a callback function that lives longer than its component will be undefined when I want to use it —&nbsp;with no reassignment existing in lexical scope.</p>
    <p>This just isn't how javascript works. And I think the reason Svelte works this way is that it is attempting to re-invent garbage collection. Because <code>value</code> is a prop of the component, it apparently has to be cleaned up at the end of the component's lifecycle. I'm sure there's a good engineering reason for this, but it is surprising.</p>
    <h2>Conclusion</h2>
    <p>Easy things are nice, but as Rich Hickey says, <a href="https://www.infoq.com/presentations/Simple-Made-Easy/">easy things are not always simple</a>. And like Joel Spolsky, I don't like being surprised. Svelte has always been full of magic, but with the latest release I think the cognitive overhead of reciting incantations has finally outweighed the power it confers.</p>
    <p>My point in this post is not to dunk on the Svelte team. I know lots of people like Svelte 5 (and react hooks). The point I'm trying to make is that there is a tradeoff between doing things for the user, and giving the user agency. Good software is built on understanding, not cleverness.</p>
    <p>I also think this is an important lesson to remember as AI-assisted coding becomes increasingly popular. Don't choose tools that alienate you from your work. Choose tools that leverage the wisdom you've already accumulated, and which help you to cultivate a deeper understanding of the discipline.</p>
    <p>Thank you to Rich Harris and team for many years of pleasant development. I hope that (if you read this) it's not <em>so</em> full of inaccuracies as to be unhelpful as user feedback.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[By the end of today, NASA's workforce will be about 10 percent smaller (131 pts)]]></title>
            <link>https://arstechnica.com/space/2025/02/by-the-end-of-today-nasas-workforce-will-be-about-10-percent-smaller/</link>
            <guid>43090862</guid>
            <pubDate>Tue, 18 Feb 2025 15:47:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/space/2025/02/by-the-end-of-today-nasas-workforce-will-be-about-10-percent-smaller/">https://arstechnica.com/space/2025/02/by-the-end-of-today-nasas-workforce-will-be-about-10-percent-smaller/</a>, See on <a href="https://news.ycombinator.com/item?id=43090862">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="app">
    <p><a href="#main">
  Skip to content
</a></p>



<main id="main">
            <article data-id="2076542">
  
  <header>
  <div>
    <div>
      

      

      <p>
        A dark and painful day at a space agency that brings so much light and joy to the world.
      </p>

      
    </div>

    <div>
    
    <p>
      In this illustration, NASA’s OSIRIS-REx spacecraft collects a sample from the asteroid Bennu. The agency's superpower is its capacity to dazzle us.

              <span>
          Credit:

          
          NASA/Goddard/University of Arizona

                  </span>
          </p>
  </div>
  </div>
</header>


  

  
      
    
    <div>
                      
                      
          
<p>Spread across NASA's headquarters and 10 field centers, which dot the United States from sea to sea, the space agency has had a workforce of nearly <a href="https://www.nasa.gov/organization/#:~:text=The%20agency's%20organization%20comprises%20a,for%20the%20benefit%20of%20humanity.">18,000 civil servants</a>.</p>
<p>However, by the end of today, that number will have shrunk by about 10 percent since the beginning of the second Trump administration four weeks ago. And the world's preeminent space agency may still face significant additional cuts.</p>
<p>According to sources, about 750 employees at NASA accepted the "fork in the road" offer to take deferred resignation from the space agency later this year. This sounds like a lot of people, but generally about 1,000 people leave the agency every year, so effectively, many of these people might just be getting paid to leave jobs they were already planning to exit from.</p>
<p>The culling of "probationary" employees will be more impactful. As it has done at other federal agencies, the Trump administration is generally firing federal employees who are in the "probationary" period of their employment, which includes new hires within the last one or two years or long-time employees who have moved into or been promoted into a new position. About 1,000 or slightly more employees at NASA were impacted by these cuts.</p>
<p>Adding up the deferred resignations and probationary cuts, the Trump White House has now trimmed about 10 percent of the agency's workforce.</p>
<p>However, the cuts may not stop there. Two sources told Ars that directors at the agency's field centers have been told to prepare options for a "significant" reduction in force in the coming months. The scope of these cuts has not been defined, and it's possible they may not even happen, given that the White House must negotiate budgets for NASA and other agencies with the US Congress. But this directive for further reductions in force casts more uncertainty on an already demoralized workforce and signals that the Trump administration would like to make further cuts.</p>

          
                      
                  </div>
                    
        
          
    
    <div>
          
          
<h2>An awful week</h2>
<p>Job losses are always terrible. This will be a dark and painful day at a space agency that brings so much light and joy to the world. Many of the probationary employees are just starting out their careers and were likely thrilled to land a job at NASA to explore the universe. And then all of that youthful energy and hope was extinguished this week.</p>
<p>It's possible to view these losses through a couple of lenses.</p>
<p>Yes, NASA is clearly losing some capability with these latest cuts. Many of these hires were likely being counted on to bring new energy into the space agency and become its future discoverers and leaders. And their jobs are being sacrificed for no clear purpose. Is it to increase funding for the military? Is it to pay for tax cuts for the rich? There is a lot of anger that the relatively thin budget line of NASA—less than one-half of 1 percent of the federal budget—is being sliced for such purposes.</p>

<p>There is also frustration at the indiscriminate nature of the cuts. The Trump White House and the Department of Government Efficiency, spearheaded by Elon Musk, have taken a meat-cleaver approach by firing a lot of people at the same time, and probably not the right people, through a messy and painful process. This is not dissimilar to job cuts during corporate mergers or bankruptcies. It's the fastest possible way to make cuts. There is no empathy, and it is a brutal process.</p>
<h2>Are cuts needed?</h2>
<p>It is also clear that, as within other federal agencies, there is significant "bloat" in NASA's budget. In some areas, this is plain to see, with the space agency having spent in excess of $3 billion a year over the last decade "developing" a heavy lift rocket, the Space Launch System, which used components from the Space Shuttle and costs an extraordinary amount of money to fly. In the meantime, the private launch industry has been running circles around NASA. Similarly, consider the Orion spacecraft. This program is now two decades old, at a cost of $1 billion a year, and the vehicle has never flown humans into space.</p>

          
                  </div>
                    
        
          
    
    <div>

        
        <div>
          
          
<p>One could go on. Much of the space community has been puzzled as to why NASA has been spending on the order of half a billion dollars to develop a Lunar Gateway in an odd orbit around the Moon. It remains years away from launching, and if it ever does fly, it would increase the energy needed to reach the surface of the Moon. The reason, according to multiple sources at the agency when the Gateway was conceived, is that the lunar space station would offer jobs to the current flight controllers operating the International Space Station, which is due to retire in 2030.</p>
<p>In recent years, NASA has been in the midst of a difficult transition. The agency deserves a lot of credit for nurturing a commercial space industry that now is the envy of the world. But as part of this, NASA has been moving away from owning and operating its rockets, spacecraft, and other hardware and buying services from this commercial space industry. This transition from traditional space to commercial space marks an important step for NASA to remain on the cutting edge of exploration and science rather than trying to compete with US industry.</p>
<p>But it is also a painful step.</p>
<p>The key is ensuring that any future cuts at NASA are not indiscriminate. If and when Jared Isaacman is confirmed by the US Senate as the next NASA administrator, it will be up to him and his team to make the programmatic decisions about which parts of the agency are carrying their weight and which are being carried, which investments carry NASA into the future, and which ones drag it into the past. If these future cuts are smart and position NASA for the future, this could all be worth it. If not, then the beloved agency that dares to explore may never recover.</p>


          
                  </div>

                  
          






  <div>
  <div>
          <p><a href="https://arstechnica.com/author/ericberger/"><img src="https://arstechnica.com/wp-content/uploads/2016/05/e.berger-45959.jpg" alt="Photo of Eric Berger"></a></p>
  </div>

  <div>
    

    <p>
      Eric Berger is the senior space editor at Ars Technica, covering everything from astronomy to private space to NASA policy, and author of two books: <a href="https://www.harpercollins.com/products/liftoff-eric-berger?variant=32126620205090"><i>Liftoff</i></a>, about the rise of SpaceX; and <a href="https://benbellabooks.com/shop/reentry/"><i>Reentry</i></a>, on the development of the Falcon 9 rocket and Dragon. A certified meteorologist, Eric lives in Houston.
    </p>
  </div>
</div>


  <p>
    <a href="https://arstechnica.com/space/2025/02/by-the-end-of-today-nasas-workforce-will-be-about-10-percent-smaller/#comments" title="191 comments">
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 80 80"><defs><clipPath id="bubble-zero_svg__a"><path fill="none" stroke-width="0" d="M0 0h80v80H0z"></path></clipPath><clipPath id="bubble-zero_svg__b"><path fill="none" stroke-width="0" d="M0 0h80v80H0z"></path></clipPath></defs><g clip-path="url(#bubble-zero_svg__a)"><g fill="currentColor" clip-path="url(#bubble-zero_svg__b)"><path d="M80 40c0 22.09-17.91 40-40 40S0 62.09 0 40 17.91 0 40 0s40 17.91 40 40"></path><path d="M40 40 .59 76.58C-.67 77.84.22 80 2.01 80H40z"></path></g></g></svg>
    191 Comments
  </a>
      </p>
              </div>
  </article>


  


  


  <div>
    <header>
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 40 26"><defs><clipPath id="most-read_svg__a"><path fill="none" d="M0 0h40v26H0z"></path></clipPath><clipPath id="most-read_svg__b"><path fill="none" d="M0 0h40v26H0z"></path></clipPath></defs><g clip-path="url(#most-read_svg__a)"><g fill="none" clip-path="url(#most-read_svg__b)"><path fill="currentColor" d="M20 2h.8q1.5 0 3 .6c.6.2 1.1.4 1.7.6 1.3.5 2.6 1.3 3.9 2.1.6.4 1.2.8 1.8 1.3 2.9 2.3 5.1 4.9 6.3 6.4-1.1 1.5-3.4 4-6.3 6.4-.6.5-1.2.9-1.8 1.3q-1.95 1.35-3.9 2.1c-.6.2-1.1.4-1.7.6q-1.5.45-3 .6h-1.6q-1.5 0-3-.6c-.6-.2-1.1-.4-1.7-.6-1.3-.5-2.6-1.3-3.9-2.1-.6-.4-1.2-.8-1.8-1.3-2.9-2.3-5.1-4.9-6.3-6.4 1.1-1.5 3.4-4 6.3-6.4.6-.5 1.2-.9 1.8-1.3q1.95-1.35 3.9-2.1c.6-.2 1.1-.4 1.7-.6q1.5-.45 3-.6zm0-2h-1c-1.2 0-2.3.3-3.4.6-.6.2-1.3.4-1.9.7-1.5.6-2.9 1.4-4.3 2.3-.7.5-1.3.9-1.9 1.4C2.9 8.7 0 13 0 13s2.9 4.3 7.5 7.9c.6.5 1.3 1 1.9 1.4 1.3.9 2.7 1.7 4.3 2.3.6.3 1.3.5 1.9.7 1.1.3 2.3.6 3.4.6h2c1.2 0 2.3-.3 3.4-.6.6-.2 1.3-.4 1.9-.7 1.5-.6 2.9-1.4 4.3-2.3.7-.5 1.3-.9 1.9-1.4C37.1 17.3 40 13 40 13s-2.9-4.3-7.5-7.9c-.6-.5-1.3-1-1.9-1.4-1.3-.9-2.8-1.7-4.3-2.3-.6-.3-1.3-.5-1.9-.7C23.3.4 22.1.1 21 .1h-1"></path><path fill="#ff4e00" d="M20 5c-4.4 0-8 3.6-8 8s3.6 8 8 8 8-3.6 8-8-3.6-8-8-8m0 11c-1.7 0-3-1.3-3-3s1.3-3 3-3 3 1.3 3 3-1.3 3-3 3"></path></g></g></svg>
      
    </header>
    <ol>
              <li>
                      <a href="https://arstechnica.com/gadgets/2025/02/x-is-reportedly-blocking-links-to-secure-signal-contact-pages/">
              <img src="https://cdn.arstechnica.net/wp-content/uploads/2025/02/GettyImages-1231496453-Large-768x432.jpeg" alt="Listing image for first story in Most Read: X is reportedly blocking links to secure Signal contact pages" decoding="async" loading="lazy">
            </a>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                    <li>
                    
        </li>
                  </ol>
</div>


  

  </main>





  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tariffs result in 10% laptop price hike in U.S. says Acer CEO (263 pts)]]></title>
            <link>https://www.tomshardware.com/laptops/acer-ceo-10pc-price-rise-tariffs</link>
            <guid>43090684</guid>
            <pubDate>Tue, 18 Feb 2025 15:33:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/laptops/acer-ceo-10pc-price-rise-tariffs">https://www.tomshardware.com/laptops/acer-ceo-10pc-price-rise-tariffs</a>, See on <a href="https://news.ycombinator.com/item?id=43090684">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-body">
<p>Acer Laptop prices in the U.S. are set to rise by 10% from March 2025, commented CEO Jason Chen in an interview with <a data-analytics-id="inline-link" href="https://www.telegraph.co.uk/business/2025/02/16/computer-giant-to-raise-prices-by-10pc-in-response-to-trump/" data-url="https://www.telegraph.co.uk/business/2025/02/16/computer-giant-to-raise-prices-by-10pc-in-response-to-trump/" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">The Telegraph</a>. Chen states that the price hike is a direct result of the Trump administration's <a data-analytics-id="inline-link" href="https://www.tomshardware.com/pc-components/tech-enthusiasts-brace-for-trump-tariff-price-hikes-on-new-components" data-before-rewrite-localise="https://www.tomshardware.com/pc-components/tech-enthusiasts-brace-for-trump-tariff-price-hikes-on-new-components">incoming tariffs</a>.</p><p>"We will have to adjust the end user price to reflect the tariff," Chen said to The Telegraph. "We think 10% probably will be the default price increase because of the import tax. It's very straightforward," the Acer CEO continued.</p><p>The decision to increase prices was reportedly confirmed last week, with the Taiwanese tech giant remaining unaffected by tariffs on products that left China before February. Therefore, stock hitting U.S. channels afterward will be subject to increased tariffs.</p><p>Acer's most expensive laptop on sale, the <a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/acer-predator-triton-17-x-hands-on" data-before-rewrite-localise="https://www.tomshardware.com/news/acer-predator-triton-17-x-hands-on">Acer Predator Triton</a> 17-inch gaming laptop, is currently $3,799 at Best Buy. But, next month that price is set to increase to $4,178 if increases are passed directly to consumers. It's unclear if the blanket price rise will also affect products currently sitting on shelves, but it's likely that as new stock arrives, older stock will also be subject to the price increase.</p><p>Chen notes that the incoming tariff may offer an 'excuse' for others in the segment to raise prices by more than 10%. No other PC manufacturer has made a public statement regarding the incoming tariffs and inevitable price rises.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-1200-80.jpg.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-320-80.jpg" alt="Acer Predator Triton 17 X" srcset="https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF-1200-80.jpg 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/9ZYDEpNG4ZUa8GxJsXGLRF.jpg"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Tom's Hardware)</span></figcaption></figure><p>Acer shifted the assembly of its desktop PCs away from China during Trump's previous term and says that it is "looking at different supply chains beyond China", with U.S. production "one of the options" being considered.</p><p>The Consumer Technology Association claims that 80% of U.S. laptop imports currently come from China and that the incoming tariff could set U.S. customers back a collective $143 billion, hurting sales. Moreover, the benefits to U.S. industry may be meager, with U.S. production forecast to rise by only 8% and prices potentially rising by up to 45%.</p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-P4sFCQv7kMAXmCkp7o3CnZ"><section><p>Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.</p></section></div><p>A <a data-analytics-id="inline-link" href="https://www.digitimes.com/news/a20250218VL202/acer-notebooks-price-us-jason-chen.html#:~:text=Acer%20CEO%20Jason%20Chen%20confirmed,%2C%20including%20manufacturing" data-url="https://www.digitimes.com/news/a20250218VL202/acer-notebooks-price-us-jason-chen.html#:~:text=Acer%20CEO%20Jason%20Chen%20confirmed,%2C%20including%20manufacturing" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Digitimes</a> senior supply chain analyst further suggests that the US's proposed 100% tariff on semiconductors could mean that companies such as Nvidia, AMD, and Apple could all face pricing challenges ahead. This is supposedly due to the lack of overseas manufacturing, though the U.S. government is <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tech-industry/us-govt-pushing-tsmc-and-intel-to-create-joint-venture-in-the-us-report" data-before-rewrite-localise="https://www.tomshardware.com/tech-industry/us-govt-pushing-tsmc-and-intel-to-create-joint-venture-in-the-us-report">pushing TSMC and Intel</a> to bolster local manufacturing.</p><p>Until Acer manages to find a U.S.-based provider for its laptops, the real cost of the tariffs is likely to be passed onto the consumer. With other manufacturers still silent, if Acer's approach is anything to go by, it sets an ill-portent for U.S. consumers.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Scripton – Python IDE with Built-In Realtime Visualizations (312 pts)]]></title>
            <link>https://scripton.dev</link>
            <guid>43090214</guid>
            <pubDate>Tue, 18 Feb 2025 14:57:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://scripton.dev">https://scripton.dev</a>, See on <a href="https://news.ycombinator.com/item?id=43090214">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        
        


<div>
    <p><img srcset="https://scripton.dev/assets/images/splash-screenshot@2x.png 2x"></p><h2>A New Kind of <span>Python IDE</span></h2>
    
</div>

<section>
    <h3>Dynamic visualizations are as simple as a loop</h3>
    <div>
            <pre><span>for</span> t <span>in</span> <span>range</span><span>(</span><span>100</span><span>)</span><span>:</span>
    <span>plot</span><span>(</span>
        <span>x</span><span>=</span>x<span>,</span>
        <span>y</span><span>=</span>np<span>.</span><span>cos</span><span>(</span>x <span>+</span> t <span>/</span> <span>10</span><span>)</span>
    <span>)</span>
    time<span>.</span><span>sleep</span><span>(</span><span>0.01</span><span>)</span></pre>

            <p>Visualize in realtime directly from your Python scripts — no&nbsp;notebooks, servers, or
                browsers required.</p>
            <p>Visualizations are displayed in a <a href="https://docs.scripton.dev/ide/manual/visualization" target="_blank">dedicated
                    tab</a> right within the IDE.</p>
        </div>

    <h3>Integrated plotting toolkits</h3>
    <div>
        <div>
            <p><img srcset="https://scripton.dev/assets/images/plot-lyra-uncertainty@2x.png 2x">
            </p>
            <p><img srcset="https://scripton.dev/assets/images/plot-orion-density@2x.png 2x"></p>
        </div>
        <div>
            <p>
                Scripton includes built-in plotting toolkits that expose the capabilities of <a href="https://plotly.com/javascript/" target="_blank" rel="noopener noreferrer">Plotly</a>
                and
                <a href="https://observablehq.com/plot/" target="_blank" rel="noopener noreferrer">Observable
                    Plot</a> directly to Python.
            </p>
            <p>No installation is necessary — these libraries are automatically
                available when executing in Scripton.</p>

            <pre><span>from</span> scripton<span>.</span>lyra <span>import</span> plot
<span>import</span> numpy <span>as</span> np

<span># Evenly spaced values between 0 and 2π</span>
x <span>=</span> np<span>.</span><span>linspace</span><span>(</span><span>0</span><span>,</span> <span>2</span> <span>*</span> np<span>.</span><span>pi</span><span>)</span>

<span># Plot sin(x)</span>
<span>plot</span><span>(</span><span>{</span><span>'x'</span><span>:</span> x<span>,</span> <span>'y'</span><span>:</span> np<span>.</span><span>sin</span><span>(</span>x<span>)</span><span>}</span><span>)</span></pre>

            <p>For more details, check out the Scripton plotting documentation for <a href="https://docs.scripton.dev/api/plot/lyra/overview" target="_blank">Lyra</a>
                (toolkit for Plotly) and <a href="https://docs.scripton.dev/api/plot/orion/overview" target="_blank">Orion</a>
                (toolkit for Observable Plot).
            </p>
        </div>
    </div>

    <h3>Realtime visualizations for science &amp; engineering</h3>
    <div>
        <div>
                
                <p>Realtime colormapped visualization of 1280×1080 depthmaps (as NumPy
                    matrices) in Scripton.
                </p>
            </div>
        <div>
            <p>
                Scripton's architecture combines high-performance interprocess communication for low
                latency and high throughput on the backend, while leveraging GPU-accelerated rendering to
                deliver real-time visualizations.
            </p>
            <p>
                Visualizing matrices (2D NumPy arrays, PyTorch tensors, …) is as simple as this —
            </p>
            <pre><span>import</span> numpy <span>as</span> np
<span>from</span> scripton <span>import</span> show

x <span>=</span> np<span>.</span><span>arange</span><span>(</span><span>100</span><span>)</span>
toeplitz <span>=</span> np<span>.</span><span>abs</span><span>(</span>x<span>[</span><span>:</span><span>,</span> <span><span>None</span></span><span>]</span> <span>-</span> x<span>)</span>

<span># Show a colormapped version of the matrix</span>
<span>show</span><span>(</span>toeplitz<span>)</span></pre>

            <p>Learn more about <a href="https://docs.scripton.dev/api/visualize/matrix" target="_blank">visualizing
                    matrices</a>.</p>

        </div>
    </div>


    <h3>Built-in graphics toolkit</h3>
    <div>
        <div>
            <div>
                <p><img src="https://scripton.dev/assets/images/canvas-attractor.png"></p>
                <p>↑ A de Jong attractor rendered using Scripton's canvas API. Comprising a
                    million <code>draw_circle</code> calls — one for each point.</p>
            </div>
            <div>
                <p><img src="https://scripton.dev/assets/images/canvas-ransac.png"></p>
                <p>↑ RANSAC estimation of a circle from noisy points in the presence of
                    outliers.
                    Each candidate circle is drawn using Scripton's canvas API from directly within the sampling
                    loop, with its color representing its inlier ratio.
                </p>
            </div>
        </div>
        <div>
            <p>The built-in Scripton <a href="https://docs.scripton.dev/api/visualize/canvas/overview" target="_blank">canvas library</a>
                provides a fast and powerful 2D raster graphics API.</p>
            <div>
                <pre><span>from</span> scripton<span>.</span>canvas <span>import</span> Canvas

canvas <span>=</span> <span>Canvas</span><span>(</span><span>width</span><span>=</span><span>290</span><span>,</span> <span>height</span><span>=</span><span>200</span><span>)</span>

<span>for</span> i <span>in</span> <span>range</span><span>(</span><span>10</span><span>)</span><span>:</span>
    canvas<span>.</span><span>draw_circle</span><span>(</span>
        <span>x</span><span>=</span><span>100</span> <span>+</span> <span>5</span> <span>*</span> i<span>,</span>
        <span>y</span><span>=</span><span>100</span><span>,</span>
        <span>radius</span><span>=</span><span>10</span> <span>+</span> <span>10</span> <span>*</span> i<span>,</span>
        <span>fill</span><span>=</span><span>'#3D79FF20'</span>
    <span>)</span></pre>
                <p><img src="https://scripton.dev/assets/images/glyph-produces.svg">
                <img src="https://scripton.dev/assets/images/canvas-circles.png">
            </p></div>

            <p>The outputs appear directly in the IDE in realtime in a <a href="https://docs.scripton.dev/ide/manual/visualization" target="_blank">dedicated tab</a>.</p>

            <p>
                Learn more about Scripton's <a href="https://docs.scripton.dev/api/visualize/canvas/overview" target="_blank">canvas graphics API</a>.</p>
        </div>
    </div>

    <h3>Rapidly prototype interactivity</h3>
    <div>
        <div>
                
                <p>The slider controls the maximum depth threshold. Changing the slider
                    re-invokes the <code>render</code> callback shown in the code snippet, which updates
                    the visualizations based on the new state. It also returns the updated user interface, which
                    itself may be dynamic.
                </p>
            </div>
        <div>
            <p>Easily add interactivity to your scripts using Scripton's UI toolkit.</p>
            <pre><span>from</span> scripton <span>import</span> ui

<span><span>...</span></span>

<span>def</span> <span>render</span><span>(</span>state<span>)</span><span>:</span>
    <span># Process using current state</span>
    depth<span>,</span> image <span>=</span> <span>mask_using_depth</span><span>(</span>
        <span>threshold</span><span>=</span>state<span>.</span><span>threshold</span>
    <span>)</span>

    <span># Display results</span>
    <span>show</span><span>(</span>depth<span>,</span> <span>title</span><span>=</span><span>'Depth'</span><span>,</span> <span>key</span><span>=</span><span>'depth'</span><span>)</span>
    <span>show</span><span>(</span>image<span>,</span> <span>title</span><span>=</span><span>'Masked Output'</span><span>,</span> <span>key</span><span>=</span><span>'image'</span><span>)</span>

    <span>def</span> <span>reset</span><span>(</span><span>)</span><span>:</span>
        state<span>.</span><span>threshold</span> <span>=</span> <span>20</span>

    <span>return</span> ui<span>.</span><span>HStack</span><span>(</span>
        ui<span>.</span><span>Button</span><span>(</span>
            <span>label</span><span>=</span><span>'Reset'</span><span>,</span>
            <span>on_click</span><span>=</span>reset
        <span>)</span><span>,</span>
        ui<span>.</span><span>Slider</span><span>(</span>
            <span>label</span><span>=</span><span>'Depth Threshold'</span><span>,</span>
            <span>value</span><span>=</span>state<span>.</span><span>bind</span><span>.</span><span>threshold</span><span>,</span>
            <span>range</span><span>=</span><span>(</span><span>0</span><span>,</span> <span>20</span><span>)</span>
        <span>)</span>
    <span>)</span></pre>
            <p>Learn more about the <a href="https://docs.scripton.dev/api/interact/user-interfaces/overview" target="_blank">UI toolkit</a>.</p>
        </div>
    </div>

    <h3>A rich REPL by your side</h3>
    <div>
        <div>
            <div>
                <p><img srcset="https://scripton.dev/assets/images/repl-multi-cursor@2x.png 2x"></p>
                <p>↑ Multi-line editing with multiple cursors.</p>
            </div>
            <div>
                <p><img srcset="https://scripton.dev/assets/images/repl-folding@2x.png 2x"></p>
                <p>↑ Folding outputs.</p>
            </div>
            <div>
                <p><img srcset="https://scripton.dev/assets/images/repl-exception@2x.png 2x"></p>
                <p>↑ Rich exceptions. Clicking an exception location jumps to it in an editor.
                </p>
            </div>
        </div>
        <div>
            <p>Scripton includes a unique Python REPL that's designed to be a natural extension of your coding
                environment.</p>
            <p>The REPL offers a full-featured editing experience with features like auto-completion, multi-line
                editing, and multiple cursor support. Outputs can be collapsed to save space, and Python
                exceptions are syntax-highlighted with clickable navigation to source code. Rich inline outputs
                are displayed for objects like Pandas data frames and PIL images.</p>
            <p>Learn more about the <a href="https://docs.scripton.dev/ide/manual/repl" target="_blank">REPL's
                    capabilities.</a></p>
        </div>
    </div>

    <h3>Frictionless and fast debugging</h3>
    <div>
        <div>
            <div>
                <p><img srcset="https://scripton.dev/assets/images/debug-breakpoint@2x.png 2x"></p>
                <p>↑ Easy set breakpoints by clicking next to line numbers.</p>
            </div>

            <div>
                <p><img srcset="https://scripton.dev/assets/images/debug-toolbar@2x.png 2x"></p>
                <p>↑ Use the debug toolbar (or keyboard shortcuts) to step through code.</p>
            </div>

            <div>
                <p><img srcset="https://scripton.dev/assets/images/debug-callstack@2x.png 2x"></p>
                <p>↑ Navigate the callstack and view the associated variables for each frame.
                    The REPL can be used to evaluate debug code in the context of the selected stack frame.
                </p>
            </div>
        </div>
        <div>
            <p>Debugging in Scripton is simple — set a breakpoint and run. No special configurations
                necessary.</p>

            <p>Learn more about <a href="https://docs.scripton.dev/ide/manual/debugging" target="_blank">debugging in
                    Scripton</a>.</p>
        </div>
    </div>

    <h3>Built-in support for many third party libraries</h3>
    <div>
            <div>
                <p><img srcset="https://scripton.dev/assets/images/lib-seaborn@2x.png 2x"></p>
                <p>↑ Matplotlib/Seaborn plots.</p>
            </div>

            <div>
                <p><img srcset="https://scripton.dev/assets/images/lib-symbols@2x.png 2x"></p>
                <p>↑ The symbol explorer displays extended information for objects like PyTorch
                    tensors, NumPy arrays, and PIL images.</p>
            </div>
        </div>

    <h3>For serious work and fun explorations</h3>
    <div>
        <div>
                
                <p>
                    An interactive demonstration showing the construction of a Bézier curve by composition of
                    linear
                    interpolation. Built using Scripton's <code>canvas</code> and <code>ui</code> toolkits.
                </p>
            </div>
        <p>Scripton's designed and engineered to serve a wide range of needs, from research and industrial
                applications to creative explorations.</p>
    </div>
</section>


<section>
    <h3>System Requirements</h3>
    <div>
        <p>Scripton currently requires macOS (Apple Silicon based models and older Intel based
            models are both supported). Windows and Linux support is planned.</p>

        
    </div>

    <h3>Contact</h3>
    
</section>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The ideal candidate will be punched in the stomach (248 pts)]]></title>
            <link>https://www.scottsmitelli.com/articles/ideal-candidate/</link>
            <guid>43089150</guid>
            <pubDate>Tue, 18 Feb 2025 13:22:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.scottsmitelli.com/articles/ideal-candidate/">https://www.scottsmitelli.com/articles/ideal-candidate/</a>, See on <a href="https://news.ycombinator.com/item?id=43089150">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><p>What’s the craziest thing you’ve ever done?</p><p><strong>“It would feel so good to say goodbye, when I’m with you I wanna die!”</strong> Typically you would try to time your footsteps to the beat of the song—a permanent habit from your time in a marching band—but the tempo of this one is not compatible with your walking pace. You’re singing at full volume now. <strong>“And all that time was such a waste, I never wanna see your face.”</strong> You turn to the left, then to the right, and a quick glance behind. There’s an elementary school on the other side of the fence, but nobody is outside at the moment. You’re satisfied that it is safe to continue. <strong>“I just want to get the fuck away!”</strong></p><p>You just demonstrated self-awareness. Forethought. Maybe you’re not crazy.</p><p>You are, however, several miles beyond the last familiar landmark. There’s nothing really specific that you’re navigating toward, no clear final destination in mind. This sort of walk has no natural end of its own. It’s over when you feel like you’ve traveled far enough to escape the compulsion to keep increasing that distance.</p><p>You spot another mangled and flattened plastic bottle at the edge of the sidewalk. You give this one a little kick too. It slides unsatisfyingly and comes to rest in the grass. Maybe this journey is simply over when you decide it’s over. Perhaps there is no special signal that flashes brightly to tell you that.</p><p>Ugh, that is an exhausting thought. For the moment, it’s easier to keep walking.</p><hr><p><em>“The ideal candidate will be punched in the stomach.”</em></p><p>Aside from that one odd line of text, the responsibilities and requirements were a perfect match.</p><p>Ten minutes ago you weren’t considering switching jobs—you hadn’t even been searching for anything outside of your current role. It was nothing but a stroke of pure randomness that scrolled this posting across your screen. Your subconscious latched onto it before your thinking brain knew what it was looking at. This job, it was <em>you.</em> Every sentence, every bullet point, they all described you and your career experience up to that point. As far as you could tell, they had been searching for nobody except you. Except for the punching part, that was a little weird. But still, every single other word on that page matched your skills and your experience.</p><p>You fire off a copy of your résumé and a quick but reasonably well-crafted cover letter. Early Monday morning you receive an email from their internal recruiter. The phone call comes later that afternoon, and by Wednesday morning you’re arriving in front of their midtown headquarters for an interview.</p><p>The company easily employs tens of thousands of people globally, and the opulence of the building’s lobby is accordant to that kind of scale. The first three stories of this office tower are devoted to the lobby, reception area, and mezzanine. You’re not one to throw the word “grand” around, but this might be one of the few spaces where the description really fits. You walk up to one of the five receptionists—the only one not currently interacting with a guest—and tell her who you are. She takes your picture, scans your driver’s license, and prints a visitor badge that you delicately align over your pocket. Gotta make sure it’s perfect; can’t make a good first impression with an askew badge. “Seventeenth floor,” she yawns. You thank her and walk toward the elevators.</p><p>It is close to ten o’clock in the morning and a steady stream of employees is still hustling in. They pass through a line of glass-gated turnstiles. As each employee taps their badge, the turnstile emits a pleasant green and the glass retracts just long enough for them to pass through, then it snaps closed again. From a distance it kind of resembles a dozen mouths snapping up little morsels of food. You were directed to the gate at the far end, which the receptionist opens manually as you approach. Beyond that, two banks of eight elevators each. Doors open, people stream in, doors close. You embed yourself within a cluster of bodies who enter one of the open elevator cars and reach to press the button labeled “17,” but there are no buttons. All you find is a large screen that says “Serving floors 4, 7, 11, 20…” but no 17. You push yourself out of the car and back out into the lobby. There are no call buttons either. Each door has a screen above it that indicates the floors that will be visited, yet none of them say 17. There is no pattern that you can discern by looking above the doors or walking between the two elevator banks.</p><p>You’re getting frazzled, and it’s starting to get late. You wanted to arrive a few minutes early to be calm and collected, but this is making you confused and concerned. You push your way back out through the gate and return to the receptionist you just spoke to, who is now checking in another visitor. When she sees you again, her eyes roll a little bit. “So, when you go through the turnstile, it calls the elevator for you. Look at the screen on your left, and go to the elevator car it says.” Clearly you are not the first person she’s given these instructions to.</p><p>“Oh. Thank you.” You return to the gate to do as instructed. Car 5. Sure enough, the screen over the doors of the fifth elevator car includes 17. As you wait for the doors to open, you take one more look at the sheer scale of the lobby. Sunlight pours through the window and dances across the marble floor as it reflects off the chomping turnstiles. The overhead lights, dear God, how did they suspend things so large so far above the ground?</p><p>As the elevator doors close, you have a fleeting thought: Whoever has to climb the ladder and maintain those light fixtures, hopefully they get hazard pay.</p><hr><p>The interview, consisting of three 60-minute meetings back-to-back in a conference room named “Csonka” for some reason, is basically cake. You cannot recall another instance where things have gone so well, with answers flowing so freely, where everybody in attendance is just energized to be there. Smiles are flashed, firm handshakes are exchanged, “I look forward to working with you” are the parting words from everyone you meet. The final meeting is a one-on-one with Chris the hiring manager, the person who might very well be your future supervisor based on your read of the situation. This, too, goes well. It’s gotta be a dream. It’s gotta be fake. Clearly there is something about this that you have completely missed.</p><p>“So, do you have any questions for me?”</p><p>You push aside your elation for a second and ponder Chris’s question. Actually… yeah, there is one. That bit from the job posting about being punched in the stomach. You diplomatically ask him about it.</p><p>“Well, yeah. That’s the role. You would be getting punched in the stomach. By me. That is the core of the day-to-day responsibilities planned for this position.”</p><p>“So… I come in, you punch me in the stomach, and then…”</p><p>“Then you’re done! Also, and this is more of a per-department thing, but in our org we’re not sticklers about the whole nine-to-five, track-your-hours thing. Once you’ve been punched in the stomach, you’re free to go home if there’s no other priority task.”</p><p>“I come in, you punch me in the stomach, and I go home?”</p><p>“Exactly right. It sounds like we won’t really have to spend all that much time onboarding. You seem to know just what needs to be done to really make an impact on this team. We’d be excited to have you join.”</p><p>For the first time in nearly three hours, you are absolutely speechless. There is no conceivable follow-up question for something like that. No insights, no empty platitudes, no rational thing that could be said to bring this exchange back into any territory that could broadly be considered normal.</p><p>“Ah. Thank you for the explanation.” The only words that were polite but nonspecific enough to fill the absolutely dead air that now fills the room.</p><p>“We’ll be in touch!”</p><hr><p>It is now Friday afternoon, and you’re back in the lobby having a new visitor badge printed. You know how the elevators work now, plus the receptionist from the other day is busy with somebody else. There’s a good chance you’ll make it through this part without anyone thinking you’re some kind of moron.</p><p>Chris had emailed you that the role was yours if you wanted it, and he extended an invitation to show you around the office some more before negotiations began. He greets you as you step off the elevator onto the seventeenth floor, and the whirlwind tour begins.</p><p>The entire floor is an open plan with desks grouped into islands, except for a number of executive-looking offices clustered in the far corners. The center of the floor is a ring of conference rooms. The sun pours through the floor-to-ceiling glass panes on the south face of the building. Each employee is sitting in a gaming chair that looks very expensive but also a little ridiculous. There are two, sometimes three computer screens at each workstation, with a total display area larger than the TV in your living room. Jeans and pullover hoodies are the predominant dress code, although Chris wears a sweater vest on top of a plaid collared shirt.</p><p>All around you, the typical hallmarks of a company with slightly more money than sense. Dart boards (plural), ping-pong tables (plural), a kitchen area stocked with free drinks and snacks, and an entire wall of displays showing real-time numbers and charts. Everybody seems, at the moment, to be in the “work hard” mode rather than the “play hard” one. The PlayStation nook is unoccupied and a brief scan of the space only finds two employees actively drinking beers. Chris taps the shoulder of one of these people, who then removes his prominent noise-canceling headphones.</p><p>“Jon! Hey, Jon the man!” That particular adulation might’ve made sense for a rhyming name like Stan or Dan; this just sounded like a catachresis. “You got a second? I wanted you to meet the candidate we’ve been talking to.”</p><p>You introduce yourself to Jon, and he reciprocates.</p><p>“So yeah, he’s gonna be helping us out soon. Isn’t that right?” Chris slaps you on the back of the shoulder, rather hard. You smile politely.</p><hr><p>Walking into salary negotiations with Chris, you suspected that this was not a job that you particularly wanted. You failed to see the allure of anything he had just shown you, especially considering that the entire scope of the job was to get punched in the stomach and then leave. Still, no point in walking away before finding out where this particular road might lead.</p><p>Chris slides you a binder—literally a three-ring binder—filled with sheets of paper and benefits booklets. It’s yours to keep regardless of the choice you make. He summarizes the top-line bits: Medical/dental/vision fully paid by the company, a sponsored 401(k) plan with an employer match, “unlimited”-in-air-quotes paid time off, pretax employee stock purchase plan, and a separate stock option grant on top of it all.</p><p>“We’ve considered your past experience and skill set and want to bring you on as an individual contributor, level five. You’re a little bit on the low end of that band, but this is what we think your total package should be.” He pulls a sheet of paper out of his folder and slides it face-up toward your side of the table.</p><p>Jesus Christ. <em>Jesus Actual Christ.</em></p><p>Conventional wisdom states that you always negotiate. You always try to get more. But this, this is <em>at least</em> triple what you’re currently making. You close your eyes tightly and open them again, thinking maybe you’re misreading the numbers and something’s getting transposed or… who knows. Nope, that’s really what it says.</p><p>You briefly try to formulate some kind of negotiating tactic, but these numbers are <em>complicated</em> and your ability to mentally estimate percentages is faltering. It’s like spending a lifetime calculating tip amounts for dinner at Chili’s, and now you’re trying to do the same thing in a fancy black tie steakhouse. The numbers just don’t come. Oh well, screw it, this is more than fine enough.</p><p>“This all looks fantastic,” you say.</p><p>“Great! We’ll give you a little bit of time to go over the benefits package, maybe talk it over with your family or whoever. We’ll get you the formal paperwork first thing Monday. Do you have more of a sense of when you’d be able to start?”</p><p>You believe that you owe your current employer the customary two weeks as a professional courtesy. Chris is visibly disappointed that you feel the need to make him wait that long. Through some kind of mind trick, he talks you down to one week.</p><hr><p>At home, alone with your thoughts, you start reading through the small library of documentation that Chris had given you. Every single thing about this company’s compensation package is more generous, more comprehensive, and potentially more lucrative than any other thing you have ever been offered by any employer you have been with before. This will be the highest base salary you have ever received and—if you’re being brutally honest with yourself—plausibly the most you might ever receive.</p><p>On top of that, this is a publicly-traded company, and that stock option grant has a not-insignificant number of shares listed on it. You can easily look up the day’s trading price and figure out roughly what that grant is worth. It requires the use of a calculator, but holy moly. Of course, they’re doled out monthly over a four-year vesting period. There’s also a one-year cliff where you won’t get squat if you leave during the first twelve months.</p><p>Twelve months. You stare across the room for a moment. Twelve months… of punches. You look down at your calculator’s display, still dutifully showing the substantial and precise number yielded by the most recent press of the “equals” button. For the first time in a long time, you have an actual impactful decision to make and a whole lot of conflicting opinions about which path to take.</p><p>You’re vaguely aware of philosophical terms like “principles” and “values,” but damned if you can remember the specific differences between the two. You’d be compromising, uh… hell, you don’t even know. It feels somehow amoral to try to maximize monetary gain above all other factors. But that’s the way this world works sometimes: You have to do whatever you can to get yourself ahead in life, and once you transcend above this constant grind you can finally, you know, uh… dammit.</p><p>Okay, new approach. You have a job, it pays <em>X</em>. Do you like doing it? Well, no, not really. Is there any specific thing you can think of that you would miss if you were to leave? Nope. Is there any chance you could negotiate to get them to give you even a fraction of the <em>3X</em> that this new place is offering? Almost certainly no, and it would be cringingly uncomfortable to even attempt it.</p><p>Now the new place. Aside from the fact that you would be getting punched in the stomach every day, is there <em>anything</em> about the arrangement that makes it less attractive than the job you already have? You think long and hard, replaying event after event in your mind looking for outliers… Equivalent commute, nicer office, shorter hours. Effectively no other negatives. Everything tells you to make the jump. Aside from the punching. That’s, you know… You can probably learn to cope with that, right?</p><p>Monday comes. You sign the offer and it is countersigned with a bit of scrawl you can’t decipher, most likely belonging to a member of HR or Legal that you will never encounter again. You inform your current manager that you’ll be gone before this time next week. He does not hide his disappointment, and his response makes you feel terrible. Why? This is supposed to be business, isn’t it? You never really understood what good could come from bringing emotion into it.</p><p>Your soon-to-be-ex-manager informs the rest of your team the following day, and a stream of tepid congratulations follow. Next week they’ll all be stuck doing the tasks you left behind. You know exactly how it feels to be on the receiving end of that; you’ve watched peers leave during inopportune times before.</p><p>Is there ever really an opportune time?</p><p>The next three and a half days are just strange. Nobody asks you to do anything. Nobody calls on you in meetings. It is like you have some kind of contagious disease and everybody is trying to keep their distance from you. <em>It is as if you are slowly turning invisible.</em> HR calls you down for a customary exit interview to try to determine what might have been going wrong and what they could have done to keep you. When you tell the interviewer who your next employer is and some of what they are offering, the response is simply, “Ah. I understand your reasoning now. Well, that’s all the questions I had.”</p><p>You return to your desk, take one last look through the drawers, and turn off the screen. You stand up your ID badge in between some of the number keys on the keyboard, sling your bag over your shoulder, and walk out for the last time.</p><p>Your team does not see you leave. They’re all in a conference room conducting a meeting that you were not invited to.</p><hr><p>Monday morning, 8:50 a.m., moderate drizzle. The lobby looks starkly different from the last two times you’ve been here, with a distinctly orange hue coming from the overhead light fixtures. The flashes of green from the turnstiles give your skin an almost putrid pallor. You don’t have your ID badge yet, so you’re waiting for the receptionist to print a visitor badge and let you in. As per the universe’s sick sense of humor, you got the receptionist from your first visit again.</p><p>“Seventeenth floor,” she sighs. “You remember how the elevators work?”</p><p>“Sure do,” you try to smile. Deep down, though, the interaction hurt. You work here now, she and you are supposed to be on the same team. Why’s she being so snarky to her <em>colleague?</em></p><p>Oh well, game time. Can’t let things like that get to you.</p><p>You exit the elevator at the seventeenth floor. Nobody greets you. There is no obvious place to sit while you wait, so you slowly retrace the steps that you took when Chris showed you around. You spot a pair of faces you recognize from your interview, but you have completely forgotten both of their names. (You know, you’re supposed to be a professional adult. People tell you their names, the least you could do is try to remember them. It’s rude. Do better, you jerk.)</p><p>“Hey guys, I made it!” You wave, they wave back. You had briefly agonized over how to phrase that in a way that would belie the fact that you had no idea what to call either of them. “Is Chris around?”</p><p>“I don’t think he’s in yet, but his desk is over there. You can probably hang out in the conference room.”</p><p>“Thanks! See you around.”</p><p>Chris’s desk is right across from a door marked “Elway” at the center of a wall of solid glass. On either side, “Davis” and “Flacco.” You dimly perceive that this is a sports-related naming convention, although you hope very hard that nobody ever asks you about your thoughts regarding it. You step into the Elway room and the motion-sensitive lights turn themselves on. You drape your damp coat over one of the seatbacks and take a seat in the chair closest to the door. The one thing you feel you could do naturally—stare blankly at your phone—is the one thing you don’t want to be seen doing during the first hour of your first day. So you fold your hands nervously and look out through the glass.</p><p>Fifteen minutes and who knows how many employees pass outside. The conference room lights turn themselves off. Now you are sitting, hands folded, alone in the dark. You stand up so the lights will acknowledge your presence again, and they turn back on. You return to your seated position.</p><p>Through the glass, in the distance, you can see Chris turn the corner around the lunch area. He is once again wearing a sweater vest over a plaid collared shirt, a uniform you haven’t seen worn by anybody else on this floor so far. You look up at the Office Depot–branded wall clock, which stands out as being the only object in this building that seems like it cost less than ten dollars. 9:29, although you are not quite sure how accurately it had been set.</p><p>“Chris! Hey! Good morning!”</p><p>“Good morning, welcome aboard! So, we usually do this over in Jackson.” He points, you look over your shoulder. “I just need a quick minute to get settled, and I’ll meet you over there.”</p><p>“Gotcha, thanks.”</p><p>Jackson is about halfway around the ring of conference rooms. It is starkly different from its neighbors, having no table, whiteboard, TV, or even a lowly wall clock. Most of its light comes from outside the glass wall; the room’s single row of overhead lights appears to be permanently dimmed. There is a row of about a half-dozen of the ridiculous gaming chairs, each one appearing broken in some way, lining the far wall. Even with no other furniture, it feels cramped. You lay your coat on the ground and survey this other side of the office through the glass. A good chunk of the floor space on this side is lost to a hallway, bathrooms, and other unexciting facets of skyscraper design. Several of the smaller executive offices are on this side as well. Every door is closed. The view of the city outside isn’t nearly as breathtaking as it is on the other side, but you can tell well enough that the rain has really picked up. Autumn doesn’t technically start for another few weeks, but it’s beginning to feel like it’s arrived already.</p><p>Chris whips around the corner and steps into the conference room. Each move he makes is forceful and commanding, and his entrance is accompanied by a rush of air that carries the scent of a cologne that could best be described as “a cologne.”</p><p>“Sorry about that. How has your morning been so far?”</p><p>Your morning has consisted of nothing aside from nervous isolation and watching minutes tick by, but you engage with his small talk as best as you can. Fortunately this does not take long; Chris apparently has somewhere more important to be.</p><p>“So, here’s how we do this. You stand right here, facing this way. You see how my feet are?” Chris is standing, facing out toward the glass wall, with his feet about shoulder-width apart. You nod. “I count backwards from three, then I punch. I don’t expect that you’ll stumble or fall over, but we can wheel in a chair in case you think you’ll need it.”</p><p>You don’t know what you think. Chris isn’t a large man, exactly. Heightwise he’s just about the same as you, maybe slightly shorter. Is he younger than you are? He certainly seems to have taken better care of his skin than you have. He’s got a few athletic qualities, maybe he ran track or did rowing or something in school. You don’t know how hard he’s going to hit and, aside from that one time when you were screwing around on the playground in elementary school, you’ve never actually been punched before.</p><p>“I guess I’ll have a better idea after we’ve been through it once,” you respond.</p><p>“Ten-four. Like I’ve said, we usually don’t dial things up to eleven here. Consistent, sustainable velocity is the name of the game.” You can’t tell if that’s some kind of project management metaphor or if he’s literally talking about punch speed. “Okay. Take your position.”</p><p>The two of you swap places, and you stand like he did: feet apart, looking past Chris to the cloudy sky outside.</p><p>“All right. You can clench your abs, if you want to. Three. Two. One.” You close your eyes and do as he suggested.</p><p><span>THWUMP.</span></p><p>It doesn’t hurt, exactly. You feel yourself losing balance before anything else. The sound follows, then the burst of confusing sensations from your abdomen as you begin to recoil. A half-step backward, and you’re standing steadily on two feet. Oh, now you’re really feeling something. A sharp radiating wave from your belly button all the way up and down your torso. You can’t breathe out to make a noise. You can’t breathe in, either. Nothing about this feels familiar.</p><p>There, in the pit of your stomach, comes something you recognize. It’s that nauseous “butterflies” feeling you used to get when you misbehaved as a kid and you knew consequences weren’t far behind. It’s the first and only part of this that makes sense to you. You embrace the sensation for a moment.</p><p>As if waking from an unpleasant dream, your eyes open and you remember to unclench your abdominal muscles. You’re able to let out a cough, then a gasp, followed by heavy breathing.</p><p>“It’s been a pleasure,” smiles Chris as he extends a handshake. More disoriented than anything else, you reach out and meet his hand. He grips hard and jerks your arm down, up, and down. “See you tomorrow.” He turns around and surges out the door.</p><p>“Seeeouu…” is all you can muster. You stumble over to a gaming chair with one good armrest and collapse into it. Breathing hurts and the pain makes you retch. You can’t see anything clearly through the tears in your eyes. You are swimming through the worst pain you can ever remember experiencing.</p><p>A few agonizing moments and then it’s just sorta… gone. The nausea subsides, you breathe normally, the tears recede and you snort most of the snot back up into your sinuses. Your belly is still tender to the touch, but for the most part you’re back to normal. You step out of the conference room into the bathroom to wash off your face and blow your nose properly. As you look yourself up and down in the mirror, you wouldn’t know that anything had happened.</p><p>It’s quarter after ten, and although your understanding of the arrangement is that you can now go home if you want, something about that doesn’t feel right. It’s true that you don’t have an assigned seat or team, nor do you have a specific work area, or even a computer or any <em>accounts</em> on a computer, but it still feels like you should be doing something more productive here.</p><p>You walk the outer perimeter of the floor once before arriving back at the lunch area. You examine the wall of granola bars, mint candies, single-serve cookies, and snack crackers. At this moment you have no appetite for solid food. Next to that, a refrigerated cabinet—it looks like something out of a convenience store—with cans of juice and soda… ooh, an entire shelf of Dr Pepper cans. You pull one out, crack open the tab, and take a sip. You wouldn’t have thought that carbonated sugar water would help the current situation, but it really does.</p><p>You sit down at an empty table—actually they’re all empty—and slowly enjoy the drink. You smile and wave to the people who occasionally walk by and grab a pack of gum. This part here, this isn’t so bad. You finish the can and toss it into the recycling bin. It’s not even eleven o’clock, and you genuinely have nothing else to do. Maybe you really should go home.</p><p>You walk back to Jackson and pick your coat up off the floor. You brush off the unidentified flakes it managed to collect and put it on. There is a direct path to the elevators from where you are, but you decide to go the long way past Chris’s desk to make extra sure he’s okay with this.</p><p>“Yeah, we’re good here. See you tomorrow.”</p><p>Apparently that really is the way things work around here.</p><hr><p>Tuesday morning, a few minutes before 9 a.m., sunny again. You’re back at the reception desk having a fresh visitor badge printed. At some point it’d probably be worth asking somebody when you might be able to expect a permanent badge of your own.</p><p>Seventeenth floor, walk past Chris’s desk, he’s not in yet, keep walking to Jackson. You’re a bit more prepared this time. You single out the least broken chair from the pack and wheel it into position. You drape your coat over the back of this. You have a handkerchief and a couple of premoistened towelettes in your pocket.</p><p>As you wait for Chris to arrive, you rub your hand down the front of your shirt again. Everything feels basically fine, aside from a dull ache when tensing a few of those muscles. There wasn’t even a bruise when you checked this morning, just a little residual redness. You pat yourself on the belly for no particular reason.</p><p>The office is bright this morning, with mostly clear skies outside and only the occasional patchy cloud blocking the sunlight. You glance down at your phone, looks like the rest of the week will have pretty mild temper—</p><p>“Good morning, good morning!” Chris bursts in. You could swear you felt your ears pop from the change in the room’s barometric pressure.</p><p>“Morning Chris. Hey, before we start, I was wondering if you could tell me who to talk to about getting an ID badge?”</p><p>“That ticket has been submitted, don’t worry.” He unbuttons his right shirt cuff and begins rolling up his sleeve.</p><p>“Do they need my picture or anything?”</p><p>“They’ll be in touch. Let’s go.” He beckons you to take your position. You notice he is wearing a Livestrong wristband on his freshly exposed forearm. Huh. It’s been a while since you’ve seen one of those.</p><p>“Three. Two. One.”</p><p><span>THWUMP.</span></p><p>You open your eyes wide enough to see Chris hurriedly unrolling his sleeve.</p><p>“Pleasure, as always. Gotta run to another meeting. See you tomorrow!” He waves, and you close your eyes again while grappling for the chair. It feels just like yesterday, except now you know what the progression is like. You’re incapacitated for essentially the same amount of time, but the moments do not drag quite as agonizingly as they did before.</p><p>You towel off your face, blow your nose, and head for the lunch area. Another can of Dr Pepper, another couple of minutes staring out across the busy expanse of the office. You head back to the conference room to get your coat, wheel the swivel chair back among its hobbled brethren, and take the long way out toward the exit. Chris’s desk is empty. Nobody really notices you leave.</p><hr><p>The remainder of the week is much the same. You have a fresh visitor badge printed every day. Chris always shows up thirty minutes late and has somewhere to rush off to afterwards. Even though it is literally printed on a sticker on your shirt, nobody calls your name or really even says anything more than a perfunctory “good morning” when they see you.</p><p>To be fair, you have barely spent any time here all week. Why should anyone know who you are?</p><p>“Three. Two. One.”</p><p><span>THWUMP.</span></p><p>Maybe you should figure out when the different teams socialize. Hell, there are ping-pong tables (plural) here; somebody must use them for something.</p><p>Also, you probably want to start thinking about doing a little more calorie-burning exercise if you’re planning on making the Dr Pepper a daily thing.</p><hr><p>Saturday morning. You wake up naturally, having deliberately turned off your alarm clock. You’ve been looking forward to the weekend because— Wait, why <em>have</em> you been looking forward to this? Over the past five days you have barely worked four hours in total, and it’s not even “work!” What have you been doing with the remaining 36 hours of the past workweek?</p><p>Well, alright, some of it was lost to commuting. Actually quite a lot of it was spent commuting. You live in a house out in the suburbs roughly fifteen miles north of the city. It takes a commuter rail ride, followed by a subway, and finally six blocks crosstown on foot to get from your front door to the office. It totals about 75 minutes each way, which means you’ve spent… Dear Lord, you suck at mental math.</p><p>You pull out the calculator and work it out. You’ve spent over twelve hours commuting to this job over the past week. To be fair, you’ve also spent about that much time commuting to the previous job—ever since you gave up your studio apartment in the city in the search for “more space” and comforts like “not having most of your possessions ruined during the <em>multiple occasions</em> when an adjacent apartment floods.” You peer out the back window at the line of trees that the neighbor planted so she wouldn’t have to look at the ass-end of an ugly rental house. A squirrel is busy rummaging in the hollow on one of the larger tree trunks. Not gonna get something like <em>that</em> outside your big-city windows.</p><p>Still, twelve hours. You never really sat down and put a number to it before. Maybe Chris would be amicable to some kind of arrangement where you work remote. You actually laugh out loud at the idea. It makes your stomach hurt.</p><hr><p>9:30 on the dot.</p><p>“Good morning, happy Monday!” Chris blasts into the Jackson conference room in his typical style. He’s still wearing his coat and messenger bag. Both are flung off and placed on the floor. “How was your weekend?”</p><p>“Oh, you know, fine I guess. Short.” You remember that it would probably be a polite thing to ask the same question of him, but that’s not where your head is at this morning. “Chris, there’s something I’ve been meaning to ask about.”</p><p>He finishes propping his coat up against the bag. “I’m all ears.”</p><p>“I’m having a little trouble understanding how this work fits into the broader picture.” Chris nods but says nothing. “You know, like, um, who our stakeholders are.”</p><p>“Ah. Well, as I’m sure you know, this company has multiple verticals and business units. Some of us work on the direct-to-consumer and e-commerce products, the folks at West Campus are mainly focused on B2B operations, and every team relies on the stuff that Internal Tooling and DX puts out. So there really is no single stakeholder. Case in point, that whole half of the floor is the Next Initiative team.” Chris gestures in the approximate direction of absolutely nothing. “They’re working on compliance and auditing for the Information Security org.”</p><p>“Didn’t you say <em>our</em> team was the Next Initiative?”</p><p>“No, we’re the Next Innovation Lab. It’s actually funny, FedEx keeps leaving our packages on their side of the floor.”</p><p>You are more confused than you were five minutes ago. Chris can plainly tell.</p><p>“Let’s double-click on that,” he thought-leads. “What insights do you feel you need in order to be more effective?”</p><p>“Um…” You would like to bluntly ask what the damn hell any of this has to do with anything, but can find no tactful way to directly ask that. “I guess nothing specific. I just like to know where I fit into the whole big picture, you know?”</p><p>“I understand your desire to learn more about the business. You’re showing a lot of initiative by asking. We can figure out ways to expose you to other teams as the rollout progresses. It’s gonna be a busy Q4, just so you’re aware.” He reaches his right arm across his chest and stretches it against his left forearm. “You ready?”</p><p><span>THWUMP.</span></p><hr><p>The alarm clock sounds. The sun has not technically risen yet, but the twilight streaming into the bedroom window is sufficient to allow you to do most of your morning routine without turning on the lights. It is Friday. Payday the thirteenth. The thought occurs that you could probably see the pending direct deposit from the company if you cared to look.</p><p>You care very much.</p><p>Through eyes still slightly blurred by the crust that accumulated while you slept, you open your bank’s mobile app. It nags you with a four page slideshow about some irrelevant new features added in the most recent update, then requests that you confirm your contact information and income details. You tap the “Skip” button. There it is: <code>ACH DEPOSIT</code>… Holy hell.</p><p>You don’t need the calculator <em>or</em> your morning caffeine to comprehend that this single payment is comfortably higher than your total income over the entirety of the previous month.</p><p>Now the anxiety starts creeping in. It’s still a pending transaction; somebody’s gonna do something to keep it from settling. Even when it settles, they’re gonna find out you’re a scammer and reverse the payment. They’ll probably withdraw even more as a penalty. They might even decide to sue you. There’s no reason to believe this greyed-out ledger entry is real.</p><p>You look over to the window and notice that the squirrel is still at it. Whatever’s in that tree hole has really caught its attention. The view outside helps calm your mind. You pause for a moment to appreciate the first rays of sun just beginning to filter through the branches. Of course the payment is real. You did what you were hired to do, and they paid you like they said they would. No problems here at all. Nope.</p><p>After showering, you catch a glimpse of yourself in the bathroom mirror. The area above your navel is purple to the point of almost being black. The skin, to the extent you can bear the pain of touching it, feels thick like leather. You’re not even paying attention; you’re still stressing about whether that deposit was deserved. It still feels like the whole thing is, you know, some kind of stupid fraud.</p><p><span>THWUMP.</span></p><p>“Oh, by the way,” Chris is halfway out the door, but he turns back as you crumble into the chair. “The team is going to hang out after work this afternoon. Kind of an informal happy hour thing, we do it every other Friday. You’re more than welcome to come.”</p><p>“Sounds great,” you cough, wearily holding up your arm to give a thumbs-up. It’s likely that nobody sees the gesture.</p><p>As you regain your composure, you dimly perceive that happy hour is probably not going to begin until eight hours from now. You’re not going to commute all the way home just to come back again. Once you have finished drinking your daily dose of Dr Pepper, there is absolutely nothing for you to do here. Aside from the lunch area, PlayStation nook, and a few couches scattered around the other common areas on the floor, there are no empty desks where you could camp out. If you were to loiter in the common areas all day, you would <em>conspicuously</em> be the only person here that didn’t look like they were doing something important.</p><p>You decide to head outside and wander the city. It’s a brisk morning, not too terribly cold.</p><p>You text Doug, one of your oldest friends from the first job you had in the city. He moved across the country a few years back to chase some opportunities, but he has remained one of the few people you’ve met in a work context that you really tried to maintain contact with. Despite it barely being sunrise where he lives, he texts right back. After some back-and-forth, you both reach the point where you figure it’d probably be more effective to just call each other. He dials you.</p><p>Doug has always been one of the wisest, most well-read people you knew. He could speak in paragraph form about any topic from technology to sociology using deep references and words that you were pretty sure, but not always positive, you knew the meaning of. Compared to him, you had the eloquence of an annoyed diesel mechanic. But your conversations were always insightful and enjoyable.</p><p>Not much had occurred in his life since the last time you spoke. You tell him all about your job change and the choices that led you to this point. Doug does not seem surprised at anything you shared. A few parts are met with a kind of mild bemusement, but overall he understands why a person would take a cushy job where their only contribution is getting punched in the stomach. Even more surprisingly, he has a theory about why the role exists at all:</p><blockquote><p>“What is the point of a corporation, really? To sell a product, you might say. Or more descriptively, to collect revenue in exchange for delivering a product, and then to spend that revenue on products from other corporations, ideally using those products to help make their own. Also to pay for staff, who spend their wages in the even broader economy. The point of the enterprise is to make money in order to spend it, which is received by a different entity who spends it on something else. The products they make are actually <em>byproducts</em> of this system. Keeping money moving is job one.”</p></blockquote><p>You have long since lost the ability to function in your day-to-day life without using a calculator, but this sounds like plausible economic theory. Doug continues:</p><blockquote><p>“Sometimes money comes in, but the business is so large and dysfunctional that it can’t effectively direct those funds to anything relating to making the product. So what do the individual departments do? They could always hold onto the surplus, or try to give it away in dividends and bonuses. But they can’t do that too much or everybody starts getting suspicious at each other about where this sudden unexpected clump of money came from and why it wasn’t used to benefit the product. The most effective strategy on every level of the hierarchy is to simply find someplace to stuff the excess funds that looks ostensibly like it’s helping achieve a business goal even though it isn’t. That’s why so many projects run over budget and fall behind schedule before ultimately failing, yet the business survives. It’s why so many enterprise software contracts are sold despite being essentially worthless. It’s why teams become packed with specialists whose job description is to make messes, who work alongside others who are only tasked with cleaning up those same messes. These all permit a department’s budget to intentionally disappear in a way that can survive a financial audit.”</p></blockquote><p>“So we’re all just going through business like that <em>I Love Lucy</em> scene where they’re working at the candy factory, and they get overwhelmed by the number of pieces they have to wrap, and end up stuffing a bunch of excess chocolate down their shirts?”</p><blockquote><p>“In a way, yeah. That’s why the image is funny. The viewer wouldn’t have related with the characters if the situation weren’t based around some sort of shared human experience. If I remember that episode right, they didn’t even get fired did they? I think they left voluntarily at the end.”</p></blockquote><p>“Probably, I don’t really remember.” You most likely haven’t seen that particular episode since you were a kid. “But, well, okay… I can accept that my company sometimes needs to make money disappear without anybody noticing so that nobody has to have an embarrassing or possibly career-damaging conversation. But why does my manager need to <em>punch</em> me to justify it? I mean, he could give me a back rub, or we could play rock-paper-scissors, or just stare each other down. Why does he <em>punch</em> me?”</p><blockquote><p>“Because he’s a dick.”</p></blockquote><hr><p>“Cheers!”</p><p>Everybody takes a swig from their bottle of Rolling Rock. This is one area of the business where an expense had apparently been spared. The group is circled around a ping-pong table that has been repurposed into a regular table. Chris stands at the head of it with Jon to his left. The four people who originally interviewed you—you have since learned their names to be Dave, Davey, Lydia, and Karan—stand to his right. Chris has, more than once in the time since everybody gathered here, called them “Dave Force,” a moniker that is visibly unwelcome. You stand near the corner at the opposite end of the table, flanked by Stef and a grown man whose given name appears to actually be JR.</p><p>You have worked very hard to learn these names over the course of the afternoon, and hope you are able to retain the information for more than five minutes. You still don’t know much about what anybody around this table actually does all day. Based purely on observations of who interacts with whom, you figure that this group must be the Next Innovation Lab and everybody else on this floor belongs to the separate Next Initiative. Possibly. Nobody has really made an effort to instill a notion of what any of this is or why any of it matters. Though maybe with some well-deployed small talk you can learn some things. You begin by simply listening:</p><p><strong>Stef:</strong> “… then I’m double-checking the sheet, and I’m going like, we’re following the capacity curve like you asked.”</p><p><strong>Jon:</strong> “And this was after the CRB approved everything?”</p><p><strong>Stef:</strong> “Everybody on the thread was <em>part of</em> the CRB! So I’m like, okay, let’s start from the beginning. We have two 8x-larges, and they’re like, no, we have <em>eight</em> <em>2x</em>-larges. Now I’m like, clearly one of us is having a stroke, and I ain’t the one smelling burnt toast here.”</p><p>Everybody except you laughs. You notice this and immediately put on a fake grin. As the story continues, you put together that Stef’s job is to create and configure IT infrastructure for another team. The purpose of these resources, and even whether they are used for any purpose at all, is not disclosed.</p><p><strong>Chris:</strong> “Hey, Dave Force, what’s the score today?”</p><p>Four people simultaneously roll their eyes at this. Dave informally heads a team with Davey, Lydia, and Karan. Nobody knows where the name “Dave Force” came from but they all wish it would go back to wherever that was. The “score” in question appears to be the number of spreadsheet rows worked through, but you’ve so far been unable to suss out the broader picture. You realize you’re about due to say something, so you speak up:</p><p><strong>You:</strong> “So Dave, what does the spreadsheet represent?”</p><p>Dave responds at length on behalf of his team. The short version is, they run a security auditing process. The spreadsheet contains a list of the most frequently-used passwords found in public data breaches—hundreds of thousands of them. Dave’s team divides the list up between themselves and <em>manually types the passwords</em> into one of the company’s internal tools to make sure none of the breached passwords permit access into the system.</p><p><strong>You:</strong> <em>(dumbfounded)</em> “Oh… Neat. Bet that keeps you busy.”</p><p><strong>Dave:</strong> “They say this group is the fastest that’s ever done it. Two years ago it would’ve been basically impossible to get through ten thousand in a day.”</p><p>Did he say <em>two years?</em> And <em>ten thousand?</em></p><p><strong>Davey:</strong> “Lydia is the real MVP, though. Nobody has ever outpaced her.”</p><p><strong>Lydia:</strong> “I keep telling you guys to switch to split keyboards. Or at least try one for a day.”</p><p>Lydia’s keyboard was one of the earliest things you noticed back when you first toured the office. It was split into two distinct units, each placed on the desk near one arm of the chair. Red LED lighting radiated through every gap in the plastic. Her wrists barely moved as she typed, while the movement of her fingers reminded you of the way a spider might manipulate the twitching carcass of a housefly. The keys were suspended by a heavy mechanical buckle-spring mechanism, and the loud repetitive but slightly random clicking had all the auditory appeal of a rusty Soviet tank. Her computer mouse, clearly part of a matched set, was seldom touched.</p><p><strong>Karan:</strong> “I tried to learn Dvorak a little bit when I was at university but—”</p><p><strong>Lydia:</strong> “Booo.”</p><p>Several thumbs-down are put forward. You quickly scan the group to get an informal poll of the overall sentiment and feign your own response: a disappointed head shake. Actually, part of your response is genuine; these people all seemed so competent and fulfilled when you first interviewed with them. In actuality, though, they are hollowed-out husks of what may have at one time been a spark of human potential. Shouldn’t they be <em>bothered</em>, at least a little bit, by where this life has taken them?</p><p>You’re thinking too much. There’s a lull in the conversation here, use it as another opportunity to probe somebody:</p><p><strong>You:</strong> “How about you, Jon? What do they have you working on?”</p><p><strong>Jon:</strong> “I maintain the legacy checkpoint API. It pretty much runs on its own these days, but it’s never been formally documented. The thinking is that, whenever we get another team in place that needs to handle checkpoints again, they’ll be able to hit the ground running with our in-house tech rather than having to build a solution on their own or contract out to a third party.”</p><p><strong>You:</strong> “You’re documenting and supporting an API that’s… abandoned?”</p><p><strong>Jon:</strong> “Well, I mean, <em>I’m</em> using it. Can’t very well document something if you don’t use it, you know?”</p><p><strong>Chris:</strong> “That API used to do, what, fifty RPS?”</p><p><strong>Jon:</strong> “At least that.”</p><p>Behind you, something beeps. Several members of the group turn toward the source of the sound. It is the printer near the glass wall that looks into the Holmes conference room. JR excuses himself. He returns a moment later with a stack of at least 500 sheets of letter paper, each covered entirely in solid black ink. He hands the stack of blackened sheets to Chris, who quickly thumbs through it. He is quite pleased.</p><p><strong>Chris:</strong> “You knocked it out of the park again, JR.”</p><p>There is likely little point in verbally acknowledging anything about what you have just witnessed. You just assume that, through some corporate razzamatazz, JR’s entire job is to waste toner. You guzzle approximately half of your beer.</p><p><strong>Jon:</strong> “I love doing this. Really, it’s been my dream job.”</p><p>Nobody specifically asked, but Jon eagerly volunteered this information. He turns toward Chris and continues:</p><p>“I would still do this even if you weren’t paying me.”</p><p>There was a time in your life when you longed for such a deep connection with the work you did. Love what you do and you’ll never work a day in your life, and all that. In the moment, though, you sort of feel like this is the Island of Misfit Toys and also a cult.</p><hr><p>“It’s pretty nice, I guess. They supply free snacks and drinks, and I have some flexibility with my hours as long as I get my work done.”</p><p>You somehow hadn’t found time to talk to your parents or anybody else in your family since you switched jobs. In actuality, it’s probably taken this long to work up the nerve to talk about it openly with anyone. After every detail you share over the phone, the person at the other end of the conversation responds that the job sounds incredible. You temper that excitement:</p><p>“Yeah, but it’s a very demanding role.” And, “It takes a lot out of me.” And, “I don’t think most people could do this type of work.”</p><p>You actually don’t think most people <em>would</em> do this type of work.</p><p>“Well, just remember that you’re lucky to have a job at all. Nothing in this world is guaranteed.” Somehow this particular family member never fails to deliver her unique brand of homespun advice, that out-of-touch wisdom only attained by being thoroughly retired and never having applied for <em>any</em> job in over four decades.</p><p>It’s late Sunday afternoon. It’s actually not that late, but the sun is starting to set very early this time of year. You had always joked, when you were at the previous job, that you never got to watch the leaves change in the neighborhood because you were always gone during daylight hours. You realize that wasn’t actually a joke, it’s a plain statement of fact. Now that you get home every day around noon, you have started to appreciate how subtly the leaves can change from one day to the next. How much else have you been missing during that intervening time?</p><p>You scan the landscape through the curtains. The sunlight has gotten redder, casting low shadows that have grown longer. That squirrel is <em>still</em> rummaging around in that same hole. You lean toward the window for a closer look, the warm air from your nose fogging the terribly-insulated glass pane. That squirrel is not moving all that much, actually. You stare longer. It’s not moving at all. A calm breeze rolls its way through, and you faintly detect its bushy tail swaying lazily. You’re pretty sure… nope, you’re absolutely sure: That squirrel is <em>dead.</em></p><p>You step back for a moment to briefly rub your eyes. You return to your previous position, but can no longer make out the outline of the tree you had been looking at. You must’ve been thoughtlessly staring for the last 30, maybe 45 minutes. Now it’s too dark out there to really see anything. The room lights were never turned on, so you’re just standing there in the dark. You sigh. You’ve been sighing a lot throughout the day.</p><p>This is not unfamiliar to you. This is something you can recall feeling countless times before under similar circumstances. Sunday is basically done and the weekend has gone with it. Tomorrow you go back to the office, back to everything you were supposed to enjoy escaping over the last two days. But you haven’t enjoyed anything, you just wasted your precious free time in the name of rest and recovery. You’ve wasted pretty much every weekday afternoon in the exact same way, just standing here staring at nothing.</p><p>How was your weekend, somebody is going to ask. Short, you’re going to quip. How’s it going, it simply “goes” with no other characteristics. That’s the formula of the joke. None of this is a joke. <em>None of what you’ve been saying to people over the course of your career has been a joke.</em> You really were upset at how little you got to enjoy the foliage on your street. You really do think that the weekend is too short to meaningfully recover from getting <em>punched in the stomach</em> every day. This feeling you are experiencing right now, <em>fuck</em>, what is this? It’s like the polar opposite of excitement and ambition. It’s that desire to curl up into a ball where nobody will ever find you. It’s the feeling of being crushed under a weight that you can’t escape, but complaining about it makes you seem weak or vulnerable, and everybody else seems to be doing just fine handling theirs, so what the hell is wrong with you? It is anger, frustration, despair, and every kind of negative energy directed at… what? You can’t even say, so may as well shoulder that weight along with everything else.</p><p>This has <em>nothing</em> to do with that squirrel. No, it has <em>everything</em> to do with that squirrel. You <em>envy</em> that little prick.</p><hr><p>Monday morning, 9:30 a.m., somehow you have managed to put on your normal face and go to work.</p><p>For a company with “unlimited”-in-air-quotes paid time off, Chris sure has a good attendance record. You’ve chatted up a few people during your time spent hovering around the lunch area, and the common theme is that he’s hardly ever out sick and he only takes vacation time in a two-week block each summer. Most of the people here have similar attendance patterns; pretty much every seat is occupied more or less every day.</p><p>Say what you will about your previous job, but your old boss was out <em>a lot.</em> He had kids in two—was it three?—different schools and there was always some snafu that would cause him to miss half a day or work remotely. There was something… relieving about the days when he wasn’t physically right there. He still spewed emails and instant messages and ticket comments and video calls, but the physical distance was, you know, nice.</p><p>You notice, not even a month into this engagement, that you resent the regularity with which you are forced to interact with your supervisor. “Interact,” hah, that’s funny for some reason. You adopt a mocking voice and quietly mutter to yourself:</p><p>“Look at me, I interact with my subordinates by punching. Let me delegate this workload vis-à-vis my fist. If it weren’t for those dweebs in HR I’d have a brass knuckle—”</p><p>“Good morning, happy Monday!” Chris’s inbursts made the Kool-Aid Man’s entrances seem positively genteel. You shut up real quick. “How’s it going?” he asks.</p><p>“Oh, it goes.” You’re a goddamn soothsayer.</p><p>“I hear that!” Chris says. Hearing is not the same as listening.</p><p>“Hey, Chris, I was just thinking. You probably don’t need to count down from three each time we do this. I mean, I can see your windup. I know when it’s time.”</p><p>“Really?” He genuinely ponders this. “Fantastic! That’s a super optimization. Let’s try it out right now.”</p><p><span>THWUMP.</span></p><p>“Wonderful! Incredible effort, team!”</p><p>What team? <em>What team?</em></p><hr><p>You’ve spent some time at the sinks in the seventeenth floor bathroom, but this morning you’re in the stall. Sometimes—not all the time—but sometimes, your bowels get a little scrambled during the course of your work. You’re beginning to learn that there is an upper limit to the amount of caffeine you can consume before having a bad day, digestively.</p><p>The room is tiled in maroon with yellow accents, certainly a bold color scheme. It’s also pretty dark compared to the rest of the floor; there’s zero natural light in here. The floor tiles are smooth with an almost mirror glaze. You can clearly see the reflection of the wall-mounted hand dryer underneath the stall door. It’s probably likely that a person standing in that spot could see your pitiful attempts at clenching your muscles while trying to avoid passing out from the pain. The toilet paper, much like the happy hour beer, is bountiful yet crap—</p><p>Click. The motion-activated lights turn off. The ventilation fan stops too. Now you are sitting in absolute pitch darkness and disquieting silence. You give it a moment in case your eyes find a way to adjust. They do not. You can’t see a bloody thing, and the motion sensor has no way of seeing into your stall. It does not take long for the air to grow thick and stale, the faint smell of bleach cleaners and quite a few other things beginning to reclaim the space. This bathroom has completely forgotten about you, and that’s just how it’s gonna be for a while…</p><p>BAM! Every muscle in your body tenses, which hurts like hell. You hear the door fly open with a force like a tornado threw a barbecue grill into it. You’d recognize Chris’s subtle touch anywhere. The overhead lights and fan turn on to greet him.</p><p>He likely doesn’t know anybody else is in here with him. If he did, he would’ve tried to initiate small talk by now. You try to remain very still so he doesn’t detect your presence. This is a rare opportunity to observe a creature’s natural behavior, you may as well accept the good fortune. From the urinals, vaguely melodic groaning would be the most clinical way to describe it. Yeah, that’s definitely him. He spends his whole bathroom visit just… humming. He steps back, the urinal flushes automatically, and he darts out of the bathroom as briskly as he had entered. He does not wash his hands.</p><p>You wait a moment to make sure he’s really gone, then relax with a sigh. The toilet that you are sitting on flushes itself. That’s the third time it has done this since you’ve been in here.</p><hr><p>“How about cleaning up a crime scene?”</p><p>“You mean like wiping up blood and brains and shit like that? Ew, no. Wouldn’t do that either.”</p><p>On this weeknight, you’re seated in a corner booth at a bar with four other people you know from outside of work. You are the slowest drinker in the group, now just about two glasses into the evening. The rest of the party is quite a bit further ahead in the race to inebriated serenity. The conversation has taken an organic turn to the topic of jobs that nobody wants to do. Prior to the crime scene cleaner, there had been “bathing patients in hospice care,” “slaughtering pigs,” “emptying portable toilets,” and, oddly enough, “roofing.” Nobody in the group would do any of those hypothetical jobs for any amount of hypothetical money.</p><p>Yet, those are all real jobs done every day by real people. They’re important jobs that keep society running the way we have grown accustomed to. Nobody in the group wants to stick their arm shoulder-deep into a clogged sewer pipe, and nobody wants to ride through the July noon in a festering garbage truck, but countless people do those things every day. People who, in the majority of cases, probably take home less money than any of the people sitting around this table.</p><p>“How about getting punched in the stomach?” you propose. The table falls silent as each person pauses to make sure they heard you right.</p><p>“What, like a boxer or something?”</p><p>“No. Just like walking in, getting punched in the stomach, and leaving.”</p><p>“I don’t see how that’s a job,” the second-most sober person in the group argues. You can’t fault her assessment.</p><p>“I’m seriously asking. You get punched in the stomach, and they pay you…” You round your total compensation to the nearest hundred thousand and reveal the number. The table goes into deathly quiet consideration.</p><p>“Shit, for that much they can spit in my mouth and break my fingers too,” the drunkest member of the group exclaims. His words, delivered with a barely detectable slur, suggest that he hasn’t given this question even the slightest bit of actual consideration. Nobody else has anything to add. It was a weird question and you are a weird person for having brought it up.</p><p>You fidget with your glass, which has about two sips worth of drink left in it. You really don’t feel like finishing that now.</p><hr><p>The train is unusually crowded on its way into the city this morning. You had received a transit alert on your phone earlier regarding problems due to an equipment breakdown a few stops away, but that has since been cleared up. This looks to be the residual overflow of people who couldn’t make it onto an earlier train.</p><p>Your phone dings again, this time with an email on your work account. While they haven’t given you a desk, or a badge, or really anything to make you feel any shred of belonging, they did eventually give you an email account along with a strong hint that you should check it regularly using your personal devices. It’s not your favorite thing to have had to do, put it that way.</p><p>It is a notification email from the company kudos board. Chris has bestowed you a unit of “leadership and initiative” praise in a two-sentence text box: “consistently delivers strategic value and innovative process optimization. the most reliably creative problem-solver we’ve ever punched in the stomach.” Other employees can add their own digital reactions to the message in the form of a smiling face emoji. So far only JR has elected to do this.</p><p>These kudo boards—kudos board?—they really serve no purpose other than to ostensibly boost morale. Honestly, you find them so cloying and infantilizing that you’d rather not receive any praise on the platform at all. It’s kind of embarrassing to show up in those emails. And it’s not like you get any kind of tangible monetary award or additional consideration out of racking these things up; they’re completely pointless. Well, okay, maybe they may factor in some small way into the annual performance review process and that makes them, well, still largely pointless. You had once heard it mentioned—and maybe it was a joke or maybe it was sincere—that the company unofficially considers a person’s employment to be a success if they make it to the two-year mark. That suggests to you that plenty of people flame out well before that milestone. From where you sit, it’s perfectly clear how a person might not last even half as long in that environment.</p><p>You have a partially-eaten breakfast sandwich in your other hand and return your attention to that. You enjoy a few bites while staring out the window at the passing houses. It’s kinda funny, even when the train is running normally you don’t usually get the seat near—</p><p>Panic. Throat. There is something seriously wrong in your throat. Whatever you just tried to swallow didn’t do the thing it was supposed to do. Cough. Gasp. Swallow. Swallow. Swallow. You’re not actually <em>doing</em> any of these things, your body is following some kind of autonomous routine. Lean forward. Retch. Cough. You feel the glob of whatever rise to the back of your mouth, and you hack it onto the floor. You’re breathing heavily now, but at least you’re breathing. Tears, seemingly from nowhere, pour from your eyes.</p><p><em>What the hell was that?</em></p><hr><p>“Here you go.” Chris hands you a grey folder. You open it. Performance review time. You’ve barely been here for two months, but apparently the cycle waits for nobody. “If you could get that back to me by this time tomorrow, that’d be perfect. We’re trying to get all of you some more mon-ayyy.” He could’ve said ‘money’ like an adult, but we all make our choices in life.</p><p><span>THWUMP.</span></p><p>The performance review paperwork consists of a “how would you rate yourself” chart on topics like punctuality, knowledge, communication, and so forth. Anybody who doesn’t give themselves a healthy and self-aggrandizing mix of fours and fives has either an inferiority complex or a stupidity complex. Still, you want to at least give the appearance of playing the game, so you give yourself a three on leadership.</p><p>The rest of the document is a whole bunch of open-ended blank space talking about goals. Each goal needs to be SMART—specific, measurable, achievable, relevant, and time-bound. This has been the same at basically every company you’ve ever worked at, and over the years they’ve thoroughly beaten the system into your brain. “Specific” goals leave no room for interpretation; you say what you are going to do and there is a clear way to determine whether that happened. “Measurable” goals have to have a number in there somewhere. An “achievable” goal, you would think that’s common sense—no point committing to something that is impossible to do. “Relevant” goals have direct relation to whatever the business’s needs are… or whatever you are paid to do in the case that these concepts do not overlap. A “time-bound” goal has another number in it, the date by which you will do that thing. By default, the assumption is it will be done by the next performance review at the latest.</p><p>This framework perhaps makes sense for an assembly line worker who performs a predictable and repeatable task and wants to see an incremental improvement. It also works for fields like sales (make <em>X</em> number of sales pitches and close <em>Y</em> number of deals) and even doctors (treat <em>X</em> number of patients and kill fewer than <em>Y</em> of them in the process). These are fields where this system might actually provide some benefit.</p><p>Even when you worked at a real job, you found this process pointlessly difficult as an individual contributor doing what they call “knowledge work.” You have never really been empowered to make decisions that could change the outcomes of any goals you might set for yourself. Put simply, your goal at all times is to do whatever the boss tells you to do, try not to screw any of it up, actually finish it, and don’t complain. None of that fits into the little SMART cubby holes they have carved out here.</p><p>You put yourself in the shoes of JR or one of the members of Dave Force (it’s a dumb, dumb name but boy it’s convenient). JR could write a goal that states he’d print a total of half a million solid black pages over the upcoming fiscal year. With the possible exception of “relevance” to anything resembling sane corporate decision-making, that’s a perfectly serviceable goal. He’s probably well on the way to shattering it right this moment. Same with Dave Force—perhaps a member of that team could commit to work through a hundred thousand passwords by the end of Q4. Another adequate goal.</p><p>The problem with memorializing this stuff in a long-lived document is that <em>things change.</em> At this moment, yes, everybody can extrapolate what they’re doing right now and predict what a reasonably ambitious vision of the future might look like. But Chris could swoop in at any time with new organizational whims that interfere with, halt, or even reverse course on work being done today. Somebody might leave the company, resulting in the remaining staff getting reassigned to cover that work instead of making progress toward their goal. JR might be instructed to stop the printing project, and instead begin pouring hand soap directly down the sink drain. Even <em>you</em> have no guarantee that “get punched in the stomach 250 times over the next calendar year” is a stable north star.</p><p>When the next performance review cycle comes around, these old goals get dredged up and compared against how reality shook out. A good manager might go “Well, I see what you were going for and you were well on your way, but circumstances changed and I can sorta morph one into the other… You’re fine.” A less good manager might say “BZZZZT NEEDS IMPROVEMENT.” Either way, you have to figure out how to artfully contrive 250 punches into <em>more than one goal</em> on this worthless sheet.</p><p>Actually, no, don’t say 250. Fudge that down to give yourself some wiggle room for sick days and stuff. 225 sounds about right.</p><p>Huh, you did that one without a calculator.</p><p>You roll the folder and its contents up into a tight tube and slip it into your inside coat pocket. The rigid paper uncurls as soon as you loosen your grip and an asymmetrical lump forms next to the zipper. There is still no desk, storage area, or any kind of spot to stash this until tomorrow; you’ll have to bring it home and back with you for no good reason.</p><p>In the lunch area, you can’t help but notice that the refrigerated cabinet is starting to look barren. Actually, no, for the most part it’s about as well-stocked as it’s ever been. Same with the wall of snacks. It’s really just the shelf where you have been sourcing Dr Pepper cans from. You crouch down and move your head through a few different vantage points. There are four cans in there. Scratch that—you open the door and pull one can out—there are three.</p><p>You know for a fact that people on this floor are consuming beverages from this thing. You can see probably half a dozen desks where somebody is currently doing exactly that. Strangely, though, you can’t recall ever once seeing somebody else drinking Dr Pepper. It’s quite possible that you drank the entire shelf on your own.</p><p>You are neither proud nor bothered by that idea. You pull the tab and crack open the can.</p><hr><p>“Morning Val! I’ll have the usual.”</p><p>Valerie smiles and shakes her head. It has been well over eight weeks since you started here, meaning at least forty visitor passes have been printed by the front desk receptionists. Every member of the team recognizes you now, but you’ve developed an affinity for Val. She was the one who sassed you about the elevators during your first visit. Over the course of a few successive interactions, she started to take pity on you and your badgeless status.</p><p>The conversations never run anywhere near one minute apiece, but you’ve discovered a bit about each other. You’ve learned that she and the rest of the receptionists really don’t care about their work at all. All they really have to make sure they do is prevent the whackjobs and lunatics from getting to the elevators, and to press the emergency button if anybody gets out of hand.</p><p>She knows what you do at the company. She hardly batted an eye when you first told her that you get punched in the stomach professionally. “A lot of people who come through here do that,” she said at the time. She was the only person in this building that gave the impression that she knew what was really up and how things really were. It was refreshing to have a person to whom you could say, “This whole thing is actually just bullshit, right?” and find agreement.</p><p>“Knock ’em dead, champ.” She presents your visitor badge, and you peel it away from the tip of her index finger.</p><p><span>THWUMP.</span></p><hr><p>It’s another dreary afternoon. Rain. This time you ended up in the back seat of the car, leaving the passenger side window as the only interesting view to be found. There’s not much out there: Slick roads reflecting light, trees in the distance, slower cars being passed. You’ve taken this ride enough times that it’s basically routine at this point. There is no need for conversation or any kind of interaction with the scene. All it takes is time.</p><p>You would think by now that you would have more of an intuition about where specifically you are in the journey between point A and point B. It never really seemed like a pressing need. On the few times you’ve tried, the street signs were too far away to make out. It’s not helped by the fact that it always ends up being too foggy and grey out there to see much of anything.</p><p>You turn your eyes briefly to the left. The other rear seat is still empty. It’s starting to look like that time again. You lean up to take a peek over the front seatbacks, which are quite a bit higher than you remember them being before. Passenger seat, empty. Driver’s seat, also empty.</p><p>As you lie awake in bed, replaying this most recent dream to yourself for the who-knows-how-manyth time, you marvel at how predictably routine it has become. Sometimes you begin in the front seat, other times you make it behind the wheel only to discover that the brake pedal really doesn’t do anything. It isn’t a nightmare, and it isn’t even very upsetting anymore. It’s just sorta <em>there</em>, like a movie without sound playing in the back of an airplane headrest that commands no attention. You’ve read somewhere that most attempts at dream analysis are essentially quackery, but you’re pretty sure this one is an unambiguous insight into your subconscious mind.</p><p>You’re awake anyway, so may as well take this opportunity to use the bathroom. It’s nearly 4 a.m. and you can still get two solid hours of peaceful sleep if you’re lucky. You allow the sink to run for a few seconds before putting your hands in to avoid the slap of ice water that has lain in the cold plumbing. As you wait, a look in the mirror. You noticed your first grey hair a few years back, but up until this moment you had never seen one <em>there</em> before. You squint and move closer to the mirror. Yup, now that has a grey hair too.</p><p>You lay on your right side to no avail. You lift the sheets and comforter, turn to lay on your back, and wait that amount of time again. You roll to your left side. The bedside clock says 4:41. You’re thinking about, well, nothing exactly. You’re sure there’s some kind of parade of thoughts running through your mind, but you haven’t been paying attention to it. All you’ve focused on is that feeling. That helpless, hopeless sense that you really are destined to be this way forever. And it’s not just that you’re stuck in this job and bound up in the sprawling root system that it has driven deep into your soul. No, you’re trapped in this cold night, in this dark room, staring at a stopped clock in perpetual misery.</p><p>Whatever this job has given you—and to be crystal clear it has given you most of the down payment on a house—it is <em>not enough</em> to offset this sense of constant dread. Whatever you have given to this job, certainly things that cannot ever be quantified on a bank statement, there are now pieces of yourself that are missing. Pieces you didn’t even realize were being given away. Pieces that, in this moment, <em>you worry you might never get back.</em></p><p>This is a bad deal. This is a self-destructive situation. They are going to use you up and then incinerate whatever is left of your desiccated body to pay a fat bonus to some who-knows for achieving some who-cares. Whatever Jon and the rest of those people feel about coming to work, <em>they are wrong.</em> Or at least they are willing to trade away any last remaining shreds of mental health more readily than you are.</p><p>What was the plan here? Why did you leave a perfectly sustainable—if difficult and slightly unrewarding—job to do this crap? What even <em>is</em> this crap? You are, and let’s not mince words here, you are a <em>thief.</em> That’s the only way to make sense of this situation: You are stealing money from somebody, somehow. This is money you have not earned. There is no legitimate way that you should be receiving any form of compensation for simply <em>absorbing abuse.</em> These people, maybe the whole company but certainly the people in your immediate management chain, are irredeemably damaged to be using human beings that way. They will take, and take, and smile at you like they’re doing you some kind of favor, and maybe throw you a little perk from time to time to distract you from thinking about it too hard. But you? You can’t stop thinking.</p><p>You can’t stop thinking.</p><p>4:44.</p><p>You can’t stop thinking.</p><hr><p>How are you here right now? How did you delude yourself into coming here this morning?</p><p><span>THWUMP.</span></p><p>“Oh, by the way, I’ve got your finalized performance review here. Do you have some bandwidth right now?” Chris is in good spirits, and acting like this is a regular interaction between two regular people. It seems to not bother him that he is addressing your half-passed-out panting body. You weakly wave your hand in a gesture somewhere between “thumbs-up” and “yeah, so what.” He rustles some papers, then summarizes:</p><p>“Since you’ve been here less than a year, we don’t have any existing goals that we can retro. But I remain seriously impressed at your commitment to improving process. And I want to be crisp here:”</p><p>God how you have grown to despise this man.</p><p>“I’m talking specifically about how we’re able to punch more effectively without the countdown now. Some of the guys on the other floors can’t believe that it’s sustainable, but the velocity numbers don’t lie. So, we are going to be giving you the full cost of living increase plus five percent, effective Monday the first. From all of us, we’re really glad you’re here.”</p><p>You have not opened your eyes once during that entire exchange. You hear and understand the words and the broader implication, but it does not produce any response. You feel Chris wrap his hand around yours, squeeze unnecessarily, and impart a rattling businessman’s-type handshake. He releases his grip and your hand flops back down.</p><p>“It’s been a pleasure, see you tomorrow.”</p><p>You soon recover enough physical and spiritual energy to sit up in the chair. Chris has left the performance review folder on your lap, still obviously curled from its round trip in your coat pocket. You skim the cover page looking for the numbers. You think, well, maybe you can hold out a little while longer to maximize your gains. You know, in the moment, it’s not so bad. Maybe, just for a bit…</p><p>You get up and walk straight to the bathroom to wash the Chris off your hand. You clear your throat to find something acrid and viscous rising up from your chest. You clear your throat again and swallow hard. You could swear you hear an audible click at the bottom of your neck. You’ve been popping antacids every day to try to tamp that down, but it hasn’t had much of an effect.</p><p>Fortunately, this company really seems to understand what its employees need, and part of the snack shelf in the lunch area is dedicated to stomach pills and digestive remedies. You’ve stopped grabbing Dr Pepper from the fridge and have replaced it with famotidine tablets in your daily routine. That shelf has been empty and untouched ever since the morning you removed the final can, anyway. There’s a bunch of other stuff in there, mostly flavored seltzer and stuff that’s a little too <em>frou-frou</em> for your taste. You originally thought that maybe you’d gain weight from the arrangement—each one of those cans added about 150 calories to a diet and lifestyle that wasn’t accustomed to such a thing. Yet strangely, the opposite has happened and you have been losing weight reliably, even when you were still on the sugar water. You pop two tablets and swallow, they go down with substantial difficulty. Even with the bland chalky taste of berry-laced chemicals, nothing improves.</p><hr><p>You have known for a while that something was going on, ever since you choked and… Well, you can’t even call what happened “choking” really. The doctor called it “dysphagia”—he was very clear that this was a symptom and not a disease by itself—the underlying cause could have been a range of things, anything from “shrug” to “hm, interesting.” In the time since then you have become acutely aware of the act of swallowing. You notice every hitch, every motion, every sequence of muscle contractions between the back of your mouth all the way down to the middle of your chest. You have no ability to control any of these events—it still remains a largely autonomous thing—but the initial kick-off step, where the food leaves that fully controlled gate at the back of the tongue and tumbles into the great unknown, has become very difficult to control.</p><p>You compensate by taking smaller bites, chewing more thoroughly, deliberately shaping things with your tongue in an effort to line it up in a way that goes down more smoothly. It does not work. You’ve learned that you have no trouble swallowing liquids, and if you take a pill-sized bite of food you can sneak it down with a sip of water. Eating this way takes approximately forever.</p><p>You adapt to this by taking smaller portions, or taking food to-go when dining out, but the main factor remains water. Each bite of food comes with a splash of water, which really fills you up in terms of volume but not nutrition. Some of your meals have run for so long that you need to excuse yourself to the bathroom to eliminate some of the excess water midway through.</p><p>You’re simply not eating enough. Your pants are getting loose. That one well-worn hole in your belt goes right past your waistline now, and you’re wearing down a fresh new hole. On top of that, you are <em>scared</em> during every meal. You can’t eat without an ample supply of water within reach. You become anxious if the level of water in the glass drops much below the halfway mark. You ask the waitstaff in restaurants to bring multiple glasses right from the get-go.</p><p>You don’t even know what you’re scared of. Since that original incident on the train, nothing like that has ever come close to happening again. And yet, you have become incapable of enjoying even so much as a cookie without having a glass of water in your other hand. You don’t eat much around guests anymore. You weigh less than you did when you graduated high school, yet the BMI charts all say “healthy weight, great job!” based on your height. This does not feel healthy.</p><p>You’ve started trying to avoid looking at yourself in the full-length mirror. You don’t feel fit, and you certainly don’t look it either. The only word you can think of to describe yourself is “scrawny.” Scrawny with a dark, thick, leathered welt down the whole center of your abdomen. You’ve attained the chiseled physique of a Roswell Grey.</p><p>You run your employer-sponsored health plan through its paces. They stick cameras up your nose and down your throat. Your dentist wants you to start wearing a bite guard due to evidence that you’re grinding your teeth while you sleep. A team of radiologists bombards you with a lifetime’s worth of X-rays to produce a live video of your neck while swallowing. All of the sample material is the consistency of pudding, which you call out as not being the kind of thing that you’ve been having trouble with. They don’t have anything firmer that contains enough barium to show up on the scan, and surprise surprise, the symptom does not occur under these conditions.</p><p>The prevailing theory is that, due to the demands of your occupation, you are experiencing acid reflux that is damaging your esophagus. They prescribe a whirlwind tour of unpleasantly large and equally ineffective pills with names like esomeprazole and lansoprazole, names that you feel you shouldn’t need to know at this early stage of your adulthood. No improvement comes.</p><p>During a routine checkup, you find yourself interacting with a doctor you’ve never met before. He was a last-minute substitution due to some scheduling issue with your usual doctor. He scans your medical record and remarks:</p><p>“Seems like they’ve been running you through the wringer. Tell me about your problem.” You do. He inquires a bit into the nature of your work, and he can plainly tell that it is destroying you from the inside.</p><p>“Let’s try something here.” He starts clicking around on his wall-mounted computer. “I’m going to prescribe an antidepressant and an anti-anxiety medication. Start taking those, and let’s follow up in a few weeks.”</p><p>You had always been under the impression that such things required the detailed analysis of a psychiatrist or something, maybe with a bunch of questionnaires and electrodes and wires coming out of your head. But no, evidently a regular general practitioner can just <em>do that</em> if they feel the need to.</p><p>You ask him to explain his reasoning, even though you’re pretty sure you already understand the gist of it. It’s not that getting punched in the stomach is making you sick. Getting punched in the stomach is causing <em>emotional problems</em>, and those moods and feelings are causing the physical symptoms. You had never even once considered approaching the problem from that angle before. It was like somebody slapped your head and called you a dipshit, in a clinical sort of way.</p><p>You fill the prescription and, with the help of a little bit of water, take your medicine.</p><hr><p>“Hey Val, um…”</p><p>You’ve been taking the pills for a few weeks now and are definitely noticing changes in your behavior. The part of your brain that tells you “Don’t ask that, it’s uncomfortable/inappropriate/weird/impolite…” is still there. Noticeably absent, however, is the part of your brain that heeds those warnings. You continue:</p><p>“Have you ever been on antidepressants?”</p><p>Val stops typing and glances up at you for a moment, then looks back down.</p><p>“Yeah, I used to be. At the old job.”</p><p>You are vaguely aware of Val’s work history, although you’ve never gotten into specific details with her. She did graphic design and production for the advertising arm of one of those companies somewhere east of midtown. She never once expressed a fondness for that work or a desire to return to it.</p><p>“Most of us were,” she continued. “People can’t survive that environment without help. A bunch of the people behind you are probably on them. Or they oughta be.”</p><p>You turn halfway around to look over your shoulder. A larger than usual clump of people has formed behind the turnstiles. Somebody is being a slowpoke finding their badge and that’s clearly irritating a dozen people behind them. You catch yourself staring at the scene, fixated, wanting to watch the show to see how it ultimately plays out, but, nah. You turn back.</p><p>“Why’d you stop?” you inquire.</p><p>“Didn’t like the side effects,” she said with an expert curtness that you’ve grown to admire. The visitor badge rises from the printer and she peels off the backing. You can tell that this is the absolute limit to her willingness to elaborate on the subject. She has shared very little, but more than enough.</p><p>“You know, I don’t think I do either.” You take the badge, fold it in half such that it will never stick to anything again, and stuff it into your pants pocket.</p><hr><p>As far as you can remember, you have never felt impatience at this job. The sense of impending dread you’ve experienced during your time spent in the Jackson conference room—now serving as the home for a large stack of flattened cardboard boxes in addition to the growing fleet of damaged gaming chairs—<em>who keeps breaking all these chairs?</em>—has never once been superseded by any other emotion or feeling. Until today, right this minute. Now you’re just impatient. Irritated. Why do you still get here so early? Chris has never once punched you before 9:30. You could probably roll in anytime you want. What an inconsiderate asshole.</p><p>“Good morning, good morning!” Whatever. Get it over with.</p><p>“Quick question: Has anybody talked to you about Eddie?” Chris asks.</p><p><em>Who in God’s name is Eddie?</em></p><p>“No, I don’t think so.”</p><p>“Ah, okay. Well, Eddie has decided to pursue other opportunities. He’ll be leaving us after Friday, and we’re going to do a little sendoff during happy hour.”</p><p>You pick up on the hint. You used to come to every happy hour religiously… for a while. After four or five of them, you started attending less reliably. You found it increasingly difficult to come up with ways to pass eight hours of a workday out in the city, especially now that it’s freezing cold most days. You haven’t been to any of them in weeks. If you want to still keep up the appearance of a team player, you’ll probably want to go to this one. And who knows, maybe some of the attendees will be more willing to show an authentic part of themselves for once.</p><p>“Sounds great,” you parrot.</p><p>Your mind is somewhere else, yet nowhere in particular. Normally you’d be trying to psych yourself up at this time, but this morning you’re just kind of drifting through things. Chris rolls up his right sleeve as he has done a hundred times before. Wait, is it actually one hundred? Or more than that at this point? Let’s see…</p><p>Your attention is pulled back to something new and unfamiliar. Chris has started rolling up his <em>left</em> sleeve as well. A large Apple Watch—maybe the largest and most gaudy one they sell, but honestly you never paid much attention to their product line—loosely jingles on its stainless steel band. He doesn’t just slide the sleeve up; this is a careful process of folding the cuff over itself, inches by inches, up the arm. The roll stops once it clears his elbow, resting loosely at the base of his bicep. As he moves his arms your eyes find something even more unexpected: a blackwork tattoo on the outside of his left forearm. It looks like a flower petal, but there’s also a solid bar… That’s a Celtic cross. A large rose. A vine with thorns wrapping around the whole piece.</p><p>You’re surprised, or at least your brain has responded with the thought of “that is a surprising thing to be seeing at the present moment.”</p><p>“Unfortunately, we’re all going to have to hustle a little bit in the short term to make up for his departure. So it’s not just you, we’re all making sacrifices.” He winds his fist way, <em>way</em> back. This seems, uh… different. You clench your eyes shut.</p><p><span>THWUMP.</span></p><p>Whoa, falling backwards. You step back to catch yourself, it’s not enough. Another step, still not enough. You feel as though you are tumbling end-over-end while the ground shifts beneath your feet. Another step, now your back has made solid contact with the wall. You stop trying to move, appreciating this single moment of stable proprioception. You slide down the wall and come to a rest in the crouched position. You wrap your arms around your legs and just squeeze for all you’re worth.</p><p>You’ve managed to get through most of your life without really studying the inside of your eyelids. Like, how could a person do that in the first place? They’re just covers that turn everything black, or in brighter circumstances, a kind of blood red that really ought to be more unsettling than it is. You’ve recently started doing it, or at least attempting to. The longer you stare at the blackness before you, the less black it appears. It’s now a very deep maroon, basically purple, although still not very bright. It’s not a color you often see in the waking world; anything putting off such a darkened hue would look black by comparison. Maybe it’s a color you could find in a darkened room under ultraviolet light, that’s the closest comparison you can conjure up.</p><p>On the fringe of this purple field, a ring of greenish yellow emerges. It too is dim but intense, a color that would not be well loved in the real world but which nicely complements the purple here. The yellow ring expands inward, pushing the purple into a shrinking spot that eventually disappears at the center of your field of view. Now a fully yellow scene, a purple ring begins forming at the edges of your periphery and slowly sweeps away the yellow in the same way. Then the yellow ring again, then purple. The cycle repeats for as long as you want it to. It’s soothing, reminding you of a screen saver that no longer has much practical use on modern computer displays. If you bothered to count the rings, maybe you could use their oscillations as a kind of crude stopwatch.</p><p>You take a deep breath, open your eyes, and stand up. It is nearly 10:30 now.</p><hr><p>“Cheers!”</p><p>You really don’t want to be here. This entire evening has been dedicated to listening to people recount completely unrelatable stories about a person you have never seen before. What did Eddie <em>do</em> here? Why does everybody seem so genuinely enamored with this man? How have your paths never crossed in the entire time you’ve been here?</p><p>You finish another bottle of Rolling Rock, choosing to temporarily disregard the medical advice to limit alcohol intake while on antidepressants. You figure that, as long as your mouth is busy drinking beer, nobody will expect any thoughts or opinions to come out of it. For the most part, it looks like people have forgotten you are even here.</p><p>You slip away from the group for a few minutes and take a meandering stroll around the seventeenth floor. It was dark outside when this happy hour started, and the office looks starkly different in the absence of daylight. All of the conference rooms are dark except for Aikman—you can’t recall a single time when the lights in Aikman had been turned off, occupied or not. You count two other people on the floor, both of whom are working studiously while trying to tune out the noise from the members of the Next Innovation Lab. You continue on to the PlayStation nook. It occurs to you that you’ve never actually seen anybody make use of this area. Does the system work?</p><p>You switch on the large television screen and it lights up with a pattern of alternating solid pink and white bars. Several thin horizontal lines appear as well, all intersecting at a large asymmetrical black splotch near the center-left of the screen. You pick up the controller and press a few of the buttons. They collapse under your fingertips, suggesting that none of them work correctly anymore. You flip the controller over and notice that the rear of the case is cracked down the middle, separating from the top. The other controllers are similarly damaged. As are the game discs. <em>Who keeps breaking all this stuff?</em></p><p>You complete your circle around the floor, concluding that you have been here long enough to have ingratiated yourself to this group—at least enough to make it to the next person’s resignation. You pause to take a look out the window. There is now a pelting sleet visible around the streetlights below. You briefly consider staying a bit longer to wait it out, but no.</p><p>“Hey, don’t hike through that,” Chris scolds. “Here, call a taxi.” He lifts a stack of papers on his desk with one hand and plucks a business card from the pile with the other. “You can expense it.” You squint to read the phone number. It is the city’s area code, followed by seven identical occurrences of a digit.</p><p>You dial the number with some difficulty; you have lost track of exactly how many drinks you’ve finished but it is certainly more than you’ve had in a long time. The dispatcher at the other end identifies themselves as a “luxury car service.” You tell them where you are and where you’re going, and they give you an estimated pickup time a few minutes from now. You wave goodbye to the few people who notice you beginning to bundle up, and you slip into an elevator.</p><p>There is only one person at the reception desk at this hour, an elderly man you haven’t seen before. You exchange goodnights. Through the heavy glass doors, made heavier by the howling wind, you find the large Lincoln sedan with its patiently-waiting driver. A total of perhaps fifteen seconds in the pounding elements, and you are inside the warm vehicle.</p><p>The back seat of this car is simultaneously luxurious but also kind of shabby. The upholstery is well-worn and every surface that could accumulate scratches from jewelry and attaché cases has done so. It smells strongly like cologne and cigars, and you’re pretty sure a determined person could shake a couple dollars worth of cocaine out of the floor mats.</p><p>But here you are, adequately intoxicated, looking through the clouded-up passenger side window at slick roads, reflected lights, trees. A line of slower cars in the right lane falls away as you roll onward. You almost never navigate this part of the city by surface streets, and have no idea where you are in relation to your house. None of the passing road signs are legible through the mist and fog. You sit and continue to stare out the window, at light and shadow, and at nothing in particular.</p><p>“Sir?”</p><p>You snap awake. The car is parked.</p><p>“We’re here.”</p><p>You look out the window and see your front yard. The driver reaches down and produces a miniature tablet computer with a credit card reader. He taps the screen a few times and hands it over his shoulder. You take it and review the contents of the screen. This is, by no small margin, the most expensive cab ride you have ever taken. You wince a little, swipe your credit card, and select the middle tip amount of the three suggested.</p><p><em>“You can expense it.”</em></p><hr><p>One of the things that they tell you you’re supposed to do, assuming you’re a responsible adult, is to buy life insurance. You followed that advice a few months into your marriage, and aside from the inconvenience of having to submit the annual premium payment—<em>why doesn’t this company support auto-pay?</em>—you haven’t thought much about it in years. You don’t even remember the specifics about what the policy provides for, should it ever pay out.</p><p>You ponder this while looking out the window into the backyard. There’s a good chance that the last occurrence of <em>really bleak</em> winter weather is behind you, and the plants look like they’re ready to spring to life any day now. You follow the tree trunk up to the hollow that you have studied well. Some time in the last week or two, the tail of that dead squirrel finally came detached. Whether this happened through a natural process or if it was assisted by some kind of scavenger, you can’t say for sure. Actually, both of those options are each kind of natural in their way.</p><p>In your bedroom closet, in the top drawer of a cheap filing cabinet, a hanging file folder with an orange tab holds some answers. You pull out the cover sheet of the policy and scan it for numbers. Once you locate a calculator, you divide a six-digit number by a two-digit one, yielding a rather unimpressive five-digit quotient. Hm.</p><p>You try to retroactively justify why you just did that. There is no sequence of events where that money belongs to you. It’s for the benefit of those who outlive you. Or, in a purely actuarial sense, more probably to benefit a family you’ll never meet in their time of tragedy and unimaginable grief. You hope.</p><p>Is this number an independent assessment on your value as a person? Well, no, this was mainly a function of how much you were willing to part with each summer when the insurance premium payment was due. It could’ve been much higher, or much lower. It doesn’t mean anything. What are you trying to achieve here?</p><p>You put the sheet back and flip through the other folders in the drawer. You quickly find what you’re after: the pages of material that the pharmacist gave you the first time you filled your prescriptions. Nausea, agitation, aggression, unusually grand ideas, ah, there it is, “new or increased thoughts of death or dying.” Mystery solved, then.</p><p>To clear your head, you do something pointless and look Eddie up on LinkedIn. You’ve sort of lived by a rule that you don’t connect with anybody you currently work with, in case something you post or adjust within your profile on that wretched site grabs the attention of somebody in the office. Much like accidentally leaving an updated copy of your résumé in the shared printer’s output tray, that’s how rumors get started. Eddie though, he’s become inert. Nothing you do or say in front of him would likely make it back to your employer, as it’s quite likely that Eddie might never talk to any of the people you work with again. You click “Connect.”</p><p>The screen fills with the profile pictures and names of your current coworkers. With a single click, this machine has learned much about you and your social fabric. You sign out without acknowledging a single one of its fresh suggestions.</p><hr><p>“There’s no clip? Or lanyard?”</p><p>“What, do you think we’re made of money?” Val quips dryly.</p><p>It really does feel cheap. The company name, followed by a picture of your face, followed by your name in stark uppercase, followed by the company name again. The printing is fuzzy, looking like something out of a late 90s inkjet in draft quality mode.</p><p>You had pretty much given up on reminding anybody that you were never given an ID badge. You’re not sure if Val or anybody on the reception team specifically went to bat for you, but the end result is irrefutable: You have a real badge now, and you can let yourself into the place at will. Never mind the fact that the picture makes you look like a person who had recently been punched in both eyes. You flip it over; the back is solid white.</p><p>“Well, I guess this is the end.” As you speak the words, you truly can’t tell if you mean the sentiment that such a phrase would typically convey. The only reason you talked to the receptionists at all is because you needed them to let you into the building. With this badge, that need is gone. But these people—specifically Val, who you have tried to get whenever the dynamics of the visitor line permitted you to—were the only ones in this building who still seemed to retain their humanity. What little you’ve spoken, probably a handful of minutes over the course of months, has contained some of the most cathartic and genuine conversation you’ve had in years.</p><p>You do mean it, you decide.</p><p>“I’m sure we’ll survive,” she answers. She most likely means it too.</p><p>You bring your new badge to your forehead and mime the action of tipping your hat. Val gives a small wave, and you leave for the turnstiles.</p><p>You had imagined, once or twice, what it might be like to do this by yourself. To tap your badge, become enveloped in a green glow and have a pair of person-sized frosted glass panes yield to make way for you and you alone. As you draw nearer, the feelings of pride and belonging don’t really come. It’s just a gate, you do this all the time in the subway. The only difference here is that it doesn’t smell so strongly of paint and urine.</p><p>You tap your badge. Nothing happens. Is it already damaged? Is somebody playing a trick on you? <em>Are you fired?</em></p><p>Beep. Green. “Car 1.” The glass panes slide into their housings, presenting an unimpeded path to the rest of your day. You make sure to pause and make a mental note of this in case you want to try to feel something about it at some future time. You step forward.</p><p>BUZZ. As you pass to the other side, the lights turn red and the gates quickly close. The turnstile has decided, incorrectly in this case, that a tailgater has followed you through the gate without properly identifying themselves. The appropriate response would be one where you briskly walk away so nobody has a chance to figure out which idiot couldn’t use the turnstile properly. You, though, you stop and turn around to look toward the reception desk. Nobody has bothered to look up to see what the problem was. You can’t see Val through the crowd, but you feel like, somehow, she knows you were the one who did that.</p><p><span>THWUMP.</span></p><p>“Oh, by the way,” Chris adds. “I had to reject that expense reimbursement for the car service last week. We can only approve travel if it’s with companies on our approved vendor list, plus you would’ve needed to get the approval upfront in order to expense that much in the first place.”</p><hr><p>You tap your credit card to the reader and collect your purchases. They don’t offer shopping bags to those who check out with such a small number of items, and you won’t need one anyway. You step out through the automatic sliding doors into the fresh air. It’s unseasonably warm this afternoon, the first short-sleeve shirt day of the new year.</p><p>This has become something of a regular spot for you. It’s the convenience store attached to the gas station down the street from your house. You’ve been refilling your car here for years but had never gone inside prior to a few weeks ago. You’ve developed an afternoon walking routine, with the first stop coinciding with a visit to this store. Each time you pass by, you buy a snack or some kind of on-the-go meal to consume as you walk. Today you are leaving with a one-pound bag of Nacho Cheese Bugles and a “Pepperoni ’n Cheese” Slim Jim. You eat the Slim Jim immediately and discard the wrapper in the parking lot trash bin. The Bugles, you will eat over the course of the next hour as you wander through the streets of the residential neighborhood on this side of the main road.</p><p>Remarkably, you do not have a beverage today. After consistently taking the medication you have been prescribed, the swallowing issues have effectively disappeared. You have since learned that you could bring them back, along with the sour feeling in your throat, by ingesting too much caffeine in too short a time. Intentional focused worrying can also make it recur. With that aspect of your life now thoroughly controlled, you have turned into an eating machine. You can clear a plate and go back for a second helping twice as big. You crave random flavors—things you have not eaten in years—and willingly give into those desires. Over the course of the first half of this one-hour walk, you eat the entire bag of Bugles.</p><p>Your weight has recently started increasing, although after the deficit you were in you figure you’ve got a ways to go before you need to start disciplining yourself out of this behavior. For the time being, though, this just feels… huh. This just feels <em>blank.</em> What goes in that blank. You roll the empty bag up and slide it into your pants pocket.</p><p>You are still pondering this question. You feel as though… you don’t feel. That’s basically the only way to make sense of it.</p><p>You have the dumbest epiphany. Antidepressants don’t make you happy. Anti-anxiety pills don’t bring calmness. This cocktail of medications is simply making you not-depressed and not-anxious. They don’t produce the opposite emotions to fill the newly-created void. Or, at least, they haven’t for you. It’s true that you’re not anxious, and that’s had a measurable positive impact on your ability to <em>consume nutrients</em>. And you’re not sad either, which has clearly improved your willingness to… oh.</p><p>You almost managed to get all the way through this walk without your thoughts drifting back to your job.</p><hr><p>You didn’t tell anyone you had stopped doing it, you just stopped. “Changes in thinking or mood” was going to be your justification if anybody asked. Every thirty days, as instructed, you’d go to the pharmacy and pick up your prescriptions. The copay, five dollars each and every time you go, presumably in place to dissuade people from wasting resources by doing exactly this. You put each bottle on the shelf in the cabinet without ever opening it. You probably should’ve made a note to record exactly when you stopped taking your medication, but oh well.</p><p>The first emotion to come back was fear. A very nonspecific, wide fear about nothing you can quite put your finger on. It manifests itself as a persistent unwanted thought whenever you try to concentrate on something. Today, it is the interrupting notion that there is going to be a loud sound. Maybe a shelf is going to fall down, or the smoke detector is going to start blaring, or the kid down the street is going to deliberately make his car backfire, <em>or the entire second floor of this house is going to collapse on you.</em> Expect that sound. Anticipate that sound. Don’t freak out when it happens. It’s <em>going to happen.</em> Just don’t freak out when it happens.</p><p>According to WebMD, this is PTSD. Of course, according to WebMD you also have testicular torsion and a mild autism diagnosis.</p><p>The other emotions slowly start to come back too, particularly anger. That, combined with despair, forms the building blocks for frustration and before long you are swimming through your old brain chemistry again. Fortunately the dysphagia does not return. You have learned how to eat without overthinking, and that lesson seems to have stuck. You’re not quite as hungry for random junk food anymore, although you do still partake. The Chipotle queso in particular, setting aside the fact that the price strikes you as a total ripoff for what it actually is, brings such immense joy that you want to shoot it straight into your veins.</p><hr><p>“So what do you do again?”</p><p>“What <em>don’t</em> I do, am I right?” You deflect as best you can, but you’ve never mastered the art of weaseling out of conversations with your in-laws. The joke does not land; a genuine answer is expected here. “Well, it gets complicated.”</p><p>You decide in the moment to explain what you did in your previous job, since that at least sounded like an honorable thing for a person to devote their career to. Without directly intending to, you color your words using the emotions that you carry about the current job. You describe a dysfunctional morass of idiots all pulling in different directions while somehow collectively bumbling themselves farther away from anything that could meaningfully improve anybody’s lives. You tell of ignorance, malice, arrogance, avarice, possibly touching on most of the seven deadly sins in a single sentence. As you conclude, he is both stunned and horrified. Perhaps you could’ve phrased it more gently. Oh well, maybe he’ll avoid talking to you for the rest of this dinner.</p><p>You rearrange the food on your plate. Meat down here next to the knife, mashed potatoes packed without touching anything else, green beans at the opposite edge. All lined up like a little log raft. You know, WebMD might be onto something with that autism idea.</p><p>You’re back to thinking about work again. You’ve learned to compartmentalize a bit, or maybe you’ve just trained yourself to try very hard to avoid all thought of the subject except for when you’re required to. Sometimes that fails, though, like when a family member unwittingly brings up a subject they don’t realize to be touchy.</p><p>You start to wonder what you might write down on your résumé to account for the time you’re spending here. You can’t just say you “adopted workflows to increase punch preparedness by 300% while adapting to dynamic business needs” or whatever; there aren’t enough buzzwords in this type of work to get you back to the kind of job you had before. Maybe you could leave it off, call it a sabbatical or something. Perhaps you worked at a startup that failed, or wrote a book that’s not yet published, or contracted for some super-secret entity that you can’t reveal but it was <em>totally</em> using the same tech stack that the job you’re applying to does.</p><p>You look up and briefly stare into middle distance. The last time you thought about doing all that, it was clearly time to leave that job.</p><hr><p>It would not be inaccurate to say that each day has been worse than the last.</p><p><span>THWUMP.</span></p><p>You have completely driven away any delusion that this is the kind of life that a person should live.</p><p><span>THWUMP.</span></p><p>There is enough money in your savings account to live, albeit miserly, for a few years without working at all.</p><p><span>THWUMP.</span></p><p>Setting aside the paycheck, there is nothing here that you will remotely miss or ever attempt to rekindle to further your future career aspirations.</p><p><span>THWUMP.</span></p><p>You find that you don’t even care what happens anymore. You have transcended sadness and rode that feeling all the way past hopelessness, depression, simple cynicism, and have arrived in a place so utterly devoid of meaning that you have at one point idly considered what might happen if you cut both of Chris’s arms off with a band saw. You conclude that it would probably take much longer than you would prefer, and the whole “slip away under the cover of darkness” thing requires a lot of careful planning and you still don’t have the energy or discipline for that. So, no, not really an option here.</p><p><span>THWUMP.</span></p><hr><p>Friday, May first. The weather has become reliably nice almost every day, and even your worst moods have improved recently—not always by much—but improved a little by spending time outdoors. It’s a bit after 7:00 a.m. and the sun has been up in that cloudless sky for almost two hours. You, along with a hundred or so nearby residents, stand on the raised platform next to the train tracks. It is about five minutes before the next scheduled departure, and this train has a reasonably good track record of being on time.</p><p>Soon you will all crowd onto the train, grapple for seats, and wait patiently for the conductor to check each ticket and stick a seat check marker under the clip in front of you. You will ride the train to its terminus, whereupon you will enter a separate transit system that will carry you into the heart of midtown. Day after day this system operates at or near capacity, its systoles carrying life-sustaining nourishment to the vital organs and other viscera that form the city’s economy.</p><p>Back while you were doing the old job, you had to endure two instances of the commuter rush every day. Now it’s just this one in the morning. Riding home during the mid-morning hour is cake; frequently you’ll have an entire half of the train car all to yourself.</p><p>That’s not what you’re thinking about this morning, however. You can’t quite decide what you’re thinking about. You look past the tracks into the parking lot of the dollar store that abuts the transit system property. At the top of a light pole, a mockingbird delivers a breathlessly complicated series of squawks and chitters. If you had even the slightest bit of experience with bird song, maybe you’d have more of an opinion on the accuracy of its mimicry. Its sounds combine with, and then are drowned out by, the rhythmic striking of a bell. A bit faster than once per second: Ding. Ding. Ding.</p><p>From your left, the train approaches the station platform. At this time of day the locomotive is at the rear of the configuration, pushing the cars ahead of it. Where you stand, toward the south end of the platform, the passenger cars roll quietly along. The loudest sound is the squeal and hiss of the air brakes as the train comes to a halt. The mockingbird flies away in response to that particular noise.</p><p>Individually, each passenger begins to move toward whichever door stopped closest to their position. A few old pros have long since determined exactly where to stand so they don’t have to move at all. From a distance, a naïve observer might assume that there was some grand choreography to this dance, but no. Everybody is simply following their own path of least resistance.</p><p>The doors open and the conductor’s voice scratches through the speakers, saying nothing intelligible or particularly important. Well, <em>almost</em> all the doors open. The door in front of your group has remained closed, and appears to be out of order. The group collectively realizes this and targets the next-nearest door to the left. Your group merges into the existing crowd already at that door, producing a mass of maybe thirty people all trying to board at that position.</p><p>A half-step toward the door. Then a pause until more space opens up. Half-step. Pause. You notice that everybody around you has continued in this fashion, but you have not. You’re just standing there. People are walking around you and filling the space you had previously inhabited. You are just a rock in the middle of this flowing stream, a minor obstacle to navigate and, given enough time, erode into silt.</p><p>You watch the last person in your group step up onto the train, turn toward the aisle, then leave your view. The doors close a moment later, and the train begins to move. You count the doors that pass by your position—eleven of them, you’re pretty sure. It doesn’t really matter which one anybody picks; they’re all going to the same place. The locomotive passes next, with its engine loud enough to be felt and its diesel exhaust pungent enough to be tasted. The train rounds a curve to the right of where you are standing and fades into a memory.</p><p>A handful of people exited that train, and they all made their way down the stairs and past the station building. You are still standing in that spot and you are now the only person still on the platform. <em>What is this?</em> Is this what a nervous breakdown feels like? Is that what’s going on here? What are you going to do? Catch the next train? What’s gonna happen? Does it matter? Have you decided to just stand here all day?</p><p>For a moment, yes, you do simply stand there. You begin to look around more freely at the passing traffic, the birds on the station’s roof, the little flowers on the shrubs near the garbage cans, and the bees that are attracted to one or both of those things. You inhale sharply and let the breath back out. You turn to the left and start walking.</p><p>The area immediately outside the train station is well known to you. In addition to the dollar store, there is also a pharmacy, a grocery store, a half dozen small restaurants, and a bank branch. You’ve run plenty of errands here over the years. Strangely, though, you’ve rarely had a need to venture north. You are aware of one excellent hole-in-the-wall Mexican restaurant in that direction, roughly halfway between this station and the next one up the line, but that is the extent of your geographic knowledge of that town and everything beyond it.</p><p>You’re walking on the sidewalk of a residential boulevard that runs parallel to the train tracks. Your direction of travel, broadly, is north—“away” from the city. The streets bend and split and rejoin in curious ways, but you make sure to keep the tracks in sight to maintain your heading. One foot in front of the other, carrying nothing but the untucked button-down work shirt on your back.</p><p>In this moment, it does not bother you that you don’t know what you’re doing or why you’re doing it.</p><p>One of the first things you do before getting far is to set your phone to airplane mode. You have no intention of calling in sick or letting anybody know where you went. If they knew, they would probably try to pull you back from it. No, this is a path to be walked alone. Untethered. Man, stop thinking about that and enjoy the scenery.</p><p>Look left, no traffic. Look right, no traffic. You cross against the light.</p><p>You’re pretty sure that the train stations up on this part of the line are fairly evenly spaced. You try to mentally replay the list of station names that they prattle over the public address system every day. Best you can recall, there are nine in total. You’ve just passed the second one.</p><p>The sun is <em>just a wee bit</em> much. If you had planned for this excursion, maybe you would’ve applied sunscreen or brought a hat along. It’s not insurmountable, and you continue on. You have not even broken a sweat.</p><p>You look down at your watch. On a normal day at this time you’d be waiting for Chris to storm through the door into Jackson. Prior to today, you’ve somehow never missed a day. Neither has he. There’s a first time for everything.</p><p>Up ahead, something unpleasant: The entrance ramp to a cloverleaf interchange connecting this road to one of the numbered state highways. You’ve made it your life’s mission to never have to drive on this highway, and you’ll be damned if you’re going to try to cross it as a pedestrian. You stop and look around. On the other side of the street is a bus stop with a small printed map of the immediate area. You jaywalk there and inspect it. If you backtrack about three blocks, take a left, continue around the park… Yeah, that seems survivable.</p><p>You reverse course, turn, and cross the highway at an underpass. As you crest the hill, a comforting sign rises into view: Burger King. Ah, what the hell. It’s here, and you’re hungry enough for it.</p><p>For each chain restaurant that you visit with any kind of frequency, you’ve developed an order that has become your go-to for that establishment. A known amount of food for a known price that will leave you in a predictable state. Even this location in a borough you’ve never been to, with its cracked asphalt parking lot looking sad next to a bustling four-lane highway, could reasonably be expected to get the meal right.</p><p>They do, and it satisfies. Maybe it wasn’t the smartest thing you could’ve eaten given the day’s activities, but, well… Nothing you’ve done today was smart. On the way out, you refill your “medium”-size cup—the name is misleading; their medium cups hold damn near a full liter—with Dr Pepper. It’s free, technically.</p><p>You take your drink to go and rejoin the sidewalk that would’ve taken you around the outside perimeter of the park. You realize that, as a pedestrian, you can cut across. At the geometric center of this park sits a large duck pond with a series of floating fountains to churn up the water. A ring of benches surrounds it. The area is not exactly deserted, but at quarter to noon on a weekday it makes sense that attendance would be low. You take a seat on one of the benches, a respite that you don’t really require considering you just sat for twenty minutes eating a bacon cheeseburger meal. You close your eyes and listen. From here, you can’t make out the constant hum of the highway. You don’t smell car exhaust or garbage cans. Even the air feels perfectly still.</p><p>You examine the inside of your eyelids. You’re met with a full field of moderate-intensity red. There is no purple or yellow, no rings subsuming one another. Nothing moves. Nothing captures your attention. There is nothing in there that needs to be examined further. You open your eyes into a squint to give your pupils time to fully adjust. This is a nice spot. Maybe someday it’d be worth figuring out how to get back to this place.</p><p>You notice your right leg has started shaking up and down. You’re getting antsy sitting around. It’s probably time to go. You take a deep swig from your drink, stand up, and continue on your original course.</p><hr><p><em>“What’s the craziest thing you’ve ever done?”</em></p><p>A crushed and dirty plastic bottle sits in the middle of the sidewalk, and you kick it toward a utility pole. You miss. The craziest thing you’ve ever done; where did <em>that</em> thought come from? Ah well, may as well engage with it.</p><p>When people ask things like that, they’re looking for juicy yet largely relatable stories of youthful indiscretion. You know, getting real drunk, riding a mechanical bull, getting a dumbass rose–and–Celtic cross tattoo, things that might more appropriately be called “spontaneous” or “free-spirited.” Experiences you could package up in a neat little box, present to the person asking the question, and move on. Skydiving, swimming with great white sharks, having one real good night at a poker table, those sorts of things.</p><p>You always had difficulty producing memories like that. You never really engaged in behaviors that fit into the formula that’s expected. If anything, you were more of an instigator or an idea guy. (“Hey, Ryan! Betcha can’t drive all the way through the Taco Bell drive-through in reverse!” The son-of-a-gun actually did it, and he succeeded on the first try. The employees were apparently not paid enough to notice.) It feels somehow inauthentic to share those stories as if they were your own experiences. You’ve always been just a tiny whisper of chaos in somebody else’s ear.</p><p>So what is the craziest thing you’ve ever done? You’ve stopped walking to ponder this question.</p><p>It’s this. This right here.</p><p>Walking all the way out here—who knows how far it’s been but you’ve been at it for almost six hours—is likely the craziest thing you’ve ever done, for some definition of “crazy.” That’s already starting to tread dangerous waters, because it conflates impromptu foolishness with people suffering from genuine mental health disorders. There’s probably some segment of the population for whom those two descriptions overlap nicely, but that’s a damn hard needle to thread.</p><p>You ruminate and decide that “crazy” implies something that is more self-destructive than it really needs to be, something which ought to have been recognized as a bad idea by the person or persons involved. But then, there’s some wiggle room. In what way is it really self-destructive to skydive or swim with sharks, assuming of course that you survive the experiences? You suppose that over-reliance on chance is part of the equation as well.</p><p>“Crazy” is walking with only a vague sense of direction toward an undefined target, belting out an old Reel Big Fish song in a confident singing voice that you have never once let another living soul hear.</p><p>Wait, no. “Crazy” is randomly getting strung along at a job you never wanted and only took because <em>it was there.</em> “Crazy” is taking both hands off the steering wheel in order to just “see what happens.” It’s everything you’ve been doing for the last eight months.</p><hr><p>You expected to see a sign or something. Maybe it would have an ornate patch of landscaping around it, and the name of their narcissist governor to round it all out. Apparently they only do that on the interstate highways. When you cross a state line on foot, there’s very little fanfare. Aside from an abrupt change in the composition of the asphalt and the degree of workmanship demonstrated by the adjoining counties in repairing their potholes, very little has actually changed.</p><p>Through some series of events in the nineteenth century, the final station on this commuter rail line was built half a mile past the border of a neighboring state. You are now in that state, and will soon reach that station. It is the figurative but also quite literal end of the line. This is the last opportunity you’ll have to conveniently get yourself back home by train.</p><p>You’ve come to the conclusion that you’ve done whatever it was you set out to do. You have no idea what you accomplished and you’ve gained nothing tangible from it, but you have done <em>something.</em> You step into the air-conditioned building and buy a one-way ticket to your home station. You study the large map on the wall. In the corner is a scale legend, which helps you estimate that you have walked about fifteen miles to get to this place. It doesn’t really feel like it; you <em>could</em> keep going if you wanted to. You just don’t feel compelled to go any farther than this.</p><p>The timetable says that you’ve got about forty minutes here before the next train leaves. It will get you home before 5 p.m. and the ensuing Friday night rush. You find a bench outside in a shady spot and sit down. It feels good to rest your legs. As you slowly allow yourself to be drawn back into your regular thoughts and the responsibilities they represent, a mixture of guilt and apprehension beckons you to wake your phone from airplane mode. You do so, and a number of notifications appear in no particular order. One very specific notification grabs your attention: an email from Chris.</p><p>You assume that an unexcused absence—or, call it what it is, you skipped work—would be viewed unfavorably. Maybe he reached out to see if you were still alive. Maybe he took your lack of response as a signal of distress and then proceeded to send the cavalry to come to your aid. Perhaps he simply fired you. These are all fine outcomes, you conclude. You open the email:</p><blockquote><p>gentlemen,</p></blockquote><p>It should be noted at this time that at least two of the people in the <em>To:</em> field of this message are women.</p><p>Chris has never once capitalized anything in any written medium. You find his commitment to the style somewhat impressive, given how difficult this is to do in our current era of predictive text and auto-correction. There was a time when you yourself typed everything that way, but the difference is that <em>you</em> were fourteen years old and trying to be “edgy” while writing comments on a fan-run message board about <em>The Simpsons</em>, and <em>he</em> is a supervising manager at a multinational corporation.</p><blockquote><p>due to personal circumstance, i will be ooo today.<br>reachable on email.<br>chris</p><p>Sent from my iPhone</p></blockquote><p>Well. Seems like maybe you managed to get away with something.</p><hr><p>“Real sorry about missing you on Friday,” Chris offers while rushing through the door into Jackson.</p><p>He does not know that you are not at all sorry that you did not miss him.</p><p>The building’s security logs more than likely keep a record of each time an employee badges in. For all you know this information probably gets analyzed and funneled into the performance review metrics every cycle. But you’re also pretty sure that Chris doesn’t know you ever got a badge in the first place. He remains completely oblivious to the little interlude you took last week.</p><p>“No worries,” you say.</p><p>“Great. Well, we have to keep up the velocity here, and now we’re behind a day. If you’ve got the bandwidth for it, I’d like to pull a quick recovery here and punch you twice.”</p><p>Was that a question? Is he looking for you to sign off on the idea? Do you even have a voice in the matter?</p><p>Your non-answer did not matter, as Chris indeed did not ask a question. His sleeves are rolled up. His cable knit sweater, a muted shade of puke, stands in stark contrast to the primal virility pent up in his tensed arm muscles. He winds up. Your eyes are still open. You never really get to see this part.</p><p>His fist begins to move forward. Then to your right. It kind of looks like he is going to miss hitting you entirely.</p><p>You transfer your full weight to your left foot and begin to lift your right foot. You only now realize that you have just sidestepped Chris’s punch completely. This catches him off guard as well, and he takes an awkward half-step forward to maintain his balance. You both come to rest.</p><p>“Did you just dodge that punch?” Chris asks in a tone so surprised and lacking in confidence that it sounded like somebody else asked.</p><p>“I, um… I did.”</p><p>Chris looks at you for a good long while. He unrolls his sleeves.</p><p>“I expected better from you.”</p><p>He turns around and exits slowly. There is no empty farewell, no gust of wind, no swinging door. He retreats quietly into the din of regular business on the seventeenth floor. You stand there for a moment, thinking maybe he just wanted to regroup before coming back to really tear into you, but he does not return.</p><p>You choose the longer path to the elevators, trying to maintain the greatest possible distance from Chris’s desk. You pass the wall of displays, with their dashboards and graphs. You had never really spent much time studying them to make sense of the various acronyms and business concepts, but you get the distinct impression that the numbers are a lot more… red? Did these graphs always trend downward like that?</p><hr><p>The invitation email contained no other context. 9:30 a.m., one-on-one between you and Chris, in the Aikman conference room.</p><p>Whatever adjectives you might use to describe Jackson, Aikman is the exact opposite. Glass-walled on three sides with two entrance doors, housing a table so massive that you assume they put it there first and then built the rest of the room around it. The space contains enough Polycom microphones that it is probably sensitive enough to read your thoughts. The single opaque wall supports a display screen too large to fit in <em>anybody’s</em> living room, which is currently showing a clock superimposed over a photograph of a serene lagoon on some Pacific island paradise. The clock reads 9:24, and you’re quite sure of its sub-second accuracy.</p><p>In your time here, you’ve seen this room get plenty of use. Usually it’s inhabited by folks who are dressed up a little nicer than the average worker on this floor. Ties and blouses, that kind of look. It’s seldom used by anybody you recognize, instead hosting groups of people who come straight from the elevators and who return back there promptly when the meeting is done. You don’t know how many Aikman-class conference rooms there are in this building, but this one certainly draws a crowd. You, however, have never once set foot in here prior to this morning.</p><p>It seems a little silly to have a one-on-one in such a large space, but this is Chris’s show. You are seated in the chair directly next to the head of the table. The head position has a large console to control the display and room lighting, a set of responsibilities you want nothing to do with. To your right are at least nine other chairs, all neatly pushed in against the table. The people from Facilities apparently devote special attention to keeping this room clean and tidy. From your position at the table, you can see clear from the elevators over to the aisle where your team sits.</p><p>You see Chris emerge from the elevator before he sees you. Your eyes meet through the glass wall, and you acknowledge each other’s presence. You peek at the clock on the large display. 9:29.</p><p>Chris heaves the door open. The room is large enough that you don’t feel this one.</p><p>“Good morning,” he says coldly.</p><p>He walks around the table as if he is targeting the head seat. Upon reaching that spot, he reaches over the back of the chair and presses a button on the console. In an instant, the glass walls of the room turn a solid milky white. You have never once seen the room in this state—you weren’t even aware that materials science had created a type of glass that could do that. Whatever happens in here, only the two of you are going to see.</p><p>Chris pulls back the chair directly opposite you and sits down. The seat at the head of the table remains undisturbed, perhaps reserved for Business Elijah.</p><p>“I’m sure I don’t need to explain the reason for this meeting. Frankly, I’m more than a little disappointed in your performance as of late. When we went ahead with your merit boost during the last review cycle, we were rewarding your commitment to going above and beyond and we expected that same level of commitment going forward. It really seems as though you have begun to let the ball drop on multiple fronts here.”</p><p>You find it incredibly difficult to maintain eye contact during situations like this, so you focus your gaze on the top of his ear instead. There is, perhaps, six feet of table separating the two of you, so it is hard to see much detail. But you’re pretty sure… Yes, it looks like he’s got some grey on his temple.</p><p>“And this goes beyond velocity issues and following through with tasks. This is about how you are perceived by your peers. Whether you realize it or not, you are one of the more senior members of this team and a number of the lower-leveled ICs look up to you and model their attitudes after yours. They can tell when you’re, you know, going through motions, and they pick up on that energy and take it to heart.”</p><p>You have since switched to looking at his other ear. That temple has some grey too.</p><p>“As it stands right now, we need three punches—<em>at least</em>—to break even here. Along with a serious attitude adjustment. I’m willing to help you work out a plan for how we can move forward and rectify this. And if you need some time to think it over, I can be a little flexible. But you’ve got to let me know where your head is at here.”</p><p>You nod, take a slow breath, and glance down at the brutally beige carpet. “No need to wait, I’m ready now.”</p><p>“Okay, I’m all ears.” Chris folds his hands and leans forward. You’re staring at those hands now.</p><p>“I’m done. I quit.”</p><p>Chris unfolds his hands and places them flat on the table. He sits back in his chair again. “Understood. Well I’m sorry to hear that.”</p><p>You reach into your pants pocket to try to find your ID badge. It is difficult to do in a seated position. “Yeah, well.” You pull the badge out and toss it onto the table. It lands face-down, slides until it contacts a nearby puck mic, and stops.</p><p>“Is this resignation effective immediately?” Chris double-checks.</p><p>“Yeah.”</p><p>“Alright. We’re really sorry to see you go. It’s been a pleasure and, yeah, we’re done here.” He stands up, presses the button to unfrost the glass wall, and exits. You stand up, carefully roll your chair back to the position where you originally found it, and walk around the table to the opposite door. Surely somebody from Facilities will straighten up the other chair and do something with your badge.</p><p>As the elevator doors close, you have a fleeting thought: After all these years of working, throughout all of the different companies and managers, you’ve still never actually been <em>fired.</em> This one seemed close, though.</p><p>You thought maybe you’d tell Val about what just happened. But as you near the reception desk, you notice she isn’t there. There are four receptionists you recognize—even though you don’t really know any of them very well—and one new guy working Val’s position. Thinking back, you can’t actually remember the last time you saw her over there. Was it, hmm, maybe three weeks ago? The day of the big rainstorm, where you slipped and almost fell on the marble and she mimed a golf clap.</p><p>As you approach the main doors, you briefly look back at this grand lobby that you’ll probably never set foot in again. It’s been a long time since you really paused to take it all in. “Opulent”—in the most negative possible connotation of the word—really is the only way to describe it. And right there, in the middle of the scene and thirty feet in the air, one of the massive overhead lights has burned out. As you step out into the unseasonably high humidity, part of you idly wonders if—in some cosmic way—it was Chris’s punches that had been keeping it lit.</p><p>You pull your phone out during the train ride home and notice the warning: “Failed to download new messages, incorrect username or password.” Whatever they lack in new hire orientations, they more than make up for with offboarding.</p><hr><p>You spend the next few weeks trying to disentangle your personal life from your former employer. Your first order of business is to get yourself added onto the health insurance plan at your spouse’s job. You were also required to close out your employer-sponsored brokerage account, which holds a zero balance because you did not stay the full twelve months and none of the shares vested.</p><p>It turns out that the “generous” 401(k) employer match <em>also</em> has a one-year vesting cliff that you did not notice in the mountain of paperwork they originally gave you, so that balance roughly halves. That match was the only reason why you enrolled in the dumb thing in the first place. You try to log in to initiate a rollover into your personal retirement account, but their website refuses to load on any computer or phone you try. You end up entering your bank account details on a computer at the Apple Store in the mall, seemingly the only place on the planet where HR’s “myWorkBenefitsOnlinePlus!Now” portal actually loads correctly.</p><p>In the immediate wake of your departure, you swore that you would have nothing to do with that company or any of the people that worked there ever again. But with the passing of time, that stance has softened a bit. You see no harm in at least adding them as LinkedIn connections. It’s not like they’re going to jump out and drag you back in. Besides, sometimes it’s fun to scroll through lists of people you remember not liking very much and seeing that they’re still stuck in places you remember not liking very much. Kinda like keeping tabs on old ex-crushes and taking pleasure in the knowledge that they settled down with miserable people and went on to live unfulfilling lives. You know, totally normal and healthy things to do and think.</p><p>It’s quite easy to locate all of your former teammates. LinkedIn pretty much already knows the social graph; this feels like more of a formality. Jon, Dave, Davey, Lydia, Karan, Stef, JR, and even Chris. Profile after profile, picture after picture, every face grinning like a possum eating shit. You send a connection request to each one now to save you from having to ever think about it again.</p><p>The one profile you genuinely want to connect with is the one you can’t seem to find. Val isn’t connected to any of the members of this group, and you realize that you don’t even know what her last name is. If there is a single regret that you will come to carry away from these past nine months or so, this might very well be it.</p><hr><p>Today is the first day of the rest of your life. That’s the saying, right? You’re supposed to wake up all fresh and renewed, ready to tackle whatever the world throws at you next. Right? This should be your second wind, your new lease on life, the newfound freedom to chart your own course through this world.</p><p>It has hardly ever felt that way in actuality.</p><p>It takes a surprisingly long time for your stomach to return to anything approaching “normal.” You saw noticeable improvement in your pain levels in the first few weeks, but the layers of hard callused skin don’t fall away so easily. You haven’t been flexible enough to stand up and touch your toes since you were a little kid, but at least now you no longer feel like you’re suffering from appendicitis when you try.</p><p>Your thoughts have slowly started to move on as well. During the initial days after leaving, you would go through phases of anger, sadness, and even moments of embarrassment as you mentally replayed your time at the company. You found that it made a certain amount of sense to handle it the same way a person might handle a bad breakup in a romantic relationship: time, despair-eating, plus a downright eclectic range of music ranging from violently energetic to simply dour. Time, of course, being the most important ingredient. Your need for these other remedies decreases over the course of a few months. The dozen or so bottles of unopened antidepressants and anti-anxiety pills—all expired now—end up in the garbage.</p><p>The relative who shared her hopelessly out-of-touch perspective with you over the phone, the two of you had one more afternoon of conversation before she died. She didn’t ask anything about work, you didn’t offer anything about it either. Her funeral was a small and dignified affair, attended by precisely zero of her former work acquaintances.</p><p>With the benefits of time and distance, you begin to pick up on patterns that have gone unnoticed for the last ten or fifteen years. The way you felt at this most recent job, it wasn’t all that different from the way you felt at previous places. That sense of not knowing what value your work provided, the inkling that maybe you were getting paid a lot of money to do nothing of any real consequence, while at the same time feeling a very real stress and anxiety that the whole thing was just a hair’s breadth away from collapsing and taking you down with it, all while quietly suffering abuse under people who would happily climb over your still-warm corpse to get slightly closer to their own selfish goals. The stomach cramps at this job were novel, yes, but these emotions have been there ever since you started in the industry.</p><p>Was there a single thing you worked on in all that time that objectively made the world better? Is there anything you look back on with pride, something you can point to and say “I did that!” with a real sense of achievement? Is there anything out there that you know <em>for sure</em> the company even bothered to keep using after you moved on? As far as you can tell, every project you worked on got cancelled or shut down or rewritten or who-knows-what-all within a few years. You don’t even know for sure if you moved the needle on any of them.</p><p>And let’s not even get started on <em>you.</em> You, who breezily engaged with any recruiter who blew smoke up your ass. You, applying and interviewing for jobs you didn’t want, then saying yes to their offers just because the compensation was higher and it felt like maybe the grass would be greener too. You, who time and time again sat around waiting for the world to tell you what you were supposed to do at every given moment, spelled out in big bright letters. Someday you will have to learn that opportunities never find you like that; historically, <em>only punches do.</em></p><p>At some point you had talked to Doug, and he shared that he was thinking of starting a new company. Your response was that you probably weren’t ready for that. “Too burned out” was the reason you gave, if memory serves. So, smart guy, was that an opportunity missed or a punch dodged?</p><p>You keep checking on LinkedIn, which is not something a reasonable person does. You find one particular phenomenon at least slightly humorous: Several of your ex-colleagues who had originally accepted your connection requests have—for whatever reason—unfollowed you, leading them to reappear prominently in the “people you may know” box. Perhaps they view their link to you as some kind of poison, or your influence leaves them susceptible to whatever social virus led to you eschewing Their Way of Life. Maybe you are just permanently blinded by these cataracts of cynicism, but all you see on the site are punches. People throwing them, people receiving them, folks punching themselves, hucksters selling FIST certifications… This is your network. These are supposed to be your feet-in-the-doors, your legs up, your flies on the walls, your allies in the trenches. Scrolling through that feed, though, all you see are dozens of novel ways to get your guts pounded.</p><hr><p><em>“Why not be an arborist?”</em></p><p>You have to give them credit, that’s a heck of a way to begin the opening paragraph of a job posting. Why not be an arborist; it’s a question you can honestly say you’ve never been asked before. You consider the suggestion carefully and reach a conclusion: It’s currently 90 degrees out there and you don’t like heights. <em>You should absolutely not be an arborist.</em></p><p>You close the tab and place the phone back down on the kitchen counter.</p><p>A small ember of the idea continues to glow in your mind. Sometimes you romanticize the idea of going into the trades. Building houses, fixing air conditioners, pulling cables to bring up a new assembly line. You wonder what turns your life would’ve taken if you hadn’t tried to aim for this maximally-lazy path of drifting from one slightly-too-cold office to the next. It does seem like people who perform manual labor in physically demanding lines of work end up needing things like lidocaine patches and “pain powder” to a concerning degree, but then again, maybe you should’ve used those last year yourself.</p><p>Is it too late for a career change? Do you even <em>want</em> that? You don’t even know.</p><p>What you <em>do</em> know is, you can’t do this forever. You can’t live out the rest of your days on your dwindling savings. You can’t keep sitting around doing effectively nothing with this existence you have been given. You can’t continue to pretend that giving it another day is going to magically reveal an answer to these questions.</p><p>You escaped. You <em>survived.</em> You collected a couple of amusing stories to tell someday. The hard-won wisdom gained in those moments, although never specifically listed as an element of any compensation package, will likely pay dividends as you continue to observe situations and find patterns during your future journeys. The world remains well-stocked with selfish manipulative liars of all shapes and sizes, and you have become acutely aware of just how prevalent they can be in certain environments. Of course cynicism is not something that a person should strive to build their core identity around, but a small amount of it can serve as a powerful inoculant against the damage that might otherwise be inflicted by those personality types. If you could somehow travel back in time to deliver a warning message to your younger self… you wouldn’t. This all unfolded the way it was supposed to.</p><p>You step in front of the bathroom mirror and lift the front of your shirt. You squint a little. Your stomach is fine.</p><p>Knowledge, creativity, realism, humor, challenge. You have values. You always knew that you did, but you have only recently rediscovered them.</p><p>Ahead of you, a stretch of road that winds through the rest of your life. One foot in front of the other, you embark.</p><a href="https://www.scottsmitelli.com/articles/" title="Articles">«&nbsp;Back to Articles</a></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Tesla was hit by a wave of protests, sales are crashing, insiders are waking up (116 pts)]]></title>
            <link>https://electrek.co/2025/02/17/tesla-was-hit-by-a-wave-of-protests-over-musk-sales-are-crashing-insiders-are-waking-up/</link>
            <guid>43088993</guid>
            <pubDate>Tue, 18 Feb 2025 13:01:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://electrek.co/2025/02/17/tesla-was-hit-by-a-wave-of-protests-over-musk-sales-are-crashing-insiders-are-waking-up/">https://electrek.co/2025/02/17/tesla-was-hit-by-a-wave-of-protests-over-musk-sales-are-crashing-insiders-are-waking-up/</a>, See on <a href="https://news.ycombinator.com/item?id=43088993">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					
<figure>
	<img width="1600" height="831" src="https://electrek.co/wp-content/uploads/sites/3/2025/02/Tesla-protest-NYC-1.png?w=1600" alt="Tesla protest NYC" srcset="https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/02/Tesla-protest-NYC-1.png?w=320&amp;quality=82&amp;strip=all&amp;ssl=1 320w, https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/02/Tesla-protest-NYC-1.png?w=640&amp;quality=82&amp;strip=all&amp;ssl=1 640w, https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/02/Tesla-protest-NYC-1.png?w=1024&amp;quality=82&amp;strip=all&amp;ssl=1 1024w, https://i0.wp.com/electrek.co/wp-content/uploads/sites/3/2025/02/Tesla-protest-NYC-1.png?w=1500&amp;quality=82&amp;strip=all&amp;ssl=1 1500w" decoding="async" fetchpriority="high"></figure>

<p>Tesla was hit by a wave of protests across dozens of its stores in North America this weekend. With sales crashing and the board selling, it looks like some insiders are finally waking up.</p>



<p>As we reported last week, a grassroots movement has sprung to <a href="https://electrek.co/2025/02/13/tesla-takeover-protests-pla-at-stores-this-weekend-tesla-takeover/">organize protests against Elon Musk at Tesla stores around North America</a>.</p>



<p>The protests appear to have been quite successful, with primarily peaceful demonstrations in front of Tesla stores.</p>



<p>Here’s an example in front of Tesla’s Minneapolis store:</p>	
	



<figure><div>
<blockquote data-bluesky-uri="at://did:plc:ww5g23kfduhj2ihwgno6dqt2/app.bsky.feed.post/3liaatespqk27" data-bluesky-cid="bafyreie3zx3znrx34mffwtoss3ne5tw7zb3ovf3zhyax7ww5txnz5u2iqq"><p lang="en">Happening now: Protesters at the Tesla service center just outside of Minneapolis. Signs reading “Unplug Mad King Musk”, “This car runs on facsism”, “Who buys cars from a nazi?”, “Say no to doge”, “Don’t buy swasticars, BAD DOGE!”.</p>— <a href="https://bsky.app/profile/did:plc:ww5g23kfduhj2ihwgno6dqt2?ref_src=embed">daviss (@daviss.bsky.social)</a> <a href="https://bsky.app/profile/did:plc:ww5g23kfduhj2ihwgno6dqt2/post/3liaatespqk27?ref_src=embed">2025-02-15T17:34:06.172Z</a></blockquote>
</div></figure>



<p>Similar protests happened at dozens of Tesla stores for hours in an attempt to disrupt sales and protest Musk’s meddling in politics.</p>



<p>Tesla’s Manhattan showroom saw one of the biggest protests:</p>



<figure></figure>



<p>While most protests were peaceful and lawful, some vandalism did happen, with images of Tesla stores getting graffitied with anti-fascism phrases.</p>



<p>Groups supporting the protests, like Anonymous, say it is just the beginning and plan to keep putting pressure on Tesla to, in turn, put pressure on Musk.</p>



<p>As we previously reported, <a href="https://electrek.co/2025/02/05/tesla-sales-dropped-60-in-germany/" target="_blank" rel="noreferrer noopener">Tesla’s sales this year are crashing in Europe</a>, where they release monthly data.</p>



<p>In the US, the data comes a bit later, and therefore, it’s hard to tell how much Tesla sales are being affected by the negative perception of its CEO, but these protests against Tesla are undoubtedly unprecedented.</p>



<p>We have often highlighted how Tesla’s board of directors, which has authority over the CEO, has been entirely silent on this situation – letting Musk do whatever he wants, including spending little time at Tesla while running X, xAI, SpaceX, Neuralink, Boring Company, and DOGE.</p>



<p>While the board remains silent, it sounds like there’s finally some pushback amongst Tesla insiders.</p>



<p>The <a href="https://www.washingtonpost.com/technology/2025/02/14/telsa-employees-investors-musk-trump/" target="_blank" rel="noreferrer noopener">Washington Post</a> has obtained a recording from a recent staff meeting at Tesla where some have openly expressed concerns about Musk:</p>



<blockquote>
<p>Employees and senior managers at a recent staff meeting at one Tesla division openly expressed concern that Musk is damaging the company’s business and sustainability mission, according to a recording obtained by The Washington Post.</p>
</blockquote>



<p>Tesla employees spoke to the Post about rising beliefs amongst the ranks about Musk&nbsp;“tarnishing the brand.”</p>



<p>According to a Tesla employee speaking to the Post, senior managers said that they believe “the company would be better off if Musk resigned.”</p>



<p>While some insiders are starting to speak out within the company, the report highlights how most discontent with Musk among employees happens in private:</p>



<blockquote>
<p>Inside Tesla, most discussion of discomfort with the CEO happens quietly over lunch or in private messages, one of the employees who spoke with The Post said, and workers use external communication tools, fearing the company could be monitoring staff for signs of disloyalty.</p>
</blockquote>



<p>Tesla regularly implements waves of layoffs, and lately, Musk has been using them to consolidate power and keep only loyalists among his top ranks at Tesla.</p>



<h2 id="h-electrek-s-take">Electrek’s Take</h2>




	<p>Is this momentum against Elon at Tesla? It’s hard to tell. I have been fearing that Elon drove away most people who could stand against him at Tesla.</p>



<p>The protests are good, and employees speaking up is good, but at the end of the day, with the board in Elon’s pocket, it means that nothing short of the stock price crashing to push shareholders to kick the board out is needed.</p>



<p>I could see that happening, as I expect this quarter’s deliveries and earnings to be quite bad. However, there could also be a broader market downturn, on which Musk could blame Tesla’s stock’s poor performance.  </p>



<p>It should be interesting next few months.</p>
	<p>
		<a target="_blank" rel="nofollow" href="https://news.google.com/publications/CAAqBwgKMKqD-Qow6c_gAg?hl=en-US&amp;gl=US&amp;ceid=US:en">
			<em>Add Electrek to your Google News feed.</em>&nbsp;
					</a>
	</p>
	<p><em>FTC: We use income earning auto affiliate links.</em> <a href="https://electrek.co/about/#affiliate">More.</a></p>				</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[India's Tata Consultancy Was Gaming the US Visa System (109 pts)]]></title>
            <link>https://www.bloomberg.com/news/features/2025-02-17/india-s-tcs-misclassified-managers-to-skirt-h-1b-rules-former-staffers-say</link>
            <guid>43088906</guid>
            <pubDate>Tue, 18 Feb 2025 12:50:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.bloomberg.com/news/features/2025-02-17/india-s-tcs-misclassified-managers-to-skirt-h-1b-rules-former-staffers-say">https://www.bloomberg.com/news/features/2025-02-17/india-s-tcs-misclassified-managers-to-skirt-h-1b-rules-former-staffers-say</a>, See on <a href="https://news.ycombinator.com/item?id=43088906">Hacker News</a></p>
Couldn't get https://www.bloomberg.com/news/features/2025-02-17/india-s-tcs-misclassified-managers-to-skirt-h-1b-rules-former-staffers-say: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Reviewing the Cryptography Used by Signal (148 pts)]]></title>
            <link>https://soatok.blog/2025/02/18/reviewing-the-cryptography-used-by-signal/</link>
            <guid>43088785</guid>
            <pubDate>Tue, 18 Feb 2025 12:35:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://soatok.blog/2025/02/18/reviewing-the-cryptography-used-by-signal/">https://soatok.blog/2025/02/18/reviewing-the-cryptography-used-by-signal/</a>, See on <a href="https://news.ycombinator.com/item?id=43088785">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

			
<p>Last year, I <a href="https://soatok.blog/2024/05/14/its-time-for-furries-to-stop-using-telegram/">urged furries to stop using Telegram</a> because it doesn’t actually provide them with any of the privacy guarantees they <em>think</em> it gives them. Instead of improving Telegram’s cryptography to be actually secure, the CEO started spreading misleading bullshit about Signal<a href="#trademark">®</a>.</p>



<p>Since then, I’ve been flooded with people asking me about <a href="https://soatok.blog/encrypted-messaging-apps/" target="_blank" rel="noreferrer noopener">various other encrypted messaging apps</a> and accused by Internet reply-guys of having malicious intentions. Some of the more egregiously stupid accusations were that I was somehow being paid to promote Signal.</p>



<blockquote>
<p>Not only am I not being paid to promote Signal, I refuse to ever be paid to promote <em>anything</em> ever! <strong>I’ve been <a href="https://soatok.blog/2024/07/02/my-furry-blog-is-not-an-opportunity-to-develop-your-brand/" target="_blank" rel="noreferrer noopener">extremely</a> <a href="https://soatok.blog/2021/05/18/avoiding-the-frigid-hellscape-of-online-marketing/" target="_blank" rel="noreferrer noopener">vocal</a> <a href="https://soatok.blog/2024/12/26/roasted-christmas-spam-from-muhu-ai/" target="_blank" rel="noreferrer noopener">about</a> <a href="https://soatok.blog/2021/12/29/for-your-infurmation/#:~:text=Ad%20revenue%3A%20Still%20%240" target="_blank" rel="noreferrer noopener">this</a></strong>.</p>
</blockquote>



<p>To be clear, being accused of being a paid shill for recommending Signal isn’t exactly unique to Signal, it also happens with other technologies.</p>



<p>For example: Have you ever wondered by influencers (streamers, vloggers, etc.) always promote “<a href="https://gist.github.com/joepie91/5a9909939e6ce7d09e29" target="_blank" rel="noreferrer noopener">VPN services</a>” instead of Tor (which is free)?</p>



<figure><p>
<iframe title="Why VPNs are a WASTE of Your Money (usually…)" width="768" height="432" src="https://www.youtube.com/embed/9_b8Z2kAFyY?feature=oembed" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen=""></iframe>
</p></figure>



<p>It’s not just “today’s sponsor”, either.</p>



<p>Bad security advice, usually <a href="https://web.archive.org/web/20250207173047/https://infosecforactivists.org/" target="_blank" rel="noreferrer noopener">marketed as infosec advice for activists</a>, absolutely <em>loves</em> to recommend specific VPN companies. Interestingly, they frequently make no mention of Tor. When you point this out, the same crowd will <a href="https://ghostarchive.org/archive/25M1U" target="_blank" rel="noreferrer noopener">try to weasel in FUD about Tor</a>.</p>



<blockquote>
<p><strong>Soatok</strong>: That they recommend a VPN and not Tor in their first table immediately makes me suspicious.</p>
<cite><a href="https://web.archive.org/web/20250211092400/https://news.ycombinator.com/item?id=42941848" target="_blank" rel="noreferrer noopener">Archive.org mirror</a></cite></blockquote>



<blockquote>
<p><strong>First Reply:</strong> Why? I’ve personally seen more news articles about Tor users getting de-anonymized than I have VPN users. […]</p>
</blockquote>



<p>The rhetorical sleight-of-hand here isn’t particularly clever.</p>



<ul>
<li>Tor uses onion-routing to provide anonymity to Internet traffic.</li>



<li>VPNs just provide an encrypted tunnel to another ISP, and therefore do not offer anonymity.</li>



<li>You can’t <em>deanonymize</em> VPN users because they were never <em>anonymized</em> to begin with!</li>



<li><a href="https://www.theregister.com/2011/09/26/hidemyass_lulzsec_controversy/" target="_blank" rel="noreferrer noopener">VPN providers that lied about “no logs”</a> never faced any meaningful consequences.</li>
</ul>



<p>Tor is at least as private as any VPN. If you’re worried about exit nodes, only use Tor to access Onion Services or websites that use HTTPS.</p>





<p>As a security engineer that specializes in applied cryptography, I’m generally not interested in the “Tor vs VPN” debate.</p>



<p>I’m <em>much</em> more interested in the “WireGuard vs OpenVPN” debate (on the side of WireGuard), and what lessons about software security the rest of the industry could learn from WireGuard.</p>



<p>In fact: If someone is promoting a VPN service in 2025 and that service doesn’t use WireGuard as its underlying protocol, they are almost certainly LARPing at security expertise rather than offering valuable advice.</p>



<p>But I digress.</p>



<p>Like Tor, Signal doesn’t cost you anything to use. Nobody makes money by telling you to use either of those things. </p>



<p>Despite having no financial incentive for doing so, security and privacy experts (including <a href="https://www.cnn.com/2025/02/09/tech/secure-chat-apps-signal-tor-browser/index.html" target="_blank" rel="noreferrer noopener">the EFF’s director of cybersecurity, Eva Galperin</a>) constantly stake their reputation by recommending Tor and Signal.</p>



<p>And therein lies the question: Is Signal’s cryptography <em>actually</em> good? And how can we be sure of that?</p>



<p>To know this, we first need to discuss cryptography audits.</p>





<h2 id="audits">Audits For Normies</h2>



<p>Audits are a type of engagement between a vendor and a team of security consultants with specific expertise in the technologies involved.</p>



<p>How an audit works is, loosely:</p>



<ul>
<li>The vendor (or a third party, such as <a href="https://ostif.org/" target="_blank" rel="noreferrer noopener">OSTIF</a>) hires the consultants for a timeboxed assessment of the security of the product or service in question.</li>



<li>The consultants (ideally with the source code in hand) will then try to find any way to subvert the normal operation of the product/service, especially in a way that’s useful for an attacker.</li>



<li>Any findings that result from the consultants’ work are compiled together into an Audit Report, with specific recommendations for remediating the issues they identified.</li>



<li>The vendor responds by either fixing each issue, or documenting them as known limitations if a fix is impractical.</li>



<li>Optional: The Audit Report is made public.</li>
</ul>



<p>Regardless of the expertise of the consultants, every audit suffers from the same limitations:</p>



<ol>
<li>The engagement has a specific timebox, which means that coverage will be finite.</li>



<li>The engagement is performed over a finite number of snapshots of the source code (typically, one commit hash), so each subsequent commit to the codebase erodes the relevance of the audit.</li>



<li>The consultants are human beings, and therefore imperfect.</li>
</ol>



<p>Furthermore, performing an audit of a product or service without a clear threat model can lead to a lot of disagreement about the relevance or severity of any findings.</p>



<p>This cuts both ways: High-severity issues could actually be nothingburgers to the users of the app, or “informational” findings could be a dealbreaker to your users. Lacking clarity about the security goals and assumptions can hamstring any efforts to providing security assurance.</p>



<p>Unfortunately, sometimes you will see encrypted messaging apps proudly proclaim, “We were audited” when facing criticism, except:</p>



<ul>
<li>Their last audit was 5+ years (and/or over 1000 commits) ago.</li>



<li>They only have the one public audit report.</li>



<li>The company and/or person that did the audit has no other online footprint, including other audits, and only seemed to pop up to opine about this one vendor.</li>



<li>The audit report <a href="https://soatok.blog/2021/09/28/the-bi-symmetric-encryption-fraud/" target="_blank" rel="noreferrer noopener">reads more like sales copy</a> than a critical analysis of the product’s security.</li>



<li>The timebox for the audit is tiny compared to the quantity and complexity of the software in question.</li>
</ul>



<p>It <strong>isn’t</strong> important that the company providing the audit be one of the more recognizable names (e.g., for cryptography: <a href="https://cure53.de/" target="_blank" rel="noreferrer noopener">Cure53</a>, <a href="https://kudelskisecurity.com/" target="_blank" rel="noreferrer noopener">Kudelski Security</a>, <a href="https://leastauthority.com/" target="_blank" rel="noreferrer noopener">Least Authority</a>, <a href="https://www.nccgroup.com/us/" target="_blank" rel="noreferrer noopener">NCC Group</a>, <a href="https://www.trailofbits.com/" target="_blank" rel="noreferrer noopener">Trail of Bits</a>, and myriad blockchain / smart contract security firms that sometimes demonstrate real cryptography chops). </p>



<p>Plenty of smaller security consulting teams do excellent work.</p>



<p>What a more recognizable brand gives you, however, is a reasonable amount of quality control: They’re generally better resourced to ensure that the appropriate experts are assigned to each project, so you’re less likely to end up with a useless rubber-stamp Audit Report than you might from a one-person shop in over their head.</p>



<p>It’s probably better to use the list above to inform your heuristics for assessing the credibility of an Audit Report, rather relying on, “Did the biggest name sign off on it?”</p>



<h3>Why Are You Telling Us All This?</h3>



<p>Because, like the title says, I’m going to review the cryptography used by Signal.</p>





<p>This series is morally equivalent to the sort of work you’d get from an audit, if it were timeboxed over a weekend rather than several weeks.</p>



<h3>Objectives For This Series</h3>



<p>I’m writing this series in the same spirit as <a href="https://decentsecurity.com/about" target="_blank" rel="noreferrer noopener">SwiftOnSecurity’s Decent Security</a> guides:</p>



<blockquote>
<p><strong>Everyone can be secure.</strong></p>



<p>It is with those four words this website is founded. Computer, smartphone, and online security does not require a degree or years of experience. All it requires is someone show you the way.</p>
</blockquote>



<p>My spin on the Decent Security mission statement is a bit more ambitious, if narrowly scoped:</p>



<blockquote>
<p><strong>You can understand applied cryptography.</strong></p>



<p>Although the bar for designing and implementing cryptography must be very high to prevent <a href="https://soatok.blog/2025/01/31/hell-is-overconfident-developers-writing-encryption-code/" target="_blank" rel="noreferrer noopener">overconfident developers from making preventable mistakes that hurt users</a>, being able to critique the security of private messaging apps is a skill anyone is capable of learning.</p>



<p>Verifying the security claims made by an encrypted messaging app does not require a Ph.D in mathematics or an encyclopedic knowledge of software vulnerabilities. All it requires is someone teaching the fundamentals, and then indulging in a bit of self-exploration.</p>
</blockquote>



<p>Time will tell if I’m successful or not.</p>



<p>Additionally, Key Transparency <a href="https://github.com/signalapp/libsignal/commit/949760d2ae6590ffaaa6f8eb1161be2598a24aa9" target="_blank" rel="noreferrer noopener">has recently landed in libsignal</a> (though it has not been consistently implemented in the Signal app yet).</p>



<h3>A Note On Timeboxing</h3>



<p>I did the header image and wrote this blog post earlier, but I did the entirety of this cryptography review over the course of a single weekend. That was the original timebox I set for myself.</p>



<p>I do feel that, if I had allocated more time to it, I might have been able to explain some of the later components in greater detail.</p>



<p>However, as I was writing this, <a href="https://web.archive.org/web/20250217134434/https://www.disruptionist.com/p/elon-musks-x-blocks-links-to-signal" target="_blank" rel="noreferrer noopener">Twitter decided to ban links to signal.me</a> in an attempt to censor Signal users. Thus, I decided to pull the trigger and stay true to my original timebox.</p>


<div>
<figure><img data-recalc-dims="1" loading="lazy" decoding="async" width="280" height="248" data-attachment-id="7630" data-permalink="https://soatok.blog/2023/01/06/hindsight-is-2022/twitter-dead/" data-orig-file="https://i0.wp.com/soatok.blog/wp-content/uploads/2023/01/Twitter-Dead.png?fit=280%2C248&amp;ssl=1" data-orig-size="280,248" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Twitter-Dead" data-image-description="" data-image-caption="" data-medium-file="https://i0.wp.com/soatok.blog/wp-content/uploads/2023/01/Twitter-Dead.png?fit=280%2C248&amp;ssl=1" data-large-file="https://i0.wp.com/soatok.blog/wp-content/uploads/2023/01/Twitter-Dead.png?fit=280%2C248&amp;ssl=1" src="https://i0.wp.com/soatok.blog/wp-content/uploads/2023/01/Twitter-Dead.png?resize=280%2C248&amp;ssl=1" alt="Dead Twitter logo"><figcaption>Fuck Elon Musk</figcaption></figure></div>


<h2>Contents</h2>



<ol>
<li><strong>Introduction</strong> (you are here)</li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-2">How Soatok Approaches Cryptography Audits</a></li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-3">Mapping Signal and Prioritizing Targets</a></li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-4">Message and Media Encryption</a></li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-5">Forward-Secure Ratcheting Protocols</a></li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-6">Miscellaneous Cryptographic Features</a></li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-7">Signal’s New Key Transparency Feature</a></li>



<li><a href="https://soatok.blog/signal-crypto-review-2025-part-8">Summary and Findings</a></li>
</ol>



<hr>



<p id="trademark">Signal, the Signal logo, and all related names, designs, and slogans are registered trademarks of Signal Technology Foundation.</p>



<p>Though my inclusion of their logo is almost certainly Fair Use (as I am writing about Signal, not pretending to represent Signal), their <a href="https://signal.org/brand/trademarks/" target="_blank" rel="noreferrer noopener">Trademarks page</a> indicates that this text should be included.</p>



<p>Header art: <a href="https://cmykat.carrd.co/" target="_blank" rel="noreferrer noopener">CMYKat</a>, Signal’s logo, <a href="https://fonts.google.com/noto/specimen/Noto+Color+Emoji">magnifying glass emoji from Noto Color</a></p>

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Linux’s Sole Wireless/WiFi Driver Maintainer Is Stepping Down (126 pts)]]></title>
            <link>https://www.phoronix.com/news/Linux-Wireless-Maintainer-2025</link>
            <guid>43088486</guid>
            <pubDate>Tue, 18 Feb 2025 11:49:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.phoronix.com/news/Linux-Wireless-Maintainer-2025">https://www.phoronix.com/news/Linux-Wireless-Maintainer-2025</a>, See on <a href="https://news.ycombinator.com/item?id=43088486">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="LINUX NETWORKING" src="https://www.phoronix.com/assets/categories/linuxnetworking.webp" width="100" height="100"></p><p>
Days after <a href="https://www.phoronix.com/news/Several-Linux-DRM-Orphaned">a DRM driver developer orphaned his drivers due to health reasons</a> in stepping down, the sole maintainer at large of the Linux wireless (WiFi) drivers is stepping down and without any immediate replacement.
</p><p>
Kalle Valo who has been a Qualcomm Atheros engineer for more than the past decade and contributor to the Linux kernel since 2008 during the Linux 2.6 kernel days has decided to step down. Kalle announced this week on the <a href="https://lore.kernel.org/linux-wireless/87wmefguqt.fsf@kernel.org/">Linux wireless mailing list</a>:
</p><blockquote>"I'm stepping down from all my maintainer roles. My first commit feed9bab7b14 ("spi: omap2_mcspi PIO RX fix") to the kernel was back in 2008 for v2.6.24 so I have been here for a long time. Thank you everyone who I have worked with, there are too many to list here.
<p>
Jeff continues to maintain ath10k, ath11k and ath12k drivers so they are unaffected. But for the wireless driver maintainer (drivers/net/wireless/) there is no replacement at the moment. If anyone is interested, please do let Johannes and me know."</p></blockquote>
<p>Kalle was a co-maintainer to the various Qualcomm Atheros WiFi drivers but was the sole maintainer to the wireless networking drivers at large.
</p><p><img src="https://www.phoronix.net/image.php?id=2025&amp;image=linux_wireless_maintainer" alt="Linux wireless driver maintainer entry"></p>
<p>Many expressed their appreciation for Kalle's years of service to the Linux networking stack but as of writing no one has stepped up to take over the formal maintainer role. Thankfully there are other Linux WiFi driver developers out there working on the increasing number of Linux wireless drivers, just not any immediate leader yet to take on the maintainer duties.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[XOR (168 pts)]]></title>
            <link>https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/</link>
            <guid>43087944</guid>
            <pubDate>Tue, 18 Feb 2025 10:02:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/">https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/</a>, See on <a href="https://news.ycombinator.com/item?id=43087944">Hacker News</a></p>
<div id="readability-page-1" class="page">
    
    <p>[Simon Tatham, 2025-02-14]</p>
    <ul>
      <li>
        <a href="#intro">Introduction</a>
      </li>
      <li>
        <a href="#boolean">XOR in boolean logic</a>
        <ul>
          <li>
            <a href="#what">What is it?</a>
            <ul>
              <li>
                <a href="#exclusive-or">“Exclusive OR”</a>
              </li>
              <li>
                <a href="#unequal">The ‘not equals’ operator</a>
              </li>
              <li>
                <a href="#condinv">Conditional inversion</a>
              </li>
              <li>
                <a href="#mod2">Parity, or sum mod 2</a>
              </li>
              <li>
                <a href="#mod2diff">Difference mod 2</a>
              </li>
            </ul>
          </li>
          <li>
            <a href="#properties">What properties does it have?</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="#bitwise">Bitwise XOR on integers</a>
        <ul>
          <li>
            <a href="#properties-bitwise">Still has all the same properties</a>
          </li>
          <li>
            <a href="#diff-bitwise">Bitwise difference</a>
          </li>
          <li>
            <a href="#condinv-bitwise">Bitwise conditional inverter</a>
          </li>
          <li>
            <a href="#carryless">Addition or subtraction without carrying</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="#applications">Some applications of XOR</a>
        <ul>
          <li>
            <a href="#cryptography">Cryptography: combine a plaintext with a keystream</a>
          </li>
          <li>
            <a href="#pixels">Pixel graphics: draw things so it’s easy to undraw
      them again</a>
          </li>
          <li>
            <a href="#halfadder">The “half-adder identity”</a>
            <ul>
              <li>
                <a href="#average">Averaging two integers</a>
              </li>
              <li>
                <a href="#constructing-xor">Implementing XOR itself</a>
              </li>
            </ul>
          </li>
          <li>
            <a href="#bitswap">Swapping bits in a word</a>
            <ul>
              <li>
                <a href="#shift">Using XOR and shifts</a>
              </li>
              <li>
                <a href="#parity">Using XOR and just a two-bit word</a>
              </li>
            </ul>
          </li>
          <li>
            <a href="#swap">Three XORs make a swap</a>
          </li>
          <li>
            <a href="#nim">Winning at the game of Nim</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="#maths">Mathematical concepts that look like XOR</a>
        <ul>
          <li>
            <a href="#symmdiff">Symmetric difference of sets</a>
          </li>
          <li>
            <a href="#exp2">Groups of exponent 2</a>
          </li>
          <li>
            <a href="#nimsum">Nim-sum</a>
          </li>
          <li>
            <a href="#gf2"><i>GF</i>(2), the finite field of order 2</a>
            <ul>
              <li>
                <a href="#gf2linalg">Linear algebra over <i>GF</i>(2)</a>
                <ul>
                  <li>
                    <a href="#ecc">Error-correcting codes</a>
                  </li>
                </ul>
              </li>
              <li>
                <a href="#gf2poly">Polynomials over <i>GF</i>(2)</a>
                <ul>
                  <li>
                    <a href="#crc">CRCs</a>
                  </li>
                  <li>
                    <a href="#fields">Making larger finite fields</a>
                  </li>
                </ul>
              </li>
            </ul>
          </li>
        </ul>
      </li>
      <li>
        <a href="#footnotes">Footnotes</a>
      </li>
    </ul>
    <h2 id="intro">Introduction</h2>
    <p>Recently I was called on to explain the ‘XOR’ operator to
      somebody who vaguely knew of its existence, but didn’t have a
      good intuition for what it was useful for and how it
      behaved.</p>
    <p>For me, this was one of those ‘future shock’ moments when you
      realise the world has moved on. When I got started in computers,
      you had to do low-level bit twiddling to get anything very
      interesting done, so you pretty much couldn’t <em>avoid</em>
      learning about XOR. But these days, to a high-level programmer,
      it’s much more of an optional thing, and you can perfectly well
      not know much about it.</p>
    <p>So I collected some thoughts together and gave a lecture on
      XOR. Slightly to my own surprise, I was able to spend a full
      hour talking about it – and then over the course of the next
      couple of weeks I remembered several other things I could
      usefully have mentioned.</p>
    <p>And once I’d gone to the effort of collecting all those
      thoughts into one place, it seemed a waste not to write it all
      down somewhere more permanent. (The collecting is the hardest
      part!)</p>
    <p>So here’s a text version of my XOR talk – or rather, the talk
      that it <em>would</em> have been if I’d remembered to include
      everything the first time round.</p>
    <h2 id="boolean">XOR in boolean logic</h2>
    <p>We’ll start by looking at XOR as a boolean logic operator, or
      equivalently a logic gate: a function that takes two individual
      bits, and outputs a single bit.</p>
    <h3 id="what">What is it?</h3>
    <p>If I’m going right back to first principles, then I should
      start by actually <em>defining</em> XOR.</p>
    <p>Any boolean function of two inputs can be defined by showing
      its truth table: for each of the four combinations of inputs,
      say what the output is. So I’ll start by showing the truth table
      for XOR.</p>
    <figure>
      <div>
        <div>
          <table>
            <tbody><tr><th><i>a</i></th><th><i>b</i></th><th><i>a</i>&nbsp;XOR&nbsp;<i>b</i></th></tr>
            <tr><th>0</th><th>0</th><td>0</td></tr>
            <tr><th>0</th><th>1</th><td>1</td></tr>
            <tr><th>1</th><th>0</th><td>1</td></tr>
            <tr><th>1</th><th>1</th><td>0</td></tr>
          </tbody></table>
        </div>
        <div>
          <table>
            <tbody><tr><td colspan="2" rowspan="2"></td><th colspan="2"><i>b</i></th></tr>
            <tr><th>0</th><th>1</th></tr>
            <tr><th rowspan="2"><i>a</i></th><th>0</th><td>0</td><td>1</td></tr>
            <tr><th>1</th><td>1</td><td>0</td></tr>
          </tbody></table>
        </div>
      </div>
      <figcaption>The truth table of XOR, shown in two different ways</figcaption>
    </figure>
    <p>But just saying what it <em>is</em> doesn’t give a good
      intuition for what things it’s useful for, or when to use it. So
      in the next few sections I’ll present a few different ways
      of <em>thinking about</em> what XOR does.</p>
    <p>For such a simple operation, it’s possible to describe what it
      does in a lot of quite different-looking ways. But all of them
      are true at once! So you don’t need to <em>keep</em> thinking
      about XOR as being just one of the following concepts. You can
      suddenly switch from thinking of it one way to another, any time
      that’s convenient. Nothing stops being true if you do.</p>
    <h4 id="exclusive-or">“Exclusive OR”</h4>
    <p>The X in ‘XOR’ stands for the word “exclusive”. (Some assembly
      language syntaxes abbreviate it as ‘EOR’ instead, on the grounds
      that “exclusive” doesn’t actually begin with an X.
      But <em>most</em> people prefer the X spelling, in my
      experience.)</p>
    <p>In the normal English language, the conjunction ‘or’ has an
      ambiguity: if I say ‘you can do this <em>or</em> that’, and in
      fact someone tries to do both this <em>and</em> that, does that
      count? It depends on the context. A parent telling a child “You
      can have this dessert <em>or</em> that one” certainly means ‘but
      not both’ – that’s the whole point. But on the other hand, if
      the same parent wants the child to do something useful, and says
      “Do your homework, or tidy your room!”, they’d probably be
      extra <em>pleased</em> if the child did both.</p>
    <p>So, when you want to be clear about which version of ‘or’ you
      mean, you might say that you’re <em>including</em> the ‘both’
      case, or <em>excluding</em> it.</p>
    <p>In computing, ‘OR’ as a boolean operator is always taken to
      mean the <em>inclusive</em> version: <i>A</i> or <i>B</i> or
      both. And when you want <i>A</i> or <i>B</i> but <em>not</em>
      both, you talk about <em>exclusive</em> OR.</p>
    <p>Looking at the truth tables above, you can see that that’s
      exactly what the XOR operation is doing:</p>
    <ul>
      <li>If <i>a</i>&nbsp;=&nbsp;1, <em>or</em> if <i>b</i>&nbsp;=&nbsp;1,
        then <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;1.</li>
      <li>But not both: if <i>a</i>
        <em>and</em> <i>b</i> are both 1,
        then <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;0.</li>
    </ul>
    <h4 id="unequal">The ‘not equals’ operator</h4>
    <p>Another way to look at the same truth table
      is: <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;1 whenever the inputs <i>a</i>
      and <i>b</i> are <em>different</em> from each other. If they’re
      the same (either both 0 or both 1),
      then <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;0.</p>
    <p>So you could look at <i>a</i>&nbsp;XOR&nbsp;<i>b</i> as meaning the same
      thing as <i>a</i>&nbsp;≠&nbsp;<i>b</i>: it’s a way to <em>compare</em> two
      boolean values with each other.</p>
    <h4 id="condinv">Conditional inversion</h4>
    <p>A third way to look at the same truth table is to consider each
      value of one of the inputs <i>a</i>, and look at what XOR does
      to the other variable <i>b</i> in each case:</p>
    <ul>
      <li>If <i>a</i>&nbsp;=&nbsp;0, then <i>a</i>&nbsp;XOR&nbsp;<i>b</i> is the same thing as just <i>b</i>.</li>
      <li>If <i>a</i>&nbsp;=&nbsp;1, then <i>a</i>&nbsp;XOR&nbsp;<i>b</i> is the <em>opposite</em> of <i>b</i>: 0 becomes 1 and 1 becomes 0.</li>
    </ul>
    <p>So another way to look at the XOR operation is that you’re
      either going to leave <i>b</i> alone, or invert it (swapping 0
      and 1), and <i>a</i> tells you which one to do. If you imagine
      XOR as a tiny computing device, you could think of the
      input <i>b</i> as ‘data’ that the device is operating on,
      and <i>a</i> as a ‘control’ input that tells the device what to
      do with the data, with the possible choices being ‘flip’ or
      ‘don’t flip’.</p>
    <p><i>a</i>&nbsp;XOR&nbsp;<i>b</i> means: <strong>invert <i>b</i>, but only
        if <i>a</i> is true.</strong></p>
    <p>But the same is <em>also</em> true the other way round,
      because <i>a</i>&nbsp;XOR&nbsp;<i>b</i> is the same thing
      as <i>b</i>&nbsp;XOR&nbsp;<i>a</i>. You can swap your point of view to
      thinking of <i>a</i> as the ‘data’ input and <i>b</i> as
      ‘control’, and nothing changes – the operation is the same
      either way round.</p>
    <p>That is, <i>a</i>&nbsp;XOR&nbsp;<i>b</i> also
      means: <strong>invert <i>a</i>, but only if <i>b</i> is
      true!</strong></p>
    <h4 id="mod2">Parity, or sum mod 2</h4>
    <p>Here’s yet <em>another</em> way to look at the XOR
      operation. <i>a</i>&nbsp;XOR&nbsp;<i>b</i> tells you whether an <em>odd
        number</em> of the inputs are true:</p>
    <ul>
      <li>If <i>a</i>&nbsp;=&nbsp;<i>b</i>&nbsp;=&nbsp;0, then <em>zero</em> of the inputs
        are true. 0 is even, and <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;0.</li>
      <li>If <i>a</i>&nbsp;=&nbsp;1 and <i>b</i>&nbsp;=&nbsp;0, or the other way round,
        then <em>one</em> of the inputs is true. 1 is odd,
        and <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;1.</li>
      <li>If <i>a</i>&nbsp;=&nbsp;<i>b</i>&nbsp;=&nbsp;1, then <em>two</em> of the inputs
        are true. 2 is even, and <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;0 again.</li>
    </ul>
    <p>Put another way: if you <em>add together</em> the two inputs,
      and then reduce the result modulo 2 (that is, divide by 2 and
      take the remainder), you get the same answer
      as <i>a</i>&nbsp;XOR&nbsp;<i>b</i>.</p>
    <p>In particular, if you XOR together <em>more</em> than two
      values, the overall result will tell you whether an odd or even
      number of the inputs were 1 – no matter how many inputs you
      combine.</p>
    <h4 id="mod2diff">Difference mod 2</h4>
    <p>So XOR corresponds to addition mod 2. But it also corresponds
      to <em>subtraction</em> mod 2, at the same time: if you take the
      difference <i>a</i>&nbsp;−&nbsp;<i>b</i> and reduce <em>that</em> mod 2,
      you still get the same answer <i>a</i>&nbsp;XOR&nbsp;<i>b</i>!</p>
    <ul>
      <li>If <i>a</i>&nbsp;=&nbsp;<i>b</i>, then the
        difference <i>a</i>&nbsp;−&nbsp;<i>b</i> is 0, and so
        is <i>a</i>&nbsp;XOR&nbsp;<i>b</i>.</li>
      <li>If <i>a</i>&nbsp;≠&nbsp;<i>b</i>, then the
        difference <i>a</i>&nbsp;−&nbsp;<i>b</i> is either +1 or −1. Mod 2,
        those are the same as each other – they’re both just 1.</li>
    </ul>
    <h3 id="properties">What properties does it have?</h3>
    <p>If you have a complicated boolean expression involving lots of
      XORs, it’s useful to know how you can manipulate the expression
      to simplify it.</p>
    <p>To begin with, XOR is both <strong>commutative</strong>
      and <strong>associative</strong>, which mean (respectively)
      that</p>
    <p><i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;<i>b</i>&nbsp;XOR&nbsp;<i>a</i></p>
    <p>(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;XOR&nbsp;<i>c</i>&nbsp;=&nbsp;<i>a</i>&nbsp;XOR&nbsp;(<i>b</i>&nbsp;XOR&nbsp;<i>c</i>)</p>
    <p>In practice, what this means is that if you see a long list of
      values or variables XORed together, you <em>don’t need to
      worry</em> about what order they’re combined in, because it
      doesn’t make any difference. You can rearrange the list of
      inputs into any order you like, and choose any subset of them to
      combine first, and the answer will be the same regardless.</p>
    <p>(This is perhaps most easily seen by thinking of XOR as
      ‘addition mod 2’, because addition is also both commutative and
      associative – whether or not it’s mod anything – so XOR inherits
      both properties.)</p>
    <p>Secondly, <strong>0 acts as an identity</strong>, which means
      that XORing anything with zero just gives you the same thing you
      started with:</p>
    <p><i>a</i>&nbsp;XOR&nbsp;0&nbsp;=&nbsp;0&nbsp;XOR&nbsp;<i>a</i>&nbsp;=&nbsp;<i>a</i></p>
    <p>So if you have a long list of things XORed together, and you
      can see that one of them is 0, you can just delete it from the
      list.</p>
    <p>Thirdly, <strong>everything is
      self-inverse</strong><label for="footnoteinput-inverse"><sup id="footnote-inverse">1</sup><span>I apologise for
      using ‘invert’ and ‘inverse’ in two senses in this article. In
      boolean logic, ‘inverting’ a signal generally means the NOT
      operator, interchanging 1 with 0 (or true with false, if you
      prefer). But in mathematics, an ‘inverse’ is a value that
      cancels out another value to get you back to the identity, in a
      way which varies depending on the operation you use to combine
      them (if you’re talking about addition it’s −<i>x</i>, and for
      multiplication it’s 1/<i>x</i>). I hope that everywhere I’ve
      used the word at all it’s clear from context which sense I mean
      it in.</span><span>1</span></label>: if you XOR any value with <em>itself</em>,
      you always get zero.</p>
    <p><i>a</i>&nbsp;XOR&nbsp;<i>a</i>&nbsp;=&nbsp;0</p>
    <p>One consequence of this is that if you have a long list of
      variables being XORed together, and the same variable occurs
      twice in the list, you can just remove both copies. <em>Anything
      appearing twice cancels out.</em> For example, the two copies
      of <i>b</i> can be removed in this expression:</p>
    <p><i>a</i>&nbsp;XOR&nbsp;<i><span>b</span></i>&nbsp;XOR&nbsp;<i>c</i>&nbsp;XOR&nbsp;<i><span>b</span></i>&nbsp;=&nbsp;<i>a</i>&nbsp;XOR&nbsp;<i>c</i></p>
    <p>Another consequence is that if you have a
      value <i>a</i>&nbsp;XOR&nbsp;<i>b</i>, and you want to recover
      just <i>a</i>, you can do it by XORing in another copy
      of <i>b</i> (if you know it), to cancel the one that’s already
      in the expression. <em>Putting something in a second time is the
      same as removing it:</em></p>
    <p>(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;<i>a</i>&nbsp;XOR&nbsp;(<i>b</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;=&nbsp;<i>a</i>&nbsp;XOR&nbsp;0&nbsp;=&nbsp;<i>a</i></p>
    <h2 id="bitwise">Bitwise XOR on integers</h2>
    <p>Now we’ve seen what XOR does on individual bits, it’s time to
      apply it to something larger.</p>
    <p>To a computer it’s most natural to represent an integer in
      binary, so that it looks like a string of 0s and 1s. So if you
      have two integers, you can combine them <em>bitwise</em> (that
      is, ‘treating each bit independently’) using a logical operation
      like XOR: you write the numbers in binary one above the
      other<label for="footnoteinput-twos-complement"><sup id="footnote-twos-complement">2</sup><span>What if the integers are
      negative? Normally, in the finite integer sizes that computers
      handle in hardware, negative integers are represented in two’s
      complement, i.e. mod 2<sup><i>n</i></sup>. So −1 is the integer
      with all bits 1, for example. There’s a reasonably natural way
      to extend this to <em>arbitrarily large</em> integers, by
      pretending the string of 1 bits on the left goes all the way to
      infinity (and it can even be made mathematically rigorous!). In
      this view, the XOR of two positive numbers, or two negative
      numbers, is positive, because at a high enough bit position each
      bit is XORing two 0s or two 1s; but the XOR of a positive and
      negative number is negative, because sooner or later you’re
      always XORing a 0 with a 1 bit. Some languages, such as Python,
      actually implement this – you can try it out at the interactive
      prompt!</span><span>2</span></label>, and set each output bit to the result of
      combining the corresponding bits of both input numbers via
      XOR.</p>
    <p>Here are a couple of examples, one small and carefully chosen,
      and the other large and random-looking:</p>
    <figure>
      <div>
        <div>
          <table>
            <tbody><tr><td></td><th>Binary</th><th>Hex</th><th>Decimal</th></tr>
            <tr><th><i>a</i></th><td><code>1010</code></td><td><code>A</code></td><td><code>10</code></td></tr>
            <tr><th><i>b</i></th><td><code>1100</code></td><td><code>C</code></td><td><code>12</code></td></tr>
            <tr><th><i>a</i>&nbsp;XOR&nbsp;<i>b</i></th><td><code>0110</code></td><td><code>6</code></td><td><code>&nbsp;6</code></td></tr>
          </tbody></table>
        </div>
        <div>
          <table>
            <tbody><tr><td></td><th>Binary</th><th>Hex</th><th>Decimal</th></tr>
            <!-- In case anyone is curious, these inputs aren't
                 randomly chosen 32-bit numbers. They're the cube
                 roots of 3 and 5, mod 2^32. -->
            <tr><th><i>a</i></th><td><code>11001111001000011111000101111011</code></td><td><code>CF21F17B</code></td><td><code>3475108219</code></td></tr>
            <tr><th><i>b</i></th><td><code>10011011010000100100111001011101</code></td><td><code>9B424E5D</code></td><td><code>2604813917</code></td></tr>
            <tr><th><i>a</i>&nbsp;XOR&nbsp;<i>b</i></th><td><code>01010100011000111011111100100110</code></td><td><code>5463BF26</code></td><td><code>1415823142</code></td></tr>
          </tbody></table>
        </div>
      </div>
      <figcaption>Small and large examples of applying bitwise XOR to two integers</figcaption>
    </figure>
    <p>The small example contains one bit for each element of the XOR
      truth table. If you look at vertically aligned bits in the
      binary column of the table, you’ll see that in the rightmost
      place both <i>a</i> and <i>b</i> have a 0 bit; in the leftmost
      place they both have a 1 bit; in between, there’s a position
      where only <i>a</i> has a 1, and one where only <i>b</i> has a
      1. And in each position, the output bit is the boolean XOR of
      the two input bits.</p>
    <p>Of course, this idea of ‘bitwise’ logical operations – taking
      an operation that accepts a small number of input bits, and
      applying it one bit at a time to a whole binary integer – is not
      limited to XOR. Bitwise AND and bitwise OR are also well defined
      operations, and both useful. But this particular article is
      about XOR, so I’ll stick to that one.</p>
    <h3 id="properties-bitwise">Still has all the same properties</h3>
    <p><a href="#properties">Earlier</a> I discussed a number of
      mathematical laws obeyed by the one-bit version of XOR: it’s
      commutative, associative, has 0 as an identity, and every
      possible input is self-inverse in the sense that XORing it with
      itself gives 0.</p>
    <p>In the bitwise version applied to integers, all of these things
      are still true:</p>
    <ul>
      <li><i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;<i>b</i>&nbsp;XOR&nbsp;<i>a</i> for any integers <i>a</i> and <i>b</i></li>
      <li>(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;XOR&nbsp;<i>c</i>&nbsp;=&nbsp;<i>a</i>&nbsp;XOR&nbsp;(<i>b</i>&nbsp;XOR&nbsp;<i>c</i>) similarly</li>
      <li><i>a</i>&nbsp;XOR&nbsp;0&nbsp;=&nbsp;0&nbsp;XOR&nbsp;<i>a</i>&nbsp;=&nbsp;<i>a</i>, where 0 means the <em>integer</em> zero, i.e. with all its binary bits 0</li>
      <li><i>a</i>&nbsp;XOR&nbsp;<i>a</i>&nbsp;=&nbsp;0</li>
    </ul>
    <p>So if you have a complicated expression containing bitwise
      XORs, you can simplify it in all the same ways you could do it
      with single-bit XORs.</p>
    <h3 id="diff-bitwise">Bitwise difference</h3>
    <p>With individual bits, I <a href="#unequal">said earlier</a>
      that <i>a</i>&nbsp;XOR&nbsp;<i>b</i> means the same thing
      as <i>a</i>&nbsp;≠&nbsp;<i>b</i>: given two input bits, it returns 1 if
      the bits are different from each other, and 0 if they’re the
      same.</p>
    <p>Of course, applied bitwise to whole integers, this is true
      separately in every bit position: each bit of the output integer
      tells you whether the two corresponding input bits were unequal.</p>
    <p>So if <i>a</i>&nbsp;=&nbsp;<i>b</i>, then <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;0. And
      if <i>a</i>&nbsp;≠&nbsp;<i>b</i>, then <i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;≠&nbsp;0, because
      two unequal integers must have disagreed in at least one bit
      position, so that bit will be set in their XOR.</p>
    <p>So in some sense you can still use bitwise XOR to tell you
      whether two entire integers are equal: it’s 0 if they are, and
      nonzero if they’re not. But bitwise XOR gives you more detail
      than that: it also gives you a specific list of <em>which bit
      positions</em> they differ in.</p>
    <h3 id="condinv-bitwise">Bitwise conditional inverter</h3>
    <p>I also said <a href="#condinv">earlier</a> that you could see
      XOR as a ‘conditional inversion’ operator: imagine one
      input <i>b</i> to be ‘data’, and the other input <i>a</i> to be
      a ‘control’ input that says whether you want to flip the data
      bit.</p>
    <p>Applied bitwise to whole integers, this is still true, but more
      usefully so: the control input <i>a</i> says <em>which</em> data
      bits you want to flip.</p>
    <p>For example, in the Unicode character encoding (and also in its
      ancestor ASCII), every character you might need to store in a
      string is represented by an integer. The choice of integer
      encodings has some logic to it (at least in places). In
      particular, the upper-case Latin letters A,&nbsp;B,&nbsp;C,&nbsp;…,&nbsp;Z and their
      lower-case equivalents a,&nbsp;b,&nbsp;c,&nbsp;…,&nbsp;z have encodings that differ
      in just one bit: A is 65, or binary 01000001, and a is 97, or
      binary 01100001. So if you know that a character value
      represents a Latin letter<label for="footnoteinput-emoji"><sup id="footnote-emoji">3</sup><span>Of course, this
      doesn’t apply to <em>all</em> Unicode characters! Most don’t
      have a concept of upper or lower case at all. And unfortunately,
      this rule isn’t even obeyed by all of the characters that do. It
      was consistently true in ASCII, and in some of the descendants
      of ASCII, but Unicode as a whole wasn’t able to stick 100% to
      the principle. If you take this too far, you might get strange
      ideas, like the lower-case version of the car emoji being a ‘no
      pedestrians’ sign:
<span>&gt;&gt;&gt; chr(ord('🚗') ^ 32)<br>'🚷'</span></span><span>3</span></label>, you can swap it from upper case
      to lower case <em>or vice versa</em> by flipping just that one
      bit between 0 and 1.</p>
    <p>And you can do that most easily, in machine code or any other
      programming language, by XORing it with a number that has just
      that one bit set, namely binary 00100000, or decimal 32. For
      example, in Python (where the <code>^</code> operator means
      bitwise XOR):</p>
    <figure>
      <div>
          <pre>&gt;&gt;&gt; chr(ord('A') ^ 32)
'a'
&gt;&gt;&gt; chr(ord('x') ^ 32)
'X'</pre>
        </div>
      <figcaption>Flipping case by XORing with 32 in Python</figcaption>
    </figure>
    <p>Of course, the other thing I said earlier also applies: it
      doesn’t matter <em>which</em> of the inputs to XOR you regard as
      the data, and which as the control. The operation is the same
      both ways round.</p>
    <p>In particular, suppose you’ve already XORed two values <i>a</i>
      and <i>b</i> to obtain a number <i>d</i> that tells you which
      bits they differ in. Then you can turn either of <i>a</i>
      or <i>b</i> into the other one, by XORing with the
      difference <i>d</i>, because that flips exactly the set of bits
      where <i>a</i> has the opposite value to <i>b</i>.</p>
    <p>In other words, these three statements are
      all <em>equivalent</em> – if any one of them is true, then so
      are the other two:</p>
    <p><i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;<i>d</i><br><i>a</i>&nbsp;XOR&nbsp;<i>d</i>&nbsp;=&nbsp;<i>b</i><br><i>b</i>&nbsp;XOR&nbsp;<i>d</i>&nbsp;=&nbsp;<i>a</i></p>
    <h3 id="carryless">Addition or subtraction without carrying</h3>
    <p>Another thing I mentioned about XOR on single bits is that it
      corresponds to <a href="#mod2">addition mod 2</a>, or
      equivalently, <a href="#mod2diff">subtraction mod 2</a>.</p>
    <p>That isn’t quite how it works once you do it bitwise on whole
      words<label for="footnoteinput-well-actually"><sup id="footnote-well-actually">4</sup><span>I
      suppose, <em>technically</em>, you could argue that it is still
      literally true that <i>a</i>&nbsp;XOR&nbsp;<i>b</i>, <i>a</i>&nbsp;+&nbsp;<i>b</i>,
      and <i>a</i>&nbsp;−&nbsp;<i>b</i> are all congruent to each other mod 2,
      because all that means is that they all have the same low-order
      bit, which they do. But that isn’t a
      particularly <em>useful</em> thing to say, because it ignores
      the way all the higher-order bits do something completely
      different!</span><span>4</span></label>. Each individual pair of bits is added mod
      2, but each of those additions is independent.</p>
    <p>One way to look at this is: suppose you were a schoolchild just
      learning addition, and you’d simply forgotten that it was
      necessary to carry an overflowed sum between digit positions at
      all. So for every column of the sum, you’d add up the input
      digits in that column, write down the low-order digit of
      whatever you got, and ignore the carry completely.</p>
    <p>If this imaginary schoolchild were to do this procedure in
      binary rather than decimal, the operation they’d be performing
      is exactly bitwise XOR! <strong>Bitwise XOR is like binary
      addition, without any carrying.</strong></p>
    <p><a href="#halfadder">Later on</a> I’ll show an interesting
      consequence of this, by considering what <em>does</em> happen to
      the carry bits, and how you can put them back in again
      afterwards. There’s also a <a href="#gf2poly">mathematically
      meaningful and useful interpretation</a> of the corresponding
      ‘carryless’ version of <em>multiplication</em>, in which you
      make a shifted version of one of the inputs for each 1 bit in
      the other, and then add them together in this carryless XOR
      style instead of via normal addition.</p>
    <h2 id="applications">Some applications of XOR</h2>
    <p>Now we’ve seen what XOR <em>is</em>, and a few different things
      it’s <em>like</em>, let’s look at some things it’s used for.</p>
    <h3 id="cryptography">Cryptography: combine a plaintext with a keystream</h3>
    <p>XOR is used all over cryptography, in many different ways. I
      won’t go into the details of <em>all</em> of those ways – I’m
      sure I don’t even know all of them myself! – but I’ll show a
      simple and commonly used one.</p>
    <p>Suppose you have a message to encrypt. One really simple thing
      you could do would be to take an equally long stream of
      random-looking data – usually known as a ‘keystream’ – and
      combine the two streams, a byte or a word at a time, in some way
      that the receiver can undo. So if your message was “hello”, for
      example, you might simply transmit a byte made by combining “h”
      with keystream byte #1, then one that’s “e” combined with
      keystream byte #2, and so on.</p>
    <p>This seems absurdly simple – surely real cryptography is
      terrifyingly complicated compared to this? But it really is a
      thing that happens. As long as each byte is combined with the
      keystream byte in a way that makes it possible to recover the
      original byte at the other end, this is a completely sensible
      way to encrypt a message<label for="footnoteinput-integrity"><sup id="footnote-integrity">5</sup><span>However,
      encrypting the message is only half the story. Given a
      good-quality keystream, this technique is good enough to
      assure <em>confidentiality</em>, meaning that an eavesdropper
      can’t find out what you’re saying. But it doesn’t do one single
      thing to ensure <em>integrity</em>, meaning that if your message
      is modified by an attacker, the receiver can detect the
      tampering and know not to trust the modified message. Integrity
      protection is a completely separate problem. A common mistake in
      novice cryptosystem design is to leave it out, assuming that if
      nobody can figure out what the message says, then “surely”
      nobody can work out how to tamper with it in a useful way
      either. Even with more complicated encryption methods than what
      I’m describing here, this never goes well!</span><span>5</span></label>!</p>
    <p>That’s not to say that there isn’t terrifyingly complicated
      stuff <em>somewhere</em> in the setup. But in this particular
      context, the complicated part is in how you <em>generate</em>
      your stream of random-looking bytes; the final step where you
      combine it with the message is the easy part. One option is for
      your keystream to be a huge amount of genuinely random data, as
      big as the total size of all messages you’ll ever need to send;
      this is known as a ‘one-time pad’, and is famously actually
      unbreakable – but also amazingly impractical for almost all
      purposes. More usually you use a stream cipher, or a block
      cipher run in a counter mode, to expand a manageably small
      actual <em>key</em> into a keystream as long as you need.</p>
    <p>Anyway. I’ve so far left out the detail of exactly how you
      “combine” the keystream with the message. But given the subject
      of this article, you can probably guess that it’s going to be
      XOR.</p>
    <p>XOR isn’t the only thing that would <em>work</em>. If your
      message and your keystream are each made of bytes, then there
      are plenty of other ways to combine two bytes that let you
      recover one of them later. For example, addition mod
      2<sup>8</sup> would be fine: you could make each encrypted byte
      by <em>adding</em> the message byte and keystream byte, and then
      the receiver (who has access to exactly the same keystream)
      would subtract the keystream byte from the sum to recover the
      message byte.</p>
    <p>But in practice, XOR is generally what’s used, because it’s
      simpler. Not so much for software – CPUs generally have an ‘ADD’
      instruction and an ‘XOR’ instruction which are just as fast and
      easy to use as each other – but encryption is also often done in
      hardware, by specially made circuitry. And if you’re building
      hardware, addition is more complicated than XOR, because you
      have to worry about carrying between bit positions, which costs
      more space on the chip (extra logic gates) and also extra time
      (propagating signals from one end to the other of the addition).
      XOR avoids both problems: in custom hardware, it’s far cheaper.</p>
    <p>(It’s also <em>very</em> slightly more convenient that the
      sender and receiver don’t have to do <em>different</em>
      operations. With XOR, the sender who applies the keystream and
      the receiver who takes it off again are both doing exactly the
      same thing, instead of one adding and the other
      subtracting.)</p>
    <h3 id="pixels">Pixel graphics: draw things so it’s easy to undraw
      them again</h3>
    <p>Let’s set the wayback machine to the mid-1980s, and go back in
      time to when computers were smaller and simpler (at least, the
      kind you could afford to have in your home). Home computer
      graphics systems stored a very small number of bits for each
      pixel on the screen, meaning that you could only display a
      limited number of different colours at a time; and even with
      that limitation on framebuffer size, home computers had so
      little RAM in total that it was a struggle to store two entire
      copies of what was displayed on the screen and still have enough
      memory for anything else (like whatever program
      was <em>generating</em> that screenful of graphics).</p>
    <p>In an environment limited like that, what do you do if you want
      to draw an object that appears and disappears, or that moves
      around gradually?</p>
    <p>If your moving object is <em>opaque</em>, then every time you
      ‘undraw’ it, you have to restore whatever was supposed to be on
      the screen behind it. That means you have to <em>remember</em>
      what was behind it – either by storing the actual pixels, or by
      storing some recipe that knows how to recreate the missing patch
      of graphics from scratch. Either one costs memory, and the
      second option probably costs time as well, and you don’t have a
      lot of either to spare.</p>
    <p>Nevertheless, you do that when you really have to. But when
      you <em>don’t</em> have to, it’s always helpful to take
      shortcuts.</p>
    <p>So one common graphical dodge was: <em>don’t make graphical
      objects opaque if you don’t have to</em>. Any time you can get
      away with it, prefer to draw a thing on the screen in a way that
      is <em>reversible</em>: combine each pixel <i>M</i> of the
      moving object with the existing screen pixel <i>S</i>, in such a
      way that you can undo the operation later, recovering the
      original screen pixel <i>S</i> from the combined
      value <i>C</i> by remembering what <i>M</i> was.</p>
    <p>As in the previous section, there are plenty of ways to do this
      in principle. You could imagine treating the bits of each pixel
      as an <i>n</i>-bit integer for some small <i>n</i>, and doing
      addition and subtraction on them (again, mod
      2<sup><i>n</i></sup>). For example, you could draw by addition,
      setting <i>C</i>&nbsp;=&nbsp;<i>S</i>&nbsp;+&nbsp;<i>M</i>, and undraw by
      subtraction to recover <i>S</i>&nbsp;=&nbsp;<i>C</i>&nbsp;−&nbsp;<i>M</i>.</p>
    <p>But these systems typically had far fewer than 8 bits per
      pixel, so each byte of the screen would have more than one pixel
      packed into it. Or, worse, the screen might be laid out in ‘bit
      planes’, with several widely separated blocks of memory each
      containing one bit of every pixel. Doing ordinary addition on
      the pixel values is very awkward in both cases.</p>
    <p>In particular, consider the first of those possibilities, where
      you have several pixels packed into a byte. Suppose the 8 bits
      of the byte are treated as two 4-bit integers, or four 2-bit
      integers. In order to do parallel <em>addition</em> of each of
      those small chunks, you can’t use the normal CPU’s addition
      instruction, because a carry off the top of one pixel value
      propagates into the next, causing unwanted graphical effects. So
      you’d somehow need to arrange to suppress the
      carry <em>between</em> pixels, but leave the
      carry <em>within</em> a pixel alone.</p>
    <p>So it’s much easier not to try this in the first place.
      Combining the pixel values via XOR instead of addition means
      that you automatically avoid carries between pixels, because
      there are no carries <em>at all</em>. This is also more
      convenient in the ‘bit plane’ memory layout, because each bit of
      a pixel is treated independently; if you tried to do ordinary
      addition in that situation, you’d have to make extra effort to
      propagate carries between corresponding bits in each bit
      plane.</p>
    <p>Here’s a simple example, in which two lines have been drawn
      crossing each other. You can see that in the second diagram,
      drawn using XOR, there’s a missing pixel at the point where the
      two lines cross. That pixel is part of <em>both</em> lines, so
      it’s been drawn twice. Each time it was drawn, the pixel value
      flipped between black and white, so drawing it twice sets it
      back to the background colour.</p>
    
    <p>That missing pixel looks like a tiny blemish. The first version
      of the picture looks <em>nicer</em>. But it makes it harder to
      undraw one of those lines later. If you just undraw it by
      setting all the pixels of one line back to white, then you leave
      a hole in the remaining line. And if you don’t want to leave a
      hole, then you need some method of remembering which
      pixel <em>not</em> to reset to white.</p>
    <p>In the XOR version of the picture, it’s the easiest thing in
      the world to undraw one line and leave the other one undamaged.
      Simply draw the line <em>again</em> that you want to
      undraw. <em>Putting a second copy of something into an XOR
      combination is the same as removing it.</em> This kind of
      graphical ‘blemish’ was considered a reasonable price to pay, in
      situations where efficient undrawing and redrawing was
      needed.</p>
    <p>Most types of 1980s home computers had an option to draw in XOR
      mode, for this kind of reason. It was one of the easiest ways
      for a beginning computer programmer to draw pretty animations. A
      common type of demo was to simulate two points moving around the
      screen along a pair of independent paths, and draw a line
      between the two points at each moment – but to allow the
      previous few versions of the line to persist as well as the
      latest one, undrawing each one after it had been on the screen
      for a few frames.</p>
    <p>Here’s an example of the kind of thing. In this example each
      end of the line is following a path given by a different
      <a href="https://en.wikipedia.org/wiki/Lissajous_curve">Lissajous
      curve</a>:</p>
    <div>
        <figure>
          <img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/animated-lines.gif">
          <figcaption>Moving-line animation using XOR drawing</figcaption>
        </figure>
      </div>
    <p>Because we’re drawing the lines in XOR mode, the procedure for
      turning each frame of this animation into the next involves
      drawing only two lines: the new one that we’re adding at the
      leading edge of the motion, and the one that’s about to vanish
      from the trailing edge. So the program only has to remember the
      endpoint coordinates of the 10 (or however many) lines it
      currently has on screen – or perhaps not even bother with that,
      and just recalculate the (<i>n</i>&nbsp;−&nbsp;10)th coordinate in each
      frame to work out what line to undraw.</p>
    <p>So this lets you produce pretty and interesting results, with
      almost no memory cost (you don’t have to store extra copies of
      lots of pixels). It uses very little CPU as well (you don’t have
      to redraw <em>all</em> the lines in every frame, only the ones
      you’re adding and removing), which makes the animation able to
      run faster.</p>
    <p>This style of animation was a common thing for beginning
      programmers to play with, but it was also used by professionals.
      Perhaps most famously, a moving line drawn in this style acted
      as the main antagonist of the 1981 video
      game <a href="https://en.wikipedia.org/wiki/Qix">Qix</a>.</p>
    <p>Even in the 1990s, with slightly larger computers, XOR-based
      drawing and undrawing was still a useful thing: in early GUI
      environments like the Amiga, when you dragged a window around
      the screen with the mouse, the system didn’t have enough CPU to
      redraw the entire window as you went. Instead it would draw an
      outline frame for where the window was going to end up, and once
      you’d put it in the right place, you’d let go of the mouse
      button and the window would be properly redrawn in the new
      location, just once. And again the outline frame would be drawn
      using XOR, so that it didn’t cost extra memory to remember how
      to undraw it on each mouse movement.</p>
    <p>But going back to the above animation: if you watch it
      carefully, you might notice that when the moving endpoints
      change direction and a lot of the lines cross each other, the
      missing pixels at the crossing points give rise to a sort of
      interference effect. Those missing pixels started off as a
      necessity to save memory, but it turns out they’re also quite
      pretty in their own right.</p>
    <p>Another favourite kind of 1980s graphical program for beginners
      was to explore those interference patterns more fully. Here’s an
      image created by drawing a sequence of lines, all with one
      endpoint in the bottom left corner of the frame, and with the
      other endpoints being every single pixel along the top row. In
      ordinary drawing mode this would just be a slow way to fill in a
      big black triangle. But in XOR mode, the lines interfere with
      each other wherever more than one of them passes through the
      same pixel:</p>
    <div>
        <figure>
          <img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/interfering-lines.png">
          <figcaption>Interference pattern between overlapping lines drawn with XOR</figcaption>
        </figure>
      </div>
    <p>That’s actually interesting, and it takes some time to work out
      what’s going on!</p>
    <p>The topmost row is all black, because every pixel on that row
      is drawn just once, by the line whose endpoint is at exactly
      that position. But half way up, there’s an all-<em>white</em>
      row, because the <i>n</i> lines in the image have
      only <i>n</i>&nbsp;/&nbsp;2 pixels to pass through on their way to the top
      row. So you get two lines passing through each pixel, so every
      pixel is drawn exactly twice, and cancels out back to white.
      Similarly, a third of the way up there’s another black row where
      every pixel is drawn exactly <em>three</em> times, and so on.
      And generally, 1&nbsp;/&nbsp;<i>n</i> of the way from bottom to top, you
      expect an all-black row if <i>n</i> is odd, or an all-white row
      if <i>n</i> is even.</p>
    <p>But in between those 1&nbsp;/&nbsp;<i>n</i> rows, something much more
      interesting happens, when the number of lines going through each
      pixel isn’t the same everywhere on the row. Those interference
      patterns are related to the distribution of rounding errors in
      computing the horizontal position of each pixel of the line.</p>
    <p>I’ll end this section with a question that <em>I</em> don’t
      know the answer to. Suppose you continue this
      interference-pattern drawing further to the right, past the
      point where the line slopes at 45°:</p>
    <div>
        <figure>
          <img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/interfering-lines-2.png">
          <figcaption>A similar interference pattern going beyond the
            45° slope</figcaption>
        </figure>
      </div>
    <p>At the 45° mark, something changes fundamentally. Those
      horizontal black and white stripes have changed direction, and
      now they’re sloping at what looks like a constant angle.</p>
    <p>I understand why <em>something</em> has changed. In this style
      of pixelated line drawing, a line that’s closer to horizontal
      than vertical can have multiple pixels on each row, and only one
      in each column, whereas if it’s closer to vertical than
      horizontal, it’s the other way round. So that’s a good reason
      why the picture should look fundamentally different
      in <em>some</em> way on opposite sides of the 45° line.</p>
    <p>But why does that give rise to a <em>consistently sloping</em>
      set of coloured stripes, and not any other kind of weird effect?
      I’ve never sat down and worked that one out.</p>
    <h3 id="halfadder">The “half-adder identity”</h3>
    <p>I said <a href="#mod2">in a previous section</a> that one way
      to look at the expression <i>a</i>&nbsp;XOR&nbsp;<i>b</i> is that it’s the
      remainder mod 2 of <i>a</i>&nbsp;+&nbsp;<i>b</i>. Another way to say that
      is that it’s the <em>low-order binary digit</em>
      of <i>a</i>&nbsp;+&nbsp;<i>b</i>.</p>
    <p>What about the high one?</p>
    <p>To answer that, let’s start with a truth table:</p>
    <figure>
      <div>
          <table>
            <tbody><tr><th><i>a</i></th><th><i>b</i></th><th><i>a</i>&nbsp;+&nbsp;<i>b</i></th><th>High bit</th><th>Low bit</th></tr>
            <tr><th>0</th><th>0</th><td>0</td><td>0</td><td>0</td></tr>
            <tr><th>0</th><th>1</th><td>1</td><td>0</td><td>1</td></tr>
            <tr><th>1</th><th>0</th><td>1</td><td>0</td><td>1</td></tr>
            <tr><th>1</th><th>1</th><td>2</td><td>1</td><td>0</td></tr>
          </tbody></table>
        </div>
      <figcaption>Truth tables for the two bits of the sum <i>a</i>&nbsp;+&nbsp;<i>b</i></figcaption>
    </figure>
    <p>Here, I’ve shown the actual value of the
      sum <i>a</i>&nbsp;+&nbsp;<i>b</i> for each possible input. Then I’ve
      written each of those values in binary, so that 0 and 1 become
      00 and 01, and 2 becomes 10. You can see that the high bit of
      the sum is only 1 if <em>both</em> inputs are set.</p>
    <p>In other words: the low bit of <i>a</i>&nbsp;+&nbsp;<i>b</i>
      is <i>a</i>&nbsp;XOR&nbsp;<i>b</i>, and the high bit
      is <i>a</i>&nbsp;AND&nbsp;<i>b</i>. In other words, <i>a</i>&nbsp;+&nbsp;<i>b</i>&nbsp;=&nbsp;(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;+&nbsp;2&nbsp;×&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>).</p>
    <p>That makes sense, if <i>a</i> and <i>b</i> are individual bits.
      What if we did the same operations bitwise, on whole integers?</p>
    <p>If <i>a</i> and <i>b</i> are 32-bit integers (for example),
      then we’ve already <a href="#carryless">seen above</a>
      that <i>a</i>&nbsp;XOR&nbsp;<i>b</i> is the integer you get if you add the
      bits in each position, but not carrying from one bit position to
      the next. But also, <i>a</i>&nbsp;AND&nbsp;<i>b</i> is an integer
      consisting of <em>exactly</em> those carry bits: the <i>n</i>th
      bit of <i>a</i>&nbsp;AND&nbsp;<i>b</i> is 1 precisely when a carry
      bit <em>should</em> have been generated in that bit position but
      wasn’t.</p>
    <p>If there should have been a carry bit out of the <i>n</i>th
      place, then it should have been added to the (<i>n</i>&nbsp;+&nbsp;1)st
      place. But it’s not too late – we can add it anyway!</p>
    <p>In fact, the above equation for single bits <i>a</i>,&nbsp;<i>b</i>
      is <em>still</em> true<label for="footnoteinput-proof-exercise"><sup id="footnote-proof-exercise">6</sup><span>If you’re
      mathematically minded and still don’t find this instantly
      obvious, you might want to try actually <em>proving</em> it. I
      leave this mostly as an exercise for the reader, but a hint
      would be: break down each of the input integers <i>a</i>
      and <i>b</i> as the sum of terms like
      2<sup><i>n</i></sup><i>a</i><sub><i>n</i></sub> (each one being
      an individual bit of one of the inputs times a power of 2), and
      collect together the terms on each side that involve the
      same <i>n</i>.</span><span>6</span></label>, even when <i>a</i>,&nbsp;<i>b</i> are whole
      integers, and the XOR and AND operators are bitwise:</p>
    <p><i>a</i>&nbsp;+&nbsp;<i>b</i>&nbsp;=&nbsp;(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;+&nbsp;2&nbsp;×&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>)</p>
    <p>Just to show it in action, here’s a demonstration set of
      values, chosen so that the binary values cover a lot of possible
      bit combinations, but the decimal values make it immediately
      clear that the final line is also <i>a</i>&nbsp;+&nbsp;<i>b</i>:</p>
    <figure>
      <div>
          <table>
            <tbody><tr><td></td><th>Binary</th><th>Hex</th><th>Decimal</th></tr>
            <tr><th><i>a</i></th><td><code>00111101011011000100101001010010</code></td><td><code>3D6C4A52</code></td><td><code>1030507090</code></td></tr>

            <tr><th><i>b</i></th><td><code>00001100001010011011100010000000</code></td><td><code>0C29B880</code></td><td><code>&nbsp;204060800</code></td></tr>

            <tr><th><i>a</i>&nbsp;AND&nbsp;<i>b</i></th><td><code>00001100001010000000100000000000</code></td><td><code>0C280800</code></td><td><code>&nbsp;203950080</code></td></tr>

            <tr><th>2&nbsp;×&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b)</i></th><td><code>00011000010100000001000000000000</code></td><td><code>18501000</code></td><td><code>&nbsp;407900160</code></td></tr>

            <tr><th><i>a</i>&nbsp;XOR&nbsp;<i>b</i></th><td><code>00110001010001011111001011010010</code></td><td><code>3145F2D2</code></td><td><code>&nbsp;826667730</code></td></tr>

            <tr><th>(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;+&nbsp;2&nbsp;×&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b)</i></th><td><code>01001001100101100000001011010010</code></td><td><code>499602D2</code></td><td><code>1234567890</code></td></tr>
          </tbody></table>
        </div>
      <figcaption>A demonstration case of adding via AND and XOR</figcaption>
    </figure>
    <p>I think of this as the “half-adder identity” (although as far
      as I know that’s not a standard name). The name comes from the
      hardware design concept of a “half-adder”, which is a small
      logic component consisting of just an AND and XOR gate, doing
      addition of two bits in hardware:</p>
    <figure>
      <div>
        <p><img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/half-adder.svg">
        </p>
      </div>
      <figcaption>A half-adder implemented with two logic gates</figcaption>
    </figure>
    <p>It’s called a <em>half</em> adder because in order to do full
      binary addition you need two of these per bit, because you have
      to add <em>three</em> input bits: two from the input integers
      and one carried from the bit position to the right. So you build
      a <em>full</em> adder out of two half-adders, one
      adding <i>a</i> to <i>b</i> and the second adding the sum of
      those two to <i>c</i>, with one extra
      gate<label for="footnoteinput-or-xor"><sup id="footnote-or-xor">7</sup><span>The extra gate that combines the carry
      bits can be either an OR gate or an XOR gate, whichever is
      easier. It doesn’t matter which, because the two types of gate
      only disagree in the case where both their inputs are 1, and in
      this circuit, that can’t happen! If the carry from the first
      half-adder is 1, then its other output <em>must</em> be 0, which
      means there’s no carry from the second half-adder.</span><span>7</span></label> to
      combine the two carry bits:</p>
    <figure>
      <div>
        <p><img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/full-adder.svg">
        </p>
      </div>
      <figcaption>A full adder implemented with two half-adders and an extra gate</figcaption>
    </figure>
    <p>“But hang on,” you might be thinking. “If you need two
      half-adders per bit to do a full addition, how is that
      ‘half-adder identity’ of yours getting away with
      just <em>one</em> pair of AND and XOR operations per bit?” Or
      you might think: “You’ve generated an <em>output</em> carry from
      each bit position, but where have you handled the <em>input</em>
      carry?” Or you might think “Hang on, how do you arrange for a
      carry in the lowest bit of the addition to potentially propagate
      all the way up to the top, when the only left shift in this
      expression moves data by only one bit?”</p>
    <p>The answer to all three questions is: because of the + sign on
      the right-hand side of the identity. After we compute the
      outputs of <em>one</em> half-adder on each pair of input bits,
      producing a word full of low bits and a word full of carries …
      we recombine the two words <em>using an addition</em>. That’s
      what finishes the job of propagating carries.</p>
    <p>In other words, unlike the hardware half-adder, the “half-adder
      identity” <em>doesn’t</em> build an addition out of only simpler
      operations. It builds an addition out of two simpler
      operations <em>and an addition</em>.</p>
    <p>“Well, in <em>that</em> case,” you might think, “isn’t it a
      complete cheat, and not useful for anything?”</p>
    <p>Not quite! It’s true that this identity is not <em>often</em>
      useful. But ‘not often’ isn’t ‘never’, and in unusual
      circumstances there are uses for it.</p>
    <h4 id="average">Averaging two integers</h4>
    <p>Here’s one occasional use for the half-adder identity.</p>
    <p>Suppose you need to calculate the average of two integers, each
      the size of your CPU’s registers (let’s say, 32 bits). In other
      words, you want to add two integers, and then divide by 2 (or,
      equivalently, shift right by 1 bit).</p>
    <p>But adding two 32-bit integers makes a 33-bit sum, which
      doesn’t fit in your register. If you just do the simple thing –
      add and then shift – then you potentially get the wrong answer,
      because the topmost bit has been lost in between the addition
      and the right shift.</p>
    <p>Most CPUs have a good answer to this. The add instruction can
      (perhaps optionally) set a ‘carry flag’ to indicate whether a 1
      bit was carried off the top of an addition; also, there’s
      usually a special form of right shift by 1 bit that brings the
      carry bit back in to the top of the word. (On Arm, that
      instruction is called RRX; on x86, RCR.) So the way to average
      two numbers without an overflow problem is to do ADD followed by
      RRX.</p>
    <p>But a few CPUs can’t do it that way. Some architectures don’t
      have a carry flag at all, or indeed any other flags: for
      example, MIPS, RISC-V, and the historic DEC Alpha. In other
      situations, there is a carry flag, but no convenient RRX
      instruction, so that it would take a lot of effort to recover
      the carry bit and put it at the top of the shifted-right word;
      for example, the initial versions of Arm’s space-efficient
      “Thumb” instruction set discarded the RRX instruction, simply
      because there wasn’t room for everything.</p>
    <p>So, if you <em>can’t</em> do ADD and RRX, how do you most
      efficiently compute your average?</p>
    <p>The half-adder identity provides the answer. If the sum of the
      two inputs is expressed like this (with the &lt;&lt; operation
      meaning ‘shift left’) …</p>
    <p><i>a</i>&nbsp;+&nbsp;<i>b</i>&nbsp;=&nbsp;(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;+&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>)&nbsp;&lt;&lt;&nbsp;1</p>
    <p>… but what you want is the same sum shifted right by one bit,
      then all you have to do is to shift the XOR term <em>right</em>,
      instead of the AND term left:</p>
    <p>(<i>a</i>&nbsp;+&nbsp;<i>b</i>)&nbsp;&gt;&gt;&nbsp;1&nbsp;=&nbsp;(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;&gt;&gt;&nbsp;1&nbsp;+&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>)</p>
    <h4 id="constructing-xor">Implementing XOR itself</h4>
    <p>Also on the theme of ‘compensating for missing features of your
      CPU’, here’s another thing you can do with the half-adder
      identity.</p>
    <p>In the 1970s, Data General made a CPU with such a small
      instruction set that it didn’t even <em>implement</em> the
      bitwise XOR operation – it had AND, but not XOR. On that CPU,
      what would you have done if you needed XOR?</p>
    <p>The answer is to use the half-adder identity in reverse!
      Instead of starting from <i>a</i>&nbsp;XOR&nbsp;<i>b</i> and
      making <i>a</i>&nbsp;+&nbsp;<i>b</i>, do it the other way round. Given the
      equation</p>
    <p><i>a</i>&nbsp;+&nbsp;<i>b</i>&nbsp;=&nbsp;(<i>a</i>&nbsp;XOR&nbsp;<i>b</i>)&nbsp;+&nbsp;2&nbsp;×&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>)</p>
    <p>you can rearrange it to get</p>
    <p><i>a</i>&nbsp;XOR&nbsp;<i>b</i>&nbsp;=&nbsp;(<i>a</i>&nbsp;+&nbsp;<i>b</i>)&nbsp;−&nbsp;2&nbsp;×&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>)</p>
    <p>So if you have addition and bitwise AND, you can build XOR out
      of them!</p>
    <p>(Exercise for the reader: you can also make bitwise OR in the
      same way, by removing the “2&nbsp;×” in the expression – subtract
      (<i>a</i>&nbsp;AND&nbsp;<i>b</i>) <em>without</em> doubling it first.)</p>
    <h3 id="bitswap">Swapping bits in a word</h3>
    <p>Suppose you have a collection of bits packed into an integer,
      and you want to swap the positions of two of them. What’s the
      best way?</p>
    <p>There’s no one answer to that question, because a lot depends
      on what hardware you’re doing it on (and what useful
      capabilities it has), and also, on what else you want to do at
      the same time. For example, swapping a <em>lot</em> of pairs of
      bits can often be done more efficiently than by swapping one
      pair at a time. So this is one of these simple-looking questions
      that becomes surprisingly complicated if you add “… and do it
      absolutely as fast as possible” to the requirements.</p>
    <p>But more than one of the good techniques for solving this
      problem are based on XOR, because you can divide the problem
      into two essential cases:</p>
    <ul>
      <li>If the two bits you want to swap are both 0, or both 1, then
        swapping them <em>makes no difference anyway</em>. So in that
        situation, you don’t need to do anything at all.</li>
      <li>If one of the bits is 0 and the other is 1, then swapping
        them <em>is the same as inverting each one</em>.</li>
    </ul>
    <p>In other words, a reasonable strategy is: first find out if the
      bits are different, and then, if so, invert both.</p>
    <p>Both of those are applications of XOR. If you XOR the two bits
      with each other, that will give you 1 if they’re different. And
      then you can use that value as input to another XOR, using it as
      a ‘controlled bit flip’ to invert both bits, but only if they
      were different to start with.</p>
    <h4 id="shift">Using XOR and shifts</h4>
    <p>Here’s a piece of pseudocode that uses that principle to swap
      two bits. It assumes that <code>pos0</code>
      and <code>pos1</code> are the <em>positions</em> of the two bits
      to be swapped, with 0 meaning the units bit, 1 the bit to its
      left, and so on. It also assumes that <code>pos1 &gt;
      pos0</code>.</p>
    <figure>
      <div>
          <pre># Constants derived from pos0 and pos1
bit0 = (1 &lt;&lt; pos0)      # an integer with just the bit at pos0 set
distance = pos1 - pos0  # distance between the two bits

# Computation starting from the input value
diff_all = input XOR (input &gt;&gt; distance)
diff_one = diff_all AND bit0
diff_dup = diff_one XOR (diff_one &lt;&lt; distance)
output = input XOR diff_dup</pre>
        </div>
      <figcaption>Pseudocode to swap two bits by XOR and shifts</figcaption>
    </figure>
    <p>(If you need to swap the same pair of bit positions in a lot of
      inputs, the first two lines can be precomputed just once and
      reused.)</p>
    <p>The first value we compute, <code>diff_all</code>, is made by
      shifting the input right by the distance between the two bit
      positions. So each bit of <code>diff_all</code> tells you the
      difference between a pair of the input bits separated by that
      distance.</p>
    <p>But we’re only interested in one <em>particular</em> pair of
      the input bits. So next we compute <code>diff_one</code>, which
      uses bitwise AND to pick out just a single bit
      of <code>diff_all</code>. This will be 0 if the two bits we want
      to swap are the same; if they’re different, it will be equal
      to <code>bit0</code> (i.e. it will have a single bit set at
      position <code>pos0</code>).</p>
    <p>If we XORed that value back into <code>input</code>, it would
      conditionally flip the lower of the two bits we want to swap.
      But we want to conditionally flip <em>both</em> of them. So now
      we duplicate the useful bit of <code>diff_one</code> into the
      other bit position, by shifting it left by the distance between
      the two bits, and combining that with <code>diff_one</code>
      itself to get <code>diff_dup</code>. This has a 1
      in <em>both</em> of the target bit positions if the two bits
      need to be flipped, and is still all 0 otherwise.</p>
    <p>So now, XORing that into the input will flip both bits if
      necessary, and leave them alone otherwise.</p>
    <p>This looks like a lot of effort to swap two bits. But one nice
      thing about it is that it’s just as easy to swap <em>lots</em>
      of pairs of bits, if every pair is the same distance apart.
      (That is, swapping bit <i>i</i> with bit <i>i&nbsp;+&nbsp;d</i>, for
      multiple different values of <i>i</i> but the same <i>d</i>
      every time.) In that situation, the only thing you need to
      change is the step that makes <code>diff_one</code>
      from <code>diff_all</code>: instead of ANDing with
      a <em>one</em>-bit constant, AND with a <em>multiple</em>-bit
      constant, containing the low bit of every pair you want to
      swap.</p>
    <p>Why might you want to do <em>that</em> in turn? Because there’s
      a general technique called a <em>Beneš network</em> which lets
      you encode a completely arbitrary permutation in the form of a
      series of stages, with each stage swapping a lot of pairs of
      things separated by the same distance. The distances iterate
      through powers of 2 and then back again: for example, you might
      do a set of swaps with distances 16, 8, 4, 2, 1, 2, 4, 8, 16.
      (Or the other way round if you prefer – it doesn’t really
      matter <em>what</em> order you go through the distances in.) So
      if you want to permute the bits of a word in a completely
      arbitrary way, a computational primitive that swaps a lot of
      bits at equal separation is just what you want for each stage of
      a Beneš network.</p>
    <h4 id="parity">Using XOR and just a two-bit word</h4>
    <p>In the simpler case where you’re only swapping a single pair of
      bits, here are a couple of simpler (therefore faster)
      techniques.</p>
    <p>Suppose that you have an integer called <code>bits</code>,
      which has exactly two bits set, at the positions you want to
      swap. What happens if you make the bitwise AND of that value
      with your input? There are three possibilities:</p>
    <ul>
      <li>(<code>input</code>&nbsp;AND&nbsp;<code>bits</code>)&nbsp;=&nbsp;0. Both bits are
        0, so you don’t need to do anything to swap them.</li>
      <li>(<code>input</code>&nbsp;AND&nbsp;<code>bits</code>)&nbsp;=&nbsp;<code>bits</code>.
        Both bits are 1, so you still don’t need to do anything.</li>
      <li>Otherwise, the two bits have different values, so you can
        swap them by XORing the input with <code>bits</code>.</li>
    </ul>
    <p>On several CPU architectures this kind of test is easier than
      doing the full business above with shifts – especially because
      you don’t need the input bit positions specified in multiple
      ways. For example, many CPU architectures would let you do
      something like this (though the syntax of the instructions would
      vary)</p>
    <figure>
      <div>
          <pre>  tmp = input AND bits         # zero if both bits are 0
  if tmp == 0, jump to ‘done’  # in which case we have no work to do
  tmp = tmp XOR bits           # now zero if both bits are 1
  if tmp == 0, jump to ‘done’  # so again we have nothing to do
  input = input XOR bits       # in any other case, flip both bits
done:</pre>
        </div>
      <figcaption>‘Machine pseudocode’ to swap two bits</figcaption>
    </figure>
    <p>You could typically do this with about five instructions,
      because CPUs will typically set a flag as a side effect of each
      AND or XOR operation to tell you whether the result was zero.
      Or, if not that, they might have a single instruction to jump to
      a different location depending on whether a register is zero.</p>
    <p>On the 32-bit Arm architecture you can do this in just three
      instructions, because you don’t need the jumps: instead, you can
      make the two XOR operations <em>conditional</em>, because 32-bit
      Arm generally lets you make an instruction conditional on the
      current CPU flags without needing a separate branch instruction
      to skip past it.</p>
    <p>And on x86, you can also do it in three instructions for a
      completely different reason. x86 has an even stranger processor
      status flag called the ‘parity flag’. This is set whenever the
      result of an operation has <em>an odd number of 1 bits</em>. And
      in this situation, that’s exactly the case where you need to
      flip the bits! So you don’t need to test separately for the
      ‘both bits 0’ and ‘both bits 1’ cases: they can be tested
      together, by checking if the parity flag says there were an even
      number of 1 bits in the result of the AND operation.</p>
    <figure>
      <div>
        <div>
          <pre>  ANDS    tmp, input, bits
  EORSNE  tmp, tmp, bits
  EORNE   input, input, bits</pre>
        </div>
        <div>
          <pre>  TST     input, bits
  JPE     done
  XOR     input, bits
done:</pre>
        </div>
      </div>
      <figcaption>Arm and x86 machine code to swap two bits</figcaption>
    </figure>
    <h3 id="swap">Three XORs make a swap</h3>
    <p>In a computer program, how do you swap two numbers?</p>
    <p>It depends on the platform. Some programming languages have a
      dedicated function for it, like C++’s <code>std::swap</code>.
      Others have a convenient syntax for assigning multiple variables
      at once: in Rust you can write <code>(a, b) = (b, a)</code>
      (assuming the variables are <code>mut</code>), and in Python the
      same thing works without even needing the brackets. Even some
      machine languages support swapping two registers: for example,
      x86 has the XCHG (exchange) instruction.</p>
    <p>But suppose you’re in a simpler language without any of those
      features, like C. Or suppose you’re programming machine code on
      an architecture without a ‘swap two registers’
      instruction<label for="footnoteinput-swp"><sup id="footnote-swp">8</sup><span>There is an Arm instruction called
      SWP for ‘swap’, but it’s not what you want for this kind of
      purpose. It swaps a register with a value in <em>memory</em>,
      not two registers. It’s not really for ordinary computation:
      it’s intended for atomically synchronising between threads,
      which is very hard to get right and well beyond the scope of
      this article!</span><span>8</span></label>. The usual idiom is to use a temporary
      variable:</p>
    <figure>
      <div>
          <pre>a_orig = a;
a = b;
b = a_orig;</pre>
        </div>
      <figcaption>C code for swapping two integers <code>a</code>
        and <code>b</code></figcaption>
    </figure>
    <p>You need the temporary variable because in C you can only
      assign one variable at a time, so after you execute the
      assignment <code>a = b</code>, both variables now have the same
      value (namely the value originally in <code>b</code>), and
      you’ve lost the previous value of <code>a</code> completely –
      unless you’d saved it in a third location first.</p>
    <p>But just occasionally you don’t have a spare register, or at
      least it would cost you a lot of extra effort to free one up. It
      turns out that there’s a different way to swap two
      values, <em>without</em> needing a spare storage location, using
      three XORs:</p>
    <figure>
      <div>
          <pre>a = a XOR b;
b = b XOR a;
a = a XOR b;</pre>
        </div>
      <figcaption>Pseudocode for swapping <code>a</code>
        and <code>b</code> using three XORs</figcaption>
    </figure>
    <p>Why does <em>that</em> work?!</p>
    <p>It’s difficult to explain this clearly, because we don’t have
      separate names for the <em>variables</em> we’re mutating, and
      the <em>values</em> that are stored in them. So let’s start by
      making up some names. Let’s say that the value that
      was <em>originally</em> stored in <code>a</code> is
      called <code>a_orig</code> (as I already did above in that C
      snippet). And similarly, the original value of <code>b</code> is
      called <code>b_orig</code>.</p>
    <p>Then this is what happens with the three XORs:</p>
    <figure>
      <div>
          <table>
            <tbody><tr><td></td><th>Value in <code>a</code></th><th>Value in <code>b</code></th></tr>
            <tr><th>Before doing anything</th><td><code>a_orig</code></td><td><code>b_orig</code></td></tr>
            <tr><th>After <code>a = a&nbsp;XOR&nbsp;b</code></th><td><code>a_orig&nbsp;XOR&nbsp;b_orig</code></td><td><code>b_orig</code></td></tr>
            <tr><th>After <code>b = b&nbsp;XOR&nbsp;a</code></th><td><code>a_orig&nbsp;XOR&nbsp;b_orig</code></td><td><code>a_orig</code></td></tr>
            <tr><th>After <code>a = a&nbsp;XOR&nbsp;b</code></th><td><code>b_orig</code></td><td><code>a_orig</code></td></tr>
          </tbody></table>
        </div>
      <figcaption>Intermediate states of the three-XOR swap algorithm</figcaption>
    </figure>
    <p>The basic idea is that there are three values we care about:
      the two input values, and their bitwise XOR. And if you have
      three values, one of which is the XOR of the other two, then
      knowing <em>any two</em> of them is enough to work out the
      third, because <em>each</em> of them is the XOR of the other
      two. So at each step of this algorithm, we set one of the
      variables to the XOR of both variables, and that’s always a
      reversible operation (in fact doing exactly the same thing
      again <em>would</em> reverse it), so <em>information is never
      lost</em>. At every stage, XORing the two values we have in our
      variables recovers whichever one we currently <em>don’t</em>
      have. And it takes three XORs to rotate through all the possible
      options, which is why after three steps we’re back to having the
      original values of <i>a</i> and <i>b</i> – but the other way
      round.</p>
    <p>I should say at this point that this isn’t a trick you
      can <em>only</em> do with XOR – it doesn’t depend on XOR having
      any essential magic that other operations don’t. You can use the
      same technique with additions and subtractions if you prefer, by
      setting one variable to the <em>sum</em> of the other two:</p>
    <figure>
      <div>
          <pre>a = a + b;     // now a = (a_orig + b_orig)
b = a - b;     // now b = (a_orig + b_orig) - b_orig = a_orig
a = a - b;     // now a = (a_orig + b_orig) - a_orig = b_orig</pre>
        </div>
      <figcaption>Pseudocode for swapping <code>a</code>
        and <code>b</code> by addition and subtraction</figcaption>
    </figure>
    <p>But the XOR version is more common (among people who want to do
      this trick at all). Partly that’s because it’s simpler: all
      three operations are the same, whereas in the additive version
      all <em>three</em> operations are different (the two
      subtractions are opposite ways round, in the sense of which of
      their inputs they overwrite).</p>
    <p>But also, the XOR version is more flexible, because – just like
      in the <a href="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/pixels">pixel graphics</a> application – you can
      use it in situations where addition would cause unwanted extra
      carries.</p>
    <p>For example, here’s a case where you can swap with three XORs,
      which wouldn’t work with three additions. Suppose
      that <code>a</code> and <code>b</code> are 32-bit registers,
      and <code>n</code> is some number less than 32:</p>
    <figure>
      <div>
          <pre>a = a XOR (b &lt;&lt; n);
b = b XOR (a &gt;&gt; n);
a = a XOR (b &lt;&lt; n);</pre>
        </div>
      <figcaption>Swap part of <code>a</code> with part
      of <code>b</code></figcaption>
    </figure>
    <p>The effect of this code is to swap <em>parts</em> of the two
      values. Specifically, only the upper (32&nbsp;−&nbsp;<i>n</i>) bits
      of <code>a</code> are affected, because every time we XOR
      something into <code>a</code>, the value we XOR in has been
      shifted left by <i>n</i> bits, so its lower <i>n</i> bits are
      zero. Similarly, the value XORed into <code>b</code> has been
      shifted right <i>n</i> bits, so its top <i>n</i> bits are zero,
      so the operation only affects the lower (32&nbsp;−&nbsp;<i>n</i>) bits
      of <code>b</code>.</p>
    <figure>
      <div>
        <p><img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/shifted-swap.svg">
        </p>
      </div>
      <figcaption>The parts of <code>a</code> and <code>b</code>
        affected by the above code</figcaption>
    </figure>
    <p>In fact, this code precisely swaps those two segments of the
      inputs: the upper (32&nbsp;−&nbsp;<i>n</i>) bits of <code>a</code> are
      swapped with the lower (32&nbsp;−&nbsp;<i>n</i>) bits
      of <code>b</code>.</p>
    <p>One use for this trick I’ve seen in the past: suppose that you
      were operating on a buffer of graphics data with one byte per
      pixel. You’ve loaded a word from the buffer containing four
      pixels <i>PQRS</i>, and you’re trying to magnify it by a factor
      of two, so that you want to create words containing <i>PPQQ</i>
      and <i>RRSS</i>.</p>
    <p>The neatest way I know to do it is to use this ‘shifted swap’
      technique twice:</p>
    <ul>
      <li>Initialise both <code>a</code> and <code>b</code> to copies
        of the input word <i>PQRS</i>.</li>
      <li>Do a shifted swap with <i>n</i>&nbsp;=&nbsp;8, swapping the top 24
        bits of <code>b</code> (containing <i>PQR</i>) with the bottom 24 of <code>a</code> (containing <i>QRS</i>). Now <code>a</code>&nbsp;=&nbsp;<i>PPQR</i>, and <code>b</code>&nbsp;=&nbsp;<i>QRSS</i>.</li>
      <li>Do a second shifted swap, this time with <i>n</i>&nbsp;=&nbsp;24,
        swapping the top 8 bits of <code>b</code>
        (containing <i>Q</i>) with the bottom 8 of <code>a</code>
        (containing <i>R</i>). Now <code>a</code>&nbsp;=&nbsp;<i>PPQQ</i>,
        and <code>b</code>&nbsp;=&nbsp;<i>RRSS</i>. Done!</li>
    </ul>
    <h3 id="nim">Winning at the game of Nim</h3>
    <p>Possibly the <em>strangest</em> application of XOR that I know
      of is in game theory.</p>
    <p>In the simple combinatorial game of ‘Nim’, there are some piles
      of counters. On your turn, you must choose one pile and remove
      any number of counters you like from it, from 1 to the whole
      pile, or anywhere in between (but not 0). You lose if you have no
      possible move<label for="footnoteinput-misere"><sup id="footnote-misere">9</sup><span>In fact, Nim comes in two
      well-known forms, with opposite win conditions. In the variant
      discussed here, your aim is to take the last counter and leave
      your opponent with no move. In the other variant, the win
      condition is exactly the reverse: you aim to make
      your <em>opponent</em> take the last counter! The strategy for
      the latter is a tiny bit more complicated, but not too bad. I
      only discuss the simple version here.</span><span>9</span></label>, which only
      happens if there are no counters at all remaining (because your
      opponent took the last one).</p>
    <p>How do you determine a good move in this game?</p>
    <figure>
      <div>
        <p><img src="https://www.chiark.greenend.org.uk/~sgtatham/quasiblog/xor/nim-example.svg">
        </p>
      </div>
      <figcaption>The unique winning move here is to take 3 counters
        from the pile of 12. But why?</figcaption>
    </figure>
    <p>The basic idea is to identify a set of <em>losing
      positions</em>: states of the game in which, if it’s your turn,
      you’re in trouble. This set should have the properties that:</p>
    <ol>
      <li>the position where you have actually lost counts as a losing
        position. (It’d be embarrassing to get that wrong.)</li>
      <li>from any losing position, <em>every</em> possible move
        leaves the other player in a non-losing position. (If you’re
        in trouble, you stay in trouble no matter what you do.)</li>
      <li>from any non-losing position, there should be <em>at least
        one</em> move which leaves the other player in a losing
        position. (If you have the advantage, there’s a way to keep
        it, though you may have to think about it.)</li>
    </ol>
    <p>For a game like Nim, where every move reduces the total number
      of counters, you could analyse the game computationally by
      iterating through all the possible positions in order of
      increasing size, and for each one, classify it as ‘losing’ or
      ‘non-losing’ according to the above rules, by checking the
      results of smaller positions you’ve already classified. Of
      course this only gets you the status of a finite number of
      positions (until you run out of patience to run the computer
      program), but you might hope to see a pattern, which you could
      then try to prove.</p>
    <p>If you try this, it turns out that there is indeed a pattern,
      and it’s a surprising one. The losing positions in Nim are
      precisely positions in which <em>the bitwise XOR of all the pile
      sizes is zero!</em></p>
    <p>Two of the three criteria above are easy to check:</p>
    <ol>
      <li>If there are no counters at all, then XORing all the pile
        sizes together gives you zero, because there aren’t any piles
        at all (or, equivalently, they all have zero height). So the
        ‘you have lost’ position is a losing position by this XOR
        rule. ✓</li>
      <li>If you’re in a losing position (all the piles XOR to zero),
        then your move must change exactly one of the pile sizes, say
        from <i>a</i> to <i>b</i>. So the XOR of the pile sizes has
        changed by <i>a</i>&nbsp;XOR&nbsp;<i>b</i>, which
        (since <i>a</i>&nbsp;≠&nbsp;<i>b</i>) isn’t zero. So any move from a
        losing position goes to a non-losing position. ✓</li>
    </ol>
    <p>The third condition is the trickiest. From
      a <em>non</em>-losing position – if the piles XOR to some
      nonzero value <i>x</i> – there always needs to be <em>at least
      one</em> move that makes the piles XOR to zero again.</p>
    <p>If you were allowed to <em>add</em> counters to a pile as well
      as removing them, this would be easy. Just modify any pile you
      like by XORing its size with <i>x</i> (which will necessarily
      change it from its previous value), and then the sizes XOR to
      zero.</p>
    <p>But in some cases, this makes a pile bigger, and that’s not
      allowed. So we need to show that there’s at least one pile that
      is made <em>smaller</em> by doing this.</p>
    <p>First, how can you tell whether XORing some other
      number <i>n</i> with <i>x</i> makes it bigger or smaller? The
      answer is to look at the <em>highest</em> 1 bit in <i>x</i>. If
      that bit is also 1 in <i>n</i>, it will be 0
      in <i>n</i>&nbsp;XOR&nbsp;<i>x</i>, and that means <i>n</i>&nbsp;XOR&nbsp;<i>x</i>
      will be smaller than <i>n</i>. This is true <em>no matter</em>
      what the lower-order bits do, because even if all the lower bits
      change from 0 to 1, the sum of those effects will still be
      (just) smaller than the effect of the high bit changing from 1
      to 0.</p>
    <p>So, if the piles XOR to <i>x</i>, then we’re looking for pile
      sizes which have a 1 in the same place as the highest 1 bit
      of <i>x</i>. Those are exactly the piles for which
      XORing <i>x</i> into the size will make it smaller – meaning we
      can modify that pile in a way that is both within the rules, and
      creates a losing position for the other player.</p>
    <p>So we can find a legal winning move if there’s at least one
      pile size with a 1 in that bit position. But of course there
      must be one, <em>because</em> that bit is set in <i>x</i>: if
      every pile size has 0 in a given bit position, then <i>x</i>
      does too!</p>
    <p>For an example, let’s calculate what’s going on in the picture
      above. The three pile sizes are 12, 10 and 3. In binary, those
      are 1100, 1010 and 0011. The bitwise XOR of those values is
      0101, so this isn’t a losing position. To win, we must change a
      pile size by XORing it with 0101. Two of the pile sizes would be
      made bigger by this operation: the two smaller sizes, 1010 and
      0011, have a 0 in the relevant position (they’re of the
      form <i>x</i>0<i>yz</i>), so they would become 1111 and 0110
      respectively, each larger than their original size. But the
      largest pile, with size 1100, has that bit set, so it becomes
      1001, a smaller value. Therefore, there’s only one winning move,
      and it’s to reduce the largest pile from size 12 to size 9 by
      removing three counters, as the picture shows.</p>
    <p>One reason I find this a particularly strange place for bitwise
      XOR to show up is that it doesn’t to have anything to do with
      your choice of number base. If you’re writing two
      integers <em>in binary</em>, then it might seem very natural to
      combine corresponding pairs of digits in various ways. But if
      you write the same integers in base 10, or some other base like
      3 or 5, then you’d find yourself imagining a totally different
      set of ‘digit-wise’ operations analogous to the bitwise ones
      (like taking the minimum, or maximum, or sum mod 10, of each
      pair of corresponding decimal digits). So you’d expect bitwise
      XOR to show up in situations where it was important that you’d
      written a number in binary. But the winning strategy in Nim
      doesn’t depend on what base you write the pile sizes in, or even
      whether you wrote them down in place-value notation at all – so
      the appearance of bitwise XOR <em>seems</em> to be saying that
      binary is important to the underlying mathematics, whether
      humans have thought of it or not!</p>
    <h2 id="maths">Mathematical concepts that look like XOR</h2>
    <p>That last example, from game theory, is moving more in the
      direction of mathematics rather than practical computing. So
      this is a good moment to change direction and talk about some
      concepts in pure mathematics that are basically XOR with a
      different name, or in a not-very-subtle disguise.</p>
    <p>In some cases, there’s a whole further area of study that
      follows on from the XOR-like operation, showing that XOR isn’t
      just a useful thing in its own right – it’s also the starting
      point of a lot more.</p>
    <p>In the following sections the mathematics will be more advanced
      than it’s been until now: I don’t have space to describe every
      concept from absolute scratch, so in each section I’ll have to
      rely on some background knowledge that makes it possible to
      explain the new concept briefly.</p>
    <p>If that isn’t your thing, then I hope you’ve enjoyed the
      previous parts of the article!</p>
    <h3 id="symmdiff">Symmetric difference of sets</h3>
    <p>I’ll start with a simple one. There’s a natural correspondence
      between Boolean logic operations, and operations on sets in set
      theory. For any set <i>X</i>, you can imagine asking the yes/no
      question ‘Is this particular thing a member of <i>X</i>?’. Then,
      set operations on the sets themselves (like union and
      intersection) correspond naturally to Boolean logic operations
      on the answers to those membership queries.</p>
    <p>For example, if you have two sets <i>X</i> and <i>Y</i>, then
      when is some element <i>a</i> in the union <i>X</i>&nbsp;∪&nbsp;<i>Y</i>?
      Precisely when either <i>a</i> is
      in <i>X</i>, <em>or</em> <i>a</i> is in <i>Y</i>, or both. The
      union operator corresponds to the Boolean (inclusive) OR.</p>
    <p>Similarly, <i>a</i>&nbsp;∈&nbsp;(<i>X</i>&nbsp;∩&nbsp;<i>Y</i>) precisely
      when <i>a</i>&nbsp;∈&nbsp;<i>X</i> <em>and</em> <i>a</i>&nbsp;∈&nbsp;<i>Y</i>. The
      intersection operator corresponds to AND.</p>
    <p>In this model, what corresponds to XOR? It’s the <em>symmetric
      difference</em> operator, written <i>X</i>&nbsp;∆&nbsp;<i>Y</i>: the set
      of elements that are in <em>exactly one</em> of <i>X</i>
      and <i>Y</i>, no matter which one it
      is. <i>a</i>&nbsp;∈&nbsp;(<i>X</i>&nbsp;∆&nbsp;<i>Y</i>) precisely
      when (<i>a</i>&nbsp;∈&nbsp;<i>X</i>) XOR (<i>a</i>&nbsp;∈&nbsp;<i>Y</i>).</p>
    <p>This correspondence between XOR and symmetric difference means
      that the ∆ operator has all the same properties as XOR – for
      example, it’s both commutative and associative. Proving this is
      a common introductory exercise in simple set theory, and doing
      it directly can easily lead to half a page of tedious algebra;
      but understanding symmetric difference as ‘basically XOR’, and
      XOR in turn as the same thing as addition mod 2, makes it clear
      that symmetric difference inherits commutativity and
      associativity from addition itself.</p>
    <h3 id="exp2">Groups of exponent 2</h3>
    <p>In group theory, if <i>g</i> is an element of a group <i>G</i>,
      you can ask: is any power of <i>g</i> equal to the group
      identity <i>e</i>? If so, what’s the <em>smallest</em>
      number <i>n</i>&nbsp;&gt;&nbsp;0 such
      that <i>g</i><sup><i>n</i></sup>&nbsp;=&nbsp;<i>e</i>? This number is
      called the <em>order</em> of the element <i>g</i>. (If there is
      no such integer <i>n</i>, so that all the powers of <i>g</i> are
      different, then we say that <i>g</i> has infinite order.)</p>
    <p>Instead of asking about the order of one specific element
      of <i>G</i> at a time, you can also ask a similar question for
      the whole group at once: is there a single number <i>n</i> such
      that, for <em>every</em>
      element <i>g</i>&nbsp;∈&nbsp;<i>G</i>, <i>g</i><sup><i>n</i></sup>&nbsp;=&nbsp;<i>e</i>?
      The smallest such number is called the <em>exponent</em> of the
      group <i>G</i>. (Again, it may be infinite. If it’s finite, then
      it’s also the lowest common multiple of all the orders of
      individual elements.)</p>
    <p>If a group has exponent 2 in particular, then that means every
      element
      is <em>self-inverse</em>: <i>g</i><sup>2</sup>&nbsp;=&nbsp;<i>e</i> for
      all <i>g</i>. A standard exercise is to show that this also
      makes the group <em>abelian</em>, i.e. the group operation is
      commutative, i.e. <i>gh</i>&nbsp;=&nbsp;<i>hg</i> for
      all <i>g</i>,<i>h</i>.</p>
    <p>Group operations are also associative, by definition of a
      group. So in this situation, we have an operation that’s
      commutative, associative, has an identity (namely <i>e</i>), and
      everything is self-inverse. So if you have a long list of group
      elements combined together, you can reorder it to bring
      identical elements together, and then any two copies of the same
      element cancel out.</p>
    <p>That sounds a lot like XOR – and it is. Every group of exponent
      2 can be understood as a special case of XOR, by imagining that
      each element of the group corresponds to a function (on some
      set <i>X</i> that depends on the group) taking values in {0,&nbsp;1},
      and combining two elements has the effect of taking the bitwise
      XOR (or sum mod 2) of their associated functions.</p>
    <!-- Proof: being abelian, a group G of exponent 2 can be regarded
        as a vector space over GF(2), with scalar multiplication
        defined trivially as 1g=g and 0g=e. All vector spaces have a
        basis (even if it requires AC to construct in some cases), so
        let B be a basis for this space. Then G can also be regarded
        as the set of functions B → GF(2) with finite support, under
        elementwise addition mod 2, i.e. under XOR. -->
    <p>Not every such group contains <em>all</em> the possible
      functions from <i>X</i>&nbsp;→&nbsp;{0,&nbsp;1}. Every <em>finite</em> group of
      exponent 2 does (as long as you don’t define <i>X</i> to have
      spare unused elements), but infinite groups can be more subtle.
      You might have, for example, the set of functions from
      ℕ&nbsp;→&nbsp;{0,&nbsp;1} that are eventually all 0, or eventually constant, or
      eventually periodic.</p>
    <p>But all groups of exponent 2 correspond to <em>some</em> set of
      functions with codomain {0,&nbsp;1}, under bitwise XOR.</p>
    <h3 id="nimsum">Nim-sum</h3>
    <p>In an <a href="#nim">earlier section</a> we saw that the losing
      positions in the game of Nim are characterised by the pile sizes
      XORing to zero.</p>
    <p>This isn’t just an isolated mathematical curiosity about one
      obscure game. Nim is central to the theory of <em>Sprague-Grundy
      analysis</em>, which proves a large class of other games to be
      ‘equivalent’ to Nim in the sense that you can analyse them using
      the same technique.</p>
    <p>However, the class of games that this works for doesn’t include
      most games you might normally play. It’s limited
      to <em>impartial</em> games, which are those where the set of
      permitted moves don’t change depending on which player’s turn it
      is. Chess, for example, is <em>not</em> impartial, because each
      piece belongs to a specific player, and the other player isn’t
      allowed to move it. It’s not enough that one player’s pieces are
      basically the same as the other player’s, and move by the same
      rules: chess would only be impartial if both players were
      allowed to move <em>any piece they liked</em>, regardless of
      colour.</p>
    <p>The basic idea is that for any position <i>P</i> in any
      impartial game, you can assign it a number <i>n</i>, known as
      a <em>Grundy number</em>. Then you can treat position <i>P</i>
      as ‘essentially’ the same as a Nim pile containing <i>n</i>
      counters, in the sense that for every smaller
      number <i>m</i>&nbsp;&lt;&nbsp;<i>n</i>, there’s a move that
      turns <i>P</i> into a position with Grundy number <i>m</i>, but
      no move that leaves the Grundy number unchanged at <i>n</i>
      itself. (There may or may not be moves that go
      to <em>larger</em> numbers; in that respect Grundy numbers
      differ from actual Nim piles, but this difference turns out not
      to matter.)</p>
    <p>In many of these games, it’s natural to combine multiple
      instances of the game into one bigger one, in a way that gives
      the player the choice of which subgame to make a move in. This
      operation is called making a <em>composite</em>, or sometimes
      a <em>disjunctive sum</em>, of the smaller games. For example, a
      Nim game with multiple piles of counters is exactly the
      composite of smaller Nim games each containing just one of the
      piles, because on your turn you must choose just one of the
      subgames (piles) to modify, and make a move that would be legal
      in that subgame by itself.</p>
    <p>How do you work out the Grundy number of a composite game? One
      very convenient way is to first find the Grundy number of each
      component (which are smaller and simpler games, so this is
      usually easier). Then the overall game is a composite of smaller
      games, each one equivalent to a Nim pile of a particular size –
      and so its Grundy number is obtained the same way you’d evaluate
      a position in Nim, by combining the smaller games’ Grundy
      numbers using bitwise XOR.</p>
    <p>A concrete example is the game of ‘kayles’, which starts off
      with a row of counters equally spaced, and on your move you may
      remove any single counter, or two counters directly adjacent. So
      most of the possible first moves divide the starting row into
      two smaller rows, which you then have to play in separately
      (there’s no move you can make that affects both). Sprague-Grundy
      analysis saves you from having to analyse every
      possible <em>combination</em> of kayles rows: instead, you only
      need to work out the Grundy number of each length
      of <em>single</em> kayles row, and then the Grundy number of a
      composite of multiple rows can be worked out by XOR.</p>
    <p>So bitwise XOR is crucial to this entire branch of game theory.
      For this reason, the operation of bitwise XOR on non-negative
      integers is sometimes referred to by game theorists as
      the <em>nim-sum</em>.</p>
    <h3 id="gf2"><i>GF</i>(2), the finite field of order 2</h3>
    <p>A <em>field</em>, in mathematics, means an algebraic structure
      in which you can add, subtract, multiply and divide any two
      numbers (except for dividing by 0), and you still get a number
      within the original field, and those operations behave
      ‘sensibly’ in the same ways you’re used to, both individually
      and in combination with each other. For example, you
      expect <i>a</i>&nbsp;+&nbsp;<i>b</i>&nbsp;=&nbsp;<i>b</i>&nbsp;+&nbsp;<i>a</i>,
      and <i>a</i>&nbsp;−&nbsp;<i>a</i>&nbsp;=&nbsp;0,
      and <i>a</i>(<i>b</i>&nbsp;+&nbsp;<i>c</i>)&nbsp;=&nbsp;<i>ab</i>&nbsp;+&nbsp;<i>ac</i>.</p>
    <p>Well-known fields include the real numbers, ℝ; their superset,
      the complex numbers ℂ; their subset, the rational numbers ℚ.
      There are also a great many intermediate fields between ℚ and ℝ,
      such as the set of all numbers of the form <i>a</i>&nbsp;+&nbsp;<i>b</i>√2
      for rational <i>a</i> and <i>b</i>. A well-known example of
      something that’s <em>not</em> a field is the integers, ℤ: you
      can add, subtract and multiply integers just fine and still get
      an integer, but if you divide two integers, you can easily get
      something that isn’t an integer any more.</p>
    <p>All of those fields have infinite size. If nothing else, they
      contain the integers: you can start from 1, and keep adding 1,
      and get an endless sequence of numbers, all different and all
      still in the field.</p>
    <p>But there’s also such a thing as a <em>finite</em> field: a
      structure that obeys all the same rules as any other field, but
      has a finite number of different elements.</p>
    <p>A finite field has a fundamentally different nature from the
      fields I’ve mentioned so far. If you do that same experiment I
      just mentioned in a finite field – start with 1 and keep adding
      1 – you <em>can’t</em> get an infinite sequence of different
      values, because there aren’t infinitely <em>many</em> different
      values at all. Sooner or later, you must repeat a number you’ve
      run into before.</p>
    <p>In particular, this means that if you count up 1, 2, 3, … in a
      finite field, you must at some point find that one of those
      numbers is equal to <em>zero</em> again. So finite fields have
      the nature of <em>modular</em> arithmetic, rather than ordinary
      arithmetic: there’s always some positive number <i>p</i> (known
      as the <em>characteristic</em> of the field, and as it turns
      out, always prime) such that adding 1 to itself <i>p</i> times
      gives zero, and therefore, adding <em>anything</em> to
      itself <i>p</i> times also gives
      zero<label for="footnoteinput-infinite-positive-characteristic"><sup id="footnote-infinite-positive-characteristic">10</sup><span>However, the
      converse isn’t true. Any finite field has positive
      characteristic, but not every field with positive characteristic
      is finite. There are also <em>infinite</em> fields with this
      same modular-arithmetic property. But we won’t get as far as
      discussing those here.</span><span>10</span></label>. (Which means that you also
      aren’t allowed to divide by <i>p</i>, because you can’t divide
      by zero, and <i>p</i> is the same thing as zero in this
      context.)</p>
    <p>In fact, the simplest example of a finite field
      is <em>precisely</em> modular arithmetic. For a prime <i>p</i>,
      the integers mod <i>p</i> have all the properties of a field, as
      long as you interpret ‘dividing by <i>n</i>’ to mean multiplying
      by the modular inverse of <i>n</i> mod <i>p</i>.</p>
    <p>And the simplest example of <em>that</em> is to take <i>p</i>
      to be the smallest prime of all, namely 2. If you do that, you
      get a field with just two numbers in it: 0 and 1! This field is
      called various things, including <i>GF</i>(2) and 𝔽<sub>2</sub>.
      (‘GF’ stands for ‘Galois field’, after the mathematician who
      pioneered research in this area.)</p>
    <p>This field is so small that it’s possible to just <em>list</em>
      all the answers to every basic arithmetic operation:</p>
    <ul>
      <li>Addition works mod 2, so 1&nbsp;+&nbsp;1&nbsp;=&nbsp;0. Every other addition is
        the same as in normal integers: 0&nbsp;+&nbsp;0&nbsp;=&nbsp;0 and 0&nbsp;+&nbsp;1&nbsp;=&nbsp;1.</li>
      <li>Subtraction is <em>exactly the same thing as addition</em>,
        because −1 and +1 are the same thing in any ‘mod 2’ context.
        In particular, 0&nbsp;−&nbsp;1&nbsp;=&nbsp;1 (again, because −1&nbsp;=&nbsp;+1), and
        everything else is the same as in normal integers: 0&nbsp;−&nbsp;0&nbsp;=&nbsp;0,
        1&nbsp;−&nbsp;1&nbsp;=&nbsp;0 and 1&nbsp;−&nbsp;0&nbsp;=&nbsp;1.</li>
      <li>Multiplication works <em>exactly</em> like normal integers:
        any multiplication involving 0 gives 0, and 1&nbsp;×&nbsp;1&nbsp;=&nbsp;1.</li>
      <li>The only case of division that’s allowed <em>at all</em> is
        dividing a number by 1, which just gives you the same number
        back again. And you can’t divide by 0 at all.</li>
    </ul>
    <p>To put this another way: the elements of this field look like
      booleans (with the usual convention of 0&nbsp;=&nbsp;false and 1&nbsp;=&nbsp;true),
      and addition and subtraction both behave like the XOR operator.
      Multiplication behaves like AND: the product is 1 only if both
      inputs are 1, because otherwise, at least one input is 0, and
      multiplying by 0 gives 0.</p>
    <p>This means that we’ve just found out another algebraic property
      of the XOR operator: AND distributes over it, which is to say that</p>
    <p><i>a</i>&nbsp;AND&nbsp;(<i>b</i>&nbsp;XOR&nbsp;<i>c</i>)&nbsp;=&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>b</i>)&nbsp;XOR&nbsp;(<i>a</i>&nbsp;AND&nbsp;<i>c</i>)</p>
    <p>because that’s just the translation into Boolean algebra of the
      ordinary algebraic
      identity <i>a</i>(<i>b</i>&nbsp;+&nbsp;<i>c</i>)&nbsp;=&nbsp;<i>ab</i>&nbsp;+&nbsp;<i>ac</i>,
      which is true in <i>GF</i>(2) just like in any other field.</p>
    <p>This tiny field seems as if it’s surely too trivial to actually
      be useful for anything. But it isn’t!</p>
    <h4 id="gf2linalg">Linear algebra over <i>GF</i>(2)</h4>
    <p>All of linear algebra – vectors, matrices, and all that –
      starts from the definition of a <em>vector space</em>. That in
      turn depends on the starting point of choosing a <em>field</em>
      which will act as the ‘scalars’ of your vector space, and the
      elements of your matrices. Depending on the field you choose,
      the vectors and matrices behave differently. (For example,
      rational, real and complex matrices will disagree on whether a
      matrix is diagonalisable, or has a square root.)</p>
    <p>You can make a vector space over any field you like. Even over
      the trivially simple <i>GF</i>(2), if you want to. If you do
      that, then vectors are particularly simple: each vector looks
      like a sequence of numbers which are all either 0 or 1. You
      could imagine representing this as just a string of individual
      bits in a computer.</p>
    <p>When you add two vectors or matrices, you add each component
      separately, using whatever addition is appropriate to your
      field. If the field is <i>GF</i>(2), that means the addition is
      mod 2, i.e. it works like XOR, independently in each
      component. <em>Adding two vectors or matrices
      over</em> <i>GF</i>(2) <em>corresponds exactly to bitwise
      XOR.</em></p>
    <p>What about multiplying a matrix <i>M</i> by a vector <i>v</i>?
      In ordinary real-number linear algebra, one way to look at this
      is that the output is a linear combination of the columns of the
      matrix <i>M</i>, and the coefficients of the linear combination
      are given by the components of the vector <i>v</i>. That is,
      the <i>i</i>th column of <i>M</i> is multiplied by
      the <i>i</i>th component of <i>v</i>, and all those products are
      added together.</p>
    <p>Over <i>GF</i>(2), this is particularly simple, because the
      components of <i>v</i> are all either 0 or 1, so multiplying one
      of those into a column of <i>M</i> either zeroes it out
      completely, or leaves it unchanaged. So <i>v</i> is just
      specifying a <em>subset</em> of the columns of <i>M</i>. And
      then those columns are added together like vectors
      over <i>GF</i>(2), i.e. combined as if by bitwise XOR.</p>
    <p>Of course, you have to ask why anyone would bother. What’s the
      use of vectors and matrices in which the components work mod 2
      in this way? They clearly don’t represent anything in geometry
      (like vectors over ℝ do), or anything in quantum mechanics or
      signal processing (which are both applications of vectors over
      ℂ). Is this just a mathematical curiosity not ruled out by the
      definition of a vector space, or are there uses for it?</p>
    <h5 id="ecc">Error-correcting codes</h5>
    <p>There are! And here’s an example.</p>
    <p>If you’re communicating over a noisy channel like a radio, you
      often want to transmit your data with some redundancy, so that
      if a few bits of your message aren’t received correctly at the
      other end, the receiver can tell that it happened, and perhaps
      even reconstruct the correct message in spite of the errors.</p>
    <p>This idea in general is known as an <em>error-correcting
      code</em>. The general idea is that you expand an original
      message of (say) <i>m</i> bits into some larger number of
      bits <i>n</i>&nbsp;&gt;&nbsp;<i>m</i> which you send, and then the
      receiver decodes the <i>n</i> bits they receive to get back your
      original <i>m</i>-bit message. So there are only
      2<sup><i>m</i></sup> strings you might have fed to the encoder
      as input, and therefore only 2<sup><i>m</i></sup> of the
      2<sup><i>n</i></sup> possible <i>n</i>-bit strings could have
      been produced as output. The idea of an error-correcting code is
      to ‘space out’ the valid <i>n</i>-bit codewords in the overall
      space of <i>n</i>-bit strings, so that any two valid codewords
      differ in a large number of bits, and a small number of errors
      can’t turn one into another. If any two valid codewords differ
      by at least <i>k</i> bits, for example, then a transmission
      error that alters fewer than <i>k</i> bits can
      be <em>detected</em> (the receiver recognises that the received
      string isn’t a valid codeword), and an error altering fewer
      than <i>k</i>&nbsp;/&nbsp;2 bits can be corrected, by finding
      the <em>nearest</em> valid codeword.</p>
    <p>(Incidentally, ‘codes’ in this sense aren’t <em>secret</em>
      codes, like in cryptography. The word ‘code’ in this context has
      the wider meaning of ‘any way to convert your message into
      something convenient to send, so that the receiver knows how to
      get the message back at the other end’. For this application, we
      don’t mind if other people can <em>also</em> reconstruct the
      message. Of course, if you wanted to protect the message against
      eavesdroppers <em>and</em> against transmission errors, you
      might put a layer of encryption inside your error-correcting
      code!)</p>
    <p>One very popular way to construct these codes is to make
      them <em>linear</em>, which means that the code basically works
      by having a pair of matrices over <i>GF</i>(2), so that each one
      takes an input string of bits (represented as a vector), and
      outputs another string of bits:</p>
    <ul>
      <li>A <em>generator matrix</em> is used by the sender, to expand
        the original <i>m</i>-bit message into a longer <i>n</i>-bit
        codeword.</li>
      <li>A <em>check matrix</em> is used by the receiver, to find out
        whether the received codeword is valid. Any valid codeword
        multiplied by the check matrix should give the zero vector –
        but if the codeword has errors, then the output vector (known
        as the <em>syndrome</em>) contains enough information to
        identify them.</li>
    </ul>
    <p>This is a convenient system because doing it with vectors and
      matrices makes the syndrome independent of the message. That is,
      if the same pattern of error bits occurs in two different
      messages, both of them generate the same syndrome vector. So the
      receiver only needs a lookup table that maps every possible
      syndrome to the pattern of error bits it generates –
      they <em>don’t</em> need a separate version of that table for
      each possible codeword.</p>
    <p>And in a few cases you don’t <em>even</em> need the lookup
      table. Here’s a particularly pretty concrete example of a linear
      code, known as a <em>Hamming code</em>:</p>
    <p>Suppose <i>n</i>, the length of the code, is one less than a
      power of 2. For this example I’ll take <i>n</i>&nbsp;=&nbsp;15, but any
      other number of this form (3, 7, 15, 31, 63, …) also works.</p>
    <p>We’ll start by saying what the <em>receiver</em> does. The
      receiver has a 15-bit string to analyse. They index the bits
      with all the non-zero 4-bit binary numbers, so that the bits are
      numbered 0001, 0010, 0011, …, 1110, 1111. Then they XOR together
      the indexes of all the 1 bits in the message. Legal codewords
      are defined to be any bit string for which the result of this
      XOR operation is zero.</p>
    <p>So, if you take a legal codeword and flip any single bit, the
      result of this XOR process is not zero, and better than that, it
      directly tells you the index of the bit that was flipped! So a
      Hamming code can correct any one-bit error in a codeword,
      without even needing a lookup table.</p>
    <p>How does the sender construct a codeword? The easiest way is to
      reserve the bits with power-of-2 indices as check bits, and fill
      in all the rest. So the 11 bits corresponding to indices
      that <em>aren’t</em> 1, 2, 4 or 8 are your data bits, which you
      fill in with the actual message. Then the sender XORs together
      the indices of all the 1 bits so far, and sets the final four
      bits however is necessary to make the result become zero: if the
      lowest bit in the XOR value is 1, they set the bit with index 1
      to cancel it out, and the same for the other three bit
      positions.</p>
    <p>So a 15-bit Hamming code lets you transmit 11 bits of actual
      data, and uses the other 4 bits to allow a one-bit error to be
      corrected. In general, a (2<sup><i>d</i></sup>&nbsp;−&nbsp;1)-bit Hamming
      code carries 2<sup><i>d</i></sup>&nbsp;−&nbsp;1&nbsp;−&nbsp;<i>d</i> bits of data,
      using the other <i>d</i> bits to correct a one-bit error. In
      other words, a longer Hamming code is more efficient (more
      useful message data per bit transmitted), but correspondingly
      less good at correcting errors (still only one error allowed per
      codeword, but the codewords are longer).</p>
    <p>This is a linear code, because both the encoding and checking
      processes I’ve described can be written down as a matrix over
      <i>GF</i>(2). The process of XORing together the indices of set
      bits in the received data is exactly the same thing as
      multiplying by a matrix whose columns contain the nonzero binary
      integers 0001, 0010, …, 1111. And the process of constructing a
      message is the same thing as multiplying by a matrix in which
      each column sets one of the bits with a non-power-of-2 index
      plus whatever power-of-2 bits cancel it out – for example, there
      will be a column that sets the bit with index 0101, and then
      cancels it by also setting the bits 0001 and 0100.</p>
    <h4 id="gf2poly">Polynomials over <i>GF</i>(2)</h4>
    <p>Another thing we can do with any field, including <i>GF</i>(2),
      is to consider the set of <em>polynomials</em> with coefficients
      in that field.</p>
    <p>That is, we consider expressions of the form</p>
    <p><i>a</i><sub>0</sub>&nbsp;+&nbsp;<i>a</i><sub>1</sub><i>x</i>&nbsp;+&nbsp;<i>a</i><sub>2</sub><i>x</i><sup>2</sup>&nbsp;+&nbsp;…&nbsp;+&nbsp;<i>a</i><sub><i>n</i></sub><i>x</i><sup><i>n</i></sup></p>
    <p>in which the numbers <i>a</i><sub><i>i</i></sub> are all either
      0 or 1, and <i>x</i> is an abstract symbol that doesn’t
      represent an actual number at
      all<label for="footnoteinput-formal-polynomials"><sup id="footnote-formal-polynomials">11</sup><span>You might argue:
      if <i>x</i> is a number in <i>GF</i>(2), then it’s either 0 or
      1, and in either case, <i>x</i><sup>2</sup>,
      or <i>x</i><sup>3</sup>, or any higher power of <i>x</i>, are
      all equal to <i>x</i> itself. So under that assumption, any
      polynomial of this kind could be simplified by squashing all the
      higher-order terms down into the <i>x</i><sup>1</sup> term. But
      we <em>don’t</em> do that here, because we don’t make the
      assumption that <i>x</i> is one of the two numbers we know
      about: we leave open the possibility that any two
      powers <i>x</i><sup><i>i</i></sup>
      and <i>x</i><sup><i>j</i></sup> might be
      unequal.</span><span>11</span></label>.</p>
    <p>If you want to add or multiply two of these polynomials, you do
      it exactly as if you were manipulating ordinary polynomials with
      integer or real coefficients: simplify using the
      rule <i>x</i><sup><i>i</i></sup><i>x</i><sup><i>j</i></sup>&nbsp;=&nbsp;<i>x</i><sup><i>i</i>&nbsp;+&nbsp;<i>j</i></sup>,
      collect together terms with the same power of <i>x</i>, and
      evaluate each coefficient. The only difference is that the final
      evaluation happens in <i>GF</i>(2), which is equivalent to
      saying ‘after you calculate the coefficients, reduce each one
      mod 2’.</p>
    <p>For example, suppose you wanted to add the polynomials
      (1&nbsp;+&nbsp;<i>x</i>&nbsp;+&nbsp;<i>x</i><sup>2</sup>) and
      (<i>x</i>&nbsp;+&nbsp;<i>x</i><sup>3</sup>). In the ordinary integers, the
      sum would be
      1&nbsp;+&nbsp;<i>2x</i>&nbsp;+&nbsp;<i>x</i><sup>2</sup>&nbsp;+&nbsp;<i>x</i><sup>3</sup>.
      Over <i>GF</i>(2), the answer is exactly the same except that
      the 2<i>x</i> term vanishes, because we’re working mod 2, so 2
      is just the same thing as 0. So you just get
      1&nbsp;+&nbsp;<i>x</i><sup>2</sup>&nbsp;+&nbsp;<i>x</i><sup>3</sup>.</p>
    <p>In other words, if <i>P</i> and <i>Q</i> are two polynomials,
      then the <i>x</i><sup><i>i</i></sup> term of <i>P</i>&nbsp;+&nbsp;<i>Q</i>
      is simply the sum of the <i>x</i><sup><i>i</i></sup> terms
      in <i>P</i> and <i>Q</i> themselves. But the sum is mod 2, i.e.
      it corresponds to XOR. <em>Each coefficient of the sum is the
      XOR of the same coefficient in the two inputs.</em></p>
    <p>In other words, if you consider a polynomial to be represented
      by just its sequence of coefficients, then <em>addition of
      polynomials over</em> <i>GF</i>(2) <em>corresponds exactly to
      bitwise XOR</em>.</p>
    <p>What about multiplication? The same rule works: multiply the
      polynomials the same way you would normally, and then reduce the
      coefficients mod 2. So the product
      (1&nbsp;+&nbsp;<i>x</i>&nbsp;+&nbsp;<i>x</i><sup>2</sup>)(<i>x</i>&nbsp;+&nbsp;<i>x</i><sup>3</sup>),
      for example, would normally work out
      to <i>x</i>&nbsp;+&nbsp;<i>x</i><sup>2</sup>&nbsp;+&nbsp;2<i>x</i><sup>3</sup>&nbsp;+&nbsp;<i>x</i><sup>4</sup>&nbsp;+&nbsp;<i>x</i><sup>5</sup>,
      but again, reducing the coefficients mod 2 makes the
      2<i>x</i><sup>3</sup> term vanish. So over <i>GF</i>(2), the product is <i>x</i>&nbsp;+&nbsp;<i>x</i><sup>2</sup>&nbsp;+&nbsp;<i>x</i><sup>4</sup>&nbsp;+&nbsp;<i>x</i><sup>5</sup>.</p>
    <p>Another way to describe this algorithm is: to calculate the
      product of two polynomials <i>P</i> and <i>Q</i>, for each
      term <i>x</i><sup><i>i</i></sup> in <i>P</i>, make the partial
      product <i>Q</i><i>x</i><sup><i>i</i></sup>, which looks just
      like <i>Q</i> itself except that it’s ‘shifted upwards’
      by <i>i</i> places – the power of <i>x</i> in each term is
      larger by <i>i</i> than it originally was. Then add together all
      of those partial products, in ‘mod 2’ fashion.</p>
    <p>This looks very similar to the algorithm you use for
      multiplying two ordinary integers <i>a</i> and <i>b</i> if
      you’re given them written in binary. In that algorithm, you
      again make a shifted value <i>b</i>&nbsp;×&nbsp;2<sup><i>i</i></sup> for
      every power of 2 corresponding to a 1 bit in <i>a</i>. The only
      difference is that you combine the partial products at the end
      using ordinary integer addition, instead of bitwise XOR.</p>
    <p>In software that deals with polynomials over <i>GF</i>(2) a
      lot, it’s actually very convenient to <em>represent</em> one of
      these polynomials as a binary number, with the bit that would
      normally have value 2<sup><i>i</i></sup> instead being taken to
      be the coefficient of <i>x</i><sup><i>i</i></sup>. For example,
      you might represent
      1&nbsp;+&nbsp;<i>x</i><sup>2</sup>&nbsp;+&nbsp;<i>x</i><sup>3</sup> using the
      integer 1&nbsp;+&nbsp;2<sup>2</sup>&nbsp;+&nbsp;2<sup>3</sup>&nbsp;=&nbsp;13. (As if you’d
      forgotten about the ‘mod 2’ business and just evaluated the
      original polynomial at <i>x</i>&nbsp;=&nbsp;2.)</p>
    <p>In that representation, multiplying polynomials looks almost
      exactly like multiplying integers in binary – you make a shifted
      copy of one of the inputs <i>a</i> for each set bit of <i>b</i>,
      and then combine them all – except that combining all the values
      at the end is done ‘without carrying’, i.e. it’s replaced with
      XOR. Some CPU architectures even provide a built-in hardware
      instruction to do this modified type of multiplication. The x86
      architecture calls it a name like ‘carryless multiplication’,
      with instruction names including the string <code>CLMUL</code>;
      the Arm architecture calls it ‘polynomial multiplication’, and
      you’ll probably find a P in the name of any instruction that
      does it.</p>
    <h5 id="crc">CRCs</h5>
    <p>These polynomials over <i>GF</i>(2) behave in some ways
      similarly to the integers: you can add, subtract and multiply
      them as much as you like, but when you try to divide two
      polynomials, the result often isn’t still a polynomial, and you
      have to decide what to do about that.</p>
    <p>Just like dividing in the integers, one thing you can do is to
      deliver a quotient and a remainder: if you’re asked to
      calculate <i>P</i>&nbsp;/&nbsp;<i>Q</i> and you find that <i>P</i> isn’t a
      multiple of <i>Q</i>, you can find a nearby polynomial
      that <em>is</em> a multiple of <i>Q</i>, and return the result
      of dividing <em>that</em> by <i>Q</i>, plus the ‘remainder’
      that’s the difference between <i>P</i> itself and the polynomial
      you substituted.</p>
    <p>A well-known kind of checksum, used to verify transmission of
      network packets in Ethernet and for many other similar purposes,
      is called a Cyclic Redundancy Check (CRC), and it works like
      this:</p>
    <ul>
      <li>Choose a polynomial <i>P</i> over <i>GF</i>(2). (There are
        several polynomials people like to use, typically with degree
        32 or sometimes 16. But for a given application, both sender
        and receiver must agree on a specific one.)</li>
      <li>Given a message to transmit, expressed as a sequence of
        bits, pretend that the entire message is itself a giant
        polynomial <i>M</i> over <i>GF</i>(2), with the coefficients
        given by the bits of the message.</li>
      <li>Divide <i>M</i> by <i>P</i>, throw away the quotient, and
        keep the remainder. That is, reduce <i>M</i> mod <i>P</i>.</li>
    </ul>
    <p>You can see this, in some ways, as very similar to the
      error-correcting codes I mentioned in a <a href="#ecc">previous
      section</a>. A CRC will only <em>detect</em> errors, not correct
      them; and because it’s a tiny number of bits appended to a huge
      message, its power to detect errors is much smaller than those
      more rigorous codes. If you’re trying to transmit over a noisy
      radio channel then you probably use full error-correcting codes;
      CRCs are for the kind of situation where <em>almost</em> every
      transmission is free of error, and very rarely there’s either
      one flipped bit or a sudden burst of random noise, and it’s fine
      to deal with the problem by telling the other end ‘whoops, that
      one packet didn’t arrive intact, please re-send it’.</p>
    <h5 id="fields">Making larger finite fields</h5>
    <p>In a <a href="#gf2poly">previous section</a> I said that
      the <em>simplest</em> examples of finite fields consisted of the
      integers mod <i>p</i>, for some prime <i>p</i>. But they’re not
      the only examples.</p>
    <p>Let me describe the process of making one of these simplest
      finite fields <i>GF</i>(<i>p</i>) in slightly more detail:</p>
    <ul>
      <li>Start with the integers.</li>
      <li>Choose a specific value <i>p</i> which isn’t divisible by
        anything smaller.</li>
      <li>Reduce everything else mod <i>p</i> – that is, consider
        things as the same if they differ by a multiple of <i>p</i>.
        This leaves only finitely many things counted as
        different.</li>
      <li>Because <i>p</i> is prime, it turns out that there is now
        always a multiplicative inverse of any value not equivalent to
        0. So division now works, and we’ve made a field.</li>
    </ul>
    <p>It turns out that all the <em>other</em> finite fields that
      exist can be made by following exactly the same procedure a
      second time – except that instead of starting with the integers,
      you start with the set of polynomials
      over <i>GF</i>(<i>p</i>).</p>
    <p>That is: first pick <i>p</i> and make the finite field of
      integers mod <i>p</i>. Now pick a polynomial <i>Q</i> with
      coefficients in <i>GF</i>(<i>p</i>), which
      is <em>irreducible</em> – that is, it isn’t the product of any
      two smaller polynomials – and reduce all the rest of the
      polynomials over <i>GF</i>(<i>p</i>) mod <i>Q</i>.</p>
    <p>The result is always a finite field. It still has
      characteristic <i>p</i> – that is, adding together <i>p</i>
      copies of the same thing gives zero. But it has more
      than <i>p</i> elements. In fact, if the polynomial <i>Q</i> has
      degree <i>d</i> (that is, its highest-order term
      is <i>x</i><sup><i>d</i></sup>), then the new field has
      <i>p</i><sup><i>d</i></sup>
      elements<label for="footnoteinput-unique-finite-fields"><sup id="footnote-unique-finite-fields">12</sup><span>In fact, it turns
      out that <em>all</em> finite fields of a given
      size <i>p</i><sup><i>d</i></sup> are the same as each other.
      Choosing a different irreducible polynomial of the same degree
      changes the <em>representation</em>, but not the underlying
      thing being represented – as if you still had all the same
      numbers, but you just changed the name of each
      one.</span><span>12</span></label>.</p>
    <p>You can do this for any prime <i>p</i>. But in this article
      we’re concerned with <i>p</i>&nbsp;=&nbsp;2 in particular. Here are the
      first few irreducible polynomials over <i>GF</i>(2):</p>
    <figure>
      <div>
        <p>
<i>x</i><br>
1 + <i>x</i><br>
1 + <i>x</i> + <i>x</i><sup>2</sup><br>
1 + <i>x</i> + <i>x</i><sup>3</sup><br>
1 + <i>x</i><sup>2</sup> + <i>x</i><sup>3</sup><br>
1 + <i>x</i> + <i>x</i><sup>4</sup><br>
1 + <i>x</i><sup>3</sup> + <i>x</i><sup>4</sup><br>
1 + <i>x</i> + <i>x</i><sup>2</sup> + <i>x</i><sup>3</sup> + <i>x</i><sup>4</sup><br>
          …</p>
      </div>
      <figcaption>Irreducible polynomials over <i>GF</i>(2) up to degree 4</figcaption>
    </figure>
    <p>A more compact way to write the same information is to use the
      notation I mentioned earlier, of representing each one as an
      integer whose pattern of bits gives its coefficients, equivalent
      to evaluating the polynomial at <i>x</i>&nbsp;=&nbsp;2. Then the start of
      the sequence of irreducible polynomials looks like this:</p>
    <p>2, 3, 7, 11, 13, 19, 25, 31, 37, 41, 47, 55, 59, 61, 67, 73, 87, 91, 97, 103, 109, 115, 117, 131, 137, 143, 145, 157, 167, 171, 185, 191, 193, 203, 211, 213, 229, 239, 241, 247, 253, 283, 285, 299, 301, 313, 319, 333, 351, 355, 357, 361, 369, 375, 379, 391, 395, 397, 415, 419, 425, 433, 445, 451, 463, 471, 477, 487, 499, 501, 505, …</p>
    <p>Read like a sequence of integers<label for="footnoteinput-oeis"><sup id="footnote-oeis">13</sup><span>Any
      mathematically interesting sequence of integers has a very good
      chance of being catalogued in
      the <a href="https://oeis.org/">On-Line Encyclopedia of Integer
      Sequences</a>, and this is certainly not an exception. Its
      catalogue index
      is <a href="https://oeis.org/A014580">A014580</a>.</span><span>13</span></label>,
      these numbers fascinate me. They’re like prime numbers from a
      parallel universe. If addition were done without carrying, these
      would <em>be</em> the prime numbers. And, just as you’d hope for
      something from a parallel universe, it takes you an extra look
      to spot the difference, because they look very similar to start
      with – many of the initial ones are <em>also</em> ordinary
      integer primes. (Though not all – 25 and 55 are the first
      composite ones; and not all the integer primes appear – 5, 17,
      and 23 are the first ones missing.)</p>
    <p>There’s a lot more to say about these larger finite fields. But
      I’ll finish up by mentioning what they’re <em>useful</em> for.
      They crop up all over cryptography:</p>
    <ul>
      <li>A finite field of order 2<sup>8</sup> forms a key building
        block of the standard AES cipher, and also of another cipher
        (Twofish) which <em>nearly</em> became AES (it was another
        finalist in the competition to choose a standard block
        cipher).</li>
      <li>A finite field of the much larger size 2<sup>128</sup> is
        used in GCM, which is a fast scheme that combines bulk
        encryption with integrity protection (known as ‘AEAD’).</li>
      <li>Finite fields of large power-of-2 size are also sometimes
        (though not always) used in elliptic-curve cryptography, for
        both key exchange and digital signatures.</li>
      <li>Elliptic-curve cryptography is probably going to be
        abandoned at some point, because of the possibility of working
        quantum computers being built that can attack it. Finite
        fields of power-of-2 order <em>also</em> appear in at least
        one of the replacement ‘post-quantum’ schemes, as part of the
        decoding algorithm in the “Classic McEliece” key encapsulation
        system.</li>
    </ul>
    <p>These things are big business – and that’s mostly why CPU
      architectures bother to implement that polynomial multiplication
      primitive at all!</p>
    
    <p>With any luck, you should be able to read the footnotes of this
      article in place, by clicking on the superscript footnote number
      or the corresponding numbered tab on the right side of the page.</p>
    <p>But just in case the CSS didn’t do the right thing, here’s the
      text of all the footnotes again:</p>
<p><a href="#footnote-inverse">1.</a> I apologise for
      using ‘invert’ and ‘inverse’ in two senses in this article. In
      boolean logic, ‘inverting’ a signal generally means the NOT
      operator, interchanging 1 with 0 (or true with false, if you
      prefer). But in mathematics, an ‘inverse’ is a value that
      cancels out another value to get you back to the identity, in a
      way which varies depending on the operation you use to combine
      them (if you’re talking about addition it’s −<i>x</i>, and for
      multiplication it’s 1/<i>x</i>). I hope that everywhere I’ve
      used the word at all it’s clear from context which sense I mean
      it in.</p>
<p><a href="#footnote-twos-complement">2.</a> What if the integers are
      negative? Normally, in the finite integer sizes that computers
      handle in hardware, negative integers are represented in two’s
      complement, i.e. mod 2<sup><i>n</i></sup>. So −1 is the integer
      with all bits 1, for example. There’s a reasonably natural way
      to extend this to <em>arbitrarily large</em> integers, by
      pretending the string of 1 bits on the left goes all the way to
      infinity (and it can even be made mathematically rigorous!). In
      this view, the XOR of two positive numbers, or two negative
      numbers, is positive, because at a high enough bit position each
      bit is XORing two 0s or two 1s; but the XOR of a positive and
      negative number is negative, because sooner or later you’re
      always XORing a 0 with a 1 bit. Some languages, such as Python,
      actually implement this – you can try it out at the interactive
      prompt!</p>
<p><a href="#footnote-emoji">3.</a> Of course, this
      doesn’t apply to <em>all</em> Unicode characters! Most don’t
      have a concept of upper or lower case at all. And unfortunately,
      this rule isn’t even obeyed by all of the characters that do. It
      was consistently true in ASCII, and in some of the descendants
      of ASCII, but Unicode as a whole wasn’t able to stick 100% to
      the principle. If you take this too far, you might get strange
      ideas, like the lower-case version of the car emoji being a ‘no
      pedestrians’ sign:
<span>&gt;&gt;&gt; chr(ord('🚗') ^ 32)<br>'🚷'</span></p>
<p><a href="#footnote-well-actually">4.</a> I
      suppose, <em>technically</em>, you could argue that it is still
      literally true that <i>a</i>&nbsp;XOR&nbsp;<i>b</i>, <i>a</i>&nbsp;+&nbsp;<i>b</i>,
      and <i>a</i>&nbsp;−&nbsp;<i>b</i> are all congruent to each other mod 2,
      because all that means is that they all have the same low-order
      bit, which they do. But that isn’t a
      particularly <em>useful</em> thing to say, because it ignores
      the way all the higher-order bits do something completely
      different!</p>
<p><a href="#footnote-integrity">5.</a> However,
      encrypting the message is only half the story. Given a
      good-quality keystream, this technique is good enough to
      assure <em>confidentiality</em>, meaning that an eavesdropper
      can’t find out what you’re saying. But it doesn’t do one single
      thing to ensure <em>integrity</em>, meaning that if your message
      is modified by an attacker, the receiver can detect the
      tampering and know not to trust the modified message. Integrity
      protection is a completely separate problem. A common mistake in
      novice cryptosystem design is to leave it out, assuming that if
      nobody can figure out what the message says, then “surely”
      nobody can work out how to tamper with it in a useful way
      either. Even with more complicated encryption methods than what
      I’m describing here, this never goes well!</p>
<p><a href="#footnote-proof-exercise">6.</a> If you’re
      mathematically minded and still don’t find this instantly
      obvious, you might want to try actually <em>proving</em> it. I
      leave this mostly as an exercise for the reader, but a hint
      would be: break down each of the input integers <i>a</i>
      and <i>b</i> as the sum of terms like
      2<sup><i>n</i></sup><i>a</i><sub><i>n</i></sub> (each one being
      an individual bit of one of the inputs times a power of 2), and
      collect together the terms on each side that involve the
      same <i>n</i>.</p>
<p><a href="#footnote-or-xor">7.</a> The extra gate that combines the carry
      bits can be either an OR gate or an XOR gate, whichever is
      easier. It doesn’t matter which, because the two types of gate
      only disagree in the case where both their inputs are 1, and in
      this circuit, that can’t happen! If the carry from the first
      half-adder is 1, then its other output <em>must</em> be 0, which
      means there’s no carry from the second half-adder.</p>
<p><a href="#footnote-swp">8.</a> There is an Arm instruction called
      SWP for ‘swap’, but it’s not what you want for this kind of
      purpose. It swaps a register with a value in <em>memory</em>,
      not two registers. It’s not really for ordinary computation:
      it’s intended for atomically synchronising between threads,
      which is very hard to get right and well beyond the scope of
      this article!</p>
<p><a href="#footnote-misere">9.</a> In fact, Nim comes in two
      well-known forms, with opposite win conditions. In the variant
      discussed here, your aim is to take the last counter and leave
      your opponent with no move. In the other variant, the win
      condition is exactly the reverse: you aim to make
      your <em>opponent</em> take the last counter! The strategy for
      the latter is a tiny bit more complicated, but not too bad. I
      only discuss the simple version here.</p>
<p><a href="#footnote-infinite-positive-characteristic">10.</a> However, the
      converse isn’t true. Any finite field has positive
      characteristic, but not every field with positive characteristic
      is finite. There are also <em>infinite</em> fields with this
      same modular-arithmetic property. But we won’t get as far as
      discussing those here.</p>
<p><a href="#footnote-formal-polynomials">11.</a> You might argue:
      if <i>x</i> is a number in <i>GF</i>(2), then it’s either 0 or
      1, and in either case, <i>x</i><sup>2</sup>,
      or <i>x</i><sup>3</sup>, or any higher power of <i>x</i>, are
      all equal to <i>x</i> itself. So under that assumption, any
      polynomial of this kind could be simplified by squashing all the
      higher-order terms down into the <i>x</i><sup>1</sup> term. But
      we <em>don’t</em> do that here, because we don’t make the
      assumption that <i>x</i> is one of the two numbers we know
      about: we leave open the possibility that any two
      powers <i>x</i><sup><i>i</i></sup>
      and <i>x</i><sup><i>j</i></sup> might be
      unequal.</p>
<p><a href="#footnote-unique-finite-fields">12.</a> In fact, it turns
      out that <em>all</em> finite fields of a given
      size <i>p</i><sup><i>d</i></sup> are the same as each other.
      Choosing a different irreducible polynomial of the same degree
      changes the <em>representation</em>, but not the underlying
      thing being represented – as if you still had all the same
      numbers, but you just changed the name of each
      one.</p>
<p><a href="#footnote-oeis">13.</a> Any
      mathematically interesting sequence of integers has a very good
      chance of being catalogued in
      the <a href="https://oeis.org/">On-Line Encyclopedia of Integer
      Sequences</a>, and this is certainly not an exception. Its
      catalogue index
      is <a href="https://oeis.org/A014580">A014580</a>.</p>
  

</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Live-updating version of the 'What a week, huh?' meme (733 pts)]]></title>
            <link>https://tintin.dlazaro.ca/</link>
            <guid>43086479</guid>
            <pubDate>Tue, 18 Feb 2025 05:53:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tintin.dlazaro.ca/">https://tintin.dlazaro.ca/</a>, See on <a href="https://news.ycombinator.com/item?id=43086479">Hacker News</a></p>
<div id="readability-page-1" class="page"> <svg width="1037" height="866" viewBox="0 0 1037 866" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">  <image width="1037" height="866" href="/_astro/panel-bg.Ci_dWukU.png"></image> <text x="518" y="175">What a week, huh?</text> <text x="388" y="321">
Captain, it’s Tuesday </text> </svg> </div>]]></description>
        </item>
        <item>
            <title><![CDATA[Go 1.24 (161 pts)]]></title>
            <link>https://tip.golang.org/doc/go1.24</link>
            <guid>43086170</guid>
            <pubDate>Tue, 18 Feb 2025 04:51:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://tip.golang.org/doc/go1.24">https://tip.golang.org/doc/go1.24</a>, See on <a href="https://news.ycombinator.com/item?id=43086170">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main-content">
  


<article>

















<h2 id="introduction">Introduction to Go 1.24</h2>
<p>The latest Go release, version 1.24, arrives six months after <a href="https://tip.golang.org/doc/go1.23">Go 1.23</a>.
Most of its changes are in the implementation of the toolchain, runtime, and libraries.
As always, the release maintains the Go 1 <a href="https://tip.golang.org/doc/go1compat">promise of compatibility</a>.
We expect almost all Go programs to continue to compile and run as before.</p>
<h2 id="language">Changes to the language</h2>
<!-- go.dev/issue/46477 -->
<p>Go 1.24 now fully supports <a href="https://tip.golang.org/issue/46477">generic type aliases</a>: a type alias
may be parameterized like a defined type.
See the <a href="https://tip.golang.org/ref/spec#Alias_declarations">language spec</a> for details.
For now, the feature can be disabled by setting <code>GOEXPERIMENT=noaliastypeparams</code>;
but the <code>aliastypeparams</code> setting will be removed for Go 1.25.</p>

<h3 id="go-command">Go command</h3>
<!-- go.dev/issue/48429 -->
<p>Go modules can now track executable dependencies using <code>tool</code> directives in
go.mod. This removes the need for the previous workaround of adding tools as
blank imports to a file conventionally named “tools.go”. The <code>go tool</code>
command can now run these tools in addition to tools shipped with the Go
distribution. For more information see <a href="https://tip.golang.org/doc/modules/managing-dependencies#tools">the
documentation</a>.</p>
<p>The new <code>-tool</code> flag for <code>go get</code> causes a tool directive to be added to the
current module for named packages in addition to adding require directives.</p>
<p>The new <a href="https://tip.golang.org/cmd/go#hdr-Package_lists_and_patterns"><code>tool</code> meta-pattern</a> refers to
all tools in the current module. This can be used to upgrade them all with <code>go get tool</code> or to install them into your GOBIN directory with <code>go install tool</code>.</p>
<!-- go.dev/issue/69290 -->
<p>Executables created by <code>go run</code> and the new behavior of <code>go tool</code> are now
cached in the Go build cache. This makes repeated executions faster at the
expense of making the cache larger. See <a href="https://tip.golang.org/issue/69290">#69290</a>.</p>
<!-- go.dev/issue/62067 -->
<p>The <code>go build</code> and <code>go install</code> commands now accept a <code>-json</code> flag that reports
build output and failures as structured JSON output on standard output.
For details of the reporting format, see <code>go help buildjson</code>.</p>
<p>Furthermore, <code>go test -json</code> now reports build output and failures in JSON,
interleaved with test result JSON.
These are distinguished by new <code>Action</code> types, but if they cause problems in
a test integration system, you can revert to the text build output with
<a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <code>gotestjsonbuildtext=1</code>.</p>
<!-- go.dev/issue/26232 -->
<p>The new <code>GOAUTH</code> environment variable provides a flexible way to authenticate
private module fetches. See <code>go help goauth</code> for more information.</p>
<!-- go.dev/issue/50603 -->
<p>The <code>go build</code> command now sets the
<a href="https://tip.golang.org/pkg/runtime/debug#BuildInfo.Main">main module’s version</a> in the compiled
binary based on the version control system tag and/or commit.
A <code>+dirty</code> suffix will be appended if there are uncommitted changes.
Use the <code>-buildvcs=false</code> flag to omit version control information from the binary.</p>
<!-- go.dev/issue/63939 -->
<p>The new <a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <a href="https://tip.golang.org/doc/toolchain#select"><code>toolchaintrace=1</code></a>
can be used to trace the <code>go</code> command’s toolchain selection process.</p>
<h3 id="cgo">Cgo</h3>
<!-- go.dev/issue/56378, CL 579955 -->
<p>Cgo supports new annotations for C functions to improve run time
performance.
<code>#cgo noescape cFunctionName</code> tells the compiler that memory passed to
the C function <code>cFunctionname</code> does not escape.
<code>#cgo nocallback cFunctionName</code> tells the compiler that the C function
<code>cFunctionName</code> does not call back to any Go functions.
For more information, see <a href="https://tip.golang.org/pkg/cmd/cgo#hdr-Optimizing_calls_of_C_code">the cgo documentation</a>.</p>
<!-- go.dev/issue/67699 -->
<p>Cgo currently refuses to compile calls to a C function which has multiple
incompatible declarations. For instance, if <code>f</code> is declared as both <code>void f(int)</code>
and <code>void f(double)</code>, cgo will report an error instead of possibly generating an
incorrect call sequence for <code>f(0)</code>. New in this release is a better detector for
this error condition when the incompatible declarations appear in different
files. See <a href="https://tip.golang.org/issue/67699">#67699</a>.</p>
<h3 id="objdump">Objdump</h3>
<!-- go.dev/issue/15255, go.dev/issue/36738 -->
<p>The <a href="https://tip.golang.org/cmd/objdump">objdump</a> tool now supports dissassembly on 64-bit
LoongArch (<code>GOARCH=loong64</code>), RISC-V (<code>GOARCH=riscv64</code>), and S390X (<code>GOARCH=s390x</code>).</p>
<h3 id="vet">Vet</h3>
<!-- go.dev/issue/44251 -->
<p>The new <code>tests</code> analyzer reports common mistakes in declarations of
tests, fuzzers, benchmarks, and examples in test packages, such as
malformed names, incorrect signatures, or examples that document
non-existent identifiers. Some of these mistakes may cause tests not
to run.
This analyzer is among the subset of analyzers that are run by <code>go test</code>.</p>
<!-- go.dev/issue/60529 -->
<p>The existing <code>printf</code> analyzer now reports a diagnostic for calls of
the form <code>fmt.Printf(s)</code>, where <code>s</code> is a non-constant format string,
with no other arguments. Such calls are nearly always a mistake
as the value of <code>s</code> may contain the <code>%</code> symbol; use <code>fmt.Print</code> instead.
See <a href="https://tip.golang.org/issue/60529">#60529</a>. This check tends to produce findings in existing
code, and so is only applied when the language version (as specified by the
go.mod <code>go</code> directive or <code>//go:build</code> comments) is at least Go 1.24, to avoid
causing continuous integration failures when updating to the 1.24 Go toolchain.</p>
<!-- go.dev/issue/64127 -->
<p>The existing <code>buildtag</code> analyzer now reports a diagnostic when
there is an invalid Go <a href="https://tip.golang.org/pkg/cmd/go#hdr-Build_constraints">major version build constraint</a>
within a <code>//go:build</code> directive. For example, <code>//go:build go1.23.1</code> refers to
a point release; use <code>//go:build go1.23</code> instead.
See <a href="https://tip.golang.org/issue/64127">#64127</a>.</p>
<!-- go.dev/issue/66387 -->
<p>The existing <code>copylock</code> analyzer now reports a diagnostic when a
variable declared in a 3-clause “for” loop such as
<code>for i := iter(); done(i); i = next(i) { ... }</code> contains a <code>sync.Locker</code>,
such as a <code>sync.Mutex</code>. <a href="https://tip.golang.org/doc/go1.22#language">Go 1.22</a> changed the behavior
of these loops to create a new variable for each iteration, copying the
value from the previous iteration; this copy operation is not safe for locks.
See <a href="https://tip.golang.org/issue/66387">#66387</a>.</p>
<h3 id="gocacheprog">GOCACHEPROG</h3>
<!-- go.dev/issue/64876 -->
<p>The <code>cmd/go</code> internal binary and test caching mechanism can now be implemented
by child processes implementing a JSON protocol between the <code>cmd/go</code> tool
and the child process named by the <code>GOCACHEPROG</code> environment variable.
This was previously behind a GOEXPERIMENT.
For protocol details, see <a href="https://tip.golang.org/cmd/go/internal/cacheprog">the documentation</a>.</p>
<h2 id="runtime">Runtime</h2>
<!-- go.dev/issue/54766 -->
<!-- go.dev/cl/614795 -->
<!-- go.dev/issue/68578 -->
<p>Several performance improvements to the runtime have decreased CPU overheads by
2–3% on average across a suite of representative benchmarks.
Results may vary by application.
These improvements include a new builtin <code>map</code> implementation based on
<a href="https://abseil.io/about/design/swisstables" rel="noreferrer" target="_blank">Swiss Tables</a>, more efficient
memory allocation of small objects, and a new runtime-internal mutex
implementation.</p>
<p>The new builtin <code>map</code> implementation and new runtime-internal mutex may be
disabled by setting <code>GOEXPERIMENT=noswissmap</code> and <code>GOEXPERIMENT=nospinbitmutex</code>
at build time respectively.</p>
<h2 id="compiler">Compiler</h2>
<!-- go.dev/issue/60725, go.dev/issue/57926 -->
<p>The compiler already disallowed defining new methods with receiver types that were
cgo-generated, but it was possible to circumvent that restriction via an alias type.
Go 1.24 now always reports an error if a receiver denotes a cgo-generated type,
whether directly or indirectly (through an alias type).</p>
<h2 id="linker">Linker</h2>
<!-- go.dev/issue/68678, go.dev/issue/68652, CL 618598, CL 618601 -->
<p>The linker now generates a GNU build ID (the ELF <code>NT_GNU_BUILD_ID</code> note) on ELF platforms
and a UUID (the Mach-O <code>LC_UUID</code> load command) on macOS by default.
The build ID or UUID is derived from the Go build ID.
It can be disabled by the <code>-B none</code> linker flag, or overridden by the <code>-B 0xNNNN</code> linker
flag with a user-specified hexadecimal value.</p>
<h2 id="bootstrap">Bootstrap</h2>
<!-- go.dev/issue/64751 -->
<p>As mentioned in the <a href="https://tip.golang.org/doc/go1.22#bootstrap">Go 1.22 release notes</a>, Go 1.24 now requires
Go 1.22.6 or later for bootstrap.
We expect that Go 1.26 will require a point release of Go 1.24 or later for bootstrap.</p>
<h2 id="library">Standard library</h2>
<h3 id="directory-limited-filesystem-access">Directory-limited filesystem access</h3>
<!-- go.dev/issue/67002 -->
<p>The new <a href="https://tip.golang.org/pkg/os#Root"><code>os.Root</code></a> type provides the ability to perform filesystem
operations within a specific directory.</p>
<p>The <a href="https://tip.golang.org/pkg/os#OpenRoot"><code>os.OpenRoot</code></a> function opens a directory and returns an <a href="https://tip.golang.org/pkg/os#Root"><code>os.Root</code></a>.
Methods on <a href="https://tip.golang.org/pkg/os#Root"><code>os.Root</code></a> operate within the directory and do not permit
paths that refer to locations outside the directory, including
ones that follow symbolic links out of the directory.
The methods on <code>os.Root</code> mirror most of the file system operations available in the
<code>os</code> package, including for example <a href="https://tip.golang.org/pkg/os#Root.Open"><code>os.Root.Open</code></a>,
<a href="https://tip.golang.org/pkg/os#Root.Create"><code>os.Root.Create</code></a>,
<a href="https://tip.golang.org/pkg/os#Root.Mkdir"><code>os.Root.Mkdir</code></a>,
and <a href="https://tip.golang.org/pkg/os#Root.Stat"><code>os.Root.Stat</code></a>,</p>
<h3 id="new-benchmark-function">New benchmark function</h3>
<p>Benchmarks may now use the faster and less error-prone <a href="https://tip.golang.org/pkg/testing#B.Loop"><code>testing.B.Loop</code></a> method to perform benchmark iterations like <code>for b.Loop() { ... }</code> in place of the typical loop structures involving <code>b.N</code> like <code>for range b.N</code>. This offers two significant advantages:</p>
<ul>
<li>The benchmark function will execute exactly once per -count, so expensive setup and cleanup steps execute only once.</li>
<li>Function call parameters and results are kept alive, preventing the compiler from fully optimizing away the loop body.</li>
</ul>
<h3 id="improved-finalizers">Improved finalizers</h3>
<!-- go.dev/issue/67535 -->
<p>The new <a href="https://tip.golang.org/pkg/runtime#AddCleanup"><code>runtime.AddCleanup</code></a> function is a
finalization mechanism that is more flexible, more efficient, and less
error-prone than <a href="https://tip.golang.org/pkg/runtime#SetFinalizer"><code>runtime.SetFinalizer</code></a>.
<code>AddCleanup</code> attaches a cleanup function to an object that will run once
the object is no longer reachable.
However, unlike <code>SetFinalizer</code>,
multiple cleanups may be attached to a single object,
cleanups may be attached to interior pointers,
cleanups do not generally cause leaks when objects form a cycle, and
cleanups do not delay the freeing of an object or objects it points to.
New code should prefer <code>AddCleanup</code> over <code>SetFinalizer</code>.</p>
<h3 id="weak">New weak package</h3>
<p>The new <a href="https://tip.golang.org/pkg/weak/"><code>weak</code></a> package provides weak pointers.</p>
<p>Weak pointers are a low-level primitive provided to enable the
creation of memory-efficient structures, such as weak maps for
associating values, canonicalization maps for anything not
covered by package <a href="https://tip.golang.org/pkg/unique/"><code>unique</code></a>, and various kinds
of caches.
For supporting these use-cases, this release also provides
<a href="https://tip.golang.org/pkg/runtime/#AddCleanup"><code>runtime.AddCleanup</code></a> and
<a href="https://tip.golang.org/pkg/maphash/#Comparable"><code>maphash.Comparable</code></a>.</p>
<h3 id="crypto-mlkem">New crypto/mlkem package</h3>
<!-- go.dev/issue/70122 -->
<p>The new <a href="https://tip.golang.org/pkg/crypto/mlkem/"><code>crypto/mlkem</code></a> package implements
ML-KEM-768 and ML-KEM-1024.</p>
<p>ML-KEM is a post-quantum key exchange mechanism formerly known as Kyber and
specified in <a href="https://doi.org/10.6028/NIST.FIPS.203" rel="noreferrer" target="_blank">FIPS 203</a>.</p>
<h3 id="crypto-packages">New crypto/hkdf, crypto/pbkdf2, and crypto/sha3 packages</h3>
<!-- go.dev/issue/61477, go.dev/issue/69488, go.dev/issue/69982, go.dev/issue/65269, CL 629176 -->
<p>The new <a href="https://tip.golang.org/pkg/crypto/hkdf/"><code>crypto/hkdf</code></a> package implements
the HMAC-based Extract-and-Expand key derivation function HKDF,
as defined in <a href="https://www.rfc-editor.org/rfc/rfc5869.html" rel="noreferrer" target="_blank">RFC 5869</a>.</p>
<p>The new <a href="https://tip.golang.org/pkg/crypto/pbkdf2/"><code>crypto/pbkdf2</code></a> package implements
the password-based key derivation function PBKDF2,
as defined in <a href="https://www.rfc-editor.org/rfc/rfc8018.html" rel="noreferrer" target="_blank">RFC 8018</a>.</p>
<p>The new <a href="https://tip.golang.org/pkg/crypto/sha3/"><code>crypto/sha3</code></a> package implements
the SHA-3 hash function and SHAKE and cSHAKE extendable-output functions,
as defined in <a href="http://doi.org/10.6028/NIST.FIPS.202" rel="noreferrer" target="_blank">FIPS 202</a>.</p>
<p>All three packages are based on pre-existing <code>golang.org/x/crypto/...</code> packages.</p>
<h3 id="fips140">FIPS 140-3 compliance</h3>
<p>This release includes <a href="https://tip.golang.org/doc/security/fips140">a new set of mechanisms to facilitate FIPS 140-3
compliance</a>.</p>
<p>The Go Cryptographic Module is a set of internal standard library packages that
are transparently used to implement FIPS 140-3 approved algorithms. Applications
require no changes to use the Go Cryptographic Module for approved algorithms.</p>
<p>The new <code>GOFIPS140</code> environment variable can be used to select the Go
Cryptographic Module version to use in a build. The new <code>fips140</code> <a href="https://tip.golang.org/doc/godebug">GODEBUG
setting</a> can be used to enable FIPS 140-3 mode at runtime.</p>
<p>Go 1.24 includes Go Cryptographic Module version v1.0.0, which is currently
under test with a CMVP-accredited laboratory.</p>
<h3 id="testing-synctest">New experimental testing/synctest package</h3>
<p>The new experimental <a href="https://tip.golang.org/pkg/testing/synctest/"><code>testing/synctest</code></a> package
provides support for testing concurrent code.</p>
<ul>
<li>The <a href="https://tip.golang.org/pkg/testing/synctest/#Run"><code>synctest.Run</code></a> function starts a
group of goroutines in an isolated “bubble”.
Within the bubble, <a href="https://tip.golang.org/pkg/time"><code>time</code></a> package functions operate on a
fake clock.</li>
<li>The <a href="https://tip.golang.org/pkg/testing/synctest#Wait"><code>synctest.Wait</code></a> function waits for
all goroutines in the current bubble to block.</li>
</ul>
<p>See the package documentation for more details.</p>
<p>The <code>synctest</code> package is experimental and must be enabled by
setting <code>GOEXPERIMENT=synctest</code> at build time.
The package API is subject to change in future releases.
See <a href="https://tip.golang.org/issue/67434">issue #67434</a> for more information and
to provide feeback.</p>
<h3 id="minor_library_changes">Minor changes to the library</h3>
<h4 id="archivepkgarchive"><a href="https://tip.golang.org/pkg/archive/"><code>archive</code></a></h4>
<p>The <code>(*Writer).AddFS</code> implementations in both <code>archive/zip</code> and <code>archive/tar</code>
now write a directory header for an empty directory.</p>
<h4 id="bytespkgbytes"><a href="https://tip.golang.org/pkg/bytes/"><code>bytes</code></a></h4>
<p>The <a href="https://tip.golang.org/pkg/bytes"><code>bytes</code></a> package adds several functions that work with iterators:</p>
<ul>
<li><a href="https://tip.golang.org/pkg/bytes#Lines"><code>Lines</code></a> returns an iterator over the
newline-terminated lines in a byte slice.</li>
<li><a href="https://tip.golang.org/pkg/bytes#SplitSeq"><code>SplitSeq</code></a> returns an iterator over
all subslices of a byte slice split around a separator.</li>
<li><a href="https://tip.golang.org/pkg/bytes#SplitAfterSeq"><code>SplitAfterSeq</code></a> returns an iterator
over subslices of a byte slice split after each instance of a
separator.</li>
<li><a href="https://tip.golang.org/pkg/bytes#FieldsSeq"><code>FieldsSeq</code></a> returns an iterator over
subslices of a byte slice split around runs of whitespace characters,
as defined by <a href="https://tip.golang.org/pkg/unicode#IsSpace"><code>unicode.IsSpace</code></a>.</li>
<li><a href="https://tip.golang.org/pkg/bytes#FieldsFuncSeq"><code>FieldsFuncSeq</code></a> returns an iterator
over subslices of a byte slice split around runs of Unicode code points
satisfying a predicate.</li>
</ul>
<h4 id="cryptoaespkgcryptoaes"><a href="https://tip.golang.org/pkg/crypto/aes/"><code>crypto/aes</code></a></h4>
<p>The value returned by <a href="https://tip.golang.org/pkg/crypto/aes#NewCipher"><code>NewCipher</code></a> no longer
implements the <code>NewCTR</code>, <code>NewGCM</code>, <code>NewCBCEncrypter</code>, and <code>NewCBCDecrypter</code>
methods. These methods were undocumented and not available on all architectures.
Instead, the <a href="https://tip.golang.org/pkg/crypto/cipher#Block"><code>Block</code></a> value should be passed
directly to the relevant <a href="https://tip.golang.org/pkg/crypto/cipher/"><code>crypto/cipher</code></a> functions.
For now, <code>crypto/cipher</code> still checks for those methods on <code>Block</code> values,
even if they are not used by the standard library anymore.</p>
<h4 id="cryptocipherpkgcryptocipher"><a href="https://tip.golang.org/pkg/crypto/cipher/"><code>crypto/cipher</code></a></h4>
<p>The new <a href="https://tip.golang.org/pkg/crypto/cipher#NewGCMWithRandomNonce"><code>NewGCMWithRandomNonce</code></a>
function returns an <a href="https://tip.golang.org/pkg/crypto/cipher#AEAD"><code>AEAD</code></a> that implements AES-GCM by
generating a random nonce during Seal and prepending it to the ciphertext.</p>
<p>The <a href="https://tip.golang.org/pkg/crypto/cipher#Stream"><code>Stream</code></a> implementation returned by
<a href="https://tip.golang.org/pkg/crypto/cipher#NewCTR"><code>NewCTR</code></a> when used with
<a href="https://tip.golang.org/pkg/crypto/aes/"><code>crypto/aes</code></a> is now several times faster on amd64 and arm64.</p>
<p><a href="https://tip.golang.org/pkg/crypto/cipher#NewOFB"><code>NewOFB</code></a>,
<a href="https://tip.golang.org/pkg/crypto/cipher#NewCFBEncrypter"><code>NewCFBEncrypter</code></a>, and
<a href="https://tip.golang.org/pkg/crypto/cipher#NewCFBDecrypter"><code>NewCFBDecrypter</code></a> are now deprecated.
OFB and CFB mode are not authenticated, which generally enables active attacks to
manipulate and recover the plaintext. It is recommended that applications use
<a href="https://tip.golang.org/pkg/crypto/cipher#AEAD"><code>AEAD</code></a> modes instead. If an unauthenticated
<a href="https://tip.golang.org/pkg/crypto/cipher#Stream"><code>Stream</code></a> mode is required, use
<a href="https://tip.golang.org/pkg/crypto/cipher#NewCTR"><code>NewCTR</code></a> instead.</p>
<h4 id="cryptoecdsapkgcryptoecdsa"><a href="https://tip.golang.org/pkg/crypto/ecdsa/"><code>crypto/ecdsa</code></a></h4>
<!-- go.dev/issue/64802 -->
<p><a href="https://tip.golang.org/pkg/crypto/ecdsa#PrivateKey.Sign"><code>PrivateKey.Sign</code></a> now produces a
deterministic signature according to
<a href="https://www.rfc-editor.org/rfc/rfc6979.html" rel="noreferrer" target="_blank">RFC 6979</a> if the random source is nil.</p>
<h4 id="cryptomd5pkgcryptomd5"><a href="https://tip.golang.org/pkg/crypto/md5/"><code>crypto/md5</code></a></h4>
<p>The value returned by <a href="https://tip.golang.org/pkg/md5#New"><code>md5.New</code></a> now also implements the
<a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="cryptorandpkgcryptorand"><a href="https://tip.golang.org/pkg/crypto/rand/"><code>crypto/rand</code></a></h4>
<!-- go.dev/issue/66821 -->
<p>The <a href="https://tip.golang.org/pkg/crypto/rand#Read"><code>Read</code></a> function is now guaranteed not to fail.
It will always return <code>nil</code> as the <code>error</code> result.
If <code>Read</code> were to encounter an error while reading from
<a href="https://tip.golang.org/pkg/crypto/rand#Reader"><code>Reader</code></a>, the program will irrecoverably crash.
Note that the platform APIs used by the default <code>Reader</code> are documented to
always succeed, so this change should only affect programs that override the
<code>Reader</code> variable. One exception are Linux kernels before version 3.17, where
the default <code>Reader</code> still opens <code>/dev/urandom</code> and may fail.</p>
<!-- go.dev/issue/69577 -->
<p>On Linux 6.11 and later, <code>Reader</code> now uses the <code>getrandom</code> system call via vDSO.
This is several times faster, especially for small reads.</p>
<!-- CL 608395 -->
<p>On OpenBSD, <code>Reader</code> now uses <code>arc4random_buf(3)</code>.</p>
<!-- go.dev/issue/67057 -->
<p>The new <a href="https://tip.golang.org/pkg/crypto/rand#Text"><code>Text</code></a> function can be used to generate
cryptographically secure random text strings.</p>
<h4 id="cryptorsapkgcryptorsa"><a href="https://tip.golang.org/pkg/crypto/rsa/"><code>crypto/rsa</code></a></h4>
<p><a href="https://tip.golang.org/pkg/crypto/rsa#GenerateKey"><code>GenerateKey</code></a> now returns an error if a key of
less than 1024 bits is requested.
All Sign, Verify, Encrypt, and Decrypt methods now return an error if used with
a key smaller than 1024 bits. Such keys are insecure and should not be used.
<a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <code>rsa1024min=0</code> restores the old behavior, but we
recommend doing so only if necessary and only in tests, for example by adding a
<code>//go:debug rsa1024min=0</code> line to a test file.
A new <code>GenerateKey</code> <a href="https://tip.golang.org/pkg/crypto/rsa#example-GenerateKey-TestKey">example</a>
provides an easy-to-use standard 2048-bit test key.</p>
<p>It is now safe and more efficient to call
<a href="https://tip.golang.org/pkg/crypto/rsa#PrivateKey.Precompute"><code>PrivateKey.Precompute</code></a> before
<a href="https://tip.golang.org/pkg/crypto/rsa#PrivateKey.Validate"><code>PrivateKey.Validate</code></a>.
<code>Precompute</code> is now faster in the presence of partially filled out
<a href="https://tip.golang.org/pkg/crypto/rsa#PrecomputedValues"><code>PrecomputedValues</code></a>, such as when
unmarshaling a key from JSON.</p>
<p>The package now rejects more invalid keys, even when <code>Validate</code> is not called,
and <a href="https://tip.golang.org/pkg/crypto/rsa#GenerateKey"><code>GenerateKey</code></a> may return new errors for
broken random sources.
The <a href="https://tip.golang.org/pkg/crypto/rsa#PrivateKey.Primes"><code>Primes</code></a> and
<a href="https://tip.golang.org/pkg/crypto/rsa#PrivateKey.Precomputed"><code>Precomputed</code></a> fields of
<a href="https://tip.golang.org/pkg/crypto/rsa#PrivateKey"><code>PrivateKey</code></a> are now used and validated even when
some values are missing.
See also the changes to <code>crypto/x509</code> parsing and marshaling of RSA keys
<a href="#cryptox509pkgcryptox509">described below</a>.</p>
<!-- go.dev/issue/43923 -->
<p><a href="https://tip.golang.org/pkg/crypto/rsa#SignPKCS1v15"><code>SignPKCS1v15</code></a> and
<a href="https://tip.golang.org/pkg/crypto/rsa#VerifyPKCS1v15"><code>VerifyPKCS1v15</code></a> now support
SHA-512/224, SHA-512/256, and SHA-3.</p>
<!-- CL 639936 -->
<p><a href="https://tip.golang.org/pkg/crypto/rsa#GenerateKey"><code>GenerateKey</code></a> now uses a slightly different
method to generate the private exponent (Carmichael’s totient instead of Euler’s
totient). Rare applications that externally regenerate keys from only the prime
factors may produce different but compatible results.</p>
<!-- CL 626957 -->
<p>Public and private key operations are now up to two times faster on wasm.</p>
<h4 id="cryptosha1pkgcryptosha1"><a href="https://tip.golang.org/pkg/crypto/sha1/"><code>crypto/sha1</code></a></h4>
<p>The value returned by <a href="https://tip.golang.org/pkg/sha1#New"><code>sha1.New</code></a> now also implements
the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="cryptosha256pkgcryptosha256"><a href="https://tip.golang.org/pkg/crypto/sha256/"><code>crypto/sha256</code></a></h4>
<p>The values returned by <a href="https://tip.golang.org/pkg/sha256#New"><code>sha256.New</code></a> and
<a href="https://tip.golang.org/pkg/sha256#New224"><code>sha256.New224</code></a> now also implement the
<a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="cryptosha512pkgcryptosha512"><a href="https://tip.golang.org/pkg/crypto/sha512/"><code>crypto/sha512</code></a></h4>
<p>The values returned by <a href="https://tip.golang.org/pkg/sha512#New"><code>sha512.New</code></a>,
<a href="https://tip.golang.org/pkg/sha512#New384"><code>sha512.New384</code></a>,
<a href="https://tip.golang.org/pkg/sha512#New512_224"><code>sha512.New512_224</code></a> and
<a href="https://tip.golang.org/pkg/sha512#New512_256"><code>sha512.New512_256</code></a> now also implement the
<a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="cryptosubtlepkgcryptosubtle"><a href="https://tip.golang.org/pkg/crypto/subtle/"><code>crypto/subtle</code></a></h4>
<p>The new <a href="https://tip.golang.org/pkg/crypto/subtle#WithDataIndependentTiming"><code>WithDataIndependentTiming</code></a>
function allows the user to run a function with architecture specific features
enabled which guarantee specific instructions are data value timing invariant.
This can be used to make sure that code designed to run in constant time is not
optimized by CPU-level features such that it operates in variable time.
Currently, <code>WithDataIndependentTiming</code> uses the PSTATE.DIT bit on arm64, and is
a no-op on all other architectures. <a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a>
<code>dataindependenttiming=1</code> enables the DIT mode for the entire Go program.</p>
<!-- CL 622276 -->
<p>The <a href="https://tip.golang.org/pkg/crypto/subtle#XORBytes"><code>XORBytes</code></a> output must overlap exactly or not
at all with the inputs. Previously, the behavior was otherwise undefined, while
now <code>XORBytes</code> will panic.</p>
<h4 id="cryptotlspkgcryptotls"><a href="https://tip.golang.org/pkg/crypto/tls/"><code>crypto/tls</code></a></h4>
<p>The TLS server now supports Encrypted Client Hello (ECH). This feature can be
enabled by populating the <a href="https://tip.golang.org/pkg/crypto/tls#Config.EncryptedClientHelloKeys"><code>Config.EncryptedClientHelloKeys</code></a> field.</p>
<p>The new post-quantum <a href="https://tip.golang.org/pkg/crypto/tls#X25519MLKEM768"><code>X25519MLKEM768</code></a> key
exchange mechanism is now supported and is enabled by default when
<a href="https://tip.golang.org/pkg/crypto/tls#Config.CurvePreferences"><code>Config.CurvePreferences</code></a> is nil.
<a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <code>tlsmlkem=0</code> reverts the default.</p>
<p>Support for the experimental <code>X25519Kyber768Draft00</code> key exchange has been removed.</p>
<!-- go.dev/issue/69393, CL 630775 -->
<p>Key exchange ordering is now handled entirely by the <code>crypto/tls</code> package. The
order of <a href="https://tip.golang.org/pkg/crypto/tls#Config.CurvePreferences"><code>Config.CurvePreferences</code></a> is
now ignored, and the contents are only used to determine which key exchanges to
enable when the field is populated.</p>
<!-- go.dev/issue/32936 -->
<p>The new <a href="https://tip.golang.org/pkg/crypto/tls#ClientHelloInfo.Extensions"><code>ClientHelloInfo.Extensions</code></a>
field lists the IDs of the extensions received in the Client Hello message.
This can be useful for fingerprinting TLS clients.</p>
<h4 id="cryptox509pkgcryptox509"><a href="https://tip.golang.org/pkg/crypto/x509/"><code>crypto/x509</code></a></h4>
<!-- go.dev/issue/41682 -->
<p>The <code>x509sha1</code> <a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> has been removed.
<a href="https://tip.golang.org/pkg/crypto/x509#Certificate.Verify"><code>Certificate.Verify</code></a> no longer
supports SHA-1 based signatures.</p>
<p><a href="https://tip.golang.org/pkg/crypto/x509#OID"><code>OID</code></a> now implements the
<a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> and
<a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interfaces.</p>
<p>The default certificate policies field has changed from
<a href="https://tip.golang.org/pkg/crypto/x509#Certificate.PolicyIdentifiers"><code>Certificate.PolicyIdentifiers</code></a>
to <a href="https://tip.golang.org/pkg/crypto/x509#Certificate.Policies"><code>Certificate.Policies</code></a>. When parsing
certificates, both fields will be populated, but when creating certificates
policies will now be taken from the <code>Certificate.Policies</code> field instead of
the <code>Certificate.PolicyIdentifiers</code> field. This change can be reverted with
<a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <code>x509usepolicies=0</code>.</p>
<!-- go.dev/issue/67675 -->
<p><a href="https://tip.golang.org/pkg/crypto/x509#CreateCertificate"><code>CreateCertificate</code></a> will now generate a
serial number using a RFC 5280 compliant method when passed a template with a
nil <a href="https://tip.golang.org/pkg/crypto/x509#Certificate.SerialNumber"><code>Certificate.SerialNumber</code></a>
field, instead of failing.</p>
<p><a href="https://tip.golang.org/pkg/crypto/x509#Certificate.Verify"><code>Certificate.Verify</code></a> now supports policy
validation, as defined in RFC 5280 and RFC 9618. The new
<a href="https://tip.golang.org/pkg/crypto/x509#VerifyOptions.CertificatePolicies"><code>VerifyOptions.CertificatePolicies</code></a>
field can be set to an acceptable set of policy <a href="https://tip.golang.org/pkg/crypto/x509#OID"><code>OIDs</code></a>.
Only certificate chains with valid policy graphs will be returned from
<a href="https://tip.golang.org/pkg/crypto/x509#Certificate.Verify"><code>Certificate.Verify</code></a>.</p>
<p><a href="https://tip.golang.org/pkg/crypto/x509#MarshalPKCS8PrivateKey"><code>MarshalPKCS8PrivateKey</code></a> now returns
an error instead of marshaling an invalid RSA key.
(<a href="https://tip.golang.org/pkg/crypto/x509#MarshalPKCS1PrivateKey"><code>MarshalPKCS1PrivateKey</code></a> doesn’t
have an error return, and its behavior when provided invalid keys continues to
be undefined.)</p>
<p><a href="https://tip.golang.org/pkg/crypto/x509#ParsePKCS1PrivateKey"><code>ParsePKCS1PrivateKey</code></a> and
<a href="https://tip.golang.org/pkg/crypto/x509#ParsePKCS8PrivateKey"><code>ParsePKCS8PrivateKey</code></a> now use and
validate the encoded CRT values, so might reject invalid RSA keys that were
previously accepted. Use <a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <code>x509rsacrt=0</code> to
revert to recomputing the CRT values.</p>
<h4 id="debugelfpkgdebugelf"><a href="https://tip.golang.org/pkg/debug/elf/"><code>debug/elf</code></a></h4>
<!-- go.dev/issue/63952 -->
<p>The <a href="https://tip.golang.org/pkg/debug/elf"><code>debug/elf</code></a> package adds support for handling symbol
versions in dynamic ELF (Executable and Linkable Format) files.
The new <a href="https://tip.golang.org/pkg/debug/elf#File.DynamicVersions"><code>File.DynamicVersions</code></a> method
returns a list of dynamic versions defined in the ELF file.
The new <a href="https://tip.golang.org/pkg/debug/elf#File.DynamicVersionNeeds"><code>File.DynamicVersionNeeds</code></a>
method returns a list of dynamic versions required by this ELF file that are
defined in other ELF objects.
Finally, the new <a href="https://tip.golang.org/pkg/debug/elf#Symbol"><code>Symbol.HasVersion</code></a> and
<a href="https://tip.golang.org/pkg/debug/elf#Symbol"><code>Symbol.VersionIndex</code></a> fields indicate the version of a
symbol.</p>
<h4 id="encodingpkgencoding"><a href="https://tip.golang.org/pkg/encoding/"><code>encoding</code></a></h4>
<p>Two new interfaces, <a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>TextAppender</code></a> and <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>BinaryAppender</code></a>, have been
introduced to append the textual or binary representation of an object
to a byte slice. These interfaces provide the same functionality as
<a href="https://tip.golang.org/pkg/encoding#TextMarshaler"><code>TextMarshaler</code></a> and <a href="https://tip.golang.org/pkg/encoding#BinaryMarshaler"><code>BinaryMarshaler</code></a>, but instead of allocating a new slice
each time, they append the data directly to an existing slice.
These interfaces are now implemented by standard library types that
already implemented <code>TextMarshaler</code> and/or <code>BinaryMarshaler</code>.</p>
<h4 id="encodingjsonpkgencodingjson"><a href="https://tip.golang.org/pkg/encoding/json/"><code>encoding/json</code></a></h4>
<!-- go.dev/issue/45669 -->
<p>When marshaling, a struct field with the new <code>omitzero</code> option in the struct field
tag will be omitted if its value is zero. If the field type has an <code>IsZero() bool</code>
method, that will be used to determine whether the value is zero. Otherwise, the
value is zero if it is <a href="https://tip.golang.org/ref/spec#The_zero_value">the zero value for its type</a>.
The <code>omitzero</code> field tag is clearer and less error-prone than <code>omitempty</code> when
the intent is to omit zero values.
In particular, unlike <code>omitempty</code>, <code>omitzero</code> omits zero-valued
<a href="https://tip.golang.org/pkg/time#Time"><code>time.Time</code></a> values, which is a common source of friction.</p>
<p>If both <code>omitempty</code> and <code>omitzero</code> are specified, the field will be omitted if the
value is either empty or zero (or both).</p>
<p><a href="https://tip.golang.org/pkg/encoding/json#UnmarshalTypeError.Field"><code>UnmarshalTypeError.Field</code></a> now includes embedded structs to provide more detailed error messages.</p>
<h4 id="gotypespkggotypes"><a href="https://tip.golang.org/pkg/go/types/"><code>go/types</code></a></h4>
<p>All <code>go/types</code> data structures that expose sequences using a pair of
methods such as <code>Len() int</code> and <code>At(int) T</code> now also have methods that
return iterators, allowing you to simplify code such as this:</p>
<pre><code>params := fn.Type.(*types.Signature).Params()
for i := 0; i &lt; params.Len(); i++ {
   use(params.At(i))
}
</code></pre>
<p>to this:</p>
<pre><code>for param := range fn.Signature().Params().Variables() {
   use(param)
}
</code></pre>
<p>The methods are:
<a href="https://tip.golang.org/pkg/go/types#Interface.EmbeddedTypes"><code>Interface.EmbeddedTypes</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Interface.ExplicitMethods"><code>Interface.ExplicitMethods</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Interface.Methods"><code>Interface.Methods</code></a>,
<a href="https://tip.golang.org/pkg/go/types#MethodSet.Methods"><code>MethodSet.Methods</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Named.Methods"><code>Named.Methods</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Scope.Children"><code>Scope.Children</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Struct.Fields"><code>Struct.Fields</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Tuple.Variables"><code>Tuple.Variables</code></a>,
<a href="https://tip.golang.org/pkg/go/types#TypeList.Types"><code>TypeList.Types</code></a>,
<a href="https://tip.golang.org/pkg/go/types#TypeParamList.TypeParams"><code>TypeParamList.TypeParams</code></a>,
<a href="https://tip.golang.org/pkg/go/types#Union.Terms"><code>Union.Terms</code></a>.</p>
<h4 id="hashadler32pkghashadler32"><a href="https://tip.golang.org/pkg/hash/adler32/"><code>hash/adler32</code></a></h4>
<p>The value returned by <a href="https://tip.golang.org/pkg/hash/adler32#New"><code>New</code></a> now also implements the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="hashcrc32pkghashcrc32"><a href="https://tip.golang.org/pkg/hash/crc32/"><code>hash/crc32</code></a></h4>
<p>The values returned by <a href="https://tip.golang.org/pkg/hash/crc32#New"><code>New</code></a> and <a href="https://tip.golang.org/pkg/hash/crc32#NewIEEE"><code>NewIEEE</code></a> now also implement the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="hashcrc64pkghashcrc64"><a href="https://tip.golang.org/pkg/hash/crc64/"><code>hash/crc64</code></a></h4>
<p>The value returned by <a href="https://tip.golang.org/pkg/hash/crc64#New"><code>New</code></a> now also implements the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="hashfnvpkghashfnv"><a href="https://tip.golang.org/pkg/hash/fnv/"><code>hash/fnv</code></a></h4>
<p>The values returned by <a href="https://tip.golang.org/pkg/hash/fnv#New32"><code>New32</code></a>, <a href="https://tip.golang.org/pkg/hash/fnv#New32a"><code>New32a</code></a>, <a href="https://tip.golang.org/pkg/hash/fnv#New64"><code>New64</code></a>, <a href="https://tip.golang.org/pkg/hash/fnv#New64a"><code>New64a</code></a>, <a href="https://tip.golang.org/pkg/hash/fnv#New128"><code>New128</code></a> and <a href="https://tip.golang.org/pkg/hash/fnv#New128a"><code>New128a</code></a> now also implement the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="hashmaphashpkghashmaphash"><a href="https://tip.golang.org/pkg/hash/maphash/"><code>hash/maphash</code></a></h4>
<p>The new <a href="https://tip.golang.org/pkg/hash/maphash#Comparable"><code>Comparable</code></a> and
<a href="https://tip.golang.org/pkg/hash/maphash#WriteComparable"><code>WriteComparable</code></a> functions can compute the
hash of any comparable value.
These make it possible to hash anything that can be used as a Go map key.</p>
<h4 id="logslogpkglogslog"><a href="https://tip.golang.org/pkg/log/slog/"><code>log/slog</code></a></h4>
<p>The new <a href="https://tip.golang.org/pkg/log/slog#DiscardHandler"><code>DiscardHandler</code></a> is a handler that is never enabled and always discards its output.</p>
<p><a href="https://tip.golang.org/pkg/log/slog#Level"><code>Level</code></a> and <a href="https://tip.golang.org/pkg/log/slog#LevelVar"><code>LevelVar</code></a> now implement the <a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interface.</p>
<h4 id="mathbigpkgmathbig"><a href="https://tip.golang.org/pkg/math/big/"><code>math/big</code></a></h4>
<p><a href="https://tip.golang.org/pkg/math/big#Float"><code>Float</code></a>, <a href="https://tip.golang.org/pkg/math/big#Int"><code>Int</code></a> and <a href="https://tip.golang.org/pkg/math/big#Rat"><code>Rat</code></a> now implement the <a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interface.</p>
<h4 id="mathrandpkgmathrand"><a href="https://tip.golang.org/pkg/math/rand/"><code>math/rand</code></a></h4>
<p>Calls to the deprecated top-level <a href="https://tip.golang.org/pkg/math/rand#Seed"><code>Seed</code></a> function no longer have any effect. To
restore the old behavior use <a href="https://tip.golang.org/doc/godebug">GODEBUG setting</a> <code>randseednop=0</code>. For more background see
<a href="https://tip.golang.org/issue/67273">proposal #67273</a>.</p>
<h4 id="mathrandv2pkgmathrandv2"><a href="https://tip.golang.org/pkg/math/rand/v2/"><code>math/rand/v2</code></a></h4>
<p><a href="https://tip.golang.org/pkg/math/rand/v2#ChaCha8"><code>ChaCha8</code></a> and <a href="https://tip.golang.org/pkg/math/rand/v2#PCG"><code>PCG</code></a> now implement the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="netpkgnet"><a href="https://tip.golang.org/pkg/net/"><code>net</code></a></h4>
<p><a href="https://tip.golang.org/pkg/net#ListenConfig"><code>ListenConfig</code></a> now uses MPTCP by default on systems where it is supported
(currently on Linux only).</p>
<p><a href="https://tip.golang.org/pkg/net#IP"><code>IP</code></a> now implements the <a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interface.</p>
<h4 id="nethttppkgnethttp"><a href="https://tip.golang.org/pkg/net/http/"><code>net/http</code></a></h4>
<p><a href="https://tip.golang.org/pkg/net/http#Transport"><code>Transport</code></a>’s limit on 1xx informational responses received
in response to a request has changed.
It previously aborted a request and returned an error after
receiving more than 5 1xx responses.
It now returns an error if the total size of all 1xx responses
exceeds the <a href="https://tip.golang.org/pkg/net/http#Transport.MaxResponseHeaderBytes"><code>Transport.MaxResponseHeaderBytes</code></a> configuration setting.</p>
<p>In addition, when a request has a
<a href="https://tip.golang.org/pkg/net/http/httptrace#ClientTrace.Got1xxResponse"><code>net/http/httptrace.ClientTrace.Got1xxResponse</code></a>
trace hook, there is now no limit on the total number of 1xx responses.
The <code>Got1xxResponse</code> hook may return an error to abort a request.</p>
<p><a href="https://tip.golang.org/pkg/net/http#Transport"><code>Transport</code></a> and <a href="https://tip.golang.org/pkg/net/http#Server"><code>Server</code></a> now have an HTTP2 field which permits
configuring HTTP/2 protocol settings.</p>
<p>The new <a href="https://tip.golang.org/pkg/net/http#Server.Protocols"><code>Server.Protocols</code></a> and <a href="https://tip.golang.org/pkg/net/http#Transport.Protocols"><code>Transport.Protocols</code></a> fields provide
a simple way to configure what HTTP protocols a server or client use.</p>
<p>The server and client may be configured to support unencrypted HTTP/2
connections.</p>
<p>When <a href="https://tip.golang.org/pkg/net/http#Server.Protocols"><code>Server.Protocols</code></a> contains UnencryptedHTTP2, the server will accept
HTTP/2 connections on unencrypted ports. The server can accept both
HTTP/1 and unencrypted HTTP/2 on the same port.</p>
<p>When <a href="https://tip.golang.org/pkg/net/http#Transport.Protocols"><code>Transport.Protocols</code></a> contains UnencryptedHTTP2 and does not contain
HTTP1, the transport will use unencrypted HTTP/2 for http:// URLs.
If the transport is configured to use both HTTP/1 and unencrypted HTTP/2,
it will use HTTP/1.</p>
<p>Unencrypted HTTP/2 support uses “HTTP/2 with Prior Knowledge”
(RFC 9113, section 3.3). The deprecated “Upgrade: h2c” header
is not supported.</p>
<h4 id="netnetippkgnetnetip"><a href="https://tip.golang.org/pkg/net/netip/"><code>net/netip</code></a></h4>
<p><a href="https://tip.golang.org/pkg/net/netip#Addr"><code>Addr</code></a>, <a href="https://tip.golang.org/pkg/net/netip#AddrPort"><code>AddrPort</code></a> and <a href="https://tip.golang.org/pkg/net/netip#Prefix"><code>Prefix</code></a> now implement the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> and
<a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interfaces.</p>
<h4 id="neturlpkgneturl"><a href="https://tip.golang.org/pkg/net/url/"><code>net/url</code></a></h4>
<p><a href="https://tip.golang.org/pkg/net/url#URL"><code>URL</code></a> now also implements the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> interface.</p>
<h4 id="osuserpkgosuser"><a href="https://tip.golang.org/pkg/os/user/"><code>os/user</code></a></h4>
<p>On Windows, <a href="https://tip.golang.org/pkg/os/user#Current"><code>Current</code></a> can now be used in Windows Nano Server.
The implementation has been updated to avoid using functions
from the <code>NetApi32</code> library, which is not available in Nano Server.</p>
<p>On Windows, <a href="https://tip.golang.org/pkg/os/user#Current"><code>Current</code></a>, <a href="https://tip.golang.org/pkg/os/user#Lookup"><code>Lookup</code></a> and <a href="https://tip.golang.org/pkg/os/user#LookupId"><code>LookupId</code></a> now support the
following built-in service user accounts:</p>
<ul>
<li><code>NT AUTHORITY\SYSTEM</code></li>
<li><code>NT AUTHORITY\LOCAL SERVICE</code></li>
<li><code>NT AUTHORITY\NETWORK SERVICE</code></li>
</ul>
<p>On Windows, <a href="https://tip.golang.org/pkg/os/user#Current"><code>Current</code></a> has been made considerably faster when
the current user is joined to a slow domain, which is the
usual case for many corporate users. The new implementation
performance is now in the order of milliseconds, compared to
the previous implementation which could take several seconds,
or even minutes, to complete.</p>
<p>On Windows, <a href="https://tip.golang.org/pkg/os/user#Current"><code>Current</code></a> now returns the process owner user when
the current thread is impersonating another user. Previously,
it returned an error.</p>
<h4 id="regexppkgregexp"><a href="https://tip.golang.org/pkg/regexp/"><code>regexp</code></a></h4>
<p><a href="https://tip.golang.org/pkg/regexp#Regexp"><code>Regexp</code></a> now implements the <a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interface.</p>
<h4 id="runtimepkgruntime"><a href="https://tip.golang.org/pkg/runtime/"><code>runtime</code></a></h4>
<p>The <a href="https://tip.golang.org/pkg/runtime#GOROOT"><code>GOROOT</code></a> function is now deprecated.
In new code prefer to use the system path to locate the “go” binary,
and use <code>go env GOROOT</code> to find its GOROOT.</p>
<h4 id="stringspkgstrings"><a href="https://tip.golang.org/pkg/strings/"><code>strings</code></a></h4>
<p>The <a href="https://tip.golang.org/pkg/strings"><code>strings</code></a> package adds several functions that work with iterators:</p>
<ul>
<li><a href="https://tip.golang.org/pkg/strings#Lines"><code>Lines</code></a> returns an iterator over
the newline-terminated lines in a string.</li>
<li><a href="https://tip.golang.org/pkg/strings#SplitSeq"><code>SplitSeq</code></a> returns an iterator over
all substrings of a string split around a separator.</li>
<li><a href="https://tip.golang.org/pkg/strings#SplitAfterSeq"><code>SplitAfterSeq</code></a> returns an iterator
over substrings of a string split after each instance of a
separator.</li>
<li><a href="https://tip.golang.org/pkg/strings#FieldsSeq"><code>FieldsSeq</code></a> returns an iterator over
substrings of a string split around runs of whitespace characters,
as defined by <a href="https://tip.golang.org/pkg/unicode#IsSpace"><code>unicode.IsSpace</code></a>.</li>
<li><a href="https://tip.golang.org/pkg/strings#FieldsFuncSeq"><code>FieldsFuncSeq</code></a> returns an iterator
over substrings of a string split around runs of Unicode code points
satisfying a predicate.</li>
</ul>
<h4 id="syncpkgsync"><a href="https://tip.golang.org/pkg/sync/"><code>sync</code></a></h4>
<p>The implementation of <a href="https://tip.golang.org/pkg/sync#Map"><code>sync.Map</code></a> has been changed, improving performance,
particularly for map modifications.
For instance, modifications of disjoint sets of keys are much less likely to contend on
larger maps, and there is no longer any ramp-up time required to achieve low-contention
loads from the map.</p>
<p>If you encounter any problems, set <code>GOEXPERIMENT=nosynchashtriemap</code> at build
time to switch back to the old implementation and please <a href="https://tip.golang.org/issue/new">file an
issue</a>.</p>
<h4 id="testingpkgtesting"><a href="https://tip.golang.org/pkg/testing/"><code>testing</code></a></h4>
<p>The new <a href="https://tip.golang.org/pkg/testing#T.Context"><code>T.Context</code></a> and <a href="https://tip.golang.org/pkg/testing#B.Context"><code>B.Context</code></a> methods return a context that’s canceled
after the test completes and before test cleanup functions run.</p>
<!-- testing.B.Loop mentioned in 6-stdlib/6-testing-bloop.md. -->
<p>The new <a href="https://tip.golang.org/pkg/testing#T.Chdir"><code>T.Chdir</code></a> and <a href="https://tip.golang.org/pkg/testing#B.Chdir"><code>B.Chdir</code></a> methods can be used to change the working
directory for the duration of a test or benchmark.</p>
<h4 id="texttemplatepkgtexttemplate"><a href="https://tip.golang.org/pkg/text/template/"><code>text/template</code></a></h4>
<p>Templates now support range-over-func and range-over-int.</p>
<h4 id="timepkgtime"><a href="https://tip.golang.org/pkg/time/"><code>time</code></a></h4>
<p><a href="https://tip.golang.org/pkg/time#Time"><code>Time</code></a> now implements the <a href="https://tip.golang.org/pkg/encoding#BinaryAppender"><code>encoding.BinaryAppender</code></a> and <a href="https://tip.golang.org/pkg/encoding#TextAppender"><code>encoding.TextAppender</code></a> interfaces.</p>
<h2 id="ports">Ports</h2>
<h3 id="linux">Linux</h3>
<!-- go.dev/issue/67001 -->
<p>As <a href="https://tip.golang.org/doc/go1.23#linux">announced</a> in the Go 1.23 release notes, Go 1.24 requires Linux
kernel version 3.2 or later.</p>
<h3 id="darwin">Darwin</h3>
<!-- go.dev/issue/69839 -->
<p>Go 1.24 is the last release that will run on macOS 11 Big Sur.
Go 1.25 will require macOS 12 Monterey or later.</p>
<h3 id="wasm">WebAssembly</h3>
<!-- go.dev/issue/65199, CL 603055 -->
<p>The <code>go:wasmexport</code> compiler directive is added for Go programs to export functions
to the WebAssembly host.</p>
<p>On WebAssembly System Interface Preview 1 (<code>GOOS=wasip1 GOARCH=wasm</code>), Go 1.24 supports
building a Go program as a
<a href="https://github.com/WebAssembly/WASI/blob/63a46f61052a21bfab75a76558485cf097c0dbba/legacy/application-abi.md#current-unstable-abi" rel="noreferrer" target="_blank">reactor/library</a>,
by specifying the <code>-buildmode=c-shared</code> build flag.</p>
<!-- go.dev/issue/66984, CL 626615 -->
<p>More types are now permitted as argument or result types for <code>go:wasmimport</code> functions.
Specifically, <code>bool</code>, <code>string</code>, <code>uintptr</code>, and pointers to certain types are allowed
(see the <a href="https://tip.golang.org/pkg/cmd/compile#hdr-WebAssembly_Directives">documentation</a> for detail),
along with 32-bit and 64-bit integer and float types, and <code>unsafe.Pointer</code>, which
are already allowed.
These types are also permitted as argument or result types for <code>go:wasmexport</code> functions.</p>
<!-- go.dev/issue/68024 -->
<p>The support files for WebAssembly have been moved to <code>lib/wasm</code> from <code>misc/wasm</code>.</p>
<!-- CL 621635, CL 621636 -->
<p>The initial memory size is significantly reduced, especially for small WebAssembly
applications.</p>
<h3 id="windows">Windows</h3>
<!-- go.dev/issue/70705 -->
<p>The 32-bit windows/arm port (<code>GOOS=windows GOARCH=arm</code>) has been marked broken.
See <a href="https://tip.golang.org/issue/70705">issue #70705</a> for details.</p>
<!-- Items that don't need to be mentioned in Go 1.24 release notes but are picked up by relnote todo.

accepted proposal https://go.dev/issue/25309 (from https://go.dev/cl/594018, https://go.dev/cl/595120, https://go.dev/cl/595564, https://go.dev/cl/601778) - new x/crypto package; doesn't seem to need to be mentioned
accepted proposal https://go.dev/issue/43744 (from https://go.dev/cl/357530) - no change in the standard library
accepted proposal https://go.dev/issue/60905 (from https://go.dev/cl/610195) - CL 610195 reverted
accepted proposal https://go.dev/issue/61395 (from https://go.dev/cl/594738, https://go.dev/cl/594976) - CL 594738 made sync/atomic AND/OR operations intrinsic on amd64, but the API was already added in Go 1.23; CL 594976 is a fix; probably doesn't require a Go 1.24 release note (performance change only)
accepted proposal https://go.dev/issue/51269 (from https://go.dev/cl/627035) - may be worth mentioning in Go 1.24 release notes, or may be fine to leave out; commented at https://go.dev/issue/51269#issuecomment-2501802763; Ian confirmed it's fine to leave out
accepted proposal https://go.dev/issue/66540 (from https://go.dev/cl/603958) - a Go language spec clarification; might not need to be mentioned in Go 1.24 release notes; left a comment at https://go.dev/issue/66540#issuecomment-2502051684; Robert confirmed it indeed doesn't
accepted proposal https://go.dev/issue/34208 (from https://go.dev/cl/586241) - CL 586241 implements a fix for a Go 1.23 feature, doesn't seem to be need anything in Go 1.24 release notes
accepted proposal https://go.dev/issue/43993 (from https://go.dev/cl/626116) - CL 626116 prepares the tree towards the vet change but the vet change itself isn't implemented in Go 1.24, so nothing to say in Go 1.24 release notes
accepted proposal https://go.dev/issue/44505 (from https://go.dev/cl/609955) - CL 609955 is an internal cleanup in x/tools, no need for Go 1.24 release note
accepted proposal https://go.dev/issue/61476 (from https://go.dev/cl/608255) - CL 608255 builds on GORISCV64 added in Go 1.23; nothing to mention in Go 1.24 release notes
accepted proposal https://go.dev/issue/66315 (from https://go.dev/cl/577996) - adding Pass.Module field to x/tools/go/analysis doesn't seem like something that needs to be mentioned in Go 1.24 release notes
accepted proposal https://go.dev/issue/57786 (from https://go.dev/cl/472717) - CL 472717 is in x/net/http2 and mentions a Go 1.21 proposal; it doesn't seem to need anything in Go 1.24 release notes
accepted proposal https://go.dev/issue/54265 (from https://go.dev/cl/609915, https://go.dev/cl/610675) - CLs that refer to a Go 1.22 proposal, nothing more is needed in Go 1.24 release notes
accepted proposal https://go.dev/issue/53021 (from https://go.dev/cl/622276) - CL 622276 improves docs; proposal 53021 was in Go 1.20 so nothing more is needed in Go 1.24 release notes
accepted proposal https://go.dev/issue/51430 (from https://go.dev/cl/613375) - CL 613375 is an internal documentation comment; proposal 51430 happened in Go 1.20/1.21 so nothing more is needed in Go 1.24 release notes
accepted proposal https://go.dev/issue/38445 (from https://go.dev/cl/626495) - CL 626495 works on proposal 38445, which is about x/tools/go/package, doesn't need anything in Go 1.24 release notes
accepted proposal https://go.dev/issue/56986 (from https://go.dev/cl/618115) - CL 618115 adds documentation; it doesn't need to be mentioned in Go 1.24 release notes
accepted proposal https://go.dev/issue/60061 (from https://go.dev/cl/612038) - CL 612038 is a CL that deprecates something in x/tools/go/ast and mentions a Go 1.22 proposal; doesn't need anything in Go 1.24 release notes
accepted proposal https://go.dev/issue/61324 (from https://go.dev/cl/411907) - CL 411907 is an x/tools CL that implements a proposal for a new package there; doesn't need anything in Go 1.24 release notes
accepted proposal https://go.dev/issue/61777 (from https://go.dev/cl/601496) - CL 601496 added a WriteByteTimeout field to x/net/http2.Server; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/61940 (from https://go.dev/cl/600997) - CL 600997 deleted obsolete code in x/build and mentioned an accepted proposal; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/62113 (from https://go.dev/cl/594195) - CL 594195 made iterator-related additions in x/net/html; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/62484 (from https://go.dev/cl/600775) - CL 600775 documents CopyFS symlink behavior and mentions the Go 1.23 proposal; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/64207 (from https://go.dev/cl/605875) - an x/website CL that follows up on a Go 1.23 proposal; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/65236 (from https://go.dev/cl/596135) - CL 596135 adds tests for the Go 1.23 proposal 65236; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/67795 (from https://go.dev/cl/616218) - iteratior support for x/tools/go/ast/inspector; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/67812 (from https://go.dev/cl/601497) - configurable server pings for x/net/http2.Server; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/68232 (from https://go.dev/cl/595676) - x/sys/unix additions; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/68898 (from https://go.dev/cl/607495, https://go.dev/cl/620036, https://go.dev/cl/620135, https://go.dev/cl/623638) - a proposal for x/tools/go/gcexportdata to document 2 releases + tip support policy; since the change is in x/tools it doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/69095 (from https://go.dev/cl/593683, https://go.dev/cl/608955, https://go.dev/cl/610716) - a proposal that affects maintenance and support of golang.org/x repositories; doesn't need to be mentioned in Go 1.24 release notes
accepted proposal https://go.dev/issue/68384 (from https://go.dev/cl/611875) - expanding the scope of Go Telemetry to include Delve isn't directly tied to Go 1.24 and doesn't seem to need to be mentioned in Go 1.24 release notes
accepted proposal https://go.dev/issue/69291 (from https://go.dev/cl/610939) - CL 610939 refactors code in x/tools and mentions the still-open proposal #69291 to add Reachable to x/tools/go/ssa/ssautil; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/69360 (from https://go.dev/cl/614158, https://go.dev/cl/614159, https://go.dev/cl/614635, https://go.dev/cl/614675) - proposal 69360 is to tag and delete gorename from x/tools; doesn't need a Go 1.24 release note
accepted proposal https://go.dev/issue/61417 (from https://go.dev/cl/605955) - a new field in x/oauth2; nothing to mention in Go 1.24 release notes
accepted proposal https://go.dev/issue/29266 (from https://go.dev/cl/632897) - a documentation-only proposal for go.dev/doc/contribute; doesn't need a Go 1.24 release note
-->





</article>



</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Grok3 Launch [video] (551 pts)]]></title>
            <link>https://x.com/xai/status/1891699715298730482</link>
            <guid>43085957</guid>
            <pubDate>Tue, 18 Feb 2025 04:04:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://x.com/xai/status/1891699715298730482">https://x.com/xai/status/1891699715298730482</a>, See on <a href="https://news.ycombinator.com/item?id=43085957">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[The Generative AI Con (317 pts)]]></title>
            <link>https://www.wheresyoured.at/longcon/</link>
            <guid>43085885</guid>
            <pubDate>Tue, 18 Feb 2025 03:47:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wheresyoured.at/longcon/">https://www.wheresyoured.at/longcon/</a>, See on <a href="https://news.ycombinator.com/item?id=43085885">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
      <p>It's been just over two years and two months since ChatGPT launched, and in that time we've seen Large Language Models (LLMs) blossom from a novel concept into one of the most craven cons of the 21st century — a cynical bubble inflated by OpenAI CEO Sam Altman built to sell into an economy run by people that have no concept of labor other than their desperation to exploit or replace it. </p><p>I realize that Large Language Models like GPT-4o — the model that powers ChatGPT and a bunch of other apps — <em>have use cases</em>, and I'm <em>fucking tired of having to write this sentence.</em> There are people that really like using Large Language Models for coding (<a href="https://www.axios.com/2024/06/13/genai-code-mistakes-copilot-gemini-chatgpt?ref=wheresyoured.at"><u>even if the code isn't good</u></a> or<a href="https://www.zdnet.com/article/draft-theres-good-news-and-bad-news-with-ai-assisted-software-development/?ref=wheresyoured.at"> <u>makes systems less secure and stable</u></a>) or get something out of Retrieval-Augmented Generation (RAG)-powered search, or like using one of the various AI companions or journal apps.&nbsp;</p><p>I get it. I get that there are people that use LLM-powered software, and I must be clear that <strong>anecdotal examples of some people using some software that they kind-of like is not evidence that generative AI is a sustainable or real industry at the trillion-dollar scale that many claim it is.</strong></p><p>I am <em>so very bored of having this conversation,</em> so I am now going to write out some counterpoints so that I don't have to say them again.</p><h3 id="ed-there-are-multiple-kinds-of-artificial-intelligence"><strong>Ed, there are multiple kinds of artificial intelligence-</strong></h3><p><strong><em><u>I KNOW.</u></em></strong> Stop saying this to me like an Uno reverse! I'm talking about generative AI!</p><h3 id="well-ed-there-are-300-million-weekly-users-of-chatgpt-that-surely-proves-that-this-is-a-very-real-industry"><strong>Well, Ed, there are</strong><a href="https://www.theverge.com/2024/12/4/24313097/chatgpt-300-million-weekly-users?ref=wheresyoured.at"><strong> <u>300 million weekly users of ChatGPT</u></strong></a><strong>. That surely proves that this is a very real industry!</strong></h3><ol><li>Though I don't have an exact number, I'd estimate that there have been tens of thousands of articles about artificial intelligence written in the last two years that are specifically focused on the generative AI boom, which in turn guarantees that they'll mention ChatGPT.</li><li>The AI bubble means that effectively every single media outlet has been talking about artificial intelligence in the vaguest way, and there's really only been one "product" that they can try that "is AI" — and that product is ChatGPT.</li><li>Reporting on artificial intelligence,<a href="https://reutersinstitute.politics.ox.ac.uk/news/how-news-coverage-often-uncritical-helps-build-ai-hype?ref=wheresyoured.at"> <u>according to the Reuters Institute for the Study of Journalism</u></a>, is led by industry sources, with coverage of artificial intelligence in the UK being summarized by one study as tending to “construct the expectation of a pseudo-artificial general intelligence: a collective of technologies capable of solving nearly any problem." Specifically, the Reuters Institute's Professor Rasmus Nielsen said that coverage "often takes claims about what the technology can and can’t do, and might be able to do in the future, at face value in ways that contributes to the hype cycle."<ol><li>In short, most of the coverage you read on artificial intelligence is led by <strong>companies that benefit financially from you thinking artificial intelligence is important</strong> and <strong>by default all of this coverage mentions OpenAI or ChatGPT.</strong></li></ol></li><li>So...yeah, of course ChatGPT has that many users. When you have hundreds of different reporters constantly spitting out stories about how important something may or may not be, and when that thing is <em>available for free on a website</em>, it's going to get a bunch of people using it. This is predominantly the media's doing!</li><li><strong>But 300 million people is a lot!</strong><ol><li>It sure is! But it doesn't really prove anything other than that people are using the single-most-talked about product in the world. By comparison, billions of people use Facebook and Google. I don't care about this number!</li><li>User numbers alone tell you nothing about the sustainability or profitability of a business, or how those people use the product. It doesn’t delineate between daily users, and those who occasionally (and shallowly) flirt with an app or a website. It doesn’t say how <em>essential</em> a product is for that person.</li></ol></li></ol><h3 id="also-uhm-ed-its-early-days-for-chatgpt"><strong>Also, uhm, Ed? It's early days for ChatGPT-</strong></h3><ol><li>Shut the fuck up! There isn't a single god damn startup in the history of anything — other than perhaps Facebook — that has had this level of coverage at such an early stage. Facebook also grew at a time when social media didn't really exist (at least, as a mainstream thing that virtually every demographic used) and thus the ability for something to "go viral" was a relatively new idea. By comparison, ChatGPT had the benefit of there being more media outlets, and Altman himself having spent a decade gladhandling the media<a href="https://www.wsj.com/tech/ai/openai-sam-altman-investments-004fc785?ref=wheresyoured.at"> <u>through his startup investments</u></a> and crafting a real public persona.&nbsp;</li><li>The weekly users number is really weird. Did it really go from<a href="https://www.reuters.com/technology/artificial-intelligence/openai-says-chatgpts-weekly-users-have-grown-200-million-2024-08-29/?ref=wheresyoured.at"> <u>200 million</u></a> to<a href="https://www.cnbc.com/2024/12/04/openais-active-user-count-soars-to-300-million-people-per-week.html?ref=wheresyoured.at"> <u>300 million</u></a> users in the space of three months?<a href="https://www.reuters.com/technology/chatgpt-sets-record-fastest-growing-user-base-analyst-note-2023-02-01/?ref=wheresyoured.at"> <u>It was at 100 million weekly users in <em>February 2023</em></u></a><em>. </em>You're telling me that OpenAI took, what, over a year to go from 100 million to 200 million, but it took <em>three months</em> (August 29 2024 to December 4 2024) to hit 300 million?<ol><li>I don't have any insider information to counter this, but I will ask — where was that growth from? OpenAI launched its o1 "reasoning" model (<a href="https://openai.com/index/introducing-openai-o1-preview/?ref=wheresyoured.at"><u>the previews, at least</u></a>) on September 12 2024, but these were only available to ChatGPT Plus subscribers,<a href="https://www.searchenginejournal.com/openai-releases-chatgpt-o1-worlds-smartest-language-model/534597/?ref=wheresyoured.at"> <u>with the "full" version released on December 5 2024</u></a>. You're telling me this company increased its free user base by <em>50%</em> in less than three months based on nothing other than the <em>availability of a product that wasn't available to free users?</em></li><li>This also doesn't make a ton of sense based on data provided to me by<a href="http://www.similarweb.com/?ref=wheresyoured.at"> <u>Similarweb</u></a>, a digital market intelligence company. ChatGPT's monthly unique visitors were 212 million in September 2024, 233.1 million in October 2024, and 247.1 million in November 2024. I am not really sure how that translates to 300 million <em>weekly</em> users at all.<ol><li>Similarweb also provided me — albeit only for the last few weeks — data on ChatGPT.com's weekly traffic. For the period beginning January 21 2025, it only had 126.1 million weekly visitors. For the period beginning February 11 2025, it only had 136.7 million. Is OpenAI being honest about its user numbers? I've reached out for comment, but OpenAI has never, ever replied to me.<ol><li><strong>Sidenote: </strong>Yes, these are <strong><em>visitors</em></strong> versus <em><strong>users</strong></em>. However, one would assume users would be <em>lower</em> than visitors, because a visitor might not actually use the product. What gives?</li></ol></li><li>There could be users on their apps — but even then, I'm not really sure how you square this circle. An article from January 29 2025 says that<a href="https://techcrunch.com/2025/01/29/chatgpts-mobile-users-are-85-male-report-says/?ref=wheresyoured.at"> <u>the iOS ChatGPT app has been downloaded 353 million times</u></a> <em>in total</em>. Based on even the most optimistic numbers, are you telling me that ChatGPT has over 100 million <em>mobile only</em> users a week? And no, it isn’t Apple Intelligence.<a href="https://www.cnbc.com/2024/12/11/apple-launches-its-chatgpt-integration-with-siri.html?ref=wheresyoured.at#:~:text=Apple%20Intelligence%20is%20the%20company's,of%20Apple%20Intelligence%20in%20October."><u> Cupertino didn’t launch that integration until December 11 2024.</u></a>&nbsp;</li><li>Here's another question: why doesn't OpenAI reveal <em>monthly </em>active users? Wouldn't that number be higher? After all, a monthly active user is one that uses an app <em>even once</em> over a given month! Anyway, I hypothesize that the reason is probably that<a href="https://www.theinformation.com/articles/openai-coo-says-chatgpt-passed-11-million-paying-subscribers?rc=kz8jh3&amp;ref=wheresyoured.at"> <u>in September 2024 it came out that OpenAI had 11 million monthly paying subscribers</u></a>, and though ChatGPT likely has quite a few more people that use it once a month, admitting to that number would mean that <strong>we're able to see how absolutely abominable its conversion to paying users is. </strong>300 million monthly active users would mean a conversion rate of less than 4%, which is pretty piss-poor,<a href="https://www.wheresyoured.at/oai-business/#:~:text=ChatGPT%20Plus%2C%20Teams%2C%20and%20Enterprise%20%E2%80%94%2073%25%20of%20revenue%20(approximately%20%242.7%20billion)."> <u>especially as subscription revenue for ChatGPT Plus (and other monthly subscriptions) makes up the majority of OpenAI's revenue</u></a>.</li></ol></li><li>Hey, wait a second. Are there any other generative AI products that reveal their users? Anthropic doesn't.<a href="https://searchengineland.com/perplexity-plan-sell-ads-438904?ref=wheresyoured.at"> <u>AI-powered search product Perplexity claims to have 15 million monthly active users</u></a>. These aren't big numbers! They suggest these products aren't popular!<a href="https://www.wsj.com/tech/ai/google-gemini-2025-chatgpt-openai-b6eb595d?ref=wheresyoured.at"> <u>Google allegedly wants 500 million users of its Gemini chatbot by the end of the year</u></a>, but there isn't any information about how many it’s at right now.<ol><li>Similarweb data states that google.gemini.com had 47.3 million unique monthly visitors in January 2025, copilot.microsoft.com had 15.6 million, Perplexity.ai had 10.6 million, and claude.ai had 8.2 million. These aren't great numbers! These numbers suggest that these products aren't very popular at all!</li><li>The combined unique monthly visitors in January 2025 to ChatGPT.com (246m), DeepSeek.com (79.9m), Gemini.Google.com (47.3m), Copilot.microsoft.com (15.6m), Perplexity.ai (10.6m), character.ai (8.4m), claude.ai (8.2m) and notebookLM.google.com (7.4m) was 423.4 million - or an astonishing 97.5 million if you remove ChatGPT and DeepSeek.&nbsp;<ol><li>For context, the New York Times <a href="https://nytco-assets.nytimes.com/2024/03/2023-Annual-Report_WR_-Final.pdf?ref=wheresyoured.at"><u>said in their 2023 annual report that they received 131 million unique monthly visitors globally</u></a>, and <a href="https://cnnpressroom.blogs.cnn.com/cnn-fact-sheet/?ref=wheresyoured.at#:~:text=CNN's%20coverage%20is%20supplemented%20and,unique%20visitors%20globally%20each%20month."><u>CNN says they have more than 151 million unique monthly visitors</u></a>.&nbsp;</li></ol></li></ol></li></ol></li><li><strong>This isn't the early days of <em>shit.</em></strong> The<a href="https://arxiv.org/abs/1706.03762?ref=wheresyoured.at"> <u>Attention Is All You Need paper</u></a> that started the whole transformer-based architecture movement was published in June 2017. We're over two years in, hyperscalers have<a href="https://www.bloomberg.com/professional/insights/technology/big-tech-2025-capex-may-hit-200-billion-as-gen-ai-demand-booms/?ref=wheresyoured.at"> <u>sunk over 200 billion dollars in capital expenditures into generative AI</u></a>,<a href="https://www.crowdfundinsider.com/2024/10/230839-ai-startups-have-acquired-1-in-3-vc-dollars-research-study/?ref=wheresyoured.at"> <u>AI startups took up a third of all venture capital investment in 2024</u></a>, and almost every single talented artificial intelligence expert is laser-focused on Large Language Models. <strong><em>And even then, we still don't have a killer app! There is no product that everybody <u>loves</u>, and there is no iPhone moment!</em></strong></li></ol><h3 id="well-ed-i-think-chatgpt-is-the-iphone-moment-for-generative-ai-its-the-biggest-software-launch-of-all-time"><strong>Well Ed, I think ChatGPT is the iPhone moment for generative AI, it's the biggest software launch of all time-</strong></h3><ol><li>Didn't we just talk about this? Fine, fine. Let's get specific. The iPhone fundamentally redefined what a cellphone and a portable computer could be, as did the iPad, creating entirely new consumer and business use cases almost immediately. Cloud computing allowed us to run distinct applications in the cloud, which totally redefined how software was developed and deployed, creating both entirely new use cases for software (as the compute requirements moved from the customer to the provider), and<a href="https://aag-it.com/the-latest-cloud-computing-statistics/?ref=wheresyoured.at#:~:text=Operator%20and%20vendor%20revenues%20for,%24195%20billion%20of%20total%20revenues."> <u>an entirely new cloud computing <em>industry</em> that makes hundreds of billions of dollars a year</u></a>.</li><li>So, what exactly has generative AI actually done? Where are the products? No, really, where are they? What's the product you use every day, or week, that uses generative AI, that truly changes your life? If generative AI disappeared tomorrow — assuming you are not somebody who actively builds using it — would your life materially change?</li><li>The answer is "not that much." Putting aside the hype, bluster and ungodly amounts of money, I can find no evidence that any of these apps are making anyone any real money. Microsoft claims to have hit "<a href="https://www.geekwire.com/2025/microsoft-earnings-2/?ref=wheresyoured.at"><u>$13 billion in annual run rate in revenue from its artificial intelligence products and services</u></a>," which amounts to just over a billion a month, or $3.25 billion a quarter.<ol><li>This is not profit. It's revenue.</li><li><a href="https://www.microsoft.com/en-us/investor/earnings/fy-2025-q1/press-release-webcast?ref=wheresyoured.at"><u>There is no "artificial intelligence" part of Microsoft's revenue or earnings</u></a>. This is literally Microsoft taking anything with "AI" on it and saying "we made money!"</li><li>$3.25 billion a quarter is absolutely pathetic. In its most recent quarter, Microsoft<a href="https://www.cnbc.com/2025/01/29/microsoft-msft-q2-earnings-report-2025.html?ref=wheresyoured.at"> <u>made $69.63 billion</u></a>, with its Intelligent Cloud segment (which includes things like their Azure cloud computing solutions)<a href="https://www.cnbc.com/2025/01/29/microsoft-msft-q2-earnings-report-2025.html?ref=wheresyoured.at"> <u>making $25.54 billion in revenue</u></a>, and spent $15.80 billion in capital expenditures <em>excluding non-specific finance leases</em>.</li><li>In the last year, Microsoft has spent<a href="https://finbox.com/NASDAQGS:MSFT/explorer/capex/?ref=wheresyoured.at#:~:text=Microsoft's%20operated%20at%20median%20capital,December%202024%20at%2055.552%20billion."> <u>over $55 billion capital expenditures to maybe</u></a> (to be clear, the $13 billion in run rate <em>is a projection using current financial performance to predict future revenue) </em>make $13 billion. This is not a huge industry! These are not good numbers, especially considering the massive expenses!</li></ol></li></ol><h3 id="theyll-work-it-out"><strong>They'll Work It Out!</strong></h3><ol><li>When? No, really, when?<ol><li>OpenAI burned more than $5 billion last year.</li><li>According to The Information,<a href="https://www.theinformation.com/articles/anthropic-projects-soaring-growth-to-34-5-billion-in-2027-revenue?rc=kz8jh3&amp;ref=wheresyoured.at"> <u>Anthropic burned <em>$5.6 billion</em></u></a><em>.</em> That may very likely mean Anthropic burned <em><strong>more money than OpenAI somehow last year!</strong> </em>These companies are absolutely atrocious at business! The reason I’m not certain is that in the past The Information has been a touch inconsistent with how it evaluates "costs," in that I’ve seen it claim that OpenAI "burned just $340 million in the first half of 2024,"<a href="https://www.theinformation.com/articles/openai-projections-imply-losses-tripling-to-14-billion-in-2026?rc=kz8jh3&amp;ref=wheresyoured.at"> <u>a number that they pulled from a piece from last year</u></a> followed by the statement that "[OpenAI's] losses "are steep due to the impact of major expenses, such as stock compensation and computing costs, that don't flow through its cash statement." To be clear, OpenAI burned approximately $5 billion on compute alone. So yeah, OpenAI “burned only $340 million last year” as long as you don’t consider billions of other costs for some reason. Great stuff! It isn’t obvious how The Information is evaluating Anthropic’s burn versus OpenAI’s, and I’ve reached out to Jon Victor over there to get some clarity. I want to be clear that I very much appreciate, value and recommend The Information’s journalism, but I do not accept the idea of arbitrarily leaving out costs. This isn’t real business! Sorry!&nbsp;</li><li>None of these companies are profitable, and despite repeated claims that "the cost of inference is coming down" (the thing that happens when you prompt the model to do something) it doesn't appear to be helping them.<a href="https://www.wheresyoured.at/deep-impact/"> <u>In the weeks following the release of the super-efficient DeepSeek models</u></a> I kind of expected them to start talking about efficiency. They never addressed it other than OpenAI, which said that<a href="https://www.wheresyoured.at/what-were-fighting-for/"> <u>DeepSeek would cause it to maintain less of a lead</u></a>. Great stuff!</li></ol></li></ol><h3 id="what-are-we-doing-here"><strong>What Are We <em>Doing</em> Here?</strong></h3><p>OpenAI and Anthropic are both burning billions of dollars a year, and do not appear to have found a way to stop doing so. The only "proof" that they are going to reverse this trend is The Information saying that "<a href="https://www.theinformation.com/articles/anthropic-projects-soaring-growth-to-34-5-billion-in-2027-revenue?rc=kz8jh3&amp;ref=wheresyoured.at"><u>Anthropic's management expects the company to stop burning cash in 2027</u></a>."</p><blockquote><strong>Sidebar: </strong>Hey, what is it with Dario Amodei of Anthropic and the year 2027?<a href="https://arstechnica.com/ai/2025/01/anthropic-chief-says-ai-could-surpass-almost-all-humans-at-almost-everything-shortly-after-2027/?ref=wheresyoured.at"> <u>He said (made up) that "AI could surpass almost all humans at almost everything" "shortly after 2027" in January</u></a>. He said<a href="https://www.anthropic.com/news/paris-ai-summit?ref=wheresyoured.at"> <u>in one of his stupid and boring blogs</u></a> that "possibly by 2026 or 2027 (and almost certainly no later than 2030)" that "capabilities of AI systems will be best thought of as akin to an entirely new state populated by highly intelligent people appearing on the global stage—a “country of geniuses in a datacenter." This man is full of shit! Hey, tech media people reading this — your readers hate this shit! Stop printing it! Stop it!</blockquote><p>While one could say "the costs will come down," and that appears to be what The Information is claiming, suggesting that "Anthropic said it would reduce its burn rate by "nearly half" in 2025, the actual details are thin on the ground, and there’s no probing of whether that’s even feasible without radically changing its models. Huh? How? Anthropic’s burn increased every single year! So has OpenAI's!</p><p>The Information — who I do generally, and genuinely, respect — ran an astonishingly optimistic piece about Anthropic <a href="https://www.theinformation.com/articles/anthropic-projects-soaring-growth-to-34-5-billion-in-2027-revenue?rc=kz8jh3&amp;ref=wheresyoured.at"><u>estimating that it'd make $34.5 billion in revenue in 2027</u></a> (there's that year again!), the very same year it’d stop burning cash. Its estimates are based on the premise that "leaders expected API revenue to hit $20 billion in 2027," meaning people plugging Anthropic's models into their own products. This is laughable on many levels, chief of which is that OpenAI, which made around twice as much revenue as Anthropic did in 2024,<a href="https://www.wheresyoured.at/oai-business/#:~:text=Licensing%20Access%20To%20Models%20And%20Services%20%E2%80%94%2027%25%20of%20revenue%20(approximately%20%241%20billion)."> <u>barely made a billion dollars from API calls in the same year</u></a>.</p><p>It's here where I'm going to choose to scream.</p><p>Anthropic, according to The Information, generated <strong><em>$908 million in revenue in 2024,</em></strong> and has <u>projected</u> that it will make $2.2 billion in revenue in 2025, and its "base case" — which The Information says would be "the likeliest outcome (???) — is that it will make $12 billion in revenue in 2027.&nbsp;</p><p>This is what happens during bubbles! Assets are over-valued based on a combination of vibes and hysteria!&nbsp;</p><p>Dario Amodei — much like Sam Altman — is a liar, a crook, a carnival barker and a charlatan, and the things he promises are equal parts ridiculous and offensive. The Information (which needs to do better work actually critiquing these people) justified Amodei and Anthropic's obscene and fantastical revenue targets by<a href="https://www.anthropic.com/news/paris-ai-summit?ref=wheresyoured.at"> <em><u>citing Amodei's blog</u></em></a><strong>, </strong>which at no point explains what a "country of geniuses in a datacenter" actually means or what the product might be or what he's going to do to increase revenue by <em>more than thirty billion dollars a year</em> by 2027.</p><p>But wait, The Information says it got a little more specific!</p><blockquote>Anthropic says its technology could transform office roles such as generating or reviewing legal paperwork and automating software engineering. It cited code repository GitLab and legal search firm LexisNexis as examples of customers. Up-and-coming startups such as Anysphere, which develops the Cursor coding assistant for programmers, are also major buyers of Claude software.</blockquote><p>So, just to be abundantly clear, it appears Anthropic's big plan is to "sell people more software to some people, maybe."</p><p><a href="https://www.wsj.com/tech/ai/ai-startup-anthropic-raising-funding-valuing-it-at-60-billion-19d0605a?ref=wheresyoured.at"><u>Anthropic is currently raising $2 billion at a $60 billion valuation</u></a> primarily based off of this trumped-up marketing nonsense. Why are we humoring these oafs?</p><h3 id="what-these-oafs-are-actually-doing"><strong>What These Oafs Are Actually Doing</strong></h3><p>When you put aside the hype and anecdotes, generative AI has languished in the same place, even in my kindest estimations, for several months, though it's really been years. The one "big thing" that they've been able to do is to use "reasoning" to make the Large Language Models "think" (they do not have consciousness, they are not "thinking," this just means using more tokens to answer a particular question and having multiple models check the work), which mostly results in them being a bit more accurate when generating an answer, but at the expense of speed and cost.</p><p>This became a little less exciting a month ago when<a href="https://www.wheresyoured.at/deep-impact/"> <u>DeepSeek released its open source "r1" model which performed similarly to reasoning products from companies like Google and OpenAI</u></a>, and while some argue it "built the model to game benchmarks," that is quite literally what every single model developer does. Nevertheless, the idea of "reasoning" being the "killer app" — despite the fact that nobody can really explain why it's such a big deal — is now quite dead.</p><p>As a result, the model companies are kind of flailing. In a recent post on Twitter, Sam Altman gave an "<a href="https://x.com/sama/status/1889755723078443244?ref=wheresyoured.at"><u>updated roadmap for GPT 4.5 and GPT-5</u></a>" where he described how OpenAI would be "simplifying" its product offerings, saying that GPT-4.5 would be OpenAI's "last non-chain-of-thought model," and that GPT-5 would be "a system that integrates a lot of our technology," including o3, OpenAI's "powerful" and "<a href="https://futurism.com/the-byte/openai-o3-cost-per-query?ref=wheresyoured.at"><u>very expensive</u></a>" reasoning model, which it...would also no longer release as a standalone model.</p><p>To break this down, Altman is describing his next model — GPT 4.5 — as launching in some indeterminate timeframe and doing something probably quite similar to the current GPT 4o model. In the case of GPT-5, it would appear that Altman is saying that it won't be a model at all, but some sort of rat king of different mediocre products, including o3, a product that he would no longer be letting you use.</p><p>I guess that's the future of this company, right? OpenAI will release models and uh, well. Uhh.</p><p><em>Uhhhhhhh.</em></p><p>Wait! Wait! OpenAI released a new product! It's called Deep Research, which lets you ask ChatGPT to generate a report by browsing the web. This is almost a cool idea. I sure hope that it doesn't make glaring mistakes and cost a shit-ton of money!</p><p>Anyway, <a href="https://www.platformer.news/chatgpt-deep-research-hands-on/?ref=wheresyoured.at"><u>let's go to Casey Newton at Platformer for the review</u></a>:</p><blockquote>Generally speaking, the more you already know about something, the more useful I think deep research is. This may be somewhat counterintuitive; perhaps you expected that an AI agent would be well suited to getting you up to speed on an important topic that just landed on your lap at work, for example.&nbsp; In my early tests, the reverse felt true. Deep research excels for drilling deep into subjects you already have some expertise in, letting you probe for specific pieces of information, types of analysis, or ideas that are new to you.<p>It’s possible that you can make this work better than I did. (I think all of us will get better at prompting these models over time, and presumably the product will improve over time as well.)</p></blockquote><p>Personally, when I ask someone to do research on something, I don't know what the answers will be and rely on the researcher to explain stuff through a process called "research." The idea of going into something knowing about it well enough to <em><strong>make sure the researcher didn't fuck something up</strong></em> is kind of counter to the point of <em>research itself.</em></p><p>Also: "I think all of us will get better at prompting-" Casey, we're paying them! We're paying them for them to do stuff for us!</p><p>Nevertheless, I did go and look up one of Casey's examples,<a href="https://chatgpt.com/share/67a15df0-d2a8-8003-a8df-f01c5ce82083?ref=platformer.news"> <u>specifically one about how the Fediverse could benefit publishers</u></a>.</p><p><strong>Let's do some research!</strong></p><blockquote>Despite Newton's fawning praise, the citations in this "deep research" are flimsy at best.<a href="https://www.twipemobile.com/what-is-the-fediverse-a-guide-for-publishers-and-the-uninitiated/?ref=wheresyoured.at#:~:text=Interoperability%3A%20Because%20ActivityPub%20enables%20different,who%20uses%20a%20different%20server"> <u>The first (and second) citation</u></a>s are from an SEO-bait article about the fediverse from a "news solutions" company called "Twipe" and is used to define "broad cross-platform reach." The next one is<a href="https://digiday.com/media/why-publishers-are-preparing-to-federate-their-sites/?ref=wheresyoured.at#:~:text=At%20least%20two%20digital%20media,driving%20readers%20to%20publishers%E2%80%99%20sites"> <u>from reputable digital advertising outlet Digiday</u></a>, but it's used to cite how sites like 404 Media and The Verge are "actively exploring the Fediverse to take more control over their referral traffic and onsite audience engagement," which is plagiarised ad-verbatim from the Digiday article.<p>After that, the next three citations are <em>posts from Hackernews, a web forum started by yCombinator </em>(</p><a href="https://news.ycombinator.com/item?id=34916396&amp;ref=wheresyoured.at#:~:text=Mastodon,now%20a%20pretty%20lonely%20place"><u>here's an example</u></a>). How is this "deep research" exactly?<p>In fact, this thing isn't well-researched at all. Across the following paragraphs, Deep Research cites the same Digiday article <em>eight times</em>, before going back to citing the same Twipe article again. It also, hilariously, says that federated posts "can simultaneously publish to [a] website and as a toot on federated platforms like Mastodon and Threads,"</p><a href="https://gizmodo.com/mastodon-toot-retired-twitter-tweet-equivalent-1849786221?ref=wheresyoured.at"> <u>a term that Mastodon retired two years ago</u></a>.<p>The next two citations are about</p><a href="https://blog.medium.com/medium-embraces-mastodon-19dcb873eb11?ref=wheresyoured.at#:~:text=air%E2%80%A6%20blog,a%20home%20in%20the%20fediverse"> <u>Medium's embrace of Mastodon</u></a>, followed by yet another citation of the Digiday article. Following that, Deep Research cites two different Reddit posts, a company called<a href="https://community.interledger.org/jeremiahlee/interledger-joins-the-fediverse-30fi?ref=wheresyoured.at#:~:text=Some%20people%20might%20worry%20that,over%20predominantly%20exclusive%20paid%20access"> <u>Interleger moving to the Fediverse</u></a>, which the report cites several more times, along with yet another forum post, <em>the very same Twipe post several more times</em>, and<a href="https://docs.bsky.app/docs/advanced-guides/atproto?ref=wheresyoured.at#:~:text=This%20distinction%20is%20intended%20to,choice"> <u>then the support documentation for social network Bluesky several more times</u></a>.<p>I won't go through more of the research paper citation by citation, but you'll be shocked to hear it mostly just cites Twipe and Hackernews and Reddit.</p><p>For now, Deep Research is only available on ChatGPT Pro, OpenAI's</p><a href="https://www.theregister.com/2025/01/06/altman_gpt_profits/?ref=wheresyoured.at"> <u>somehow-unprofitable</u></a> $200-a-month subscription,<a href="https://x.com/sama/status/1886220053219069995?ref=wheresyoured.at"> <u>though it's apparently coming to ChatGPT Plus in a limited capacity</u></a>.<p>Not impressed? Well what if I told you it was</p><a href="https://x.com/sama/status/1886220051092512979?ref=wheresyoured.at"> <u>very compute-intensive and expensive</u></a>? Oh, one other detail — the entire thing’s on the very <em>edge </em>of comprehensible. <p>Here’s a bit under funding models:</p><p><em><strong>"Memberships and Donations:</strong> A common monetization approach in the Fediverse (and across the open web) is voluntary support from the audience."</em></p><p>Nobody talks like this! This isn’t how human beings sound! I don’t like reading it! I don’t know how else to say this — there is something deeply unpleasant about how Deep Research reads! It’s uncanny valley, if the denizens of said valley were a bit dense and lazy. It’s quintessential LLM copy — soulless and almost, but <em>not quite</em>, right.&nbsp;</p><p>Ewww.</p></blockquote><p>So there you have it folks. OpenAI's next big thing is the ability to generate a report that you would likely not be able to use in any meaningful way anywhere, because while it can browse the web and find things and write a report, it sources things based on what it thinks can confirm its arguments rather than making sure the source material is valid or respectable. This system may have worked if the internet wasn't entirely poisoned by companies trying to get the highest ranking in Google, and if Google had any interest in making sure its results were high quality,<a href="https://www.wheresyoured.at/the-men-who-killed-google/"> <u>which it does not</u></a>.</p><p>I'm sorry, I know I sound like a hater, and perhaps I am, but this shit doesn't impress me even a little. Wow, you created a superficially-impressive research project that's really long and that cites a bunch of shit it found online that it made little attempt to verify? And said report took a while to generate, can only be produced if you pay OpenAI $200 each month, and it cost a bunch of money in compute to make?</p><p>Deep Research has the same problem as every other generative AI product. These models don't <em>know</em> anything, and thus everything they do — even "reading" and "browsing" the web — is limited by their training data and probabilistic models that can say "this is an article about a subject" and posit their <em>relevance</em>, but not truly understand their contents. Deep Research repeatedly citing SEO-bait as a primary source proves that these models, even when grinding their gears as hard as humanely possible, are exceedingly mediocre, deeply untrustworthy, and ultimately useless.</p><p>Furthermore, nothing about this product moves OpenAI toward profitability. In fact, I think they're doing the opposite. Deep Research uses OpenAI's o3 model<a href="https://futurism.com/the-byte/openai-o3-cost-per-query?ref=wheresyoured.at"> <u>which can cost as much as $1,000 a query</u></a>, and while I imagine these prompts aren't <em>that </em>expensive, they are still significantly more so than a regular query from ChatGPT.</p><p>The whole point of hiring a researcher is that you can rely on their research, that they're doing work for you that would otherwise take you hours. Deep Research is the AI slop of academia — low-quality research-slop built for people that don't really care about quality or substance, and it’s not immediately obvious who it’s for.&nbsp;</p><p>Surely, if you’re engaged enough to spend $200 on an OpenAI subscription and are aware of Deep Research, you probably know what SEO bait is, and can distinguish between low-quality and high-quality content. If you were presented with a document with such low-quality, repetitive citations, you’d shred it — and, if created by an intern, you’d shred them too. Or, at the very least, give them some stern words of guidance.&nbsp;</p><p>Let me put this in very blunt terms: we are more than two years into the generative AI boom and OpenAI's biggest, sexiest products are Deep Research — a product that dares to ask "what if you were able to spend a lot of compute to get a poorly-cited research paper," and <a href="https://www.wheresyoured.at/deep-impact/#:~:text=OpenAI%20is%20as,these%20tasks%20yourself.%22"><u>Operator, a compute-intensive application that rarely completes a task in minutes that would otherwise have taken you seconds</u></a>.</p><p>As an aside, SoftBank, the perennial money-losers that backed WeWork and WireCard and<a href="https://techcrunch.com/2023/05/11/softbank-vision-fund-loses-32-billion-in-a-year-on-startups-valuation-cut/?ref=wheresyoured.at"> <u>lost more than $30 billion in the last few years</u></a>,<a href="https://www.wsj.com/tech/softbank-in-talks-to-invest-up-to-25-billion-in-openai-03d653fc?mod=article_inline&amp;ref=wheresyoured.at"> <u>are trying to invest up to $25 billion in OpenAI</u></a>.</p><h3 id="i-feel-like-im-going-insane"><strong>I Feel Like I'm Going Insane</strong></h3><p>Everywhere you look, the media is telling you that OpenAI and their ilk are the future, that they're building "advanced artificial intelligence" that can take "human-like actions," but when you look at any of this shit for more than two seconds it's abundantly clear that it absolutely isn't and absolutely can't.</p><p>Despite the hype, the marketing, the tens of thousands of media articles, the trillions of dollars in market capitalization, none of this feels real, or at least real enough to sustain this miserable, specious bubble. People like Marc Benioff claiming that "<a href="https://www.cnn.com/2025/01/23/business/davos-marc-benioff-salesforce-ai-prediction-intl/index.html?ref=wheresyoured.at"><u>today's CEOs are the last to manage all-human workforces</u></a>" are doing so to pump up their stocks rather than build anything approaching a real product. These men are constantly lying as a means of sustaining hype, never actually discussing <strong><em>the products they sell in the year 2025</em></strong>, because then they'd have to say "what if a chatbot, a thing you already have, was more expensive?"</p><p>The tech industry — and part of our economy — is accelerating at speed into a brick wall, driven by people like Sam Altman, Dario Amodei, Marc Benioff, and Larry Ellison, all men that are incentivized to have you value their companies based on something <em>other</em> than what their businesses actually sell.&nbsp;</p><p>We are in the midst of a group delusion — a consequence of an economy ruled by people that do not participate in labor of any kind outside of sending and receiving emails and going to lunches that last several hours — where the people with the money do not understand or care about human beings.&nbsp;</p><p>Their narrative is built on a mixture of hysteria, hype, and deeply cynical hope in the hearts of men that dream of automating away jobs that they would never, ever do themselves. Altman uses his digital baba yaga as a means to stoke the hearts of weak-handed and weak-hearted narcissists that would sooner shoot a man dead than lose a dollar, even if it means making their product that much worse. CEOs have the easiest jobs in the world, and no job is easier than Satya Nadella waving to the Microsoft 365 staff and saying “make them put AI in it, pronto” and telling Microsoft CFO Amy Hood that “we must make sure that Bing has generative AI” before jetting off to Davos to <a href="https://www.youtube.com/watch?v=rUO7H7OtW3E&amp;ref=wheresyoured.at"><u>yell that he intends to burn more money than ever on GPUs</u></a>.</p><p>Sam Altman believes you are stupid. He believes you are a moron that will slurp up whatever slop he gives you. Deep Research and Operator are both half-products that barely brush against the fabric of their intended purposes, and yet the media screams and applauds him like he's a gifted child that just successfully tied his shoes.</p><p>I know, I know, I'm a hater, I'm a pessimist, a cynic, but I need you to fucking listen to me: everything I am describing is unfathomably dangerous,<a href="https://slate.com/technology/2025/02/ed-zitron-interview-big-tech-ai-criticism.html?ref=wheresyoured.at#:~:text=With%20ChatGPT%20and,really%20matters%20here%3F"> <u>even if you put aside the environmental and financial costs</u></a>.</p><p>Let me ask you a question: what's more likely?</p><p>That OpenAI, a company that has only ever burned money, that appears completely incapable of making a truly usable, meaningful product, somehow makes its products profitable, and then somehow creates a truly autonomous artificial intelligence?</p><p>Or that OpenAI, a company that has consistently burned billions of dollars, that has never shown any sign of making a profit, that has in two years released a selection of increasingly-questionable and obtuse products, actually runs out of money?</p><p>How does this industry actually continue? Do OpenAI and Anthropic continue to raise tens of billions of dollars every six months until they work this out?<a href="https://www.datacenterdynamics.com/en/news/morgan-stanley-hyperscaler-capex-to-reach-300bn-in-2025/?ref=wheresyoured.at"> <u>Do the hyperscalers keep spending hundreds of billions of dollars in capital expenditures for little measurable return</u></a>?</p><p>And fundamentally, when will everybody start accepting that the things that AI companies are saying have absolutely nothing to do with reality? When will the media stop treating every single expensive, stupid, irksome, quasi-useless new product is magical, and start asking these people to show us the fucking <em>future</em> already?</p><p>Generative AI is a financial, ecological and social time bomb, and I believe that it's fundamentally damaging the relationship between the tech industry and society, while also shining a glaring, blinding light on the disconnection between the powerful and regular people. The fact that Sam Altman can ship such mediocre software and get more coverage and attention than every meaningful scientific breakthrough of the last five years combined is a sign that our society is sick, our media is broken, and that the tech industry thinks we're all fucking morons.</p><p>This entire bubble has been inflated by hype, and by outright lies by people like Sam Altman and Dario Amodei, their lies perpetuated by a tech media that's incapable of writing down what's happening in front of their faces. Altman and Amodei are raising billions and burning our planet based on the idea that their mediocre cloud software products will somehow wake up and automate our entire lives.</p><p>The truth is that generative AI is as mediocre as it is destructive, and those pushing it as "the future" that "will change everything" are showing how much contempt they have for the average person. They believe that they can shovel shit into our mouths and tell us it's prime rib, that these half-assed products will change the world and that as a result they need billions of dollars and to<a href="https://www.datacenterdynamics.com/en/news/ai-data-centers-causing-distortions-in-us-power-grid-bloomberg/?ref=wheresyoured.at"> <u>damage our power grid</u></a>.</p><p>I know this has been a rant-filled newsletter, but I'm so tired of being told to be excited about this warmed-up dogshit. I'm tired of reading stories about Sam Altman<a href="https://www.techradar.com/computing/artificial-intelligence/sam-altman-says-ai-is-progressing-faster-than-moores-law-as-he-predicts-agi-is-coming-into-view-and-its-leaving-me-worried-about-the-future?ref=wheresyoured.at"> <u>perpetually saying that we're a year away from "everything changing</u></a>" that exist only to perpetuate the myth that Silicon Valley gives a shit about solving anyone's problems other than<a href="https://www.wheresyoured.at/rotcombubble/"> <u>finding new growth markets for the tech industry</u></a>.&nbsp;</p><p>I refuse to sit here and pretend that any of this matters. OpenAI and Anthropic are not innovators, and are antithetical to the spirit of Silicon Valley. They are management consultants dressed as founders, cynical con artists raising money for products that will never exist while peddling software that destroys our planet and diverts attention and capital away from things that might solve real problems.</p><p>I'm tired of the delusion. I'm tired of being forced to take these men seriously. I'm tired of being told by the media and investors that these men are building the future when the only things they build are mediocre and expensive. There is no joy here, no mystery, no magic, no problems solved, no lives saved, and very few lives changed other than new people added to Forbes' Midas list.</p><p>None of this is powerful, or impressive, other than in how big a con it’s become. Look at the products and the actual outputs and tell me — does any of this actually feel like the future? Isn’t it kind of weird that the big, scary threats they’ve made about how AI will take our jobs never seem to translate to an actual product? Isn’t it strange that despite all of their money and power they’re yet to make anything truly useful?&nbsp;</p><p>My heart darkens, albeit briefly, when I think of how cynical all of this is. Corporations building products that don't really do much that are being sold on the idea that one day they might, peddled by reporters that want to believe their narratives — and in some cases actively champion them. The damage will be tens of thousands of people fired, long-term environmental and infrastructural chaos, and a profound depression in Silicon Valley that I believe will dwarf the dot-com bust.</p><p>And when this all falls apart — and I believe it will — there will be a very public reckoning for the tech industry.</p>
    </article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[My washing machine refreshed my thinking on software estimation (417 pts)]]></title>
            <link>https://www.cosive.com/blog/my-washing-machine-refreshed-my-thinking-on-software-effort-estimation</link>
            <guid>43085876</guid>
            <pubDate>Tue, 18 Feb 2025 03:45:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cosive.com/blog/my-washing-machine-refreshed-my-thinking-on-software-effort-estimation">https://www.cosive.com/blog/my-washing-machine-refreshed-my-thinking-on-software-effort-estimation</a>, See on <a href="https://news.ycombinator.com/item?id=43085876">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>I recently had a saga with a washing machine that reminded me why one of the most feared and hated tasks for software developers starts with the question:</p><p><strong><em>“So how long will it take you to build that?”</em></strong></p><figure><p><img src="https://cdn.prod.website-files.com/64753857f50bbd0ca3a5fb14/67b3e93f8979b7255479e718_AD_4nXettmzPU7UXMfVTKRSFXfOYF6S4OPso6G4dMyzlgb7rYRMlZBVBiJ4t_iLo2cXkNCJjbYpWGNnMWb5Ozd00eDVtauoWQ966jRpjkFYtkRwnT1nPHT435fnn-gZo927Mw-kHv9Ok9A.jpeg" loading="lazy" alt=""></p><figcaption><em>The familiar appliance luring me into a false sense of security</em></figcaption></figure><p>I just moved house. This was the first time I've ever moved into a home that's just been built, making me the first occupant.</p><p>One of the inevitable jobs on day one is hauling the washing machine into position and connecting it to water and power. This is the ninth house move of my life so I figured this installation would be like all the others.</p><p>Based on experience, it usually takes me 10 minutes or less to install a washing machine. Surely 10 minutes was a reasonable estimate for this time too.</p><div><p>This time, though, it took me 4 whole hours. Why was my estimate so off?</p><p>Here's how and why it reminded me so much of the dark art of software effort estimation.</p><p><strong>Blocker #1</strong></p></div><p>I look at the laundry compartment that the washer will sit in. The power point is in another compartment but the builder has forgotten to drill a hole in the shelf to pass that through. I can’t power the washing machine without that.</p><p><strong>Solution #1</strong></p><p><strong>‍</strong>I don't have a tool to make a big enough hole, but with a little research I find out a hole saw is the way to do it. It's an open-ended drum with serrated saw teeth that you mount on a drill to do the cutting. I go to my local hardware store, get some advice on what to get, and buy a 60mm hole saw.</p><p><strong>Blocker #2</strong></p><p><strong>‍</strong>I get home to use the hole saw, and find out that my consumer grade drill can't even fit the hole saw in the chuck - it's too big. I don't have any adapter that can fit it either.</p><p><strong>Solution #2</strong></p><p><strong>‍</strong>I go back to the hardware store. Another much more experienced-looking staff member tells me (with some slightly rude disdain for my ignorance) that consumer grade drills can't fit or drive hole saws - I need a more powerful trade drill that takes bigger bits. Perhaps so.</p><p>I take his word for it and he lends me his much better drill for $10 for the afternoon and I take it back home. You have to respect the hustle at least. At home, I find that this drill kicks like a mule but I can now mount the hole saw OK.</p><p>I get to drilling and after 25 minutes of learning how to keep it straight and the wonders of noise cancelling earphones, I have a neat 60mm hole with a plastic insert. The cable is through and the power is connected! Job done?</p><figure><p><img src="https://cdn.prod.website-files.com/64753857f50bbd0ca3a5fb14/67b3e93fcc990c91fce4dbf1_AD_4nXcQulpnSpcp2KumD9ENeqVn9x0-pTi6XKhKpD28aefS2qXt8hx3MZXrv6plGKFyAqrjbU8yZpaJeSwK3N_gIUx6_eOiopl-U-vu9mXrA-yN61Vku1vT4vl-eNlaGirk_Hj7-cUMfQ.png" loading="lazy" alt=""></p><figcaption><em>Hole made and presumably the end of this blog post</em></figcaption></figure><p><strong>Blocker #3</strong></p><p>I pass the inlet and outlet hoses through another hole the builder has this time remembered to drill for that purpose. However, where these hoses worked fine at my old place, they're now too short in the new setup.	</p><p><strong>Solution #3</strong></p><p><strong>‍</strong>I go to a big hardware store. I notice that they sell hoses with a concertina design which can expand from 1.2m to 4m. Hey, MY hoses look like just that too - rather than spending $80 on new hoses, maybe I can just expand the ones I have!</p><p><strong>Blocker #4</strong></p><p>I go home to eagerly expand my hoses. While they look remarkably similar - some would say misleadingly so - they do not, in fact, act like concertinas and remain stubbornly short.</p><p><strong>Solution #4</strong></p><p><strong>‍</strong>I go back to the hardware store and spend $80 to buy new hoses. I go home and install them. Job done?</p><p><strong>Blocker #5</strong></p><p><strong>‍</strong>As I connect the inlet hose to the cold water tap, I discover for the first time that it's covered by a steel cap which is fastened very tightly - certainly too tightly to remove by hand. The cap measures 35mm across and I don't have a shifting spanner big enough to handle it.</p><p><strong>Solution #5</strong></p><p>Back to the hardware store to buy a bigger shifting spanner. My fifth trip out. Back at home with my new tool, I can easily take off the tap's cap now and connect the water. Success!</p><figure><p><img src="https://cdn.prod.website-files.com/64753857f50bbd0ca3a5fb14/67b3e93fddd6445181019de1_AD_4nXeztmVe8Qk_iQofAFWLUI355gbK8nHzYbfT1d9i-x8ylPKCnSA2Zr_c0pxtsoenz8eBc2S68-6wWnLVFHoA36vwN0vpD_RBC6rjAWONIGPfCykhClFtg-hiJylVHrQbtYXVFkLzWw.jpeg" loading="lazy" alt=""></p><figcaption><em>The cold water tap’s now-removed cap which had been sneakily hiding in plain sight</em></figcaption></figure><p>I connect the washing machine's outlet hose with dirty water to a small spigot under the U-bend beneath the sink. This is the first time I've seen this kind of method to remove the waste water.</p><figure><p><img src="https://cdn.prod.website-files.com/64753857f50bbd0ca3a5fb14/67b3e93f3b46343d1ec70143_AD_4nXeHPwRv60ygpO6VYNcoaRxaCG3VjoR97Mr3HYT2aRZwZfylUKir6CqGr68IhmOEOi4D40UMLW-dDyO7f5DgzCMzf22XcjlOG6oNKbBWPq12ZB1Dg7fcPQGpDnMyFGWXh2vNWG5ZQg.jpeg" loading="lazy" alt=""></p><figcaption><em>The spigot in question receiving the outlet hose. And yes, I should have a clamp on that.</em></figcaption></figure><p>I run the machine. I dust off my hands and relax, job done.</p><p><strong>Blocker #6</strong></p><p>After 20 minutes, the washing machine bleeps with an E39 error. Apparently this is a drainage obstruction. I’m resigned rather than surprised at this point.</p><p><strong>Solution #6</strong></p><p><strong>‍</strong>Poking an exploratory screwdriver into the U-bend's spigot, I find it ends not with a hole into the U-bend but with a PVC wall. But of course it does: if you didn't have a hose connected to the spigot, waste water coming down the U-bend could back up and spill out below your sink. It turns out you have to drill out the PVC wall before connecting the hose, something I had no idea that was required before beginning the project.</p><p>I don't have a spade bit with the perfect width to open the hole, so I pick the biggest drill bit I have to hand. I contort myself to get under the sink to drill. It's not great but it gets the job done.</p><p>I connect the drainage pipe again. I run the washing machine. It works. After five trips to hardware shops to pick up supplies and drop off borrowed drills, I am too tired to celebrate much.</p><p>My initial 10 minute time estimate has gone 24 times over my time budget at 4 hours, including my five round trips to hardware stores.&nbsp;</p><h2>What did I learn?</h2><p>My woeful underestimate was informed by multiple sets of experience installing washing machines, but I had never installed a washing machine in a <em>new</em> house which presented a whole host of challenges I had no idea even existed before I began. “Unknown unknowns” as we might say.</p><p>As I was thinking about it the next day, <strong>it reminded me in a very physical form why a lot of why software development estimation is so hard.</strong> So often we're asked to build something we've built before, so we estimate with confidence that it might take a week.</p><p>What we fail to factor in is that while 90% of the project will be the same, there's going to be <strong>one critical difference</strong> between the last 5 projects and this project that seemed trivial at the time of estimation but will throw off our whole schedule. I could be one or all of:</p><p>1) Our well-used task-running framework we were going to use for a relatively small part of the system is totally unmaintained now and we'd have to fork it to make it fit for purpose again.</p><p>2) Our entire development tooling ecosystem was obsoleted 18 months after the last time we did this, so we're going to be learning the sharp edges of a whole new toolchain from scratch.</p><p>3) We find that our OS version has moved on and no longer supports key requirements for our existing dependencies, requiring rethinking or developing from scratch.</p><p>4) We need our infrastructure stack to use one component we've never used before and it doesn't work anything like we expected.</p><p>5) We otherwise find there are unstated, totally unknown, or seemingly trivial requirements that significantly change the effort that's going to be required.</p><p>A new house blew out my effort assumptions this time.&nbsp;The shifting sands of software development practices are like moving into new houses multiple times each year.</p><div><p><strong>So what do we do about it when we don’t even know what questions to ask before setting out on any software project, especially one that ostensibly seems routine?</strong></p><p>For my washing machine, they were unknown unknowns - I didn’t even expect there’d be a hole to drill, new hoses to buy, a cold water tap cap to remove, and a spigot PVC wall to drill out.</p></div><p>Yes, we can (and must) gather requirements as best we can, but at some point we’ll end up on the ground and battling dozens of blockers we didn’t expect to hit, even when we thought the territory looked very familiar and a 10 minute job turns into 4 hours.&nbsp;</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Sony FX-300 Jackal: A technological marvel of the late 70s (2021) (118 pts)]]></title>
            <link>https://swling.com/blog/2021/03/the-sony-fx-300-jackal-a-holy-grail-technological-marvel-of-the-late-70s/</link>
            <guid>43085687</guid>
            <pubDate>Tue, 18 Feb 2025 03:07:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://swling.com/blog/2021/03/the-sony-fx-300-jackal-a-holy-grail-technological-marvel-of-the-late-70s/">https://swling.com/blog/2021/03/the-sony-fx-300-jackal-a-holy-grail-technological-marvel-of-the-late-70s/</a>, See on <a href="https://news.ycombinator.com/item?id=43085687">Hacker News</a></p>
<div id="readability-page-1" class="page"><article id="post-48193">
				<!-- .entry-header -->

				<div>
			<p><a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-20.jpeg"><img decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-20.jpeg" alt="" width="640" height="816" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-20.jpeg 640w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-20-235x300.jpeg 235w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-20-624x796.jpeg 624w" sizes="(max-width: 640px) 100vw, 640px"></a></p>
<p>I’m a child of the 1970s and I’m glad I never knew about the <strong>Sony FX-300</strong> “Jackal 300.” It would have been the ultimate unobtainable machine of my dreams…this, even despite the lack of shortwave.</p>
<p><a href="https://www.ebay.com/sch/i.html?_from=R40&amp;_trksid=p2047675.m570.l1313&amp;_nkw=Sony+FX-300&amp;_sacat=0&amp;mkcid=1&amp;mkrid=711-53200-19255-0&amp;siteid=0&amp;campid=5337672000&amp;customid=&amp;toolid=10001&amp;mkevt=1" target="_blank" rel="noopener">I was browsing eBay yesterday</a> when I saw one of these pop up in the search results.</p>
<p><a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-2.jpeg"><img decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-2.jpeg" alt="" width="800" height="980" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-2.jpeg 800w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-2-245x300.jpeg 245w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-2-768x941.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-2-624x764.jpeg 624w" sizes="(max-width: 800px) 100vw, 800px"></a></p>
<p>Somehow, this radio made it past my RADAR. How? I’m guessing it’s because this model was primarily sold in Japan–?</p>
<p>The FX-300 sports:</p>
<ul>
<li>A mini CRT television screen (to watch <em>Voyagers!, Space 1999, G-Force,</em> and <em>Ultraman</em>)</li>
<li>Precision analog tuning</li>
<li>Top-Mounted cassette player/recorder</li>
<li>AM/FM reception</li>
<li>Built-in speaker</li>
<li>Earphone/Mic external ports</li>
<li>And let’s face it: <strong>a killer design that smacks of the Apollo era&nbsp;</strong></li>
</ul>
<p>Other than the <a href="https://swling.com/blog/2020/04/a-trusted-companion-the-panasonic-rf-2200-never-lets-me-down/">Panny RF-2200</a>, I’m not sure if a radio could possibly satisfy more of my design cravings.&nbsp; Here are a few images I’ve unashamedly swiped from eBay:</p>
<p><a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8.jpeg" alt="" width="1080" height="1080" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8.jpeg 1080w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8-300x300.jpeg 300w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8-1024x1024.jpeg 1024w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8-150x150.jpeg 150w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8-768x768.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-8-624x624.jpeg 624w" sizes="auto, (max-width: 1080px) 100vw, 1080px"></a> <a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9.jpeg" alt="" width="1080" height="1080" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9.jpeg 1080w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9-300x300.jpeg 300w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9-1024x1024.jpeg 1024w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9-150x150.jpeg 150w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9-768x768.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-9-624x624.jpeg 624w" sizes="auto, (max-width: 1080px) 100vw, 1080px"></a> <a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10.jpeg" alt="" width="1080" height="1080" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10.jpeg 1080w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10-300x300.jpeg 300w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10-1024x1024.jpeg 1024w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10-150x150.jpeg 150w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10-768x768.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-10-624x624.jpeg 624w" sizes="auto, (max-width: 1080px) 100vw, 1080px"></a> <a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11.jpeg" alt="" width="1080" height="1080" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11.jpeg 1080w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11-300x300.jpeg 300w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11-1024x1024.jpeg 1024w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11-150x150.jpeg 150w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11-768x768.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-11-624x624.jpeg 624w" sizes="auto, (max-width: 1080px) 100vw, 1080px"></a> <a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12.jpeg" alt="" width="1080" height="1080" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12.jpeg 1080w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12-300x300.jpeg 300w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12-1024x1024.jpeg 1024w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12-150x150.jpeg 150w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12-768x768.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-12-624x624.jpeg 624w" sizes="auto, (max-width: 1080px) 100vw, 1080px"></a><a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-5.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-5.jpeg" alt="" width="675" height="1200" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-5.jpeg 675w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-5-169x300.jpeg 169w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-5-576x1024.jpeg 576w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-5-624x1109.jpeg 624w" sizes="auto, (max-width: 675px) 100vw, 675px"></a><a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-3.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-3.jpeg" alt="" width="800" height="966" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-3.jpeg 800w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-3-248x300.jpeg 248w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-3-768x927.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-3-624x753.jpeg 624w" sizes="auto, (max-width: 800px) 100vw, 800px"></a> <a href="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300.jpeg"><img loading="lazy" decoding="async" src="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300.jpeg" alt="" width="800" height="1003" srcset="https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300.jpeg 800w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-239x300.jpeg 239w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-768x963.jpeg 768w, https://swling.com/blog/wp-content/uploads/2021/03/Sony-FX-300-Jackal300-624x782.jpeg 624w" sizes="auto, (max-width: 800px) 100vw, 800px"></a></p>
<p>What a Holy Grail machine, indeed! I love the tactile mechanical switches, analog dials, speaker grills, selection switches, and even (especially) the metal stand off bar at the top to protect those brilliant cassette controls.</p>
<p>I’m very curious if any <em>SWLing Post</em> readers have ever owned (or still own) a Sony FX-300. (Kei Niigata, I’ll be terribly disappointed if I learn you’ve never owned one!)</p>
<p>Please comment!</p>

					</div><!-- .entry-content -->
		
		<!-- .entry-meta -->
	</article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A web platform for using YouTube as a drum sequencer (130 pts)]]></title>
            <link>https://youtubesequencer.com/</link>
            <guid>43085492</guid>
            <pubDate>Tue, 18 Feb 2025 02:34:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://youtubesequencer.com/">https://youtubesequencer.com/</a>, See on <a href="https://news.ycombinator.com/item?id=43085492">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Have you ever seen a goth downtown? (188 pts)]]></title>
            <link>https://danco.substack.com/p/have-you-ever-seen-a-goth-downtown</link>
            <guid>43084958</guid>
            <pubDate>Tue, 18 Feb 2025 01:08:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://danco.substack.com/p/have-you-ever-seen-a-goth-downtown">https://danco.substack.com/p/have-you-ever-seen-a-goth-downtown</a>, See on <a href="https://news.ycombinator.com/item?id=43084958">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article><div dir="auto"><p>The comic Chris Fleming has a great bit:</p><p><span>“[The singer] Saint Vincent said something the other day… ‘I am so glad that I moved to New York City and met all the other freaks like me.’ Those aren’t </span><em>freaks</em><span>, Saint Vincent, okay? Those are attractive people with heavily vetted idiosyncrasies. Every eccentric fashion choice has been run through a think tank of NYU undergrads that would blow your hair back. You want to see a freak? Go to Albany.”</span></p><div id="youtube2-ugm_QuQ5RbY" data-attrs="{&quot;videoId&quot;:&quot;ugm_QuQ5RbY&quot;,&quot;startTime&quot;:null,&quot;endTime&quot;:null}" data-component-name="Youtube2ToDOM"><p><iframe src="https://www.youtube-nocookie.com/embed/ugm_QuQ5RbY?rel=0&amp;autoplay=0&amp;showinfo=0&amp;enablejsapi=0" frameborder="0" loading="lazy" gesture="media" allow="autoplay; fullscreen" allowautoplay="true" allowfullscreen="true" width="728" height="409"></iframe></p></div><p>I chuckle because, first of all, everyone knows someone like this. Whatever their domain, they’ve styled themselves with great flair as “edgy”, or an “outcast”; and have actually convinced themselves that they’re avant-garde. But their actual deal is cookie-cutter counterculture, like it came out of a street punk paint-by-numbers kit. Whatever Albany is for them, they would never be caught there.</p><p><span>There’s nothing wrong with this; it’s more endearing than it is off-putting. But it’s on my mind recently as I try to process everything going on with AI tools, and how quickly they’re getting adopted for creative work. I can’t shake the phrase, </span><strong>“Attractive people with heavily vetted idiosyncrasies” as a description for what AI as a medium wants to produce.</strong><span> (And conversely, the punchline: Y</span><em>ou want to see a freak? Go to pump.fun.</em><span>)</span></p><p><span>To be clear up front, I’m not an AI luddite in any sense. All these new tools let more people make things, and that’s just straightforwardly great. But there’s something a little nauseous about how we express idiosyncrasy, surprise, or character in this new medium. Like the singer in the joke, there’s just a little too much </span><em>surface confidence</em><span> in AI output about its self-determination; while the medium keeps vigilance for possible objections.</span></p><p>For plenty of purposes, that presentation is perfect. For example, I absolutely love how matter-of-fact Perplexity is when I’m using it as a reading companion. Perplexity Pro has changed how I read books that assume you know a lot of context; particularly novels. (I’m currently reading The Magic Mountain, which calls on a maze of concepts that battled for supremacy in early 20th century Europe. Having all that context on hand feels like magic.) Similarly, it’s not that AI is incapable of thinking about “style” as a characteristic; quite the opposite. It’s cool that AI ca write code to faithfully render certain syntactical conventions upon request; that’s a real feature.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png" width="988" height="274" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:274,&quot;width&quot;:988,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:55016,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:false,&quot;topImage&quot;:true,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F28c8bba2-c0fb-4b58-98b1-d54c5fac0c30_988x274.png 1456w" sizes="100vw" fetchpriority="high"></picture></div></a></figure></div><p><span>But there is still a piece that bugs me: the feeling like it’s perpetually checking in with a hundred different NYU think tanks to make sure it hasn’t said anything </span><em>actually</em><span> surprising. And that’s what makes me wonder about this scaffolding getting set up everywhere, structuring how we learn and think and make things. </span></p><p>It wasn’t always like that. Early on, particularly with images, the trope about AI was that it compulsively hallucinated extra legs, fingers, and other demented dreamscapes into the medium as a matter of course. And the textures and perspectives it’d imagine up, while not always “correct”, had real character to them on occasion.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png" width="956" height="746" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/e2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:746,&quot;width&quot;:956,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fe2cf3ff1-92c4-4fb6-8222-9ce739b9f6e4_956x746.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>It’s mostly gone now, and I kind of miss it. This tweet nailed it, except it’ll be in six years, not twenty:</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png" width="980" height="290" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:290,&quot;width&quot;:980,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:57302,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F4e300888-93f7-49ff-97ea-64182e705c1a_980x290.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Getting rid of hallucination was a necessary step towards getting AI ready to do real work. And a lot of the way we’ve done it, beyond just training models harder, is by getting it to “reason”, in many parallel interrogations, about its thought process - “Have I gone down wrong paths here? Was there a more appropriate path I should’ve taken?” And this machine introspection, I suspect, is functionally analogous to the NYU undergrads in the joke. It’s almost as if there’s massively parallel “second-guessing” infrastructure getting put into place everywhere that makes sure, “Whoops! This looks like </span><em>a little too original</em><span> thought. Let’s retrace our steps and make sure we’re good with the think tank.” And the artist in me is naturally going to be a bit suspicious.</span></p><p>So, if you’ve made it this far in the essay, you’re probably wondering about the goths and whether they are downtown. Why are we even talking about goths at all?</p><p><span>Goths are a great test case for whether an environment is </span><em>actually </em><span>conducive to own-rooted self expression. While there are </span><a href="https://www.litlookzstudio.com/blogs/news/types-of-goth" rel="">many kinds of goth</a><span> (goth taxonomy is beyond the scope of this post), I’ll generalize just to say that generally, goths have a quiet confidence, which manifests externally as shyness. Real goths actually care about authenticity of a self-determined style, as opposed t</span><em>o</em><span> caring about being </span><em>perceived</em><span> as “authentically rebellious”, like the Saint Vincent joke. So I think we can intuit that environments where goths naturally gather might have some creativity-nurturing characteristics, and vice versa.</span></p><p><span>In fact, you don’t usually see goths downtown. You see them in quiet malls, in the suburbs, farther out. There are actually lots of country goths, which has become a delightful bit of Americana in tiny rural towns today. Not really cities, though. Goths emerge more naturally under conditions of </span><em>small</em><span> numbers of people seeing you </span><em>all the time</em><span>, rather than conditions of </span><em>large </em><span>numbers of people seeing you a little bit.</span></p><p><span>I don’t think this is a coincidence. Subcultures flourish in places where a smaller number of people see you every day, but they see you more consistently - letting our creative forms of self-expression more successfully burrow into interesting local possibilities. The city, in contrast, means periodically interrogating your style choices from the scrutiny of </span><em>many</em><span> different people, which steers you towards “conventionally edgy”.</span></p><p><span>Let me try and illustrate this. On the left is what happens in the city: you’re getting periodically evaluated by </span><em>many different observer perspectives</em><span>, whereas out where there’s space, the evaluation function is a smaller group, but repeatedly over time.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png" width="1456" height="519" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/fc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:519,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:307777,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Ffc19f10f-9764-4624-b63b-daad5f59921a_1740x620.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>Most of my lived experience with this kind of thing comes from playing in a band, where I saw a similar thing happen in our music scene. The bands from the big cities (Toronto, Montreal) were all clearly inspired by each other, and converged to a consistent style. Meanwhile, there was one band called the Expos from the distant suburb of Newmarket, Ontario, which despite being definitely “in our scene”, </span><a href="https://www.youtube.com/watch?v=gTn_TPPQmu0&amp;ab_channel=PeterPan" rel="">sounded like nothing I’ve ever heard before or since</a><span>. Their sound evolved completely own its own; it followed its own rules, and not ours. They obviously cared about what </span><em>someone</em><span> thought (all bands do); but they found their own sound.</span></p><p>Another example that comes to mind is this David Perell’s series of observations about “everything looking the same now”; in this case, company logos all moving to a narrow band of sans serif fonts. There are many possible explanations here, like homogenous design tools, but the Occam’s Razor answer is simply that these brands have global audiences now, who are now vetting these logos for “deficiencies” from many different cultural vantage points. And so the result is something safe and unsurprising, more of the time than before.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png" width="990" height="1012" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:1012,&quot;width&quot;:990,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:210503,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F3a05cb65-d6b2-4fcc-9750-df3949c52f35_990x1012.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>I don’t think we have good language for articulating this dichotomy: of “narrow pressure from specific people that forges distinct style” (i.e. goths at the mall) versus “broad pressure to satisfy a perception of authenticity that ultimately minimizes surprise.” (The attractive people with highly vetted idiosyncrasies.) I think it’s worth ruminating on the tradeoffs, though. Particularly if the AI products assisting us now are successfully trained to not hallucinate anymore, but as a result, put infrastructure all around us that guides our creative work into invisible conventions.</p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png" width="1324" height="464" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:464,&quot;width&quot;:1324,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:187089,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F466d59e8-25aa-4638-87d8-b71c3a1c47c9_1324x464.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p><span>A friend of mine had an alternate visual portrayal: </span><em>“Your persona is a circle on a 2D plane, starting out near the boring origin. Unusual outcomes are far from the origin. Scrutiny by another is a vector that perturbs the circle. In the city the vectors come from many directions, but cancel out and you remain more or less a circle. In the country you get repeated perturbation by a few vectors that deforms you into a spiky, interesting shape.”</em></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png" width="1456" height="475" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/d6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:475,&quot;width&quot;:1456,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:null,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:null,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2Fd6351ad5-4322-4648-8500-5f3c232f4228_1888x616.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>I’m a pretty optimistic person though, so I don’t want to get stuck on a “RIP Creativity” pity blog when there are plenty of reasons to be excited.</p><p><span>First of all, the most encouraging sign is that suddenly everyone is tinkering with computers again. When the initial ChatGPT came out there was this huge burst of people just playing with it, which seemed obvious in the excitement of the moment. But then we didn’t stop; the products kept getting better; and that burst of tinkering became habit-forming for a critical mass of people. That’s why I’m especially dismissive of a storyline that a certain group of people really wants to be true, which goes “</span><a href="https://techcrunch.com/2025/02/10/is-ai-making-us-dumb/" rel="">AI is making us dumber</a><span>”, which says a lot more about you than it does about AI or the people using it.</span></p><p><span>I’m encouraged by people who talk about their AI setups using the same words that musicians use to talk about their guitar amps or pedalboards. This is a good sign. Obsessing over gear - not over purchasing gear exactly, but anything that feels like “how do I get a particular kind of crunch out of this preamp” is a great sign for the medium because it’s a format where you look at your own output </span><em>serially</em><span> over time and develop a style that you actually want.</span></p><div><figure><a target="_blank" href="https://substackcdn.com/image/fetch/f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png" data-component-name="Image2ToDOM" rel=""><div><picture><source type="image/webp" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_webp,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 1456w" sizes="100vw"><img src="https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png" width="1002" height="578" data-attrs="{&quot;src&quot;:&quot;https://substack-post-media.s3.amazonaws.com/public/images/6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png&quot;,&quot;srcNoWatermark&quot;:null,&quot;fullscreen&quot;:null,&quot;imageSize&quot;:null,&quot;height&quot;:578,&quot;width&quot;:1002,&quot;resizeWidth&quot;:null,&quot;bytes&quot;:829586,&quot;alt&quot;:null,&quot;title&quot;:null,&quot;type&quot;:&quot;image/png&quot;,&quot;href&quot;:null,&quot;belowTheFold&quot;:true,&quot;topImage&quot;:false,&quot;internalRedirect&quot;:null,&quot;isProcessing&quot;:false}" alt="" srcset="https://substackcdn.com/image/fetch/w_424,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 424w, https://substackcdn.com/image/fetch/w_848,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 848w, https://substackcdn.com/image/fetch/w_1272,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 1272w, https://substackcdn.com/image/fetch/w_1456,c_limit,f_auto,q_auto:good,fl_progressive:steep/https%3A%2F%2Fsubstack-post-media.s3.amazonaws.com%2Fpublic%2Fimages%2F6a52f2e8-f0ec-4366-be67-958a4c878410_1002x578.png 1456w" sizes="100vw" loading="lazy"></picture></div></a></figure></div><p>It’s also good when you see people obsessing over other people’s setups: the culture of sharing and comparing prompts on Twitter feels similar to how musicians argue over how to mic a snare drum. This is all directionally very good for the medium.</p><p><span>If there’s a takeaway lesson from this, I think it’s that </span><strong>parallel interrogation of a creative process leads to boring outcomes; serial investigation gives you creative outcomes.</strong><em> </em><span>AI as a medium </span><em>itself</em><span> contains all of this “parallel interrogation” infrastructure that I’m wary about, but how people </span><em>use</em><span> AI seems to counterbalance this: it naturally lends to serial “tinkering” behaviour, which offsets that worry for me.</span></p><p>I’m interested to see whether we reach a point like with guitar amps, where the industry understands the “crunch and fuzz” that breathes life into the art, with the craft of using AI well. If you know of great examples where this is already happening, please send them to me, I’d love to see them. Not that there’s anything wrong with “attractive people with heavily vetted idiosyncrasies” as an inherent quality of the medium, but you need a goth dial somewhere too.</p><p><em><span>If you’ve made it this far: thanks for reading! I’m back writing here for a limited time, while on parental leave from Shopify. For email updates you can subscribe here on Substack, or find </span><a href="https://alexdanco.com/2025/02/07/manifest-destiny-returns/" rel="">an archived copy</a><span> on </span><a href="https://alexdanco.com/" rel="">alexdanco.com</a><span>.</span></em></p></div></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why can't we remember our lives as babies or toddlers? (201 pts)]]></title>
            <link>https://www.theguardian.com/science/2025/feb/16/why-cant-we-remember-our-lives-as-babies-or-toddlers</link>
            <guid>43084355</guid>
            <pubDate>Mon, 17 Feb 2025 23:44:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/science/2025/feb/16/why-cant-we-remember-our-lives-as-babies-or-toddlers">https://www.theguardian.com/science/2025/feb/16/why-cant-we-remember-our-lives-as-babies-or-toddlers</a>, See on <a href="https://news.ycombinator.com/item?id=43084355">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p><span>L</span>ife must be great as a baby: to be fed and clothed and carried places in soft pouches, to be waved and smiled at by adoring strangers, to have the temerity to scream because food hasn’t arrived quickly enough, and then to throw it on the ground when it is displeasing. It’s a shame none of us recalls exactly how good we once had it.</p><p>At Christmas, I watched my daughter, somehow already a toddler, being passed between her grandfathers and thought, wistfully: she won’t remember any of this. In parks, I push her endlessly on swings, making small talk with fellow parents who have been yoked into Sisyphean servitude, and think, ruefully:<em> why</em> won’t she remember any of this?</p><ul>
 <li>
  <p><strong><a href="https://www.theguardian.com/email-newsletters?CMP=copyembed" data-link-name="in body link">Sign up for Guardian Australia’s breaking news email</a></strong></p></li>
</ul><p>In 1905, Sigmund Freud coined the term “infantile amnesia”, referring to “the peculiar amnesia which, in the case of most people, though by no means all, hides the earliest beginnings of their childhood”. More than a century later, psychologists are still intrigued by why we can’t remember our earliest experiences.</p><p>“Most adults do not have memories before two to three years of age,” says Prof Qi Wang at Cornell University. Up until about age seven, memories of childhood are typically patchy.</p><p>Until relatively recently, researchers thought that young brains weren’t developed enough to form lasting memories. But <a href="https://www.sciencedirect.com/science/article/abs/pii/S0885201487800151" data-link-name="in body link">studies in the 1980s</a> showed that toddlers as young as two can form memories and recall events from months earlier in great detail. Exposure to <a href="https://pubmed.ncbi.nlm.nih.gov/11430844/" data-link-name="in body link">early childhood trauma</a> is also well documented to increase the risk of later anxiety and depression. The paradox of infantile amnesia, says Cristina Alberini, a professor of neural science at New York University, is “how is it that those experiences affect our life forever if they are forgotten?”</p><p>Alberini’s <a href="https://www.nature.com/articles/nn.4348" data-link-name="in body link">research</a> in animals has found that memories formed during the infantile amnesia period are, in fact, stored in the brain until adulthood, even though they aren’t consciously remembered. In both animal and human adults, forming and storing long-term memories about one’s life experiences isn’t possible without a region of the brain known as the <a href="https://www.theguardian.com/science/2013/may/05/henry-molaison-amnesiac-corkin-book-feature" data-link-name="in body link">hippocampus</a><strong>. </strong>Alberini’s <a href="https://www.nature.com/articles/s41467-020-14461-3" data-link-name="in body link">work</a> has shown that the region is also important in early memories and suggests that infantile amnesia occurs because of a critical period where the hippocampus develops due to new experiences. “It makes a lot of sense with all the literature of trauma,” she says. “If the children are learning difficult situations in early childhood, maybe they don’t remember the specifics, but their brains are going to be shaped according to that experience.”</p><h2 id="why-maori-memories-emerge-earlier">Why Māori memories emerge earlier</h2><p>Differing experiences may also explain why the age at which people recall their first memories varies significantly. Wang, an expert in how culture affects autobiographical memory, has shown that the <a href="https://psycnet.apa.org/doiLanding?doi=10.1037%2F0022-3514.81.2.220" data-link-name="in body link">earliest memories in Americans</a> date from an age of about 3.5 years, almost six months younger than in Chinese people. The American memories tended to be more self-focused and emotionally elaborate, while the Chinese recollections tended to centre on collective activities and general routines, she found.</p><p>“In the Asian context, identity and sense of self is less defined by being unique, but [more] about your roles and your relationship with others,” Wang says. To that end, memories may be less important for defining identity than for informing behaviour and imparting lessons. “If you want to use memory to construct a unique sense of identity, you probably remember a lot of idiosyncratic details,” Wang says.</p><p>Another explanation for the discrepancy seems to be how parents discuss past experiences with their children. In New Zealand Māori, first memories <a href="https://www.tandfonline.com/doi/abs/10.1080/09658210050156822" data-link-name="in body link">emerge earlier</a> than in those of a European background, at about 2.5 years old. Prof Elaine Reese at the University of Otago, who studies autobiographical memory in children and adolescents, points to a strong emphasis on oral traditions in Māori culture but also <a href="https://pubmed.ncbi.nlm.nih.gov/24984106/" data-link-name="in body link">elaborative conversations</a> when reminiscing about past events.</p><p>Reese has tracked groups of children from toddlerhood to adolescence, finding that individuals who had richer narrative environments in childhood could recall <a href="https://pubmed.ncbi.nlm.nih.gov/30165796/" data-link-name="in body link">earlier and more detailed first memories</a> as teenagers. This was the case for children whose mothers asked open-ended questions and were more detailed when talking about <a href="https://www.sciencedirect.com/science/article/abs/pii/S0885201405800024" data-link-name="in body link">shared past experiences</a>, as well as children who grew up in <a href="https://www.tandfonline.com/doi/abs/10.1080/09658211.2011.651090" data-link-name="in body link">extended family households</a>.</p><p>“We know that from the time [children] are, say, six-month-old babies, they’re capable of some kind of mental imagery of something that happened from the previous day or week,” Reese says. “It’s taking that mental image and describing it in words that I think is so important for helping them to hold on to that memory over a lifetime.”</p><figure data-spacefinder-role="inline" data-spacefinder-type="model.dotcomrendering.pageElements.NewsletterSignupBlockElement"><a data-ignore="global-link-styling" href="#EmailSignup-skip-link-14">skip past newsletter promotion</a><p id="EmailSignup-skip-link-14" tabindex="0" aria-label="after newsletter promotion" role="note">after newsletter promotion</p></figure><p>Ironically, for parenting influencers who post about elaborate holidays in the name of <a href="https://www.thecut.com/2024/01/brooding-why-are-parents-fixated-on-core-memories.html" data-link-name="in body link">creating “core memories”</a>, the early events that children retain can be surprisingly mundane – “things that most parents would never reminisce elaboratively about”, Reese says. “The classic example from my own research is a child who remembers seeing a worm on the footpath one time.”</p><p>There is debate between memory experts as to the role of language in infantile amnesia. Human researchers suggest memories may be limited by an inability to give language to early experiences. “But there must be something more fundamental that also plays a role because we see this same [infantile amnesia] effect in non-linguistic animals like rats,” says Prof Rick Richardson of the University of New South Wales.</p><h2 id="improbably-early">‘Improbably early’</h2><p>The brain lays down memories not as discrete files as on a computer but as networks of neurons across the brain. Recalling a memory activates those networks and strengthens the links between neurons. This is not to say memory is stable: “Every time you revisit a memory and think about it, you’re changing it,” Reese says.</p><p>Repeated suggestions can lead people to create images and form <a href="https://www.theguardian.com/science/blog/2016/mar/29/social-recall-factors-that-can-affect-false-memory" data-link-name="in body link">false memories</a>, Wang says, citing a famous case in Jean Piaget, the influential child development psychologist. Piaget had a clear memory of his nanny fighting off a would-be kidnapper when he was two – but years later, she confessed that she had fabricated the story.</p><p>In a <a href="https://journals.sagepub.com/doi/abs/10.1177/0956797618778831?journalCode=pssa" data-link-name="in body link">2018 survey</a>, 39% of respondents reported their first memories occurred at age two or younger. The researchers suggested that “improbably early” memories, such as recollections of being pushed in a pram or walking for the first time, were likely fictional and based on photographs or family stories. But though memory is malleable and young children are more suggestible, “confabulation is not that common”, Wang says. “Under normal conditions, even children do not just take for granted whatever you tell them and incorporate those memories.”</p><p>So if experiences of our early milestones – first birthday, first steps, first trip to the beach – seem to be cached somewhere in the brain, why can’t we consciously access them? While psychologists say it can be adaptive to forget, that doesn’t explain why the memories formed before age seven seem to decay faster than when we’re adults. Alberini hypothesises that early unrecalled memories may function as schemas upon which adult memories are built. Like the foundations of a home, they remain concealed but crucial.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA['Honestly terrifying': Yosemite National Park is in chaos (111 pts)]]></title>
            <link>https://www.sfgate.com/california-parks/article/yosemite-national-park-in-chaos-20163260.php</link>
            <guid>43084353</guid>
            <pubDate>Mon, 17 Feb 2025 23:43:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sfgate.com/california-parks/article/yosemite-national-park-in-chaos-20163260.php">https://www.sfgate.com/california-parks/article/yosemite-national-park-in-chaos-20163260.php</a>, See on <a href="https://news.ycombinator.com/item?id=43084353">Hacker News</a></p>
Couldn't get https://www.sfgate.com/california-parks/article/yosemite-national-park-in-chaos-20163260.php: Error: Request failed with status code 403]]></description>
        </item>
    </channel>
</rss>