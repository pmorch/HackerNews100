<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 30 May 2025 15:30:01 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Systems Correctness Practices at Amazon Web Services (136 pts)]]></title>
            <link>https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/</link>
            <guid>44135638</guid>
            <pubDate>Fri, 30 May 2025 12:43:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/">https://cacm.acm.org/practice/systems-correctness-practices-at-amazon-web-services/</a>, See on <a href="https://news.ycombinator.com/item?id=44135638">Hacker News</a></p>
<div id="readability-page-1" class="page"><div lang="en"><section id="sec1"><p id="p-1">Amazon Web Services (AWS) strives to deliver reliable services that customers can trust completely. This requires maintaining the highest standards of security, durability, integrity, and availability—with systems correctness serving as the cornerstone for achieving these priorities. An April 2015 article published in <i>Communications of the ACM</i>, titled “How Amazon Web Services Uses Formal Methods,” highlighted the approach for ensuring the correctness of critical services that have since become among the most widely used by AWS customers.<a href="#B21" data-jats-ref-type="bibr" data-jats-rid="B21"><sup>21</sup></a></p><p id="p-2">Central to this approach was TLA+,<a href="#B14" data-jats-ref-type="bibr" data-jats-rid="B14"><sup>14</sup></a> a formal specification language developed by Leslie Lamport. Our experience at AWS with TLA+ revealed two significant advantages of applying formal methods in practice. First, we could identify and eliminate subtle bugs early in development—bugs that would have eluded traditional approaches such as testing. Second, we gained the deep understanding and confidence needed to implement aggressive performance optimizations while maintaining systems correctness.</p><p id="p-3">Moreover, 15 years ago, AWS’s software testing practice relied primarily on build-time unit testing, often against mocks, and limited deployment-time integration testing. Since then, we have significantly evolved our correctness practices, integrating both formal and semi-formal approaches into the development process. As AWS has grown, formal methods have become increasingly valuable—not only for ensuring correctness but also for performance improvements, particularly in verifying the correctness of both low- and high-level optimizations. This systematic approach toward systems correctness has become a force multiplier at AWS’s scale, enabling faster development cycles through improved developer velocity while delivering more cost-effective services to customers.</p><p id="p-4">This article surveys the portfolio of formal methods used across AWS to deliver complex services with high confidence in its correctness. We consider an umbrella definition of formal methods that encompasses these rigorous techniques—from traditional formal approaches (such as theorem proving,<a href="#B7" data-jats-ref-type="bibr" data-jats-rid="B7"><sup>7</sup></a><sup>,</sup><a href="#B10" data-jats-ref-type="bibr" data-jats-rid="B10"><sup>10</sup></a> deductive verification,<a href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a> and model checking<a href="#B8" data-jats-ref-type="bibr" data-jats-rid="B8"><sup>8</sup></a><sup>,</sup><a href="#B14" data-jats-ref-type="bibr" data-jats-rid="B14"><sup>14</sup></a>) to more lightweight semi-formal approaches (such as property-based testing,<a href="#B6" data-jats-ref-type="bibr" data-jats-rid="B6"><sup>6</sup></a><sup>,</sup><a href="#B19" data-jats-ref-type="bibr" data-jats-rid="B19"><sup>19</sup></a> fuzzing,<a href="#B9" data-jats-ref-type="bibr" data-jats-rid="B9"><sup>9</sup></a> and runtime monitoring<a href="#B11" data-jats-ref-type="bibr" data-jats-rid="B11"><sup>11</sup></a>).</p></section><section id="sec2"><h2>The P Programming Language</h2><p id="p-5">As the use of formal methods was expanded beyond the initial teams at AWS in the early 2010s, we discovered that many engineers struggled to learn and become productive with TLA+. This difficulty seemed to stem from TLA+’s defining feature: It is a high-level, abstract language that more closely resembles mathematics than the imperative programming languages most developers are familiar with. While this mathematical nature is a significant strength of TLA+, and we continue to agree with Lamport’s views on the benefits of mathematical thinking,<a href="#B15" data-jats-ref-type="bibr" data-jats-rid="B15"><sup>15</sup></a> we also sought a language that would allow us to model check (and later prove) key aspects of systems design while being more approachable to programmers.</p><p id="p-6">We found this balance in the P programming language.<a href="#B8" data-jats-ref-type="bibr" data-jats-rid="B8"><sup>8</sup></a> P is a state-machine-based language for modeling and analysis of distributed systems. Using P, developers model their system designs as communicating state machines, a mental model familiar to Amazon’s developer population—most of whom develop systems based on microservices and service-oriented architectures (SOAs). P has been developed at AWS since 2019 and is maintained as a strategic open source project.<a href="#B22" data-jats-ref-type="bibr" data-jats-rid="B22"><sup>22</sup></a> Teams across AWS that build some of its flagship products—from storage (for example, Amazon S3, EBS), to databases (for example, Amazon DynamoDB, MemoryDB, Aurora), to compute (for example, EC2, IoT)—have been using P to reason about the correctness of their system designs.</p><p id="p-7">For example, P was used in migrating Simple Storage Service (S3) from eventual to strong read-after-write consistency.<a href="#B1" data-jats-ref-type="bibr" data-jats-rid="B1"><sup>1</sup></a> A key component of S3 is its index subsystem, an object metadata store that enables fast data lookups. To achieve strong consistency, the S3 team had to make several nontrivial changes to the S3 index protocol stack.<a href="#B25" data-jats-ref-type="bibr" data-jats-rid="B25"><sup>25</sup></a> Because these changes were difficult to get right at S3 scale, and the team wanted to deliver strong consistency with high confidence in correctness, they used P to formally model and validate the protocol design. P helped eliminate several design-level bugs early in the development process and allowed the team to deliver risky optimizations with confidence, as they could be validated using model checking.</p><p id="p-8">In 2023, the P team at AWS built PObserve, which provides a new tool for validating the correctness of distributed systems both during testing and in production. With PObserve, we take structured logs from the execution of distributed systems and validate post hoc that they match behaviors allowed by the formal P specification of the system. This allows for bridging the gap between the P specification of the system design and the production implementation (typically in languages like Rust or Java). While there are significant benefits from verifying protocols at design time, runtime monitoring of the same properties for the implementation makes the investment in formal specification much more valuable and addresses classic concerns with the deployment of formal methods in practice (that is, connecting design-time validation with system implementation).</p></section><section id="sec3"><h2>Lightweight Formal Methods</h2><p id="p-9">Another way that AWS has brought formal methods closer to its engineering teams is through the adoption of <i>lightweight formal methods</i>.</p><section id="sec4"><p data-jats-content-type="inline-heading"><strong>Property-based testing.</strong>&nbsp; The most notable single example of leveraging lightweight formal methods is in Amazon S3’s ShardStore, where the team used property-based testing throughout the development cycle both to test correctness and to speed up development (described in detail by Bornholt, et al.<a href="#B4" data-jats-ref-type="bibr" data-jats-rid="B4"><sup>4</sup></a>). The key idea in their approach was combining property-based testing with developer-provided correctness specifications, coverage-guided fuzzing (an approach where the distribution of inputs is guided by code coverage metrics), failure injection (where hardware and other system failures are simulated during testing), and minimization (where counterexamples are automatically reduced to aid human-guided debugging).</p></section><section id="sec5"><p data-jats-content-type="inline-heading"><strong>Deterministic simulation.</strong>&nbsp; Another lightweight method widely used at AWS is deterministic simulation testing, in which a distributed system is executed on a single-threaded simulator with control over all sources of randomness, such as thread scheduling, timing, and message delivery order. Tests are then written for particular failure or success scenarios, such as the failure of a participant at a particular stage in a distributed protocol. The nondeterminism in the system is controlled by the test framework, allowing developers to specify orderings they believe are interesting (such as ones that have caused bugs in the past). The scheduler in the testing framework can also be extended for fuzzing of orderings or exploring all possible orderings to be tested.</p><p id="p-12">Deterministic simulation testing moves testing of system properties, like behavior under delay and failure, closer to build time instead of integration testing. This accelerates development and provides for more complete behavioral coverage during testing. Some of the work done at AWS on build-time testing of thread ordering and systems failures has been open sourced as part of the shuttle<a href="#FN1" data-jats-rid="FN1" data-jats-ref-type="fn"><sup>a</sup></a> and turmoil<a href="#FN2" data-jats-rid="FN2" data-jats-ref-type="fn"><sup>b</sup></a> projects.</p></section><section id="sec6"><p data-jats-content-type="inline-heading"><strong>Continuous fuzzing or random test-input generation.</strong>&nbsp; Continuous fuzzing, especially coverage-guided scalable test-input generation, is also effective for testing systems correctness at integration time. During the development of Amazon Aurora’s data-sharding feature (Aurora Limitless Database<a href="#B3" data-jats-ref-type="bibr" data-jats-rid="B3"><sup>3</sup></a>), for example, we made extensive use of fuzzing to test two key properties of the system. First, by fuzzing SQL queries (and entire transactions), we validated that the logic partitioning SQL execution over shards is correct. Large volumes of random SQL schemas, datasets, and queries are synthesized and run through the engines under test, and the results compared with an oracle based on the non-sharded version of the engine (as well as other approaches to validation, like those pioneered by SQLancer<a href="#B23" data-jats-ref-type="bibr" data-jats-rid="B23"><sup>23</sup></a>).</p><p id="p-14">Fuzzing, combined with fault-injection testing, is also useful for testing other aspects of database correctness such as atomicity, consistency, and isolation. In database testing, transactions are automatically generated, their correct behavior is defined using a formally specified correctness oracle, and then all possible interleaving of transactions and statements within the transaction is executed against the system under test. We also use post hoc validation of properties such as isolation (following approaches such as Elle<a href="#B13" data-jats-ref-type="bibr" data-jats-rid="B13"><sup>13</sup></a>).</p></section></section><section id="sec7"><h2>Fault Injection as a Service</h2><p id="p-15">In early 2021, AWS launched Fault Injection Service (FIS)<a href="#B2" data-jats-ref-type="bibr" data-jats-rid="B2"><sup>2</sup></a> with the goal of making testing based on fault injection accessible to a wide range of AWS customers. FIS allows customers to inject simulated faults, from API errors to I/O pauses and failed instances, into test or production deployments of their infrastructure on AWS. Injecting faults allows customers to validate that the resiliency mechanisms they have built into their architectures (such as failovers and health checks) actually improve availability and do not introduce correctness problems. Fault-injection testing based on FIS is widely used by AWS customers and internally within Amazon. For example, Amazon.com ran 733 FIS-based fault-injection experiments in preparation for Prime Day 2024.</p><p id="p-16">In 2014, Yuan et al. found that 92% of catastrophic failures in tested distributed systems were triggered by incorrect handling of nonfatal errors. Many distributed-systems practitioners who were told about this research were surprised the percentage was not higher. Happy-case catastrophic failures are rare simply because the happy case of systems is executed often, tested better (both implicitly and explicitly), and is significantly simpler than the error cases. Fault-injection testing and FIS make it much easier for practitioners to test the behavior of their systems under faults and failures, closing the gap between happy-case and error-case bug density.</p><p id="p-17">While fault injection is not considered a formal method, it can be combined with formal specifications. Defining the expected behavior using a formal specification, and then comparing results during and after fault injection to the specified behavior, allows for catching a lot more bugs than simply checking for errors in metrics and logs (or having a human look and say, “Yup, that looks about right”).</p></section><section id="sec8"><h2>Metastability and Emergent System Behavior</h2><p id="p-18">Over the past decade, there has been an emerging interest in a particular class of systems failure: those where some triggering event (like an overload or a cache emptying) causes a distributed system to enter a state where it does not recover without intervention (such as reducing load below normal). This class of failures, dubbed <i>metastable failures</i>,<a href="#B5" data-jats-ref-type="bibr" data-jats-rid="B5"><sup>5</sup></a> is one of the most important contributors to unavailability in cloud systems. The figure, adapted from Bronson et al.,<a href="#B5" data-jats-ref-type="bibr" data-jats-rid="B5"><sup>5</sup></a>&nbsp;illustrates a common type of metastable behavior: Load increases on the system are initially met with increasing goodput, followed by saturation, followed by congestion and goodput dropping to zero (or near zero). From there, the system cannot return to healthy state by slightly reducing load. Instead, it must follow the dotted line and may not recover until load is significantly reduced. This type of behavior is present even in simple systems. For example, it can be triggered in most systems with timeout-and-retry client logic.</p><figure id="UF1"><p><a data-fslightbox="https://cacm.acm.org/wp-content/uploads/2025/04/3729175_fig01.jpg" data-type="image" data-caption="Figure. Metastable system behavior under load." href="https://cacm.acm.org/wp-content/uploads/2025/04/3729175_fig01.jpg">
				<img decoding="async" title="Figure. Metastable system behavior under load." src="https://cacm.acm.org/wp-content/uploads/2025/04/3729175_fig01.jpg" alt="Metastable system behavior under load." data-image-id="UF1" data-image-type="figure">
			</a>
		</p><figcaption><span>Figure.&nbsp;</span> <span>Metastable system behavior under load.</span></figcaption></figure><p id="p-19">Traditional formal approaches to modeling distributed systems typically focus on <i>safety</i> (nothing bad happens) and <i>liveness</i> (something good eventually happens), but metastable failures remind us that systems have a variety of behaviors that cannot be neatly categorized this way. We have increasingly turned to discrete-event simulation to understand the emergent behavior of systems, investing both in custom-built systems simulations and tooling that allow the use of existing system models (built in languages such as TLA+ and P) to simulate system behavior. Extending exhaustive model checkers, like TLA+’s TLC with probabilistic simulations, also allows for the generation of statistical results such as posterior latency distributions, making model checking useful for tasks such as understanding the achievability of latency service-level agreements (SLAs).</p></section><section id="sec9"><h2>Formal Proof</h2><p id="p-20">In some cases, the formal methods enumerated so far in this article are not sufficient. For critical security boundaries such as authorization and virtualization, for example, proofs of correctness can be both desirable and worth the significant investment needed to create them.</p><p id="p-21">In 2023, AWS introduced the Cedar authorization policy language for writing policies that specify fine-grained permissions. Cedar was designed for automated reasoning and formal proof.<a href="#B12" data-jats-ref-type="bibr" data-jats-rid="B12"><sup>12</sup></a><sup>,</sup><a href="#B24" data-jats-ref-type="bibr" data-jats-rid="B24"><sup>24</sup></a> The language was designed to be well-suited for proof, and the implementation was built in the verification-aware programming language Dafny. Using Dafny, the team was able to prove that the implementation satisfies a variety of security properties. This type of proof goes beyond testing. It is a proof in the mathematical sense. The team also applied a differential testing approach using the Dafny code as a correctness oracle to verify the correctness of the production-ready Rust implementation. Publishing the Dafny code and test procedures as open source, along with the Cedar implementation, allows Cedar users to check the team’s work on correctness.</p><p id="p-22">Another example is the Firecracker virtual machine monitor (VMM). Firecracker uses a low-level protocol called <i>virtio</i> to expose emulated hardware devices (such as a network card or solid-state drive) to guest kernels running inside the VM. This emulated device is a critical security boundary because it is the most complex interaction between the untrusted guest and trusted host. The Firecracker team used a tool called Kani<a href="#B20" data-jats-ref-type="bibr" data-jats-rid="B20"><sup>20</sup></a> that can reason formally about Rust code to prove key properties of this security boundary. Again, proof here goes beyond testing and ensures that the critical properties of this boundary are held no matter what the guest attempts to do.</p><p id="p-23">Proofs around the behaviors of programs are an important part of AWS’s software correctness program, so we support development on tools such as Kani, Dafny,<a href="#B18" data-jats-ref-type="bibr" data-jats-rid="B18"><sup>18</sup></a> and Lean,<a href="#B16" data-jats-ref-type="bibr" data-jats-rid="B16"><sup>16</sup></a> and the underlying tools—such as satisfiability modulo theory (SMT) solvers—that power them.</p><p id="p-24">The ability to use formal models and specifications—for model-checking systems at design time, for validating in-production behavior using runtime monitoring by serving as a correctness oracle, for simulating emergent systems behavior, and for building proofs of critical properties—allows AWS to amortize the engineering effort of developing these specifications over a larger amount of business and customer value.</p></section><section id="sec10"><h2>Benefits Beyond Correctness</h2><p id="p-25">Finally, as discussed in the aforementioned 2015 paper, formal methods are a crucial part of safely improving the performance of cloud systems. Modeling a key commit protocol for the Aurora relational database engine in P and TLA+ allowed us to identify an opportunity to reduce the cost of distributed commits from 2 to 1.5 network roundtrips without sacrificing any safety properties. These kinds of stories are usual for teams that adopt formal methods, driven by at least two different dynamics.</p><p id="p-26">First, the act of deeply thinking about and formally writing down distributed protocols forces a structured way of thinking that leads to deeper insights about the structure of protocols and the problem to be solved.&nbsp;Second, having the ability to formally check (and, in some cases, prove) that proposed design optimizations are correct allows naturally conservative distributed-systems engineers to be bolder in their protocol design choices without increasing risk and boosting the developer velocity toward delivering reliable services.</p><p id="p-27">These productivity and cost benefits are limited not only to high-level design optimizations but also to low-level code that normally gets ignored. In one example, the AWS team identified optimizations to the implementation of the Rivest-Shamir-Adleman (RSA) public-key encryption scheme on our ARM-based Graviton 2 processor, which could improve throughput by up to 94%.<a href="#B17" data-jats-ref-type="bibr" data-jats-rid="B17"><sup>17</sup></a></p><p id="p-28">Using the HOL Light interactive theorem prover, the team was able to prove the correctness of these optimizations. Given the high percentage of cloud CPU cycles spent on cryptography, this type of optimization can significantly reduce infrastructure costs and aid sustainability while at the same time improving customer-visible performance.</p></section><section id="sec11"><h2>Challenges and Opportunities for the Future</h2><p id="p-29">Despite significant success in scaling formal and semi-formal testing methods across AWS over the past 15 years, several challenges persist, particularly in industrial adoption of formal methods. The primary barriers for formal methods tools include their steep learning curve and the specialized domain expertise required. Additionally, many of these tools remain academic in nature and lack user-friendly interfaces.</p><p id="p-30">Even well-established semi-formal approaches face adoption challenges. For example, deterministic simulation, a key distributed-systems testing technique used successfully at AWS and in projects like FoundationDB, remains unfamiliar to many experienced distributed-systems developers joining AWS. Similar gaps exist in the adoption of other proven methodologies, such as fault-injection testing, property-based testing, and fuzzing. The challenge is educating distributed-systems developers about these testing methods and tools, teaching the art of rigorous thinking.</p><p id="p-31">The education gap begins at the academic level, where even basic formal reasoning approaches are rarely taught, making it difficult for graduates from top institutions to adopt these tools. Although formal methods and automated reasoning are crucial for industry applications, they continue to be viewed as niche fields. We anticipate that increased industry adoption of formal methods and automated reasoning will attract more talent to this domain.</p><p id="p-32">Metastability and other emergent properties of large-scale systems represent another critical research area facing similar awareness challenges. Common practices that lead to metastable system behavior, such as “retry N times on timeout,” continue to be widely recommended despite their known issues. Current tools and techniques for understanding emergent system behavior are still in their early stages, making system stability modeling expensive and complex. Ongoing research in this area holds promising potential for advancement.</p><p id="p-33">Looking ahead, we believe large language models and AI assistants will significantly help address the adoption challenges of formal methods in practice. Just as AI-assisted unit testing has gained popularity, these tools are expected soon to help developers create formal models and specifications, making these advanced techniques more accessible to the broader developer community.</p></section><section id="sec12"><h2>Conclusion</h2><p id="p-34">Building reliable and secure software requires a range of approaches to reason about systems correctness. Alongside industry-standard testing methods (such as unit and integration testing), AWS has adopted model checking, fuzzing, property-based testing, fault-injection testing, deterministic simulation, event-based simulation, and runtime validation of execution traces. Formal methods have been an important part of the development process—perhaps most importantly, formal specifications as test oracles that provide the correct answers for many of AWS’s testing practices. Correctness testing and formal methods remain key areas of investment at AWS, accelerated by the excellent returns seen on investments in these areas already.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AI is not our future (200 pts)]]></title>
            <link>https://procreate.com/ai</link>
            <guid>44134798</guid>
            <pubDate>Fri, 30 May 2025 10:45:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://procreate.com/ai">https://procreate.com/ai</a>, See on <a href="https://news.ycombinator.com/item?id=44134798">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page-content"><main role="main" aria-label="Page Content"><!--[--><!--[--><section role="presentation"><div><h2>Where we stand</h2><div><!--[--><div><h3>No generative AI</h3><p>We deeply respect your hard-earned skills.</p></div><div><h3>Your work belongs to you</h3><p>We do not have access to your art, by design.</p></div><div><h3>We take pride in privacy</h3><p>Your activity is not tracked in our apps.</p></div><!--]--></div></div><div><p>Generative AI is ripping the humanity out of things. Built on a foundation of theft, the technology is steering us toward a barren future.  We think machine learning is a compelling technology with a lot of merit, but the path generative AI is on is wrong for us.</p><p>We're here for the humans. We're not chasing a technology that is a moral threat to our greatest jewel: human creativity. In this technological rush, this might make us an exception or seem at risk of being left behind. But we see this road less travelled as the more exciting and fruitful one for our community.</p></div></section><!----><!--]--><!--]--></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[RFK Jr's 'Maha' report found to contain citations to nonexistent studies (141 pts)]]></title>
            <link>https://www.theguardian.com/us-news/2025/may/29/rfk-jr-maha-health-report-studies</link>
            <guid>44133962</guid>
            <pubDate>Fri, 30 May 2025 07:54:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/us-news/2025/may/29/rfk-jr-maha-health-report-studies">https://www.theguardian.com/us-news/2025/may/29/rfk-jr-maha-health-report-studies</a>, See on <a href="https://news.ycombinator.com/item?id=44133962">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p><a href="https://www.theguardian.com/us-news/robert-f-kennedy-jr" data-link-name="in body link">Robert F Kennedy Jr</a>’s flagship <a href="https://www.theguardian.com/us-news/2025/may/22/rfk-jr-maha-health-report-explained" data-link-name="in body link">health commission report</a> contains citations to studies that do not exist, according to an <a href="https://www.notus.org/health-science/make-america-healthy-again-report-citation-errors" data-link-name="in body link">investigation</a> by the US publication Notus.</p><p>The report exposes glaring scientific failures from a health secretary who earlier this week threatened to ban government scientists from publishing in leading medical journals.</p><p>The 73-page “Make America healthy again” report – which was commissioned by the <a href="https://www.theguardian.com/us-news/trump-administration" data-link-name="in body link">Trump administration</a> to examine the causes of chronic illness, and which Kennedy promoted it as “gold-standard” science backed by more than 500 citations – includes references to seven studies that appear to be entirely invented, and others that the researchers say have been mischaracterized.</p><figure id="0992c1a8-3359-4cf1-a406-e28fb87cfb06" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" priority="feature" deferuntil="idle" props="{&quot;richLinkIndex&quot;:3,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;text&quot;:&quot;Key takeaways: RFK Jr’s ‘Maha’ report on chronic disease in children&quot;,&quot;elementId&quot;:&quot;0992c1a8-3359-4cf1-a406-e28fb87cfb06&quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/us-news/2025/may/22/rfk-jr-maha-health-report-explained&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;design&quot;:0,&quot;display&quot;:0,&quot;theme&quot;:0}}"></gu-island></figure><p>Two supposed studies on ADHD medication advertising simply do not exist in the journals where they are claimed to be published. Virginia Commonwealth University confirmed to Notus that researcher Robert L Findling, listed as an author of one paper, never wrote such an article, while another citation leads only to the Kennedy report itself when searched online.</p><p>Harold J Farber, a pediatric specialist supposedly behind research on asthma overprescribing, told Notus he never wrote the cited paper and had never worked with the other listed authors.</p><p>The US Department of <a href="https://www.theguardian.com/society/health" data-link-name="in body link" data-component="auto-linked-tag">Health</a> and Human Services has not immediately responded to a Guardian request for comment.</p><p>The citation failures come as Kennedy, a noted skeptic of vaccines, <a href="https://www.theguardian.com/us-news/2025/may/28/rfk-jr-medical-journals" data-link-name="in body link">criticized medical publishing</a> this week, branding top journals the Lancet, New England Journal of Medicine and Jama as “corrupt” and alleging they were controlled by pharmaceutical companies. He outlined plans for creating government-run journals instead.</p><p>Beyond the phantom studies in Kennedy’s report, Notus found it systematically misrepresented existing research.</p><figure id="5e068b28-7b23-4d73-bbb4-409abba4a53f" data-spacefinder-role="richLink" data-spacefinder-type="model.dotcomrendering.pageElements.RichLinkBlockElement"><gu-island name="RichLinkComponent" priority="feature" deferuntil="idle" props="{&quot;richLinkIndex&quot;:9,&quot;element&quot;:{&quot;_type&quot;:&quot;model.dotcomrendering.pageElements.RichLinkBlockElement&quot;,&quot;prefix&quot;:&quot;Related: &quot;,&quot;text&quot;:&quot;RFK’s health report omits key facts in painting dark vision for US children&quot;,&quot;elementId&quot;:&quot;5e068b28-7b23-4d73-bbb4-409abba4a53f&quot;,&quot;role&quot;:&quot;richLink&quot;,&quot;url&quot;:&quot;https://www.theguardian.com/us-news/2025/may/22/rfk-maha-health-report-children&quot;},&quot;ajaxUrl&quot;:&quot;https://api.nextgen.guardianapps.co.uk&quot;,&quot;format&quot;:{&quot;design&quot;:0,&quot;display&quot;:0,&quot;theme&quot;:0}}"></gu-island></figure><p>For example, one paper was claimed to show that talking therapy was as effective as psychiatric medication, but the statistician Joanne McKenzie said this was impossible, as “we did not include psychotherapy” in the review.</p><p>The sleep researcher Mariana G Figueiro also said her study was mischaracterized, with the report incorrectly stating it involved children rather than college students, and citing the wrong journal entirely.</p><p>The <a href="https://www.theguardian.com/us-news/trump-administration" data-link-name="in body link" data-component="auto-linked-tag">Trump administration</a> asked Kennedy for the report in order to look at chronic illness causes, from pesticides to mobile phone radiation. Kennedy called it a “milestone” that provides “evidence-based foundation” for sweeping policy changes.</p><p>A follow-up “Make our children healthy again strategy” report is due in August, raising concerns about the scientific credibility underpinning the administration’s health agenda.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Buttplug MCP (209 pts)]]></title>
            <link>https://github.com/ConAcademy/buttplug-mcp</link>
            <guid>44133706</guid>
            <pubDate>Fri, 30 May 2025 07:06:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/ConAcademy/buttplug-mcp">https://github.com/ConAcademy/buttplug-mcp</a>, See on <a href="https://news.ycombinator.com/item?id=44133706">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">buttplug-mcp - Buttplug.io MCP Server</h2><a id="user-content-buttplug-mcp---buttplugio-mcp-server" aria-label="Permalink: buttplug-mcp - Buttplug.io MCP Server" href="#buttplug-mcp---buttplugio-mcp-server"></a></p>
<p dir="auto"><code>buttplug-mcp</code> is a <a href="https://www.anthropic.com/news/model-context-protocol" rel="nofollow">Model Context Protocol (MCP)</a> server for the <a href="https://buttplug.io/" rel="nofollow">Buttplug.io ecosystem</a>.  It allows Tool-supporting LLM programs like <a href="https://claude.ai/download" rel="nofollow">Claude Desktop</a> query and control your Genital Interface Devices.</p>
<p dir="auto"><em>|insert AI-generated slop image of robots doing nasty things|</em>
<br><code>LLM|=&gt; - - (__(__)</code></p>
<p dir="auto">Once set up, you can prompt your LLM:</p>
<ul dir="auto">
<li>"What are my connected buttplug devices?"</li>
<li>"Set the second motor on my LELO F1S to 50% strength"</li>
<li>"How much battery is left on my Lovense Max 2?"</li>
<li>"Does my WeWibe have weak signal?"</li>
</ul>
<p dir="auto"><strong>NOTE: The above is aspirational and really the <a href="#current-state">current experience</a> is unstable and frustating.</strong></p>
<p dir="auto">It supports the following Resources and Tools:</p>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Resource</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>/devices</code></td>
<td>List of connected Buttplug devices in JSON.</td>
</tr>
<tr>
<td><code>/device/{id}</code></td>
<td>Device information by device ID where<code>id</code> is a number from <code>/devices</code></td>
</tr>
<tr>
<td><code>/device/{id}/rssi</code></td>
<td>RSSI signal level by device ID where <code>id</code> is a number from <code>/devices</code></td>
</tr>
<tr>
<td><code>/device/{id}/battery</code></td>
<td>Battery level by device ID where <code>id</code> is a number from <code>/devices</code></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<markdown-accessiblity-table><table>
<thead>
<tr>
<th>Tool</th>
<th>Params</th>
<th>Description</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>device_vibrate</code></td>
<td><code>id</code>, <code>motor</code>, <code>strength</code></td>
<td>Vibrates device by <code>id</code>, selecting <code>strength</code> and optional <code>motor</code></td>
</tr>
</tbody>
</table></markdown-accessiblity-table>
<details>
<summary>JSON Schema for Resources.  Click to expand</summary>
<p dir="auto"><a href="https://github.com/ConAcademy/buttplug-mcp/blob/main/schema_resources.json"><code>schema_resources.json</code></a></p>
<div data-snippet-clipboard-copy-content="{
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;id&quot;: 1,
  &quot;result&quot;: {
    &quot;resources&quot;: [
      {
        &quot;uri&quot;: &quot;devices&quot;,
        &quot;name&quot;: &quot;Device List&quot;,
        &quot;description&quot;: &quot;List of connected Buttplug devices in JSON&quot;,
        &quot;mimeType&quot;: &quot;application/json&quot;
      }
    ]
  }
}"><pre><code>{
  "jsonrpc": "2.0",
  "id": 1,
  "result": {
    "resources": [
      {
        "uri": "devices",
        "name": "Device List",
        "description": "List of connected Buttplug devices in JSON",
        "mimeType": "application/json"
      }
    ]
  }
}
</code></pre></div>
</details>
<details>
<summary>JSON Schema for Tools.  Click to expand</summary>
<p dir="auto"><a href="https://github.com/ConAcademy/buttplug-mcp/blob/main/schema_tools.json"><code>schema_tools.json</code></a></p>
<div data-snippet-clipboard-copy-content="{
  &quot;jsonrpc&quot;: &quot;2.0&quot;,
  &quot;id&quot;: 1,
  &quot;result&quot;: {
    &quot;tools&quot;: [
      {
        &quot;description&quot;: &quot;Vibrates device by `id`, selecting `strength` and optional `motor`&quot;,
        &quot;inputSchema&quot;: {
          &quot;type&quot;: &quot;object&quot;,
          &quot;properties&quot;: {
            &quot;id&quot;: {
              &quot;description&quot;: &quot;Device ID to query, sourced from `/devices`&quot;,
              &quot;pattern&quot;: &quot;^[0-9]*$&quot;,
              &quot;type&quot;: &quot;number&quot;
            },
            &quot;motor&quot;: {
              &quot;description&quot;: &quot;Motor number to vibrate, defaults to 0&quot;,
              &quot;pattern&quot;: &quot;^[0-9]*$&quot;,
              &quot;type&quot;: &quot;number&quot;
            },
            &quot;strength&quot;: {
              &quot;description&quot;: &quot;Strength from 0.0 to 1.0, with 0.0 being off and 1.0 being full&quot;,
              &quot;pattern&quot;: &quot;^(0(\\.\\d+)?|1(\\.0+)?)$&quot;,
              &quot;type&quot;: &quot;number&quot;
            }
          },
          &quot;required&quot;: [
            &quot;id&quot;,
            &quot;strength&quot;
          ]
        },
        &quot;name&quot;: &quot;device_vibrate&quot;
      }
    ]
  }
}"><pre><code>{
  "jsonrpc": "2.0",
  "id": 1,
  "result": {
    "tools": [
      {
        "description": "Vibrates device by `id`, selecting `strength` and optional `motor`",
        "inputSchema": {
          "type": "object",
          "properties": {
            "id": {
              "description": "Device ID to query, sourced from `/devices`",
              "pattern": "^[0-9]*$",
              "type": "number"
            },
            "motor": {
              "description": "Motor number to vibrate, defaults to 0",
              "pattern": "^[0-9]*$",
              "type": "number"
            },
            "strength": {
              "description": "Strength from 0.0 to 1.0, with 0.0 being off and 1.0 being full",
              "pattern": "^(0(\\.\\d+)?|1(\\.0+)?)$",
              "type": "number"
            }
          },
          "required": [
            "id",
            "strength"
          ]
        },
        "name": "device_vibrate"
      }
    ]
  }
}
</code></pre></div>
</details>
<p dir="auto"><h2 tabindex="-1" dir="auto">Current State</h2><a id="user-content-current-state" aria-label="Permalink: Current State" href="#current-state"></a></p>
<p dir="auto">I started working on this on 2025-04-01, April Fool's Day, after having created another experimental MCP service, <a href="https://github.com/NimbleMarkets/dbn-go/blob/main/cmd/dbn-go-mcp/README.md"><code>dbn-go</code> for financial market data</a>, the day prior.  So it is fresh meat and was intended as a quick, fun educational project.</p>
<p dir="auto">While it does work, I found the underlying <a href="https://github.com/diamondburned/go-buttplug"><code>go-buttplug</code> library</a> to be unstable in connection handling.   I could ask Claude for my devices, but my specific device wouldn't vibrate even just with just Intiface Central -- it was like in read-only mode!    I also wish I had a virtual buttplug.io device for testing, rather than relying on a physical device.</p>
<p dir="auto">So, it has not truly been tested "end-to-end" 😉</p>
<p dir="auto">I will dig more into the <code>go-buttplug</code> library and see why connections are unstable.  I also need to understand the MCP protocol current state of MCP hosts -- it seems they focus on Tools rather than Resources and Resoure Templates.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Installing the binary</h2><a id="user-content-installing-the-binary" aria-label="Permalink: Installing the binary" href="#installing-the-binary"></a></p>
<p dir="auto">Binaries for multiple platforms are <a href="https://github.com/conacademy/buttplug-mcp/releases">released on GitHub</a> through <a href="https://github.com/conacademy/buttplug-mcp/actions">GitHub Actions</a>.</p>
<p dir="auto">You can also install for various platforms with <a href="https://brew.sh/" rel="nofollow">Homebrew</a> from <a href="https://github.com/conacademy/homebrew-tap"><code>conacademy/homebrew-tap</code></a>:</p>
<div data-snippet-clipboard-copy-content="brew tap conacademy/homebrew-tap
brew install conacademy/tap/buttplug-mcp"><pre><code>brew tap conacademy/homebrew-tap
brew install conacademy/tap/buttplug-mcp
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">Download the <a href="https://intiface.com/central/" rel="nofollow">Intiface Central</a> hub application to manage your devices.  Start it and note the server port (default seems to be <code>12345</code>).</p>
<p dir="auto">To use this the <code>buttplug-mcp</code> MCP server, you must configure your host program to use it.  We will illustrate with <a href="https://claude.ai/download" rel="nofollow">Claude Desktop</a>.  We must find the <code>buttplug-mcp</code> program on our system; the example below shows where <code>buttplug-mcp</code> is installed with MacOS Homebrew (perhaps build your own and point at that).</p>
<p dir="auto">The following <a href="https://github.com/ConAcademy/buttplug-mcp/blob/main/claude_desktop_config.json">configuration JSON</a> sets this up:</p>
<div dir="auto" data-snippet-clipboard-copy-content="{
  &quot;mcpServers&quot;: {
    &quot;buttplug&quot;: {
      &quot;command&quot;: &quot;/opt/homebrew/bin/buttplug-mcp&quot;,
      &quot;args&quot;: [
        &quot;--ws-port&quot;, &quot;12345&quot;
      ]
    }
  }
}"><pre>{
  <span>"mcpServers"</span>: {
    <span>"buttplug"</span>: {
      <span>"command"</span>: <span><span>"</span>/opt/homebrew/bin/buttplug-mcp<span>"</span></span>,
      <span>"args"</span>: [
        <span><span>"</span>--ws-port<span>"</span></span>, <span><span>"</span>12345<span>"</span></span>
      ]
    }
  }
}</pre></div>
<p dir="auto">Using Claude Desktop, you can follow <a href="https://modelcontextprotocol.io/quickstart/user" rel="nofollow">their configuration tutorial</a> but substitute the configuration above.  With that in place, you can ask Claude question and it will use the <code>buttplug-mcp</code> server.  Here's example conversations:</p>
<p dir="auto">Perhaps you can use the <a href="https://www.home-assistant.io/integrations/mcp_server/" rel="nofollow">HomeAssistant MCP</a> integration to turn the lights down low...</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">Ollama and <code>mcphost</code></h3><a id="user-content-ollama-and-mcphost" aria-label="Permalink: Ollama and mcphost" href="#ollama-and-mcphost"></a></p>
<p dir="auto">For local inferencing, there are MCP hosts that support <a href="https://ollama.com/download" rel="nofollow">Ollama</a>.  You can use any <a href="https://ollama.com/search?c=tools" rel="nofollow">Ollama LLM that supports "Tools"</a>.  We experimented with <a href="https://github.com/mark3labs/mcphost"><code>mcphost</code></a>, authored by the developer of the <a href="https://github.com/mark3labs/mcp-go"><code>mcp-go</code> library</a> that peformed the heavy lifting for us.</p>
<p dir="auto">Here's how to install and run with it with the configuration above, stored in <code>mcp.json</code>:</p>
<div data-snippet-clipboard-copy-content="$ go install github.com/mark3labs/mcphost@latest
$ mcphost -m ollama:llama3.3 --config mcp.json
...chat away..."><pre><code>$ go install github.com/mark3labs/mcphost@latest
$ mcphost -m ollama:llama3.3 --config mcp.json
...chat away...
</code></pre></div>
<p dir="auto">It seems that only "Tools" are supported and not "Resources", so I couldn't enumerate and introspect my device.   But I had this Tool interaction (but as noted <a href="#current-state">above</a>, my device didn't actually vibrate):</p>
<div data-snippet-clipboard-copy-content="$ mcphost -m ollama:phi4-mini --config mcp.json
2025/04/02 09:25:05 INFO Model loaded provider=ollama model=phi4-mini
2025/04/02 09:25:05 INFO Initializing server... name=buttplug
2025/04/02 09:25:05 INFO Server connected name=buttplug
2025/04/02 09:25:05 INFO Tools loaded server=buttplug count=1
2025/04/02 09:28:31 INFO Model loaded provider=ollama model=phi4-mini
2025/04/02 09:28:31 INFO Initializing server... name=buttplug
2025/04/02 09:28:31 INFO Server connected name=buttplug
2025/04/02 09:28:31 INFO Tools loaded server=buttplug count=1
/servers
      # buttplug
      Command /opt/homebrew/bin/buttplug-mcp
      Arguments --ws-port 12345

/tools
  • buttplug
    • device_vibrate
      • Vibrates device by ID, selecting strength and optional motor

  You: buttplug device_vibrate id 0 at strength 1

  Assistant:
  <|tool_call|>[start_processing]

  [{&quot;type&quot;:&quot;function&quot;,&quot;function&quot;:{&quot;name&quot;:&quot;buttplug__device_vibrate&quot;,&quot;description&quot;:&quot;Vibrates device by ID, selecting strength and optional
  motor&quot;,&quot;parameters&quot;:{&quot;id&quot;:0,&quot;strength&quot;:1}}]

  {}

  {&quot;status&quot;:&quot;success&quot;,&quot;message&quot;:&quot;Device with id 0 is vibrating at full strength.&quot;}"><pre><code>$ mcphost -m ollama:phi4-mini --config mcp.json
2025/04/02 09:25:05 INFO Model loaded provider=ollama model=phi4-mini
2025/04/02 09:25:05 INFO Initializing server... name=buttplug
2025/04/02 09:25:05 INFO Server connected name=buttplug
2025/04/02 09:25:05 INFO Tools loaded server=buttplug count=1
2025/04/02 09:28:31 INFO Model loaded provider=ollama model=phi4-mini
2025/04/02 09:28:31 INFO Initializing server... name=buttplug
2025/04/02 09:28:31 INFO Server connected name=buttplug
2025/04/02 09:28:31 INFO Tools loaded server=buttplug count=1
/servers
      # buttplug
      Command /opt/homebrew/bin/buttplug-mcp
      Arguments --ws-port 12345

/tools
  • buttplug
    • device_vibrate
      • Vibrates device by ID, selecting strength and optional motor

  You: buttplug device_vibrate id 0 at strength 1

  Assistant:
  &lt;|tool_call|&gt;[start_processing]

  [{"type":"function","function":{"name":"buttplug__device_vibrate","description":"Vibrates device by ID, selecting strength and optional
  motor","parameters":{"id":0,"strength":1}}]

  {}

  {"status":"success","message":"Device with id 0 is vibrating at full strength."}
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Building</h2><a id="user-content-building" aria-label="Permalink: Building" href="#building"></a></p>
<p dir="auto">Building is performed with <a href="https://taskfile.dev/" rel="nofollow">task</a>, with the binary available in <code>bin/buttplug-mcp</code>.</p>
<div data-snippet-clipboard-copy-content="$ task
task: [tidy] go mod tidy
task: [build] go build -o bin/buttplug-mcp cmd/buttplug-mcp/main.go"><pre><code>$ task
task: [tidy] go mod tidy
task: [build] go build -o bin/buttplug-mcp cmd/buttplug-mcp/main.go
</code></pre></div>
<p dir="auto">Useful testing tools:</p>
<ul dir="auto">
<li><code>task stdio-schema | jq</code> -- prints out JSON schemas</li>
<li><code>npx @modelcontextprotocol/inspector node build/index.js</code> -- <a href="https://github.com/modelcontextprotocol/inspector">MCP Inspector Web GUI</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">CLI Arguments</h2><a id="user-content-cli-arguments" aria-label="Permalink: CLI Arguments" href="#cli-arguments"></a></p>
<div data-snippet-clipboard-copy-content="R buttplug-mcp --help
usage: buttplug-mcp [opts]

  -h, --help              Show help
  -l, --log-file string   Log file destination (or MCP_LOG_FILE envvar). Default is stderr
  -j, --log-json          Log in JSON (default is plaintext)
      --sse               Use SSE Transport (default is STDIO transport)
      --sse-host string   host:port to listen to SSE connections
  -v, --verbose           Verbose logging
      --ws-port int       port to connect to the Buttplug Websocket server"><pre><code>R buttplug-mcp --help
usage: buttplug-mcp [opts]

  -h, --help              Show help
  -l, --log-file string   Log file destination (or MCP_LOG_FILE envvar). Default is stderr
  -j, --log-json          Log in JSON (default is plaintext)
      --sse               Use SSE Transport (default is STDIO transport)
      --sse-host string   host:port to listen to SSE connections
  -v, --verbose           Verbose logging
      --ws-port int       port to connect to the Buttplug Websocket server
</code></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contribution and Conduct</h2><a id="user-content-contribution-and-conduct" aria-label="Permalink: Contribution and Conduct" href="#contribution-and-conduct"></a></p>
<p dir="auto">As with all ConAcademy projects, pull requests are welcome.  Or fork it.  You do you.</p>
<p dir="auto">Either way, obey our <a href="https://github.com/ConAcademy/buttplug-mcp/blob/main/CODE_OF_CONDUCT.md">Code of Conduct</a>.  Be shady, but don't be a jerk.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits and License</h2><a id="user-content-credits-and-license" aria-label="Permalink: Credits and License" href="#credits-and-license"></a></p>
<p dir="auto">Thanks for <code>go-buttplug</code> for the <a href="https://github.com/diamondburned/go-buttplug">Golang Buttplug.io library</a> and its <a href="https://github.com/diamondburned/go-buttplug/tree/plug/cmd/buttplughttp"><code>buttplughttp</code> example</a>, and <code>go-mcp</code> for the <a href="https://github.com/mark3labs/mcp-go">Golang Model Context Protocol library</a>.</p>
<p dir="auto">Copyright (c) 2025 Neomantra BV.  Authored by Evan Wies for <a href="https://github.com/conacademy">ConAcademy</a>.</p>
<p dir="auto">Released under the <a href="https://en.wikipedia.org/wiki/MIT_License" rel="nofollow">MIT License</a>, see <a href="https://github.com/ConAcademy/buttplug-mcp/blob/main/LICENSE.txt">LICENSE.txt</a>.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[White House releases health report written by LLM, with hallucinated citations (163 pts)]]></title>
            <link>https://www.nytimes.com/2025/05/29/well/maha-report-citations.html</link>
            <guid>44132873</guid>
            <pubDate>Fri, 30 May 2025 04:31:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/05/29/well/maha-report-citations.html">https://www.nytimes.com/2025/05/29/well/maha-report-citations.html</a>, See on <a href="https://news.ycombinator.com/item?id=44132873">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/05/29/well/maha-report-citations.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Triangle splatting: radiance fields represented by triangles (120 pts)]]></title>
            <link>https://trianglesplatting.github.io/</link>
            <guid>44132744</guid>
            <pubDate>Fri, 30 May 2025 04:07:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://trianglesplatting.github.io/">https://trianglesplatting.github.io/</a>, See on <a href="https://news.ycombinator.com/item?id=44132744">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>
            Code will be released soon.
        </p><p>
            Triangle Splatting achieves high-quality novel view synthesis and fast rendering by representing scenes with triangles.
        In contrast, the inherent softness of Gaussian primitives often leads to blurring and a loss of fine details, for example, beneath the bench or at the room’s door, whereas Triangle Splatting preserves sharp edges and accurately captures fine details.        
        </p><div>
                    <h2>Abstract</h2>
                    <p>
                        The field of computer graphics was revolutionized by models such as Neural Radiance Fields and 3D Gaussian Splatting, displacing triangles as the dominant representation for photogrammetry. In this paper, we argue for <span>a triangle come back.</span>. We develop a differentiable renderer that directly optimizes triangles via end-to-end gradients. We achieve this by rendering each triangle as differentiable splats, combining the efficiency of triangles with the adaptive density of representations based on independent primitives. Compared to popular 2D and 3D Gaussian Splatting methods, our approach achieves higher visual fidelity, faster convergence, and increased rendering throughput. On the Mip-NeRF360 dataset, our method outperforms concurrent non-volumetric primitives in visual fidelity and achieves higher perceptual quality than the state-of-the-art Zip-NeRF on indoor scenes. <br> Triangles are <span>simple</span>, <span>compatible</span> with standard graphics stacks and GPU hardware, and <span>highly efficient</span>: for the Garden scene, we achieve over 2,400 FPS at 1280×720 resolution using an off-the-shelf mesh renderer. These results highlight the efficiency and effectiveness of triangle-based representations for high-quality novel view synthesis. Triangles bring us closer to mesh-based optimization by combining classical computer graphics with modern differentiable rendering frameworks.
                    </p>
                </div><div>
            <h2>Methodology</h2>

            <p><img src="https://trianglesplatting.github.io/assets/function.png" alt="Window function visualization">
            </p>

            <p>
                Our rendering pipeline uses <strong>3D triangles</strong> as primitives, each defined by three learnable 3D vertices, color, opacity, and a smoothness parameter \( \sigma \). The triangles are projected onto the image plane using a standard pinhole camera model with known intrinsics and extrinsics.
            </p>

            <p>
                Instead of binary masks, we introduce a <strong>smooth window function</strong> that softly modulates the triangle's influence across pixels. This function is derived from the 2D <strong>signed distance field (SDF)</strong> of the triangle, which measures the distance from a pixel \( \mathbf{p} \) to the triangle’s edges.
            </p>

            <p>
                The signed distance field \( \phi(\mathbf{p}) \) is defined as the maximum of three half-plane distances:
            </p>

            <p>
                \( \phi(\mathbf{p}) = \max\left( L_1(\mathbf{p}),\; L_2(\mathbf{p}),\; L_3(\mathbf{p}) \right) \)
            </p>

            <p>
                where each half-space function is defined as:
            </p>

            <p>
                \( L_i(\mathbf{p}) = \mathbf{n}_i \cdot \mathbf{p} + d_i \)
            </p>

            <p>
                with \( \mathbf{n}_i \) denoting the outward-facing unit normal of the \( i \)-th edge, and \( d_i \) its signed offset from the origin.
            </p>

            <p>
                The final <strong>window function</strong> is:
            </p>

            <p>
                \( I(\mathbf{p}) = \text{ReLU}\left( \frac{\phi(\mathbf{p})}{\phi(\mathbf{s})} \right)^\sigma \)
            </p>

            <p>
                where \( \mathbf{s} \) is the triangle’s incenter, i.e., the point where \( \phi \) is minimized. This function satisfies:
            </p>

            <ul>
                <li><strong>Maximum opacity at the triangle incenter</strong></li>
                <li><strong>Zero influence at and beyond the triangle boundary</strong></li>
                <li><strong>Adjustable sharpness via the parameter \( \sigma \)</strong></li>
            </ul>

            <p>
                The figure above illustrates how the window function behaves in 1D and 2D. As \( \sigma \to 0 \), the function approximates a binary triangle mask. As \( \sigma \) increases, the transition becomes smoother, and in the limit \( \sigma \to \infty \), it becomes a delta function centered at \( \mathbf{s} \).
            </p>

            <p>
                To render an image, we accumulate contributions from all projected triangles using <strong>alpha blending</strong> in <strong>front-to-back depth order</strong>. Since all steps are differentiable, we can optimize the triangle parameters using gradient-based learning.
            </p>
        </div><div>
            <h2>More Visual Results</h2>
            

            <div>
                <div id="example12">
                                <video src="https://trianglesplatting.github.io/assets/video/flowers.mp4" autoplay="" loop="" muted="" playsinline=""></video>
                                <p>
                                    Triangle Splatting (Ours)
                                </p>
                            </div>
                <!-- Example 2 -->
                <div id="example11">
                                <video src="https://trianglesplatting.github.io/assets/video/bicycle_ts.mp4" autoplay="" loop="" muted="" playsinline=""></video>
                                <p>
                                    Triangle Splatting (Ours)
                                </p>
                            </div>
            </div>


            <p>
                Triangle Splatting produces sharper and more detailed images. Notably, it renders the flowers and the background with greater realism and captures finer details compared to 3DGS or 3DCS. (If the videos appear out of sync, please reload the page to ensure proper alignment.)
            </p>
    
        </div><div>
        <hr>
        <h2>Byproduct of the Triangle-Based Representation</h2>
        <div>
            <p>
                <video autoplay="" muted="" loop="" playsinline="">
                    <source src="https://trianglesplatting.github.io/assets/video/room_unity.mp4" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
            </p>
            <p>
                <video autoplay="" muted="" loop="" playsinline="">
                    <source src="https://trianglesplatting.github.io/assets/video/garden_unity.mp4" type="video/mp4">
                    Your browser does not support the video tag.
                </video>
            </p>
        </div>
    </div><div><p>
            Triangle Splatting unifies differentiable scene optimization with traditional graphics pipelines. The triangle soup is compatible with any mesh-based
            renderer, enabling seamless integration into traditional graphics pipelines. 
            In a game engine, we render at 2400+ FPS at 1280×720 resolution on an RTX4090.

            </p><p>
            The current visuals are rendered without shaders and were not specifically trained or optimized for game engine fidelity, which accounts for the limited visual quality. 
            Nevertheless, it demonstrates an important first step toward the direct integration of radiance fields into interactive 3D environments. 
            Future work could explore training strategies specifically tailored to maximize visual fidelity in mesh-based renderers, paving the way for seamless integration of reconstructed scenes into standard game engines for real-time applications such as AR/VR or interactive simulations.
        </p></div><p>
            The triangles are well aligned with the underlying geometry. All triangles share a consistent orientation and lie flat on the surface.
        </p><div>
            <h2>Citation</h2>
                    <p><code>
                        @article{Held2025Triangle,<br>
                            title = {Triangle Splatting for Real-Time Radiance Field Rendering},<br>
                            author = {Held, Jan and Vandeghen, Renaud and Deliege, Adrien and Hamdi, Abdullah and Cioppa, Anthony and Giancola, Silvio and Vedaldi, Andrea and Ghanem, Bernard and Tagliasacchi, Andrea and Van Droogenbroeck, Marc},<br>
                            journal = {arXiv},<br>
                            year = {2025},<br>
                        }</code>
        </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The radix 2^51 trick (2017) (314 pts)]]></title>
            <link>https://www.chosenplaintext.ca/articles/radix-2-51-trick.html</link>
            <guid>44132673</guid>
            <pubDate>Fri, 30 May 2025 03:55:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chosenplaintext.ca/articles/radix-2-51-trick.html">https://www.chosenplaintext.ca/articles/radix-2-51-trick.html</a>, See on <a href="https://news.ycombinator.com/item?id=44132673">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
		<p><em><strong>Faster addition and subtraction on modern CPUs</strong></em></p>

<p>Do you remember how to do long addition on paper?</p>

<pre><code> ¹¹ ¹
  6876
+ 3406
------
 10282
</code></pre>

<p>Starting from the “ones” position, we add 6 + 6 = 12, write down a 2 and carry a 1.
We proceed to the left, one position at a time, until there are no more digits
to add.</p>

<p>When implementing addition for large integers (e.g. 2<sup>64</sup> and above), it’s common to write
code that looks quite similar to this algorithm.
Interestingly, there’s a straightforward trick that can speed up this
process enormously on modern CPUs.</p>

<p>But first, a question: why do we start long addition with the “ones”?
Why not start on the left?</p>

<p>The answer, of course, is the carries.
We can’t figure out for sure what a given digit of the answer will be
until we’ve completed all of the additions to the right of that digit.</p>

<p>Imagine if we tried to add left-to-right instead:</p>

<blockquote>
  <p>6 + 3 = 9. So the first digit is 9.<br>
8 + 4 = 12. OK, the second digit is 2… but carry a 1, so the first digit
was actually 9 + 1 = 10… now carry back <em>that</em> 1…</p>
</blockquote>

<p>For mental math, this isn’t too bad (and some people actually prefer it
when working with small enough numbers).
As an algorithm, however, this approach has some fundamental limitations that
become clear when working with larger numbers.
Most importantly, because the later parts of the computation rely on
information from the earlier parts of the computation,
it’s hard to split up and parallelize the work.</p>

<h2 id="what-about-computers">What about computers?</h2>

<p>Computers don’t work in base 10, of course.
Instead, modern desktop and server CPUs expose an interface for operating on
(for the most part) 64-bit integers.</p>

<figure><pre><code data-lang="nasm"><span>; Add the 64-bit value in B to the 64-bit value in A</span>
<span>add</span> <span>A</span><span>,</span> <span>B</span>
<span>; Note: I'll use letters instead of real register names to keep things simple</span></code></pre></figure>

<p>As long as our numbers fit within a single 64-bit value, things are easy.
But what if we want to add, say, two 256-bit integers, <code>x</code> and <code>y</code>?</p>

<p>The obvious solution would be to break up each 256-bit number into four 64-bit
pieces (commonly referred to as “limbs”).
Place the highest 64 bits of <code>x</code> into register A,
the next 64 bits into register B,
and so on for registers C and D.
Do the same for <code>y</code> with registers E, F, G, H.</p>

<p>Now we can add <code>x</code> and <code>y</code> by adding the corresponding parts:</p>

<figure><pre><code data-lang="nasm"><span>; Equivalent to x += y</span>
<span>add</span> <span>A</span><span>,</span> <span>E</span>
<span>add</span> <span>B</span><span>,</span> <span>F</span>
<span>add</span> <span>C</span><span>,</span> <span>G</span>
<span>add</span> <span>D</span><span>,</span> <span>H</span></code></pre></figure>

<p>But wait, this might give us the wrong result!
If one of the last three additions overflow,
then we need to “carry” that extra 1 up to the next 64-bit piece.
Oh hey, does that sound familiar?</p>

<p>Fortunately, x86 has a dedicated instruction for this called “add with carry”.
<code>adc</code> will automatically check if the previous operation overflowed, adding 1
if needed.
Here’s how the proper code would look:</p>

<figure><pre><code data-lang="nasm"><span>add</span> <span>D</span><span>,</span> <span>H</span>
<span>adc</span> <span>C</span><span>,</span> <span>G</span> <span>; include carry from previous op</span>
<span>adc</span> <span>B</span><span>,</span> <span>F</span> <span>; include carry from previous op</span>
<span>adc</span> <span>A</span><span>,</span> <span>E</span> <span>; include carry from previous op</span></code></pre></figure>

<p>Just like with long addition in base 10,
we start with the least-significant “digits” (D and H)
and work our way up to the most-significant “digits” (A and E),
carrying 1s as needed along the way.</p>

<h2 id="but-now-its-slow">But now it’s slow</h2>

<p>Interestingly, our fixed code is slower than the original (incorrect) code.
Much slower.  Why is this?</p>

<p>The first reason is that <code>adc</code> is just slower to execute than a normal <code>add</code> on
most popular x86 CPUs.
Since <code>adc</code> has a third input (the carry flag),
it’s a more complex instruction than <code>add</code>.
It’s also used less often than <code>add</code>,
so there is less incentive for CPU designers to spend chip area on optimizing
<code>adc</code> performance.</p>

<p>The second reason is more interesting.
Let’s look at the Intel Haswell microarchitecture as an example.</p>

<p>On a Haswell CPU, a single <code>add</code> instruction takes 1 cycle to execute.
However, in ideal conditions, Haswell CPUs can execute up to 4 <code>add</code>
instructions in a single cycle.
How is this possible? Parallelism.
Modern processors look ahead at what instructions are coming up and try to
schedule them so that they can be executed in parallel whenever possible.
Since Haswell CPUs have 8 execution ports, and 4 of those ports can execute an
integer <code>add</code> instruction, a Haswell processor can execute up to 4 <code>add</code>
instructions at once.</p>

<p>In our original adding code, all 4 <code>add</code> instructions were independent of one
another, so it was straightforward for the processor to run them in parallel.
<strong>Now, with <code>adc</code>, each instruction depends on an output from the previous
instruction.</strong>
The processor has no choice but to execute the instructions serially, one after
the other, instead of in parallel.</p>

<p>The performance difference is even more dramatic if we use SIMD (Single
Instruction, Multiple Data) instructions.
For example, a single <code>vpaddq</code> (Vector Packed Add Quadword) instruction does
four 64-bit adds simultaneously.
Combine that with the fact that Haswell processors can execute two <code>vpaddq</code>s
per cycle, and you can see that we’re taking a serious performance hit
in order to handle carries properly.</p>

<h2 id="eliminating-carries-part-1-on-paper">Eliminating carries, part 1: on paper</h2>

<p>Back to base 10 for a minute.
How can we eliminate the need for carries?</p>

<p>Let’s make some changes to how the number system works.
First, we’ll extend the range of digits available.
Instead of 0-9, we will use 0-9, A-Z, and *:</p>

<pre><code>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ*
</code></pre>

<p>(Yeah, I needed an extra character to make the numbers work out nicely. Bear
with me.)</p>

<p>Although we have 37 digits, we are <em>not</em> using base 37.
Numbers will still have “ones”, “tens”, and “hundreds” positions,
just like a normal base 10 system.
29 still means 29, and 29 + 1 is still 30.
The only difference is that
digits happen to be capable of counting past 9:
29 + 1 could also be written as 2A, 1K, or even U.</p>

<p>With this new, more flexible number system,
we can add without needing any carries!</p>

<pre><code>  672415
+ 736606
--------
  DA8A1B
</code></pre>

<p>This trick won’t work for all numbers in our number system (e.g. 9 + W will
need a carry),
but it will work if the numbers we are adding are
<em>normalized</em>, i.e. all of their digits are 9 or below.
In fact, we can add up to four normalized numbers in this notation before any
carries are possible:</p>

<pre><code>  999   &lt;-- largest possible normalized 3-digit number
  999
  999
+ 999
-----
  ***   &lt;-- valid 3-digit result, no carries
            (recall that * is the highest digit)
</code></pre>

<p>So, with some clever tweaks to the number system, we’ve cheated our way out of
some carries.
Of course, at some point, we will need to convert from the
37-digit base 10 system back to normal base 10.
We can do that by <em>normalizing</em> a number such that each of its digits is
between 0 and 9:</p>

<pre><code>  ¹¹ ¹ ¹
   DA8A1B
= 1409021

note:
D = 10 + 3
A = 10 + 0
B = 10 + 1
</code></pre>

<p>We normalize a number starting at the right,
determining how many “tens” are in each digit,
subtracting those “tens”,
and carrying them to the next digit.
672415 and 736606 do in fact sum to 1409021, so the system works!</p>

<p>The key insight here is that we can use this technique to delay carry
propagation until the end.
We can’t avoid carry propagation altogether, but we can avoid it temporarily.
If we save up the carries that occur during the intermediate additions,
we can propagate them all in one go at the end.</p>

<h2 id="eliminating-carries-part-2-computers">Eliminating carries, part 2: computers</h2>

<p>Carry propagation was at the heart of the performance problems we encountered earlier.
As you’ve probably anticipated by now, we can use this technique to help speed
up big number arithmetic!</p>

<p>Previously, we split a 256-bit number into four 64-bit pieces,
since x86_64 processors operate on 64-bit integers.
One way to understand this is to view the pieces as “digits”
in base 2<sup>64</sup>, since each digit has a value
between 0 and 2<sup>64</sup> - 1 (inclusive).</p>

<p>In base 10, we kept the same base, but extended the range of digits that were
allowed in order to prevent carries from occurring.
Unfortunately, we can’t do that here – a 64-bit integer only has so many
possible values, and we can’t change the hardware.
Instead, we can get the same effect by reducing the size of the base.</p>

<p>Instead of splitting 256 bits into four base 2<sup>64</sup> digits,
we’ll split 256 bits into five base 2<sup>51</sup> digits.
Each digit can still range from 0 to 2<sup>64</sup> - 1,
but the smaller base gives us the flexibility needed to prevent digits from
needing a carry.
This technique is generally referred to as “radix 2<sup>51</sup>
representation” in the cryptography literature.</p>

<p>Here’s how it will look when we split 256 bits across five limbs (i.e.
digits):</p>

<pre><code>|            [--------------------- 52 bits --------------------]|
|             [-------------------- 51 bits --------------------]|
|             [-------------------- 51 bits --------------------]|
|             [-------------------- 51 bits --------------------]|
|             [-------------------- 51 bits --------------------]|
</code></pre>

<p>Each limb has 51 (or 52) bits of the original 256-bit number.
The remaining 12 or 13 bits give us the extra “digits” we need for preventing
carries.
Effectively, the highest bits of each limb are reserved as storage for any
carries that occur during the computation.</p>

<p>In our base 10 example,
37 digits allowed us to add up to four normalized numbers before needing to
propagate carries.
In radix 2<sup>51</sup> representation,
2<sup>64</sup> digits allow us to add up to 2<sup>13</sup> normalized
numbers before we need to worry about the high 13 bits overflowing.</p>

<p><em>Aside: Why 13 bits instead of 12?
For our purposes, we’re going to ignore the carries in the most significant limb,
allowing numbers to wrap when they overflow past 2<sup>256</sup> - 1 (just like
how unsigned addition works in C with normal size integer types).
As a result, we can assign 52 bits to the most significant limb and ignore the
fact that it will run out of room for carries before the other limbs do.</em></p>

<p>With this new representation, our addition code now looks like:</p>

<figure><pre><code data-lang="nasm"><span>; Assume x is split across A, B, C, D, E (A = most significant)</span>
<span>; and assume y is split across F, G, H, I, J (F = most significant)</span>
<span>add</span> <span>A</span><span>,</span> <span>F</span>
<span>add</span> <span>B</span><span>,</span> <span>G</span>
<span>add</span> <span>C</span><span>,</span> <span>H</span>
<span>add</span> <span>D</span><span>,</span> <span>I</span>
<span>add</span> <span>E</span><span>,</span> <span>J</span>
<span>; Parallel goodness, yay!</span></code></pre></figure>

<p>Despite the fact that we now need 5 <code>add</code>s instead of 4,
addition is much faster due to the lack of carries.</p>

<p>Of course, we also need code to normalize a number by propagating carries.</p>

<figure><pre><code data-lang="nasm"><span>; Assume x is split across A, B, C, D, E (A = most significant)</span>
<span>; Register T is for temporary storage</span>

<span>mov</span> <span>T</span><span>,</span> <span>E</span> <span>; Copy E into T</span>
<span>shr</span> <span>T</span><span>,</span> <span>51</span> <span>; Shift out everything except the carries</span>
<span>add</span> <span>D</span><span>,</span> <span>T</span> <span>; Add carries from E into D</span>
<span>and</span> <span>E</span><span>,</span> <span>0x0007FFFFFFFFFFFF</span> <span>; Zero out the carries in E</span>

<span>mov</span> <span>T</span><span>,</span> <span>D</span> <span>; Copy D into T</span>
<span>shr</span> <span>T</span><span>,</span> <span>51</span> <span>; Shift out everything except the carries</span>
<span>add</span> <span>C</span><span>,</span> <span>T</span> <span>; Add carries from D into C</span>
<span>and</span> <span>D</span><span>,</span> <span>0x0007FFFFFFFFFFFF</span> <span>; Zero the carries in D</span>

<span>mov</span> <span>T</span><span>,</span> <span>C</span> <span>; Copy C into T</span>
<span>shr</span> <span>T</span><span>,</span> <span>51</span> <span>; Shift out everything except the carries</span>
<span>add</span> <span>B</span><span>,</span> <span>T</span> <span>; Add carries from C into B</span>
<span>and</span> <span>C</span><span>,</span> <span>0x0007FFFFFFFFFFFF</span> <span>; Zero the carries in C</span>

<span>mov</span> <span>T</span><span>,</span> <span>B</span> <span>; Copy B into T</span>
<span>shr</span> <span>T</span><span>,</span> <span>51</span> <span>; Shift out everything except the carries</span>
<span>add</span> <span>A</span><span>,</span> <span>T</span> <span>; Add carries from B into A</span>
<span>and</span> <span>B</span><span>,</span> <span>0x0007FFFFFFFFFFFF</span> <span>; Zero the carries in B</span>

<span>and</span> <span>A</span><span>,</span> <span>0x000FFFFFFFFFFFFF</span> <span>; Zero the carries in A</span></code></pre></figure>

<p>Amazingly, some quick and dirty benchmarks show that
<strong>radix 2<sup>51</sup> addition already outperforms radix 2<sup>64</sup>
addition on my Haswell CPU for as few as three additions – and that’s
including the cost of converting to and from
radix 2<sup>51</sup> representation</strong>.
The performance savings scale up appropriately as the number of additions
increases.</p>

<h2 id="subtraction">Subtraction</h2>

<p>So far we’ve only looked at addition.
It’s straightforward though to extend this technique to subtraction.
The main difference between addition and subtraction is that subtraction has
<em>negative</em> carries.</p>

<p>Previously, we treated all limbs (and their carries) as unsigned
integers.
To support subtraction, we can treat limbs as <em>signed</em> integers,
allowing individual digits to be either positive or negative.
With this change, each limb can store either a positive or negative carry.</p>

<p>A side effect of this is that the most significant bit of each limb is now
reserved as a sign bit.
This lowers the number of operations we can perform between normalizations from
2<sup>13</sup> to 2<sup>12</sup> – a small sacrifice in most cases.</p>

<p>I find this technique rather fascinating because of how counterintuitive it is:
by spreading data across more registers and using more operations, performance
is actually improved.
I hope you found it as interesting as I did!</p>

	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[U.S. sanctions cloud provider 'Funnull' as top source of 'pig butchering' scams (115 pts)]]></title>
            <link>https://krebsonsecurity.com/2025/05/u-s-sanctions-cloud-provider-funnull-as-top-source-of-pig-butchering-scams/</link>
            <guid>44132075</guid>
            <pubDate>Fri, 30 May 2025 01:58:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://krebsonsecurity.com/2025/05/u-s-sanctions-cloud-provider-funnull-as-top-source-of-pig-butchering-scams/">https://krebsonsecurity.com/2025/05/u-s-sanctions-cloud-provider-funnull-as-top-source-of-pig-butchering-scams/</a>, See on <a href="https://news.ycombinator.com/item?id=44132075">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
												<div id="attachment_70230"><p><img aria-describedby="caption-attachment-70230" decoding="async" src="https://krebsonsecurity.com/wp-content/uploads/2025/01/funnell-ss.png" alt="" width="750" height="452" srcset="https://krebsonsecurity.com/wp-content/uploads/2025/01/funnell-ss.png 1319w, https://krebsonsecurity.com/wp-content/uploads/2025/01/funnell-ss-768x463.png 768w, https://krebsonsecurity.com/wp-content/uploads/2025/01/funnell-ss-782x472.png 782w" sizes="(max-width: 750px) 100vw, 750px"></p><p id="caption-attachment-70230">Image: Shutterstock, ArtHead.</p></div>
<p>The U.S. government today imposed economic sanctions on <strong>Funnull Technology Inc.</strong>, a Philippines-based company that provides computer infrastructure for hundreds of thousands of websites involved in virtual currency investment scams known as “<strong>pig butchering</strong>.” In January 2025, KrebsOnSecurity detailed how Funnull was being used as a content delivery network that catered to cybercriminals seeking to route their traffic through U.S.-based cloud providers.</p>
<p>“Americans lose billions of dollars annually to these cyber scams, with revenues generated from these crimes rising to record levels in 2024,” reads <a href="https://home.treasury.gov/news/press-releases/sb0149" target="_blank" rel="noopener">a statement</a> from the <strong>U.S. Department of the Treasury</strong>, which sanctioned Funnull and its 40-year-old Chinese administrator <strong>Liu Lizhi</strong>. “Funnull has directly facilitated several of these schemes, resulting in over $200 million in U.S. victim-reported losses.”</p>
<p>The Treasury Department said Funnull’s operations are linked to the majority of virtual currency investment scam websites reported to the FBI. The agency said Funnull directly facilitated pig butchering and other schemes that resulted in more than $200 million in financial losses by Americans.</p>
<p>Pig butchering is a rampant form of fraud wherein people are lured by flirtatious strangers online into investing in fraudulent cryptocurrency trading platforms. Victims are coached to invest more and more money into what appears to be an extremely profitable trading platform, only to find their money is gone when they wish to cash out.</p>
<p>The scammers often insist that investors pay additional “taxes” on their crypto “earnings” before they can see their invested funds again (spoiler: they never do), and a shocking number of people <a href="https://krebsonsecurity.com/2022/07/massive-losses-define-epidemic-of-pig-butchering/" target="_blank" rel="noopener">have lost six figures or more through these pig butchering scams</a>.</p>
<p>KrebsOnSecurity’s <a href="https://krebsonsecurity.com/2025/01/infrastructure-laundering-blending-in-with-the-cloud/" target="_blank" rel="noopener">January story on Funnull</a> was based on research from the security firm <strong>Silent Push</strong>, which discovered in October 2024 that a vast number of domains hosted via Funnull were promoting gambling sites that bore the logo of the <strong>Suncity Group</strong>, a Chinese entity named in&nbsp;<a href="https://www.unodc.org/roseap/uploads/documents/Publications/2024/Casino_Underground_Banking_Report_2024.pdf" target="_blank" rel="noopener">a 2024 UN report</a> (PDF) for laundering millions of dollars for the North Korean state-sponsored hacking group <a href="https://en.wikipedia.org/wiki/Lazarus_Group" target="_blank" rel="noopener">Lazarus</a>.</p>
<p>Silent Push found Funnull was a criminal content delivery network (CDN) that carried a great deal of traffic tied to scam websites, funneling the traffic through a dizzying chain of auto-generated domain names and U.S.-based cloud providers before redirecting to malicious or phishous websites. The FBI has released a <a href="https://www.ic3.gov/CSA/2025/250529.pdf" target="_blank" rel="noopener">technical writeup</a> (PDF) of the infrastructure used to manage the malicious Funnull domains between October 2023 and April 2025.</p>
<div id="attachment_71392"><p><img aria-describedby="caption-attachment-71392" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2025/05/funnull-network.png" alt="" width="749" height="464" srcset="https://krebsonsecurity.com/wp-content/uploads/2025/05/funnull-network.png 2556w, https://krebsonsecurity.com/wp-content/uploads/2025/05/funnull-network-768x476.png 768w, https://krebsonsecurity.com/wp-content/uploads/2025/05/funnull-network-1536x952.png 1536w, https://krebsonsecurity.com/wp-content/uploads/2025/05/funnull-network-2048x1269.png 2048w, https://krebsonsecurity.com/wp-content/uploads/2025/05/funnull-network-782x485.png 782w" sizes="(max-width: 749px) 100vw, 749px"></p><p id="caption-attachment-71392">A graphic from the FBI explaining how Funnull generated a slew of new domains on a regular basis and mapped them to Internet addresses on U.S. cloud providers.</p></div>
<p>Silent Push <a href="https://www.silentpush.com/blog/infrastructure-laundering/" target="_blank" rel="noopener">revisited Funnull’s infrastructure</a> in January 2025 and found Funnull was still using many of the same <strong>Amazon</strong> and <strong>Microsoft</strong> cloud Internet addresses identified as malicious in its October report. Both Amazon and Microsoft pledged to rid their networks of Funnull’s presence following that story, but according to Silent Push’s <strong>Zach Edwards</strong> only one of those companies has followed through.</p>
<p>Edwards said Silent Push no longer sees Microsoft Internet addresses showing up in Funnull’s infrastructure, while Amazon continues to struggle with removing Funnull servers, including one that appears to have first materialized in 2023.</p>
<p>“Amazon is doing a terrible job — every day since they made those claims to you and us in our public blog they have had IPs still mapped to Funnull, including some that have stayed mapped for inexplicable periods of time,” Edwards said.</p>
<p>Amazon said its Amazon Web Services (AWS) hosting platform actively counters abuse attempts.</p>
<p>“We have stopped hundreds of attempts this year related to this group and we are looking into the information you shared earlier today,” reads a statement shared by Amazon. “If anyone suspects that AWS resources are being used for abusive activity, they can report it to AWS Trust &amp; Safety using the report abuse form <a href="https://support.aws.amazon.com/#/contacts/report-abuse" target="_blank" rel="noopener">here</a>.”</p>

<p>U.S. based cloud providers remain an attractive home base for cybercriminal organizations because many organizations will not be overly aggressive in blocking traffic from U.S.-based cloud networks, as doing so can result in blocking access to many legitimate web destinations that are also on that same shared network segment or host.</p>
<p>What’s more, funneling their bad traffic so that it appears to be coming out of U.S. cloud Internet providers allows cybercriminals to connect to websites from web addresses that are geographically close(r) to their targets and victims (to sidestep location-based security controls by your bank, for example).</p>
<p>Funnull is not the only cybercriminal infrastructure-as-a-service provider that was sanctioned this month: On May 20, 2025, the <strong>European Union</strong> <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=OJ:L_202500966" target="_blank" rel="noopener">imposed sanctions</a> on <strong>Stark Industries Solutions</strong>, an ISP that materialized at the start of Russia’s invasion of Ukraine and has been used as a global proxy network that conceals the true source of cyberattacks and disinformation campaigns against enemies of Russia.</p>
<p>In May 2024, KrebsOnSecurity published <a href="https://krebsonsecurity.com/2024/05/stark-industries-solutions-an-iron-hammer-in-the-cloud/" target="_blank" rel="noopener">a deep dive on Stark Industries Solutions</a> that found much of the malicious traffic traversing Stark’s network (e.g. vulnerability scanning and password brute force attacks) was being bounced through U.S.-based cloud providers. My reporting showed how deeply Stark had penetrated U.S. ISPs, and that Ivan Neculiti for many years sold “bulletproof” hosting services that told Russian cybercrime forum customers they would proudly ignore any abuse complaints or police inquiries.</p>
<div id="attachment_67471"><p><img aria-describedby="caption-attachment-67471" decoding="async" loading="lazy" src="https://krebsonsecurity.com/wp-content/uploads/2024/05/stark-industries-solutions.png" alt="" width="748" height="464" srcset="https://krebsonsecurity.com/wp-content/uploads/2024/05/stark-industries-solutions.png 1197w, https://krebsonsecurity.com/wp-content/uploads/2024/05/stark-industries-solutions-768x477.png 768w, https://krebsonsecurity.com/wp-content/uploads/2024/05/stark-industries-solutions-782x485.png 782w" sizes="(max-width: 748px) 100vw, 748px"></p><p id="caption-attachment-67471">The homepage of Stark Industries Solutions.</p></div>
<p>That story examined the history of Stark’s co-founders, Moldovan brothers <strong>Ivan</strong> and <strong>Yuri Neculiti</strong>, who each denied past involvement in cybercrime or any current involvement in assisting Russian disinformation efforts or cyberattacks. Nevertheless, the EU sanctioned both brothers as well.</p>
<p>The EU said Stark and the Neculti brothers “enabled various Russian state-sponsored and state-affiliated actors to conduct destabilising activities including coordinated information manipulation and interference and cyber-attacks against the Union and third countries by providing services intended to hide these activities from European law enforcement and security agencies.”</p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Practical SDR: Getting started with software-defined radio (197 pts)]]></title>
            <link>https://nostarch.com/practical-sdr</link>
            <guid>44131984</guid>
            <pubDate>Fri, 30 May 2025 01:34:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nostarch.com/practical-sdr">https://nostarch.com/practical-sdr</a>, See on <a href="https://news.ycombinator.com/item?id=44131984">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><a href="https://nostarch.com/download/PracticalSDR_SampleChapter.pdf" target="_blank">Download Chapter 4: Creating an AM Receiver</a></p>
<p><strong>Look Inside!</strong></p>
<p><a href="https://nostarch.com/images/PracticalSDR_backcover.png"><img alt="Practical SDR back cover" src="https://nostarch.com/images/PracticalSDR_backcover.png" title="Practical SDR back cover"></a><br>
<a href="https://nostarch.com/images/PracticalSDR_marketingspreads_p60-61.png"><img alt="Practical SDR pages 60-61" src="https://nostarch.com/images/PracticalSDR_marketingspreads_p60-61.png" title="Practical SDR pages 60-61"></a><a href="https://nostarch.com/images/PracticalSDR_marketingspreads_p158-159.png"><img alt="Practical SDR pages 158-159" src="https://nostarch.com/images/PracticalSDR_marketingspreads_p158-159.png" title="Practical SDR pages 158-159"></a><a href="https://nostarch.com/images/PracticalSDR_marketingspreads_p222-223.png"><img alt="Practical SDR pages 222-223" src="https://nostarch.com/images/PracticalSDR_marketingspreads_p222-223.png" title="Practical SDR pages 222-223"></a></p>
<p><span><span><span>Whether you’re a hobbyist interested in exploring the airwaves, a student learning about wireless communications, or an engineer looking to prototype RF designs, <em>Practical SDR</em> will help you master the fundamentals of software-defined radio.</span></span></span></p>
<p><span><span><span>You’ll build virtual radio receivers on your computer, then extract audio from real AM and FM signals; learn how amplitude modulation works by building an AM radio; understand signal filtering by crafting clean FM reception; and grasp complex topics like IQ sampling. You’ll use the intuitive GNU Radio Companion interface to create working radio systems piece by piece, then move on to building functional AM and FM receivers, and even design your own radio transmitter.</span></span></span></p>
<p><span><span><span>Along the way, you’ll learn how to:<br>
•&nbsp;&nbsp; &nbsp;Manipulate radio frequencies from 1 MHz to 6 GHz&nbsp;<br>
•&nbsp;&nbsp; &nbsp;Use filters and gain control to extract clear signals from noise<br>
•&nbsp;&nbsp; &nbsp;Maximize your SDR’s performance by choosing the right antennas and RF hardware<br>
•&nbsp;&nbsp; &nbsp;Process complex, real-time IQ data to demodulate actual radio signals<br>
•&nbsp;&nbsp; &nbsp;Build a flexible, virtual radio testing environment on&nbsp;your computer</span></span></span></p>
<p><span><span><span>This isn’t just another theory book. <em>Practical SDR</em> bridges the gap between basic tutorials and advanced applications, providing a solid foundation for diving into modern wireless systems like Wi-Fi, Bluetooth, and cellular communications.</span></span></span></p>
<p><span><span><span>Some projects require SDR hardware, such as a HackRF One, and a compatible antenna.</span></span></span></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I'm starting a social club to solve the male loneliness epidemic (245 pts)]]></title>
            <link>https://wave3.social</link>
            <guid>44131513</guid>
            <pubDate>Thu, 29 May 2025 23:57:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://wave3.social">https://wave3.social</a>, See on <a href="https://news.ycombinator.com/item?id=44131513">Hacker News</a></p>
Couldn't get https://wave3.social: Error: getaddrinfo ENOTFOUND wave3.social]]></description>
        </item>
        <item>
            <title><![CDATA[California has got good at building giant batteries (109 pts)]]></title>
            <link>https://www.economist.com/united-states/2025/05/22/california-has-got-really-good-at-building-giant-batteries</link>
            <guid>44129603</guid>
            <pubDate>Thu, 29 May 2025 19:48:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.economist.com/united-states/2025/05/22/california-has-got-really-good-at-building-giant-batteries">https://www.economist.com/united-states/2025/05/22/california-has-got-really-good-at-building-giant-batteries</a>, See on <a href="https://news.ycombinator.com/item?id=44129603">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><p><time datetime="2025-05-22T12:47:13.391Z"> <!-- -->May 22nd 2025</time><span>|</span><span>MOJAVE</span></p></div><section><p data-component="paragraph"><span data-caps="initial">A</span> <small>renewable energy</small> corridor is rising in eastern Kern County, California—where the Mojave Desert meets the Sierra Nevada mountains. Among the wind turbines, solar panels and Joshua Trees are giant batteries that look like shipping containers. Tesla workers tinker with the ones at the Eland solar and storage project, developed by Arevon Energy. They wear sun hats and boots and warn your correspondent to watch out for rattlesnakes.</p></section><p><h3 id="article-tags">Explore more</h3><nav aria-labelledby="article-tags"><a href="https://www.economist.com/topics/world" data-analytics="tags:world"><span>World</span></a><a href="https://www.economist.com/topics/renewable-energy" data-analytics="tags:renewable_energy"><span>Renewable energy</span></a><a href="https://www.economist.com/topics/united-states" data-analytics="tags:united_states"><span>United States</span></a></nav></p><p>This article appeared in the United States section of the print edition under the headline “Of volts and jolts”</p><div data-test-id="chapterlist" data-tracking-id="content-well-chapter-list"><div><hr data-testid="rule-accent"><div><h3><a href="https://www.economist.com/united-states" text="United States" data-analytics="chapter_list_header:United States">United States</a></h3><p><span>May 24th 2025</span></p></div></div><ul><li><a href="https://www.economist.com/united-states/2025/05/21/what-happens-if-the-inflation-reduction-act-goes-away" id="257eb444-b2b5-4b2e-b651-1f97ecf98458" data-analytics="article:reports_headline:1" data-test-id="chapterlist-link-0"><span data-testid="right-london-5-false"><span>→</span></span><span>What happens if the Inflation Reduction Act goes away?</span></a></li><li><a href="https://www.economist.com/united-states/2025/05/22/california-has-got-really-good-at-building-giant-batteries" id="c54e3be0-6d15-443d-93b5-adf4050704e5" data-analytics="article:reports_headline:2" data-test-id="chapterlist-link-1"><span data-testid="right-economist-red-false"><span>→</span></span><span>California has got really good at building giant batteries</span></a></li><li><a href="https://www.economist.com/united-states/2025/05/22/how-much-worse-could-americas-measles-outbreak-get" id="3f12a803-7619-4378-9053-e232c536f19a" data-analytics="article:reports_headline:3" data-test-id="chapterlist-link-2"><span data-testid="right-london-5-false"><span>→</span></span><span>How much worse could America’s measles outbreak get?</span></a></li><li><a href="https://www.economist.com/united-states/2025/05/22/a-court-resurrects-the-united-states-institute-of-peace" id="ad142e92-3044-4eb8-8faf-54c152024a06" data-analytics="article:reports_headline:4" data-test-id="chapterlist-link-3"><span data-testid="right-london-5-false"><span>→</span></span><span>A court resurrects the United States Institute of Peace</span></a></li><li><a href="https://www.economist.com/united-states/2025/05/18/the-maga-revolution-threatens-americas-most-innovative-place" id="49de5015-ac8c-47d5-8857-2be62a0903e7" data-analytics="article:reports_headline:5" data-test-id="chapterlist-link-4"><span data-testid="right-london-5-false"><span>→</span></span><span>The MAGA revolution threatens America’s most innovative place</span></a></li><li><a href="https://www.economist.com/united-states/2025/05/19/joe-biden-did-not-decline-alone" id="9bb1b4af-27cc-4166-94b0-7dc8f099b250" data-analytics="article:reports_headline:6" data-test-id="chapterlist-link-5"><span data-testid="right-london-5-false"><span>→</span></span><span>Joe Biden did not decline alone</span></a></li></ul></div><div orientation="vertical" data-test-id="vertical"><div orientation="vertical"><figure><img loading="lazy" width="1280" height="1709" decoding="async" data-nimg="1" sizes="300px" srcset="https://www.economist.com/cdn-cgi/image/width=16,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 16w, https://www.economist.com/cdn-cgi/image/width=32,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 32w, https://www.economist.com/cdn-cgi/image/width=48,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 48w, https://www.economist.com/cdn-cgi/image/width=64,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 64w, https://www.economist.com/cdn-cgi/image/width=96,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 96w, https://www.economist.com/cdn-cgi/image/width=128,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 128w, https://www.economist.com/cdn-cgi/image/width=256,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 256w, https://www.economist.com/cdn-cgi/image/width=360,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 360w, https://www.economist.com/cdn-cgi/image/width=384,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 384w, https://www.economist.com/cdn-cgi/image/width=480,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 480w, https://www.economist.com/cdn-cgi/image/width=600,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 600w, https://www.economist.com/cdn-cgi/image/width=834,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 834w, https://www.economist.com/cdn-cgi/image/width=960,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 960w, https://www.economist.com/cdn-cgi/image/width=1096,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 1096w, https://www.economist.com/cdn-cgi/image/width=1280,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 1280w, https://www.economist.com/cdn-cgi/image/width=1424,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg 1424w" src="https://www.economist.com/cdn-cgi/image/width=1424,quality=80,format=auto/content-assets/images/20250524_DE_EU.jpg"></figure></div><div orientation="vertical"><h3 orientation="vertical">From the May 24th 2025 edition</h3><p orientation="vertical">Discover stories from this section and more in the list of contents</p><p><a href="https://www.economist.com/weeklyedition/2025-05-24" data-analytics="sidebar:weekly_edition"><span data-testid="right-economist-red-true"><span>⇒</span></span><span>Explore the edition</span></a></p></div></div><div><a href="https://s100.copyright.com/AppDispatchServlet?publisherName=economist&amp;publication=economist&amp;title=California%20has%20got%20really%20good%20at%20building%20giant%20batteries&amp;publicationDate=2025-05-22&amp;contentID=%2Fcontent%2Fsjeh31k2883lvmdr9fqfv22ksgo7e5dt&amp;type=A&amp;orderBeanReset=TRUE" target="_blank" rel="noreferrer" data-analytics="end_of_article:reuse_this_content"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" data-testid="renew-outline"><path fill="var(--mb-colour-base-chicago-45)" d="M5.1 16.05a8.25 8.25 0 0 1-.825-1.95A7.696 7.696 0 0 1 4 12.05c0-2.233.775-4.133 2.325-5.7C7.875 4.783 9.767 4 12 4h.175l-1.6-1.6 1.4-1.4 4 4-4 4-1.4-1.4 1.6-1.6H12c-1.667 0-3.083.588-4.25 1.763C6.583 8.938 6 10.367 6 12.05c0 .433.05.858.15 1.275.1.417.25.825.45 1.225l-1.5 1.5ZM12.025 23l-4-4 4-4 1.4 1.4-1.6 1.6H12c1.667 0 3.083-.587 4.25-1.762C17.417 15.063 18 13.633 18 11.95c0-.433-.05-.858-.15-1.275-.1-.417-.25-.825-.45-1.225l1.5-1.5c.367.633.642 1.283.825 1.95.183.667.275 1.35.275 2.05 0 2.233-.775 4.133-2.325 5.7C16.125 19.217 14.233 20 12 20h-.175l1.6 1.6-1.4 1.4Z"></path></svg><span>Reuse this content</span></a></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Untrusted chatbot AI between you & the internet is a disaster waiting to happen (103 pts)]]></title>
            <link>https://macwright.com/2025/05/29/putting-an-untrusted-chat-layer-is-a-disaster</link>
            <guid>44129529</guid>
            <pubDate>Thu, 29 May 2025 19:42:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://macwright.com/2025/05/29/putting-an-untrusted-chat-layer-is-a-disaster">https://macwright.com/2025/05/29/putting-an-untrusted-chat-layer-is-a-disaster</a>, See on <a href="https://news.ycombinator.com/item?id=44129529">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>This is directly motivated by reading about <a href="https://browsercompany.substack.com/p/letter-to-arc-members-2025">the Browser Company’s pivot</a> to <a href="https://www.diabrowser.com/finals">Dia</a>, a chatbot-centric browser, but there are many similar cases.</p><p>I feel like this is obvious but I’m not hearing it shouted from the rooftops so here it is: <strong>adding an untrusted middleman to your information diet and all of your personal communications will eventually become a disaster that will be obvious in hindsight</strong>.</p><p>You ask OpenAI for a product recommendation, and it recommends a product that they’re associated with, or one that a company is paying them to promote. Or maybe some company detects OpenAI’s web scraper and delivers customized content to win the recommendation. You just don’t know.</p><p>This is obviously going to happen. <a href="https://en.wikipedia.org/wiki/Antitrust_cases_against_Google_by_the_European_Union#Google_Shopping_investigation">Google promoted its own products</a> in search. <a href="https://www.propublica.org/article/amazons-new-competitive-advantage-putting-its-own-products-first">Amazon recommends its own products</a>, eagerly ripping off the branding and terms used by other companies. <a href="https://www.alltechnerd.com/microsoft-expands-copilots-reach-through-bing-search-integration/">Microsoft promotes its own AI, Copilot, when you use Microsoft’s search engine, Bing, to search for Google’s AI, Gemini</a>. This kind of stuff is not illegal enough to attract enforcement in the US and it’s obviously good for business, so companies do it with gusto, even when it’s totally obvious to everyone.</p><p>This is just the ‘economic crimes’ part of the equation, because manipulation there shows up in lawsuits. What about the <a href="https://en.wikipedia.org/wiki/Grok_%28chatbot%29#%22White_genocide_in_South_Africa%22_system_prompt_change">ideological manipulation</a>? There’s plenty of pre-AI evidence for that too: <a href="https://macwright.com/2025/04/06/careless-people">Careless People</a>, the Facebook tell-all book, is chock full of examples of insiders turning the dial to promote some people or silence others on the platform. AI will be this, just harder to detect and more efficient.</p><p>When it comes down to it, the chatbot <em>doesn’t work for you</em>. It works for its maker and it is not responsible for anything it does.</p><p>Becoming dependent on the chatbot is like becoming dependent on a butler for all of your news and communications: convenient at first, but eventually you’re going to get gaslit or snuffed out with a pillow.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Airlines are charging solo passengers higher fares than groups (287 pts)]]></title>
            <link>https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/</link>
            <guid>44128901</guid>
            <pubDate>Thu, 29 May 2025 18:39:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/">https://thriftytraveler.com/news/airlines/airlines-charging-solo-travelers-higher-fares/</a>, See on <a href="https://news.ycombinator.com/item?id=44128901">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    <p>Yesterday, we discovered that <a href="https://thriftytraveler.com/news/airlines/delta-pricing-quirk/" target="_blank" rel="noopener">Delta was charging solo and business travelers higher fares</a> per ticket than when booking for two or more passengers. But it turns out that pricing quirk goes far beyond just Delta.&nbsp;</p>
<p>Since we published that story, we've searched through hundreds of fares and found plenty of examples that prove it: <strong>All three of the country's largest carriers (American Airlines, United Airlines, and Delta) are penalizing solo travelers with higher ticket prices than you can book when traveling with a group – sometimes, significantly higher.</strong></p>
<p>Our&nbsp;<strong><a href="https://thriftytraveler.com/premium/" target="_blank" rel="noopener noreferrer" data-stringify-link="https://thriftytraveler.com/premium/" data-sk="tooltip_parent">Thrifty Traveler Premium</a></strong> team of flight deal analysts search hundreds of routes each day and confirms it's not exactly widespread – you won't see it on each and every route – but it's undeniable. And while it's unclear how long this pricing tactic has been utilized, it doesn't really matter: Whether it's been just days, months, or even years, it's something that few everyday travelers may realize is happening … or how much it might be costing them.</p>
<p>For example, a search for one passenger flying United from its Chicago-O'Hare (ORD) hub to nearby Peoria (PIA) next month yields a $269 one-way fare.&nbsp;</p>

<p><img fetchpriority="high" decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax.jpg" alt="united flight from chicago to peoria for $269" width="750" height="389" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 1" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax.jpg 1872w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-300x156.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-1024x532.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-768x399.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-1536x798.jpg 1536w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20389'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax.jpg 1872w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-300x156.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-1024x532.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-768x399.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax-1536x798.jpg 1536w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-1-pax.jpg"></p>

<p>But bump that up to two (or three or even four) passengers, and the price drops by almost a third: <strong>Just $181 apiece for that exact same standard economy ticket.</strong> Plus, a <a href="https://thriftytraveler.com/guides/airlines/united-basic-economy/" target="_blank" rel="noopener">United basic economy</a> fare suddenly appears that's even cheaper – something that wasn't even an option when searching for just one passenger.&nbsp;</p>

<p><img decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax.jpg" alt="united flights from chicago to peoria for $151" width="750" height="384" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 2" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax.jpg 1886w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-300x154.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-1024x524.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-768x393.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-1536x787.jpg 1536w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20384'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax.jpg 1886w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-300x154.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-1024x524.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-768x393.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax-1536x787.jpg 1536w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/united-ord-pia-2-pax.jpg"></p>

<p>You can see in the fine print below each fare exactly how United is doing this: by opening up different fare buckets based upon how many passengers you're booking for. When searching for one passenger, the lowest economy price is a Q economy fare – United's “discount coach” fare. But by searching for multiple travelers, you can pull in (even cheaper) S class fares, which United considers a “deep discount coach” ticket.</p>
<p>And much like Delta, this isn't a glitch. United spells it all out in the fare rules for these cheaper tickets, which are publicly accessible using an advanced airfare search engine like <a href="https://oldmatrix.itasoftware.com/" target="_blank" rel="nofollow noopener">ITA Matrix</a>. It plainly states: “Must be accompanied on all sectors in same compartment by at least 1 adult 15 or older.”</p>

<p><img decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules.jpg" alt="fare rules for united flight from chicago to peoria" width="750" height="190" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 3" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules.jpg 1144w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules-300x76.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules-1024x260.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules-768x195.jpg 768w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20190'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules.jpg 1144w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules-300x76.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules-1024x260.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules-768x195.jpg 768w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-pia-fare-rules.jpg"></p>

<p>There's no such “accompaniment restriction” on United's higher-priced single traveler fares.</p>
<p>Whether you'll run into pricier fares searching for one passenger instead of two is hit-or-miss, at least for now. So far, we've seen this pricing dynamic mainly on one-way domestic tickets – not roundtrip fares or long-haul international routes. And we haven't seen it on other major U.S. carriers like Alaska, JetBlue, or Southwest.</p>
<p>Airlines are notoriously secretive about the inner workings of how they price their fares and why. Case in point: <strong>No one from American, Delta, or United responded to requests for comment from Thrifty Traveler on this pricing strategy.&nbsp;</strong></p>
<p>In this case, the rationale for charging solo travelers more is fairly clear: It's just another way for airlines to continue “segmenting” their customers, charging business travelers paying with a corporate card more while offering a better deal to families on the exact same flight.</p>
<p>And it's even more egregious on this American Airlines flight from Charlotte (CLT) to Fort Myers (RSW) this fall. Traveling solo, you'll pay at least $422 fare for this one-way flight in economy on Oct. 13.&nbsp;</p>

<p><img decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax.jpg" alt="american airlines flight from charlotte to fort myers for $422" width="750" height="560" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 4" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax.jpg 1652w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-300x224.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-1024x765.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-768x574.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-1536x1147.jpg 1536w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20560'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax.jpg 1652w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-300x224.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-1024x765.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-768x574.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax-1536x1147.jpg 1536w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-1-pax.jpg"></p>

<p>But by searching for two passengers, <strong>the ticket cost drops to just $266 per person </strong>– and, again, even cheaper if you book an <a href="https://thriftytraveler.com/guides/airlines/american-airlines-basic-economy/" target="_blank" rel="noopener">American basic economy</a>&nbsp; fare.</p>

<p><img decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax.jpg" alt="american airlines flights from charlotte to fort myers for two" width="750" height="558" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 5" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax.jpg 1650w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-300x223.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-1024x762.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-768x572.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-1536x1143.jpg 1536w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20558'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax.jpg 1650w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-300x223.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-1024x762.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-768x572.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax-1536x1143.jpg 1536w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/aa-clt-rsw-2-pax.jpg"></p>

<p>One last example shows airlines know what their competitors are up to. Searching for one-way flights from Chicago-O'Hare (ORD) to Lexington (LEX) in Kentucky, <a href="https://thriftytraveler.com/guides/google-flights/" target="_blank" rel="noopener">Google Flights</a> shows you can book either American or United for $214.</p>

<p><img decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax.jpg" alt="google flights screenshot of flights from chicago to lexington" width="750" height="489" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 6" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax.jpg 1590w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-300x195.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-1024x667.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-768x500.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-1536x1001.jpg 1536w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20489'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax.jpg 1590w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-300x195.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-1024x667.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-768x500.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax-1536x1001.jpg 1536w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-1-pax.jpg"></p>

<p>Yet the <strong>total price</strong> for two passengers is $215, or just $108 per passenger. Importantly, Google Flights always displays the total price for all passengers – not the cost per ticket. And while that cheapest fare is a basic economy ticket on both carriers, standard economy fares are still considerably cheaper when booking for two instead of just one.</p>

<p><img decoding="async" src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax.jpg" alt="chicago to lexington flights for two passengers" width="750" height="492" title="Exclusive: US Airlines Are Quietly Hitting Solo &amp; Biz Travelers with Higher Fares 7" srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax.jpg 1590w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-300x197.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-1024x672.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-768x504.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-1536x1009.jpg 1536w" sizes="(max-width: 750px) 100vw, 750px" data-old-src="data:image/svg+xml,%3Csvg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20750%20492'%3E%3C/svg%3E" data-lazy-srcset="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax.jpg 1590w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-300x197.jpg 300w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-1024x672.jpg 1024w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-768x504.jpg 768w, https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax-1536x1009.jpg 1536w" data-lazy-src="https://thriftytraveler.com/wp-content/uploads/2025/05/ord-to-lex-2-pax.jpg"></p>

<p>Whenever this pricing strategy began, this is a massive change in how airlines set prices – and one that will likely catch many travelers off guard.&nbsp;</p>
<p>Unlike shopping at retail stores or Costco, bulk discounts are unusual for airlines – at least not just for booking just two passengers instead of one. And these higher fares for one passenger are&nbsp;the opposite of what we typically see, where travelers booking for two passengers or more wind up getting charged more per person than a single passenger.</p>
<p>That comes down to the mechanics of how airlines actually sell tickets: Carriers aren't just selling economy, extra legroom, and first class tickets but an alphabet soup of different fare classes, each at a different price. If there's only one fare available at the cheapest $118, searching for two would only yield fares at a higher, $199 price point.</p>
<p>This is a complete reversal. And solo travelers will be the ones who pay the price.&nbsp;</p>

<p><em>This is a breaking news story, check back for updates</em></p>
  </div><div>
      <h2>Stop Overpaying for Travel!</h2>
      <p>Get our daily email for the latest in travel, flight deals, and how to save on your next trip.</p>
      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FLUX.1 Kontext (440 pts)]]></title>
            <link>https://bfl.ai/models/flux-kontext</link>
            <guid>44128322</guid>
            <pubDate>Thu, 29 May 2025 17:40:35 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bfl.ai/models/flux-kontext">https://bfl.ai/models/flux-kontext</a>, See on <a href="https://news.ycombinator.com/item?id=44128322">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="abstract"><h2>Play. Create. Manipulate.</h2><p>FLUX.1 Kontext models go beyond text-to-image. Unlike previous flow models that only allow for pure text based generation, FLUX.1 Kontext models also understand and can create from existing images. With FLUX.1 Kontext you can modify an input image via simple text instructions, enabling flexible and instant image editing - no need for finetuning or complex editing workflows. The core capabilities of the the FLUX.1 Kontext suite are:</p><div><div><h3>Character consistency</h3><p>Preserve unique elements of an image, such as a reference character or object in a picture, across multiple scenes and environments.</p></div><div><h3>Local editing</h3><p>Make targeted modifications of specific elements in an image without affecting the rest.</p></div><div><h3>Style Reference</h3><p>Generate novel scenes while preserving unique styles from a reference image, directed by text prompts.</p></div><div><h3>Interactive Speed</h3><p>Iterate at minimal latency for both image generation and editing.</p></div></div><p>Flux.1 Kontext allows you to iteratively add more instructions and build on previous edits, refining your creation step-by-step with minimal latency, while preserving image quality and character consistency.</p></div><div id="get-started"><div><h2>Get started with FLUX.1 Kontext</h2><p>Redefine what's possible with consistent, context-aware image generation</p></div><div><div><h2>FLUX.1 Kontext [max]</h2><p>Maximum Performance at High Speed</p><p>Our new premium model brings maximum performance across all aspects – greatly improved prompt adherence and typography generation meet premium consistency for editing without compromise on speed.</p></div><div><h2>FLUX.1 Kontext [pro]</h2><p>A pioneer for fast, iterative image editing</p><p>A unified model delivering local editing, generative modifications, and text-to-image generation in FLUX.1 quality. Processes text and image inputs for precise regional edits or full scene transformations at breakthrough speeds, pioneering iterative workflows that maintain character consistency across multiple editing turns.</p></div><div><h2>FLUX.1 Kontext [dev]</h2><p>Open-weights, distilled variant of Kontext, our most advanced generative image editing model.</p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Open-sourcing circuit tracing tools (138 pts)]]></title>
            <link>https://www.anthropic.com/research/open-source-circuit-tracing</link>
            <guid>44128101</guid>
            <pubDate>Thu, 29 May 2025 17:16:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.anthropic.com/research/open-source-circuit-tracing">https://www.anthropic.com/research/open-source-circuit-tracing</a>, See on <a href="https://news.ycombinator.com/item?id=44128101">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><div><p>In our recent interpretability research, we introduced a new method to <a href="https://www.anthropic.com/research/tracing-thoughts-language-model">trace the thoughts</a> of a large language model. Today, we’re open-sourcing the method so that anyone can build on our research.</p><p>Our approach is to generate <em>attribution graphs</em>, which (partially) reveal the steps a model took internally to decide on a particular output. The open-source <a href="https://github.com/safety-research/circuit-tracer">library</a> we’re releasing supports the generation of attribution graphs on popular open-weights models—and a frontend hosted by Neuronpedia lets you explore the graphs interactively.</p><p>This project was led by participants in our <a href="https://alignment.anthropic.com/2024/anthropic-fellows-program/">Anthropic Fellows</a> program, in collaboration with <a href="https://www.decoderesearch.org/">Decode Research</a>.</p><div><figure><img loading="eager" width="3790" height="1748" decoding="async" data-nimg="1" srcset="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2Fe370dd79d6246cc1afc45e0b7b872b6d392801cf-3790x1748.png&amp;w=3840&amp;q=75 1x" src="https://www.anthropic.com/_next/image?url=https%3A%2F%2Fwww-cdn.anthropic.com%2Fimages%2F4zrzovbb%2Fwebsite%2Fe370dd79d6246cc1afc45e0b7b872b6d392801cf-3790x1748.png&amp;w=3840&amp;q=75"><figcaption>An overview of the interactive graph explorer UI on Neuronpedia.</figcaption></figure></div><p>To get started, you can visit the <a href="https://www.neuronpedia.org/gemma-2-2b/graph">Neuronpedia interface</a> to generate and view your own attribution graphs for prompts of your choosing. For more sophisticated usage and research, you can view the <a href="https://github.com/safety-research/circuit-tracer">code repository</a>. This release enables researchers to:</p><ol><li><strong>Trace circuits </strong>on supported models, by generating their own attribution graphs;</li><li><strong>Visualize, annotate, and share </strong>graphs in an interactive frontend;</li><li><strong>Test</strong> <strong>hypotheses</strong> by modifying feature values and observing how model outputs change.</li></ol><p>We’ve already used these tools to study interesting behaviors like multi-step reasoning and multilingual representations in Gemma-2-2b and Llama-3.2-1b—see our demo <a href="https://github.com/safety-research/circuit-tracer/blob/main/demos/circuit_tracing_tutorial.ipynb">notebook</a> for examples and analysis. We also invite the community to help us find additional interesting circuits—as inspiration, we provide additional attribution graphs that we haven’t yet analyzed in the demo notebook and on Neuronpedia.</p><p>Our CEO Dario Amodei <a href="https://www.darioamodei.com/post/the-urgency-of-interpretability">wrote recently</a> about the urgency of interpretability research: at present, our understanding of the inner workings of AI lags far behind the progress we’re making in AI capabilities. By open-sourcing these tools, we're hoping to make it easier for the broader community to study what’s going on inside language models. We’re looking forward to seeing applications of these tools to understand model behaviors—as well as extensions that improve the tools themselves.</p><p><em>The open-source-circuit-finding library was developed by <a href="https://alignment.anthropic.com/2024/anthropic-fellows-program/">Anthropic Fellows</a> Michael Hanna and Mateusz Piotrowski with mentorship from Emmanuel Ameisen and Jack Lindsey. The Neuronpedia integration was implemented by <a href="https://www.decoderesearch.org/">Decode Research</a> (Neuronpedia lead: Johnny Lin; Science lead/director: Curt Tigges). Our Gemma graphs are based on transcoders trained as part of the <a href="https://ai.google.dev/gemma/docs/gemma_scope">GemmaScope</a> project. For questions or feedback, please open an issue on GitHub.</em></p></div></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Human coders are still better than LLMs (550 pts)]]></title>
            <link>https://antirez.com/news/153</link>
            <guid>44127739</guid>
            <pubDate>Thu, 29 May 2025 16:41:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://antirez.com/news/153">https://antirez.com/news/153</a>, See on <a href="https://news.ycombinator.com/item?id=44127739">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><article data-comment-id="153-" id="153-"><span><span><a href="https://antirez.com/user/antirez">antirez</a></span> 1 hour ago. 17444 views.  </span><pre>This is a short story of how humans are still so much more capable of LLMs. Note that I'm not anti-AI or alike, you know it if you know me / follow me somewhere. I use LLMs routinely, like I did today, when I want to test my ideas, for code reviews, to understand if there are better approaches than what I had in mind, to explore stuff at the limit of my expertise, and so forth (I wrote a blog post about coding with LLMs almost two years, when it was not exactly cool: I was already using LLMs for coding and never stopped, I'll have to write an update, but that's not the topic of this post).

But, still: the current level of AI is useful, great too, but so incredibly behind human intelligence, and I want to remark this as lately it is impossible to have balanced conversations.

So, today I was working to Vector Sets for Redis, to fix a complicated bug: during the time I stopped working at Redis my colleagues introduced resistance against corruption RDB and RESTORE payloads, even when the checksum of the data passes. This feature is disabled by default, but provides an enhanced layer of safety for people wanting it.

But… there is a but as big as an elephant: In order to make HNSWs fast to save into Redis RDBs and to load back, I serialized the *graph* representation, and not the element-vector pairs, otherwise I would have to re-insert back data into HNSWs, and that would be, like, 100 times slower (!). So I store all the links the nodes have with other nodes, as integers, and then I resolve them into pointers, it’s a nice trick and works great. But if you mix this and random corruptions of the representation, and the fact that my own twist on HNSWs enforce reciprocal links between nodes (I wrote my own implementation of HNSWs with many useful features, but reciprocal links are needed to enable many of them) then this could happen:

1. We load corrupted data that says A links to B, but B no longer links to A (corrupted node IDs).
2. We delete node B: since the reciprocity is violated, we don’t clear the link from A to B.
3. Then we scan the graph and once we are at B we access A: use-after-free :-D :-) :-|

So after loading data, I need to check that every link is reciprocal, and in the vanilla case this is going to be O(N^2), for each node we need to scan all the levels, for each level all the neighbors of the node, and check that it also links to this node by scanning its links at that level. Not good.

# Human vs LLM

To start, I implemented the vanilla approach, to see if the fuzzer could no longer find the bug, and it worked indeed, but loading times for a big vector set with 20 million vectors went from 45 seconds to 90 or something. WTF. So I opened a Gemini 2.5 PRO chat and told the LLM, hey, what we can do here? Is there a super fast way to do so?

The best solution that Gemini could find was to say: order the pointers of the neighbors links, so you can use binary search. Oh, well, sure, I know this, I’m not really sure if in arrays of 16/32 pointers this is going to be faster or slower. So I asked, anything else? Nope, no better solution.

So I told it: look, what about when we see A linking B at level X we store in a hash table A:B:X (but we sort A and B always so that A&gt;B, and links are the same whatever the direction), and when we see the link again we clean it, this time we just scan the whole thing as we are already doing when resolving IDs to pointers in the links, and if at the end the hash table is not empty, we know there is some link that must be non-reciprocal?

Gemini told me it was a nice idea, but there was the snprintf() to create the key and the hashing time and so forth, but yep, it was better than what my original approach (even sorting pointers). I made it notice that snprintf() was not needed. We could just memcpy() pointers in a fixed sized key. It recognized that it was possible to do so, then I realized something…

Hey, I told Gemini, what about using a fixed accumulator for A:B:X? No hash table at all. Each time we see a link (A:B:X, so 8+8+4 bytes) we xor it in the current accumulator of 12 bytes. If we store it twice, it cancels out, so at the end if the register is non-zero, we know something is odd! However I anticipated Gemini that this system was potentially subject to collisions, and to evaluate them. Even if this feature is normally turned off in Redis, when users enable such extra checks they also often expect some more protection against an attacker deliberately crafting bad payloads.

Gemini was quite impressed about the idea, but still told that pointers are… you know, similar in structure, change of a few bits, so if there were three spurious links L1, L2, L3 it could happen that the xor between L1 and L2 was the same as the L3 bits, and we could have a false negative (zero register). I also noticed that allocators tend to be very predictable and externally guessable.

I asked Gemini for ways to improve upon this: it got no great ideas. Then I thought, wait, we can actually hash this with a good enough hash function that is still fast, murmur-128 or alike (we don’t need it to have cryptographic properties for this task), and proposed the following schema to Gemini:

1. Take the link A:B:X, but use a seed obtained via /dev/urandom to prefix all the keys with it, so we actually have S:A:B:X.
2. We just xor the output of murmur-128(S:A:B:X) into the 128 bit register.
3. At the end, we check if the register is 0 (all links reciprocal).

I asked Gemini to do an analysis of that, and it was finally happy, saying that this makes it a lot harder both to casually find orphaned links that happen to xor to 0 together, and even that an external attacker could ever use this in a useful way, since “S” is not known, there is to control the pointers too, and all that it is really hard to put together. Also, this feature is a best effort extra protection that you need to enable, it is normally off and to be practical it should not pose a too big performance penalty.

Well, all this to say: I just finished the analysis and stopped to write this blog post, I’m not sure if I’m going to use this system (but likely yes), but, the creativity of humans still have an edge, we are capable of really thinking out of the box, envisioning strange and imprecise solutions that can work better than others. This is something that is extremely hard for LLMs. Still, to verify all my ideas, Gemini was very useful, and maybe I started to think at the problem in such terms because I had a “smart duck” to talk with.</pre></article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Putting Rigid Bodies to Rest (119 pts)]]></title>
            <link>https://twitter.com/keenanisalive/status/1925225500659658999</link>
            <guid>44127173</guid>
            <pubDate>Thu, 29 May 2025 15:43:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/keenanisalive/status/1925225500659658999">https://twitter.com/keenanisalive/status/1925225500659658999</a>, See on <a href="https://news.ycombinator.com/item?id=44127173">Hacker News</a></p>
Couldn't get https://twitter.com/keenanisalive/status/1925225500659658999: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[WeatherStar 4000+: Weather Channel Simulator (664 pts)]]></title>
            <link>https://weatherstar.netbymatt.com/</link>
            <guid>44127109</guid>
            <pubDate>Thu, 29 May 2025 15:38:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://weatherstar.netbymatt.com/">https://weatherstar.netbymatt.com/</a>, See on <a href="https://news.ycombinator.com/item?id=44127109">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="loading" width="640" height="480"><p>WeatherStar 4000+</p><p>v5.21.2</p><p>Enter your location above to continue</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The flip phone web: browsing with the original Opera Mini (111 pts)]]></title>
            <link>https://www.spacebar.news/the-flip-phone-web-browsing-with-the-original-opera-mini/</link>
            <guid>44127027</guid>
            <pubDate>Thu, 29 May 2025 15:30:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.spacebar.news/the-flip-phone-web-browsing-with-the-original-opera-mini/">https://www.spacebar.news/the-flip-phone-web-browsing-with-the-original-opera-mini/</a>, See on <a href="https://news.ycombinator.com/item?id=44127027">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
            <p>Opera Mini was first released in 2005 as a web browser for mobile phones, with the ability to load full websites by sending most of the work to an external server. It was a massive hit, but it started to fade out of relevance once smartphones entered mainstream use.</p><p>Opera Mini still exists today as a web browser for iPhone and Android—it's now just a tweaked version of the regular Opera mobile browser, and <a href="https://www.spacebar.news/stop-using-opera-browser/">you shouldn't use Opera browsers</a>. However, the original Java ME-based version is still functional, and you can even use it on modern computers.</p><h2 id="how-opera-mini-works">How Opera Mini works</h2><p>In the 1990s and 2000s, most mobile phones didn't have the processing power to load full desktop websites. Instead, an alternative <a href="https://en.wikipedia.org/wiki/Wireless_Application_Protocol" rel="noreferrer">Wireless Application Protocol</a> (WAP, but not <em>that</em> WAP) was created for simple websites that could work over a 1G/2G connection on a typical mobile phone. For example, the BBC had a regular website for users on desktop computers, and <a href="https://www.bbc.co.uk/languages/mobile/">a simpler WAP site</a> for users on mobile phones and PDAs. The WAP versions of websites usually didn't have all the functionality and pages as the regular sites.</p><p>Opera Mini used a clever workaround <a href="https://web.archive.org/web/20060618035344/http://www.opera.com/pressreleases/en/2005/08/10/">when it arrived in 2005</a>. When you loaded a website in the browser, the request was sent to one of Opera's cloud servers, which rendered the page and sent the result back to the phone. Images and other data were also compressed along the way to minimize cellular data usage.</p><p>Here's part of the initial pitch for Opera Mini, with 'operators' referring to mobile network carriers:</p><blockquote>Because Opera Mini™ enables Web access on low- and mid-tier phones, operators can now dramatically increase the average revenue per user (ARPU) across their entire customer base by stimulating the usage of compelling mobile Web services. Opera offers full customization of Opera Mini™ to companies, for example operators, broadcasters, mobile content providers and the Internet industry, that would like to include their own version of Opera Mini™ as part of their mobile content offerings.<p>The first company to take advantage of Opera Mini™ is Norway's leading commercial television station, TV2. It has bundled Opera Mini™ with its mobile services in Norway to offer its viewers a complete mobile content package that includes a branded and advanced Web browser.</p></blockquote><p>Opera Mini was built as a standard Java Micro Edition (Java ME) application, so it worked on everything from the Motorola RAZR series to the Nokia 8800. It had <a href="https://techcrunch.com/2012/04/29/opera-mini-now-has-169-million-users-56-of-them-only-use-the-mobile-web/">169 million users by 2012</a>, and Opera also built the browser for other platforms. I remember using Opera Mini on my iPhone 3G at one point—it was one of the first third-party browsers allowed on Apple's App Store, <a href="https://www.macrumors.com/2010/02/17/opera-mini-browser-for-iphone-being-demoed-at-mobile-world-congress/">because it wasn't actually running code on the phone</a>.</p><p>Eventually, smartphones with the ability to render full web pages became widespread, so fewer people had to turn to Opera Mini to get a usable mobile web experience. It still hasn't completely shut down, though.</p><h2 id="downloading-opera-mini-in-2025">Downloading Opera Mini in 2025</h2><p>Opera still advertises "Opera Mini for mobile phones" on <a href="https://www.opera.com/mobile/basic-phones">its website</a>, and asks you to visit <code>m.opera.com</code> to download the application file. On modern devices and browsers, that site redirects you to the current iPhone and Android browsers. You need to change <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent">your browser's user agent string</a> to an old phone to see the full list of downloads. I added a <a href="https://devtoolstips.org/tips/en/add-new-devices/">custom device in Firefox's developer tools</a> with the user agent string <code>Mozilla/5.0 (SymbianOS/9.1; U; [en]; Series60/3.0 NokiaE60/4.06.0) AppleWebKit/413 (KHTML, like Gecko) Safari/413</code> from a Nokia E60.</p><p>The 'Other download options' link on the page reveals all versions of Opera Mini and Mobile. This includes the regular Opera Mini Java ME browser, the Windows Mobile versions of Opera Mini and Mobile, Opera Mini for BlackBerry, and the Symbian OS versions of Opera Mini and Mobile. The Android and iPhone links just go to the app stores for each platform.</p><figure><img src="https://www.spacebar.news/content/images/2025/02/image-2.png" alt="" loading="lazy" width="2000" height="1298" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-2.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-2.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-2.png 1600w, https://www.spacebar.news/content/images/size/w2400/2025/02/image-2.png 2400w" sizes="(min-width: 720px) 720px"></figure><p>I unfortunately don't have a Java, Windows, or Symbian phone right now, but it is possible to run the Java ME version on a desktop computer. You need two tools for this: a Java runtime like OpenJDK or <a href="https://www.java.com/download/" rel="noreferrer">Oracle's Java</a>, and <a href="https://sourceforge.net/projects/microemulator/" rel="noreferrer">MicroEmulator</a> for running MIDlet-based apps like Opera Mini.</p><p>I installed <a href="https://www.microsoft.com/openjdk">Microsoft OpenJDK</a> on my Mac through the Homebrew cask, then opened MicroEmulator like this:</p><pre><code>java -jar /Users/corbin/Downloads/microemulator-2.0.4/microemulator.jar</code></pre><p>Finally, in MicroEmulator, I selected File &gt; Open MIDlet File and picked Opera Mini's .jad file. Opera Mini then appears in the application list, and clicking it starts the browser.</p><figure><img src="https://www.spacebar.news/content/images/2025/02/Untitled-1.png" alt="MicroEmulator with a virtual phone keypad and Opera Mini on the main screen." loading="lazy" width="1298" height="1298" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/Untitled-1.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/Untitled-1.png 1000w, https://www.spacebar.news/content/images/2025/02/Untitled-1.png 1298w" sizes="(min-width: 720px) 720px"></figure><p>Opera Mini works with regular mouse and keyboard input, so I turned off the virtual keypad interface and switched to a larger virtual screen. You can do this in MicroEmulator by navigating to Options &gt; Select device, selecting 'Resizable device' and clicking the OK button, then clicking the 'Resize' button in the main window. I chose a resolution of 854x480 to have a roughly 16:9 aspect ratio.</p><h2 id="the-opera-mini-experience">The Opera Mini experience</h2><p>Opera Mini starts up with a welcome page, explaining the features available in Opera Mini 8 like private browsing, data savings reports, browser tabs, long-click menus, and the classic Speed Dial bookmarks. Opera Mini 8 was the last major version for Java ME, <a href="https://forums.opera.com/topic/1256/opera-mini-8-for-java-and-blackberry">released in March 2014</a>. The version I downloaded is build 8.0.35626, and doesn't list a specific release date.</p><figure><img src="https://www.spacebar.news/content/images/2025/02/image-8.png" alt="Opera Mini welcome page" loading="lazy" width="1932" height="1342" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-8.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-8.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-8.png 1600w, https://www.spacebar.news/content/images/2025/02/image-8.png 1932w" sizes="(min-width: 720px) 720px"></figure><p>After clicking Accept, we're greeted with the main browser interface and Speed Dial. The top of the screen has separate address and search bars, though you can also do a web search from the address bar.</p><p>The bottom section has back and forward navigation buttons, a shortcut to the Speed Dial, and a button for switching between tabs. There's also an Opera button that opens a menu with bookmarks, history, data usage, settings, finding text in the current page, sharing the current page, and closing the browser.</p><figure><img src="https://www.spacebar.news/content/images/2025/02/image-9.png" alt="Opera Mini Speed Dial page with shortcuts to Google, Breaking News, Sports, and other links" loading="lazy" width="1932" height="1342" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-9.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-9.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-9.png 1600w, https://www.spacebar.news/content/images/2025/02/image-9.png 1932w" sizes="(min-width: 720px) 720px"></figure><p>From here, you can start browsing the web like you would with any other web browser. I visited a bunch of sites, and all of them had at least some issues with the page layout and broken embeds. For example, a BBC news article had missing images but the text looked fine, while a review on <em>The Verge</em> had working images with broken text layouts. These are the same issues you get with any old browser, as support for modern CSS styles and other web features are missing and can't be rendered properly.</p><p>Opera Mini does seem to avoid the SSL certificate issues that are present on older web browsers and operating systems, because Opera's servers are acting as a proxy for all web content. I couldn't find a website that Opera Mini outright refused to load.</p><figure><div><div><p><img src="https://www.spacebar.news/content/images/2025/02/image-10.png" width="1932" height="1342" loading="lazy" alt="Google homepage" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-10.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-10.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-10.png 1600w, https://www.spacebar.news/content/images/2025/02/image-10.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-12.png" width="1932" height="1342" loading="lazy" alt="BBC article with images not loading" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-12.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-12.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-12.png 1600w, https://www.spacebar.news/content/images/2025/02/image-12.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-13.png" width="1932" height="1342" loading="lazy" alt="The Spacebar home page, with some padding layout issues" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-13.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-13.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-13.png 1600w, https://www.spacebar.news/content/images/2025/02/image-13.png 1932w" sizes="(min-width: 720px) 720px"></p></div><div><p><img src="https://www.spacebar.news/content/images/2025/02/image-16.png" width="1932" height="1342" loading="lazy" alt="The Verge review with broken text and image alignment" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-16.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-16.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-16.png 1600w, https://www.spacebar.news/content/images/2025/02/image-16.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-17.png" width="1932" height="1342" loading="lazy" alt="MacRumors home page with no major layout issues" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-17.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-17.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-17.png 1600w, https://www.spacebar.news/content/images/2025/02/image-17.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-18.png" width="1932" height="1342" loading="lazy" alt="YouTube with blank area in video player" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-18.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-18.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-18.png 1600w, https://www.spacebar.news/content/images/2025/02/image-18.png 1932w" sizes="(min-width: 720px) 720px"></p></div></div></figure><p>Many outdated or 'lite' websites do work perfectly in Opera Mini. For example, <a href="https://lite.cnn.com/" rel="noreferrer">CNN's lite website</a> looks correct in the browser, since it's just text and links with minimal formatting. <a href="https://www.macintoshrepository.org/">Macintosh Repository</a>, a site for classic Mac software that is intended to work on some classic Mac web browsers, looks mostly correct in Opera Mini.</p><p>Every once in a while, navigating to a new page in Opera Mini loads an interstitial advertisement, hosted by <a href="https://www.opera.com/ads">Opera's own advertising network</a>. Clicking the ads didn't actually do anything. I'm not sure if that's an issue with MicroEmulator, or if this infrastructure simply broke a long time ago and Opera hasn't bothered to fix it.</p><figure><img src="https://www.spacebar.news/content/images/2025/02/image-14.png" alt="TurboTax ad in Opera Mini." loading="lazy" width="1932" height="1342" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-14.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-14.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-14.png 1600w, https://www.spacebar.news/content/images/2025/02/image-14.png 1932w" sizes="(min-width: 720px) 720px"></figure><p>The settings page for Opera Mini contains a toggle for loading images, a 'Night Mode' that dims the interface, settings for the touch keyboard, and some image quality and font options. There's also a 'Network test' that just opens a blank page with a <code>server:setup</code> URL. I'm not sure if it's supposed to do something else.</p><p>There's a toggle for Private browsing as well, which wipes the history and other related browser data when you turn it off, and switches the browser to a dark theme. Of course, Opera's servers still sees (and renders) the full contents of all the web pages you visit, so calling this 'Private browsing' is even more of a stretch than the private browsing and incognito modes in other browsers.</p><figure><div><p><img src="https://www.spacebar.news/content/images/2025/02/image-23.png" width="1932" height="1342" loading="lazy" alt="General settings page with checkboxes for Load Images, Single column view, Private browsing, and Night mode." srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-23.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-23.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-23.png 1600w, https://www.spacebar.news/content/images/2025/02/image-23.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-24.png" width="1932" height="1342" loading="lazy" alt="General settings page with options for Image quality, font size, and landscape mode." srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-24.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-24.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-24.png 1600w, https://www.spacebar.news/content/images/2025/02/image-24.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-25.png" width="1932" height="1342" loading="lazy" alt="Private browsing enabled with black browser interface" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-25.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-25.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-25.png 1600w, https://www.spacebar.news/content/images/2025/02/image-25.png 1932w" sizes="(min-width: 720px) 720px"></p></div></figure><p>There is one cool feature here that most modern browsers are lacking: RSS feed integration. When you visit a website with an RSS feed, Opera Mini adds a link to it at the top of the page. Clicking it opens the feed in a reader interface, with the full text content of each feed item.</p><p>It seems like images are fully broken in the RSS reader, which is a shame, because otherwise this tends to work better than reading pages in the normal websites. You can subscribe to each feed, which adds it to the list in the bookmarks menu.</p><figure><div><p><img src="https://www.spacebar.news/content/images/2025/02/image-27.png" width="1932" height="1342" loading="lazy" alt="Bing blog RSS feed in Opera Mini" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-27.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-27.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-27.png 1600w, https://www.spacebar.news/content/images/2025/02/image-27.png 1932w" sizes="(min-width: 720px) 720px"></p><p><img src="https://www.spacebar.news/content/images/2025/02/image-28.png" width="1932" height="1342" loading="lazy" alt="List of feeds in Opera Mini" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-28.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-28.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-28.png 1600w, https://www.spacebar.news/content/images/2025/02/image-28.png 1932w" sizes="(min-width: 720px) 720px"></p></div></figure><p>Many old web browsers had excellent RSS integration and built-in readers, like Safari and Internet Explorer, and I'd love to see that functionality make a comeback. In the meantime, I'll stick to Inoreader and Feedly.</p><h2 id="under-the-hood">Under the hood</h2><p>Opera Mini uses a modified version of the Presto engine, which was used in the full-featured desktop and mobile versions of Opera until the company <a href="https://press.opera.com/2013/02/13/opera-gears-up-at-300-million-users/">switched to a Chromium codebase in 2013</a>, but the rendering is happening on cloud servers instead of the local device. A quick visit to a user agent checker website reveals the below string.</p><pre><code>Opera/9.80 (J2ME/MIDP; Opera Mini/8.0.35626/191.376; U; en) Presto/2.12.423 Version/12.16</code></pre><p>Opera Mini is reporting itself to websites as Opera 12.16 with Presto engine 2.12.423, with "Opera Mini" and "J2ME/MIDP" also present so websites can detect the exact browser. Opera 12.16 was one of the last versions before the switch to Chromium—the "Opera 9.8" string was <a href="https://ztoe.net/2009/06/opera-98/">a hack used in Opera 10 and later</a> to avoid breaking websites that only checked the first digit of the user agent. The wild west of web development.</p><p>I was also curious where Opera Mini's servers are currently located. The <a href="https://showmyip.com/">showmyip.com</a> site reports a location of Amsterdam in The Netherlands, with IP addresses including <code>82.145.211.123</code> and <code>82.145.212.87</code>. Presumably, there's one server closet somewhere in Amsterdam handling what remains of Opera Mini's web traffic.</p><figure><img src="https://www.spacebar.news/content/images/2025/02/image-26.png" alt="IP address information in Opera Mini" loading="lazy" width="1932" height="1342" srcset="https://www.spacebar.news/content/images/size/w600/2025/02/image-26.png 600w, https://www.spacebar.news/content/images/size/w1000/2025/02/image-26.png 1000w, https://www.spacebar.news/content/images/size/w1600/2025/02/image-26.png 1600w, https://www.spacebar.news/content/images/2025/02/image-26.png 1932w" sizes="(min-width: 720px) 720px"></figure><p>There's a <a href="https://tiffanybbrown.com/2012/09/opera-mini-and-javascript/index.html">blog post by Tiffany B. Brown from 2012</a> that explains some of the rendering differences between regular Presto-based Opera and Opera Mini. Notably, JavaScript code is only executed if it's part of the initial page load—after the page is rendered and sent to the device, nothing else can run. There are also time limits on XMLHttpRequest network requests, so any site that updated in real-time wouldn't work without constantly refreshing the page.</p><p>Opera Mini also didn't support JavaScript mouse events, offline storage APIs, and all the web platform features that came after Opera 12 was released. I believe some versions of Opera Mini supported video playback, but I couldn't get it to work in the Java ME version.</p><p>It's not a surprise that Opera Mini struggles with most modern websites, considering it's a heavily-modified version of a decade-old web browser. Many websites didn't even fully support Opera's Presto engine <em>when it was new</em>.</p><h2 id="still-alive-for-now">Still alive, for now</h2><p>It's cool that an important piece of mobile web history is still functioning, though I'm not sure how much longer it will stick around. Opera Mini's servers probably don't cost much to continue operating, but the browser doesn't seem to be profitable in any way. Maybe Opera is billing those companies for the advertisements that don't work, or there are still some ongoing contracts with carriers or device manufacturers that require Opera Mini to stay online.</p><p>The <a href="https://forums.opera.com/category/18/other-phones">official "Other phones" forum on Opera's website</a> is still somewhat active with threads about Opera Mini. It seems like most of the current-day usage is on Nokia and HMD's Java-based feature phones from the 2010s, like the <a href="https://en.wikipedia.org/wiki/Nokia_215">Nokia 215</a>, with some threads discussing older phones from the 2000s.</p><p>If you have an old phone or PDA with Java support, or want to fire up MicroEmulator on your computer, it might be worth trying out Opera Mini before it's gone forever. That's assuming your old phone can <a href="https://www.fcc.gov/consumers/guides/plan-ahead-phase-out-3g-cellular-networks-and-service">connect to a network</a>.</p><figure><a href="https://www.spacebar.news/stop-using-opera-browser/"><div><p>Stop using Opera Browser and Opera GX</p><p>Opera Browser and Opera GX are bloated web browsers, and the company behind them has tried to cover up its controversies.</p><p><img src="https://www.spacebar.news/content/images/icon/spacebar-3.png" alt=""><span>The Spacebar</span><span>Corbin Davenport</span></p></div><p><img src="https://www.spacebar.news/content/images/thumbnail/operano.jpg" alt="" onerror="this.style.display = 'none'"></p></a></figure>
        </section></div>]]></description>
        </item>
    </channel>
</rss>