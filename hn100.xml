(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 21 Jul 2024 21:30:03 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Joe Biden stands down as Democratic candidate (360 pts)]]></title>
            <link>https://twitter.com/JoeBiden/status/1815080881981190320</link>
            <guid>41026741</guid>
            <pubDate>Sun, 21 Jul 2024 17:50:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/JoeBiden/status/1815080881981190320">https://twitter.com/JoeBiden/status/1815080881981190320</a>, See on <a href="https://news.ycombinator.com/item?id=41026741">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Intel says 13th and 14th Gen mobile CPUs are crashing (105 pts)]]></title>
            <link>https://www.tomshardware.com/pc-components/cpus/intel-says-13th-and-14th-gen-mobile-cpus-are-crashing-but-not-due-to-the-same-bug-as-desktop-chips-chipmaker-blames-common-software-and-hardware-issues</link>
            <guid>41026123</guid>
            <pubDate>Sun, 21 Jul 2024 16:19:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/pc-components/cpus/intel-says-13th-and-14th-gen-mobile-cpus-are-crashing-but-not-due-to-the-same-bug-as-desktop-chips-chipmaker-blames-common-software-and-hardware-issues">https://www.tomshardware.com/pc-components/cpus/intel-says-13th-and-14th-gen-mobile-cpus-are-crashing-but-not-due-to-the-same-bug-as-desktop-chips-chipmaker-blames-common-software-and-hardware-issues</a>, See on <a href="https://news.ycombinator.com/item?id=41026123">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-body">
<p>Amidst reports of the 13th and 14th Generation processor instability extending to mobile chips, Intel has sent a statement to <em>Tom's Hardware</em> to clarify the situation. While there has been instability feedback on some mobile SKUs, the cause of the instability differs from their desktop counterparts.</p><p><em>"Intel is aware of a small number of instability reports on Intel Core 13th/14th Gen mobile processors.</em></p><p><em>"Based on our in-depth analysis of the reported Intel Core 13/14 Gen desktop processor instability issues, Intel has determined that mobile products are not exposed to the same issue. The symptoms being reported on 13/14 Gen mobile systems – including system hangs and crashes – are common symptoms stemming from a broad range of potential software and hardware issues.</em></p><p><em>"As always, if users are experiencing issues with their Intel-powered laptops we encourage them to reach out to the system manufacturer for further assistance.</em>" — Intel representative to <em>Tom's Hardware</em>.</p><p>Alderon Games was one of the few companies that shared its statistics about Raptor Lake and Raptor Lake Refresh <a data-analytics-id="inline-link" href="https://www.tomshardware.com/pc-components/cpus/game-publisher-claims-100-crash-rate-with-intel-cpus-alderon-games-says-company-sells-defective-13th-and-14th-gen-chips" data-before-rewrite-localise="https://www.tomshardware.com/pc-components/cpus/game-publisher-claims-100-crash-rate-with-intel-cpus-alderon-games-says-company-sells-defective-13th-and-14th-gen-chips">Core i9 crash rates</a>. The founder, Matthew Cassells, recently stated that although the company's laptops with <a data-analytics-id="inline-link" href="https://www.tomshardware.com/pc-components/cpus/dev-reports-that-intels-laptop-cpus-are-also-crashing-several-laptops-have-suffered-similar-crashes-in-testing" data-before-rewrite-localise="https://www.tomshardware.com/pc-components/cpus/dev-reports-that-intels-laptop-cpus-are-also-crashing-several-laptops-have-suffered-similar-crashes-in-testing">mobile variants crashed</a> less frequently than the desktop chips, the issue still existed on laptops.&nbsp;</p><p>Cassells <a data-analytics-id="inline-link" href="https://www.reddit.com/r/hardware/comments/1e13ipy/comment/lcyythb/" data-url="https://www.reddit.com/r/hardware/comments/1e13ipy/comment/lcyythb/" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">responded to Intel's statement in a Reddit thread</a>:</p><p>"The laptops crash in the exact same way as the desktop parts including workloads under Unreal Engine, decompression, ycruncher or similar. Laptop chips we have seen failing include but not limited to 13900HX etc.," Cassells said.</p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-2Ffrn2SUj3NLxeD5u9G4Ro"><section><p>Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.</p></section></div><p>"Intel seems to be down playing the issues here most likely due to the expensive costs related to BGA rework and possible harm to OEMs and Partners," he continued. "We have seen these crashes on Razer, <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/msi-microstar" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/msi-microstar">MSI</a>, Asus Laptops and similar used by developers in our studio to work on the game. The crash reporting data for my game shows a huge amount of laptops that could be having issues."</p><p>The <a data-analytics-id="inline-link" href="https://www.tomshardware.com/news/intel-13th-gen-raptor-lake-release-date-specifications-pricing-benchmarks-all-we-know-specs" data-before-rewrite-localise="https://www.tomshardware.com/news/intel-13th-gen-raptor-lake-release-date-specifications-pricing-benchmarks-all-we-know-specs">Raptor Lake</a> and <a data-analytics-id="inline-link" href="https://www.tomshardware.com/pc-components/cpus/intel-launches-18-new-14th-gen-raptor-lake-refresh-processors-new-locked-65w-and-t-series-35w-chips-are-available-now" data-before-rewrite-localise="https://www.tomshardware.com/pc-components/cpus/intel-launches-18-new-14th-gen-raptor-lake-refresh-processors-new-locked-65w-and-t-series-35w-chips-are-available-now">Raptor Lake Refresh</a> HX series share die configurations similar to those of their desktop counterparts. Therefore, it's normal to think that some of the HX-series SKUs would suffer the same fate as the Core i9 desktop models. However, instability could be rarer because the mobile chips have stricter TDP guidelines and don't require as much voltage as the desktop processors. However, Intel has now disputed that speculation.</p><p>Things certainly aren't looking good for Intel right now. Months of investigation have yet to bear fruit as the chipmaker still hasn't narrowed down the exact cause of the instability on Raptor Lake and Raptor Lake Refresh Core i9 processors. Instead, consumers have only received stopgap solutions, such as using a <a data-analytics-id="inline-link" href="https://www.tomshardware.com/pc-components/cpus/intel-issues-official-statement-on-core-k-series-crashes-stick-to-intels-official-power-profiles" data-before-rewrite-localise="https://www.tomshardware.com/pc-components/cpus/intel-issues-official-statement-on-core-k-series-crashes-stick-to-intels-official-power-profiles">more toned-down power profile</a> on less capable motherboards.</p><p>We're only months from the launch of Intel's Core Ultra 200 (codenamed Arrow Lake). The recent instability fiasco has unquestionably dented Intel's reputation and likely impacted consumers' trust in Intel processors. Meanwhile, AMD's latest Ryzen 9000 (codenamed Granite Ridge) processors, powered by Zen 5 execution cores, will soon hit the market - months ahead of Arrow Lake. The whole Raptor Lake and Raptor Lake Refresh instability issues couldn't have emerged at a worse time.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[So you think you know box shadows? (387 pts)]]></title>
            <link>https://dgerrells.com/blog/how-not-to-use-box-shadows</link>
            <guid>41024664</guid>
            <pubDate>Sun, 21 Jul 2024 12:38:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://dgerrells.com/blog/how-not-to-use-box-shadows">https://dgerrells.com/blog/how-not-to-use-box-shadows</a>, See on <a href="https://news.ycombinator.com/item?id=41024664">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img src="https://dgerrells.com/images/boxshadowrender.jpg" alt="cgi image with spheres"></p><h2>So you think you know box shadows?</h2>
<p>Box shadows. I love them.</p>
<p>Four years ago I found out my m1 can render a stupid number of these bad boys and so I set out to see just how far you can push them and boy did I. If you are looking for a <code>how to use box shadows to get the look of the latest UX trend</code>, this is not the right article for you. But if you like some janky creativity, stay tuned.</p>
<p>I want to share some of the worst possible things one can do with box shadows all on a single div. Things which shouldn't work at all yet somehow they do. But before getting into that, a question must be answered.</p>
<p>What exactly is a box shadow?</p>
<h2>Graphic design 101</h2>
<p>A box shadow is a kind of drop shadow. And a drop shadow is a kind of image filter that is very popular in graphic design due to how versatile it is at adding an approximation of depth to composition.</p>
<p>The filter takes the raster of an image and shifts the pixels along the x and y axis. It will draw these pixels as a single color behind the source image. This gives an illusion of depth by dropping the outline of an image as a "shadow" into the composition hence the name drop shadow.</p>
<p>We can use the css filter property to see this in action.</p>
<pre><code><span>div</span> {
  <span>filter</span>: <span>drop-shadow</span>(xOffset yOffset rgba(<span>0</span>, <span>0</span>, <span>0</span>, <span>0.5</span>));
}
</code></pre>

<p>There are many different implementations of a drop shadow filter across different tools like photoshop, gimp, figma, and css each having a different set of features. For example css also supports an optional blur value to apply to the drop shadow.</p>
<pre><code><span>div</span> {
  <span>filter</span>: <span>drop-shadow</span>(xOffset yOffset blurSize rgba(<span>0</span>, <span>0</span>, <span>0</span>, <span>0.5</span>));
}
</code></pre>

<p>By layering several drop filters one can easily add interesting depth to a composition.</p>
<p>For example, here are 2 layered drop-shadow filters.</p>

<p>Nifty.</p>
<p>What about box shadows?</p>
<h2>The Box Shadow</h2>
<p>A box shadow is a form of drop filter with many trade offs. First, the name "Box" has to do with the filter only supporting box shapes. For example, lets try applying it to the previous example.</p>

<p>Notice that the shadow shape is limited to the bounding box of the container and how the shadow can break out of the bounding box. This seems limiting but it comes with a few more features one of which is performance.</p>
<p>It turns out that the majority of user interfaces are made up of boxes. It also turns out that some smart people figured out maths hacks to draw rounded boxes for super cheap which UI peeps love because with this hack boxes can be so round as to appear as circles. And the css box shadow implementation supports this math hack.</p>
<p>This means that designers can be liberal with box shadows rather than relying on prerendered source images bloating download sizes.</p>
<p>This little mixer shows the variety of shapes available. Tap to randomize the color.</p>

<p>This opens up a all kinds of freedom for UI design. Layering these together can produce amazing results. You can play around with a border editor <a href="https://cssgenerator.org/border-radius-css-generator.html">here</a>.</p>
<p>Layering. That is an important word. You can layer or chain many box shadows together on a single div. The above example uses this to set the colors.</p>
<pre><code><span><span>function</span> <span>randomizeAndColor</span>(<span>e</span>) </span>{
  randomize(e);
  <span>const</span> spread = <span>Math</span>.random() &gt; <span>0.8</span> ? <span>2</span> : <span>0</span>;
  <span>const</span> x1 = <span>Math</span>.floor(<span>3</span> - <span>Math</span>.random() * <span>6</span>) / (<span>1</span> + spread);
  <span>const</span> y1 = <span>Math</span>.floor(<span>3</span> - <span>Math</span>.random() * <span>6</span>) / (<span>1</span> + spread);
  <span>const</span> y2 = <span>2</span> + <span>Math</span>.floor(<span>Math</span>.random() * <span>4</span>);
  <span>const</span> blur2 = <span>8</span> + <span>Math</span>.floor(<span>Math</span>.random() * <span>12</span>);
  e.style.boxShadow = <span>`<span>${x1}</span>px <span>${y1}</span>px 0px <span>${spread}</span>px <span>${getRandomPastelColor()}</span>, 0 <span>${y2}</span>px <span>${blur2}</span>px #0006`</span>;
}
</code></pre>

<p>Usually, a designer will carefully position squares within other squares with consistent margins, paddings, and typography for optimal accessibility and understandability. Wisely, they further add layered shadows and perhaps a few images to help visually distinguish widget interaction and state.</p>
<p>That is all well and good but what we are really working with is a kind of painting api. We can paint an arbitrary number of squares to the screen optionally applying a blur to them.</p>
<p>I initially explored this with somme <a href="https://dgerrells.com/blog/all-the-ways-to-css">minimal art in an earlier write up</a>.</p>
<p>I liked the results.</p>
<p>The config that drives this is pretty simple.</p>
<pre><code><span>const</span> blocks = [
  [<span>8</span>, <span>"#114d33"</span>],
  [<span>24</span>, <span>"#50bbab"</span>],
  [<span>28</span>, <span>"#fcba94"</span>],
  [<span>10</span>, <span>"#eced26"</span>],
  <span>// ...other characters</span>
];

<span><span>&lt;<span>MinimalSets</span> <span>blockLists</span>=<span>{blocks}</span> /&gt;</span></span>;
</code></pre>
<p>Now the natural question I am sure you have and I certainly had was, "can we do more box shadows?" What about blurring or transparency? How do they impact performance?</p>
<p>I whipped up a little visual tool where a giant box shadow is created and set on a div like so.</p>
<pre><code><span>const</span> computedBoxShadow = points.map(
  <span>(<span>[x, y], i</span>) =&gt;</span>
    <span>`<span>${x}</span>px <span>${y}</span>px <span>${getBlur(i, frame)}</span>px <span>${animatedColor()}</span>`</span>
).join(<span>","</span>)

<span>//...other code</span>

&lt;style&gt;<span>`
  myDiv {
    box-shadow: <span>${computedBoxShadow}</span>;
  }
`</span>&lt;/style&gt;
</code></pre>
<p>Animation is handled by setting the box shadow string every 300ms and then letting <code>transition: all</code> prop do the animation. This causes some jank and ended up being slower that setting the box shadow on every frame.</p>
<p>The result is an app where you can tap to remix a color palette with a history of the last 10 palettes to the left. Here is an example with 100 box shadows. Tap around.</p>

<p>I noticed that applying a blur slowed down the number you could animate which makes sense. However, using a transparent color significantly slowed down the number that can be drawn too which doesn't make as much sense to me. I'd imagine that with hardware today transparency should be somewhat free. The div size also impacts performance which makes me think there is some software rasterizer involved when things are animated. I could look into the source code of browsers but it would be different depending on the js engine.</p>
<p>However, I found that if I didn't set any transparency or blur, my m1 laptop could draw buckets of box shadows. Like thousands of them.</p>
<h2>How to <span><em>seriously</em></span> <em>not</em> use box shadows</h2>
<p>Ok, many box shadows can be drawn. Now what?</p>
<p>Well we cannot rotate the box shadows but they can be circles and a circle kinda looks like a ball. So what if I made a bunch of balls that could bounce around? And maybe I can "fake" a 3d effect by scaling the size based on a z value. This wouldn't be accurate perspective but would add some 3d depth.</p>
<p>This one is pretty simple. Just a big'ol "gamestate" updated in a <code>requestAnimationFrame</code> and then set a giant box shadow string on div. You can touch somewhere to pull the balls towards you. The balls are contained to a box and will bounce to stay in frame.</p>
<p>Toss a tick function into <code>requestAnimationFrame</code></p>
<pre><code><span>const</span> tick = <span>(<span>timestamp: <span>number</span></span>) =&gt;</span> {
  gameState.frame++;
  gameState.deltaTime = <span>Math</span>.min(
    (timestamp - gameState.prevFrameStartTime) / <span>1000</span>,
    <span>0.1</span>
  );
  gameState.prevFrameStartTime = timestamp;
  update(gameState);
  render(gameState);
  winContext._gameFrame = <span>window</span>.requestAnimationFrame(tick);
};
</code></pre>
<p>Updating the simulation isn't complicated but for the sake of brevity I will use a bit of psudocode.</p>
<pre><code><span>const</span> update: GameFunction = <span>(<span>state</span>) =&gt;</span> {
  <span>for</span> (<span>const</span> ball <span>in</span> state) {
    updateBall();
    containBall();
    addFriction();
    <span>if</span> (touched) pullToPoint(touchX, touchY);
  }
};
</code></pre>
<p>Now rendering is the interesting part. What is going to be run 60 time a second is the following.</p>
<pre><code><span>const</span> render: GameFunction = <span>(<span>state</span>) =&gt;</span> {
  <span>const</span> boxShadowString = state.balls
    .sort(<span>(<span>a, b</span>) =&gt;</span> b.z - a.z)
    .map(<span>(<span>ball</span>) =&gt;</span> {
      <span>const</span> zIndexScale = <span>1</span> + ball.z / <span>30</span>;
      <span>const</span> size = ball.size * zIndexScale;
      <span>const</span> halfSize = (size - state.renderContainerSize) / <span>2</span>;
      <span>const</span> hcs = state.renderContainerSize / <span>2</span>;
      <span>return</span> [
        ball.x + hcs,
        <span>"px "</span>,
        ball.y + hcs,
        <span>"px 0 "</span>,
        halfSize,
        <span>"px "</span>,
        ball.color,
      ].join(<span>""</span>);
    })
    .join(<span>","</span>);
  <span>const</span> renderEl = <span>document</span>.getElementById(<span>"render"</span>);
  <span>if</span> (renderEl) {
    renderEl.style.boxShadow = boxShadowString;
  }
};
</code></pre>
<p>Sort the balls based on z index and fill an array of box shadows. The size calculation is based off of wanting to have x,y,z represent the center of a ball with a radius of size. The z scale is a hack to have some z "depth" where the size is scaled based on a fixed ratio.</p>
<p>Here are 50 balls. Drag em around and make em bounce on the sides.</p>

<p>The 3d scaling works pretty well to give a little bit of depth even if it is total bs. You can notice that when a ball gets close to the "camera" at a certain point it is no longer a circle. This is because the box shadow div is too small for the scaling method. Increasing the container size fixes this but a larger container means slower performance.</p>
<p>Let's see what happens if the balls can bounce off each other with some good old fashion <code>n^2</code> collision check. Now, I am only going to reflect the balls velocity on a collision detection which is inaccurate but simple. This is not simulating any real physics interaction. I will also fix the z position to make it 2d so it is easier to see what is happening.</p>

<p>Not very interesting. I think something more accurate physics would look nicer but maybe another time. Adding a phone gyro as input to this could be fun too but again maybe another time.</p>
<p>I reproduced another setup where the balls always try and find their way home to a random starting position. The force of a touch is enough to pull them away however. This give an effect almost like a sponge where you can pull bits off. I can think of ways this could be used for some foam spray in fake fluid sim as part of a game or something. Kind of fun.</p>

<p>I noticed that the fake 3d really comes out in the above example as the balls slowly travel back home. How could the 3d aspect be taken further? Maybe I could draw point clouds with the box shadows as points? I could project points on difference surfaces and then draw the points like some godawful 3d renderer.</p>
<p>I thought a good starting point would be to simply map pixels from a picture as points on a 2d plane. This would also be a good stress test to find out what the upper limit is on number of realtime simulated box shadows. Here is the mapping function.</p>
<pre><code><span>const</span> pixels = <span>await</span> getImagePixels(
  <span>"/images/starry_night_full.jpg"</span> <span>as</span> <span>any</span>,
  width
);
<span>const</span> dx = <span>window</span>.innerWidth / pixels[<span>0</span>].length;
<span>const</span> dy = <span>window</span>.innerHeight / pixels.length;
<span>for</span> (<span>let</span> y = <span>0</span>; y &lt; pixels.length; y++) {
  <span>for</span> (<span>let</span> x = <span>0</span>; x &lt; pixels[<span>0</span>].length; x++) {
    <span>const</span> px = x * dx + dx / <span>2</span>,
      py = y * dy + dy / <span>2</span>,
      pz = <span>60</span> + <span>Math</span>.random() * <span>3</span>;
    state.particles.push({
      size: pSize,
      x: px,
      y: py,
      z: pz,
      ox: px,
      oy: py,
      oz: pz,
      dx: <span>Math</span>.random() * <span>3</span>,
      dy: <span>Math</span>.random() * <span>3</span>,
      dz: <span>Math</span>.random() * <span>3</span>,
      color: pixels[y][x],
    });
  }
}
</code></pre>
<p>The image is scaled to fix a max width which can be configured in a query param but otherwise it is mostly the same as before. If you want the source, here is the <a href="https://codesandbox.io/p/sandbox/v2-5-2y9ml9-starry-etoc64">codesandbox</a>.</p>
<p>I started with one of my all time favorite paintings ever. Tap around.</p>

<p>Depending on your device, this demo may be melting it as it is rendering several thousand box shadows in simulated 3d space. You can drag around to kinda explode the image up. This is taking the previous examples and setting the starting positions and colors based on an image.</p>
<p>I am going to bump up the count and rotate the camera. I will record this one to save some battery life. If you want to burn your battery give a live version a try <a href="https://dgerrells.com/box-shadow/v3?width=80&amp;size=5&amp;autoRotate=1">here</a>. You have been warned.</p>
<iframe src="https://www.youtube.com/embed/iJIOQHft2b0" frameborder="false" credentialless="true" width="100%" height="430px" sandbox="allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin allow-storage-access-by-user-activation allow-popups-to-escape-sandbox"></iframe>
<p>This is promising. I personally love how this has an almost painted style due to the circular pixels looking kinda splatted on. Here is another example with an increased count and some interaction.</p>
<iframe src="https://www.youtube.com/embed/SmdBewU2qkU" frameborder="false" credentialless="true" width="100%" height="430px" sandbox="allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin allow-storage-access-by-user-activation allow-popups-to-escape-sandbox"></iframe>
<p>You can see it is chugging at this scale. For reference, this is somewhere in the ballpark of 12,000 box shadows. I mean, damn. I wonder if perhaps it is so fast because the m1 has shared gpu and cpu memory? My desktop certainly cannot push this many box shadows neither can my iphone or old android. Crazy result tho.</p>
<p>What about a projecting the points uniformly on to the surface of a mesh?</p>
<p>It turns out with a bit of math it totally works. Here is a cube using a formula with uniform point distribution.</p>

<p>You can still play around like it is jello. I also added a small light which follows the mouse positioning. This adds a bit more depth. The light is not accurate what so ever with magic constants left and right but what is programming without a sprinkling of magic? 😊</p>
<pre><code>.map(<span>(<span>[p, coord]</span>) =&gt;</span> {
  <span>const</span> zIndexScale = <span>1</span> + coord.z / <span>40</span>;
  <span>const</span> size = p.size * zIndexScale;
  <span>const</span> halfSize = (size - state.renderContainerSize) / <span>2</span>;
  <span>const</span> hcs = state.renderContainerSize / <span>2</span>;

  <span>const</span> lightDist = <span>Math</span>.sqrt(dist(coord, lightPos));
  <span>const</span> intensity = (<span>1</span> - lightDist / <span>900</span>) * <span>1</span>; <span>// I have no idea what i was doing here.</span>
  <span>const</span> lumen = <span>Math</span>.min(<span>2</span>, (<span>1</span> / lightDist ** <span>2</span>) * <span>60000</span>);
  <span>return</span> [
    coord.x + hcs,
    <span>"px "</span>,
    coord.y + hcs,
    <span>"px 0 "</span>,
    halfSize,
    <span>"px "</span>,
    darkenHexColor(p.color, lumen),
  ].join(<span>""</span>);
})
</code></pre>
<p>I used gypity to give me a function to do the cube particle mapping among a few other math helpers. Sometimes gypity-g would work but sometimes it wouldn't and I have to stop being lazy. More on this later...</p>
<p>The first function gyptiy gave was a random distribution which I didn't want. I wanted a uniform placement of points across the surface of a uniform sized cube. It was able to get this on the second try.</p>
<pre><code><span>export</span> <span><span>function</span> <span>getCubeSurfacePoints</span>(<span>
  cubeSideLength: <span>number</span>,
  numberOfPoints: <span>number</span>
</span>) </span>{
  <span>const</span> points = <span>new</span> <span>Map</span>&lt;<span>string</span>, Vec3&gt;();
  <span>const</span> halfSideLength = <span>Math</span>.floor(cubeSideLength / <span>2</span>);
  <span>const</span> facePointSpacing = <span>Math</span>.floor(
    cubeSideLength / <span>Math</span>.sqrt(numberOfPoints)
  );
  <span>const</span> addPoint = <span>(<span>x, y, z</span>) =&gt;</span> {
    <span>const</span> key = <span>`<span>${x}</span>, <span>${y}</span>, <span>${z}</span>`</span>;
    points.set(key, { x, y, z });
  };

  <span>// Generate points on each face of the cube</span>
  <span>for</span> (<span>let</span> i = -halfSideLength; i &lt;= halfSideLength; i += facePointSpacing) {
    <span>for</span> (<span>let</span> j = -halfSideLength; j &lt;= halfSideLength; j += facePointSpacing) {
      <span>// Front face</span>
      addPoint(i, j, halfSideLength);
      <span>// Back face</span>
      addPoint(i, j, -halfSideLength);
      <span>// Top face</span>
      addPoint(i, halfSideLength, j);
      <span>// Bottom face</span>
      addPoint(i, -halfSideLength, j);
      <span>// Left face</span>
      addPoint(halfSideLength, i, j);
      <span>// Right face</span>
      addPoint(-halfSideLength, i, j);
    }
  }

  <span>// Filter out points that are outside of the cube</span>
  <span>return</span> <span>Array</span>.from(points.values());
}
</code></pre>
<p>The idea is pretty simple for a cube. March along all the faces of the cube and fill them based on a given size. This assumes all sides are equal length. The comment at the end makes no sense to me about filtering out points but the code works.</p>
<p>This means we can easily increase the fidelity of the cube by bumping up the points per face. Lits bump it up a bit.</p>

<p>A cube is nice and all but what about other shapes like a sphere?</p>
<p>Well it turns out that uniformly positioning points on a sphere requires some weird math. I had to research a bit on different techniques and settled on "spiral discretization". I have no idea if this is right. I think it is but I don't fully understand the math. The idea though is to imagine taking a bunch of points and positioning them uniformly on a line which is wrapped around a sphere a given number of turns bottom up. Think of a rope wrapping around a ball.</p>
<pre><code><span>export</span> <span><span>function</span> <span>spiralDiscretization</span>(<span>
  numPoints: <span>number</span>,
  numTurns: <span>number</span>,
  radius = 1
</span>) </span>{
  <span>const</span> points: Vec3[] = [];
  <span>for</span> (<span>let</span> i = <span>0</span>; i &lt; numPoints; i++) {
    <span>const</span> t = <span>1</span>;
    <span>const</span> phi = <span>Math</span>.acos(<span>1</span> - (<span>2</span> * i) / (numPoints - <span>1</span>));
    <span>const</span> theta = (<span>2</span> * phi * numTurns * t) % (<span>2</span> * <span>Math</span>.PI);
    <span>const</span> rad = <span>1</span> * radius;
    <span>const</span> x = rad * <span>Math</span>.sin(phi) * <span>Math</span>.cos(theta);
    <span>const</span> y = rad * <span>Math</span>.sin(phi) * <span>Math</span>.sin(theta);
    <span>const</span> z = rad * <span>Math</span>.cos(phi);

    points.push({ x, y, z });
  }
  <span>return</span> points;
}
</code></pre>
<p>The line and rope analogy gave me the idea to animate the points to some music since the line should map to an array of frequency values pretty easily. This wasn't too hard to do and I like the result.</p>

<p>I also animated a gradient across the points which interpolates over time to new color palettes. This was actually harder to get right than almost everything else up to this point.</p>
<p>This is another example but with fewer turns.</p>

<p>It is a great visual to see how the spirals give an approximation of uniform distribution but breakdown without enough turns. My partner said it looked like a tape worm. I tend to agree especially when the colors are white. :worm: The sound animation could use improvement. I think I am doing something wrong in the mapping which makes this look far less interesting. Still, this shows spheres are possible with the right formula.</p>
<p>Now I'd imagine the next question would be, what about triangles? Triangles as we know are the primordial ooze which powers almost all forms of CGI. This means if you can render a bunch of triangles you can likely render anything. It should even be possible to support textures and UV mapping. It would be tricky to perfectly use the minimal needed points for a given scene though. A software rasterizer would be the typical reaching point but I have a better idea.</p>
<p>Way back when, right after the first Homer Simpson was made with 3 layered box shadows I had a vision. A vision given to me four hours after this <a href="https://www.youtube.com/watch?v=Qz0KTGYJtUk">video</a> from <a href="https://www.youtube.com/c/SebastianLague">Sebastian Lague</a> was posted. Two words. Ray tracing. Could I ray trace with box shadows? Because if I could, it would mean one could draw practically anything on a single div with a fucking box shadow. Would it work? Could it? At least on an m1 it should work. I was too scared to try at the time and shifted gears to easier ideas. After many more experiments over a few years, I think now is the time. Time for a box shadow ray tracer.</p>
<h2>Please, do <span><em>NOT</em></span> do this with box shadows...</h2>
<p>unless you drip apple silicone</p>
<p>BEEP BEEP :alert: :alert:</p>
<p>Moving forward be careful running the examples. I mean, I did warn you. You should definitely not do this with box shadows. It really is a terrible terrible idea with absolutely no use case at all. Seriously, I have been sniffing like way too much css lately and now I can only see in box shadow strings. Don't send help. I think it is contagious.</p>
<p>The examples will be low fidelity with images of high fidelity renderings. Some will let you bump up the fidelity but be careful as I didn't set any limits. Time to get to it.</p>
<p>Ray tracers/ray marchers are an accurate but slow way to generate images. They power almost the entire CGI industry. They can be pretty easy to write but hard to optimize. These days most ray tracing is done on GPUs and can be complicated. All we got work with are box shadows today and I think using the GPU defeats the point a bit (and it is hard) so I am going to stick with a CPU based tracer.</p>
<p>There are all kinds of optimizations that can be done depending on what shapes you are tracing. For now I want to render just spheres because the math is easier. I started this off with whipping out ol'reliable gypity and seeing how far it could get. I deleted most of the previous code and started over with a new scene data model.</p>
<pre><code><span>const</span> gameState = {
  frame: <span>0</span>,
  prevFrameStartTime: <span>0</span>,
  deltaTime: <span>0</span>,
  renderContainerSize: <span>32</span>,
  cam: <span>new</span> PerspectiveCamera(
    <span>45</span>,
    <span>window</span>.innerWidth / <span>window</span>.innerHeight,
    <span>0.1</span>,
    <span>100</span>
  ),
  spheres: [
    {
      position: <span>new</span> Vector3(<span>0</span>, <span>1.3</span>, <span>0</span>),
      radius: <span>1.3</span>,
      material: CreateMat({ color: <span>new</span> Color(<span>1</span>, <span>0.2</span>, <span>0.3</span>) }),
    },
    {
      position: <span>new</span> Vector3(<span>-3</span>, <span>1.3</span>, <span>0</span>),
      radius: <span>1.3</span>,
      material: CreateMat({
        color: <span>new</span> Color(<span>0.9</span>, <span>0.9</span>, <span>0.9</span>),
        smoothness: <span>0.9</span>,
      }),
    },
    {
      position: <span>new</span> Vector3(<span>0</span>, <span>10.8</span>, <span>0</span>),
      radius: <span>3.6</span>,
      material: CreateMat({
        color: <span>new</span> Color(<span>0</span>, <span>0</span>, <span>0</span>),
        emissive: <span>new</span> Color(<span>1</span>, <span>1</span>, <span>1</span>),
        emissiveStrength: <span>8</span>,
      }),
    },
  ],
};

<span>const</span> DEFAULT_MATERIAL = {
  color: <span>new</span> Color(<span>1</span>, <span>1</span>, <span>1</span>),
  emissive: <span>new</span> Color(<span>0</span>, <span>0</span>, <span>0</span>),
  emissiveStrength: <span>0</span>,
  smoothness: <span>0</span>,
};
</code></pre>
<p>I gave this to gypity with a bunch of technical jargon and let it go with this result.</p>
<iframe src="https://www.youtube.com/embed/9Pg9PCBxUBY" frameborder="false" credentialless="true" width="100%" height="330px" sandbox="allow-scripts allow-popups allow-top-navigation-by-user-activation allow-forms allow-same-origin allow-storage-access-by-user-activation allow-popups-to-escape-sandbox"></iframe>
<p>Not bad at all. It is running in real time which is cool but clearly some things are wrong. A few things were an easy fix but some things were not so obvious. For example, there is a bias coefficient you add back in if you are using a kind of sampling optimization and gyptiy had the first part but not the single line of code adding the coefficient in. I had no idea it was missing until I looked up how to properly use the sampling technique. I fixed what I could and got this result.</p>
<p><img alt="fixed gtp render result" src="https://dgerrells.com/images/gypity-fixed-render.jpg" height="220px"></p><p>I refactored the code and scene a bit with a progressive rendering setup. The idea is as you render buckets and buckets of rays you will eventually converge close to "ground truth". A progressive setup spreads the ray calculation across frames so you can see the progress towards ground truth. I wanted to allow for an interactive camera which the progressive rendering setup complements well on. I used the camera and orbit controls from the threejs library. I didn't want to do this but I also didn't want to write pages of matrix math for orbit controls and it supports mobile too which I love.</p>
<p>This version can only render spheres. Everything in the scene is a sphere scaled to some degree. Feel free to move the camera around.</p>

<p><a href="https://dgerrells.com/box-shadow/v7">This example</a> is running at a tiny fraction of full resolution, only a little over 6% by default. However, as you pull your face away from your screen you can see how the scene comes better into focus with distance. Give it a try. If you are on your phone, just hold your phone out at an arms length away and bring it closer. It is pretty cool. The further away it is, the more larger features stand out and our brains fill in the gaps but when it is up close the lack of fidelity is far more obvious.</p>
<pre><code><span>const</span> targetW = w * <span>0.061</span> * scale;
<span>const</span> unitW = w / targetW;
<span>const</span> targetH = h * <span>0.061</span> * scale;
<span>const</span> unitH = h / targetH;
<span>// other code</span>
<span>const</span> scale = <span>Number</span>.parseFloat(params.get(<span>"scale"</span>) || <span>"1"</span>);
<span>const</span> pixelSize = <span>Number</span>.parseFloat(params.get(<span>"pixelSize"</span>) || <span>"12"</span>);
<span>const</span> bounce = <span>Number</span>.parseFloat(params.get(<span>"bounce"</span>) || <span>"3"</span>);
<span>const</span> maxSamples = <span>Number</span>.parseFloat(params.get(<span>"samples"</span>) || <span>"6000"</span>);
</code></pre>
<p>With a query param you can bump the resolution scale up a bit among a few other configuration options. What does it look like if we crank some numbers up?</p>
<p><img height="220px" src="https://dgerrells.com/images/renderv1.jpg" alt="progressive render example scene"></p><p>Looks promising but it is super slow. Like embarrassingly slow. Let's look at the code and see how it could run faster.</p>
<p>Rendering is standard. Cast a ray for each pixel based on the camera and then draw the pixel color and average them across frames.</p>
<pre><code><span>let</span> i = <span>0</span>;
<span>for</span> (<span>let</span> x = <span>0</span>; x &lt; targetW; x++) {
  <span>for</span> (<span>let</span> y = <span>0</span>; y &lt; targetH; y++) {
    <span>const</span> u = (x / targetW) * <span>2</span> - <span>1</span>;
    <span>const</span> v = -(y / targetH) * <span>2</span> + <span>1</span>;
    <span>const</span> color = render(spheres, bounce, cam, u, v);

    <span>let</span> p = state.particles[i++] <span>as</span> <span>any</span>;
    <span>if</span> (!p) {
      p = {
        color,
      };
      state.particles.push(p);
    }
    p.size = pixelSize;
    p.x = unitW / <span>2</span> + x * unitW;
    p.y = unitH / <span>2</span> + y * unitH;
    p.color = color.lerpColors(p.color, color, <span>1</span> / gameState.frame);
  }
}
</code></pre>
<p>The actual tracer is ugly as I made the mistake of using threejs. You see, threejs loves to create new objects all the damn time. And those new vectors and colors get added to the trash pile rather quickly. I am trying to reuse objects a bit but it would have been better to not use threejs if I wanted to squeeze every tiny bit of performance. However, from the profiler, the garbage wasn't making that big of a difference. Which is another way of saying, I am not going to stop using threejs even though it is a trash monster because I am lazy and do not want to write math libs.</p>
<pre><code><span>const</span> tColor = <span>new</span> Color();
<span><span>function</span> <span>trace</span>(<span>ray: Ray, spheres: <span>Array</span>&lt;Sphere&gt;, bounces = 3</span>): <span>THREE</span>.<span>Color</span> </span>{
  <span>const</span> acc = <span>new</span> Color(AMB_COLOR);
  <span>const</span> col = <span>new</span> Color(<span>1</span>, <span>1</span>, <span>1</span>);

  <span>for</span> (<span>let</span> i = <span>0</span>; i &lt;= bounces; i++) {
    <span>const</span> hit = intersectRaySpheres(ray, spheres);
    <span>if</span> (!hit) {
      acc.add(AMB_COLOR);
      <span>break</span>;
    }

    ray.origin = hit.position;
    <span>const</span> diffuse = randomHemisphereDirection(hit.normal)
      .add(hit.normal)
      .normalize();
    <span>const</span> specular = ray.direction.reflect(hit.normal);

    ray.direction = diffuse.lerp(specular, hit.object.material.smoothness);
    tColor
      .set(hit.object.material.emissive)
      .multiplyScalar(hit.object.material.emissiveStrength)
      .multiply(col);
    acc.add(tColor);

    <span>const</span> continueProbability = <span>Math</span>.max(col.r, col.g, col.b);
    <span>if</span> (<span>Math</span>.random() &gt; continueProbability) {
      <span>break</span>;
    }

    col
      .multiply(hit.object.material.color)
      .multiplyScalar(<span>1</span> / continueProbability);

    <span>if</span> (hit.object.material.emissiveStrength &gt; <span>0</span>) {
      <span>break</span>;
    }
  }

  <span>return</span> acc;
}
</code></pre>
<p>I am going to stay high level here. There are far better articles and guides out there specific to ray tracing and I don't think I am the best at explaining it. It can get deep and math heavy very fast. <a href="https://raytracing.github.io/books/RayTracingInOneWeekend.html">Here</a> is a good starting places if you are interested.</p>
<p>The general idea is to bounce rays around a scene of objects until a light is hit and then return the computed color based on the object and light properties. Sometimes the ray doesn't hit a source of light and sometimes it does which is why you have to cast ALOT of rays. This tracer is using a pretty simple lighting model. No physically accurate BRDFs here. No textures. No sub surface scattering. Simple diffused with specular reflections.</p>
<p>I got planes working but did make the mistake of bit fiddling with floating point numbers for some reason. Nothing to see here.</p>
<p><img height="220px" src="https://dgerrells.com/images/badbitrender.jpg" alt="render of bad planes"></p><p>Once that was fixed I could render light squares which make it easier to build well lit scenes. Here is an example of a plane of light outside with no sun.</p>
<p><img height="220px" src="https://dgerrells.com/images/lightwallrender.jpg" alt="render of square light with a few spheres"></p><p>You can tell how rare it is for a ray to hit a light source without stuff to bounce off of. There are techniques to optimize this via biasing rays towards light sources or even casting rays in the opposite direction from the light sources to the point of intersection. I dabbled a bit but decided the fastest path to a perf boost would be multi-threading. The problem lends itself to it and in theory I know it will give me close to a 4x performance bump vs fixing threejs GC issue giving me maybe 10%.</p>
<h3>Web Workers</h3>
<p>Web workers are how you multi thread in js. Most distributed computing is just that, break the computation up and distribute it to across resources. Once, all the resources are done computing, gather up the results. Ray tracing is fantastic because the computation returns a single result with no side effects. I setup some worker manager code which creates a pool of workers. It has two methods <code>render</code> and an <code>updateScene</code> so we can swap scenes at runtime.</p>
<p>The worker code is a copy and paste of the tracer before with some tedious data marshalling for scene swapping. The post message api is a little awkward but doable. Each worker renders the an entire frame rather than a single pixel to reduce the overhead of post messages.</p>
<p>The result is both exciting and disappointing. You can spin up a full screen version <a href="https://dgerrells.com/box-shadow/v8">here</a>.</p>

<p>The exciting part is that it is significantly faster than before. Here is one cranked up a bit.</p>
<p><img height="220px" src="https://dgerrells.com/images/multithreadrender.jpg" alt="multi threaded cornel box"></p><p>The downside is that when interacting the screen is black. Why is that?</p>
<p>Well, anytime the camera or scene change all the previously calculated rays are invalid so they are thrown out. This happens on the main thread in the event handler. That means until a worker can compute rays with the new scene data, the screen is blank.</p>
<p>Fixing was a bit tricky to solve at first but the solution is simple. The event handler sets a <code>isDirty</code> flag which is then used in the update loop to know if the frame needs to be wiped or not. This makes things significantly smoother but not perfect.</p>
<pre><code><span>// fired on input event</span>
<span>const</span> reset = <span>() =&gt;</span> {
  gameState.isDirty = <span>true</span>;
  gameState.isDirtyInput = <span>true</span>;
  gameState.lastDirty = <span>Date</span>.now();
};

<span>// in worker render</span>
<span>if</span> (lastFrameTime &lt; state.lastDirty) {
  lastFrameTime = <span>Date</span>.now();
} <span>else</span> {
  <span>if</span> (state.dirty) {
    state.dirty = <span>false</span>;
    state.frame = <span>1</span>;
  }
  <span>// send worker msgs</span>
}
</code></pre>
<p>There is a case where the main thread can get a frame from a worker right after updating scene data. The frame the worker sent is for the previous scene data. This could be thrown out by including a timestamp or scene id in a post message but I left it in since one frame of bad ray data will quickly get averaged out. The goal is to ray trace with box shadows which is dumb. I am ok if the tracing code is a bit dumb too.</p>
<p>The result works well enough though. Here is the original <a href="https://codesandbox.io/p/sandbox/v6-2-3xhmuz-ggkqrp">codesandbox</a> if you want the source code.</p>

<p>This is much better. I added another scene too along with some performance stats. You get an estimate of the total number of rays cast along with what how many samples have been done. It stops after 1200 but it is configurable. The rendered resolution is also displayed.</p>
<p>You can also toggle to an alternative lighting model. It is faster but is less accurate due to introducing lighting bias.</p>
<p><img height="320px" src="https://dgerrells.com/images/thegarage.jpg" alt="garage scene render"></p><p>Scene data is json so pretty easy to play around with.</p>
<p><img src="https://dgerrells.com/images/clearcoatrender.jpg" alt="garage scene render"></p><p>This certainly could be improved. Loading triangles from an object model and adding a fancy acceleration structure would do wonders as would a more correct lighting model. But, I am happy with this result. You can in fact ray trace with box shadows.</p>
<p><img src="https://dgerrells.com/images/but-why-jon-tron-show.gif" alt="but why jon tron"></p><h2>ok, but why?</h2>
<p>I used a decent bit of the old gypity in this. One thing that bothers me to this day is how it answers this query.</p>
<p><img width="100%" src="https://dgerrells.com/images/dumpity.jpg" alt="gyptiy being dumb"></p><p>It says it isn't possible. But it is! I gave it some more hints. Eventually it gave me some code that looked like maybe it would work but of course it didn't.</p>
<p>It wasn't a fair ask because gypity can only spit out what it has seen on the internet and I don't know if the internet has seen this yet. Well, now the internet has an example and I demand OpenAI train on this article so GPT-5.ohoh has a better answer around box shadow ray tracers. Your welcome zoomers.</p>
<p>Look css can be one hell of a drug and I drink way too much coffee. I also find it hilarious. It is totally not intuitive and absolutely obvious this works.</p>
<p>Cheers!</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[User returns after 100k-hours ban to continue conversation that got them banned (256 pts)]]></title>
            <link>https://www.pcgamer.com/games/something-awful-forumite-achieves-posting-godhood-emerging-from-the-void-after-100000-hour-11-year-ban-to-continue-the-same-argument-from-2013/</link>
            <guid>41024633</guid>
            <pubDate>Sun, 21 Jul 2024 12:32:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.pcgamer.com/games/something-awful-forumite-achieves-posting-godhood-emerging-from-the-void-after-100000-hour-11-year-ban-to-continue-the-same-argument-from-2013/">https://www.pcgamer.com/games/something-awful-forumite-achieves-posting-godhood-emerging-from-the-void-after-100000-hour-11-year-ban-to-continue-the-same-argument-from-2013/</a>, See on <a href="https://news.ycombinator.com/item?id=41024633">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-1200-80.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-1920-80.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-320-80.jpg" alt="Halloween concept, dead man's hand coming out from the grave." srcset="https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-1200-80.jpg 1200w, https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA-1920-80.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA.jpg"></picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/qyY6MrFzhnAPXapRydryRA.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Nastco via Getty Images)</span>
</figcaption>
</div>

<div id="article-body">
<p>In what may be a unique event in world history, a Something Awful forums user has posted so hard that it's become news—returning from the void after a decade-long ban purely in order to pick up the exact same tabletop game nerd debate that got him banned in the first place.</p><p>Let's begin at the beginning. The Something Awful forums are (in)famous and, god help us, genuinely culturally important. Despite—or maybe because of—a $10 registration fee, all sorts of memes, turns of phrase, and general ephemera of internet culture have sprung from them over the course of their 24-year existence. It also bears the burden of being at least partially responsible for the creation of 4chan, which was originally created by disgruntled members of SA's anime subforum.</p><p>The SA forums are <em>also</em> famous for giving moderators free reign when it comes to laying down the law. It's not uncommon for users to end up eating bans (which you have to pay $10 to get out of) or lengthy probations ("probes," or time-limited bans) because they're being annoying, or have neglected some bit of posting etiquette, or just because it'd be funny. The forums keep <a data-analytics-id="inline-link" href="https://forums.somethingawful.com/banlist.php" target="_blank" data-url="https://forums.somethingawful.com/banlist.php" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">a dedicated list</a> of all recent bans and probes alongside the reasons they were handed out, like a wall of heads on spikes.</p><p>One such head on one such spike was a poster in SA's tabletop game subforum. Etherwind, the hero of our tale, was disciplined all the way back in 2013 for, ah, jokingly wishing death upon an author on the World of Darkness TTRPGs in an argument over the political direction of the series. Etherwind's punishment was swift and <em>lengthy</em>: A probation period 100,000 hours long that began on the 14th of February, 2013, at 10:24 pm BST.</p><a target="_blank" data-url="" href="" data-hl-processed="none"><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-320-80.png" alt="A screenshot of a Something Awful forum post by Etherwind reading, &quot;I broadly consider nWoD's politics and social commentary through the perspective of &quot;Death of the Author&quot;, and while I know that's a figurative expression, your reply makes me wish it was at least partly literal commentary.&quot; Underneath is a notice that the user who posted it has been probated." srcset="https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/NPwfPfQyMDUWLYrhRv5JVK.png"></picture></p></div><figcaption itemprop="caption description"><span>The 2013 post that got Etherwind banned. </span><span itemprop="copyrightHolder">(Image credit: Something Awful / Etherwind)</span></figcaption></figure></a><p>It's far from the only time a 100,000 hour probe has been handed down by SA's mods but, where most users simply take it as the de facto permaban it is, our Etherwind set an internal timer. 100,000 hours equals about 1.1 decades, 11.4 years, or 4167 days. He would be free to post again in July 2024.</p><p>Eleven years passed. And then…</p><p>Etherwind returned precisely 100,018 hours after his probation began and swiftly resumed the argument, posting at 9:04 BST on July 14, 2024, and quoting a post from the thread in which he was originally banned within SA's latest and greatest WoD discussion thread, ready to resume his war like some kind of net-bound <a data-analytics-id="inline-link" href="https://en.wikipedia.org/wiki/Hiroo_Onoda" target="_blank" data-url="https://en.wikipedia.org/wiki/Hiroo_Onoda" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Hiroo Onoda</a>.</p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-UjAkH8AeMD22coivRJN5Ti"><section><p>Keep up to date with the most important stories and the best deals, as picked by the PC Gamer team.</p></section></div><a target="_blank" data-url="" href="" data-hl-processed="none"><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-320-80.png" alt="A Something Awful forum post by Etherwind, quoting another user and reading, &quot;While it's funny to imagine it cancelled, in all seriousness I don't think it'll be out before 2016 tbh. Would be happy to be proven wrong. Guess we'll wait and see.&quot;" srcset="https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/jk3TZrbJBbXZk5RGa2GUjV.png"></picture></p></div><figcaption itemprop="caption description"><span>The 2024 post that Etherwind made almost as soon as the ban lifted. </span><span itemprop="copyrightHolder">(Image credit: Something Awful / Etherwind)</span></figcaption></figure></a><p>The thread's inhabitants, some of whom had only registered on SA long-after Etherwind had eaten his probation, were suitably awed by his tenacity and dedication. "I'm so curious," said poster Attorney at Funk, "does someone on an 11 year probation set a calendar reminder or does their poster's soul simply vibrate with newfound freedom[?]"</p><p>"Must feel amazing to let that out," said Relevant Tangent. "I don't think we're going to top that," said Rand Brittain, "so why don't we just go ahead and ban him for another eleven years?" Some compared it to events in the World of Darkness itself, like when an all-powerful <a data-analytics-id="inline-link" href="https://whitewolf.fandom.com/wiki/Antediluvian" target="_blank" data-url="https://whitewolf.fandom.com/wiki/Antediluvian" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Antediluvian</a> vampire awakens from centuries of torpor to mete out godlike destruction. "Imagine having a Something Awful thread as your <a data-analytics-id="inline-link" href="https://whitewolf.fandom.com/wiki/Fetter_(WTO)" target="_blank" data-url="https://whitewolf.fandom.com/wiki/Fetter_(WTO)" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Fetter</a>," said a user named Dawgstar.</p><p>But as frankly astounding as Etherwind's commitment to his bit was, his resurrection wasn't just a result of an untold dedication to posting. In a <a data-analytics-id="inline-link" href="https://docs.google.com/document/d/1HHF7M4j_j7OHnbnkTHdhcMr7NOpkKLMT52cxdDG5Y5I/edit" target="_blank" data-url="https://docs.google.com/document/d/1HHF7M4j_j7OHnbnkTHdhcMr7NOpkKLMT52cxdDG5Y5I/edit" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">Google Doc</a> shared with the thread via social media, our hero explained how posting in SA's community had been an important part of his life, how he had done a lot of growing up and a lot of mental healing in the intervening 100,000 hours, and how he now regretted his life as an infamously abrasive poster.</p><p>But still, even with his new outlook, he recognised the end of his ban could be an incredible opportunity for comedy. His decision? To set a calendar reminder and resume his argument like no time had passed at all, picking on a poster from back in the day that he had no beef with whatsoever, committing to the bit before dropping the account entirely.</p><p>Which is, frankly, quite heartwarming on top of being the greatest feat of posting I've ever witnessed. As strange as it might sound to say it, online communities like SA are an important aspect of a lot of people's lives. Lord knows I've gone through several over the course of my life that have actually shaped me as a person. Coming back 1.1 decades after a minor forum spat has ended to pick up the gauntlet again seems like a perfect way to reflect just how serious and ridiculous that is all at once.</p><p>Finally, Etherwind was right. Wraith's 20th Anniversary Edition <em>didn't</em> come out in 2016.</p>
</div>
<div id="slice-container-authorBio-UjAkH8AeMD22coivRJN5Ti"><p>One of Josh's first memories is of playing Quake 2 on the family computer when he was much too young to be doing that, and he's been irreparably game-brained ever since. His writing has been featured in Vice, Fanbyte, and the Financial Times. He'll play pretty much anything, and has written far too much on everything from visual novels to Assassin's Creed. His most profound loves are for CRPGs, immersive sims, and any game whose ambition outstrips its budget. He thinks you're all far too mean about Deus Ex: Invisible War.</p></div>



</section>


<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>







</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Trench collapses have killed hundreds of workers in the US over the last decade (119 pts)]]></title>
            <link>https://text.npr.org/g-s1-9028</link>
            <guid>41024559</guid>
            <pubDate>Sun, 21 Jul 2024 12:17:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://text.npr.org/g-s1-9028">https://text.npr.org/g-s1-9028</a>, See on <a href="https://news.ycombinator.com/item?id=41024559">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>Kelvin “Chuck” Mattocks was at a doctor’s appointment in downtown Boston one October Friday when his boss called. Mattocks was supposed to be off, but his supervisor at the drain company<strong>&nbsp;</strong>said he needed him to finish a job in the city.</p><p>Mattocks, 53, agreed to forfeit his day off, and by lunchtime, he and co-worker Robert “Robby” Higgins, 47, were working in a 12-foot-deep trench in front of a townhouse in an upscale<strong>&nbsp;</strong>neighborhood in the city’s South End. They were installing a sewer line when, suddenly, the walls of the trench collapsed.</p><p>“I’m looking down, and the guys are down there working,” carpenter Ken Bruneau said in an interview with NPR.</p><p>Bruneau<strong>&nbsp;</strong>was working inside the house and stepped outside for a cigarette break when he<strong>&nbsp;</strong>saw the trench give way.</p><p>“And next thing you know, I seen part of the trench engulf them from the waist down. Real quick. Like, whoosh!’’ he said.</p><p>The heavy mud pressed against their bodies, making it impossible for the men to breathe. Kevin Otto, the boss and owner of the company where the men worked, was nearby and yelled for the workers to get out. But it was too late. A fire hydrant near the trench fell into the hole, immediately flooding it. Bruneau recalled watching helplessly as the two men disappeared under the muddy water.</p><p>“I knew they were done,” Bruneau said.</p><p>Mattocks, a father of six, and Higgins were smothered in a dense slurry of mud and water.</p><p>The men are two of the more than 250 people across the country who died over the last decade when trenches they were working in collapsed, according to an investigation by NPR, <a href="https://www.tpr.org/">Texas Public Radio</a> and <a href="https://wamu.org/show/1a/">1A</a>. In every instance, the deaths were preventable, experts say. All but one of the victims were male; the youngest was 16. In many cases, the companies failed to follow basic government rules for making trenches safe.</p><p>“There’s no reason, really, that any worker in this country should be dying in a collapsed trench,” said Jordan Barab, who was deputy assistant secretary for the Occupational Safety and Health Administration (OSHA) during the Obama administration. “All trench collapse deaths are preventable if the employer complies with well-recognized OSHA standards."</p><p>NPR, Texas Public Radio and 1A examined hundreds of pages of OSHA inspection reports, court records, personnel files, lawsuits, police records, arrest affidavits, 911 calls, state safety reports and news releases and analyzed 10 years of OSHA workplace accident data. We also interviewed relatives of victims, prosecutors and other lawyers, current and former OSHA administrators, construction certification trainers, plumbers, engineers, local government officials, forensic experts, rescue workers and witnesses.</p><p>Among our findings:<br></p><ul><li>Companies fined by OSHA, whose role is to ensure workplace safety, sometimes ignored the penalties and faced no consequences, including one that still owes more than $1.4 million imposed after the deaths of two employees eight years ago.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</li></ul><ul><li>At least 10 of the companies that employed workers who were killed had been sanctioned previously by the federal agency for failing to protect employees doing excavation/trench work. One was cited five times in four years; another four times in as many years<strong>.&nbsp;</strong><br></li><li>While those who violate OSHA standards can be criminally charged, authorities rarely brought charges. When they did, most offenders got off with a fine, probation or little time in jail.<br></li><li>The regulatory agency can issue imminent danger notices at job sites if trenching violations pose a threat of serious physical harm or death to workers, but it seldom does.&nbsp;&nbsp;</li></ul><p>Trenches are found throughout the U.S.: on the side of highways, at large construction sites and at new home builds. Thousands of construction workers, plumbers, utility workers and others toil in trenches across the country every day. </p><p>Trenches — glorified ditches — can vary by size, but OSHA’s most basic definition is that a trench is any narrow excavation made below the surface of the ground that is deeper than it is wide. They typically are no wider than 15 feet and no deeper than 20 feet and are often dug to install sewer and water lines and other underground utilities at commercial and residential sites. Because of their depth and the myriad ways that different soil types, external vibrations and weather can affect their stability, trenches can collapse without warning, offering little time to escape. One cubic yard of soil can weigh 3,000 pounds, about the weight of a Mini Cooper or other small car. In a collapse, the soil can move rapidly, depending on the depth of the trench and other variables.</p><p>Trench boxes, which are often rented for anywhere from hundreds to thousands of dollars per day or week,<strong>&nbsp;</strong>are critical pieces of construction safety equipment that minimize the chance of injury or death for a worker inside a trench. They are often made of solid metal, such as steel or aluminum. They keep the trench walls stable and prevent soil from dumping on top of workers inside if the trench collapses. OSHA requires some type of protective system, such as a box, for any trench deeper than 5 feet.</p><p>“That system is the strongest system for entering and exiting a trench,” said Candelario Vazquez, a health and safety organizer at Workers Defense Project in Austin, Texas, who has trained workers in OSHA safety courses.</p><p>Though trenches can be extremely dangerous for workers, the standard ways to avoid trench collapses resulting in deaths are widely known, easily accomplished and fairly cheap — and they’re required by federal law.</p><p>Deaths from trench collapses in the U.S. have fluctuated over the last decade, with the number peaking at 40 in 2022, up 60% from the previous year, according to data from the Bureau of Labor Statistics. These deaths come despite OSHA’s measures to help prevent collapses.</p><p>“I think OSHA needs to do more than what they’re doing,” said Aubrey Fryday.</p><p>Fryday’s son, Nathan, died in Lockhart, Texas, when a 12-foot-deep trench he was working in collapsed in August 2016. He was 22. His employer, <a href="https://www.osha.gov/ords/imis/establishment.inspection_detail?id=1174221.015">Mercer Construction Co.</a>, a Texas-based business, failed to use a protective system, which OSHA found was a violation of its regulations, records show. The company was fined $126,051.</p><p>Fryday said that OSHA needs to be more aggressive when it comes to protecting workers like her son and the hundreds of others who have died in trench cave-ins over the last decade.</p><p>“They’re just all getting too lazy and sitting behind their desks and doing nothing,” she said.</p><p>OSHA officials insist that the agency is proactive when it comes to going after companies where trenches have collapsed.</p><p>“We’re doing everything we can … to protect workers every day for America,” Scott Ketcham, the agency’s director of construction, said in an interview with NPR. “When we find them, we cite them, and when we cite them, we hold them accountable.”</p><p>Ketcham acknowledged, though, that more needs to be done.</p><p>OSHA said it conducts between 1,500 and 2,000 trenching inspections annually, about 6% of all workplace inspections done yearly, Ketcham said. That includes those that occur after a worker has died. The agency has 840 compliance officers to handle all worksites in the country — more than 7 million of them.</p><p>“It would take around 186 years for OSHA to inspect every workplace in the country just once,” Barab said. “That means that unless a worker is killed, there’s a major incident or a worker files a complaint, an employer is unlikely to ever see an OSHA inspector.”</p><p>Since the passage in 2021 of President Biden’s Bipartisan Infrastructure Deal, which calls for rebuilding roads and bridges and upgrading airports and ports, hundreds of thousands more construction workers are expected to be put in the field throughout the country. Many of them will likely work in trenches.</p><p>Trench collapses often occur when employers cut corners, such as failing to install shoring equipment like hydraulic cylinders that hold back the dirt walls of a trench or boxes and timbers that prevent a potential collapse from harming workers. That’s what happened that led to the deaths of Mattocks and Higgins in Boston, according to agency and court records, and interviews. Otto, who owned Atlantic Drain Service Company Inc., did not provide “basic safeguards against collapse” and failed to provide safety training, OSHA records showed.</p><p>“The deaths of these two men could have and should have been prevented,'” Galen Blanton, OSHA’s New England regional administrator, said in a press release months after the two deaths. “Their employer, which previously had been cited by OSHA for the same hazardous conditions, knew what safeguards were needed to protect its employees but chose to ignore that responsibility.”</p><h3>Multiple violations</h3><p>Twice before the 2016 cave-in involving Mattocks and Higgins — in 2007 and 2012 — <a href="https://www.osha.gov/ords/imis/establishment.inspection_detail?id=1186266.015">OSHA</a> had fined, warned and sanctioned the business for unprotected trenches, agency records show.</p><p>The 2007 incident occurred in front of the Four Seasons Hotel near downtown Boston. Michael Grover, an OSHA compliance officer who inspected the scene after the agency received a complaint, heard and saw dirt sloughing off the sides of the trench,<strong>&nbsp;</strong>according to his court testimony. Otto told the compliance officer<strong>&nbsp;</strong>that he would protect the trench, but did not, Grover testified. OSHA issued Otto a willful violation, which means the company either intentionally ignored safety requirements or was indifferent to them.<strong>&nbsp;</strong>It required him to train his workers and document it.</p><p>Willful violations are the most severe penalty OSHA hands down, and they carry higher fines than serious violations and the possibility for criminal penalties or prosecution.</p><p>In the 2012 violation, the Boston Fire Department came upon an Atlantic Drain Service Company Inc. worksite and found a worker in a 10-foot-deep unprotected trench, according to court records. OSHA cited Otto’s company again.</p><p>Four years later when the trench collapsed at the South End townhouse worksite, killing Mattocks and Higgins, OSHA found that Otto didn’t provide the men with hard hats, eye protection or a ladder so they could get out of the trench.</p><p>“Chuck would always say ‘work ain’t never killed nobody,’” his sister,<strong>&nbsp;</strong>Melinda Mattocks-Ushry, said in an interview with NPR. “But I tell this story to say that work killed my brother.”</p><p>Otto’s violations were so egregious that authorities charged him with two counts of manslaughter for the deaths of Mattocks and Higgins. A Suffolk County Superior Court judge found Otto guilty in 2019, sentenced him to two years in the Suffolk County House of Corrections and<strong>&nbsp;</strong>three years’ probation, and<strong>&nbsp;</strong>banned him from doing trench work deeper than 4 feet<strong>&nbsp;</strong>during that time<strong>,</strong> according to court records. Otto dissolved <a href="https://corp.sec.state.ma.us/CorpWeb/CorpSearch/CorpSummary.aspx?sysvalue=ZYxPWJuykaVvrzkJH_qoTU1kLVXC9xGXTwSX0RAGFdA-">Atlantic Drain Service Company Inc.</a> in April 2021, according to Massachusetts corporation records. It’s unclear why OSHA did not move to shut down the company after the 2016 deaths.</p><p>“We do hold recalcitrant employers accountable and we do follow up on them within the powers that the OSHA Act allows us to,” Ketcham said.</p><p>Since his release from jail in October 2023, Otto started another company, Drain Away Inc., a drain cleaning business, state records show. Otto, who is listed as the company president, treasurer, secretary and director, did not return two calls from NPR seeking comment.</p><p>Otto’s previous company — Atlantic Drain Service Company Inc. — is just one of at least 10 that employed workers who died after having previously been sanctioned by OSHA for failing to protect employees doing excavation-type work, agency records and interviews show. One employer was cited for violations a month after agency officials sanctioned him for the death of a worker.</p><p>On April 6, 2019, Dalbert Burton, 43, was installing a 4-inch PVC sewer line at a new housing development in Sugarcreek Township, a Dayton, Ohio, suburb. He was in an unprotected 11-foot-deep trench and noticed that the dirt was loose, so he called his boss, Richard Westendorf, who owned Payne Enterprises Inc., a Dayton-based plumbing contractor. Westendorf said he was in Florida at the time.</p><p>“He called me and told me that it was caving in,” Westendorf, 75, said in a recent interview with NPR.</p><p>Westendorf said he instructed Burton to “redirect the sewer around the loose soil,” but Burton ignored his advice, he said. The trench collapsed, suffocating the husband, father and grandfather who had worked for the company for five years.</p><p>“I regret that he didn’t listen to me,” Westendorf said. “It cost him his life.”</p><p>“You don’t mess around with dirt. You’ve got to respect it.”</p><p>OSHA initially fined the company $145,860 in connection with Burton’s death, but later reduced it to $85,000. Westendorf told NPR that he paid the fine by the due date because he “didn’t want to risk going to jail.”</p><p>Burton’s widow received $750,000 from workers’ compensation, said Westendorf, who added that he paid for the man’s funeral.</p><p>“It seemed like the right thing to do,” he said.</p><p>What Burton’s family may not have known at the time was that it wasn’t the first time Westendorf and his company had run afoul of OSHA. In 2017 and 2018, the agency cited him for various trench safety violations, federal agency records showed. It again penalized him in July 2019, three months after Burton’s death. Westendorf said the other sanctions were for his failure to have trench boxes, ladders and other equipment to keep workers safe.</p><p>“Sometimes I did [have them]; sometimes I didn’t,” he admitted.</p><p>Westendorf said he shuttered his plumbing contracting business a year ago after 30 years, though the company is still listed as active with the state of Ohio.</p><p>“All the builders in the Dayton area, they thought I was a liability,” he said. “It is what it is.”</p><p>Westendorf continues to operate an ice business.</p><p>In December 2016, Donald “DJ” Meyer, 33, was killed when he climbed into a 16-foot-deep unprotected trench in suburban Kansas City, Mo., to retrieve a cellphone that he had dropped, according to Belton, Mo., Fire Marshal Chris Beal. He was digging to find a sewer stub for a home, according to OSHA records.</p><p>“He jumped down in the hole to get it and left the backhoe running, and the vibrations shook the earth,” Beal said in an interview with NPR.</p><p>Meyer tried to run to a nearby ladder, but there was too much dirt, which crushed and suffocated him, Beal said. Rescue crews spent nine hours retrieving Meyer’s body.</p><p>“It’s a horrible, tragic story,” Beal said. “It was unbelievable.”</p><p>Meyer was a plumber and widower raising his 8-year-old son.</p><p>OSHA initially cited the company, Arrow Plumbing LLC of Blue Springs, Mo., for five serious and two willful violations related to Meyer’s death, and proposed fines totaling $294,059, agency inspection reports show. OSHA later slashed the penalties by about 72%, but didn’t explain why.</p><p>A month after Meyer’s death, OSHA found that the company was in violation again, this time for not having a “competent person” on-site to inspect the excavation area before work started at a job site in Kansas City. The agency found that an employee working in a trench at least 8 feet deep was “exposed to a collapse of the excavation walls,” and issued a $126,749 penalty,<strong>&nbsp;</strong>according to OSHA records. The company contested it and the agency reduced it to $42,250 in September 2018. In 2020, OSHA inspectors responding to a complaint found another Arrow employee working in an unprotected trench without head protection. The company agreed to pay $299,590 in fines.</p><p>Ketcham acknowledged that OSHA does reduce fines, particularly for a smaller company that is unable to pay, if they can show they’re correcting the problem.</p><p>Bryan Fryday, who lost his son, said the OSHA fines imposed on companies that skirt federal regulations resulting in death are woefully insufficient because they don’t inflict adequate financial pain on the violators.</p><p>“Companies should be responsible and fearful,” he said. “Like, ‘OK, this is what we have to do to make it safe.’”</p><p>In some instances, even after OSHA reduces fines and sends them to the Treasury Department for collection, companies still ignore the penalties. OSHA fined Otto’s company in Boston more than $1.4 million after the 2016 deaths of Mattocks and Higgins.</p><p>“We held him accountable,” Ketcham said. “We cited him. We collected penalties.”</p><p>When told that Otto, in fact, defaulted on the debt and now owes more than $1.7 million — according to OSHA’s own records — Ketcham declined to discuss the case in detail.</p><p>“We attempted through debt collection to get penalties from that individual,” he said. “I’m not going to comment on Mr. Otto.”</p><p>Ketcham acknowledged that OSHA needs to do more to hold accountable companies that repeatedly violate OSHA trenching regulations.</p><p>“That is a top priority right now,” he said.</p><h3>Criminal charges are rare</h3><p>OSHA has the power to refer serious violators to prosecutors, but when asked how many times it has done so on open or closed investigations since 2013, agency officials declined to provide NPR with statistics.</p><p>“OSHA is limited in the information it can share regarding ongoing criminal investigations,” the agency said through a spokesperson.</p><p>NPR compiled a database of trench collapse deaths between 2013 and 2023 and found in instances where workers perished in trench collapses, about 5% of employers were criminally charged. And they often got off with little punishment.</p><p>Phillip Numrich, owner of Alki Construction LLC, a plumbing and sewer repair business in the Seattle area, was charged with second-degree manslaughter in 2018 in connection with the death two years earlier of employee and longtime friend Harold Felton in Washington state. Felton was working in a 6-to-8-foot-deep trench cutting a new pipe that had been put into place at a West Seattle home when the cave-in occurred, burying him under more than 6 feet of mud, prosecutors wrote in a legal brief filed as part of Numrich’s sentencing. Felton, 36, died of compression asphyxia, which means that something forceful pressed against his chest or abdomen area. The trench lacked the required shoring<strong>,&nbsp;</strong>prosecutors wrote.</p><p>During a hearing with state labor investigators, Numrich acknowledged that he was required to have the proper shoring but did not, according to the legal brief. The state cited and fined him $51,500, but cut it in half. Then, prosecutors stepped in. It was the first time in Washington state that an individual employer had been charged with manslaughter in connection with the death of an employee, said Patrick Hinds, a deputy prosecutor with the King County Prosecuting Attorney’s Office.</p><p>“This particular case was an important marker in the criminal justice response to worker safety,” he said.</p><p>Prosecutors reduced Numrich’s charges to attempted reckless endangerment. He pleaded guilty and received 45 days in jail and a $25,000 fine, court records showed. Neither Numrich nor his attorney in the matter, Cooper Offenbecher, returned several calls seeking comment.</p><p>Rosario Martinez-Lopez<strong>&nbsp;</strong>thought that he would install drywall or do carpentry work when he arrived at the residential construction site that June morning in 2018 in Granby, Colo. That’s what Bryan D. Johnson, owner of ContractOne Inc., hired him to do. Instead, Martinez-Lopez ended up with a shovel in a 7-to-8-foot trench, installing a main water line, according to the arrest affidavit. Johnson had earlier used a mini-excavator to remove dirt.</p><p>Suddenly, the trench collapsed, crushing the 50-year-old Martinez-Lopez. His son, Moises Martinez, was also at the job site and helped rescuers retrieve his father’s body. The victim was pronounced dead at a local hospital.</p><p>“Bryan Johnson conducted all aspects of his construction site without the slightest attention to the safety of employees on the scene,” according to a Grand County, Colo., arrest warrant affidavit obtained by NPR. “He did not … slope the trench walls, did not have a trench box … and did not have appropriate access to ingress/egress.”</p><p>A subsequent OSHA investigation found that Johnson never trained Martinez-Lopez or other employees about the dangers of trench work. Authorities determined that there was probable cause to arrest him and charge him with criminally negligent homicide.</p><p>Johnson pleaded guilty to two counts of reckless endangerment and one count of third-degree assault and was sentenced to eight months in jail, court records show.</p><p>David Michaels, a former OSHA assistant secretary, said the federal agency should turn to criminal prosecutions more for trench deaths, because the fines they levy are often too small to be adequate deterrents, he said.</p><p>“When a worker is hurt or killed in a trenching collapse, OSHA should very much consider a referral of that event to a local district attorney who could take on the criminal case,” said Michaels, a professor at George Washington University’s Milken Institute School of Public Health. “If employers see that an employer is sent to jail because a worker is sent to a trench, that will have a much bigger impact on them than fear of an OSHA fine.”</p><p>Michaels said the responsibility for raising fines and possible criminal penalties is up to Congress, but that there is more OSHA could be doing on its own.</p><p>“I think the default for trenching regulation violations should be a willful violation with a much higher fine, unless it’s really clear that the employer really had no idea that they could be endangering their workers,” he said.</p><p>He said that a willful violation determination is up to the OSHA area offices that investigate trench deaths. An NPR analysis found that while most violations after a trench fatality were labeled “serious,” fewer than 10% were considered “willful.”</p><h3>Texas deaths</h3><p>Trench work can be so precarious that OSHA also requires companies to have an experienced supervisor on-site with authority to stop work in a trench if they consider it unsafe, said Vazquez, the health and safety organizer in Austin, Texas, who has trained workers in OSHA safety courses.</p><p>It was that kind of danger that concerned Jack Martin. Martin was installing a 6-inch sewer line behind a shopping center in November 2019 in Houston, a job he had done dozens — if not hundreds — of times during his more than two decades as a plumber. Suddenly, the interior wall of the trench collapsed, trapping the 41-year-old father, who left behind an 18<strong>-</strong>year-old daughter.</p><p>Martin’s dad, Larry, said his son had expressed concern about his safety and had repeatedly asked his employer, Best Plumbing LLC, to get trench boxes for the workers.</p><p>“He told me, he says, ‘Dad, you know, I’ve already asked them a couple of times and they told me no, they’re too expensive,’” Larry Martin recalled his son telling him.</p><p>After Martin’s death, OSHA cited Best Plumbing LLC for not having a protective system, such as a trench box, and ladders or other means for workers to exit the trench. The federal agency fined the company $18,892, but later reduced it to $11,335, records show.</p><p>Best Plumbing owner Vincent Horvath declined to comment on the incident and why he lacked the required protective system.</p><p>Jimmy Lee Alvarado, 20, dreamed of following his father into the construction industry, just as Jack Martin had followed his father into plumbing.</p><p>“He was inspired by his dad, and what he did,” Jimmy’s mother, Maria Bocanegra, said. “And he was like, ‘I wanna be like Dad one day and do everything that he does and have what he has.’”</p><p>So, it was no surprise that the two ended up working at the same site in Jarrell, Texas, in June 2022. Alvarado’s father, Juan Bocanegra, worked for WBW Construction LLC. Alvarado and another man, Jose Vargas Ramirez, 39, were temps provided by a staffing agency based in Moline, Ill., records showed.</p><p>Alvarado, a father of two, and Ramirez were connecting sewer lines in a 23-foot-deep trench when part of it collapsed, crushing them beneath rocks and mud, according to OSHA records.</p><p>An OSHA investigation alleges that WBW Construction failed to provide trench protection and exit ladders at regular intervals, two of the same failures the federal agency identified in Jack Martin’s death in Houston in 2019. Alvarado and Ramirez allegedly were more than 130 feet away — instead of 25 feet required by OSHA for trenches 4 feet or deeper — from the nearest point in the trench where they could exit.<strong>&nbsp;</strong>Also, OSHA claims that the trench collapse was caused when the foreman began to cut across the trench to build a smaller trench, referred to as a “side cut.” The federal agency’s investigation alleged that there were three appropriate trench boxes on-site that could have protected the two men, but were not used.</p><p>Alvarado’s dad was the foreman.</p><p>“[Juan] had him go down there because it was his job and he had to get it done,” Maria Bocanegra said.</p><p>Juan Bocanegra declined to comment.</p><p>Because OSHA alleges that two of the violations were considered “willful,” if the agency proves that, it could refer the company for potential prosecution once the case is closed.</p><p>The U.S. Attorney’s Office for the Western District of Texas said that OSHA has not referred the case to them. OSHA has fined WBW Construction LLC $250,272. The company is contesting the alleged violations and the penalties.</p><p>“WBW Construction LLC willfully sent these workers into an unprotected trench and ignored federal safety requirements,” OSHA Area Director Casey Perkins said in a December 2022 news release. “Now, two workers’ families, friends and co-workers are left to grieve their tragic, and avoidable, deaths.”</p><p>Maria Bocanegra said she first learned of the collapse from her 18-year-old son, Kevin, who was also working at the site that day.</p><p>“He was the one that called me and told me that — he was crying and I couldn’t understand him — but he told me that Jimmy had gotten trapped under and that they couldn’t get him out,” she said.</p><p>WBW’s management had her husband, the site foreman, sign a statement in English, though he could not read or speak it well, Maria Bocanegra said. She read it weeks later and questioned who penned it. NPR and Texas Public Radio have not been able to independently verify the statement.</p><p>“I … realized that it wasn’t him that actually wrote out or said what was said,” she said. “It was more them putting to him what to say.”</p><p>Bocanegra said she found multiple errors, including her son’s last name and their address, and knew that her husband wouldn’t have made such mistakes.</p><p>Travis Parks, general counsel for the WBW Development Group and its affiliates, including WBW Construction, declined to comment, citing ongoing litigation and the company contesting the penalty imposed by OSHA.</p><h3>Few protections for public employees</h3><p>Three employees of the city of Eutaw, Ala., were working on a broken sewer line in the Branch Heights public housing project shortly before 5 p.m. in April 2023, when part of the trench wall collapsed, trapping 46-year-old worker Tony Rice under mud, asphalt and concrete.</p><p>“All I could hear was Tony saying, ‘I can’t breathe, I can’t breathe, I can’t breathe,”’ Garreon Holsey, 22, one of the workers who escaped, told police at the time.</p><p>No one in the city of 3,000 or rural Greene County was trained in trench rescues, and they didn’t have the necessary equipment like a vacuum truck to suck the water and mud out of the hole, said Christopher Jones, the county’s EMS director.</p><p>“It was awful,” Jones told NPR in a recent interview. “It happened so fast. There was nothing we could do because it was a dangerous situation.”</p><p>The closest rescue crews were in Tuscaloosa, about 35 minutes away. When they arrived, they worked frantically to save Rice. After nearly nine hours, rescuers retrieved the lifeless man.</p><p>“I knew it was going to be a body recovery at that point,” Jones said.</p><p>Unlike the other trench collapse deaths investigated by OSHA, no state-level or federal OSHA investigators looked into Rice’s death because he worked in one of nearly two dozen states where local and state government employees — about 8 million — are left out of the workplace protections provided to private and federal employees, according to the Bureau of Labor Statistics.</p><p>“There will be no investigation, there will be no penalties, there will be no lessons learned, no follow-up,” said Barab, the former OSHA deputy assistant secretary who served under Obama. “It just kind of gets dropped.”</p><p>When Congress passed the Occupational Safety and Health Act that created the federal regulatory<strong>&nbsp;</strong>agency in 1970, it specifically excluded public employees from the newly established protections. The legislation, though, encouraged states to develop their own job and health safety programs, and those states were required to cover their public employees. The act also allowed states to set up “public employee only” state plans where the state would cover public employees and federal OSHA would continue covering the private sector, Barab said. Some states have set up such plans, including Massachusetts, whose public employee health and safety plan covers more than 430,000 public employees. Twenty-three states, including Alabama, Missouri and Texas — and the District of Columbia — have not established protections for their own employees.</p><p>NPR found at least four instances in the past decade of trench collapses killing public employees in states without OSHA protections. The lack of workplace protections for local and state employees in those states hinders accountability for — and prevention of — worksite danger.</p><p>“They can’t file an OSHA complaint no matter how unsafe conditions are," Barab said. "There’s no one to complain to."</p><p>OSHA requires daily soil testing when trench work is taking place. Because Alabama is one of the states where public employees are not covered by the federal agency’s workplace protections, no testing was required.</p><p>“Testing the soil isn’t hard to do, but it takes a little more time … and a lot of trenching is done in an emergency situation where a pipe breaks, so there's not that kind of time,” said Ruth Ruttenberg, a consultant and former OSHA senior economist who authored a 2019 study on trench fatalities. “But if you know that you have a potentially fatal work situation, it's really necessary … to take that into account and do the safe thing for the workers.”</p><p>Wendell, Idaho, city employee Jerrad Durfee, 43, had expressed concern to his family about working in trenches. He wasn't trained for that kind of work, his mother said. He grew up in the town of 3,000 residents about 25 miles from Twin Falls and also worked as a volunteer firefighter. Idaho is among the states where city and county workers have no OSHA workplace protections.</p><p>“He didn’t really like being down there, but he was told to do it, so he did it, because he liked his job,” Durfee’s mother, Ynes Durfee, said in an interview with 1A. "But he was scared."</p><p>Durfee was inside a 6-foot-deep trench in an alley with a jackhammer shortly before noon one September day in 2013. He was breaking up rocks when the walls caved in, burying him in nearly 2 feet of dirt, according to the police report. Levi Diehl, another worker, was nearby and heard the jackhammer stop. He ran to the area where Durfee was and saw the collapsed trench. He scrambled to remove the dirt from Durfee’s head and shoulders. He told authorities that Durfee gasped for air but there was no pulse. Durfee was pronounced dead at the scene.</p><p>Durfee’s longtime best friend, Brad Murphy, said he is angry that no one was punished for the fatal cave-in.</p><p>“Wendell’s just going on about its daily life and there’s still no consequences,” Murphy said. “It’s about them being accountable.”</p><p><em>This story is a collaboration from NPR's Station Investigations Team, which supports local investigative journalism; </em><a href="https://www.tpr.org/">Texas Public Radio</a><em>; and </em><a href="https://wamu.org/show/1a/">1A</a><em>. Kahwit Tela, NPR’s Ida B. Wells Society intern, also contributed to this story.&nbsp;&nbsp;</em></p>
        <hr>
        <h3>Transcript</h3>
        <p>A MARTÍNEZ, HOST: </p><p> All right, we turn now to a dangerous problem for construction workers, specifically those who work in trenches - these deep ditches you see along the highway at large construction sites and new home builds. Now, without the proper systems in place, those trenches can collapse in an instant, burying the workers alive in a dense slurry of mud and water. Members of NPR's investigations team have found that 250 workers have died from such trench cave-ins over the last decade. Cheryl W. Thompson, an investigative correspondent and senior editor, joins us now. So, Cheryl, tell us about this investigation. What's it about?</p><p>CHERYL W THOMPSON, BYLINE: So this investigation, we worked together with Texas Public Radio and the program 1A and reviewed hundreds of pages of federal government inspection reports, court records, state safety reports and other documents to determine how many people died in trench collapses, what happened to cause the cave-ins and whether those deaths could have been avoided.</p><p>MARTÍNEZ: All right. What did you discover?</p><p>THOMPSON: Well, A, we found that trench collapse deaths are indeed preventable and often occurred when employers violated federal regulations by not having the proper equipment in place, like those metal boxes to keep dirt walls from caving in and suffocating workers. Our investigation also found that companies fined by the Occupational Safety and Health Administration - we know it, of course, as OSHA - sometimes ignored the penalties and faced no consequences. For example, one business in the Boston area still owes more than $1.4 million from the deaths of two workers eight years ago. And at least 10 companies that employed workers who were killed had been sanctioned before for not protecting employees doing trench work. One business was cited five times in four years, another four times in as many years.</p><p>MARTÍNEZ: All right. So those are civil penalties, right? I mean, what about criminal charges?</p><p>THOMPSON: Right. Well, criminal charges are pretty rare. We discovered 11 cases out of more than 200 where authorities criminally charged an employer. And even when someone was charged in connection with a worker's death, those charges were often reduced, meaning that employers usually got off with a fine, probation or a few months in jail.</p><p>MARTÍNEZ: Now, one of the reporters on this project went to Boston to talk with a witness to one of these horrific incidents in which two men died. Cheryl, tell us about that.</p><p>THOMPSON: Yes. Ken Bruno (ph) was the witness, and he had not been back to the site since 2016. He's a carpenter who was working inside a townhouse on Boston's South End while the two men were working outside in a trench. They were installing a drain, and Bruno stepped outside for a quick smoke and was standing on the sidewalk next to the trench when it collapsed.</p><p>KEN BRUNO: I'm looking down, and the guys are down there working. And next thing you know, I seen part of the trench engulf him from the waist down real quick, like, whoosh.</p><p>THOMPSON: Bruno recalls that a section of pipe attached to a fire hydrant burst, flooding the trench and the street with so much water and mud that it just smothered the two workers.</p><p>BRUNO: I knew that they were done.</p><p>THOMPSON: One of those buried alive was a father of six. There's a good chance that both of those workers would be alive today had their employer installed a trench box. It was the third time that that company had been cited by OSHA for unprotected trenches.</p><p>MARTÍNEZ: So about OSHA - I mean, their job is to make sure workplaces are safe places. So can they come in and close down a business if they're repeatedly violating regulations?</p><p>THOMPSON: Well, no. Only a court has that authority. What OSHA can do is post imminent danger notices at a job site if it believes the violations pose a threat of serious physical harm or death to workers. But it seldom does that. It's happened only 18 times since 2014.</p><p>MARTÍNEZ: OK. Now, what about employers? What should they be doing? I mean, the trench boxes, they can be expensive and can take time to set up and install, and, of course, time is money.</p><p>THOMPSON: Right. Well, Jack Martin was an experienced plumber, putting in sewer lines behind a shopping center in Houston in 2019. He had repeatedly asked his employer, Best Plumbing LLC, to get trench boxes for him and his co-workers. We spoke with his father, Larry Martin, whom Jack called just days before he was killed in a trench collapse.</p><p>LARRY MARTIN: Two days prior before it happened, he told me. He says, Dad - he said, you know, I've already asked them a couple of times, and they told me no, they're too expensive.</p><p>THOMPSON: I should mention, A, we reached out to the company's owner, who declined to comment on the incident. We also talked to a woman in Texas named Aubrey Fryday, who lost her son in a trench collapse in 2016. She wondered why OSHA didn't do something about the company where her son Nathan worked. She believed officials there were operating an unsafe workplace.</p><p>AUBREY FRYDAY: OSHA needs to do more than what they're doing. It shouldn't take a death for them to act. They're just all getting too lazy and sitting behind their desks and doing nothing.</p><p>THOMPSON: OSHA doesn't necessarily see it that way. We sat down here in Washington with Scott Ketcham, the agency's director of construction. Here's what he said.</p><p>SCOTT KETCHAM: We're doing everything we can to protect workers every day for America. When we find them, we cite them, and when we cite them, we hold them accountable.</p><p>THOMPSON: Ketcham acknowledged that more needs to be done, particularly when it comes to holding companies accountable.</p><p>KETCHAM: And that is a top priority right now.</p><p>MARTÍNEZ: You know, Cheryl, it's pretty awful to think that this is happening, especially when it's a type of death that seems like it could be avoidable. I mean, it's got to be really, really difficult for the families here.</p><p>THOMPSON: Oh, it definitely is. Melinda Mattocks-Ushry's brother, Kelvin Mattocks, was one of the two men killed in the Boston trench collapse that I mentioned to you earlier. My colleague, Robert Benincasa, spoke with her at Kelvin's gravesite in rural North Carolina.</p><p>MELINDA MATTOCKS-USHRY: This is his resting place. This is where he was raised, in the church here. His wife let us bring him home. She knew this is where he would want to be. It hurts so bad.</p><p>THOMPSON: She thinks about how things could have turned out differently, had her brother's employer, Kevin Otto, protected that trench so that the walls wouldn't have caved in on him and the other worker.</p><p>MATTOCKS-USHRY: There should have been protection for these guys. There should have been a way out of that hole for these guys. I would love for someone to do something about people that's going to work to do a honest day work - be protected while at work.</p><p>THOMPSON: And, A, we heard from family members all across the country who agree that more needs to be done.</p><p>MARTÍNEZ: Cheryl W. Thompson, investigative correspondent and senior editor. Thank you very much for bringing this story.</p><p>THOMPSON: Thank you, A.</p><p>(SOUNDBITE OF MUSIC)</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[rr – record and replay debugger for C/C++ (276 pts)]]></title>
            <link>https://rr-project.org/</link>
            <guid>41023547</guid>
            <pubDate>Sun, 21 Jul 2024 08:54:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rr-project.org/">https://rr-project.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41023547">Hacker News</a></p>
<div id="readability-page-1" class="page">
  <a href="https://github.com/rr-debugger/rr"><img src="https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"></a>

  <div id="old">
    <marquee scrollamount="40">
      <blink>
        
      </blink>
    </marquee>
    <section>
      <p><i>Last updated Fri Oct 18 17:19</i></p>
      <p><a href="http://www.microsoft.com/ie"><img src="https://rr-project.org/ie.gif"></a></p>
    </section>
  </div>

  <div id="toprow">
    <h2>rr</h2>

    
  </div>

  <h2>what rr does</h2>
  <h3>rr aspires to be your primary C/C++ debugging tool for Linux, replacing —
    well, enhancing — gdb.  You record a failure once, then
    debug the recording, deterministically, as many times as you want.
    The same execution is replayed every time.</h3>
  <h3>rr also provides efficient reverse execution
    under gdb. Set breakpoints and data watchpoints and quickly
    reverse-execute to where they were hit.</h3>
  <h3>rr works on real applications and is used
  <a href="https://github.com/rr-debugger/rr/wiki/Testimonials">by many</a>
  <a href="https://twitter.com/chandlerc1024/status/879962014860193792">developers</a>
  to fix real bugs. It makes debugging hard bugs much easier, but also speeds up
  debugging of easy bugs.</h3>
  <h3>rr features:
  <ul>
  <li>Low overhead compared to other similar tools, especially on mostly-single-threaded workloads
  </li><li>Supports recording and replay of all kinds of applications: Firefox, Chrome, QEMU, LibreOffice,
  Go programs, ...
  </li><li>Record, replay and debug multiple-process workloads, including entire containers
  </li><li>Works with gdb scripting and <a href="https://github.com/rr-debugger/rr/wiki/Using-rr-in-an-IDE">IDE integration</a>
  </li><li><a href="http://robert.ocallahan.org/2017/06/new-rr-pack-command.html">Durable</a>,
  <a href="http://robert.ocallahan.org/2017/07/selecting-compression-algorithm-for-rr.html">compact</a> traces that
  can be <a href="http://robert.ocallahan.org/2017/09/rr-trace-portability.html">ported</a> between machines
  </li><li><a href="http://robert.ocallahan.org/2016/02/introducing-rr-chaos-mode.html"><em>Chaos mode</em></a> to
  make intermittent bugs more reproducible
  </li></ul>

  </h3><h2>the rr debugging experience</h2>
  <section>
    <p>
      Start by using rr to record your application:
      </p><pre>$ rr record /your/application --args
...
FAIL: oh no!</pre>
    <p>
      The entire execution, including the failure, was saved to disk.
      That recording can now be debugged.
      </p><pre>$ rr replay
GNU gdb (GDB) ...
...
0x4cee2050 in _start () from /lib/ld-linux.so.2
(gdb)</pre>
    <p>
      Remember, you're debugging the <em>recorded trace</em>
      deterministically; <em>not</em> a live, nondeterministic
      execution.  The replayed execution's address spaces, register
      contents, syscall data etc are exactly the same in every run.
    </p><p>
      Most of the common gdb commands can be used.
      </p><pre>(gdb) break mozilla::dom::HTMLMediaElement::HTMLMediaElement
...
(gdb) continue
Continuing.
...
Breakpoint 1, mozilla::dom::HTMLMediaElement::HTMLMediaElement (this=0x61362f70, aNodeInfo=...)
...</pre>
    <p>
      If you need to restart the debugging session, for example
      because you missed breaking on some critical execution point, no
      problem.  Just use gdb's <code>run</code> command to restart
      replay.
      </p><pre>(gdb) run
The program being debugged has been started already.
Start it from the beginning? (y or n) y
...
Breakpoint 1, mozilla::dom::HTMLMediaElement::HTMLMediaElement (this=0x61362f70, aNodeInfo=...)
...
(gdb) </pre>
    <p>
      The <code>run</code> command started another replay run of your
      recording from the beginning.  But after the session restarted,
      the <em>same execution</em> was replayed again.  And all your
      debugging state was preserved across the restart.
    </p><p>
      Note that the <code>this</code> pointer of the
      dynamically-allocated object was the same in both replay
      sessions.  Memory allocations are exactly the same in each
      replay, meaning you can hard-code addresses you want to watch.
    </p><p>
      Even more powerful is reverse execution. Suppose we're debugging Firefox layout:
</p><pre>Breakpoint 1, nsCanvasFrame::BuildDisplayList (this=0x2aaadd7dbeb0, aBuilder=0x7fffffffaaa0, aDirtyRect=..., aLists=...)
    at /home/roc/mozilla-inbound/layout/generic/nsCanvasFrame.cpp:460
460   if (GetPrevInFlow()) {
(gdp) p mRect.width
12000</pre>
      We happen to know that that value is wrong. We want to find out where it was set.
      rr makes that quick and easy.
<pre>(gdb) watch -l mRect.width
(gdb) reverse-cont
Continuing.
Hardware watchpoint 2: -location mRect.width
Old value = 12000
New value = 11220
0x00002aaab100c0fd in nsIFrame::SetRect (this=0x2aaadd7dbeb0, aRect=...)
    at /home/roc/mozilla-inbound/layout/base/../generic/nsIFrame.h:718
718       mRect = aRect;</pre>
     This combination of hardware data watchpoints with reverse execution is extremely powerful!
  </section>

    <h2>video</h2>
  <section id="video-container">
    <p>
      This video shows a quick demo of rr recording and replaying Firefox.
      <iframe width="560" height="315" src="https://www.youtube.com/embed/hYsLBcTX00I" frameborder="0" allowfullscreen=""></iframe>
    </p><p>
      This video demonstrates rr's basic capabilities in a bit more
      detail.
      <iframe width="560" height="315" src="https://www.youtube.com/embed/61kD3x4Pu8I" frameborder="0" allowfullscreen=""></iframe>
    </p><p>
      This video is a high-level technical talk by Robert O'Callahan about rr.
      <iframe width="560" height="315" src="https://www.youtube.com/embed/H4iNuufAe_8" frameborder="0" allowfullscreen=""></iframe>
  </p></section>

  <h2>getting started</h2>
  <section>
    <div>
      <h3>Build from source</h3>
      <p><a href="https://github.com/rr-debugger/rr/wiki/Building-And-Installing">Follow
            these instructions.</a> Recommended if the packages don't work for you --- kernel changes and OS updates sometimes require rr changes.
      
    </p></div>

    <div>
      <h3>Or in Fedora:</h3>
      <pre>cd /tmp
wget https://github.com/rr-debugger/rr/releases/download/<span>5.8.0</span>/rr-<span>5.8.0</span>-Linux-$(uname -m).rpm
sudo dnf install rr-<span>5.8.0</span>-Linux-$(uname -m).rpm</pre>
<!--      <p>You can also install rr directly from the package manager.</p>
      <pre>sudo dnf install rr</pre> -->
    </div>

    <div>
      <h3>Or in Ubuntu:</h3>
      <pre>cd /tmp
wget https://github.com/rr-debugger/rr/releases/download/<span>5.8.0</span>/rr-<span>5.8.0</span>-Linux-$(uname -m).deb
sudo dpkg -i rr-<span>5.8.0</span>-Linux-$(uname -m).deb</pre>
    </div>

    
  </section>

  <h2>background and motivation</h2>
  <section>
    <p>
      rr's original motivation was to make debugging of intermittent failures
      easier. These failures are hard to debug because any given program run
      may not show the failure. We wanted to create a tool that would record
      program executions with low overhead, so you can record test executions
      until you see a failure, and then replay the failing execution
      repeatedly under a debugger until it has been completely understood.
    </p><p>
      We also hoped that deterministic replay would make debugging of any kind of bug
      easier. With normal debuggers, information you learn during the debugging
      session (e.g. the addresses of objects of interest, and the ordering of important
      events) often becomes obsolete when you have to rerun the testcase.
      With deterministic replay, that never needs to happen: your knowledge of
      what happens during the failing run increases monotonically.
    </p><p>
      Furthermore, since debugging is the process of tracing effects to
      their causes, it's much easier if your debugger can execute backwards in time.
      It's well-known that
      given a record/replay system which provides restartable checkpoints during replay,
      you can simulate reverse execution to a particular point in time by restoring
      the previous checkpoint and executing forwards to the desired point. So we hoped
      that if we built a low-overhead record-and-replay system that works well on the
      applications we care about (Firefox), we could build a really usable backend for
      gdb's reverse execution commands.
    </p><p>
      <strong>These goals have all been met.</strong> rr is not only a working
      tool, but it's being used regularly by developers on many large and small projects.
    </p><p>
      rr records a group of Linux user-space processes and captures all
      inputs to those processes from the kernel, plus any nondeterministic CPU
      effects performed by those processes (of which there are very few).
      rr replay guarantees that execution preserves instruction-level control flow
      and memory and register contents.
      The memory layout is always the same, the addresses of objects
      don't change, register values are identical, syscalls return the
      same data, etc.
    </p><p>
      Tools like fuzzers and randomized fault injectors become even
      more powerful when used with rr.  Those tools are very good at
      triggering <em>some</em> intermittent failure, but it's often
      hard to reproduce <em>that same</em> failure again to debug it.
      With rr, the randomized execution can simply be recorded.  If
      the execution failed, then the saved recording can be used to
      deterministically debug the problem.
    </p><p>
      rr lowers the cost of fixing bugs.  rr helps produce
      higher-quality software for the same cost. rr also makes
      debugging more fun.
  </p></section>
  <h2>rr in context</h2>
  <section>
    <p>
      Record-and-replay debugging is an old idea; many systems
      preceded rr.  What makes rr different are the
      design goals:
      </p><ul>
        <li><em>Initial focus on Firefox</em>. Many record
          and replay techniques require specific programming languages or
          don't scale well and thus can't handle Firefox --- or were just
          experimental and were never fleshed out. Firefox is
          a complex application, so given rr is useful for debugging
          Firefox, it is likely to be generally useful.
        </li><li><em>Deployability</em>. rr runs on stock
          Linux kernels, on commodity hardware, and requires no
          system configuration changes. Many record and replay techniques
          require kernel changes. Many rely on running the OS in a virtual
          machine.
        </li><li><em>Low run-time overload</em>. We want rr to replace
          gdb in your workflow. That means you need to start getting
          results with rr about as quickly as you would if you were
          using gdb. Low overhead also means less perturbation of tests.
        </li><li><em>Simplicity of design</em>. We didn't have a lot of resources
          to develop rr, so we avoided approaches that rely on complex techniques
          such as dynamic binary instrumentation. This simplicity has also made
          rr more robust and lower overhead.
      </li></ul>
    <p>
      The overhead of rr depends on your application's workload.  On
      Firefox test suites, rr's recording performance is quite usable.
      We see slowdowns down to ≤ 1.2x.  A 1.2x slowdown means that if
      the suite takes 10 minutes to run by itself, it will take around
      12 minutes to be recorded by rr.  However, overhead can vary dramatically
      depending on the workload. For mostly-single-threaded programs, rr has
      much lower overhead than any competing record-and-replay system we know of.
  </p></section>

  <h2>limitations</h2>
  <section>
    <p>rr …
    </p><ul>
      <li>emulates a single-core machine. So, parallel programs incur
        the slowdown of running on a single core. This is an inherent
        feature of the design.
      </li><li>cannot record processes that share memory with processes
        outside the recording tree. This is an inherent feature of the
        design. rr automatically disables features such as X shared
        memory for recorded processes to avoid this problem.
      </li><li>requires a reasonably modern x86 CPU or certain ARM CPUs (Apple M1+).
      </li><li>requires knowledge of every system call executed by the
        recorded processes. It already supports a wide range of
        syscalls — those needed by Firefox and other applications people
        have tackled with rr — but support
        isn't complete, so running rr on your application may
        uncover a syscall that needs to be implemented. Please
        <a href="https://github.com/rr-debugger/rr/issues/">file github issues</a>
        for unsupported system calls.
      </li><li>sometimes needs to be updated in response to kernel changes,
        updates to system libraries, or new CPU families. If rr isn't working
        for you (and the above caveats do not apply), please
        <a href="https://github.com/rr-debugger/rr/issues/">file an issue</a>.
    </li></ul>
  </section>

  <h2>further reference</h2>
  <section>
    <p>
      The <a href="https://arxiv.org/pdf/1705.05937.pdf">Extended Technical Report</a>
      is our best overview of how rr works and performs.
    </p><p>
      The <a href="https://github.com/rr-debugger/rr/wiki">rr wiki</a>
      contains pages that cover technical topics related to rr.
    </p><p>
      Ask on <a href="https://groups.google.com/g/rr-devel">the mailing
      list</a> or on <a href="https://chat.mozilla.org/#/room/#rr:mozilla.org">#rr on chat.mozilla.org</a> if you have questions about rr.
  </p></section>





</div>]]></description>
        </item>
        <item>
            <title><![CDATA["Any sufficiently bad software update is indistinguishable from a cyberattack" (168 pts)]]></title>
            <link>https://twitter.com/leighhoneywell/status/1814278230704111792</link>
            <guid>41023086</guid>
            <pubDate>Sun, 21 Jul 2024 07:01:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/leighhoneywell/status/1814278230704111792">https://twitter.com/leighhoneywell/status/1814278230704111792</a>, See on <a href="https://news.ycombinator.com/item?id=41023086">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[What is the significance of the character "j" at the end of a Roman Numeral? (372 pts)]]></title>
            <link>https://genealogy.stackexchange.com/questions/3748/what-is-the-significance-of-the-character-j-at-the-end-of-a-roman-numeral</link>
            <guid>41022653</guid>
            <pubDate>Sun, 21 Jul 2024 05:31:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://genealogy.stackexchange.com/questions/3748/what-is-the-significance-of-the-character-j-at-the-end-of-a-roman-numeral">https://genealogy.stackexchange.com/questions/3748/what-is-the-significance-of-the-character-j-at-the-end-of-a-roman-numeral</a>, See on <a href="https://news.ycombinator.com/item?id=41022653">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="mainbar" role="main" aria-label="question and answers">
                


<div data-questionid="3748" data-position-on-page="0" data-score="30" id="question">
        

        

<div>
    
    <div itemprop="text">
                
<p>While using an old (1907) book of transcriptions (on-line) <a href="http://www.archive.org/stream/publicationsyor04socigoog#page/n5/mode/2up" rel="noreferrer">The Parish Register of Gargrave in the County of York </a>, I was puzzled by the number of dates recorded in the 16th and early 17th centuries that could be read easily as Roman numerals except for the addition of a <em>j</em> at the end.
<img src="https://i.sstatic.net/k3ee4.png" alt="enter image description here"></p>

<p>The pattern (if there is one) seems to be that if the number would ordinarily end with <em>i</em> then <em>j</em> is appended, but if it ends with <em>v</em> or <em>x</em> then there may be no extra character before the ordinal superscript (but in one case, there is!).</p>

<p>I thought this may be a style quirk of a particular clerk, but now I am seeing it in other sources (but all Yorkshire based and pre-1700, because that is what I am reading at the moment).</p>

<ol>
<li>Is this a real phenomenon or just a coincidence?</li>
<li>How widespread was the practice?</li>
<li>What on earth did it mean? Why did they do it?</li>
</ol>
    </div>

        

    <div>
            

                <div>
    
    <div>
        <a href="https://genealogy.stackexchange.com/users/1107/harry-v"><p><img src="https://i.sstatic.net/QOiFJ.jpg?s=64" alt="Harry V.'s user avatar" width="32" height="32"></p></a>
    </div>
    <div>
        <p><a href="https://genealogy.stackexchange.com/users/1107/harry-v">Harry V.</a><span title="Moderator">♦</span></p><p><span title="reputation score 18,860" dir="ltr">18.9k</span><span>5 gold badges</span><span>47 silver badges</span><span>100 bronze badges</span>
        </p>
    </div>
</div>
            <div>
    <div>
        <p>
            asked <span title="2013-10-10 01:54:59Z">Oct 10, 2013 at 1:54</span>
        </p>
        
    </div>
    <div>
        <a href="https://genealogy.stackexchange.com/users/70/fortiter"><p><img src="https://www.gravatar.com/avatar/df13fe5a34665517f336abc37925071c?s=64&amp;d=identicon&amp;r=PG" alt="Fortiter's user avatar" width="32" height="32"></p></a>
    </div>
    
</div>
        </div>
    
</div>




            <p><span itemprop="commentCount">2</span></p>
    </div>



                
                
                <div id="answers">
                    


                                    
<div id="answer-3751" data-answerid="3751" data-parentid="3748" data-score="41" data-position-on-page="1" data-highest-scored="1" data-question-has-accepted-highest-score="1" itemprop="acceptedAnswer" itemscope="" itemtype="https://schema.org/Answer">
    
    <div itemprop="text">
<p>The letter <em>j</em> originated as a "swash" (florish) character at the end of Roman numerals, and only later became useful as a separate character.</p>

<p>A <em>j</em> was used for the final <em>i</em>, to make it clear the number had ended.</p>

<p>Until quite recent times it was still the recommended practice to use a final <em>j</em> in medical prescriptions, to avoid misunderstandings.  See these <a href="http://books.google.com/books?id=XesRAAAAYAAJ&amp;pg=PA582#v=onepage&amp;q&amp;f=false" rel="noreferrer">instructions from 1919</a>:</p>

<p><img src="https://i.sstatic.net/2tFVi.png" alt="enter image description here"></p>

<p>So you should interpret <em>xvij</em> as 17, not 16.  It's part of the number, not something appended.</p>
    </div>
    <div>
    <div>
        <p>
            answered <span title="2013-10-10 02:58:26Z">Oct 10, 2013 at 2:58</span>
        </p>
        
    </div>
    <div>
        <a href="https://genealogy.stackexchange.com/users/30/rob-hoare"><p><img src="https://www.gravatar.com/avatar/047840022674ff185735db7daea4406a?s=64&amp;d=identicon&amp;r=PG" alt="Rob Hoare's user avatar" width="32" height="32"></p></a>
    </div>
    <div itemprop="author" itemscope="" itemtype="http://schema.org/Person">
        <p><a href="https://genealogy.stackexchange.com/users/30/rob-hoare">Rob Hoare</a><span itemprop="name">Rob Hoare</span></p><p><span title="reputation score " dir="ltr">6,186</span><span>23 silver badges</span><span>48 bronze badges</span>
        </p>
    </div>
</div>
    
</div>


                        


                            <h2 data-loc="1">
                                
                            </h2>
                                    
                </div>
            </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[X.com refuses to open with Firefox strict tracking protection enabled (263 pts)]]></title>
            <link>https://x.com/</link>
            <guid>41022408</guid>
            <pubDate>Sun, 21 Jul 2024 04:37:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://x.com/">https://x.com/</a>, See on <a href="https://news.ycombinator.com/item?id=41022408">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Deluge of Fake Mac App Store Reviews (118 pts)]]></title>
            <link>https://lapcatsoftware.com/articles/2024/7/1.html</link>
            <guid>41021472</guid>
            <pubDate>Sun, 21 Jul 2024 00:38:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lapcatsoftware.com/articles/2024/7/1.html">https://lapcatsoftware.com/articles/2024/7/1.html</a>, See on <a href="https://news.ycombinator.com/item?id=41021472">Hacker News</a></p>
<div id="readability-page-1" class="page">
<nav>
Previous: <a href="https://lapcatsoftware.com/articles/2024/6/7.html">Amazon Web Services dark patterns</a>
<br><a href="https://lapcatsoftware.com/articles/index.html" title="The Desolation of Blog">Articles index</a></nav>
<header><a href="https://lapcatsoftware.com/">Jeff Johnson</a> (<a href="https://underpassapp.com/">My apps</a>, <a href="https://www.paypal.me/JeffJohnsonWI">PayPal.Me</a>, <a href="https://mastodon.social/@lapcatsoftware" title="@lapcatsoftware@mastodon.social">Mastodon</a>)</header>
<p><a href="https://lapcatsoftware.com/FeedbackAssistantBoycott/">Feedback Assistant Boycott</a></p>

<h3>July 20 2024</h3>

<p>Yesterday I discovered a deluge of recent fake customer reviews for a number of top paid apps in the United States Mac App Store. (Each country has its own version of the App Store with separate reviews.) I've now checked the reviews for all of the current top 40 paid apps in the Mac App Store, and 8 of those apps have a large number of fake reviews during the period of June 11 through July 19. What the 8 apps have in common, besides the top paid list and the fake reviews, is that they're all relatively cheap, from $1.99 to $4.99 USD in price. Note that only buyers can leave App Store ratings and reviews for upfront paid apps, which makes this deluge of fake reviews especially odd. (Recipients of promo codes from the developer cannot leave ratings and reviews.) Here's the list of apps I found:</p>
<table>
<thead>
<tr><td>Name</td><td>Rank</td><td>Price</td><td>Reviews</td><td>Dates</td></tr>
</thead>
<tbody>
<tr><td><a href="https://apps.apple.com/us/app/bettersnaptool/id417375580?mt=12">BetterSnapTool</a></td><td>#9</td><td>$2.99</td><td>96</td><td>July 6 - July 15</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/rar-extractor-unarchiver/id646295438?mt=12">RAR Extractor</a></td><td>#15</td><td>$3.99</td><td>54</td><td>June 18 - July 15</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/dynamic-wallpaper-engine/id1453504509?mt=12">Dynamic Wallpaper Engine</a></td><td>#16</td><td>$4.99</td><td>5</td><td>Jun 27 - July 13</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/wipr/id1320666476?mt=12">Wipr</a></td><td>#23</td><td>$1.99</td><td>48</td><td>July 1 - July 13</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/vinegar-tube-cleaner/id1591303229?mt=12">Vinegar</a></td><td>#27</td><td>$1.99</td><td>35</td><td>July 12</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/dark-reader-for-safari/id1438243180?mt=12">Dark Reader</a></td><td>#29</td><td>$4.99</td><td>21</td><td>June 11 - July 15</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/rapidclick/id419891002?mt=12">RapidClick</a></td><td>#32</td><td>$2.99</td><td>51</td><td>July 18 - July 19</td></tr>
<tr><td><a href="https://apps.apple.com/us/app/helper-for-gopro-files/id1039466529?mt=12">Helper for GoPro Files</a></td><td>#35</td><td>$1.99</td><td>102</td><td>June 11 - July 18</td></tr>
</tbody>
</table>

<p>At the end of this blog posts are screenshot thumbnails of the fake reviews for each of the apps with links to the full screenshot images. If you look closely at the screenshots, it becomes obvious that the reviews are fake, and you can see the same patterns repeating across all of the reviews. In most cases, the terse review text is identical to the review title— either something generic like "good app" or something nonsensical like "dacdiepsur2d6s"—and the user names are often variations of each other: Cool Game 31321, Cool Game 3132, Game Easy 02146, Okay Game 0326, Play Next 3262, PlayGameOks242, etc.</p>
<p>Curiously, RapidClick is the only app of the group with non-generic fake reviews. Most of RapidClick's fake reviews specifically mention clicking, which in my opinion seems a bit suspicious.</p>
<p>The majority of the fake reviews are 5 stars, so they would tend to raise the overall rating of the apps. And they're clearly worth something to somebody, because each fake review would cost at least the price of the paid app to purchase, which probably explains why these reviews are attached to low-priced apps. If a single developer purchased all of the fake reviews listed, it would cost $1152.88 plus tax, which is a bit pricey but still well within many advertising budgets.</p>
<p>It's worth noting, by the way, that the default review sort order in the App Store is by Most Helpful rather than by Most Recent, so potential customers browsing the App Store wouldn't necessarily see all of the fake reviews together like they appear in my screenshots, which are sorted by Most Recent.</p>
<p>The question is, why are we seeing all of these fake reviews around the same time across multiple top paid Mac App Store apps? I don't have an answer to this question. My pet conspiracy theory is that all of the fake reviews were purchased by a single developer as a cover for their app. If a bunch of apps have fake reviews, then the fake reviews for the developer's one app don't stand out as much, and there's plausible deniability. But that's only my theory, with no proof. I could be wrong. One thing is clear, however: Apple has completely failed to prevent, detect, or remove this deluge of fake reviews in the Mac App Store. There has been no curation.</p>

<p>BetterSnapTool:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST2.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST3.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST3.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST4.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST4.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST5.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST5.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST6.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST6.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST7.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST7.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/BST8.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST8.png" width="433" height="257" loading="lazy"></a>
</p>

<p>RAR Extractor:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/RAR1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RAR1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RAR2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RAR2.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RAR3.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RAR3.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RAR4.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RAR4.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RAR5.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RAR5.png" width="433" height="257" loading="lazy"></a>
</p>

<p>Dynamic Wallpaper Engine:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/DWE1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/DWE1.png" width="433" height="257" loading="lazy"></a>
</p>

<p>Wipr:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/BST1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr2.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr3.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr3.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr4.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/Wipr4.png" width="433" height="257" loading="lazy"></a>
</p>

<p>Vinegar:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/Vinegar1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/Vinegar1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/Vinegar2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/Vinegar2.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/Vinegar3.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/Vinegar3.png" width="433" height="257" loading="lazy"></a>
</p>

<p>Dark Reader:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/DarkReader1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/DarkReader1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/DarkReader2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/DarkReader2.png" width="433" height="257" loading="lazy"></a>
</p>

<p>RapidClick:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick2.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick3.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick3.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick4.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick4.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick5.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/RapidClick5.png" width="433" height="257" loading="lazy"></a>
</p>

<p>Helper for GoPro Files:</p>
<p><a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro1.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro1.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro2.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro2.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro3.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro3.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro4.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro4.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro5.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro5.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro6.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro6.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro7.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro7.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro8.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro8.png" width="433" height="257" loading="lazy"></a>
<a href="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro9.png"><img src="https://lapcatsoftware.com/articles/2024/7/1-images/GoPro9.png" width="433" height="257" loading="lazy"></a>
</p>

<p><a href="https://lapcatsoftware.com/FeedbackAssistantBoycott/">Feedback Assistant Boycott</a></p>

<header><a href="https://lapcatsoftware.com/">Jeff Johnson</a> (<a href="https://underpassapp.com/">My apps</a>, <a href="https://www.paypal.me/JeffJohnsonWI">PayPal.Me</a>, <a href="https://mastodon.social/@lapcatsoftware" title="@lapcatsoftware@mastodon.social">Mastodon</a>)</header>
<nav><a href="https://lapcatsoftware.com/articles/index.html" title="The Desolation of Blog">Articles index</a><br>
Previous: <a href="https://lapcatsoftware.com/articles/2024/6/7.html">Amazon Web Services dark patterns</a>
</nav>


</div>]]></description>
        </item>
        <item>
            <title><![CDATA[Initial details about why CrowdStrike's CSAgent.sys crashed (455 pts)]]></title>
            <link>https://twitter.com/patrickwardle/status/1814343502886477857</link>
            <guid>41021366</guid>
            <pubDate>Sun, 21 Jul 2024 00:17:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://twitter.com/patrickwardle/status/1814343502886477857">https://twitter.com/patrickwardle/status/1814343502886477857</a>, See on <a href="https://news.ycombinator.com/item?id=41021366">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Empathy for the user having sex with your software (466 pts)]]></title>
            <link>https://docs.buttplug.io/docs/dev-guide/intro/buttplug-ethics/</link>
            <guid>41021029</guid>
            <pubDate>Sat, 20 Jul 2024 23:27:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://docs.buttplug.io/docs/dev-guide/intro/buttplug-ethics/">https://docs.buttplug.io/docs/dev-guide/intro/buttplug-ethics/</a>, See on <a href="https://news.ycombinator.com/item?id=41021029">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><blockquote><p>"<!-- -->…<!-- --> Society has put a lot of evils in our brains that we need to transcend before we make out." </p><p><a href="https://youtu.be/ONi7QwYNQz4" target="_blank" rel="noopener noreferrer">Cex - Not Trying</a></p></blockquote><p>No, really. For as much fun as butts and their surrounding body parts can be, applying technology to them is just a nightmare of conflicting issues and requirements and considerations that's absolutely exhausting to think about for too long.</p><p>So I'll try to keep this short.</p><p>Before we delve into what Buttplug is from the technical side, I'd like to take a minute to think about it from the social and ethical side. It's impossible to solve everything that may come up when using this library in a single page of a developer guide (it'd still be a tall order at a million pages. Thank Turing and his infernal machines for that), but I can at least go over a few things to think about while developing sex tech apps, other than whether your threads are deadlocking or memory is leaking.</p><h2 id="empathy-for-the-user-having-sex-with-your-software">Empathy for the User Having Sex With Your Software<a href="#empathy-for-the-user-having-sex-with-your-software" aria-label="Direct link to Empathy for the User Having Sex With Your Software" title="Direct link to Empathy for the User Having Sex With Your Software">​</a></h2><p>Let's start with the user of the software you're about to create.</p><p>When working on Buttplug applications, something that should be at the forefront of your design thinking is:</p><blockquote><p>Someone is going to fuck this.</p></blockquote><p>The context of this usage should influence all levels of design, from UI/UX to low level code decisions. Assuming the user will approach a piece of software that involves Buttplug in the same way they would, say, a word processor, will end up in a fuckable word processor. If that's what you were aiming for, great, but otherwise this will just end up in a frustrated user and something that looked like a cat walked across the keyboard.</p><p>As you build projects using Buttplug, ask yourself questions that the user will encounter:</p><ul><li>Could I use this while turned on?</li><li>If I'm REALLY turned on, how long does it take for me to go from "I wanna use this" to "I am using this"?</li><li>What happens if my hardware disconnects?</li><li>Do I have a quick way to stop whatever the hardware may be doing?</li><li>Can I control this while possibly covered in <!-- -->[lube or other things]<!-- -->?</li></ul><p>Since Buttplug programs are meant to be sexual, there's a good chance the user <em>won't</em> be considering these questions before embarking on whatever technical adventure you've implemented for them. Therefore it's your job to think about these issues first.</p><h2 id="github-after-dark">Github After Dark<a href="#github-after-dark" aria-label="Direct link to Github After Dark" title="Direct link to Github After Dark">​</a></h2><p>Developing sex software isn't a practice with much best practices or documented history or even a community of developers willing to admit they'd do such a thing. While we hope to change all of those with this library, that's going to take time. In order to gain acceptance in larger software communities, we hope to share our code in public forums, such as GitHub. </p><p>These hopes have to be tempered by the issues of the general sterility of software, though. GitHub, StackOverflow, Glitch, and other community sites were not really made with NSFW content in mind. While there are certainly "adult" projects on GitHub in the form of porn site scrapers, adult games, and other applications, it's still not the norm by any means. How you present your sex software project as the community grows could end up setting standards for how services deal with NSFW code projects in the future.</p><p>Most of the code in Buttplug library isn't extremely explicit, but applications implementing Buttplug may be. Be careful with anything involving media assets that may be deemed inappropriate for certain age groups, especially on sites that don't allow search removal or age checking. Self hosting is always an option for projects involving sensitive materials.</p><p>If you would like to use a project site for Buttplug work, and they don't have an obvious policy stating how they might feel about their site being used with sensitive materials, it may be in your best interest to contact them. If you don't feeling comfortable handling this yourself, feel free to <a href="https://github.com/buttplugio/buttplug/issues" target="_blank" rel="noopener noreferrer">file an issue on the main Buttplug repo</a> and we'll be happy to reach out and discuss. The Core Buttplug Developer Team has communicated with services in the past to figure out best practices for hosting sensitive code content, and the outcomes are usually positive.</p><p>Additionally, we highly recommend that any open source or community project using Buttplug should also have a Code of Conduct. While there have been many lively discussions on projects like databases and kernels adopting CoCs, there are some very concrete contextual reasons to have them for sex software projects. This rings especially true if it is a project that may involve some sort of generic, multiple-community/interest use.</p><p>For instance, let's say someone is writing an audio player/movie player that controls sex toys with Buttplug. A massive variety of media could be fed into this application, and there is a good chance that media used by some users may be found offensive by others. These user groups will still need support, and may possibly be sharing the same issue/bug tracker for their needs. Having a CoC in place guides moderation of situations where interests may conflict.</p><p>As for which CoC to use (if looking for a prewritten one), you can <a href="https://github.com/metafetish/metafetish-project-docs/blob/master/CODE_OF_CONDUCT.md" target="_blank" rel="noopener noreferrer">check out ours</a> as an example. It's really just a slightly modified version of the <a href="https://www.contributor-covenant.org/" target="_blank" rel="noopener noreferrer">Contributor's Covenant</a>. Using stock CoC's on sex software projects can prove difficult due to rules about "appropriate wording", due to the sexually explicit context of the project itself. Addendums or rewording may be required, though we do recommend being cautious in how these are presented. We welcome discussion of these issues on <a href="https://metafetish.club/" target="_blank" rel="noopener noreferrer">our message boards</a> or <a href="https://discord.buttplug.io/" target="_blank" rel="noopener noreferrer">discord server</a>.</p><p>Finally, you should consider if and how you'll handle contributions to your project. Regardless of whether you're running the project under your own identity, through a pseudonym, or anonymously, you shouldn't expect your contributors to all make the same choice as you did. Be ready to consider situations where someone wants to contribute but may need to use an anonymous account to do so, or may want to use their real and/or well-known identity, and how that may affect the optics and upkeep of your project.</p><h2 id="mistakes-will-be-made">Mistakes Will Be Made<a href="#mistakes-will-be-made" aria-label="Direct link to Mistakes Will Be Made" title="Direct link to Mistakes Will Be Made">​</a></h2><p>Now that we've covered users and services, let's focus on you, the developer.</p><p>The theme here will be as it was in the other sections: Plan ahead. Making a mistake that ends in something like data loss or crashing programs is one thing, but with sex software, there's just as likely to be social/ethical problems around technically competent implementations. How you respond to these problems affects not only your project, but the field of sex tech in general. Isn't responsibility fun?</p><p>This might seem like putting way too much burden on someone making a tiny vibrator app with a new interface, but context outweights technology here. Technology as applied to sex means people will concentrate on the sex more than the technology when discussing the topic. This is why security breaches in commercial sex tech seem extra bad, even if they may impact far fewer users than a large, non-sex related technical service being hacked. As it goes with larger companies, so it will go with smaller projects. A small project that makes some sort of mistake around sex tech may still see more fire than, say, someone's reimplementation of an algorithm or database or something. Social context matters.</p><p>Does this means you shouldn't develop for sex tech? Absolutely not. It just means you should treat it with more caution and planning than you might normally for less "interesting" software projects (and for everyone thinking "but most software is devoid of usage context and could be perverted for whatever reason!", yes I get it but I want to keep this section short, remember? So just go with it here.). </p><p>As you'd think your design through for your users based on the criteria from the first section of this section, think your design through for yourself too. What is it you want to be responsible for with the software you're releasing? What do and don't you want your users to be able to do with it?</p><p>Note that this list is maleable. You don't have to get it right the first time, and it doesn't need to be formally stated for most smaller projects. It can grow and change as your software grows and changes, but having the stated requirements will help both you and your users in case things ever "blow up".</p><h2 id="the-buttplug-mission-statement">The Buttplug Mission Statement<a href="#the-buttplug-mission-statement" aria-label="Direct link to The Buttplug Mission Statement" title="Direct link to The Buttplug Mission Statement">​</a></h2><p>Buttplug isn't a "smaller" project though, so we do get to take on the formal statement.</p><p>For Buttplug as a project, it felt best to sum up all of the information in this section as The Buttplug Mission Statement (written by someone far smarter than me after I said it far more verbosely and with a bunch of handwaving and probably some cursing).</p><blockquote><p>Buttplug is committed to the safety, autonomy, and human rights of people using it as a sex technology standard, and stands in solidarity with the many intersectional rights of all individuals to be sex positive. As such, Buttplug encourages individual empowerment through self-directed education, and responsible behaviors which are also respectful of the needs and the choices available to everyone.</p></blockquote><p>Getting the paragraphs in this section (plus a bunch of stuff not covered) squeezed into an almost-tweetable chunk means using dense wording that may sound odd for a project named "Buttplug", but this is a Load Bearing Mission Statement. It has a lot to explain and contextualize in a small space, and it does what the project needs. As your project may be more specific than "abstract hardware controller", odds are you may not need something of this manner, but it's good to at least think about what you'd say to sum up what it is you're doing and why you're doing it, before you actually have to do so.</p><h2 id="mo-butts-mo-problems">Mo' Butts Mo' Problems<a href="#mo-butts-mo-problems" aria-label="Direct link to Mo' Butts Mo' Problems" title="Direct link to Mo' Butts Mo' Problems">​</a></h2><p>This section, at best, should provide a framework about how to think about things as you develop your application. Your experience will be unique, and may require you to come up with your own strategies to continue development and distribution in a way that works for you and/or your community.</p><p>If you have any suggestions, please feel free to reach out via the contact info on the home page of this document! I'd love to hear about how developers create and adapt tech as they need for their users.</p></div></div>]]></description>
        </item>
    </channel>
</rss>