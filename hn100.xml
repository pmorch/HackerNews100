<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 03 Feb 2025 16:30:21 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[I Wrote a WebAssembly VM in C (102 pts)]]></title>
            <link>https://irreducible.io/blog/my-wasm-interpreter/</link>
            <guid>42918524</guid>
            <pubDate>Mon, 03 Feb 2025 14:30:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://irreducible.io/blog/my-wasm-interpreter/">https://irreducible.io/blog/my-wasm-interpreter/</a>, See on <a href="https://news.ycombinator.com/item?id=42918524">Hacker News</a></p>
Couldn't get https://irreducible.io/blog/my-wasm-interpreter/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA["Anything threatening to be a subculture is commodified before it can walk" (2014) (119 pts)]]></title>
            <link>https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/</link>
            <guid>42917680</guid>
            <pubDate>Mon, 03 Feb 2025 12:50:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/">https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/</a>, See on <a href="https://news.ycombinator.com/item?id=42917680">Hacker News</a></p>
Couldn't get https://www.dezeen.com/2014/12/18/william-gibson-subculture-commodification-london-justin-mcguirk-opinion/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube shut down audio developer's channel of 15 years standing for "reasons" (349 pts)]]></title>
            <link>https://bsky.app/profile/sinevibes.bsky.social/post/3lhazuyn5as2t</link>
            <guid>42917454</guid>
            <pubDate>Mon, 03 Feb 2025 12:21:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.app/profile/sinevibes.bsky.social/post/3lhazuyn5as2t">https://bsky.app/profile/sinevibes.bsky.social/post/3lhazuyn5as2t</a>, See on <a href="https://news.ycombinator.com/item?id=42917454">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: AI Company Researching Agent (494 pts)]]></title>
            <link>https://github.com/LeadsOnTrees/company-researcher-agent</link>
            <guid>42917126</guid>
            <pubDate>Mon, 03 Feb 2025 11:20:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/LeadsOnTrees/company-researcher-agent">https://github.com/LeadsOnTrees/company-researcher-agent</a>, See on <a href="https://news.ycombinator.com/item?id=42917126">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Company Researching Agent</h2><a id="user-content-company-researching-agent" aria-label="Permalink: Company Researching Agent" href="#company-researching-agent"></a></p>

<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/LeadsOnTrees/company-researcher-agent/blob/master/imgs/demo.gif"><img src="https://github.com/LeadsOnTrees/company-researcher-agent/raw/master/imgs/demo.gif" alt="demo" data-animated-image=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is this about?</h2><a id="user-content-what-is-this-about" aria-label="Permalink: What is this about?" href="#what-is-this-about"></a></p>
<p dir="auto">This is a tool that helps you research a company by scraping the web and generating a report.</p>
<p dir="auto">Save time instead of browsing manually through the company's website. Use this tool to get a quick overview of the company's website, careers, funding, and more.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How this works?</h2><a id="user-content-how-this-works" aria-label="Permalink: How this works?" href="#how-this-works"></a></p>
<ul dir="auto">
<li>
<p dir="auto">The tool uses a browser to scrape the company's website.
This agent will deep crawl a website and extract all the information it can find.
It will skip some unnecessary pages like the documentation, support pages, etc.</p>
</li>
<li>
<p dir="auto">It then uses a series of prompts to extract the information you need. There's a lot of valuable information from career pages, FAQ sections, blog posts. This gives you a lot of insights what tech stack the company uses and what the company might be interested to buy.</p>
</li>
<li>
<p dir="auto">The tool generates a report in PDF format. Which you can save and share with your team.</p>
</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to use</h2><a id="user-content-how-to-use" aria-label="Permalink: How to use" href="#how-to-use"></a></p>
<p dir="auto">Setup env keys:</p>
<div dir="auto" data-snippet-clipboard-copy-content="export OPENAI_API_KEY=...
export DEEPSEEK_API_KEY=...

# Default is gpt-4o-mini
export LLM_MODEL=o3-mini

# Optional - if you want to use LeadsOnTrees API for funding data
export LOT_API_KEY=..."><pre><span>export</span> OPENAI_API_KEY=...
<span>export</span> DEEPSEEK_API_KEY=...

<span><span>#</span> Default is gpt-4o-mini</span>
<span>export</span> LLM_MODEL=o3-mini

<span><span>#</span> Optional - if you want to use LeadsOnTrees API for funding data</span>
<span>export</span> LOT_API_KEY=...</pre></div>
<p dir="auto">Launching:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uv sync
uv run research https://example.com"><pre>uv sync
uv run research https://example.com</pre></div>
<p dir="auto">If you want to research a very large website it can be good to reduce the max response count:</p>
<div dir="auto" data-snippet-clipboard-copy-content="uv run research https://example.com --max-results 30"><pre>uv run research https://example.com --max-results 30</pre></div>
<p dir="auto">However, the more pages you scrape the more data LLM will have to give you better insights.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What is LeadsOnTrees?</h2><a id="user-content-what-is-leadsontrees" aria-label="Permalink: What is LeadsOnTrees?" href="#what-is-leadsontrees"></a></p>
<p dir="auto">LeadsOnTrees is a platform which aggregates all VC funded startups and their founders.</p>
<p dir="auto">We scrape news, blogs, and other sources to find new startups and investments.</p>
<p dir="auto">This data is then used to generate insights about the startup ecosystem.</p>
<p dir="auto">See more on <a href="https://leadsontrees.com/" rel="nofollow">leadsontrees.com</a></p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bluesky now has 30 million users (167 pts)]]></title>
            <link>https://bsky.app/profile/bsky.app/post/3lgu4lg6j2k2v</link>
            <guid>42916770</guid>
            <pubDate>Mon, 03 Feb 2025 10:17:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bsky.app/profile/bsky.app/post/3lgu4lg6j2k2v">https://bsky.app/profile/bsky.app/post/3lgu4lg6j2k2v</a>, See on <a href="https://news.ycombinator.com/item?id=42916770">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Anthropic: "Applicants should not use AI assistants" (434 pts)]]></title>
            <link>https://simonwillison.net/2025/Feb/2/anthropic/</link>
            <guid>42915905</guid>
            <pubDate>Mon, 03 Feb 2025 07:46:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simonwillison.net/2025/Feb/2/anthropic/">https://simonwillison.net/2025/Feb/2/anthropic/</a>, See on <a href="https://news.ycombinator.com/item?id=42915905">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<blockquote cite="https://boards.greenhouse.io/anthropic"><p><em>While we encourage people to use AI systems during their role to help them work faster and more effectively, please do not use AI assistants during the application process. We want to understand your personal interest in Anthropic without mediation through an AI system, and we also want to evaluate your non-AI-assisted communication skills. Please indicate 'Yes' if you have read and agree.</em></p>
<p>Why do you want to work at Anthropic? (We value this response highly - great answers are often 200-400 words.)</p></blockquote>
<p>— <a href="https://boards.greenhouse.io/anthropic">Anthropic</a>, <span>online job application form</span></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[London Street Views (1840) (130 pts)]]></title>
            <link>https://www.davidrumsey.com/luna/servlet/detail/RUMSEY~8~1~323099~90092214:Composite--London-Street-Views-No--</link>
            <guid>42915231</guid>
            <pubDate>Mon, 03 Feb 2025 05:19:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.davidrumsey.com/luna/servlet/detail/RUMSEY~8~1~323099~90092214:Composite--London-Street-Views-No--">https://www.davidrumsey.com/luna/servlet/detail/RUMSEY~8~1~323099~90092214:Composite--London-Street-Views-No--</a>, See on <a href="https://news.ycombinator.com/item?id=42915231">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            
            <div>
              <p>COLLECTION NAME:</p>
              <div>
                <p>
                  David Rumsey Historical Map Collection
                </p>
                <div>
                  <p>mediaCollectionId</p>
                  <p>RUMSEY~8~1</p>
                  <p>David Rumsey Historical Map Collection</p>
                  <p>Collection</p>
                  <p>true</p>
                </div>
              </div>
            </div>             
              
              
              
              
              
                
                  
                     
                     
                         
                                            
                     
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > AUTHOR:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Author:
                    </p>
                    <div>
                      <p>
                        Tallis, John, 1817-1876
                      </p>
                      
                        <div>
                        <p>author</p>
                        <p>Tallis, John, 1817-1876</p>
                        <p>Author</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > DATE:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Short Title:
                    </p>
                    <div>
                      <p>
                        Composite: London Street Views No. 1-88.
                      </p>
                      
                        <div>
                        <p>short_title</p>
                        <p>Composite: London Street Views No. 1-88.</p>
                        <p>Short Title</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > PUBLISHER:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Publisher:
                    </p>
                    <div>
                      <p>
                        John Tallis &amp; Co.
                      </p>
                      
                        <div>
                        <p>publisher</p>
                        <p>John Tallis &amp; Co.</p>
                        <p>Publisher</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Publisher Location:
                    </p>
                    <div>
                      <p>
                        London
                      </p>
                      
                        <div>
                        <p>publisher_location</p>
                        <p>London</p>
                        <p>Publisher Location</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > TYPE:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Type:
                    </p>
                    <div>
                      <p>
                        Composite Map
                      </p>
                      
                        <div>
                        <p>type</p>
                        <p>Composite Map</p>
                        <p>Type</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Type:
                    </p>
                    <div>
                      <p>
                        Composite View
                      </p>
                      
                        <div>
                        <p>type</p>
                        <p>Composite View</p>
                        <p>Type</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Note:
                    </p>
                    <div>
                      <p>
                        Composite of all 88 London Street Views.
                      </p>
                      
                        <div>
                        <p>note</p>
                        <p>Composite of all 88 London Street Views.</p>
                        <p>Note</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > CITY:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      City:
                    </p>
                    <div>
                      <p>
                        London (England)
                      </p>
                      
                        <div>
                        <p>city</p>
                        <p>London (England)</p>
                        <p>City</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > SUBJECT:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Roads
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Roads</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Tourism
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Tourism</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Historical
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Historical</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Street View
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Street View</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Subject:
                    </p>
                    <div>
                      <p>
                        Street View
                      </p>
                      
                        <div>
                        <p>subject</p>
                        <p>Street View</p>
                        <p>Subject</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Full Title:
                    </p>
                    <div>
                      <p>
                        (Composite to) Tallis's London Street Views No. 1-88.
                      </p>
                      
                        <div>
                        <p>full_title</p>
                        <p>(Composite to) Tallis's London Street Views No. 1-88.</p>
                        <p>Full Title</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      List No:
                    </p>
                    <div>
                      <p>
                        14002.688
                      </p>
                      
                        <div>
                        <p>list_no</p>
                        <p>14002.688</p>
                        <p>List No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Series No:
                    </p>
                    <div>
                      <p>
                        2
                      </p>
                      
                        <div>
                        <p>series_no</p>
                        <p>2</p>
                        <p>Series No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > ENGRAVER OR PRINTER:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Engraver or Printer:
                    </p>
                    <div>
                      <p>
                        Bigot, Charles
                      </p>
                      
                        <div>
                        <p>engraver_or_printer</p>
                        <p>Bigot, Charles</p>
                        <p>Engraver or Printer</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Engraver or Printer:
                    </p>
                    <div>
                      <p>
                        Gaspey, William, 1812-1888
                      </p>
                      
                        <div>
                        <p>engraver_or_printer</p>
                        <p>Gaspey, William, 1812-1888</p>
                        <p>Engraver or Printer</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > PUBLICATION AUTHOR:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Publication Author:
                    </p>
                    <div>
                      <p>
                        Tallis, John, 1817-1876
                      </p>
                      
                        <div>
                        <p>publication_author</p>
                        <p>Tallis, John, 1817-1876</p>
                        <p>Publication Author</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Date:
                    </p>
                    <div>
                      <p>
                        1840
                      </p>
                      
                        <div>
                        <p>pub_date</p>
                        <p>1840</p>
                        <p>Pub Date</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Title:
                    </p>
                    <div>
                      <p>
                        Tallis's London street views, exhibiting upwards of one hundred buildings in each number ... the whole forming a complete stranger's guide through London ... to which is added an index map of the streets ... and a faithful history and description of every object worthy of notice ... London: published by John Tallis, 15, St. John's Lane, St. John's Gate; and regularly kept by all booksellers and toy shops, in England, Wales, Ireland, and Scotland. Each sheet may be had separately. W. Hill, Printer, 48, Northampton-street, Clerkenwell.
                      </p>
                      
                        <div>
                        <p>pub_title</p>
                        <p>Tallis's London street views, exhibiting upwards of one hundred buildings in each number ... the whole forming a complete stranger's guide through London ... to which is added an index map of the streets ... and a faithful history and description of every object worthy of notice ... London: published by John Tallis, 15, St. John's Lane, St. John's Gate; and regularly kept by all booksellers and toy shops, in England, Wales, Ireland, and Scotland. Each sheet may be had separately. W. Hill, Printer, 48, Northampton-street, Clerkenwell.</p>
                        <p>Pub Title</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Reference:
                    </p>
                    <div>
                      <p>
                        Jackson 9-13
                      </p>
                      
                        <div>
                        <p>pub_reference</p>
                        <p>Jackson 9-13</p>
                        <p>Pub Reference</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Note:
                    </p>
                    <div>
                      <p>
                        Tallis’ London Street Views includes eighty-eight parts, which were followed by eighteen additional enlarged and revised views released several years later. “Each part consisted of the engraved elevation spread over the two centre pages, four surrounding pages of advertisements with an historical and descriptive text occupying the middle columns, and a coloured wrapper carrying the title, further advertisements, and a street directory relating to the elevation … The elevations of both sides of the street were engraved together with a map of its location in relation to surrounding streets and a view, either of the street itself, or of a famous building or individual shop. Where possible each street was dealt with in a single issue, but several of the important longer thoroughfares had to be spread over two or more parts: Oxford Street, for instance, had six parts devoted to it. So although there was a total of eighty-eight parts only seventy-four streets were illustrated. Each issue of the Street Views was sold at 1 1/2 d. a copy, with an occasional exception at 2d. The low cost is explained by the fact that the publication was devised as an advertising medium. Although the lists of names in the street directories were complete, by no means all of the premises in the elevations had their proprietors’ names engraved on them, and it is clear that this privilege had to be paid for. According to Beresford Chancellor (Architectural Review. July, 1924, p. 39), the drawings for the elevations were made by an artist named Charles Bigot … The historical and descriptive notes were probably compiled by William Gaspey who certainly wrote the notes for the 1847 edition … The printers of the covers and text are W. Hill of Northampton Street, Clerkenwell, but it is unlikely that they also printed the engraved plates, for the printing of copper- and steel-engravings was a highly specialized craft bearing no affinity with letterpress printing … There is a reference among Tallis papers to ‘Willoughby our printer,’ which clearly refers to Richard Willoughby &amp; Co. … Although it is impossible to date the beginning and the ending of these Street Views precisely, I suggest the following dating: Parts 1-36, issued 1838; Parts 37-79, 1839; Parts 80-88, 1840. The later edition of Street Views is also undated but from the clues contained in the advertisements it seems that they were issued during the latter half of 1847.” [Jackson, Peter (1969). Introduction. John Tallis’s London street views (p. 9-13). London Topographical Society, Nattali &amp; Maurice, London.] The Rumsey Collection copy includes 77 original street view pamphlets; the online version is augmented by 11 facsimile images of numbers 78 to 88 from the London Topographical Society edition mentioned above.
                      </p>
                      
                        <div>
                        <p>pub_note</p>
                        <p>Tallis’ London Street Views includes eighty-eight parts, which were followed by eighteen additional enlarged and revised views released several years later. “Each part consisted of the engraved elevation spread over the two centre pages, four surrounding pages of advertisements with an historical and descriptive text occupying the middle columns, and a coloured wrapper carrying the title, further advertisements, and a street directory relating to the elevation … The elevations of both sides of the street were engraved together with a map of its location in relation to surrounding streets and a view, either of the street itself, or of a famous building or individual shop. Where possible each street was dealt with in a single issue, but several of the important longer thoroughfares had to be spread over two or more parts: Oxford Street, for instance, had six parts devoted to it. So although there was a total of eighty-eight parts only seventy-four streets were illustrated. Each issue of the Street Views was sold at 1 1/2 d. a copy, with an occasional exception at 2d. The low cost is explained by the fact that the publication was devised as an advertising medium. Although the lists of names in the street directories were complete, by no means all of the premises in the elevations had their proprietors’ names engraved on them, and it is clear that this privilege had to be paid for. According to Beresford Chancellor (Architectural Review. July, 1924, p. 39), the drawings for the elevations were made by an artist named Charles Bigot … The historical and descriptive notes were probably compiled by William Gaspey who certainly wrote the notes for the 1847 edition … The printers of the covers and text are W. Hill of Northampton Street, Clerkenwell, but it is unlikely that they also printed the engraved plates, for the printing of copper- and steel-engravings was a highly specialized craft bearing no affinity with letterpress printing … There is a reference among Tallis papers to ‘Willoughby our printer,’ which clearly refers to Richard Willoughby &amp; Co. … Although it is impossible to date the beginning and the ending of these Street Views precisely, I suggest the following dating: Parts 1-36, issued 1838; Parts 37-79, 1839; Parts 80-88, 1840. The later edition of Street Views is also undated but from the clues contained in the advertisements it seems that they were issued during the latter half of 1847.” [Jackson, Peter (1969). Introduction. John Tallis’s London street views (p. 9-13). London Topographical Society, Nattali &amp; Maurice, London.] The Rumsey Collection copy includes 77 original street view pamphlets; the online version is augmented by 11 facsimile images of numbers 78 to 88 from the London Topographical Society edition mentioned above.</p>
                        <p>Pub Note</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub List No:
                    </p>
                    <div>
                      <p>
                        14002.000
                      </p>
                      
                        <div>
                        <p>pub_list_no</p>
                        <p>14002.000</p>
                        <p>Pub List No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                     
                     
                       
                       
                         <!--<td colSpan="2" align="left" valign="top" class="valueFieldDisplayNameTD"   name="collapsible_default">
                           <div > PUB TYPE:</div>
                             
                         </td>-->
                       
                       
                        
                     
                  
                  <div>
                    <p>
                      Pub Type:
                    </p>
                    <div>
                      <p>
                        City Atlas
                      </p>
                      
                        <div>
                        <p>pub_type</p>
                        <p>City Atlas</p>
                        <p>Pub Type</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Maps:
                    </p>
                    <div>
                      <p>
                        88
                      </p>
                      
                        <div>
                        <p>pub_maps</p>
                        <p>88</p>
                        <p>Pub Maps</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Height cm:
                    </p>
                    <div>
                      <p>
                        15
                      </p>
                      
                        <div>
                        <p>pub_height_cm</p>
                        <p>15</p>
                        <p>Pub Height cm</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Pub Width cm:
                    </p>
                    <div>
                      <p>
                        23
                      </p>
                      
                        <div>
                        <p>pub_width_cm</p>
                        <p>23</p>
                        <p>Pub Width cm</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Image No:
                    </p>
                    <div>
                      <p>
                        14002688.jp2
                      </p>
                      
                        <div>
                        <p>image_no</p>
                        <p>14002688.jp2</p>
                        <p>Image No</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Download 1:
                    </p>
                    <div>
                        <p>fullsidurl</p>
                        <p>&lt;a href=https://www.davidrumsey.com/rumsey/download.pl?image=/179/14002688.jp2 target=_blank&gt;Full Image Download in JP2 Format&lt;/a&gt;</p>
                        <p>Download 1</p>
                        
                           <p>false</p>
                           
                        
                      </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Download 2:
                    </p>
                    <div>
                        <p>mrsidsoftwareurl</p>
                        <p>&lt;a href=https://www.extensis.com/support/geoviewer-9 target=_blank &gt;GeoViewer for JP2 and SID files&lt;/a&gt;</p>
                        <p>Download 2</p>
                        
                           <p>false</p>
                           
                        
                      </div>                    
                    
                    
                    
                  </div>
                                
                
              
                
                      
                  
                  <div>
                    <p>
                      Authors:
                    </p>
                    <div>
                      <p>
                        Tallis, John, 1817-1876
                      </p>
                      
                        <div>
                        <p>author_thumbnail_label</p>
                        <p>Tallis, John, 1817-1876</p>
                        <p>Authors</p>
                        
                           <p>false</p>
                           
                        
                      </div>
                      
                    </div>                    
                    
                    
                    
                  </div>
                                
                
              
              
              
              
              
              
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Polish city is using mussels to monitor water quality (2020) (157 pts)]]></title>
            <link>https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality</link>
            <guid>42915113</guid>
            <pubDate>Mon, 03 Feb 2025 04:53:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality">https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality</a>, See on <a href="https://news.ycombinator.com/item?id=42915113">Hacker News</a></p>
Couldn't get https://www.awa.asn.au/resources/latest-news/technology/innovation/polish-city-using-mussels-monitor-water-quality: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[The Dumbest Trade War Fallout Begins (126 pts)]]></title>
            <link>https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44</link>
            <guid>42914478</guid>
            <pubDate>Mon, 03 Feb 2025 03:06:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44">https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44</a>, See on <a href="https://news.ycombinator.com/item?id=42914478">Hacker News</a></p>
Couldn't get https://www.wsj.com/opinion/the-trump-tariff-fallout-begins-canada-mexico-vow-retaliation-economic-uncertainty-da522b44: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Deep Research (489 pts)]]></title>
            <link>https://openai.com/index/introducing-deep-research/</link>
            <guid>42913251</guid>
            <pubDate>Mon, 03 Feb 2025 00:06:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/index/introducing-deep-research/">https://openai.com/index/introducing-deep-research/</a>, See on <a href="https://news.ycombinator.com/item?id=42913251">Hacker News</a></p>
Couldn't get https://openai.com/index/introducing-deep-research/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[The Art of Dithering and Retro Shading for the Web (2024) (118 pts)]]></title>
            <link>https://blog.maximeheckel.com/posts/the-art-of-dithering-and-retro-shading-web/</link>
            <guid>42913180</guid>
            <pubDate>Sun, 02 Feb 2025 23:58:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.maximeheckel.com/posts/the-art-of-dithering-and-retro-shading-web/">https://blog.maximeheckel.com/posts/the-art-of-dithering-and-retro-shading-web/</a>, See on <a href="https://news.ycombinator.com/item?id=42913180">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>August 6, 2024<!-- --> /<!-- --> <!-- -->30 min read</p><p><span>Last Updated:<!-- --> <!-- -->August 10, 2024</span></p></div><div><p>I spent the past few months building my <a href="https://maximeheckel.com/">personal website</a> from the ground up, finally taking the time to incorporate some 3D work to showcase my shader and WebGL skills.
Throughout this work, I got to truly understand the crucial role that <strong>post-processing</strong> plays in making a scene actually <em>look good</em>, which brought some resolutions to long-term frustrations I had with my past React Three Fiber and shader projects where my vision wouldn't materialize regardless of the amount of work and care I was putting into them.</p>
<p>Taking the time to build, combine, and experiment with custom post-processing effects gave me an additional creative outlet, and among the many types I got to iterate on, I always had a particular affection for the several "retro" effects I came up with. With subtle details such as <strong>dithering</strong>, <strong>color quantization</strong>, or <strong>pixelization/CRT RGB cells</strong>, they bring a pleasant contrast between the modern web landscape and a long-gone era of technology we 90s/early 2000s kids are sometime longing for.</p>
<figure></figure>
<p>Given the time I invested dissecting every aspect of these effects, I wanted to dive deep with you into the concepts powering them and the shader techniques I learned along the way. In this article, I hope to convince you of the power of post-processing effects and that nothing beats an elegant retro vibe applied to a website 👌✨. We'll also look into examples of dithering and pixel art from very talented folks who use the same processes that I'll be introducing later on, as well as some of my own creations that I built while learning about all this.</p>


<section id="dithering-techniques-section"><h2 id="dithering-techniques">Dithering techniques</h2>
<p>Dithering originated as an early graphics technique to <em>trick</em> the viewer's brain into seeing more color or smoothness in gradients/shadows that the machines back in the day could output by intentionally introducing noise on top of an image or a render.
Color palettes were very limited back then, thus relying on techniques like these was vital for game designers to realize their vision. This gave, as a result, a unique look and feel to games and media from that specific moment in time where computers became ubiquitous, but advanced graphic capabilities were not yet there.</p>
<p>Today, dithering is more an artistic choice than a workaround. Many artists or game designers use this technique as a creative outlet to give their work a unique <em>retro vibe</em>, calling out to that early gaming era, or work within the realms of self-imposed limits in colors. Some great examples of such use of dithering include:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Basement Studio's <a href="https://chronicles.basement.studio/">Basement Chronicle</a> game: a well-executed <em>point-and-click</em> game that reminds me a lot of my own early gaming experience.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><a href="https://twitter.com/loackme_">@loackme</a>'s art, which I'm an absolute fan of.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><a href="https://twitter.com/aweusmeuh">@aweusmeuh</a>'s use of the original Game Boy camera for experimental photography which features
a sublime dithering effect.</p></li>
</ul>
<figure><p><img alt="Examples of beautifully executed dithering art from left to right by Basement Studio, @aweusmeuh, and @loackme_" loading="lazy" width="700" height="405" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/dithering-examples"></p><figcaption>Examples of beautifully executed dithering art from left to right by Basement Studio, @aweusmeuh, and @loackme_</figcaption></figure>
<p>The latter is how we will approach dithering in this blog post: to give our React Three Fiber/Three.js projects a unique style! In this first part, we'll explore how the dithering technique works, implement it as a shader, and build a first iteration of a custom dithering post-processing effect that we can apply on top of any 3D scene.</p>
<h3 id="a-first-pass-at-dithering-in-react-three-fiber">A first pass at dithering in React Three Fiber</h3>
<p>For this project, we'll create a <strong>custom post-processing effect</strong>. As we did for the <a href="https://blog.maximeheckel.com/posts/moebius-style-post-processing/">Moebius stylized shader</a>, relying on post-processing will allow us to apply a shader to an already rendered scene and alter its style like adding an "image filter" to a photo.</p>

<p>To create a custom effect, we will:</p>
<ol>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Declare a class that extends from <code>Effect</code></p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Define our fragment shader and call it from the parent constructor using the <code>super</code> keyword.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Define the set of uniforms we will need for our effect.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Call the <code>wrapEffect</code> function from <code>@react-three/post-processing</code> with our effect class as an argument. This will allow us to use our effect as a JSX component within <code>EffectComposer</code>.</p></li>
</ol>
<div><div><p data-testid="codesnippet-title">Sample custom shader post-processing effect used in an R3F scene</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">OrbitControls</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">OrthographicCamera</span><span data-testid="content-line">,</span><span data-testid="content-line"> useFBO </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'@react-three/drei'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">Canvas</span><span data-testid="content-line"> </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'@react-three/fiber'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> wrapEffect</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">EffectComposer</span><span data-testid="content-line"> </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'@react-three/postprocessing'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">Effect</span><span data-testid="content-line"> </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'postprocessing'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> </span><span data-testid="content-line">Suspense</span><span data-testid="content-line">,</span><span data-testid="content-line"> useRef</span><span data-testid="content-line">,</span><span data-testid="content-line"> useState </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'react'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"> v4 </span><span data-testid="content-line">as</span><span data-testid="content-line"> uuidv4 </span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'uuid'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">import</span><span data-testid="content-line"> </span><span data-testid="content-line">fragmentShader</span><span data-testid="content-line"> </span><span data-testid="content-line">from</span><span data-testid="content-line"> </span><span data-testid="content-line">'./fragmentShader.glsl'</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>9</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">class</span><span data-testid="content-line"> </span><span data-testid="content-line">RetroEffectImpl</span><span data-testid="content-line"> </span><span data-testid="content-line">extends</span><span data-testid="content-line"> </span><span data-testid="content-line">Effect</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>11</p><p><span><span data-testid="content-line">    </span><span data-testid="content-line">super</span><span data-testid="content-line">(</span><span data-testid="content-line">'RetroEffect'</span><span data-testid="content-line">,</span><span data-testid="content-line"> fragmentShader</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>12</p><p><span><span data-testid="content-line">      </span><span data-testid="content-line">uniforms</span><span data-testid="content-line">:</span><span data-testid="content-line"> </span><span data-testid="content-line">new</span><span data-testid="content-line"> </span><span data-testid="content-line">Map</span><span data-testid="content-line">(</span><span data-testid="content-line">[</span><span data-testid="content-line">]</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>17</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">RetroEffect</span><span data-testid="content-line"> </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">wrapEffect</span><span data-testid="content-line">(</span><span data-testid="content-line">RetroEffectImpl</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>20</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">const</span><span data-testid="content-line"> mesh </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">useRef</span><span data-testid="content-line">(</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>24</p><p><span><span data-testid="content-line">      </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">mesh</span><span data-testid="content-line"> </span><span data-testid="content-line">receiveShadow</span><span data-testid="content-line"> </span><span data-testid="content-line">castShadow</span><span data-testid="content-line">&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>25</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">torusKnotGeometry</span><span data-testid="content-line"> </span><span data-testid="content-line">args</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">[</span><span data-testid="content-line">1</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.25</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">128</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">100</span><span data-testid="content-line">]</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>26</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">meshStandardMaterial</span><span data-testid="content-line"> </span><span data-testid="content-line">color</span><span data-testid="content-line">=</span><span data-testid="content-line">"</span><span data-testid="content-line">cyan</span><span data-testid="content-line">"</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>As a first step to building our effect, we'll start with a simple <strong>luminance-based white noise dithering</strong>. The idea behind this is to:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Look at the <em>luminance</em> of each pixel.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Compare it to a random number (hence the "white noise" in the name).</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Output a white or black pixel based on whether the luminance falls above or below said random number.</p></li>
</ul>
<div><div><p data-testid="codesnippet-title">White noise dithering implemented in a fragment shader of a custom effect</p></div><pre><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">return</span><span data-testid="content-line"> </span><span data-testid="content-line">fract</span><span data-testid="content-line">(</span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">dot</span><span data-testid="content-line">(</span><span data-testid="content-line">c</span><span data-testid="content-line">.</span><span data-testid="content-line">xy</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">12.9898</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">78.233</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">43758.5453</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">whiteNoiseDither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>8</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">if</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">lum </span><span data-testid="content-line">&lt;</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>17</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>18</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> uv</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>20</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">dot</span><span data-testid="content-line">(</span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">0.2126</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.7152</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0722</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>21</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">whiteNoiseDither</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>You can observe the effect that this code would yield on the widget below which re-implements a similar process:</p>


<p>Doing this will result in a grayscale version of our scene where any pixel not purely black or white will be <em>dithered</em> tricking our brains into seeing more shades of gray. The demo below shows the effect applied on top of a simple React Three Fiber scene:</p>

<h3 id="ordered-dithering-and-bayer-matrix">Ordered Dithering and Bayer Matrix</h3>
<p>The effect we just built works, but it relies on white noise for its dithering threshold, leading to a messy result. We can bring order to all this (🥁) using a technique commonly known as <strong>ordered dithering</strong> due to the <em>ordered</em> pattern it yields when applied.</p>
<p>This technique relies on a threshold map defined via a <strong>Bayer Matrix</strong> that contains values used to determine whether we should adjust the color of a given pixel to black or white.</p>

<div data-fullbleed="true"><figure><p><img alt="Diagram showcasing the process of applying the 4x4 Bayer Matrix on the input buffer of a scene and obtaining the dithering pattern based on the threshold value matching each pixel" loading="lazy" width="700" height="298" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/bayermatrix"></p><figcaption>Diagram showcasing the process of applying the 4x4 Bayer Matrix on the input buffer of a scene and obtaining the dithering pattern based on the threshold value matching each pixel</figcaption></figure></div>
<p>To demonstrate how this dithering type works, I built the widget below where you can see how this matrix changes the output of a grid of pixels once applied on top of it:</p>

<p>As you can see through the examples I showcased above, we get some pretty distinct dithering patterns based on</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>the shades of gray used in the underlying pixel grid</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>the size of the Bayer Matrix used to get the threshold value</p></li>
</ul>
<figure><div tabindex="0" role="slider" aria-label="Ordered dithering applied on a simple grayscale gradient" aria-valuemin="0" aria-valuemax="100" aria-valuenow="50"><p><img alt="Before" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscale 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscale 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscale"></p><p><img alt="After" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color"></p><div id="slider-line"><p><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img" style="transform:rotate(180deg)"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></p></div></div><figcaption>Ordered dithering applied on a simple grayscale gradient</figcaption></figure>
<p>To implement this in GLSL, we need to get the luminance of each pixel and compare its value with the corresponding threshold value for that same pixel obtained from the Bayer Matrix:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>if the difference between those values is positive, the pixel is white</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>otherwise, it is black</p></li>
</ul>
<div><div><p data-testid="codesnippet-title">Ordered dithering using a 4x4 Bayer Matrix</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">mat4x4</span><span data-testid="content-line"> bayerMatrix4x4 </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">mat4x4</span><span data-testid="content-line">(</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">orderedDither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>11</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>13</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">4</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>14</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">4</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>15</p><p><span><span data-testid="content-line">  threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix4x4</span><span data-testid="content-line">[</span><span data-testid="content-line">y</span><span data-testid="content-line">]</span><span data-testid="content-line">[</span><span data-testid="content-line">x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>17</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">if</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">lum </span><span data-testid="content-line">&lt;</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">+</span><span data-testid="content-line"> bias</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>Modifying the effect code we implemented in the previous part with the code we just introduced will give us an ordered dithering effect for our underlying scene:</p>


<h3 id="blue-noise-dithering">Blue noise dithering</h3>
<p>We got ourselves a satisfying ordered dithering effect! While this is the most popular dithering technique, as well as the main one we'll leverage in this article, I still wanted to touch upon an additonal way to dither that you perhaps remember seeing in my article on <a href="https://blog.maximeheckel.com/posts/real-time-cloudscapes-with-volumetric-raymarching/">Volumetric Raymarching</a>: <strong>blue noise dithering</strong>.</p>
<p>I used this technique in my raymarched cloud scenes to <em>"erase the banding or layering effect due to a less granular [raymarching] loop"</em> which funny enough is the same use case we need dithering for in our Retro post-processing effect. Unlike the previous techniques, this one relies on a texture that we'll pass to the shader of our custom post-processing effect via a uniform and then sample it as follows:</p>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec4</span><span data-testid="content-line"> noise </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">uNoise</span><span data-testid="content-line">,</span><span data-testid="content-line"> gl_FragCoord</span><span data-testid="content-line">.</span><span data-testid="content-line">xy </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">128.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> noise</span><span data-testid="content-line">.</span><span data-testid="content-line">r</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<p>where <code>128.0</code> is the width/height of said texture. We also define the threshold as the red color channel of the resulting noise color we obtain from the sampling, given that we're using a grayscale texture, it doesn't matter much which value you pick.</p>

<p>Below is the resulting output when we use a blue noise texture to obtain our dithering threshold value:</p>

<p>As you can see, it feels less repetitive and structured than ordered dithering while also not being as <em>random</em> as white noise dithering; a nice middle ground.</p>

</section><section id="color-quantization-section"><h2 id="color-quantization">Color Quantization</h2>
<p>So far, all our dithering examples also converted the underlying scene to black and white, thus making us lose a lot of information and color. That is because:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We calculated our dithering threshold based on the pixel luminance, thus relying on a grayscale version of our scene.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We manually returned a black or white pixel based on the threshold value relative to the luminance.</p></li>
</ul>
<p>That technique is commonly referred to as <strong>luminance-based dithering</strong> and the color conversion used here compresses the color palette to 2-bit: each pixel of the resulting scene with our post-processing effect applied is either black or white, and any shade in-between appears to us through dithering.</p>
<p>This <em>color compression</em> is known as <strong>color quantization</strong>, and it supports more than just black and white pixels as we'll see in this section.</p>
<h3 id="shades-of-gray-and-colors">Shades of gray and colors</h3>
<p>Manually setting the colors of our dithering pattern can quickly get out of hand, especially with large color palettes. Instead, to get more than just a black or white pixel and leverage shades of gray, we'll use a formula to find the nearest neighboring color of a given pixel color based on the total number of colors we want to output in our effect:</p>
<p><code>floor(color * (n - 1) + 0.5)/n - 1</code> where <code>n</code> is the total number of color.</p>
<p>For example, if we wanted only two colors in our final color palette we would get a value of:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><code>vec3(0.0)</code> for the color <code>vec3(0.3)</code> i.e. black</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p><code>vec3(1.0)</code> for the color <code>vec3(0.6)</code> i.e. white</p></li>
</ul>
<p>If we were to increase the number of colors we would get more shades of gray in the case of our grayscale scene.</p>
<div><div><p data-testid="codesnippet-title">Grayscale color quantization implemented in our custom effect</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">lum</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix8x8</span><span data-testid="content-line">[</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">+=</span><span data-testid="content-line"> threshold</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>10</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>11</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>


<figure><div tabindex="0" role="slider" aria-label="Ordered dithering with 2 VS 4 color quantization. Notice how the 4-color variant yields a better looking gradient." aria-valuemin="0" aria-valuemax="100" aria-valuenow="50"><p><img alt="Before" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/2-color"></p><p><img alt="After" loading="eager" width="700" height="364" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/4-color 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/4-color 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/4-color"></p><div id="slider-line"><p><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img" style="transform:rotate(180deg)"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></p></div></div><figcaption>Ordered dithering with 2 VS 4 color quantization. Notice how the 4-color variant yields a better looking gradient.</figcaption></figure>
<p>This formula doesn't just work for shades of gray, we can use it directly on the original pixel color to compute its nearest neighbor:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>for a two-color palette, we'll get the 2 possible values for each color channel thus 2^3 = 8 colors</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>for a four-color palette, it would be 4^3 = 64 colors</p></li>
</ul>
<div><div><p data-testid="codesnippet-title">Color quantization implemented in our custom effect</p></div><pre><div data-testid="highlight-line"><p>1</p><p><span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix8x8</span><span data-testid="content-line">[</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">+=</span><span data-testid="content-line"> threshold</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">colorNum </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>

<p>This quantization technique lets us approximate the look and feel of older graphics. We can obtain color palettes that are more in line with what computers and consoles could output back in the day.</p>

<h3 id="custom-color-palettes">Custom color palettes</h3>
<p>We now know a technique to reduce the number of colors in our final render to an arbitrary number, but what about reducing it to an arbitrary set of colors?</p>
<p>In his <a href="https://www.youtube.com/watch?v=8wOUe32Pt-E&amp;ab_channel=Acerola">video on quantization and dithering</a>, <a href="https://twitter.com/Acerola_t">@Acerola_t</a> introduces a technique to do just that by using the value of a grayscale color palette to sample a texture defining a custom color palette.</p>
<p>For example, if our last grayscale example scene from earlier sets the color number to four, we will get the following grayscale values:</p>
<figure><p><img alt="Diagram showcasing how to use the grayscale values to sample a texture containing the same amount of colors" loading="lazy" width="700" height="362" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/grayscaletexture"></p><figcaption>Diagram showcasing how to use the grayscale values to sample a texture containing the same amount of colors</figcaption></figure>
<p>These values correspond to the horizontal values of the UV coordinates of our color palette texture, thus letting us use those values to sample the texture and get the custom colors from it:</p>
<div><div><p data-testid="codesnippet-title">Using quantization grayscale value to sample custom color palette texture"</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec3</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line">13</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">float</span><span data-testid="content-line"> lum</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">lum</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> x </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">int</span><span data-testid="content-line"> y </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">int</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">%</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">=</span><span data-testid="content-line"> bayerMatrix8x8</span><span data-testid="content-line">[</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">8</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> x</span><span data-testid="content-line">]</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">+=</span><span data-testid="content-line"> threshold </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.2</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>10</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>11</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">4.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>13</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec3</span><span data-testid="content-line"> paletteColor </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">palette</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">r</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>If we were to apply that technique to the previous scene, this is what the final output would look like:</p>

<p>I'd encourage you to fork this demo and try with:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>different textures</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>different number of colors</p></li>
</ul>
<p>The only thing to pay attention to is to keep the number of color blocks in your palette texture the same as the number of color you set in your custom effect.</p>
<h3 id="hue-lightness-based-color-quantization">Hue-lightness-based color quantization</h3>
<p>In his article <a href="http://alex-charlton.com/posts/Dithering_on_the_GPU/">Dithering on the GPU</a> Alex Charlton introduces an alternative color quantization technique. Instead of using the quantization formula we introduced at the beginning of this section, he relies on the hue of a color to find its closest neighboring colors from an arbitrary palette and the lightness of those colors to obtain the ordered dithering pattern.</p>
<p>To do so, he proceeds as follows:</p>
<ol>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>For each pixel, convert the color to HSL (Hue Saturation Lightness).</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Find its two closest neighbors in "hue" from the arbitrary color palette defined statically or provided via a uniform.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Get the distance between the pixel and its closest color over the distance between the previously obtained colors.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Compare this distance with the threshold value from the Bayer Matrix and, based on the result pick the first or second closest color.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Get the distance between the two closest lightness that match the original pixel's color.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Compare this distance with the threshold value from the Bayer Matrix and, based on the result pick the first or second lightness to set in the final color.</p></li>
</ol>
<p>I vividly recommend taking the time to read the full article as it goes in-depth into an original and more artistic dithering process. Below you'll find the demo I re-implemented from the process showcased in the article. It also features some of the missing functions the author did not include in their post.</p>

</section><section id="pixelization-section"><h2 id="pixelization">Pixelization</h2>
<p>We now know how to:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Reduce the number of colors of a given scene to a specific number or an arbitrary color palette.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Use dithering to <em>get back</em> some of the details of the scene in the form of a dithering pattern like shadows or color gradients.</p></li>
</ul>
<p>In this section, we will look at some techniques to <em>downsample</em> the final output of our scene to get a more <strong>pixelated</strong> look and see our dithering and quantization process shine at lower resolutions.</p>
<p>The key to getting a pixelated version of our original scene is to remap the UV coordinate system used in our effect shader and snap it to a grid so, once sampled, the texture from our input buffer appears as if it were at a lower resolution.</p>
<div><div><p data-testid="codesnippet-title">Pixelating a texture in GLSL</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> normalizedPixelSize </span><span data-testid="content-line">=</span><span data-testid="content-line"> pixelSize </span><span data-testid="content-line">/</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uvPixel </span><span data-testid="content-line">=</span><span data-testid="content-line"> normalizedPixelSize </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">uv </span><span data-testid="content-line">/</span><span data-testid="content-line"> normalizedPixelSize</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>5</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> uvPixel</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">uvPixel</span><span data-testid="content-line">,</span><span data-testid="content-line"> color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>In the code snippet above:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We define the size of our pixel via the <code>pixelSize</code> uniform.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We divide this value by the resolution of our scene to convert it to a normalized texture coordinate ranging from 0 to 1.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We snap the UV coordinate to the grid defined by <code>uv/normalizedPixelSize</code> using the <code>floor</code> function.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We rescale the snapped UV coordinates to the original UV space by multiplying the result by <code>normalizedPixelSize</code>.</p></li>
</ul>
<p>The demo below adds this process along with an additional uniform for you to tweak the pixel size used in our scene:</p>

<p>Notice how the higher the value of <code>pixelSize</code> is, the more pixelated our scene becomes.</p>
<p>On top of that, we can see that our dithering pattern becomes less and less visible as the pixel size increases: there are not enough pixels in the final output to get any pattern at all.
We'll have to strike the right balance between dithering pattern and pixel size to get the most compelling effect.</p>
<p>With this added to our effect, we have all the ingredients to produce gorgeous pixel art pieces or pixelated 3D scenes! One thing I immediately tried upon wrapping up this post-processing effect was to try it on top of some of my earlier shader work, like in <a href="https://r3f.maximeheckel.com/dithered-waves">my scene titled Dithering Waves</a> where I applied a grayscale version of it on top of a simple scene rendering a domain wrapping texture using Fractal Brownian Motion, inspired by <a href="https://iquilezles.org/articles/warp/">Inigo Quilez' article</a> on the matter.</p>


<p>To experiment with <a href="https://rauno.me/craft/contrasting-aesthetics">contrasting aesthetics</a>, I also wanted to try out ordered dithering and color quantization on some of my Raymarching work from last year. The ordered pattern contrasts nicely with the more organic nature of some of those scenes, especially at lower resolutions. Below are two examples that I particularily enjoyed:</p>
<figure></figure>
<figure></figure>
</section><section id="cathode-ray-tube-effect-section"><h2 id="cathode-ray-tube-effect">Cathode-Ray Tube effect</h2>
<p>While pixelization brings us one step closer to an accurate retro post-processing effect, there is one essential aspect of this effect that's missing: emulating the look of a good ol' CRT monitor.</p>
<p>CRTs work differently than our current displays. Thus, the best we can do here is to approach the look and feel of those old monitors by stacking a series of effects in our custom shader effect. The first and most fundamental effect that we'll work on, that also highlights the inner workings of CRTs, is the RGB cell pattern from the display.</p>

<h3 id="rgb-cells">RGB Cells</h3>
<p>First and foremost, let's look at how CRT displays work so we can reproduce the effect as accurately as possible. Those monitors have 3 electron guns for each of the color channels (red, green, and blue) that run across the screen and excite their corresponding phosphors, which in return emit light to form an image. To prevent those beams from hitting the wrong phosphor dots and causing color issues on the final image, CRTs use a <strong>shadow mask</strong> with a metal plate made of tiny holes. They can have many different configurations which yield different <em>mask types</em>.</p>
<p>In this section, we'll attempt to emulate the Schiltzmaske: an aperture grill where each column is staggered by half a cell height.</p>
<figure><p><img alt="Diagram showcasing the staggered RGB cells shadow mask effect on a sample scene" loading="lazy" width="700" height="362" decoding="async" data-nimg="1" sizes="100vw" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 640w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 750w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 828w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 1080w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 1200w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 1920w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 2048w, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells 3840w" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbcells"></p><figcaption>Diagram showcasing the staggered RGB cells shadow mask effect on a sample scene</figcaption></figure>
<p>This implementation could also allow us to try to get another mask type called Streifermaske, which is similar except that it does not feature the staggered cells and only features a mask on its column.</p>
<p>The implementation of such a "pixel pattern" in GLSL goes as follows:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We first need to define our RGB cells and their subcells: a slot for each red, green, and blue channel.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> pixel </span><span data-testid="content-line">=</span><span data-testid="content-line"> uv </span><span data-testid="content-line">*</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> coord </span><span data-testid="content-line">=</span><span data-testid="content-line"> pixel </span><span data-testid="content-line">/</span><span data-testid="content-line"> pixelSize</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> subcoord </span><span data-testid="content-line">=</span><span data-testid="content-line"> coord </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">3</span><span data-testid="content-line">,</span><span data-testid="content-line">1</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> cellOffset </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">mod</span><span data-testid="content-line">(</span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">coord</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">3.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We create a cell "offset" for every two cells: some will have an offset of <code>vec2(0.0)</code> and some of <code>vec2(0.0, 0.5)</code>, thus creating the vertical <em>staggered effect</em> of our shadow mask.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> cellOffset </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">mod</span><span data-testid="content-line">(</span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">coord</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">3.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We pick which subcell the current pixel belongs to and output the corresponding subcell color based on the subcell index.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">float</span><span data-testid="content-line"> ind </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">mod</span><span data-testid="content-line">(</span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">subcoord</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">3.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec3</span><span data-testid="content-line"> maskColor </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec3</span><span data-testid="content-line">(</span><span data-testid="content-line">ind </span><span data-testid="content-line">==</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> ind </span><span data-testid="content-line">==</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> ind </span><span data-testid="content-line">==</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We now need to draw the borders of our masks. The first step is to create a set of UV coordinates for each subcell, then make a border vector that gets higher values in the edges of each subcell and lower towards the center. Finally, we blend the result with the current mask color, thus creating a colored subcell with a border.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> cellUv </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">fract</span><span data-testid="content-line">(</span><span data-testid="content-line">subcoord </span><span data-testid="content-line">+</span><span data-testid="content-line"> cellOffset</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">vec2</span><span data-testid="content-line"> border </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> cellUv </span><span data-testid="content-line">*</span><span data-testid="content-line"> cellUv </span><span data-testid="content-line">*</span><span data-testid="content-line"> MASK_BORDER</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">maskColor</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">*=</span><span data-testid="content-line"> border</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> border</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>The last step is to create a <code>rgbCellUV</code> vector that we can use to sample the input buffer of our underlying scene and map it in this new CRT RGB Cell coordinate system.</p></li>
</ul>
<div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> rgbCellUV </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">floor</span><span data-testid="content-line">(</span><span data-testid="content-line">coord</span><span data-testid="content-line">+</span><span data-testid="content-line">cellOffset</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> pixelSize </span><span data-testid="content-line">/</span><span data-testid="content-line"> resolution</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<p>This results in a more accurate look and feel for a retro post-processing effect. Those are the types of details that can make the whole difference when making a 3D scene for the web.</p>
<figure><div tabindex="0" role="slider" aria-label="Pixelization VS RGB Cell shadow mask effect. Notice how the output appears slightly sharper in the RGB Cell variant." aria-valuemin="0" aria-valuemax="100" aria-valuenow="50"><p><img alt="Before" loading="eager" width="700" height="370" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/pixeleffect2 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/pixeleffect2 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/pixeleffect2"></p><p><img alt="After" loading="eager" width="700" height="370" decoding="async" data-nimg="1" srcset="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbeffect2 1x, https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbeffect2 2x" src="https://res.cloudinary.com/dg5nsedzw/image/upload/fl_lossy,f_auto,q_auto/blog/rgbeffect2"></p><div id="slider-line"><p><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img" style="transform:rotate(180deg)"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></p></div></div><figcaption>Pixelization VS RGB Cell shadow mask effect. Notice how the output appears slightly sharper in the RGB Cell variant.</figcaption></figure>
<p>The demo below fully implements the process highlighted above, which yields a beautiful and soft CRT effect. Setting a high pixel size will also allow you to admire our subcells at work, lighting up individually based on the color of the underlying scene.</p>


<h3 id="curving-the-display">Curving the display</h3>
<p>CRTs were not flat like their LCD counterparts. Instead, they featured some slight curvature which we can emulate with a few lines of GLSL. To do so, much like we just did for our RGB cells shadow mask, we can remap our UV coordinates to introduce some curvature:</p>
<div><div><p data-testid="codesnippet-title">Modifying our UVs to introduce curvature to our effect</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> curveUV </span><span data-testid="content-line">=</span><span data-testid="content-line"> uv </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> offset </span><span data-testid="content-line">=</span><span data-testid="content-line"> curveUV</span><span data-testid="content-line">.</span><span data-testid="content-line">yx </span><span data-testid="content-line">*</span><span data-testid="content-line"> curve</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  curveUV </span><span data-testid="content-line">+=</span><span data-testid="content-line"> curveUV </span><span data-testid="content-line">*</span><span data-testid="content-line"> offset </span><span data-testid="content-line">*</span><span data-testid="content-line"> offset</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>5</p><p><span><span data-testid="content-line">  curveUV </span><span data-testid="content-line">=</span><span data-testid="content-line"> curveUV </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>In the code snippet above:</p>
<ol>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>We convert our UV coordinates range to a new range of <code>[-1, 1]</code> as we want the curvature to be <em>centered</em> relative to the screen.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Swapping the x and y components of our UV coordinates and multiplying by a <code>CURVE_INTENSITY</code> variable lets us define the strength/offset of our curvature. In this case, the offset will be stronger at the corners and not as strong as we reach the center of both the x and y-axis.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Finally, we want our curvature to be quadratic, i.e. stronger the closer we get to the fringes of the screen. We then convert the resulting UV coordinates back to a range of <code>[0, 1]</code> allowing us to use it in our shader as the <em>base</em> UVs.</p></li>
</ol>
<p>Using those new UV coordinates, we can draw the <em>edges</em> of our CRT using <code>smoothstep</code>:</p>
<div><div><p data-testid="codesnippet-title">Drawing edges of our curved CRT using curveUV</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">vec2</span><span data-testid="content-line"> edge </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">smoothstep</span><span data-testid="content-line">(</span><span data-testid="content-line">0.</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.02</span><span data-testid="content-line">,</span><span data-testid="content-line"> curveUV</span><span data-testid="content-line">)</span><span data-testid="content-line">*</span><span data-testid="content-line">(</span><span data-testid="content-line">1.</span><span data-testid="content-line">-</span><span data-testid="content-line">smoothstep</span><span data-testid="content-line">(</span><span data-testid="content-line">1.</span><span data-testid="content-line">-</span><span data-testid="content-line">0.02</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.</span><span data-testid="content-line">,</span><span data-testid="content-line"> curveUV</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">*=</span><span data-testid="content-line"> edge</span><span data-testid="content-line">.</span><span data-testid="content-line">x </span><span data-testid="content-line">*</span><span data-testid="content-line"> edge</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">;</span></span></p></div></pre></div>
<p>This gives us black curved edges on the top, bottom, left, and right sides of the display. The demo below implements this curvature element to the effect we've been iterating on since the beginning of this blog post and also lets you tweak the curvature intensity from 0 (flat) to 0.5 (realistically curved, anything higher than that is "too much").</p>


<h3 id="scanlines-distortion-and-final-touches">Scanlines, distortion, and final touches</h3>
<p>In this last part, I wanted to walk you through some of the final touches I added to my own retro post-processing effect to make it as accurate as possible.</p>
<p>One of the first tweaks I felt was necessary was to add some slight chromatic aberration when sampling the input buffer of our effect, which we can find the code of in <a href="https://blog.maximeheckel.com/posts/refraction-dispersion-and-other-shader-light-effects/">Refraction, dispersion, and other shader light effects</a>. Due to the screen curvature and some imperfect alignments of the electron beams of the CRT, it was frequent that color channels would appear slightly offset, yielding a slightly blurred image.</p>
<div><div><p data-testid="codesnippet-title">Arbitrary chromatic aberration applied to our effect</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainImage</span><span data-testid="content-line">(</span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> inputColor</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">const</span><span data-testid="content-line"> </span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">out</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> outputColor</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>4</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec4</span><span data-testid="content-line"> color </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">vec4</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>5</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">r </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> rgbCellUV </span><span data-testid="content-line">+</span><span data-testid="content-line"> SPREAD</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">r</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>6</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">g </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> rgbCellUV</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">g</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>7</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">texture2D</span><span data-testid="content-line">(</span><span data-testid="content-line">inputBuffer</span><span data-testid="content-line">,</span><span data-testid="content-line"> rgbCellUV </span><span data-testid="content-line">-</span><span data-testid="content-line"> SPREAD</span><span data-testid="content-line">)</span><span data-testid="content-line">.</span><span data-testid="content-line">b</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>9</p><p><span><span data-testid="content-line">  color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">dither</span><span data-testid="content-line">(</span><span data-testid="content-line">rgbCellUV</span><span data-testid="content-line">,</span><span data-testid="content-line"> color</span><span data-testid="content-line">.</span><span data-testid="content-line">rgb</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>Moreover, due to the inner workings of CRTs we highlighted earlier, some <strong>Bloom</strong> may also occur. We can consider this using the <code>Bloom</code> component from <code>@react-three/postprocessing</code>.</p>
<div><div><p data-testid="codesnippet-title">Adding Bloom within our EffectComposer</p></div><pre><div data-testid="line"><p>2</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">const</span><span data-testid="content-line"> spaceship </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">useRef</span><span data-testid="content-line">(</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>3</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">const</span><span data-testid="content-line"> effect </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">useRef</span><span data-testid="content-line">(</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line">      </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">group</span><span data-testid="content-line"> </span><span data-testid="content-line">rotation</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">[</span><span data-testid="content-line">0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">Math</span><span data-testid="content-line">.</span><span data-testid="content-line">PI</span><span data-testid="content-line"> </span><span data-testid="content-line">/</span><span data-testid="content-line"> </span><span data-testid="content-line">2</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0</span><span data-testid="content-line">]</span><span data-testid="content-line">}</span><span data-testid="content-line">&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">Spaceship</span><span data-testid="content-line"> </span><span data-testid="content-line">ref</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">spaceship</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>11</p><p><span><span data-testid="content-line">        </span><span data-testid="content-line">&lt;</span><span data-testid="content-line">RetroEffect</span><span data-testid="content-line"> </span><span data-testid="content-line">ref</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">effect</span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">/&gt;</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>14</p><p><span><span data-testid="content-line">          </span><span data-testid="content-line">luminanceThreshold</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">0.05</span><span data-testid="content-line">}</span><span data-testid="content-line"></span></span></p></div><div data-testid="highlight-line"><p>15</p><p><span><span data-testid="content-line">          </span><span data-testid="content-line">luminanceSmoothing</span><span data-testid="content-line">=</span><span data-testid="content-line">{</span><span data-testid="content-line">0.9</span><span data-testid="content-line">}</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>Finally, we can overlay the final output of our custom shader effect with horizontal scanlines running through the screen vertically:</p>
<div><div><p data-testid="codesnippet-title">Simple scanlines added on top of our effect output</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">float</span><span data-testid="content-line"> lines </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">2000.0</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"> time </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">100.0</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>
<p>We can also include some additional distortion to the UV coordinates of our effect by adding code to the <code>mainUv</code> function of our shader. Adding some slight imperfections like these can make our CRT look even more accurate. Below is a simple example, but feel free to further experiment with more complex distortion patterns:</p>
<div><div><p data-testid="codesnippet-title">Adding distortion in mainUv</p></div><pre><div data-testid="line"><p>1</p><p><span><span data-testid="content-line">float</span><span data-testid="content-line"> </span><span data-testid="content-line">noise</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> st</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>6</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>7</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> c </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>8</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> d </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>10</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> u </span><span data-testid="content-line">=</span><span data-testid="content-line"> f</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">*</span><span data-testid="content-line">(</span><span data-testid="content-line">3.0</span><span data-testid="content-line">-</span><span data-testid="content-line">2.0</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>12</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">return</span><span data-testid="content-line"> </span><span data-testid="content-line">mix</span><span data-testid="content-line">(</span><span data-testid="content-line">a</span><span data-testid="content-line">,</span><span data-testid="content-line"> b</span><span data-testid="content-line">,</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>13</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">(</span><span data-testid="content-line">cfloat </span><span data-testid="content-line">noise</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">in</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> st</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>18</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> b </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>19</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> c </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">0.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>20</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> d </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">random</span><span data-testid="content-line">(</span><span data-testid="content-line">i </span><span data-testid="content-line">+</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line">,</span><span data-testid="content-line"> </span><span data-testid="content-line">1.0</span><span data-testid="content-line">)</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>22</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> u </span><span data-testid="content-line">=</span><span data-testid="content-line"> f</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">*</span><span data-testid="content-line">(</span><span data-testid="content-line">3.0</span><span data-testid="content-line">-</span><span data-testid="content-line">2.0</span><span data-testid="content-line">*</span><span data-testid="content-line">f</span><span data-testid="content-line">)</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>24</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">return</span><span data-testid="content-line"> </span><span data-testid="content-line">mix</span><span data-testid="content-line">(</span><span data-testid="content-line">a</span><span data-testid="content-line">,</span><span data-testid="content-line"> b</span><span data-testid="content-line">,</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>25</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">(</span><span data-testid="content-line">c </span><span data-testid="content-line">-</span><span data-testid="content-line"> a</span><span data-testid="content-line">)</span><span data-testid="content-line">*</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>29</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainUv</span><span data-testid="content-line">(</span><span data-testid="content-line">inout</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>30</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> shake </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">noise</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">time </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">400.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">100.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0025</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>32</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">}</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> a</span><span data-testid="content-line">)</span><span data-testid="content-line">*</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">y </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">1.0</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> u</span><span data-testid="content-line">.</span><span data-testid="content-line">x</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">+</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>36</p><p><span><span data-testid="content-line"></span><span data-testid="content-line">void</span><span data-testid="content-line"> </span><span data-testid="content-line">mainUv</span><span data-testid="content-line">(</span><span data-testid="content-line">inout</span><span data-testid="content-line"> </span><span data-testid="content-line">vec2</span><span data-testid="content-line"> uv</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">{</span><span data-testid="content-line"></span></span></p></div><div data-testid="line"><p>37</p><p><span><span data-testid="content-line">  </span><span data-testid="content-line">float</span><span data-testid="content-line"> shake </span><span data-testid="content-line">=</span><span data-testid="content-line"> </span><span data-testid="content-line">(</span><span data-testid="content-line">noise</span><span data-testid="content-line">(</span><span data-testid="content-line">vec2</span><span data-testid="content-line">(</span><span data-testid="content-line">uv</span><span data-testid="content-line">.</span><span data-testid="content-line">y</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">sin</span><span data-testid="content-line">(</span><span data-testid="content-line">time </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">400.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">100.0</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">-</span><span data-testid="content-line"> </span><span data-testid="content-line">0.5</span><span data-testid="content-line">)</span><span data-testid="content-line"> </span><span data-testid="content-line">*</span><span data-testid="content-line"> </span><span data-testid="content-line">0.0025</span><span data-testid="content-line">;</span><span data-testid="content-line"></span></span></p></div></pre></div>

<p>We're finally done! Or at least I was satisfied enough to make this the stopping point of this article, you can still experiment and continue to tweak this shader at your heart's content! You can admire the final version of our retro post-processing effect below, which includes:</p>
<ul>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Color quantization to reduce the number of colors in our final output.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Pixelization and RGB Cell shadow mask effect to create realistic downsampling typically visible in old CRT displays.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Ordered Dithering which alleviates the low pixel and color count in the output image and gives us back some details of the underlying scene in the form of pixel patterns.</p></li>
<li><span data-list-item="true"><svg xmlns="http://www.w3.org/2000/svg" width="22" height="22" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" role="img"><title>Arrow</title><desc>An icon representing an arrow</desc><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg></span><p>Screen Curvature, scanlines with distortions, bloom, and chromatic aberration as final touches to make our effect <em>pop</em>.</p></li>
</ul>

</section><section id="conclusion-section"><h2 id="conclusion">Conclusion</h2>
<p>Through the many examples and techniques we covered, I hope this article demonstrated how powerful custom shader effects are and how transformative they can be when applied on top of your own WebGL/3D work. This particular "Retro" effect is, of course, just a particular case of a beautiful effect you can build, a drop in the ocean of what's possible. The underlying <strong>dithering</strong>, <strong>quantization</strong>, and <strong>pixelization/RGB Cells</strong> that we learned about are applicable on their own as well as infinitely tweakable to make your work stand out in the ever-growing scene of 3D websites and digital art.</p>
<p>I'm looking forward to seeing what you will come up with now that you know pretty much everything I do on the matter (there are no excuses not to build!), there's a lot you can create by combining the effect and building blocks we've just seen. Meanwhile, I'll keep working through my endless list of shader techniques to study, and the many other post-processing effects and styles I'm trying to mimic. As always, I'll report back on my findings 😊.</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[GarminDB (273 pts)]]></title>
            <link>https://github.com/tcgoetz/GarminDB</link>
            <guid>42912515</guid>
            <pubDate>Sun, 02 Feb 2025 22:27:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/tcgoetz/GarminDB">https://github.com/tcgoetz/GarminDB</a>, See on <a href="https://news.ycombinator.com/item?id=42912515">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://github.com/tcgoetz/GarminDB/wiki/Screenshots"><img src="https://raw.githubusercontent.com/tcgoetz/GarminDB/master/Screenshots/Screen_Shot_jupyter_daily_sm.jpg" alt="Screen shot of a daily graph"></a></p>
<hr>
<p dir="auto"><a href="https://github.com/tcgoetz/GarminDB/wiki/Screenshots"><img src="https://raw.githubusercontent.com/tcgoetz/GarminDB/master/Screenshots/Screen_Shot_activity_sm.jpg" alt="Screen shot of an activity display"></a></p>
<hr>
<p dir="auto"><a href="https://github.com/tcgoetz/GarminDB/wiki/Screenshots"><img src="https://github.com/tcgoetz/GarminDB/raw/master/Screenshots/Screen_Shot_daily_trend.png" alt="Screen shot of daily trend "></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">GarminDB</h2><a id="user-content-garmindb" aria-label="Permalink: GarminDB" href="#garmindb"></a></p>
<p dir="auto"><a href="https://www.python.org/" rel="nofollow">Python</a> scripts for parsing health data into and manipulating data in a <a href="http://sqlite.org/" rel="nofollow">SQLite</a> database. SQLite is a light weight database that doesn't require a server.</p>
<p dir="auto">What they can do:</p>
<ul dir="auto">
<li>Automatically download and import Garmin daily monitoring files (all day heart rate, activity, climb/descend, stress, and intensity minutes) from the user's Garmin Connect "Daily Summary" page.</li>
<li>Extract sleep, weight, and resting heart rate data from Garmin Connect, store it as JSON files, and import it into the DB.</li>
<li>Download and import activity files from Garmin Connect. A summary table for all activities and more detailed data for some activity types. Lap and record entries for activities.</li>
<li>Summarizing data into a DB with tables containing daily, weekly, monthly, and yearly summaries.</li>
<li>Graph your data from the commandline or with Jupyter notebooks.</li>
<li>Retain downloaded JSON and FIT files so that the DB can be regenerated without connecting to or redownloading data from Garmin Connect.</li>
<li>Export activities as TCX files.</li>
</ul>
<p dir="auto">Once you have your data in the DB, I recommend using a supplied Jupyter notebooks, third party Jupyter notebooks, and/or SQLite browser like <a href="http://sqlitestudio.pl/" rel="nofollow">SQLite Studio</a>, <a href="https://www.heidisql.com/" rel="nofollow">HeidiSQL</a>, or <a href="https://sqlitebrowser.org/" rel="nofollow">DB Browser for SQLite</a> for browsing and working with the data. The scripts create some default <a href="http://www.tutorialspoint.com/sqlite/sqlite_views.htm" rel="nofollow">views</a> in the DBs that make browsing the data easier.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Using It</h2><a id="user-content-using-it" aria-label="Permalink: Using It" href="#using-it"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Releases</h2><a id="user-content-releases" aria-label="Permalink: Releases" href="#releases"></a></p>
<p dir="auto">GarminDb releases are hosted on <a href="https://pypi.org/project/garmindb/" rel="nofollow">PyPI</a>. GarminDb requires <a href="https://www.python.org/" rel="nofollow">Python</a> 3.x. With Python installed, install the latest release with <a href="https://pypi.org/project/pip/" rel="nofollow">pip</a> by running <code>pip install garmindb</code> in a terminal.</p>
<ul dir="auto">
<li>Copy <a href="https://github.com/tcgoetz/GarminDB/raw/master/garmindb/GarminConnectConfig.json.example"><code>GarminConnectConfig.json.example</code></a> to <code>~/.GarminDb/GarminConnectConfig.json</code>, edit it, and add your Garmin Connect username and password and adjust the start dates to match the dates of your data in Garmin Connect.</li>
<li>Starting out: download all of your data and create your db by running <code>garmindb_cli.py --all --download --import --analyze</code> in a terminal.</li>
<li>Incrementally update your db by downloading the latest data and importing it by running <code>garmindb_cli.py --all --download --import --analyze --latest</code> in a terminal.</li>
<li>Ocassionally run <code>garmindb_cli.py --backup</code> to backup your DB files.</li>
</ul>
<p dir="auto">Update to the latest release with <code>pip install --upgrade garmindb</code>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">From Source</h2><a id="user-content-from-source" aria-label="Permalink: From Source" href="#from-source"></a></p>
<p dir="auto">The scripts are automated with <a href="https://www.gnu.org/software/make/manual/make.html" rel="nofollow">Make</a>. Run the Make commands in a terminal window.</p>
<ul dir="auto">
<li>Git clone GarminDB repo using the <a href="https://github.com/git-guides/git-clone#git-clone-with-ssh">SSH clone method</a>. The submodules require you to use SSH and not HTTPS. Get the command from the green button on the project home page.</li>
<li>Run <code>make setup</code> in the cloned tree to get the scripts ready to process data.</li>
<li>Copy <a href="https://github.com/tcgoetz/GarminDB/raw/master/garmindb/GarminConnectConfig.json.example"><code>GarminConnectConfig.json.example</code></a> to <code>~/.GarminDb/GarminConnectConfig.json</code>, edit it, and add your Garmin Connect username and password and adjust the start dates to match the dates of your data in Garmin Connect.</li>
<li>Run <code>make create_dbs</code> once to fetch and process for you data.</li>
<li>Keep all of your local data up to date by periodically running only one command: <code>make</code>.</li>
</ul>
<p dir="auto">There is more help on <a href="https://github.com/tcgoetz/GarminDB/wiki/Usage">using the program</a> in the wiki.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Jupyter Notebooks</h2><a id="user-content-jupyter-notebooks" aria-label="Permalink: Jupyter Notebooks" href="#jupyter-notebooks"></a></p>
<p dir="auto">Jupyter notebooks for analzing data from the database can be found in the 'Jupyter' directory in the source tree. <a href="https://github.com/tcgoetz/GarminDB/wiki/Related-Projects#jupyter-notebooks">Links</a> to user submitted notebooks can be found in the wiki.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Plugins</h2><a id="user-content-plugins" aria-label="Permalink: Plugins" href="#plugins"></a></p>
<p dir="auto">Plugins allow the user to expand the types of data that are processed and stored in the database. GarminDb already has a number of plugins for handling data from third-party Connect IQ apps and data fields. Read more about plugins <a href="https://github.com/tcgoetz/GarminDbPlugins">here</a>.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Support This Project</h2><a id="user-content-support-this-project" aria-label="Permalink: Support This Project" href="#support-this-project"></a></p>
<p dir="auto">Do you find this project useful? <a href="https://www.buymeacoffee.com/tcgoetz" rel="nofollow"><img src="https://camo.githubusercontent.com/67f1b859c85032255c81e5f861a5f572fa25813c2ea5e7623b7efa91c395e37f/68747470733a2f2f63646e2e6275796d6561636f666665652e636f6d2f627574746f6e732f64656661756c742d6f72616e67652e706e67" alt="Buy Me A Coffee" height="41" width="174" data-canonical-src="https://cdn.buymeacoffee.com/buttons/default-orange.png"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Success Stories</h2><a id="user-content-success-stories" aria-label="Permalink: Success Stories" href="#success-stories"></a></p>
<p dir="auto">Find out who's using GarminDb on what platforms, OSes, and python versions <a href="https://github.com/tcgoetz/GarminDB/wiki/Success-Stories">here</a>. If you're using GarminDB and your scenario isn't listed send me a message or file an issue with your success case.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Notes</h2><a id="user-content-notes" aria-label="Permalink: Notes" href="#notes"></a></p>
<ul dir="auto">
<li>You may get a DB version exception after updating the code, this means that the DB schema was updated and you need to rebuild your DBs by running <code>garmindb_cli.py --rebuild_db</code>. Your DBs will be regenerated from the previously downloaded data files. All of your data will not be redownloaded from Garmin.</li>
<li>The scripts were developed on MacOS. Information or patches on using these scripts on other platforms are welcome.</li>
<li>When a database update finishes, a summary of the data in the DB will be saved to stats.txt. The output includes the date ranges included in the downloaded daily monitoring files and activities. It includes the number of records for daily monitoring, activities, sleep, resting heart rate, weight, etc. Use the summary information to determine if all of your data has been downloaded from Garmin Connect. If not, adjust the dates in GarminConnectConfig.json and runt he download again.</li>
<li>In <code>GarminConnectConfig.json</code> the "steps" element of the "course_views" is list of course ids that per course database views will be generated for. The database view allows you to compare all activities from that course.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Bugs and Debugging</h2><a id="user-content-bugs-and-debugging" aria-label="Permalink: Bugs and Debugging" href="#bugs-and-debugging"></a></p>
<ul dir="auto">
<li>If you have issues, file a bug here on the project. See the Issues tab at the top of the project page. Run <code>make bugreport</code> or <code>garmindb_bug_report.py</code> and include bugreport.txt in your bug report.</li>
<li>Besides errors that appear on the screen, one of the first places to look for more information is the log files (garmindb.log).</li>
<li>If you're having issues with a particular data files, please considering sharing so I can debug it and add support.</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Contributing</h2><a id="user-content-contributing" aria-label="Permalink: Contributing" href="#contributing"></a></p>
<p dir="auto">Please submit a pull request targeting the develop branch and add your self to the contributors file. Run <code>make flake8</code> at the top level and fix all errors before submitting your pull request.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[F-strings for C++26 proposal [pdf] (157 pts)]]></title>
            <link>https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf</link>
            <guid>42912438</guid>
            <pubDate>Sun, 02 Feb 2025 22:19:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf">https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2024/p3412r0.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=42912438">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Emergence of a second law of thermodynamics in isolated quantum systems (118 pts)]]></title>
            <link>https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309</link>
            <guid>42912412</guid>
            <pubDate>Sun, 02 Feb 2025 22:15:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309">https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309</a>, See on <a href="https://news.ycombinator.com/item?id=42912412">Hacker News</a></p>
Couldn't get https://journals.aps.org/prxquantum/abstract/10.1103/PRXQuantum.6.010309: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Don't make fun of renowned author Dan Brown (2013) (225 pts)]]></title>
            <link>https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/</link>
            <guid>42912133</guid>
            <pubDate>Sun, 02 Feb 2025 21:42:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/">https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/</a>, See on <a href="https://news.ycombinator.com/item?id=42912133">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
		<main id="main" role="main">

		
			
<article id="post-945">
	
	<!-- .entry-header -->

	<div>
		<div>
<p><a href="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg"><img data-attachment-id="946" data-permalink="https://onehundredpages.wordpress.com/2013/06/12/dont-make-fun-of-renowned-dan-brown/dan-brown/" data-orig-file="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg" data-orig-size="236,363" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;}" data-image-title="dan brown" data-image-description="" data-image-caption="" data-medium-file="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=195" data-large-file="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=236" alt="dan brown" src="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=768" srcset="https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg 236w, https://onehundredpages.wordpress.com/wp-content/uploads/2013/06/dan-brown.jpg?w=98&amp;h=150 98w" sizes="(max-width: 236px) 100vw, 236px"></a></p>
<p>Renowned author Dan Brown woke up in his luxurious four-poster bed in his expensive $10 million house – and immediately he felt angry. Most people would have thought that the 48-year-old man had no reason to be angry. After all, the famous writer had a new book coming out. But that was the problem. A new book meant an inevitable attack on the rich novelist by the wealthy wordsmith’s fiercest foes. The critics.</p>
</div>
<p>Renowned author Dan Brown hated the critics. Ever since he had become one of the world’s top renowned authors they had made fun of him. They had mocked bestselling book&nbsp;<i>The Da Vinci Code</i>, successful novel&nbsp;<i>Digital Fortress</i>, popular tome&nbsp;<i>Deception Point</i>, money-spinning volume&nbsp;<i>Angels &amp; Demons</i>&nbsp;and chart-topping work of narrative fiction&nbsp;<i>The Lost Symbol</i>.</p>
<p>The critics said his writing was clumsy, ungrammatical, repetitive and repetitive. They said it was full of unnecessary tautology. They said his prose was swamped in a sea of mixed metaphors. For some reason they found something funny in sentences such as “His eyes went white, like a shark about to attack.”&nbsp;<i>They even say my books are packed with banal and superfluous description</i>, thought the 5ft 9in man. He particularly hated it when they said his imagery was nonsensical. It made his insect eyes flash like a rocket.</p>
<p>Renowned author Dan Brown got out of his luxurious four-poster bed in his expensive $10 million house and paced the bedroom, using the feet located at the ends of his two legs to propel him forwards. He knew he shouldn’t care what a few jealous critics thought. His new book Inferno was coming out on Tuesday, and the 480-page hardback published by Doubleday with a recommended US retail price of $29.95 was sure to be a hit. Wasn’t it?</p>
<div>
<p><i>I’ll call my agent</i>, pondered the prosperous scribe. He reached for the telephone using one of his two hands. “Hello, this is renowned author Dan Brown,” spoke renowned author Dan Brown. “I want to talk to literary agent John Unconvincingname.”</p>
<p>“Mr Unconvincingname, it’s renowned author Dan Brown,” told the voice at the other end of the line. Instantly the voice at the other end of the line was replaced by a different voice at the other end of the line. “Hello, it’s literary agent John Unconvincingname,” informed the new voice at the other end of the line.</p>
<p>“Hello agent John, it’s client Dan,” commented the pecunious scribbler. “I’m worried about new book Inferno. I think critics are going to say it’s badly written.”</p>
<p>The voice at the other end of the line gave a sigh, like a mighty oak toppling into a great river, or something else that didn’t sound like a sigh if you gave it a moment’s thought. “Who cares what the stupid critics say?” advised the literary agent. “They’re just snobs. You have millions of fans.”</p>
<p><i>That’s true</i>, mused the accomplished composer of thrillers that combined religion, high culture and conspiracy theories. His books were read by everyone from renowned politician President Obama to renowned musician Britney Spears. It was said that a copy of&nbsp;<i>The Da Vinci Code</i>&nbsp;had even found its way into the hands of renowned monarch the Queen. He was grateful for his good fortune, and gave thanks every night in his prayers to renowned deity God.</p>
<p>“Think of all the money you’ve made,” recommended the literary agent. That was true too. The thriving ink-slinger’s wealth had allowed him to indulge his passion for great art. Among his proudest purchases were a specially commissioned landscape by acclaimed painter Vincent van Gogh and a signed first edition by revered scriptwriter William Shakespeare.</p>
<p>Renowned author Dan Brown smiled, the ends of his mouth curving upwards in a physical expression of pleasure. He felt much better. If your books brought innocent delight to millions of readers, what did it matter whether you knew the difference between a transitive and an intransitive verb?</p>
<p>“Thanks, John,” he thanked. Then he put down the telephone and perambulated on foot to the desk behind which he habitually sat on a chair to write his famous books on an Apple iMac MD093B/A computer. New book Inferno, the latest in his celebrated series about fictional Harvard professor Robert Langdon, was inspired by top Italian poet Dante. It wouldn’t be the last in the lucrative sequence, either. He had all the sequels mapped out. The Mozart Acrostic. The Michelangelo Wordsearch. The Newton Sudoku.</p>
<p>The 190lb adult male human being nodded his head to indicate satisfaction and returned to his bedroom by walking there. Still asleep in the luxurious four-poster bed of the expensive $10 million house was beautiful wife Mrs Brown. Renowned author Dan Brown gazed admiringly at the pulchritudinous brunette’s blonde tresses, flowing from her head like a stream but made from hair instead of water and without any fish in. She was as majestic as the finest sculpture by Caravaggio or the most coveted portrait by Rodin.&nbsp;<i>I like the attractive woman</i>, thought the successful man.</p>
<p>Perhaps one day, inspired by beautiful wife Mrs Brown, he would move into romantic poetry, like market-leading British rhymester John Keats.<i>That would be good</i>, opined the talented person, and got back into the luxurious four-poster bed. He felt as happy as a man who has something to be happy about and is suitably happy about it.</p>
<p>Inferno by Dan Brown 470pp, Bantam Press, rrp £20</p>

</div>

			
						</div><!-- .entry-content -->

	
	<!-- .entry-footer -->
</article><!-- #post-## -->

			
<!-- #comments -->

				<!-- .navigation -->
	
		
		</main><!-- #main -->
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Costa rican supermarket wins trademark battle against Nintendo (275 pts)]]></title>
            <link>https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court</link>
            <guid>42911842</guid>
            <pubDate>Sun, 02 Feb 2025 21:07:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court">https://ticotimes.net/2025/01/30/david-vs-goliath-costa-rican-super-mario-defeats-nintendo-in-court</a>, See on <a href="https://news.ycombinator.com/item?id=42911842">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-td-block-uid="tdi_70">

<p>A small Costa Rican supermarket has emerged victorious from a legal battle against the renowned video game giant, Nintendo. José Mario Alfaro González, owner of “Super Mario” in San Ramón de Alajuela, found himself in an unexpected legal showdown when he attempted to formally register his store’s name. In Costa Rica, the term “super” is often used as shorthand for “supermarket.”</p>



<p>What began as a routine trademark registration process turned into a clash of the titans when Nintendo of America filed an appeal, claiming exclusive rights to the “Super Mario” name. The video game behemoth, creator of iconic titles like Super Mario Bros., asserted that the name was registered under its <a href="https://ticotimes.net/2005/08/26/trademark-use-registration" target="_blank" rel="noreferrer noopener">trademark</a> in various classes, including clothing, games, and accessories.</p>



<p>However, Alfaro intended to register “Super Mario” specifically for international class 35, which covers “supply services for third parties of products from the basic food basket.” “We knew these big companies have vast resources to fight, and we had to think carefully,” said Edgardo Jiménez, Alfaro’s legal representative. “We even considered changing the supermarket’s name to avoid a lawsuit.”</p>



<p>But Alfaro and Jiménez persevered, and on January 21st, the National Registry issued a final notification in favor of “Super Mario” de San Ramón. It was game over for Nintendo, and the small Costa Rican business had won the legal bout. “We refuted all of Nintendo’s arguments, demonstrating their errors and our rightful claim,” Jiménez explained. “Although Nintendo’s registration covers 45 categories, it doesn’t include the specific class for suppliers of basic food products.”</p>



<p>As of yet, <a href="https://www.nintendo.com/us/" target="_blank" rel="noreferrer noopener">Nintendo</a> has not issued an official statement or comment on the outcome. This legal victory is a testament to the determination of a small Costa Rican entrepreneur who stood his ground against a global corporation, proving that even the smallest of players can triumph in the face of seemingly insurmountable odds.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A loophole used by Shein/Temu to ship packages to US tax-free (2024) (127 pts)]]></title>
            <link>https://www.businessinsider.com/shein-temu-de-minimis-tax-loophole-scrutiny-2024-1</link>
            <guid>42911511</guid>
            <pubDate>Sun, 02 Feb 2025 20:31:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.businessinsider.com/shein-temu-de-minimis-tax-loophole-scrutiny-2024-1">https://www.businessinsider.com/shein-temu-de-minimis-tax-loophole-scrutiny-2024-1</a>, See on <a href="https://news.ycombinator.com/item?id=42911511">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-component-type="content-lock" data-load-strategy="exclude" id="piano-inline-content-wrapper" data-piano-inline-content-wrapper="" data-user-status="anonymous" data-track-content="" data-post-type="post">
                                    <ul><li>A US tax rule called de minimis has gotten increased attention as Shein and Temu have grown.&nbsp;</li><li>Detractors say it creates unfair competition and allows companies to bypass trade laws.&nbsp;</li><li>Shein and Temu representatives said they support de minimis reform — as long as it's fair.&nbsp;</li></ul><p>As Shein and Temu <a target="_blank" href="https://www.businessinsider.com/temu-passes-shein-in-traffic-purchasing-visits-hasnt-surpassed-amazon-2023-9" data-analytics-product-module="body_link" rel="">grow their foothold in the US</a>, analysts and lawmakers are paying close attention to both companies' use of a special tax rule that some say should be eliminated completely.</p><!-- Excluded mobile ad on desktop --><p>The provision, known as "de minimis," allows importers to avoid paying duty and tax on shipments that are going to individual consumers and are worth less than $800 in total.</p><p>Shippers using de minimis also do not have to provide as much information to US Customs and Border Protection as shippers using more traditional methods would.<strong> </strong>Opponents of the rule argue it creates unfair competition, and the lack of in-depth screening could allow for the <a target="_blank" href="https://www.businessinsider.com/shein-and-temu-skirt-import-tariffs-us-lawmakers-fast-fashion-2023-6" data-analytics-product-module="body_link" rel="">import of goods</a> containing banned materials like <a target="_blank" href="https://www.businessinsider.com/temu-blamed-shoppers-for-buying-forced-labor-lawmakers-say-2023-6" data-analytics-product-module="body_link" rel="">cotton from Xinjiang</a>, where forced labor is common.</p><!-- Excluded mobile ad on desktop --><p>De minimis has been around since 1938 when Congress introduced the rule in order to speed up the processing of items that were so cheap that they would not generate significant tax revenue for the government. The limit for eligible items has been raised many times over the years, most recently going up to $800 from $200 in 2016.</p><p>Two bills aimed at reforming de minimis were introduced in Congress last June. One, introduced by Rep. Earl Blumenauer, aims to limit companies in "nonmarket" economies <strong>—</strong>&nbsp;or countries where prices do not follow market dynamics, such as China and Russia<strong> — </strong>and countries on priority watch lists from using de minimis shipments. The other bill, from Sen. Bill Cassidy and Sen. Tammy Baldwin, would ban de minimis shipments from China.</p><p>But some experts say it's unlikely the provision will go away anytime soon.</p><!-- Excluded mobile ad on desktop --><p>A US trade law and policy expert interviewed by Bank of America analysts put the odds of Blumenauer's bill passing the Senate at more than 50% but said it had a roughly 30% chance of passing overall "given issues in the House," according to a research note the bank published on January 5. The same expert said the bill introduced by Cassidy and Baldwin was unlikely to pass in Congress.</p><p>"While many retailers are likely in favor of these bills, groups like the US Chamber of Commerce or the Express Shippers Association may not be in favor of them since they generally are looking for fewer tariffs, not more," UBS analyst Jay Sole wrote in a research note in August. "Also, direct carriers, direct importers, and logistics companies may not be in favor of a change since their businesses may benefit from the $800 rule."</p><p>The provision is more likely to change — a prospect that both Shein and Temu have said they support.</p><!-- Excluded mobile ad on desktop --><h2>A 'paradigm shift'</h2><p>Shein and Temu are not the only companies to use the de minimis provision, but they have gained the attention of advocacy groups and lawmakers in part because of how quickly they have grown in the last year.</p>
                          
                          
                          
                                 
                          <p>Shein, which was founded in China in 2008 but moved its headquarters to Singapore in late 2021, <a target="_blank" href="https://www.businessinsider.com/what-is-shein-billion-dollar-fast-fashion-company-explained-2023-7" data-analytics-product-module="body_link" rel=""><u>filed confidentially</u></a> for a US IPO in November. It's reportedly looking for a valuation of $90 billion.</p><p>Temu, meanwhile, is owned by Chinese commerce giant Pinduoduo Holdings and headquartered in Boston. It has grown extremely fast since launching in the US in September 2022, outpacing many more established e-commerce companies in terms of app downloads and <a target="_blank" href="https://www.insiderintelligence.com/content/shoppers-spend-nearly-twice-long-on-temu-s-app-than-its-competitors" data-analytics-product-module="body_link" rel=" nofollow"><u>engagement</u></a>.</p><!-- Excluded mobile ad on desktop -->
                            <figure data-type="img" data-e2e-name="image-figure-image" data-media-container="image" itemscope="" itemtype="https://schema.org/ImageObject">
                            
                            
                            
                              <div>
                          
                            
                            <meta itemprop="contentUrl" content="https://i.insider.com/64da3c621f51cc001968df91">
                            <p><img src="data:image/svg+xml,%3C%3Fxml version='1.0' encoding='UTF-8'%3F%3E%3Csvg xmlns='http://www.w3.org/2000/svg' width='1' height='1'/%3E" data-content-type="image/jpeg" data-srcs="{&quot;https://i.insider.com/64da3c621f51cc001968df91&quot;:{&quot;contentType&quot;:&quot;image/jpeg&quot;,&quot;aspectRatioW&quot;:4032,&quot;aspectRatioH&quot;:3024}}" alt="flat lay image of Temu package, checkered pants, and pink heels">
                          </p></div>
                            
                            <span>
                                  <figcaption data-e2e-name="image-caption">
                                    Goods bought on Temu.
                                    
                            <span data-e2e-name="image-source" itemprop="creditText">
                            
                            Jennifer Ortakales Dawkins/Insider
                            
                            </span>
                                  </figcaption>
                                </span>
                            </figure>
                          <p>Shipping consultancy ShipMatrix estimates that Shein and Temu each ship more than a million packages to the US daily.</p><p>An interim 2023 report from the US House Select Committee on the Chinese Communist Party said that Shein and Temu "likely" account for more than 30% of all shipments made to the US under the de minimis provision. It added that almost 50% of all de minimis shipments to the US come from China.</p><p>Shipping directly from manufacturers to individual consumers helps Shein and Temu keep prices low. Wired reported in May that the <a target="_blank" href="https://www.wired.com/story/temu-is-losing-millions-of-dollars-to-send-you-cheap-socks/" data-analytics-product-module="body_link" rel=" nofollow"><u>average order on Temu was about $25</u></a>, while <a target="_blank" href="https://www.barrons.com/articles/shein-clothing-shopping-retail-challenger-16d512db" data-analytics-product-module="body_link" rel=" nofollow"><u>Shein's was about $70 as of April</u></a>, according to Barron's.</p><!-- Excluded mobile ad on desktop --><p>The Bank of America analysts wrote in their research note that if de minimis were to change or go away completely, it could be disruptive for these companies.</p><p>"Changes to the exemption could create a paradigm shift for retailers like Temu and Shein," Bank of America analysts wrote in the note. "The discount prices charged by both retailers are aided by the absence of duties and the lack of trade and customs infrastructure that would be required if this regulation did not exist."</p><p>The analysts added that they "wouldn't expect price increases to be well-accepted by the consumer."</p><!-- Excluded mobile ad on desktop --><p>Representatives for Shein and Temu pushed back on the notion that their businesses have relied on de minimis to grow and said that they support reforms to the provision if they are fair.</p><p>"Our success has come from our ability to leverage on-demand technology to bring the latest styles to customers efficiently and at an affordable price," a spokesperson for Shein said.</p><p>In a July letter to the American Apparel and Footwear Association, Shein's executive vice chairman, Donald Tang wrote that the company supports "responsible reform of the de minimis exemption."</p><!-- Excluded mobile ad on desktop --><p>"SHEIN believes the de minimis framework should be reformed to create a more level, transparent playing field — one where all retailers play by the same rules, and where the rules are applied evenly and equally, regardless of where a company is based or ships from," he wrote.</p><p>A spokesperson for Temu said its "supply-chain efficiencies and operational proficiencies" have been the primary drivers of its rapid growth.</p><p>"We are open to and supportive of any policy adjustments made by legislators that align with consumer interests. We believe that as long as these policies are fair, they won't influence the outcomes of competitive business dynamics," they said. "We also see such reforms as potential avenues to alleviate concerns among various stakeholders, fostering greater comprehension and emphasizing the significance of each player in the market ecosystem."</p><!-- Excluded mobile ad on desktop --><p>The two companies also detailed their practices for remaining compliant with import laws. The Shein spokesperson said that the company has a "zero-tolerance policy for forced labor" and requires its manufacturers to only source cotton from approved regions. The Temu spokesperson said it requires its sellers to sign an agreement that they will maintain compliant business practices, and that "the use of forced, penal, or child labor is strictly prohibited."</p><h2>'If you can't beat 'em, join 'em'</h2><p>Other <a target="_blank" href="https://www.nytimes.com/2023/11/04/business/dealbook/us-retailers-say-an-old-trade-law-puts-them-at-a-disadvantage.html#:~:text=The%20rule%2C%20known%20as%20de,are%20textile%20and%20apparel%20products." data-analytics-product-module="body_link" rel=" nofollow"><u>opposition to de minimis has come from US retailers and trade groups</u></a> concerned about their ability to compete with companies shipping cheaply from China. Many retailers manufacture their products abroad and then ship them to the US in large quantities, meaning they can't use the de minimis provision as easily as Shein and Temu have.</p><p>"The textile industry is probably the biggest proponent against de minimis because they've got all their mills, they're making shirts, pants," said Steve Story, executive vice president at Apex Logistics International, which specializes in de minimis. "I can order a shirt from China at a quarter of the price, or I can go to Macy's, Nordstrom's, or Walmart and buy it."</p><!-- Excluded mobile ad on desktop --><p>He said that companies like Shein and Temu do not have to serve as the importers of record and are therefore not responsible for certifying the origin of items on their platforms.</p><p>"However, they're facilitating the sale for export to the United States, so they do have a financial interest in the merchandise," Story said. He serves on several committees exploring possible changes to de minimis, including a customs bond that would allow customs to make a claim in the event of a policy violation.</p><p>While many apparel retailers have spoken out against de minimis, an expert interviewed by UBS' Sole said that many retailers outside clothing are taking an "if you can't beat 'em, join 'em" approach and exploring ways they, too, can use de minimis to lower their costs instead of changing the rule altogether.</p><!-- Excluded mobile ad on desktop --><p>Satish Jindel, founder and president of ShipMatrix, said companies could lean on de minimis to lower their own prices.</p><p>"The companies who think it is not helping them should be looking at it and saying, how do I utilize that opportunity to revise and refine my business model to lower the cost of operating," Jindel said.</p><p><em>Got a tip? Contact this reporter at mstone@insider.com, mlstone@protonmail.com, or on the secure messaging app Signal at (646) 889-2143 using a non-work phone.&nbsp;</em></p>
                        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Waydroid – Android in a Linux container (432 pts)]]></title>
            <link>https://waydro.id/</link>
            <guid>42911042</guid>
            <pubDate>Sun, 02 Feb 2025 19:29:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://waydro.id/">https://waydro.id/</a>, See on <a href="https://news.ycombinator.com/item?id=42911042">Hacker News</a></p>
<div id="readability-page-1" class="page">
  <!-- ====== Header Start ====== -->
  
  <!-- ====== Header End ====== -->
  <!-- ====== Hero Start ====== -->
  <div id="home">
          <div data-wow-delay=".2s">
            <p><img src="https://waydro.id/assets/images/hero/waydroid_white_tb.png"></p><p> A container-based approach to boot a full Android system on regular GNU/Linux systems running Wayland based desktop environments. </p>
            <ul>
              <li>
                <a href="#docs" rel="nofollow noopener"> Documentation</a>
              </li>
              <li>
                <a href="#about" rel="nofollow noopener"> Learn More <i></i>
                </a>
              </li>
            </ul>
          </div>
          <div data-wow-delay=".25s">
            <div id="carouselExampleCaptions" data-bs-ride="carousel">
                <div>
                  <p><img src="https://waydro.id/assets/images/hero/main_landing.jpeg"></p><div>
                    <h5>Full Integration Of Android on Linux</h5>
                    <p>Using Waydroid's Multi-Window Mode</p>
                  </div>
                </div>
                <div>
                  <p><img src="https://waydro.id/assets/images/hero/Group%201.png"></p><div>
                    <h5>Mobile Linux Integrations</h5>
                    <p>Brought To Life With Waydroid</p>
                  </div>
                </div>
                <div>
                  <p><img src="https://waydro.id/assets/images/hero/clean_desktop.jpeg"></p><div>
                    <h5>Bring Your Desktop To Life</h5>
                    <p>With Waydroids Fullscreen Mode For Desktops &amp; Kiosks</p>
                  </div>
                </div>
              </div>
            <p><img src="https://waydro.id/assets/images/hero/dotted-shape.svg" alt="shape">
            <img src="https://waydro.id/assets/images/hero/dotted-shape.svg" alt="shape">
          </p></div>
        </div>
  <!-- ====== Hero End ====== -->
  <!-- ====== Features Start ====== -->
  <div id="features">
      <div>
            <p><span>Features</span></p><h2>Main Features of Waydroid</h2>
            <p> Waydroid uses Linux namespaces (user, pid, uts, net, mount, ipc) to run a full Android system in a container and provide Android applications on any GNU/Linux-based platform (arm, arm64, x86, x86_64). The Android system inside the container has direct access to needed hardware through LXC and the binder interface. </p>
          </div>
      <div>
        <!-- Feature Start -->
        <div data-wow-delay=".1s">
              <h3>Free and Open-Source</h3>
              <p> The Project is completely free and open-source, currently our repo is hosted on <a target="BLANK" href="https://github.com/waydroid">Github.</a> </p>
            </div>
        <!-- Feature Start -->
        <div data-wow-delay=".15s">
              <h3>Full app integration</h3>
              <p> Waydroid integrated with Linux adding the Android apps to your linux applications folder. </p>
            </div>
        <!-- Feature Start -->
        <div data-wow-delay=".2s">
              <h3>Multi-window mode</h3>
              <p> Waydroid expands on Android freeform window definition, adding a number of features. </p>
            </div>
        <!-- Feature Start -->
        <div data-wow-delay=".25s">
              <h3>Full UI Mode</h3>
              <p> For gaming and full screen entertainment, Waydroid can also be run to show the full Android UI. </p>
            </div>
        <!-- Feature Start -->
        <div data-wow-delay=".1s">
              <h3>Near native performance</h3>
              <p> Get the best performance possible using wayland and AOSP mesa, taking things to the next level </p>
            </div>
        <!-- Feature Start -->
        <div data-wow-delay=".1s">
              <h3>Active community</h3>
              <p> Find out what all the buzz is about and explore all the possibilities Waydroid could bring </p>
            </div>
      </div>
    </div>
  <!-- ====== Features End ====== -->
  <!-- ====== About Start ====== -->
  <div data-wow-delay=".2s" id="about">
        <div>
            <p><span>About Us</span></p><h2>Get your favourite Android Apps on Linux.</h2>
            <p> Waydroid brings all the apps you love, right to your desktop, working side by side your Linux applications.<br> The Android inside the container has direct access to needed hardwares.<br> The Android runtime environment ships with a minimal customized Android system image based on <a href="https://lineageos.org/" target="blank">LineageOS</a>. The used image is currently based on Android 11 </p>
            <p><a href="#install"> Install Instructions <i></i>
            </a>
          </p></div>
        <p><img src="https://waydro.id/assets/images/hero/photo1628875295.jpeg" alt="about-image">
        </p>
      </div>
  <!-- ====== About End ====== -->
  <!-- ====== Docs Start ====== -->
  <div id="docs">
            <p><span>Docs</span></p><h2>Our Documentation</h2>
            <p> Our documentation site can be found at <a target="BLANK" href="https://docs.waydro.id/"> docs.waydro.id</a>
            </p>
            <h2>Bugs &amp; Reports</h2>
            <p> Bug Reports can be filed on our repo <a target="BLANK" href="https://github.com/waydroid/waydroid/issues"> Github Repo</a>
            </p>
            <h2>Project Development</h2>
            <p> Our development repositories are hosted on <a target="BLANK" href="https://github.com/waydroid/"> Github</a>
            </p>
            <h2>How to Install ?</h2>
            <p> Please refer to our <a target="BLANK" href="https://docs.waydro.id/usage/install-on-desktops"> installation docs</a> for complete installation guide. </p>
            <h2>Manual Image Download</h2>
            <p>You can also manually download our images from</p>
            <p><a target="BLANK" href="https://sourceforge.net/projects/waydroid">
              <img src="https://waydro.id/assets/images/logo/sf.png" alt="sourceforge logo"> SourceForge <i></i>
            </a>
          </p></div>
  <!-- ====== Docs End ====== -->
  <!-- ====== FAQ Start ====== -->
  <section id="install">
    <p><img src="https://waydro.id/assets/images/faq/shape.svg" alt="shape">
    </p>
    <div>
      <div>
            <p><span>Instructions</span></p><h2>Quick install reference</h2>
            <p>For systemd distributions</p>
          </div>
      <div>
        
        <form>
          <p>Waydroid supports most common architectures (ARM, ARM64, x86 &amp; x86_64 CPUs)</p>
          <p>Waydroid uses Android's mesa integration for passthrough, and that enables support to most ARM/ARM64 SOCs on the mobile side, and Intel/AMD GPUs for the PC side. For Nvidia GPUs (except tegra) and VMs, we recommend using <a href="https://docs.waydro.id/faq/get-waydroid-to-work-through-a-vm">software-rendering</a> </p>
        </form>
      </div>
      <div>
        <p>Follow the install instructions for your linux distribution. You can find a list in our <a href="https://docs.waydro.id/usage/install-on-desktops">docs</a>.
        </p>
      </div>
      <div>
        <p>After installing you should start the waydroid-container service, if it was not started automatically:</p>
        <div>
          <figure>
            <pre><code data-lang="">sudo systemctl enable --now waydroid-container
</code></pre>
          </figure>
        </div>
      </div>
      <div>
        <p>Then launch Waydroid from the applications menu and follow the first-launch wizard.</p>
      </div>
      <div>
        <p>If prompted, use the following links for System OTA and Vendor OTA:</p>
        <div>
          <pre><code data-lang=""><p>https://ota.waydro.id/system</p></code></pre>
        </div>
        <div>
          <pre><code data-lang=""><p>https://ota.waydro.id/vendor</p></code></pre>
        </div>
      </div>
      <div>
        <p>For further instructions, please visit the docs site <a target="BLANK" href="https://docs.waydro.id/">here</a>
          </p>
      </div>
    </div>
  </section>
  <!-- ====== FAQ End ====== -->
  <div id="wdlinux">
              <p><img src="https://waydro.id/assets/images/hero/Computer_wd.png">
              </p>
              <div>
                
                <h3><span>Latest Beta </span><span> 01.30.2023</span></h3>
                <p> We have started creating a few fully-integrated distros in order to demonstrate some of the possibilities that Waydroid can help achieve. <br> Each of the distros we produce will also showcase some of the work from our growing community of contributors. <br> Our initial alpha releases of this integration started with Ubuntu 20.04 (focal) and is now on Ubuntu 22.04 (jammy) as well as Debian 12 (bookworm), and includes many added tools and scripts to help open up what is possible. </p>
                <div>
                  
                  <form>
                    <p>Waydroid-Linux currently only supports x86_64 CPUs (Intel/AMD)</p>
                    <p>Waydroid-Linux uses Android's mesa integration for passthrough, and that restricts support to Intel and AMD GPUs<br> For Nvidia GPUs and VMs, we recommend using <a href="https://docs.waydro.id/faq/get-waydroid-to-work-through-a-vm">software-rendering</a> </p>
                    <div id="sources">
                      <p>We have been working with a number of devs on Waydroid-Linux, and have been creating or contributing to a number of projects for it. <br> Here are just a few of the projects we've been using:</p>
                      <ol>
                        <li>
                          <div>
                            <p>Waydroid-Linux Tools</p><p> A few scripts, configs, and themes for the Waydroid-Linux builds </p>
                          </div>
                        </li>
                        <li>
                          <div>
                            <p>Waydroid-Settings</p><p> A GTK app written in Python to control Waydroid settings and expand with scripts (shell/py) </p>
                          </div>
                        </li>
                        <li>
                          <div>
                            <p>Penguins-Eggs</p><p> A tool used for packaging and installation of various Linux distros </p>
                            
                          </div>
                        </li>
                        <li>
                          
                        </li>
                      </ol>
                    </div>
                  </form>
                </div>
                <!---------->
                <details>
                  <summary>Live Mode Info</summary><br> Due to how Waydroid uses LXC and kernel modules for the binder, it will not work while running in live mode and must be installed before working properly.&nbsp; <br>Make sure to check the readme for the .iso, as it contains the specifics needed for each build.&nbsp;
                </details>
                <br>
                <!-- Button trigger modal -->
                <!-- Modal -->
                
                <!---------->
              </div>
            </div>
  <!-- ====== Team Start ====== -->
  <div id="team">
      <div>
            <p><span>Our Team</span></p><h2>Meet The Team</h2>
            <p>Here are the members of our team</p>
          </div>
      <div>
        <div data-wow-delay=".1s">
            
            <p>
              <h5>Erfan Abdi</h5>
              <p4>@erfanoabdi</p4>
              <h6 contenteditable="true">Lead Developer</h6>
            </p>
            
          </div>
        <div data-wow-delay=".15s">
            
            <p>
              <h5>Alessandro Astone</h5>
              <p4>@aleasto</p4>
              <h6>Developer</h6>
            </p>
            
          </div>
        <div data-wow-delay=".15s">
            
            <p>
              <h5>Jon West</h5>
              <p4>@electrikjesus</p4>
              <h6>Developer</h6>
            </p>
            
          </div>
        <div data-wow-delay=".2s">
            
            <p>
              <h5>Radek Błędowski</h5>
              <p4>@RKBDI</p4>
              <h6>Designer</h6>
            </p>
            
          </div>
      </div>
    </div>
  <div id="donate">
          <h2>Help Us Grow</h2>
          <br>
          <h4> Waydroid is now on Open-Collective </h4>
          <h4> We are now accepting donations and sponsorships through Open-Collective. </h4>
          <div>
            <p><a href="https://opencollective.com/waydroid/donate" target="_blank">
                <img src="https://opencollective.com/webpack/donate/button@2x.png?color=blue">
              </a>
            </p>
            <!-- /.animated scroll -->
          </div>
          <!-- /.banner-child -->
          <!-- /.banner-child -->
        </div>
  <!-- ====== Team End ====== -->
  <!-- ====== Contact Start ====== -->
  <!-- ====== Contact End ====== -->
  <!-- ====== Footer Start ====== -->
  
  <!-- ====== Footer End ====== -->
  <!-- ====== Back To Top Start ====== -->
  <span>
    <i> </i>
  </span>
  <!-- ====== Back To Top End ====== -->
  <!-- ====== All Javascript Files ====== -->
  
  
  
  
  



</div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Young, Inexperienced Engineers Aiding Elon Musk’s Government Takeover (122 pts)]]></title>
            <link>https://www.wired.com/story/elon-musk-government-young-engineers/</link>
            <guid>42910910</guid>
            <pubDate>Sun, 02 Feb 2025 19:12:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.wired.com/story/elon-musk-government-young-engineers/">https://www.wired.com/story/elon-musk-government-young-engineers/</a>, See on <a href="https://news.ycombinator.com/item?id=42910910">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>Elon Musk’s <a href="https://www.wired.com/story/elon-musk-twitter-playbook-federal-government/">takeover</a> of federal government infrastructure is ongoing, and at the center of things is a coterie of engineers who are barely out of—and in at least one case, purportedly still in—college. Most have connections to Musk, and at least two have connections to Musk’s longtime associate Peter Thiel, a cofounder and chair of the analytics firm and government contractor Palantir who has long <a data-offer-url="https://www.cato-unbound.org/2009/04/13/peter-thiel/education-libertarian/" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.cato-unbound.org/2009/04/13/peter-thiel/education-libertarian/&quot;}" href="https://www.cato-unbound.org/2009/04/13/peter-thiel/education-libertarian/" rel="nofollow noopener" target="_blank">expressed</a> opposition to democracy.</p><p>WIRED has identified six young men—all apparently between the ages of 19 and 24, according to public databases, their online presences, and other records—who have little to no government experience and are now playing critical roles in Musk’s so-called <a href="https://www.wired.com/story/doge-elon-musk/">Department of Government Efficiency</a> (DOGE) project, tasked by executive order with “modernizing Federal technology and software to maximize governmental efficiency and productivity.” The engineers all hold nebulous job titles within DOGE, and at least one appears to be working as a volunteer.</p><p>The engineers are Akash Bobba, Edward Coristine, Luke Farritor, Gautier Cole Killian, Gavin Kliger, and Ethan Shaotran. None have responded to requests for comment from WIRED. Representatives from OPM, GSA, and DOGE did not respond to requests for comment.</p><p>Already, Musk’s lackeys have taken control of the <a href="https://www.wired.com/story/elon-musk-lackeys-office-personnel-management-opm-neuralink-x-boring-stalin/">Office of Personnel Management</a> (OPM) and <a href="https://www.wired.com/story/elon-musk-lackeys-general-services-administration/">General Services Administration</a> (GSA), and have <a data-offer-url="https://www.nytimes.com/2025/02/01/us/politics/elon-musk-doge-federal-payments-system.html" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.nytimes.com/2025/02/01/us/politics/elon-musk-doge-federal-payments-system.html&quot;}" href="https://www.nytimes.com/2025/02/01/us/politics/elon-musk-doge-federal-payments-system.html" rel="nofollow noopener" target="_blank">gained access</a> to the Treasury Department’s payment system, potentially allowing him access to a vast range of sensitive information about tens of millions of citizens, businesses, and more. On Sunday, CNN <a data-offer-url="https://www.cnn.com/2025/02/02/politics/usaid-officials-leave-musk-doge/index.html" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.cnn.com/2025/02/02/politics/usaid-officials-leave-musk-doge/index.html&quot;}" href="https://www.cnn.com/2025/02/02/politics/usaid-officials-leave-musk-doge/index.html" rel="nofollow noopener" target="_blank">reported</a> that DOGE personnel attempted to improperly access classified information and security systems at the <a href="https://www.wired.com/story/us-government-websites-are-disappearing-in-real-time/">US Agency for International Development</a> and that top USAID security officials who thwarted the attempt were subsequently put on leave. The Associated Press <a href="https://apnews.com/article/doge-musk-trump-classified-information-usaid-security-35101dee28a766e0d9705e0d47958611">reported</a> that DOGE personnel had indeed accessed classified material.</p><p>“What we're seeing is unprecedented in that you have these actors who are not really public officials gaining access to the most sensitive data in government,” says Don Moynihan, a professor of public policy at the University of Michigan. “We really have very little eyes on what's going on. Congress has no ability to really intervene and monitor what's happening because these aren't really accountable public officials. So this feels like a hostile takeover of the machinery of governments by the richest man in the world.”</p><p>Bobba has attended UC Berkeley, where he was in the prestigious Management, Entrepreneurship, and Technology program. According to a copy of his now-deleted LinkedIn obtained by WIRED, Bobba was an investment engineering intern at the Bridgewater Associates hedge fund as of last spring and was previously an intern at both Meta and Palantir. He was a featured guest on a since-deleted podcast with Aman Manazir, an engineer who interviews engineers about how they landed their dream jobs, where he <a data-offer-url="https://podtail.com/podcast/lift-off-with-aman-manazir/-3-my-secret-system-for-landing-a-meta-internship-/" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://podtail.com/podcast/lift-off-with-aman-manazir/-3-my-secret-system-for-landing-a-meta-internship-/&quot;}" href="https://podtail.com/podcast/lift-off-with-aman-manazir/-3-my-secret-system-for-landing-a-meta-internship-/" rel="nofollow noopener" target="_blank">talked about those experiences last June</a>.</p><p>Coristine, as WIRED <a href="https://www.wired.com/story/elon-musk-government-tech-workers-gsa-tts/">previously reported</a>, appears to have recently graduated from high school and to have been enrolled at Northeastern University. According to a copy of his résumé obtained by WIRED, he spent three months at Neuralink, Musk’s brain-computer interface company, last summer.e</p></div><div data-journey-hook="client-content" data-testid="BodyWrapper"><p>Both Bobba and Coristine are listed in internal OPM records reviewed by WIRED as “experts” at OPM, reporting directly to Amanda Scales, its new chief of staff. Scales previously worked on talent for xAI, Musk’s artificial intelligence company, and as part of Uber’s talent acquisition team, per LinkedIn. Employees at GSA tell WIRED that Coristine has appeared on calls where workers were made to go over code they had written and justify their jobs. WIRED <a href="https://www.wired.com/story/elon-musk-government-tech-workers-gsa-tts/">previously reported</a> that Coristine was added to a call with GSA staff members using a nongovernment Gmail address. Employees were not given an explanation as to who he was or why he was on the calls.</p><p>Farritor, who per sources has a working GSA email address, is a former intern at SpaceX, Musk’s space company, and <a data-offer-url="https://www.businesswire.com/news/home/20240320742346/en/Thiel-Foundation-Announces-Next-Thiel-Fellow-Class" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.businesswire.com/news/home/20240320742346/en/Thiel-Foundation-Announces-Next-Thiel-Fellow-Class&quot;}" href="https://www.businesswire.com/news/home/20240320742346/en/Thiel-Foundation-Announces-Next-Thiel-Fellow-Class" rel="nofollow noopener" target="_blank">currently</a> a <a data-offer-url="https://thielfellowship.org/" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://thielfellowship.org/&quot;}" href="https://thielfellowship.org/" rel="nofollow noopener" target="_blank">Thiel Fellow</a> after, according to his LinkedIn, dropping out of the University of Nebraska—Lincoln. While in school, he was part of an award-winning team that <a data-offer-url="https://news.unl.edu/article-2" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://news.unl.edu/article-2&quot;}" href="https://news.unl.edu/article-2" rel="nofollow noopener" target="_blank">deciphered portions of an ancient Greek scroll</a>.</p><p>Kliger, whose LinkedIn lists him as a special adviser to the director of OPM and who is listed in internal records reviewed by WIRED as a special adviser to the director for information technology, attended UC Berkeley until 2020; most recently, according to his LinkedIn, he worked for the AI company Databricks. His <a data-offer-url="https://substack.com/@weeklybyte" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://substack.com/@weeklybyte&quot;}" href="https://substack.com/@weeklybyte" rel="nofollow noopener" target="_blank">Substack</a> includes a post titled “The Curious Case of Matt Gaetz: How the Deep State Destroys Its Enemies,” as well as another titled “Pete Hegseth as Secretary of Defense: The Warrior Washington Fears.”</p><p>Killian, also known as Cole Killian, has a working email associated with DOGE, where he is currently listed as a volunteer, according to internal records reviewed by WIRED. According to a copy of his now-deleted résumé obtained by WIRED, he attended McGill University through at least 2021 and graduated high school in 2019. An archived copy of his now-deleted personal website indicates that he worked as an engineer at Jump Trading, which specializes in algorithmic and high-frequency financial trades.</p><p>Shaotran told <a data-offer-url="https://www.businessinsider.com/harvard-senior-balances-college-ai-startup-productivity-enterprise-openai-coding-2024-8?utm_medium=social&amp;utm_source=linkedin&amp;utm_campaign=insider-sf" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.businessinsider.com/harvard-senior-balances-college-ai-startup-productivity-enterprise-openai-coding-2024-8?utm_medium=social&amp;utm_source=linkedin&amp;utm_campaign=insider-sf&quot;}" href="https://www.businessinsider.com/harvard-senior-balances-college-ai-startup-productivity-enterprise-openai-coding-2024-8?utm_medium=social&amp;utm_source=linkedin&amp;utm_campaign=insider-sf" rel="nofollow noopener" target="_blank">Business Insider</a> in September that he was a senior at Harvard studying computer science and also the founder of an OpenAI-backed startup, Energize AI. Shaotran was the <a data-offer-url="https://x.com/xai/status/1846989686549696900" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://x.com/xai/status/1846989686549696900&quot;}" href="https://x.com/xai/status/1846989686549696900" rel="nofollow noopener" target="_blank">runner-up in a hackathon held by xAI</a>, Musk’s AI company. In the Business Insider article, Shaotran says he received a $100,000 grant from OpenAI to build his scheduling assistant, Spark.</p><hr><p><strong>Got a Tip?</strong></p><p><em>Are you a current or former employee with the Office of Personnel Management or another government agency impacted by Elon Musk? We’d like to hear from you. Using a nonwork phone or computer, contact Vittoria Elliott at <a href="mailto:vittoria_elliott@wired.com" target="_blank">vittoria_elliott@wired.com</a> or securely at velliott88.18 on Signal.</em></p><hr><p>“To the extent these individuals are exercising what would otherwise be relatively significant managerial control over two very large agencies that deal with very complex topics,” says Nick Bednar, a professor at University of Minnesota’s school of law, “it is very unlikely they have the expertise to understand either the law or the administrative needs that surround these agencies.”</p><p>Sources tell WIRED that Bobba, Coristine, Farritor, and Shaotran all currently have working GSA emails and A-suite level clearance at the GSA, which means that they work out of the agency’s top floor and have access to all physical spaces and IT systems, according a source with knowledge of the GSA’s clearance protocols. The source, who spoke to WIRED on the condition of anonymity because they fear retaliation, says they worry that the new teams could bypass the regular security clearance protocols to access the agency’s sensitive compartmented information facility, as the <a data-offer-url="https://www.cnn.com/2025/01/21/politics/trump-temporary-security-clearances/index.html" data-event-click="{&quot;element&quot;:&quot;ExternalLink&quot;,&quot;outgoingURL&quot;:&quot;https://www.cnn.com/2025/01/21/politics/trump-temporary-security-clearances/index.html&quot;}" href="https://www.cnn.com/2025/01/21/politics/trump-temporary-security-clearances/index.html" rel="nofollow noopener" target="_blank">Trump administration has already granted temporary security clearances</a> to unvetted people.</p><p>This is in addition to Coristine and Bobba being listed as “experts” working at OPM. Bednar says that while staff can be loaned out between agencies for special projects or to work on issues that might cross agency lines, it’s not exactly common practice.</p><p>“This is consistent with the pattern of a lot of tech executives who have taken certain roles of the administration,” says Bednar. “This raises concerns about regulatory capture and whether these individuals may have preferences that don’t serve the American public or the federal government.”</p><p><em>Additional reporting by Zoë Schiffer and Tim Marchman.</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Legacy of Lies in Alzheimer's Science (246 pts)]]></title>
            <link>https://www.nytimes.com/2025/01/24/opinion/alzheimers-fraud-cure.html</link>
            <guid>42910829</guid>
            <pubDate>Sun, 02 Feb 2025 19:00:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2025/01/24/opinion/alzheimers-fraud-cure.html">https://www.nytimes.com/2025/01/24/opinion/alzheimers-fraud-cure.html</a>, See on <a href="https://news.ycombinator.com/item?id=42910829">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2025/01/24/opinion/alzheimers-fraud-cure.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Everyone knows your location: tracking myself down through in-app ads (1632 pts)]]></title>
            <link>https://timsh.org/tracking-myself-down-through-in-app-ads/</link>
            <guid>42909921</guid>
            <pubDate>Sun, 02 Feb 2025 17:07:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://timsh.org/tracking-myself-down-through-in-app-ads/">https://timsh.org/tracking-myself-down-through-in-app-ads/</a>, See on <a href="https://news.ycombinator.com/item?id=42909921">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
            <p>Recently I read about a <a href="https://www.404media.co/hackers-claim-massive-breach-of-location-data-giant-threaten-to-leak-data/?ref=timsh.org" rel="noreferrer">massive geolocation data leak from Gravy Analytics</a>, which exposed more than 2000 apps, both in AppStore and Google Play, that secretly collect geolocation data without user consent. Oftentimes, even without developers` knowledge. </p><p>I looked into the list (<a href="https://docs.google.com/spreadsheets/d/1Ukgd0gIWd9gpV6bOx2pcSHsVO6yIUqbjnlM4ewjO6Cs/edit?gid=1257088277&amp;ref=timsh.org#gid=1257088277" rel="noreferrer">link here</a>) and found at least 3 apps I have installed on my iPhone. Take a look for yourself! <br>This made me come up with an idea to track myself down externally, e.g. to buy my geolocation data leaked by some application. </p><h3 id="tldr">TL;DR</h3><p>After more than couple dozen hours of trying, here are the main takeaways: </p><ol><li>I found a couple requests sent by my phone with <strong>my precise location </strong>+ 5 requests that leak <strong>my IP address</strong>, which can be turned into geolocation using reverse DNS. </li><li>Learned a lot about the RTB (real-time bidding) auctions and OpenRTB protocol and was shocked by the amount and types of data sent with the bids to ad exchanges. </li><li>Gave up on the idea to buy my location data from a data broker or a tracking service, because I don't have a big enough company to take a trial or $10-50k to buy a huge database with the data of millions of people + me. <br>Well maybe I do, but such expense seems a bit irrational. <br>Turns out that EU-based peoples` data is almost the most expensive. </li></ol><p>But still, I know my location data was collected and I know where to buy it! </p><hr><h2 id="starting-point">Starting point</h2><p>My setup for this research included:</p><ul><li>My old iPhone 11 restored to factory defaults + new apple id. <br>Felt too uncomfortable to do all this on my current phone. </li><li>Charles Proxy to record all traffic coming in and out. <br>I set up the SSL certificate on the iPhone to decrypt all https traffic.</li><li>A simple game called Stack by KetchApp - I remember playing it at school 10-12 years ago. Choosing it as a lab rat felt nostalgic. <br>To my surprise, there were a lot of KetchApp games on the list. </li></ul><figure><img src="https://timsh.org/content/images/2025/01/image-1.png" alt="" loading="lazy" width="320" height="180"></figure><h3 id="huge-amount-of-requests">Huge amount of requests</h3><p>Ok, here we go: only 1 app installed without the default Apple ones, Charles on, launching Stack in 3, 2, 1.... </p><figure data-kg-thumbnail="https://timsh.org/content/media/2025/01/Screen-Recording-2025-01-19-at-00.02.51_thumb.jpg" data-kg-custom-thumbnail="">
            <div>
                <video src="https://timsh.org/content/media/2025/01/Screen-Recording-2025-01-19-at-00.02.51.mp4" poster="https://img.spacergif.org/v1/2410x2152/0a/spacer.png" width="2410" height="2152" loop="" autoplay="" muted="" playsinline="" preload="metadata"></video>
                
                <div>
                        <p>
                        
                        <span>0:00</span></p><p>
                            /<span>0:11</span>
                        </p>
                        </div>
            </div>
            
        <img src="https://timsh.org/content/media/2025/01/Screen-Recording-2025-01-19-at-00.02.51_thumb.jpg"></figure><p>These are the requests that the app sends in the first minute after launch. <br>Take a look at the timing of the requests - almost every split second. </p><p>Let's take a look at the contents of the requests. <br>I actually checked every single one of them - but I'll leave out only the interesting ones here. </p><h3 id="unity-ads">Unity [ads]</h3><p>Let's start with the juiciest request sent to <code>https://o.isx.unity3d.com</code> - the first one that included my geo, while I <strong>disabled Location Services</strong> on iPhone for all apps! <br>If you are as naive as I was before this, you might be surprised - what does Unity, the 3D engine, have to do with the in-app advertisement or location tracking? <br>Perhaps that's just some monitoring data to help improve the engine? </p><p>Turns out that Unity's main revenue stream (they made $2 bln+ in 2023) is Unity Ads - "Mobile Game Ad Network". Sounds quite interesting.</p><p>Below is the request body in json format sent to Unity Ads. I will only leave the  fields worth mentioning - the actual size is 200+ keys. </p><pre><code>{
  "ts": "2025-01-18T23:27:39Z", // Timestamp
  "c": "ES", // Country code,
  "d": "sports.bwin.es", // Domain; the app or website where the ad will be displayed.
  "bn": "molocoads-eu-banner", // WTF is moloco ads? We'll see!
  "cip": "181.41.[redacted]", // my IP !!
  "dm": "iPhone12,1", 
  "ct": "2", // Connection type; e.g., Wi-Fi
  "car": "Yoigo", // mobile network operator
  "ifv": "6B00D8E5-E37B-4EA0-BB58-[redacted]", // ID for Vendor. We'll get back to it!
  "lon": "2.[redacted]", // Longitude ... 
  "lat": "41.[redacted]", // Latitude ... 
  "sip": "34.227.224.225", // Server IP (Amazon AWS in US) 
  "uc": "1", // User consent for tracking = True; OK what ?!
}</code></pre><p>Ok, so my IP + location + timestamp + some <code>ifv</code> id are shared with Unity → Moloco Ads → Bwin, and then I see the actual Bwin ad in the game. <br>Wonderful! </p><div><p>As a quick note - location shared was not very precise (but still in the same postal index), I guess due to the fact that iPhone was connected to WiFi and had no SIM installed. <br>If it was LTE, I bet the lat/lon would be much more precise. </p></div><h3 id="hello-facebook-what-are-you-doing-here">Hello Facebook... What are you doing here?</h3><p>Next interesting request that leaks my IP + timestamp (= geo-datapoint) is Facebook.<br>What?!</p><ul><li>I don't have any Meta [Facebook] app installed on this iPhone</li><li>I didn't link the app nor my Apple ID to any Facebook account</li><li>I didn't consent to Facebook getting my IP address!</li></ul><p>And yet here we are:</p><pre><code>{ 
	"bundles": {
		"bidder_token_info": {
			"data": {
				"bt_extras": {
                  "ip":"181.41.[redacted], // nice Extras, bro
                  "ts":1737244649
			},
			"fingerprint": null
		},
        {
          "a lot of data: yes a loooooooot"
         }</code></pre><p>We'll talk more about this one in the next section. </p><h3 id="why-do-you-need-my-screen-brightness-level">Why do you need my screen brightness level? </h3><p>Last request I found interesting was sent to... Unity again: <br><a href="https://configv2.unityads.unity3d.com/webview/4.12.1/release/config.json?ref=timsh.org"><code>https://configv2.unityads.unity3d.com</code></a>. <br>Let's see what's in that config Unity needs so much: </p><pre><code>{
  "osVersion":"16.7.1",
  "connectionType":"wifi",
  "eventTimeStamp":1737244651,
  "vendorIdentifier":"6B00D8E5-E37B-[redacted]", // ifv once again 
  "wiredHeadset":false, // excuse me? 
  "volume":0.5,
  "cpuCount":6,
  "systemBootTime":1737215978,
  "batteryStatus":3,
  "screenBrightness":0.34999999403953552,
  "freeMemory":507888,
  "totalMemory":3550640, // is this RAM?
  "timeZone":"+0100",
  "deviceFreeSpace":112945148
  "networkOperator":"6553565535"
  "advertisingTrackingId":"00000000-0000....", // interesting ...
  }</code></pre><p>There's no "personal information" here, but honestly this amount of data shared with an arbitrary list of 3rd parties is scary. <br>Why do they need to know my screen brightness, memory amount, current volume and if I'm wearing headphones? </p><p>I know the "right" answer - to help companies target their audience better! <br>For example, if you're promoting a mobile app that is 1 GB of size, and the user only has 500 MB of space left - don't show him the ad, right?</p><p>But I also heard lots of controversies on this topic. <br>Like Uber dynamically adjusting taxi price based on your battery level - because you're not waiting for a cheaper option with 4% left while standing in the street. </p><p>I can't know if that or another one is true. <br>But the fact that this data is available and accessible by advertisers suggests that they should at least think of using it. <br>I would. </p><p>Ok, enough with the requests. <br>We can already see the examples of different ip and geolocation leaks. <br>One more "provider" that <strong>also got my IP</strong> + timestamp was adjust.com - but the request body was too boring to include. </p><hr><h2 id="lets-talk-ids">Let's talk IDs</h2><p>You might've already noticed <code>ifv</code> and <code>advertisingTrackingId</code> == <code>IDFA</code> in the requests above - what are those? </p><p>IFV, or IDFV, is "ID for Vendor". <br>This is my id unique for each vendor, a.k.a developer - in this case, KetchApp. <br>This checks out: I installed another KetchApp game to quickly record the requests, and the <code>ifv</code> value was the same for it. </p><p>Advertising Tracking ID, on the other hand, is the cross-vendor value, the one that is shared with an app if you choose "Allow app to track your activity across ...". <br>As you can see above, it was actually set to <code>000000-0000...</code> because I "Asked app not to track". </p><p>I checked this by manually disabling and enabling tracking option for the Stack app and comparing requests in both cases. </p><h3 id="and-thats-the-only-difference-between-allowing-and-disallowing-tracking"><strong>And that's the only difference between allowing and disallowing tracking</strong></h3><p><br>I understand there might be nothing shocking to you in it - this is not really kept secret, you can go and check the docs for Apple developers, for example. </p><p>But I believe this is <strong>not</strong> communicated correctly to the end users, you and me, in any adequate way, shape or form: the free apps you install and use <strong>collect your precise location</strong> with timestamp and send it to some 3rd-party companies. </p><p>The only thing that stops anyone with access to bid data (yet another ad buying agent, or ad exchange, or a dataset bought or rented from data broker, as you'll see later) from tracking you down with all trips you make daily is this <code>IDFA</code> that is not shared when you disallow apps to "track you across apps" to "enhance and personalise your ads experience". </p><p>By the way: if you're using 10 apps from the same vendor (Playrix, KetchApp or another 1000-app company) and allow <strong>a single app</strong> to track you – it would mean that the data collected in all 10 apps will be enriched with your IDFA which can later be exchanged to your personal data. </p><p>At the same time, there is so much data in the requests that I'd expect ad exchanges to find some loophole ID that would allow cross-app tracking without the need for IDFA. <br>I found at least 20 ids like <code>tid</code> and <code>sid</code>, <code>device_id</code> and <code>uid</code> (these 2 are shared with Facebook), and so on. </p><p>By the way, the fact that Facebook collected my IP + timestamp without any adequate consent / app connection from my end is crazy. <br>I think Facebook is more than capable of connecting the dots and my Meta Account to this hit as soon as I login to Instagram or Facebook app on the same IP address. </p><hr><h2 id="how-does-the-data-flow">How does the data flow?</h2><p>Let's get back to the request that leaked my location for a second and look at its trace. We'll focus on the parties in the middle:</p><p>stack<strong> →  o.isx.unity3d.com → molocoads →</strong> bwin (advertiser)</p><p>Unity [ads] is an SSP (supply-side platform) that acts as a collector of data from the app via SDK. <br>As an app developer, you don't need to worry about gathering the right data, registering as a publisher on an ad exchange or whatever - just install the SDK and receive the money. </p><p>All right, what about <a href="https://www.moloco.com/?ref=timsh.org" rel="noreferrer">Molocoads</a>? </p><figure><img src="https://timsh.org/content/images/2025/01/Screenshot-2025-01-29-at-23.06.38.png" alt="" loading="lazy" width="2000" height="786" srcset="https://timsh.org/content/images/size/w600/2025/01/Screenshot-2025-01-29-at-23.06.38.png 600w, https://timsh.org/content/images/size/w1000/2025/01/Screenshot-2025-01-29-at-23.06.38.png 1000w, https://timsh.org/content/images/size/w1600/2025/01/Screenshot-2025-01-29-at-23.06.38.png 1600w, https://timsh.org/content/images/2025/01/Screenshot-2025-01-29-at-23.06.38.png 2286w" sizes="(min-width: 720px) 720px"><figcaption><span>screenshot from Molocoads landing page</span></figcaption></figure><p>Moloco ads is a DSP network that resells data from multiple SSPs (like Unity, Applovin, Chartboost). Basically, from almost every one of the requested hosts I've seen pop up in Charles Proxy.<br>It then applies some "smart optimisation" and connects a vacant banner space on your phone screen with the advertiser.</p><p>Sounds like moloco aggregates a lot of data and basically anyone (<em>to be clear</em> <em>- any company that becomes an ad partner</em>) can access the data by bidding lower than others. <br>Or imagine a real ad exchange that bids normally and collects all of the data along the way "as a side gig". <br>Basically, this is how intelligence companies and data brokers get their data. </p><p>At this point I was looking for any mentions of Moloco on Telegram and Reddit, and I ran into this post that answered a lot of my questions:</p><figure><blockquote>
<a href="https://www.reddit.com/r/adops/comments/rqlr36/eli5_what_is_the_controversy_behind_bidstream/?ref=timsh.org">ELI5: What is the controversy behind “bidstream data”? Are there really no restraints on who gets this data and what they do with it?</a><br> by
<a href="https://www.reddit.com/user/Pubh12/?ref=timsh.org">u/Pubh12</a> in
<a href="https://www.reddit.com/r/adops/?ref=timsh.org">adops</a>
</blockquote>
</figure><p>Especially, <a href="https://www.reddit.com/r/adops/comments/rqlr36/comment/hqbwmbr/?ref=timsh.org" rel="noreferrer">this comment</a>. To quote a part of it:</p><blockquote>They access it if they integrate with the provider of bidstream, which would be the SSP. It's on the SSP to verify the vendor to whom they give access to bids. Usually, the requirement would be that you actually... bid. <br>SSPs want you to spend money, that's how their business makes revenue. They might open up only part of the traffic to specific vendors (i.e.. if you don't bid worldwide, you won't get the bidstream worldwide, only in the regions in which you operate).</blockquote><p>Just wonderful. </p><h3 id="data-brokers">Data Brokers</h3><p>Let's move further. When I found out how the data gets out, I started looking for any place where it's being sold. It was a quick search.</p><p>I found a data marketplace called <a href="https://datarade.ai/data-categories/device-graph-data?ref=timsh.org" rel="noreferrer">Datarade</a> which is a panel with all sorts of data. When I searched for MAID-specific data, hundreds of options showed up, like these two: </p><figure><img src="https://timsh.org/content/images/2025/01/Screenshot-2025-01-29-at-23.24.10.png" alt="" loading="lazy" width="1680" height="740" srcset="https://timsh.org/content/images/size/w600/2025/01/Screenshot-2025-01-29-at-23.24.10.png 600w, https://timsh.org/content/images/size/w1000/2025/01/Screenshot-2025-01-29-at-23.24.10.png 1000w, https://timsh.org/content/images/size/w1600/2025/01/Screenshot-2025-01-29-at-23.24.10.png 1600w, https://timsh.org/content/images/2025/01/Screenshot-2025-01-29-at-23.24.10.png 1680w" sizes="(min-width: 720px) 720px"></figure><p>The price of the Redmob dataset surprised me, - $120k a year... for what?<br>Let's now take a look at their promo:</p><figure><img src="https://timsh.org/content/images/2025/01/Screenshot-2025-01-29-at-23.26.05.png" alt="" loading="lazy" width="1626" height="838" srcset="https://timsh.org/content/images/size/w600/2025/01/Screenshot-2025-01-29-at-23.26.05.png 600w, https://timsh.org/content/images/size/w1000/2025/01/Screenshot-2025-01-29-at-23.26.05.png 1000w, https://timsh.org/content/images/size/w1600/2025/01/Screenshot-2025-01-29-at-23.26.05.png 1600w, https://timsh.org/content/images/2025/01/Screenshot-2025-01-29-at-23.26.05.png 1626w" sizes="(min-width: 720px) 720px"></figure><div><p>Check out the list of features on the right - do any of them look familiar? </p><p><strong>Quick note</strong>: "low latency" means they know your location from the last time any of the apps shared it. It can be as little as 5 seconds ago. <br>What's even better is that Redmob provides a <strong>free sample</strong> of the data. </p></div><p>I tried to request it from their website, but the sample never landed in my mailbox (surprise-surprise, timsh.org doesn't seem like a customer with high potential). <br>Thankfully, this sample is public on <a href="https://marketplace.databricks.com/details/caa4c07a-b27e-4876-9c9c-3f3c2bbbc11f/Redmob_SAMPLE-Redmob-MAID-Data-for-Identity-Graph-I-Global-I-15B-Users-RealTime?ref=timsh.org" rel="noreferrer">Databricks Marketplace</a> with this annotation:</p><blockquote>Enhance your products and services using our global location data covering over 1.5 billion devices. Using our extensive location dataset, you can unearth concealed patterns, conduct rapid analyses, and obtain profound knowledge.<p>We can also provide region-specific data (MENA, Africa, APAC, etc.) based on your specific requirements. Our pricing model includes an annual licensing option, and we provide free sample data so that you can evaluate the quality of our dataset for yourself. </p></blockquote><figure><img src="https://timsh.org/content/images/2025/01/Screenshot-2025-01-31-at-01.12.16.png" alt="" loading="lazy" width="2000" height="562" srcset="https://timsh.org/content/images/size/w600/2025/01/Screenshot-2025-01-31-at-01.12.16.png 600w, https://timsh.org/content/images/size/w1000/2025/01/Screenshot-2025-01-31-at-01.12.16.png 1000w, https://timsh.org/content/images/size/w1600/2025/01/Screenshot-2025-01-31-at-01.12.16.png 1600w, https://timsh.org/content/images/size/w2400/2025/01/Screenshot-2025-01-31-at-01.12.16.png 2400w" sizes="(min-width: 1200px) 1200px"><figcaption><span>Some sample data for better understanding</span></figcaption></figure><p>To me, the most absurd part is the <code>app</code> column - the source of the data can't be more obvious. I'm also quite interested in the <code>yod</code> column - if it's the birthyear, where did they get it from? Never mind, who cares about your birthyear.</p><h3 id="show-me-the-pii">Show me the PII!</h3><p>All right, imagine I bought the access to a huge stream of Redmob data. <br>But my goal is to track and stalk people like myself or anyone else, so I need some way to exchange MAIDs (<em>=</em><code>ifa</code>) for the actual personal info: name, address, phone number... </p><p>No problem! This kind of dataset is surprisingly also present on Datarade. <br>Take a look at a sample table with <code>MAID &lt;&gt; PII</code> type that is provided by "<a href="https://www.agrmarketingsolutions.com/data-nuggets/?ref=timsh.org" rel="noreferrer">AGR Marketing Solutions</a>":</p><figure><a href="https://docs.google.com/spreadsheets/d/1gbom_3YO-oFB6Yrg_MAhrJKGkYtNHR2S/edit?gid=2029445799&amp;ref=timsh.org#gid=2029445799"><div><p>AGR_Mobile_Intent_PII20240903.xlsx</p><p><img src="https://timsh.org/content/images/icon/spreadsheets_2023q4.ico" alt=""><span>Google Docs</span></p></div><p><img src="https://timsh.org/content/images/thumbnail/AHkbwyL0Y-RadP94i-3ntHlOyBNz5QtZLseHmdD1MAKSAFQi7l2fIzkQjGmDmSQRI2yTN7B1h5cNCpCeVlmlA0dsdek_xQhi6nazcP6xeg-w1200-h630-p" alt="" onerror="this.style.display = 'none'"></p></a></figure><p>Inside - all personal info (full name, email, phone number, physical address, property ownership... and IDFAs. </p><p>Congrats, you have just reached the bottom of this rabbit hole. <br>Let's wrap it up and make a couple of bold statements.</p><hr><h2 id="how-to-track-yourself-down">How to track yourself down?</h2><p>Easy! Just follow this simple step-by-step guide:</p><ol><li>Use some free apps for a bit. <br>Move around and commute - this makes the geo data more valuable. </li><li>"Allow" or "ask not to track" - a combo of IP + location + User-agent + geolocation will still be leaked to hundreds of "3rd parties" regardless of your choice.</li><li>Wait for a few seconds until fake DSPs and data brokers receive your data.</li><li>Exchange your full name or phone number for an IDFA (if present), IP address and user-agent through the <code>MAID &lt;&gt; PII</code> data purchased somewhere.</li><li>Now, access the "Mobility data" consisting of geolocation history, and filter it using the values from the previous step. </li></ol><p>Congratulations! You found yourself. </p><p>I <a href="https://excalidraw.com/?ref=timsh.org#json=Ip5AaR-FPppPmtL3AcrBg,-woEvDuI7vER5B7skpT3zA" rel="noreferrer">created a flowchart</a> that includes almost all actors and data mentioned above - now you can see how it's all connected. </p><figure><img src="https://timsh.org/content/images/2025/02/dataflow_upd-1.png" alt="" loading="lazy" width="2000" height="747" srcset="https://timsh.org/content/images/size/w600/2025/02/dataflow_upd-1.png 600w, https://timsh.org/content/images/size/w1000/2025/02/dataflow_upd-1.png 1000w, https://timsh.org/content/images/size/w1600/2025/02/dataflow_upd-1.png 1600w, https://timsh.org/content/images/size/w2400/2025/02/dataflow_upd-1.png 2400w"></figure><p>This is the worst thing about these data trades that happen constantly around the world - each small part of it is (or seems) legit. It's the bigger picture that makes them look ugly. </p><hr><h2 id="afterwords">Afterwords</h2><p>Thanks for reading this story until the end!<br>My research was heavily influenced by these posts and investigations: </p><figure><a href="https://krebsonsecurity.com/2024/10/the-global-surveillance-free-for-all-in-mobile-ad-data/?ref=timsh.org"><div><p>The Global Surveillance Free-for-All in Mobile Ad Data</p><p>Not long ago, the ability to remotely track someone’s daily movements just by knowing their home address, employer, or place of worship was considered a powerful surveillance tool that should only be in the purview of nation states. But a…</p><p><img src="https://timsh.org/content/images/icon/favicon.ico" alt=""><span>Krebs on Security</span><span>Skip to content</span></p></div><p><img src="https://timsh.org/content/images/thumbnail/peoplephone.png" alt="" onerror="this.style.display = 'none'"></p></a></figure><figure><a href="https://www.404media.co/candy-crush-tinder-myfitnesspal-see-the-thousands-of-apps-hijacked-to-spy-on-your-location/?ref=timsh.org"><div><p>Candy Crush, Tinder, MyFitnessPal: See the Thousands of Apps Hijacked to Spy on Your Location</p><p>A hack of location data company Gravy Analytics has revealed which apps are—knowingly or not—being used to collect your information behind the scenes.</p><p><img src="https://timsh.org/content/images/icon/favicon-3.svg" alt=""><span>404 Media</span><span>Joseph Cox</span></p></div><p><img src="https://timsh.org/content/images/thumbnail/andrew-guan-lTUyP3RaLpw-unsplash.jpg" alt="" onerror="this.style.display = 'none'"></p></a></figure><figure><a href="https://interaktiv.br.de/ausspioniert-mit-standortdaten/en/index.html?ref=timsh.org"><div><p>Under Surveillance</p><p>How Location Data Jeopardizes German Security</p><p><img src="https://timsh.org/content/images/icon/apple-touch-icon.png" alt=""><span>BR</span><span>BR Data</span></p></div><p><img src="https://timsh.org/content/images/thumbnail/teaser.png" alt="" onerror="this.style.display = 'none'"></p></a></figure>
        </section></div>]]></description>
        </item>
    </channel>
</rss>