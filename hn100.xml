<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 09 Sep 2024 01:30:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Reclaim the Stack (139 pts)]]></title>
            <link>https://reclaim-the-stack.com</link>
            <guid>41483675</guid>
            <pubDate>Sun, 08 Sep 2024 22:11:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://reclaim-the-stack.com">https://reclaim-the-stack.com</a>, See on <a href="https://news.ycombinator.com/item?id=41483675">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main><div><p><img alt="Reclaim the Stack" loading="lazy" width="250" height="134" decoding="async" data-nimg="1" src="https://reclaim-the-stack.com/reclaim-the-stack.png"></p><p>We spent 7 months building a Kubernetes based platform to replace Heroku for our SaaS product at <a href="https://www.mynewsdesk.com/">mynewsdesk.com</a>. <strong>The results were a 90% reduction in costs and a 30% improvement in performance.</strong> We also significantly improved developer experience with reduced deploy times and faster / more accessible tooling.</p><p>We have now open sourced the entire stack, so you can do the same, but in a few days instead of 7 months. <strong>It's time to Reclaim the Stack!</strong></p><p><a href="https://reclaim-the-stack.com/docs/kubernetes-platform/introduction">Read the Documentation</a><a href="https://discord.gg/v23eA4FMPC">Join the Discord Server</a></p></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[FBI recommends using an ad blocker (2022) (239 pts)]]></title>
            <link>https://www.ic3.gov/Media/Y2022/PSA221221</link>
            <guid>41483581</guid>
            <pubDate>Sun, 08 Sep 2024 21:57:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ic3.gov/Media/Y2022/PSA221221">https://www.ic3.gov/Media/Y2022/PSA221221</a>, See on <a href="https://news.ycombinator.com/item?id=41483581">Hacker News</a></p>
Couldn't get https://www.ic3.gov/Media/Y2022/PSA221221: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[White House asks agencies to step up internet routing security efforts (102 pts)]]></title>
            <link>https://www.reuters.com/world/us/white-house-asks-agencies-step-up-internet-routing-security-efforts-2024-09-03/</link>
            <guid>41482087</guid>
            <pubDate>Sun, 08 Sep 2024 18:25:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.reuters.com/world/us/white-house-asks-agencies-step-up-internet-routing-security-efforts-2024-09-03/">https://www.reuters.com/world/us/white-house-asks-agencies-step-up-internet-routing-security-efforts-2024-09-03/</a>, See on <a href="https://news.ycombinator.com/item?id=41482087">Hacker News</a></p>
Couldn't get https://www.reuters.com/world/us/white-house-asks-agencies-step-up-internet-routing-security-efforts-2024-09-03/: Error: Request failed with status code 401]]></description>
        </item>
        <item>
            <title><![CDATA[Core: New way to develop video games (185 pts)]]></title>
            <link>https://github.com/damn/core</link>
            <guid>41482060</guid>
            <pubDate>Sun, 08 Sep 2024 18:21:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/damn/core">https://github.com/damn/core</a>, See on <a href="https://news.ycombinator.com/item?id=41482060">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">core</h2><a id="user-content-core" aria-label="Permalink: core" href="#core"></a></p>
<p dir="auto">Core is an experimental new way to write videogames.</p>
<p dir="auto">It uses a simple component system, where components are just clojure vectors of <code>[keyword value]</code> and the different entities are clojure maps.</p>
<p dir="auto">Side effects in the game are just components like <code>[:tx/foo param]</code> named 'tx=transaction' similar to the datomic structure.</p>
<p dir="auto">The whole game state is stored in one atom: <code>app/state</code> and entities are again atoms inside the main atom (like in our universe).</p>
<p dir="auto">The whole content of the application is stored in one <code>resources/properties.edn</code> and uses malli-schemas for validation and can be edited with a GUI as seen in the screenshot below.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Screenshots</h2><a id="user-content-screenshots" aria-label="Permalink: Screenshots" href="#screenshots"></a></p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/842388/365458510-1c7451d0-57f0-48c9-bee3-8eedf332910f.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjU4MzEzMDIsIm5iZiI6MTcyNTgzMTAwMiwicGF0aCI6Ii84NDIzODgvMzY1NDU4NTEwLTFjNzQ1MWQwLTU3ZjAtNDhjOS1iZWUzLThlZWRmMzMyOTEwZi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwOTA4JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDkwOFQyMTMwMDJaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT0wYjIxNjFiYzJmMjY2MjY3YWUzZDFlMmZlNGE4N2MyNmI4NTNiY2QzMTkwMDZhYzQ3ZGRmNzI5NmI0MTcxMjQ4JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.yF1HOGqfRE9ineDeinS4emwUsDpgmlkXHU6v3anJydI"><img width="1680" alt="screenshot" src="https://private-user-images.githubusercontent.com/842388/365458510-1c7451d0-57f0-48c9-bee3-8eedf332910f.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjU4MzEzMDIsIm5iZiI6MTcyNTgzMTAwMiwicGF0aCI6Ii84NDIzODgvMzY1NDU4NTEwLTFjNzQ1MWQwLTU3ZjAtNDhjOS1iZWUzLThlZWRmMzMyOTEwZi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwOTA4JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDkwOFQyMTMwMDJaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT0wYjIxNjFiYzJmMjY2MjY3YWUzZDFlMmZlNGE4N2MyNmI4NTNiY2QzMTkwMDZhYzQ3ZGRmNzI5NmI0MTcxMjQ4JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.yF1HOGqfRE9ineDeinS4emwUsDpgmlkXHU6v3anJydI"></a>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/842388/365458920-aee42c1d-4b34-4efc-b40a-21fd0fd9e3c9.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjU4MzEzMDIsIm5iZiI6MTcyNTgzMTAwMiwicGF0aCI6Ii84NDIzODgvMzY1NDU4OTIwLWFlZTQyYzFkLTRiMzQtNGVmYy1iNDBhLTIxZmQwZmQ5ZTNjOS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwOTA4JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDkwOFQyMTMwMDJaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1hMzJiNzNkOGUwZWEzMjQyM2FmODhjZTE0ZTYyZmJkYzk2YjgyZjMxNGYxNzM4Yjc5MjZlMDZjZTMzYmU3OWMxJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.ehjsymwI04Gj940bQZbx6FDHiVVQ4uKhMg26gQq9Rks"><img width="1432" alt="Screenshot 2024-09-08 at 11 53 59 PM" src="https://private-user-images.githubusercontent.com/842388/365458920-aee42c1d-4b34-4efc-b40a-21fd0fd9e3c9.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjU4MzEzMDIsIm5iZiI6MTcyNTgzMTAwMiwicGF0aCI6Ii84NDIzODgvMzY1NDU4OTIwLWFlZTQyYzFkLTRiMzQtNGVmYy1iNDBhLTIxZmQwZmQ5ZTNjOS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjQwOTA4JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI0MDkwOFQyMTMwMDJaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1hMzJiNzNkOGUwZWEzMjQyM2FmODhjZTE0ZTYyZmJkYzk2YjgyZjMxNGYxNzM4Yjc5MjZlMDZjZTMzYmU3OWMxJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCZhY3Rvcl9pZD0wJmtleV9pZD0wJnJlcG9faWQ9MCJ9.ehjsymwI04Gj940bQZbx6FDHiVVQ4uKhMg26gQq9Rks"></a>
<p dir="auto"><h2 tabindex="-1" dir="auto">How to start developing</h2><a id="user-content-how-to-start-developing" aria-label="Permalink: How to start developing" href="#how-to-start-developing"></a></p>
<ul dir="auto">
<li>Starts an NREPL-Server</li>
<li>On application close (ESC in the main menu), clojure.tools.namespace will do  refresh on any changed files and restart the app.</li>
<li>On any error the JVM does not have to be restarted, you can fix the error and call <code>dev-loop/restart!'</code> I have bound it on my VIM to F5 with:
<code>nmap &lt;F5&gt; :Eval (do (in-ns 'dev-loop)(restart!))</code></li>
</ul>

<p dir="auto"><h2 tabindex="-1" dir="auto">Code Licensed under MIT License.</h2><a id="user-content-code-licensed-under-mit-license" aria-label="Permalink: Code Licensed under MIT License." href="#code-licensed-under-mit-license"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Asset license</h2><a id="user-content-asset-license" aria-label="Permalink: Asset license" href="#asset-license"></a></p>
<p dir="auto">The assets used are proprietary and not open source.</p>
<ul dir="auto">
<li>Tilesets by <a href="https://winlu.itch.io/" rel="nofollow">https://winlu.itch.io/</a></li>
<li>Creatures, Items, Skill-Icons,FX and other assets by <a href="https://www.oryxdesignlab.com/" rel="nofollow">https://www.oryxdesignlab.com</a></li>
<li>Cursors from Leonid Deburger <a href="https://deburger.itch.io/" rel="nofollow">https://deburger.itch.io/</a></li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Serving AI from the Basement – 192GB of VRAM Setup (237 pts)]]></title>
            <link>https://ahmadosman.com/blog/serving-ai-from-basement/</link>
            <guid>41481852</guid>
            <pubDate>Sun, 08 Sep 2024 17:47:44 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ahmadosman.com/blog/serving-ai-from-basement/">https://ahmadosman.com/blog/serving-ai-from-basement/</a>, See on <a href="https://news.ycombinator.com/item?id=41481852">Hacker News</a></p>
Couldn't get https://ahmadosman.com/blog/serving-ai-from-basement/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[The muscular imagination of Iain M. Banks: a future you might want (188 pts)]]></title>
            <link>https://www.robinsloan.com/moonbound/muscular-imagination/</link>
            <guid>41481821</guid>
            <pubDate>Sun, 08 Sep 2024 17:42:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.robinsloan.com/moonbound/muscular-imagination/">https://www.robinsloan.com/moonbound/muscular-imagination/</a>, See on <a href="https://news.ycombinator.com/item?id=41481821">Hacker News</a></p>
Couldn't get https://www.robinsloan.com/moonbound/muscular-imagination/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA["Unstripping" binaries: Restoring debugging information in GDB with Pwndbg (103 pts)]]></title>
            <link>https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/</link>
            <guid>41481682</guid>
            <pubDate>Sun, 08 Sep 2024 17:23:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/">https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/</a>, See on <a href="https://news.ycombinator.com/item?id=41481682">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page" role="main">

			
				
<article id="post-108110">
	<!-- .entry-header -->

	<div>
		<p><em>By Jason An</em></p>
<p>GDB loses significant functionality when debugging binaries that lack debugging symbols (also known as “stripped binaries”). Function and variable names become meaningless addresses; setting breakpoints requires tracking down relevant function addresses from an external source; and printing out structured values involves staring at a memory dump trying to manually discern field boundaries.</p>
<p>That’s why this summer at Trail of Bits, I extended <a href="https://github.com/pwndbg/pwndbg">Pwndbg</a>—a plugin for GDB maintained by my mentor, <a href="https://disconnect3d.pl/">Dominik Czarnota</a>—with two new features to bring the stripped debugging experience closer to what you’d expect from a debugger in an IDE. Pwndbg now integrates Binary Ninja for enhanced GDB+Pwndbg intelligence and enables dumping Go structures for improved Go binary debugging.</p>
<h3>Binary Ninja integration</h3>
<p>To help improve GDB+Pwndbg intelligence during debugging, I integrated Pwndbg with <a href="https://binary.ninja/">Binary Ninja</a>, a popular decompiler with a versatile scripting API, by installing an XML-RPC server inside Binary Ninja, and then querying it from Pwndbg. This allows Pwndbg to access Binary Ninja’s analysis database, which is used for syncing symbols, function signatures, stack variable offsets, and more, recovering much of the debugging experience.</p>
<div id="attachment_108114"><p><img fetchpriority="high" decoding="async" aria-describedby="caption-attachment-108114" data-attachment-id="108114" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_1-4/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1.png" data-orig-size="818,174" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_1" data-image-description="" data-image-caption="<p>Figure 1: Pwndbg showing symbols and argument names synced from Binary Ninja in a stripped binary</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1-300x64.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1.png" alt="" width="818" height="174" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1.png 818w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1-300x64.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_1-768x163.png 768w" sizes="(max-width: 818px) 100vw, 818px"></p><p id="caption-attachment-108114">Figure 1: Pwndbg showing symbols and argument names synced from Binary Ninja in a stripped binary</p></div>
<p>For the decompilation, I pulled the tokens from Binary Ninja instead of serializing them to text first. This allows for fully syntax-highlighted decompilation, configurable to use any of <a href="https://docs.binary.ninja/dev/bnil-overview.html">Binary Ninja’s 3 IL levels</a>. The decompilation is shown directly in the Pwndbg context, with the current line highlighted, just like in the assembly view.</p>
<div id="attachment_108115"><p><img decoding="async" aria-describedby="caption-attachment-108115" data-attachment-id="108115" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_2-4/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2.png" data-orig-size="1229,423" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_2" data-image-description="" data-image-caption="<p>Figure 2: Decompilation pulled from Binary Ninja and displayed in Pwndbg</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2-300x103.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2.png" alt="" width="1229" height="423" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2.png 1229w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2-300x103.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_2-768x264.png 768w" sizes="(max-width: 1229px) 100vw, 1229px"></p><p id="caption-attachment-108115">Figure 2: Decompilation pulled from Binary Ninja and displayed in Pwndbg</p></div>
<p>I also implemented a feature to display the current program counter (PC) register as an arrow inside Binary Ninja and a feature to set breakpoints from within Binary Ninja to reduce the amount of switching to and from Pwndbg involved.</p>
<div id="attachment_108117"><p><img decoding="async" aria-describedby="caption-attachment-108117" data-attachment-id="108117" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_3-4/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3.png" data-orig-size="1547,290" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_3" data-image-description="" data-image-caption="<p>Figure 3: Binary Ninja displaying icons for the current PC and breakpoints</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3-300x56.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3.png" alt="" width="1547" height="290" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3.png 1547w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3-300x56.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3-768x144.png 768w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_3-1536x288.png 1536w" sizes="(max-width: 1547px) 100vw, 1547px"></p><p id="caption-attachment-108117">Figure 3: Binary Ninja displaying icons for the current PC and breakpoints</p></div>
<p>The most involved component of the integration is syncing stack variable names. Anywhere a stack address appears in Pwndbg, like in the register view, stack view, or function argument previews, the integration will check if it’s a named stack variable in Binary Ninja. If it is, it will show the proper label. It will even check parent stack frames so that variables from the caller will still be labeled properly.</p>
<div id="attachment_108118"><p><img loading="lazy" decoding="async" aria-describedby="caption-attachment-108118" data-attachment-id="108118" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_4-3/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4.png" data-orig-size="1875,719" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_4" data-image-description="" data-image-caption="<p>Figure 4: A demonstration of how stack variable labeling is displayed</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-300x115.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-1650x633.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-1650x633.png" alt="" width="690" height="265" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-1650x633.png 1650w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-300x115.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-768x295.png 768w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4-1536x589.png 1536w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_4.png 1875w" sizes="(max-width: 690px) 100vw, 690px"></p><p id="caption-attachment-108118">Figure 4: A demonstration of how stack variable labeling is displayed</p></div>
<p>The main difficulty in implementing this feature came from the fact that Binary Ninja only provides stack variables as an offset from the stack frame base, so the frame base needs to be deduced in order to compute absolute addresses. Most architectures, like x86, have a frame pointer register that points to the frame base, but most architectures, including x86, <a href="https://stackoverflow.com/q/14666665">don’t actually <em>need</em> the frame pointer</a>, so compilers are free to use it like any other register.</p>
<p>Fortunately, Binary Ninja has constant value propagation, so it can tell if registers are a predictable offset from the frame base. So, my implementation will first check if the frame pointer is actually the frame base, and if it’s not, it will see if the stack pointer advanced a predictable amount (which is usually true with modern compilers); otherwise, it will check every other general-purpose register to try to find one with a consistent offset. Technically, this approach won’t work all the time, but in practice, it should almost never fail.</p>
<h3>Go debugging</h3>
<p>A common pain point when debugging executables compiled from non-C programming languages (and sometimes even C) is that they tend to have complex memory layouts that make it hard to dump values. A benign example is dumping a <a href="https://go.dev/blog/slices-intro">slice in Go</a>, which requires one command to dump the pointer and length, and another to examine the slice contents. Dumping a map, on the other hand, can require over ten commands for a small map, and hundreds for larger ones, which is completely impractical for a human.</p>
<p>That’s why I created the <code>go-dump</code> command. Using <a href="https://github.com/golang/go/tree/master/src/runtime">the Go compiler’s source code</a> as a reference, I implemented dumping for all of Go’s built-in types, including integers, strings, complex numbers, pointers, slices, arrays, and maps. The built-in types are notated just like they are in Go, so you don’t need to learn any new syntax to use the command properly.</p>
<div id="attachment_108121"><p><img loading="lazy" decoding="async" aria-describedby="caption-attachment-108121" data-attachment-id="108121" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_5-3/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5.png" data-orig-size="794,81" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_5" data-image-description="" data-image-caption="<p>Figure 5: Dumping a simple map type using the go-dump command</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5-300x31.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5.png" alt="" width="794" height="81" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5.png 794w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5-300x31.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_5-768x78.png 768w" sizes="(max-width: 794px) 100vw, 794px"></p><p id="caption-attachment-108121">Figure 5: Dumping a simple map type using the go-dump command</p></div>
<p>The <code>go-dump</code> command is also capable of parsing and dumping arbitrarily nested types so that every type can be dumped with just one command.</p>
<div id="attachment_108122"><p><img loading="lazy" decoding="async" aria-describedby="caption-attachment-108122" data-attachment-id="108122" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_6-2/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_6.png" data-orig-size="608,65" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_6" data-image-description="" data-image-caption="<p>Figure 6: Dumping a more complex slice of map types using the go-dump command</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_6-300x32.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_6.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_6.png" alt="" width="608" height="65" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_6.png 608w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_6-300x32.png 300w" sizes="(max-width: 608px) 100vw, 608px"></p><p id="caption-attachment-108122">Figure 6: Dumping a more complex slice of map types using the go-dump command</p></div>
<h3>Parsing Go’s runtime types</h3>
<p>While Go-specific dumping is much nicer than manual memory dumping, it still poses many usability concerns. You need to know the full type of the value you’re dumping, which can be hard to determine and usually involves a lot of guesswork, especially when dealing with structs that have many fields or nested structs. Even if you have deduced the full type, some things are still unknowable because they have no effect on compilation, like struct field names and type names for user-defined types.</p>
<p>Conveniently, the Go compiler emits a runtime type object for <strong>every</strong> type used in the program (to be used with <a href="https://pkg.go.dev/reflect">the <code>reflect</code> package</a>), which contains struct layouts for arbitrarily nested structs, type names, size, alignment, and more. These type objects can also be matched up to values of that type, as interface values store a pointer to the type object along with a pointer to the data, and heap-allocated values have their type object passed into their allocation function (usually <code>runtime.newobject</code>).</p>
<p>I wrote a parser capable of recursively extracting this information in order to process type information for arbitrarily nested types. This parser is exposed via the <code>go-type</code> command, which displays information about a runtime type given its address. For structs, this information includes the type, name, and offset of every field.</p>
<div id="attachment_108125"><p><img loading="lazy" decoding="async" aria-describedby="caption-attachment-108125" data-attachment-id="108125" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_7-2/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_7.png" data-orig-size="643,595" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_7" data-image-description="" data-image-caption="<p>Figure 7: Examining a struct type that consists of an int and a string</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_7-300x278.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_7.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_7-300x278.png" alt="" width="300" height="278" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_7-300x278.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_7.png 643w" sizes="(max-width: 300px) 100vw, 300px"></p><p id="caption-attachment-108125">Figure 7: Examining a struct type that consists of an int and a string</p></div>
<p>This can be used to dump values in two ways. The first, easier way only works for interface values, since the type pointer is stored along with the data pointer, making it easy to automatically retrieve. These can be dumped using Go’s any type for empty interfaces (ones with no methods), and the <code>interface</code> type for non-empty interfaces. When dumping, the command will automatically retrieve and parse the type, leading to a seamless dump without having to enter any type information.</p>
<div id="attachment_108126"><p><img loading="lazy" decoding="async" aria-describedby="caption-attachment-108126" data-attachment-id="108126" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_8-2/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8.png" data-orig-size="1388,84" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_8" data-image-description="" data-image-caption="<p>Figure 8: Dumping an interface value without specifying any type information</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8-300x18.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8.png" alt="" width="1388" height="84" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8.png 1388w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8-300x18.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_8-768x46.png 768w" sizes="(max-width: 1388px) 100vw, 1388px"></p><p id="caption-attachment-108126">Figure 8: Dumping an interface value without specifying any type information</p></div>
<p>The second way works for all values but requires you to find and specify the pointer to the type for the value. In many cases, it is as easy as looking for the pointer passed into the function that allocated the value, but for global variables or variables whose allocation may be hard to find, some guesswork may be involved in finding the type. However, this method is generally still easier than trying to manually deduce the type layout and is capable of dumping even the most complex types. I tested it on a few large struct types in a stripped build of the Go compiler, which is one of the largest and most complex open-source Go codebases, and it was able to dump all of them with no problem.</p>
<div id="attachment_108128"><p><img loading="lazy" decoding="async" aria-describedby="caption-attachment-108128" data-attachment-id="108128" data-permalink="https://blog.trailofbits.com/2024/09/06/unstripping-binaries-restoring-debugging-information-in-gdb-with-pwndbg/figure_9-2/" data-orig-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9.png" data-orig-size="1792,1050" data-comments-opened="1" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="figure_9" data-image-description="" data-image-caption="<p>Figure 9: Dumping a complex structure in the Go compiler only specifying a type address, using the -p flag for pretty printing</p>
" data-medium-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-300x176.png" data-large-file="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-1650x967.png" tabindex="0" role="button" src="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-1650x967.png" alt="" width="690" height="404" srcset="https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-1650x967.png 1650w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-300x176.png 300w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-768x450.png 768w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9-1536x900.png 1536w, https://blog.trailofbits.com/wp-content/uploads/2024/09/figure_9.png 1792w" sizes="(max-width: 690px) 100vw, 690px"></p><p id="caption-attachment-108128">Figure 9: Dumping a complex structure in the Go compiler only specifying a type address, using the -p flag for pretty printing</p></div>
<h3>Recap and looking forward</h3>
<p>This summer, I enhanced Pwndbg so it can be integrated with Binary Ninja to access its rich debugging information. I also added the <code>go-dump</code> command for dumping Go values. All of this is available on the Pwndbg dev branch and its latest release.</p>
<p>Moving forward, there’s even more that can be done to improve the debugging experience. I developed my Binary Ninja integration with a modular design so that it would be easy to add support for more decompilers in the future. I think it would be amazing to fully support <a href="https://ghidra-sre.org/">Ghidra</a> (the current integration only syncs decompilation), as Ghidra is a free and open-source decompiler, making it accessible to everyone who wants to use the functionality.</p>
<p>In terms of Go debugging, work can be done to add better support for displaying and working with goroutines, which is currently one of the major advantages of <a href="https://github.com/go-delve/delve">the Delve debugger</a> (a debugger specialized for debugging Go) over GDB/Pwndbg. For example, Delve is capable of listing every goroutine and the instruction that created them and it also has a command to switch between goroutines.</p>
<h3>Acknowledgments</h3>
<p>Working at Trail of Bits this summer has been an absolutely amazing experience, and I would like to thank them for giving me the opportunity to work on Pwndbg. In particular, I would like to thank my manager, Dominik Czarnota, for being incredibly responsive about reviewing my code and giving me feedback and ideas about my work, and the Pwndbg community, as they have been incredibly helpful with answering any questions I had during the development process.</p>

			</div><!-- .entry-content -->

	
</article><!-- #post-108110 -->
						<!-- #nav-below -->
		
					<!-- #comments .comments-area -->

			
			</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Companies need junior devs (113 pts)]]></title>
            <link>https://softwaredoug.com/blog/2024/09/07/your-team-needs-juniors</link>
            <guid>41481279</guid>
            <pubDate>Sun, 08 Sep 2024 16:22:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://softwaredoug.com/blog/2024/09/07/your-team-needs-juniors">https://softwaredoug.com/blog/2024/09/07/your-team-needs-juniors</a>, See on <a href="https://news.ycombinator.com/item?id=41481279">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
	  <p>Getting coffee with a bunch of local tech leaders, I surprised myself with how stridently I argued why companies should hire junior engineers.</p>

<p>Lately, BigTech only wants <a href="https://technical.ly/professional-development/why-is-it-so-hard-to-find-entry-level-software-engineering-jobs/">elite squads of Staff devs</a> that can “hit the ground running” on the big (often AI) initiative. It’s been remarked (<a href="https://www.reddit.com/r/cscareerquestions/comments/11zhlir/ai_will_replace_most_of_the_junior_dev_jobs/">over</a> and <a href="https://forum.freecodecamp.org/t/the-future-of-junior-developers-after-ai-revolution/611977">over</a>) that AI will completely replace junior developers. Juniors, after all, exist to do “code monkey” work, easily replaced with an LLM.</p>

<p>However, that misses the mark on why we have junior employees. Coaching junior employees becomes its own force multiplier for innovating at scale. It’s not about the added labor, it’s about a psychologically safe culture that values teaching and learning, and the innovation that this unlocks.</p>

<h2 id="junior-talent-forces-your-team-to-teach-coach-collaborate">Junior Talent forces your team to teach, coach, collaborate</h2>

<p>What does it say about an organization that “ships”, but doesn’t collaborate?</p>

<p>In their article <a href="https://hbr.org/2007/07/the-knowledge-creating-company">The Knowledge-Creating Company</a>, Nonaka and Takeuchi argue that Japanese companies out innovated Western counterparts in the 80s/90s because of their focus on knowledge:</p>

<blockquote>
  <p>few managers grasp the true nature of the knowledge-creating company—let alone know how to manage it. The reason: They misunderstand what knowledge is and what companies must do to exploit it.</p>
</blockquote>

<p>Western companies, they argue, see the “assembly line” of a knowledge firm. They see the outputs: KPIs, OKRs, Quarterly results. If you only think in terms of the assembly line, you will only seek units of input that increase those outputs (ie expert employees that ‘hit the ground running’ to churn out higher metrics).</p>

<p>However, as Nonaka and Takeuchi remark:</p>

<blockquote>
  <p>Making personal knowledge available to others is the central activity of the knowledge-creating company.</p>
</blockquote>

<p>Innovative companies prioritize teaching, spreading, sharing knowledge. Ingraining knowledge into the company’s DNA matters more than a single developer shipping that next brilliant new feature.</p>

<p>Further, it turns out –  <strong>knowledge discovery IS innovation</strong>.</p>

<p>Teaching helps not just the juniors, but the seniors too. The <a href="https://effectiviology.com/protege-effect-learn-by-teaching/#Benefits_of_teaching_others">“Protege effect”</a> is a well studied phenomenon where the teacher’s knowledge deepens when required to teach. Juniors force-multiply seniors, not by writing code, but just by forcing seniors to teach and rethink their knowledge.</p>

<p>Redundancy - overlap in focus area - undergirds this whole process. Again from  Nonaka and Takeuchi:</p>

<blockquote>
  <p>Redundancy is important because it encourages frequent dialogue and communication. This helps create a “common cognitive ground” among employees and thus facilitates the transfer of tacit knowledge</p>
</blockquote>

<p>Juniors become this redundancy. They absorb company tribal knowledge, reprocess it, internalize it, translate it to explicit knowledge. It helps seniors become aware of their assumptions, question them, refine them. To act as a Socratic dialog to ensure you’re actually on the right path. Such redundancy extends beyond innovating, to the simple team needs of fixing bugs and being on-call at 3AM so your senior devs don’t collapse from burnout.</p>

<h2 id="generalists-innovate-better-than-specialists">Generalists innovate better than specialists</h2>

<p>As argued in the book Range - <a href="https://www.amazon.com/Range-Generalists-Triumph-Specialized-World/dp/0735214484">generalists often bring innovative ideas to the table</a>. The Wright Brothers are a classic example of non-expert, tinkering bicycle mechanics that end up inventing a flying machine. NoSQL databases come from distributed systems tinkerers, not relational database experts.</p>

<p>Junior employees come prepared with that Socratic dialog: to ask dumb questions and seek their answers. Often, it turns out, experts – through ego or blindness - don’t see obvious solutions. They don’t question tacit assumptions. Juniors on the other hand eagerly crash into, and sometimes through, problems seniors have convinced themselves are too hard. Juniors try “dumb” things that often fail, but sometimes show how blinded experts have become from their long held assumptions.</p>

<p>Some of the great ideas come from junior employees:</p>

<ul>
  <li>Jack Dorsey had the idea for Twitter as a junior employee of a podcast company</li>
  <li>Post-it notes were invented by junior employees Spencer Silver and Art Fry at 3M</li>
  <li>Firefox was a side project of Blake Ross while working at Netscape</li>
</ul>

<p>Juniors come from more diverse backgrounds than seniors (in every sense of the word). Leading to ways of thinking and perspectives that seniors totally miss.</p>

<h2 id="juniors-mean-psychological-safety-means-more-innovation">Juniors mean psychological safety means more innovation</h2>

<p>The term <a href="https://web.mit.edu/curhan/www/docs/Articles/15341_Readings/Group_Performance/Edmondson%20Psychological%20safety.pdf">psychological safety</a> in organizational literature stems from a 1999 paper by Amy Edmonson</p>

<p>The fundamental quote, in the abstract:</p>

<blockquote>
  <p>Team psychological safety is associated with learning behavior, team efficacy is not</p>
</blockquote>

<p>(efficacy == perceived competence)</p>

<p>Creating environments where coaching is the norm, lead to increased psychological safety. Team members readily admit mistakes, and report errors.</p>

<p>In short, cultures of learning beget psychological safety. Psychological safety begets learning. Learning and innovation go hand in hand.</p>

<p>This is somehat in contrast to group cohesiveness, a tightly related long-term group of colleagues. Such cohesiveness can:</p>

<blockquote>
  <p>reduce willingness to disagree and challenge others’ views, such as in the phenomenon of groupthink, implying a lack of interpersonal risk taking.</p>
</blockquote>

<p>A stable team of long-term colleagues falls into groupthink and loses some ability to innovate. They sometimes form an immune system to outside ideas and experience. Onboarding anyone, especially juniors may seem like an annoying chore, as the colleagues don’t enjoy teaching and learning. We’ve all met that entrenched employee living in their knowledge silo, not excited to open their work up to others. They lose that “learning behavior” muscle.</p>

<p>“Learning behaviors”, crucially, include the ability to experiment - something I hear endlessly that more teams wish they had. This translates trying new approaches, running more A/B tests, being willing to try product directions that don’t work out (but sometimes do). Founders often talk about “failing fast”, but founders/managers/etc can also be their own worse enemy: wanting only the experts who already have all the answers, rather that juniors hungry to find new answers.</p>

<h2 id="your-org-suffers-from-not-hiring-juniors">Your org suffers from not hiring juniors</h2>

<p>Many of these themes begin to overlap: hire juniors that want to learn. Hire seniors that want to teach. Those who can’t teach, maybe shouldn’t be allowed to “do”.</p>

<p>I see a team much like a health University research lab. The platonic idea senior is open-minded and eager to be challenged. Eager to unlearn their expertise to find a new path. Along with juniors who come in enthusiastic to absorb knowledge like a sponge, asking naive questions that draw out new ideas and shake foundations.</p>

<p>That’s what it feels like to be on a high-performing team. Individuals open to ideas, eager to share credit, and avoid blame. Shipping constantly, sharing wins and learnings, and believing in the team.</p>

<p>Or at least, in my opinion, that’s 50% of the puzzle. The other 50% requires an interface to the “outside world” that protects this team, sells its internal chaos as a cohesive narrative, and works with investors and stakeholders to translate messy experiments into a glorious tale of progress. Sadly, many executives mistake this outer chrome of leadership for the entire system, ignoring the internal combustion engine of teaching and learning that makes it run.</p>

<p>If this isn’t your culture, I’m glad to grab a coffee to talk about what I’ve seen (and where I’ve failed!)</p>

      


	  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Have ‘hobby’ apps become the new social networks? (185 pts)]]></title>
            <link>https://www.theguardian.com/technology/article/2024/sep/08/goodbye-tinder-hello-strava-have-hobby-apps-become-the-new-social-networks</link>
            <guid>41479785</guid>
            <pubDate>Sun, 08 Sep 2024 11:32:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/technology/article/2024/sep/08/goodbye-tinder-hello-strava-have-hobby-apps-become-the-new-social-networks">https://www.theguardian.com/technology/article/2024/sep/08/goodbye-tinder-hello-strava-have-hobby-apps-become-the-new-social-networks</a>, See on <a href="https://news.ycombinator.com/item?id=41479785">Hacker News</a></p>
Couldn't get https://www.theguardian.com/technology/article/2024/sep/08/goodbye-tinder-hello-strava-have-hobby-apps-become-the-new-social-networks: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[LuaJIT PR: Add Support for RISC-V 64 (109 pts)]]></title>
            <link>https://github.com/LuaJIT/LuaJIT/pull/1267</link>
            <guid>41479637</guid>
            <pubDate>Sun, 08 Sep 2024 10:57:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/LuaJIT/LuaJIT/pull/1267">https://github.com/LuaJIT/LuaJIT/pull/1267</a>, See on <a href="https://news.ycombinator.com/item?id=41479637">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  <task-lists disabled="" sortable="">
    <div>
      <p dir="auto">This patchset adds full interpreter and backend support for RISC-V 64 G(IMAFD) with LP64D ABI on Linux, with compile-time/runtime extension support for RVC, Zba, Zbb, Zicond, XTheadBa, XTheadBb, XTheadCondMov and XTheadMac.</p>
<p dir="auto">Thanks to Mike Pall, LuaJIT is well renowned for its accomplishments and performance in JIT compilers. As an undergraduate interested in RISC-V and compilers, I'm honored to have a chance to contribute to a production compiler. I also want to express my gratitude for the internship opportunity provided by PLCT Lab, ISCAS, which enabled me to this endeavor.</p>
<p dir="auto">I would greatly value a review of my patch to catch my misses and for a better polish; Your feedback would be invaluable. Thank you for your time and consideration.</p>
    </div>
  </task-lists>
  
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Concrete clickbait: next time you share a spomenik photo (2016) (125 pts)]]></title>
            <link>https://www.new-east-archive.org/articles/show/7269/spomenik-yugoslav-monument-owen-hatherley</link>
            <guid>41479266</guid>
            <pubDate>Sun, 08 Sep 2024 09:34:00 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.new-east-archive.org/articles/show/7269/spomenik-yugoslav-monument-owen-hatherley">https://www.new-east-archive.org/articles/show/7269/spomenik-yugoslav-monument-owen-hatherley</a>, See on <a href="https://news.ycombinator.com/item?id=41479266">Hacker News</a></p>
Couldn't get https://www.new-east-archive.org/articles/show/7269/spomenik-yugoslav-monument-owen-hatherley: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Cruise ships chopped in half are a license to print money (290 pts)]]></title>
            <link>https://newatlas.com/marine/how-to-stretch-cruise-ship/</link>
            <guid>41479035</guid>
            <pubDate>Sun, 08 Sep 2024 08:35:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newatlas.com/marine/how-to-stretch-cruise-ship/">https://newatlas.com/marine/how-to-stretch-cruise-ship/</a>, See on <a href="https://news.ycombinator.com/item?id=41479035">Hacker News</a></p>
Couldn't get https://newatlas.com/marine/how-to-stretch-cruise-ship/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[An open discussion forum for ArXiv papers (459 pts)]]></title>
            <link>https://www.alphaxiv.org/</link>
            <guid>41478690</guid>
            <pubDate>Sun, 08 Sep 2024 06:57:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.alphaxiv.org/">https://www.alphaxiv.org/</a>, See on <a href="https://news.ycombinator.com/item?id=41478690">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Baiting the bot (108 pts)]]></title>
            <link>https://conspirator0.substack.com/p/baiting-the-bot</link>
            <guid>41478138</guid>
            <pubDate>Sun, 08 Sep 2024 04:05:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://conspirator0.substack.com/p/baiting-the-bot">https://conspirator0.substack.com/p/baiting-the-bot</a>, See on <a href="https://news.ycombinator.com/item?id=41478138">Hacker News</a></p>
Couldn't get https://conspirator0.substack.com/p/baiting-the-bot: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[FutureRack: Server racks are everywhere. Now you can find them in your home (112 pts)]]></title>
            <link>https://futurerack.info/main.php</link>
            <guid>41477782</guid>
            <pubDate>Sun, 08 Sep 2024 02:26:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://futurerack.info/main.php">https://futurerack.info/main.php</a>, See on <a href="https://news.ycombinator.com/item?id=41477782">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="about">
<div>
<p><img src="https://futurerack.info/img/FR%20Render%20Cropped.jpg" id="intro_img">
</p>
</div>

<p>Infrastructure for Living</p>
<p>
Server racks are everywhere. Now you can find them in your home.
</p><div id="breadcrumb_living">
<p><a href="#/story_servers" onclick="changeText('NextRoom')">Read more &gt;</a>
</p></div>

</div></div>]]></description>
        </item>
    </channel>
</rss>