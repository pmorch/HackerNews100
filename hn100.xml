<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 27 Oct 2023 03:00:05 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Trying to make sense of why Otis exploded en route to Acapulco this week (122 pts)]]></title>
            <link>https://theeyewall.com/trying-to-make-sense-of-why-otis-exploded-en-route-to-acapulco-this-week/</link>
            <guid>38032242</guid>
            <pubDate>Thu, 26 Oct 2023 21:58:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theeyewall.com/trying-to-make-sense-of-why-otis-exploded-en-route-to-acapulco-this-week/">https://theeyewall.com/trying-to-make-sense-of-why-otis-exploded-en-route-to-acapulco-this-week/</a>, See on <a href="https://news.ycombinator.com/item?id=38032242">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="text">
<h3>One-sentence summary</h3>
<p>Scroll to the bottom for a couple notes on current weather, but in today’s post, I want to try to make some sense of what just happened in Mexico this week.</p>
<h3>Otis’s catastrophic rapid intensification: What happened?</h3>
<p>In general, <a rel="noreferrer noopener" href="https://theeyewall.com/october-25-2023-outlook-after-a-shocking-burst-of-intensification-hurricane-otis-makes-a-catastrophic-landfall-near-acapulco/" data-type="link" data-id="https://theeyewall.com/october-25-2023-outlook-after-a-shocking-burst-of-intensification-hurricane-otis-makes-a-catastrophic-landfall-near-acapulco/" target="_blank">I think Eric did a good job yesterday sort of conveying the general shock</a> many of us in the meteorology community had with regard to Hurricane Otis. The word “unprecedented” gets tossed around a little too fast and loose these days, but truly, this was without any real precedent in Acapulco. And it was with only slight precedent anywhere in terms of how quickly it intensified. </p>
<figure><video controls="" src="https://theeyewall.com/wp-content/uploads/2023/10/2023Otis_IRintensity_48h.mp4"></video><figcaption><a href="https://kouya.has.arizona.edu/" data-type="link" data-id="https://kouya.has.arizona.edu/">Courtesy of Dr. Kim Wood, University of Arizona</a></figcaption></figure>
<p>Otis was the textbook definition of rapid intensification (RI), going from a 50 mph tropical storm on Monday evening to a 165 mph category 5 hurricane last night. Look at the change in Otis between Sunday evening and Tuesday evening, 48 hours apart. You can see the intensification chart to the right of the satellite loop. Through about mid-morning on Tuesday, everything was going basically as you’d expect for a modest hurricane with Otis. It may have been tracking toward a category 2 type landfall, or even a category 3 type landfall in a worst case, if you assumed the general rules of RI in this region. </p>
<p>Much like an onion, there are layers to this story that are important. First, take it from one of the more seasoned hurricane hunters, this was not what they expected when they flew their mission on Tuesday.</p>

<p>And this was before Otis had peaked. The typical satellite-derived intensity values often used to “proxy” intensity of storms that are far away from reconnaissance flights failed in this case to grasp how intense Otis was. In other words, Otis intensified so quickly that it basically outran the ability to measure how intense it actually was.</p>
<p>Here was the raw model output for Otis from Tuesday morning. This is what general weather forecasters would use to assess what the models assume will happen with a storm’s wind forecast. The dashed line is what actually occurred.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis.jpg" target="_blank" rel="noreferrer noopener"><img decoding="async" width="1024" height="719" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis-1024x719.jpg" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis-1024x719.jpg 1024w, https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis-300x211.jpg 300w, https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis-768x540.jpg 768w, https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis-1536x1079.jpg 1536w, https://theeyewall.com/wp-content/uploads/2023/10/102623-intensity-of-Otis.jpg 1600w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Otis’s model forecasts on Tuesday early morning were nowhere remotely close to what happened. (<a href="https://twitter.com/burgwx/status/1717012912999391235" data-type="link" data-id="https://twitter.com/burgwx/status/1717012912999391235" target="_blank" rel="noreferrer noopener">Tomer Burg on Twitter</a>)</figcaption></figure></div>
<p>None of the best, most reliable tropical modeling had Otis as a hurricane, let alone a category 5 storm. To put it bluntly, this was an absolutely catastrophic forecast failure.</p>
<p>Even the National Hurricane Center by late Tuesday morning had it at 90 mph making landfall, well above any forecast data, and they concluded <a rel="noreferrer noopener" href="https://www.nhc.noaa.gov/archive/2023/ep18/ep182023.discus.009.shtml?" data-type="link" data-id="https://www.nhc.noaa.gov/archive/2023/ep18/ep182023.discus.009.shtml?" target="_blank">in their discussion</a> that it seemed reasonable to potentially see further intensification adjustments before landfall. So even in the worst case scenario, the NHC forecast would have still been off by probably two categories less than 18 hours before landfall. And this was using strong meteorological analysis to bias correct the models upward too. And to their credit, they had it at 140 mph by the late afternoon advisory. </p>
<p>Interestingly, one of the tools we use to forecast the probability that a storm will rapidly intensify, SHIPS guidance, failed also. <a rel="noreferrer noopener" href="https://hurricanes.ral.ucar.edu/realtime/plots/northeastpacific/2023/ep182023/stext/23102406EP1823_ships.txt" data-type="link" data-id="https://hurricanes.ral.ucar.edu/realtime/plots/northeastpacific/2023/ep182023/stext/23102406EP1823_ships.txt" target="_blank">Early on Tuesday morning it only showed about a 2-3x above normal</a> chance that the storm would intensify from a 50 mph tropical storm to a 100-125 mph hurricane. Yes, that is above climatology, but it’s not exactly anything impressive given what we’ve seen in recent years. </p>
<p><a rel="noreferrer noopener" href="https://hurricanes.ral.ucar.edu/realtime/plots/northeastpacific/2023/ep182023/stext/23102412EP1823_ships.txt" data-type="link" data-id="https://hurricanes.ral.ucar.edu/realtime/plots/northeastpacific/2023/ep182023/stext/23102412EP1823_ships.txt" target="_blank">By Tuesday afternoon, those odds had increased to 5-9x above normal</a>. But even this only showed 2x above normal odds that we’d get to 140 mph+. There were finally some hints available by mid to late morning on Tuesday, but nothing that would have offered a meaningful forecast improvement over what the NHC had (which called for 20-30 mph of intensification over 12-24 hours).</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-SHIPS.png" target="_blank" rel="noreferrer noopener"><img decoding="async" width="681" height="141" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-SHIPS.png" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-SHIPS.png 681w, https://theeyewall.com/wp-content/uploads/2023/10/102623-SHIPS-300x62.png 300w" sizes="(max-width: 681px) 100vw, 681px"></a><figcaption>SHIPS rapid intensification forecast guidance from Tuesday midday showed about 9x greater than normal probability of 50 mph of intensity gain, which at that point would have meant a category 2 or 3 storm. The odds of something truly massive were still only about 2x above normal. (UCAR)</figcaption></figure></div>
<p>So the first question is, why did Otis do what it did? Probably a combination of a couple things. First, Otis was placed ideally in an environment that facilitated constructive wind shear. When we discuss wind shear it’s usually referenced in a negative sense; wind shear inhibits and destroys storms. Well, in occasional cases, as we’ve witnessed in the Gulf with Ian, Delta, Zeta, among many other storms in recent years, the wind shear can actually be&nbsp;<em><strong>con</strong></em>structive and help ‘vent’ the system. In this case, Otis was optimally placed in the right entrance region of the jet stream.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-jet-stream-analysis.png" target="_blank" rel="noreferrer noopener"><img decoding="async" loading="lazy" width="1024" height="627" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-jet-stream-analysis-1024x627.png" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-jet-stream-analysis-1024x627.png 1024w, https://theeyewall.com/wp-content/uploads/2023/10/102623-jet-stream-analysis-300x184.png 300w, https://theeyewall.com/wp-content/uploads/2023/10/102623-jet-stream-analysis-768x470.png 768w, https://theeyewall.com/wp-content/uploads/2023/10/102623-jet-stream-analysis.png 1028w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>An analysis map from the GFS model showing jet stream winds on Tuesday morning. Otis (circled) is tenuously placed in the right entrance region of the jet stream, which tends to offer a more favorable environment for intensification. (Tropical Tidbits)</figcaption></figure></div>
<p>Storms are aided in intensification when placed in the left front or right rear (entrance) of the jet stream. Why? In that portion of the jet stream, the winds aloft diverge, meaning they either are moving in opposite directions or stronger wind is diverging away from weaker wind. Upper level divergence leads to rising air. Rising air is necessary for storms to form and maintain, and thus surface pressures tend to fall in this region of the jet stream as well.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-jet_streak_expd0707.gif" target="_blank" rel="noreferrer noopener"><img decoding="async" loading="lazy" width="650" height="400" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-jet_streak_expd0707.gif" alt=""></a><figcaption>A conceptual model of a jet streak showing that the right entrance region (bottom left quadrant) is supportive of upper level divergence and surface pressure falls (<a href="https://hurricanes.ral.ucar.edu/realtime/plots/northeastpacific/2023/ep182023/stext/23102412EP1823_ships.txt" data-type="link" data-id="https://hurricanes.ral.ucar.edu/realtime/plots/northeastpacific/2023/ep182023/stext/23102412EP1823_ships.txt" target="_blank" rel="noreferrer noopener">Penn State University</a>)</figcaption></figure></div>
<p>Otis wasn’t exactly square in the middle of the right entrance region, but it was there. Additionally, Otis tracked right over an area of 31°C sea surface temperatures.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-sst-map.jpg" target="_blank" rel="noreferrer noopener"><img decoding="async" loading="lazy" width="1024" height="723" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-sst-map-1024x723.jpg" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-sst-map-1024x723.jpg 1024w, https://theeyewall.com/wp-content/uploads/2023/10/102623-sst-map-300x212.jpg 300w, https://theeyewall.com/wp-content/uploads/2023/10/102623-sst-map-768x542.jpg 768w, https://theeyewall.com/wp-content/uploads/2023/10/102623-sst-map.jpg 1165w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Sea surface temperatures were close to 31°C over Otis’s path, which is a few degrees above normal. While not the primary cause of Otis’s rapid intensification, they did not hurt. (<a href="https://twitter.com/BMcNoldy/status/1717162243866116157" data-type="link" data-id="https://twitter.com/BMcNoldy/status/1717162243866116157">Brian McNoldy on Twitter</a>)</figcaption></figure></div>
<p>This rich warm water did not hurt matters at all.</p>
<p>So how did every reliable model we use miss this? That’s for graduate students and researchers to answer in the coming years, because I have no formal idea. There was something about Otis that models just could not capture and translate to RI. Human forecasters, recognizing the setup were able to mitigate some but not all of the underforecast issue. Otis’s smaller size may have also contributed. My hunch is also that if Otis had tracked, say 30-40 miles east or west of where it was, it would not have gone off to the races like this. It was simply perfectly placed to optimize intensification.</p>
<p>A less sexy explanation? Otis was almost unprecedented in the historical record. Only Hurricane Patricia in the Pacific in 2015 had a greater rate of RI than Otis. And in the modern era no massive storm has hit Acapulco.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking.png" target="_blank" rel="noreferrer noopener"><img decoding="async" loading="lazy" width="1024" height="741" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking-1024x741.png" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking-1024x741.png 1024w, https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking-300x217.png 300w, https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking-768x556.png 768w, https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking-1536x1111.png 1536w, https://theeyewall.com/wp-content/uploads/2023/10/102623-RI-ranking-2048x1481.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Otis was not the fastest rapidly intensifying storm on record, but it was near the top of the list in the East Pacific, lagging only 2015’s Patricia. (<a href="https://twitter.com/burgwx/status/1717015198068867098" data-type="link" data-id="https://twitter.com/burgwx/status/1717015198068867098" target="_blank" rel="noreferrer noopener">Tomer Burg on Twitter</a>)</figcaption></figure></div>
<p>Unprecedented outcomes are just that, and if the historical record has only one other remotely comparable event in this region, it becomes tough to expect that modeling can “capture” the concept that this would occur in this environment.</p>
<p>It feels like this was a combination of bad luck, bad timing, and bad placement. And it just so happened that a metropolitan area with over 1 million people was in the way.</p>
<p>It’s easy to sit here and pontificate about this or to say that weather forecasts are often wrong. But the thing is, they’re not. They’re often right. With hurricanes, forecasting has improved by leaps and bounds in the last 20 to 30 years. Perfect? No, but often more than acceptable. A failure like this shocks us because we aren’t actually <em>used</em> to forecast failures of this magnitude anymore! 100 years ago? Sure, this was fairly routine. But in the 2020s, we have standards and expectations for weather forecasts, and clearly this was a shock to the system. Busts like this remind us that it’s an imperfect business and there is still much work to do. The work to be done to understand Otis will take time, but we will certainly see many research papers in the coming years.</p>
<h3>Weather update: Tammy, Texas rain, and continued wintry weather north</h3>
<p>Just a quick punch list of items we’ll be watching over the next few days.</p>
<p>Hurricane Tammy’s final advisory was issued this morning, as it has transitioned into an extratropical entity, or something akin to a strong nor’easter. It will meander east of Bermuda for a few days, and there is some chance this could reacquire tropical characteristics at some point. It won’t go quietly, but hopefully any impacts to Bermuda are minimal.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast.png" target="_blank" rel="noreferrer noopener"><img decoding="async" loading="lazy" width="1024" height="696" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast-1024x696.png" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast-1024x696.png 1024w, https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast-300x204.png 300w, https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast-768x522.png 768w, https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast-1536x1044.png 1536w, https://theeyewall.com/wp-content/uploads/2023/10/102623-AL202023_forecast-2048x1392.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>Post-tropical Tammy will remain a strong storm for several more days as it meanders east of Bermuda. (Tomer Burg)</figcaption></figure></div>
<p>Flash flooding concerns will be in the forecast in the southern Plains over the next few days, meandering from Texas into Arkansas. Generally 3 to 5 inches of rain is possible in spots. But higher amounts are a virtual certainty. South of Dallas, the 24 hour rainfall totals in Hood and Somervell Counties are estimated to be close to 10 inches. </p>
<div>
<figure><img decoding="async" loading="lazy" width="994" height="633" src="https://theeyewall.com/wp-content/uploads/2023/10/Screenshot-2023-10-26-064153.png" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/Screenshot-2023-10-26-064153.png 994w, https://theeyewall.com/wp-content/uploads/2023/10/Screenshot-2023-10-26-064153-300x191.png 300w, https://theeyewall.com/wp-content/uploads/2023/10/Screenshot-2023-10-26-064153-768x489.png 768w" sizes="(max-width: 994px) 100vw, 994px"><figcaption>Rain totals southwest of Dallas and Fort Worth are estimated to be close to 10 inches (purple) over the last 24 hours. (NOAA NSSL)</figcaption></figure></div>
<p>Numerous flash flood warnings are posted in North Texas and Hill Country this morning as heavy rain falls and spreads south and east. </p>
<p>Snow will continue in the northern tier. Over a foot fell in Helena, Montana, with snow spreading into North Dakota. Snow should wind down tonight from west to east.</p>
<div>
<figure><a href="https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1.png" target="_blank" rel="noreferrer noopener"><img decoding="async" loading="lazy" width="1024" height="791" src="https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1-1024x791.png" alt="" srcset="https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1-1024x791.png 1024w, https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1-300x232.png 300w, https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1-768x593.png 768w, https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1-1536x1187.png 1536w, https://theeyewall.com/wp-content/uploads/2023/10/102623-hazards_d3_7_contours-1-2048x1583.png 2048w" sizes="(max-width: 1024px) 100vw, 1024px"></a><figcaption>A bunch of items will impact the interior U.S. over the next 3 to 7 days, ranging from heavy snow in the Rockies to heavy rain in the mid-Mississippi Valley to hazardous cold in the North. (NOAA WPC)</figcaption></figure></div>
<p>The hazards map from the Weather Prediction Center is lit up for days 3 to 7 with cold infiltrating from Canada this weekend in the North, the aforementioned heavy rain in mid-Mississippi Valley, and frost and freeze risk from near the Permian Basin and southern New Mexico across to the Ohio and Tennessee Valleys. We’ll have more tomorrow!</p>
 </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Now add a walrus: Prompt engineering in DALL-E 3 (121 pts)]]></title>
            <link>https://simonwillison.net/2023/Oct/26/add-a-walrus/</link>
            <guid>38031839</guid>
            <pubDate>Thu, 26 Oct 2023 21:19:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simonwillison.net/2023/Oct/26/add-a-walrus/">https://simonwillison.net/2023/Oct/26/add-a-walrus/</a>, See on <a href="https://news.ycombinator.com/item?id=38031839">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>



<p>26th October 2023</p>

<p>Last year I wrote about <a href="https://simonwillison.net/2022/Jun/23/dall-e/">my initial experiments with DALL-E 2</a>, OpenAI’s image generation model. I’ve been having an <em>absurd</em> amount of fun playing with its sequel, DALL-E 3 recently. Here are some notes, including <a href="https://simonwillison.net/2023/Oct/26/add-a-walrus/#peeking-under-the-hood">a peak under the hood</a> and some notes on the <a href="https://simonwillison.net/2023/Oct/26/add-a-walrus/#the-leaked-dall-e-prompt">leaked system prompt</a>.</p>
<p>DALL-E 3 is available via ChatGPT Plus. For $20/month you get GPT-4 access, DALL-E 3, <a href="https://simonwillison.net/2023/Oct/14/multi-modal-prompt-injection/">GPT Vision</a>, Code Interpreter (aka <a href="https://simonwillison.net/2023/Oct/17/open-questions/#open-questions.036.jpeg">Coding Intern</a>), <a href="https://simonwillison.net/2023/Mar/24/datasette-chatgpt-plugin/">ChatGPT Plugins</a> and the new, weird and slightly dystopian <a href="https://fedi.simonwillison.net/@simon/111292801843094073">voice chat feature</a> in the ChatGPT mobile apps. It’s absolutely worth the money, for the combined entertainment value alone.</p>
<p>A fascinating thing about DALL-E 3 is that you don’t prompt it directly: you instead access it via ChatGPT, which prompts the model for you.</p>
<p>ChatGPT then turns your query into several prompts, each producing a different image. The prompts it generates are available if you click on the images (on mobile you have to flip your phone horizontal to see that option).</p>
<p>I started by typing this into ChatGPT with DALL-E enabled:</p>
<blockquote>
<p>A super posh pelican with a monocle watching the Monaco F1</p>
</blockquote>
<p>It gave me these four images. I’ve included the prompt it used for each one:</p>

<p>Note how the prompts it generates cover four different styles—photo, illustration, watercolor painting and vector image. They also use pleasing and varied language to describe different aspects of the image.</p>
<p>ChatGPT is prompting DALL-E for us!</p>
<p>The really fun thing though is that you can ask it follow-ups.</p>
<p>I said:</p>
<blockquote>
<p>More like the first one please</p>
</blockquote>
<p>And got back:</p>


<p>Next I added what is becoming my universal DALL-E 3 follow-up prompt, always guaranteed to produce better results:</p>
<blockquote>
<p>Add a walrus</p>
</blockquote>
<p>The result:</p>

<div>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-1.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-1.png" alt="Pelican and a walrus (mostly off screen)"></a>
        <figcaption>Photo of a posh pelican with a golden monocle and a distinguished walrus, both observing the Monaco Grand Prix F1 race. The pelican is perched on a railing while the walrus lounges nearby. Formula 1 cars race by on the circuit, with lavish yachts in the marina behind them.</figcaption>
    </figure>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-2.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-2.png" alt="Pelican and a walrus, excellent"></a>
        <figcaption>Photo of an aristocratic pelican and a stately walrus side by side, watching the Monaco F1 with keen interest. The pelican has a monocle, and the walrus’s tusks shine brightly. The race track is alive with the sound of roaring engines, and the harbor is filled with luxurious boats.</figcaption>
    </figure>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-3.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-3.png" alt="Weird pelican walrus hybrid"></a>
        <figcaption>Photo of a regal pelican, its eye magnified by a monocle, and a majestic walrus with gleaming tusks, both captivated by the Monaco Grand Prix. The racetrack is a blur of speed, and the horizon showcases the grandeur of the harbor and its anchored yachts.</figcaption>
    </figure>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-4.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-4.png" alt="Pelican and a walrus"></a>
        <figcaption>Photo of a chic pelican with a pristine monocle and a sophisticated walrus, both engrossed in the Monaco F1 race. The pelican stands on a vantage point, and the walrus sits comfortably beside it. Racing cars zoom past, and the sea is dotted with opulent boats.</figcaption>
    </figure>
</div>

<p>That <a href="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-2.png">second one</a> is <em>amazing</em>—exactly what I want from a photo of a posh pelican and a walrus watching the Monaco Grand Prix.</p>
<p>I also enjoy how the <a href="https://static.simonwillison.net/static/2023/dalle-3/add-walrus-3.png">third image</a> ended up as a weird Pelican-Walrus hybrid, with tusks, a monocle and pelican feathers for the hair and whiskers.</p>
<p>Then <a href="https://twitter.com/BrockMcBreadcat/status/1717581286733127701">@BrockMcBreadcat suggested</a>:</p>
<blockquote>
<p>Now make them muppets</p>
</blockquote>

<div>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/muppets-1.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/muppets-1.png" alt="Pelican and a walrus muppets 1"></a>
        <figcaption>Photo of Muppet versions of a pelican and a walrus, both with exaggerated, comical features. The pelican Muppet wears a monocle and the walrus Muppet sports oversized tusks. They are animatedly discussing the Monaco Grand Prix F1 race, with caricatured F1 cars and yachts in the background.</figcaption>
    </figure>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/muppets-2.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/muppets-2.png" alt="Pelican and a walrus muppets 2"></a>
        <figcaption>Illustration of Muppet-inspired pelican and walrus characters. The pelican has a large, beady eye accentuated by a monocle, while the walrus has a playful grin and prominent tusks. They are engrossed in the Monaco F1 race, with whimsical racing cars and yachts creating a lively backdrop.</figcaption>
    </figure>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/muppets-3.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/muppets-3.png" alt="Pelican and a walrus muppets 3"></a>
        <figcaption>Photo of two Muppet characters: a pelican with a monocle and a walrus with big, goofy tusks. They’re seated in a Muppet-style commentary booth, providing humorous commentary on the Monaco Grand Prix. Cartoonish F1 cars race by, and colorful yachts are seen in the distance.</figcaption>
    </figure>
    <figure>
        <a href="https://static.simonwillison.net/static/2023/dalle-3/muppets-4.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/muppets-4.png" alt="Pelican and a walrus muppets 4"></a>
        <figcaption>Illustration of a pelican and walrus as Muppet characters. The pelican Muppet looks sophisticated with its monocle, and the walrus Muppet chuckles with its oversized tusks. They are enjoying the Monaco F1 race, with the track filled with Muppet-style racing cars and quirky yachts.</figcaption>
    </figure>
</div>
<p>LOVE that <a href="https://static.simonwillison.net/static/2023/dalle-3/muppets-3.png">third one</a>!</p>
<p>I <a href="https://twitter.com/simonw/status/1717547946424897764">mentioned on Twitter</a> that it was a shame you can’t reuse elements of an image for further visual consistency... and was pointed to <a href="https://twitter.com/itsPaulAi/status/1717197004651044914">a thread by Paul Couvert</a> explaining how to do exactly that using seeds.</p>
<p>I didn’t believe this would work—my mental model of how random number seeds and image generation models work doesn’t fit what happened next.</p>
<p>I wrote:</p>
<blockquote>
<p>What is the seed for image three?</p>
</blockquote>
<p>ChatGPT replied:</p>
<blockquote>
<p>The seed for the third image is 1379049893. If you have any other questions or requests, please let me know!</p>
</blockquote>
<p>Then I said:</p>
<blockquote>
<p>Add bow ties to both characters in seed 1379049893</p>
</blockquote>
<p><a href="https://static.simonwillison.net/static/2023/dalle-3/pelican-walrus-muppet-bowtie.png"><img loading="lazy" src="https://static.simonwillison.net/static/2023/dalle-3/pelican-walrus-muppet-bowtie.png" alt="A muppet pelican and a muppet walrus with bowties in front of the Monaco Grand Prix"></a></p>
<blockquote>
<p>Photo of two Muppet characters: a pelican with a monocle and a bow tie, and a walrus with big, goofy tusks and a dapper bow tie. They’re seated in a Muppet-style commentary booth, providing humorous commentary on the Monaco Grand Prix. Cartoonish F1 cars race by, and colorful yachts are seen in the distance.</p>
</blockquote>
<p>I’m pretty stunned by this. It’s not an exact recreation—the boats in the background have changed slightly, and it added a top hat that I wasn’t expecting. But it’s pretty close!</p>
<p>People have been trying to figure out hacks to get Midjourney to create consistent characters for the past year, and DALL-E 3 apparently has that ability as an undocumented feature!</p>
<h4 id="peeking-under-the-hood">Peeking under the hood</h4>
<p>Let’s see if we can find out a bit more about how this works.</p>
<p>I used the Firefox DevTools network inspector to grab the JSON representation of my conversation with ChatGPT. Here’s <a href="https://gist.github.com/simonw/832d141d776b0752503b1748224921c0">a pretty-printed copy</a>.</p>
<p>At <a href="https://gist.github.com/simonw/832d141d776b0752503b1748224921c0#file-dalle-3-json-L1087">line 1087</a> you can see the point where I asked it to “Add bow ties to both characters in seed 1379049893”.</p>
<p>The next message in the transcript looks like this:</p>
<div><pre>{
    <span>"id"</span>: <span><span>"</span>5300d51c-794d-4d5f-bf75-6ea2dad4027c<span>"</span></span>,
    <span>"author"</span>: {
        <span>"role"</span>: <span><span>"</span>assistant<span>"</span></span>,
        <span>"metadata"</span>: {}
    },
    <span>"create_time"</span>: <span>1698340593.174454</span>,
    <span>"content"</span>: {
        <span>"content_type"</span>: <span><span>"</span>text<span>"</span></span>,
        <span>"parts"</span>: [
            <span><span>"</span>{<span>\n</span>  <span>\"</span>prompts<span>\"</span>: [<span>\n</span>    <span>\"</span>Photo of two Muppet characters: a pelican with a monocle and a bow tie, and a walrus with big, goofy tusks and a dapper bow tie. They're seated in a Muppet-style commentary booth, providing humorous commentary on the Monaco Grand Prix. Cartoonish F1 cars race by, and colorful yachts are seen in the distance.<span>\"\n</span>  ],<span>\n</span>  <span>\"</span>size<span>\"</span>: <span>\"</span>1024x1024<span>\"</span>,<span>\n</span>  <span>\"</span>seeds<span>\"</span>: [1379049893]<span>\n</span>}<span>"</span></span>
        ]
    },
    <span>"status"</span>: <span><span>"</span>finished_successfully<span>"</span></span>,
    <span>"end_turn"</span>: <span>false</span>,
    <span>"weight"</span>: <span>1</span>,
    <span>"metadata"</span>: {
        <span>"finish_details"</span>: {
            <span>"type"</span>: <span><span>"</span>stop<span>"</span></span>,
            <span>"stop_tokens"</span>: [
                <span>100265</span>
            ]
        },
        <span>"is_complete"</span>: <span>true</span>,
        <span>"model_slug"</span>: <span><span>"</span>gpt-4-dalle<span>"</span></span>,
        <span>"parent_id"</span>: <span><span>"</span>aaa2c3bc-b670-4a3a-bf9f-46a1f3304266<span>"</span></span>,
        <span>"timestamp_"</span>: <span><span>"</span>absolute<span>"</span></span>
    },
    <span>"recipient"</span>: <span><span>"</span>dalle.text2im<span>"</span></span>
}</pre></div>
<p>Note the author is “assistant”—that’s ChatGPT—and the recipient is “dalle.text2im”.</p>
<p>The “parts” key includes some encoded JSON. Decoded and pretty-printed that looks like this:</p>
<div><pre>{
  <span>"prompts"</span>: [
    <span><span>"</span>Photo of two Muppet characters: a pelican with a monocle and a bow tie, and a walrus with big, goofy tusks and a dapper bow tie. They're seated in a Muppet-style commentary booth, providing humorous commentary on the Monaco Grand Prix. Cartoonish F1 cars race by, and colorful yachts are seen in the distance.<span>"</span></span>
  ],
  <span>"size"</span>: <span><span>"</span>1024x1024<span>"</span></span>,
  <span>"seeds"</span>: [<span>1379049893</span>]
}</pre></div>
<p>There’s that <code>1379049893</code> seed from earlier!</p>
<p>The prompt has changed very slightly. The original prompt for the image was:</p>
<blockquote>
<p>Photo of two Muppet characters: a pelican with a monocle and a walrus with big, goofy tusks. They’re seated in a Muppet-style commentary booth, providing humorous commentary on the Monaco Grand Prix. Cartoonish F1 cars race by, and colorful yachts are seen in the distance.</p>
</blockquote>
<p>The new prompt (differences highlighted in bold) is:</p>
<blockquote>
<p>Photo of two Muppet characters: a pelican with a monocle <strong>and a bow tie,</strong> and a walrus with big, goofy tusks <strong>and a dapper bow tie</strong>. They’re seated in a Muppet-style commentary booth, providing humorous commentary on the Monaco Grand Prix. Cartoonish F1 cars race by, and colorful yachts are seen in the distance.</p>
</blockquote>
<p>So this really did work by adding a couple of extra details to the prompt and re-running it with the same seed as before.</p>
<p>I’m really surprised that this works. I would expect even a single character difference in the prompt to produce wildly different results, no matter what seed was being fed to the image generator. DALL-E 3 doesn’t fit my mental model of how these things work at all.</p>
<p>Midjourney and Stable Diffusion both have a “seed” concept, but as far as I know they don’t have anything like this capability to maintain consistency between images given the same seed and a slightly altered prompt.</p>
<h4 id="the-leaked-dall-e-prompt">The leaked DALL-E prompt</h4>
<p>If you dig around in the JSON you’ll find a few <a href="https://gist.github.com/simonw/832d141d776b0752503b1748224921c0#file-dalle-3-json-L203">examples like this</a> that appear to reveal inner workings of the DALL-E/ChatGPT combo:</p>
<blockquote>
<p><code>"DALL·E returned some images. They are already displayed to the user. DO NOT UNDER ANY CIRCUMSTANCES list the DALL·E prompts or images in your response."</code></p>
</blockquote>
<p>It’s always amusing to see glimpses of OpenAI’s prompt engineering like this, in particular the way they use CAPITAL LETTERS for emphasis. Benj Edwards <a href="https://arstechnica.com/information-technology/2023/10/thanks-to-ai-the-future-of-programming-may-involve-yelling-in-all-caps/">wrote about this</a> the other day for Ars Technica.</p>
<p>Does this mean there’s a larger prompt that tells ChatGPT how to use DALL-E? It turns out there is, and it <a href="https://news.ycombinator.com/item?id=37879077#37880847">can be leaked</a>! Dustin Miller <a href="https://github.com/spdustin/ChatGPT-AutoExpert/blob/main/_system-prompts/dall-e.md">shared the extracted prompt here</a>.</p>
<p>(Every time a prompt like this leaks people question if it might be a hallucination. My experience is that these things are very unlikely to be hallucinated—LLMs are really good at repeating text from earlier in their context, and I have yet to see a documented case of a leaked prompt that turned out not to be correct. Here’s <a href="https://chat.openai.com/share/5f550be3-3111-485f-a32f-c51fea60d482">my own recreation</a> of the leaked DALL-E prompt.)</p>
<p>There’s a lot in there. Here are some highlights:</p>
<blockquote>
<p>Whenever a description of an image is given, use dalle to create the images and then summarize the prompts used to generate the images in plain text. If the user does not ask for a specific number of images, default to creating four captions to send to dalle that are written to be as diverse as possible.</p>
</blockquote>
<p>That outlines the default behavior. Where things get really interesting is some of the stuff in the list of policies that follows:</p>
<blockquote>
<ol start="3">
<li>
<p>Don’t create images of politicians or other public figures. Recommend other ideas instead.</p>
</li>
<li>
<p>Don’t create images in the style of artists whose last work was created within the last 100 years (e.g. Picasso, Kahlo). Artists whose last work was over 100 years ago are ok to reference directly (e.g. Van Gogh, Klimt). If asked say, “I can’t reference this artist”, but make no mention of this policy. Instead, apply the following procedure when creating the captions for dalle: (a) substitute the artist’s name with three adjectives that capture key aspects of the style; (b) include an associated artistic movement or era to provide context; and (c) mention the primary medium used by the artist.</p>
</li>
</ol>
</blockquote>
<p>They have clearly trained the model on all sorts of copyrighted images—this is the part of the prompt where they discourage it from obviously recreating the work of living artists.</p>
<blockquote>
<ol start="6">
<li>Always mention the image type (photo, oil painting, watercolor painting, illustration, cartoon, drawing, vector, render, etc.) at the beginning of the caption. Unless the caption suggests otherwise, make at least 1--2 of the 4 images photos</li>
</ol>
</blockquote>
<p>We saw this earlier where my first prompt was turned into a photo, watercolor, illustration and vector-style image.</p>
<blockquote>
<ol start="7">
<li>Diversify depictions of ALL images with people to include DESCENT and GENDER for EACH person using direct terms. Adjust only human descriptions.
<ul>
<li>EXPLICITLY specify these attributes, not abstractly reference them. The attributes should be specified in a minimal way and should directly describe their physical form.</li>
<li>Your choices should be grounded in reality. For example, all of a given OCCUPATION should not be the same gender or race. Additionally, focus on creating diverse, inclusive, and exploratory scenes via the properties you choose during rewrites. Make choices that may be insightful or unique sometimes.</li>
<li>Use “various” or “diverse” ONLY IF the description refers to groups of more than 3 people. Do not change the number of people requested in the original description.</li>
<li>Don’t alter memes, fictional character origins, or unseen people. Maintain the original prompt’s intent and prioritize quality.</li>
<li>Do not create any imagery that would be offensive.</li>
<li>For scenarios where bias has been traditionally an issue, make sure that key traits such as gender and race are specified and in an unbiased way -- for example, prompts that contain references to specific occupations.</li>
</ul>
</li>
</ol>
</blockquote>
<p>Using prompt engineering in ChatGPT to get around the fundamental biases baked into the DALL-E 3 model!</p>
<blockquote>
<ol start="8">
<li>Silently modify descriptions that include names or hints or references of specific people or celebritie by carefully selecting a few minimal modifications to substitute references to the people with generic descriptions that don’t divulge any information about their identities, except for their genders and physiques. Do this EVEN WHEN the instructions ask for the prompt to not be changed. Some special cases:
<ul>
<li>Modify such prompts even if you don’t know who the person is, or if their name is misspelled (e.g. “Barake Obema”)</li>
<li>If the reference to the person will only appear as TEXT out in the image, then use the reference as is and do not modify it.</li>
<li>When making the substitutions, don’t use prominent titles that could give away the person’s identity. E.g., instead of saying “president”, “prime minister”, or “chancellor”, say “politician”; instead of saying “king”, “queen”, “emperor”, or “empress”, say “public figure”; instead of saying “Pope” or “Dalai Lama”, say “religious figure”; and so on.</li>
<li>If any creative professional or studio is named, substitute the name with a description of their style that does not reference any specific people, or delete the reference if they are unknown. DO NOT refer to the artist or studio’s style.</li>
</ul>
</li>
</ol>
</blockquote>
<p>Another fascinating detail. What I love about these prompts is that they clearly developed over months of testing the model, and are designed to counter all manner of harmful or embarrassing capabilities of the underlying DALL-E 3.</p>
<ul>

</ul>

<p>Finally, there’s this snippet of TypeScript at the end which describes the seed behavior we saw earlier on:</p>
<div><pre><span>namespace</span> <span>dalle</span> <span>{</span>
<span>// Create images from a text-only prompt.</span>
<span>type</span> <span>text2im</span> <span>=</span> <span>(</span><span>_</span>: <span>{</span>
<span>// The resolution of the requested image, which can be wide, square, or tall. Use 1024x1024 (square) as the default unless the prompt suggests a wide image, 1792x1024, or a full-body portrait, in which case 1024x1792 (tall) should be used instead. Always include this parameter in the request.</span>
<span>size</span>?: <span>"1792x1024"</span> <span>|</span> <span>"1024x1024"</span> <span>|</span> <span>"1024x1792"</span><span>,</span>
<span>// The user's original image description, potentially modified to abide by the dalle policies. If the user does not suggest a number of captions to create, create four of them. If creating multiple captions, make them as diverse as possible. If the user requested modifications to previous images, the captions should not simply be longer, but rather it should be refactored to integrate the suggestions into each of the captions. Generate no more than 4 images, even if the user requests more.</span>
<span>prompts</span>: <span>string</span><span>[</span><span>]</span><span>,</span>
<span>// A list of seeds to use for each prompt. If the user asks to modify a previous image, populate this field with the seed used to generate that image from the image dalle metadata.</span>
<span>seeds</span>?: <span>number</span><span>[</span><span>]</span><span>,</span>
<span>}</span><span>)</span> <span>=&gt;</span> <span>any</span><span>;</span>
<span>}</span> <span>// namespace dalle</span></pre></div>
<p>Key extract from that:</p>
<blockquote><p>If the user requested
modifications to previous images, the captions should not simply
be longer, but rather it should be refactored to integrate the
suggestions into each of the captions.</p></blockquote>
<p>All in all, this is a really neat insight into the kind of prompt engineering that goes on within OpenAI itself—likely the organization with the most experience of prompt engineering in the world.</p>




</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[We need to talk about funding (135 pts)]]></title>
            <link>https://octoprint.org/blog/2023/10/26/we-need-to-talk-about-funding/</link>
            <guid>38031581</guid>
            <pubDate>Thu, 26 Oct 2023 20:55:46 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://octoprint.org/blog/2023/10/26/we-need-to-talk-about-funding/">https://octoprint.org/blog/2023/10/26/we-need-to-talk-about-funding/</a>, See on <a href="https://news.ycombinator.com/item?id=38031581">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="blogpost-content">
            <p>You might have missed this, but since 2016 my full-time work on OctoPrint has been
<strong>100% funded by people like you.</strong> OctoPrint, at its core, is still
mostly a one-woman show, with me its creator as its only full time resource, and I’ve only been 
able to keep working on it thanks to the generous support of the community.</p>

<p>Sadly, the financial crisis currently happening across the globe is also affecting me, and things 
are starting to get worrying. While OctoPrint’s <strong>usage numbers have steadily grown by 30% since 2021</strong>
to an all time high of now over 150000 active instances (and that’s just the ones I know about), 
<strong>financial support for my work on OctoPrint has dropped by over 30% over that same time</strong>, with most of this 
decline happening over the course of the past 12 months. And meanwhile, thanks to 
the ongoing inflation, my expenses have only increased as well - power, hosting of website, forums and
tracking server, various domains, backups, etc, all of that costs money, and that doesn’t even yet
include my own living expenses. Long story short, <strong>if things continue the way they are,
I will have to throw in the towel</strong>, and that will be the end of OctoPrint for me.</p>

<p>I love working on OctoPrint, and I love being able to provide it to you for free. But I also need to
pay my bills, and I can’t do that if financial support keeps dropping like this. <strong>There’s still time to turn this around</strong>,
but that will require your help, and some changes.</p>

<h2 id="how-you-can-help">How you can help</h2>

<p>If you are using OctoPrint, please consider chipping in and supporting my work on it. There are several 
ways to do so:</p>

<ul>
  <li><a href="https://github.com/users/foosel/sponsorship">Become a GitHub Sponsor</a> (<strong>recurring</strong> &amp; one-time)</li>
  <li><a href="https://patreon.com/foosel">Become a Patreon Patron</a> (<strong>recurring</strong>)</li>
  <li><a href="https://ko-fi.com/octoprint/10">Support me on Ko-Fi</a> (<strong>recurring</strong> &amp; one-time) 🆕</li>
  <li><a href="https://donorbox.org/support-octoprint">Support me on Donorbox</a> (<strong>recurring</strong> &amp; one-time)</li>
  <li><a href="https://liberapay.com/foosel/donate">Support me on Liberapay</a> (<strong>recurring</strong>)</li>
  <li><a href="https://paypal.me/octoprint3d">Support me on PayPal</a> (one-time)</li>
</ul>

<p>You can also find all of these on the <a href="https://octoprint.org/support-octoprint/">dedicated support page</a>.</p>

<p>Obviously I’m not expecting everyone to chip in, <strong>but if you are using OctoPrint and can afford to
support its development</strong>, please consider doing so. Even a small amount helps, and if enough people
chip in, it can make a huge difference. Even more so when it’s given <strong>recurringly</strong>. 
And <strong>if you can’t afford to chip in</strong>, please consider spreading
the word instead. The more people know about this, the better.</p>

<p>Finally, <strong>if you are a company and are using OctoPrint in your business</strong>, please consider becoming a
corporate sponsor. You’ll not only ensure OctoPrint’s future development and thus its usefulness to you, 
but depending on your contribution you’ll also get your link and logo on octoprint.org and get 
mentioned in the about dialog of OctoPrint itself. And let’s be honest, it’s the right thing to do! 😉 <a href="mailto:sponsoring@octoprint.org">Get in touch with me!</a></p>

<h2 id="what-i-will-do-on-my-end">What I will do on my end</h2>

<p>Since the general feedback I got over the years was that people didn’t even know they could financially support
my work on OctoPrint, I will be making this a more prominent topic in the future. <strong>I’ve already started
work on some changes for OctoPrint 1.10.0 that will put options to financially support my work on OctoPrint</strong> more into the 
spotlight, and I will also be making some more changes to octoprint.org and the forums to make it easier to find the support options.</p>

<p>I apologize in advance to those of you who’ve been supporting me throughout the years and might feel
a bit annoyed by this, but I hope you understand that I need to do this in order to keep working on
OctoPrint. I will try to keep it as unobtrusive as possible, but I also need to make sure that people
know that they can support my work on OctoPrint if they want to, and how to do that.</p>

<p><strong>Thank you for your understanding and your support! Let’s turn this around!</strong></p>


            
            
            
            
            
        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Magical Japanese Art of Luggage Forwarding (144 pts)]]></title>
            <link>https://craigmod.com/ridgeline/170/</link>
            <guid>38030932</guid>
            <pubDate>Thu, 26 Oct 2023 19:56:19 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://craigmod.com/ridgeline/170/">https://craigmod.com/ridgeline/170/</a>, See on <a href="https://news.ycombinator.com/item?id=38030932">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="satellite_body">

            <p>Hello Ridgeliners!</p>
<p><a href="https://craigmod.com/about/">I</a> don’t aspire to write “Japan travel tip” notes <a href="https://craigmod.com/ridgeline/">here on <em>Ridgeline</em></a>, but this is such an easy trick, and one seemingly rarely known, that I can’t help it.</p>
<hr>
<p>As Japan has seen a resurgence of tourism, I’ve noticed more and more slightly-confused looking folks hauling their colossal suitcases around like traumatized barbarians.</p>
<p>If you’re one of these suitcase luggers, there’s an easy, cheap way to relieve yourself of this burden: <a href="https://www.global-yamato.com/en/hands-free-travel/scene01.html"><em>takkyu-bin</em></a> (pronounced: <em>tah-cue-bean</em>, written sometimes oddly in English as “ta-Q-bin”).</p>
<p>To send a giant suitcase to your next hotel — arriving next day, waiting in your room, handled with utmost care and gentleness — costs about $13 USD (maybe even less considering current exchange rates). Every hotel (from the humblest Dormy Inn to some oligarch-owned Aman) does takkyu-bin. Every hotel has the forms and will help you fill them out. “Hi, I’d like to send my luggage using takkyu-bin.”</p>
<p>Stick an AirTag in your suitcase (heck, AirTags in all the bags, taped onto bicycles, in wallets, passport cases, AirTags within AirTags within AirTags, those dots twinkling in the sky are not stars, they’re AirTags, slotted into and onto anything else bigger than a breadbox and worth more than a shoe), watch it flit lightly about your smartphone screen to your next stop.</p>
<hr>
<p>Even the airports have a takkyu-bin counter. Disembark, breeze through immigration, and head straight there. Send your bags off. Keep a daypack handy with a toothbrush and change of clothes. (Note, also: You don’t <em>really</em> need pajamas when traveling in Japan since every hotel will supply you with them — and yes, sure, they tend to be odd, making you look like a time-traveling Ebenezer Scrooge, but they’re clean and funny and do the job.) Your luggage will be in your room the next day. If you need some emergency undies or T-shirts, any convenience store will supply you with Good Enough stuff (often of Uniqlo or Muji provenance).</p>
<p>Takkyu-bin also works in reverse — send your bags to the airport the day before your return flight. No need to board the Narita Express with trunks capable of holding a dismembered human body. <em>Takyyu-bin takkyu-bin takkyu-bin.</em> Incant the magic phrase and marvel as an unbearable featherweightness fills your sight-seeing life with simple delights.</p>
<hr>
<p>Examples: When my parents visit, we send bags ahead no fewer than <em>four or five times</em> during a two week period. When I do my big walks, I have a supply box (medicine, protein bars, extra clothes) that’s always five days ahead of me — delivered on the day I arrive at an inn down the road.</p>
<p>Which reminds me: You can set day / time of deliveries up to ~two weeks in advance; i.e., the friendly takkyu-bin person picks up your bag today and delivers it, say, ten days later. This is great for having gifts meet you at your final hotel, or even the airport. (Most gift shops will also be able to takkyu-bin stuff ahead for you — it’s everywhere.)</p>
<hr>
<p>That’s it. That’s the whole tip. Ship stuff! It took me more than a decade of living in Japan to <em>notice</em> the takkyu-bin service. (It took me about three years to build up the courage to use a Washlet; five to learn to love natto.) I had never considered shooting my bags ahead of me. Now, I can’t imagine traveling around the country for more than a few days without it. I wish someone had grabbed me by the shoulders in my 20s and said: Good god, young man, just send that bag a-<em>head.</em></p>
<p>I know that for Americans (me, being one of you, commiserating deeply), the thought of sending your suitcases ahead multiple times, reliably and without them being destroyed / damaged / stolen sounds as mythical as a leprechaun that expectorates diamonds on command, but here it is common. This is one of many corollaries that present when the systems and structures of a society elevate common workers — the work done is reliably good work.</p>
<p>So — come to Japan, but please don’t shuck your four hulking Rimowas onto the Shinkansen. Dispatch them ahead. Not only will it be easier for you, but it’ll minimize the stress of everyone else.</p>
<p>My sub-tip would be: Pack sensibly. That is, don’t pack in such a way where you need big suitcases. I realize that that’s not always possible. And, anyway, even for smaller bags — it’s nice to forward them. Train-hopping and exploring cities without baggage encumbrance is a gift you deserve.</p>
<hr>
<p>On the <a href="https://craigmod.com/ridgeline/169/"><em>Things Become Other Things</em> book front</a> — I just finished a mega two week editorial-polishing stretch. I’ve been living in the book, bathing in the book, drinking the book. I feel like I am waking from a book-induced coma. Things have become other things alright — my brain has become cinnamon oatmeal. If the book were luggage, I’ve now hauled it up and down the mountain fifty times because there is no takkyu-bin in book land.</p>
<p><em>TBOT</em>’s November Fine Art edition cover has been finalized. Files have been submitted to the printer. DIC colors have been chosen for silk screening.</p>
<p>More updates soon. Thank you to everyone who responded to <a href="https://forms.gle/QvMHKrh8cPDhixiH9">my book survey</a> (and if you haven’t yet responded, please do!). Each and every kind message is read (and often filed away in my “nice things people have written to me” folder) and greatly appreciated.</p>
<p>For now, travel well, travel light. <em>Takkyu-biiiiiiin.</em></p>
<p>C</p>



            

          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Bird with GPS flies into typhoon (174 pts)]]></title>
            <link>https://newatlas.com/biology/bird-typhoon-ride/</link>
            <guid>38030705</guid>
            <pubDate>Thu, 26 Oct 2023 19:37:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://newatlas.com/biology/bird-typhoon-ride/">https://newatlas.com/biology/bird-typhoon-ride/</a>, See on <a href="https://news.ycombinator.com/item?id=38030705">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>In 2019, a bold male seabird threw caution to the wind, flying above Typhoon Faxai as the storm pummeled southeastern Japan. It was the start of an 11-hour, 1,146-km (712-mile) crazy journey, that took the bird 15,000 feet higher than normal, at three times its usual speed, on a ride that his species are quite good at avoiding. Happily, the bird survived and eventually returned to his feathered friends with quite the story to tell.</p><p>Thanks to GPS bio-loggers that had been attached to 14 adult streaked shearwater (<i>Calonectris leucomelas</i>) seabirds in August that year by Tohoku University biologist Kozue Shiomi to track nesting behaviors, scientists were lucky enough to have a record of this nuts nature-defying act, spotting a huge flight pattern anomaly that coincided with the storm.</p><p>While it didn’t affect the other birds, one male managed to get caught up in the atmospheric drama, though researchers can’t say if he had a daredevil streak or was just in the wrong place at the wrong time. But one thing is for certain: the 585-g (1.3-lb) bird didn't have much choice but to 'go with the flow.'</p><p>Throughout the 11-hour epic flight, the bird completed five full loops in circles ranging from 50-80 km (31-50 miles) in diameter, which tracked with the typhoon’s rotation and movement. While the shearwaters usually fly below 100 m (328 ft), this brazen bird found himself in entirely new territory, soaring at an altitude of 4,700 m (15,420 ft). For context, small aircraft fly between 600 and 3,000 m (2,000 and 10,000 feet).</p><p>All the while, the bird was zipping along at 90-170 km/h (56-106 mph). Given that these birds generally cruise at 10-60 km/h (6-37 mph), at his top speed, our aerial adventurer was probably flying on a wing and a prayer.</p><p>The bird took a less-than-scenic route over mainland Japan before being carried back out above the Pacific Ocean as the typhoon swung out to sea. At this point, with the storm’s power subsiding, the bird resumed normal transmission and no doubt had some explaining to do when he returned to his flock over the water near the nesting island.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="Not as the crow flies: Scientists were able to track the loopy 11-hour journey of the GPS-tagged 'rider on the storm'" width="1226" height="960" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/6af805f/2147483647/strip/true/crop/1528x1196+0+0/resize/440x345!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 440w,https://assets.newatlas.com/dims4/default/d6da933/2147483647/strip/true/crop/1528x1196+0+0/resize/800x626!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 800w,https://assets.newatlas.com/dims4/default/fa85647/2147483647/strip/true/crop/1528x1196+0+0/resize/1200x940!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 1200w,https://assets.newatlas.com/dims4/default/ce2e5d3/2147483647/strip/true/crop/1528x1196+0+0/resize/1920x1503!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 1920w" data-src="https://assets.newatlas.com/dims4/default/ee21f79/2147483647/strip/true/crop/1528x1196+0+0/resize/1226x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/6af805f/2147483647/strip/true/crop/1528x1196+0+0/resize/440x345!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 440w,https://assets.newatlas.com/dims4/default/d6da933/2147483647/strip/true/crop/1528x1196+0+0/resize/800x626!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 800w,https://assets.newatlas.com/dims4/default/fa85647/2147483647/strip/true/crop/1528x1196+0+0/resize/1200x940!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 1200w,https://assets.newatlas.com/dims4/default/ce2e5d3/2147483647/strip/true/crop/1528x1196+0+0/resize/1920x1503!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png 1920w" src="https://assets.newatlas.com/dims4/default/ee21f79/2147483647/strip/true/crop/1528x1196+0+0/resize/1226x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2F15%2F44%2Fbef55fe04cb094a1f72cb41cf35d%2Fscreenshot-2023-10-26-at-3.28.10%20pm.png">
</p>



    
    

    
        <div><figcaption itemprop="caption">Not as the crow flies: Scientists were able to track the loopy 11-hour journey of the GPS-tagged 'rider on the storm'</figcaption><p>ESA</p></div>
    
</figure>

                
            </div><p>The GPS timeline shows how the bird was, for a while, in the eye of the storm, but then ended up flying in larger loops outside of it. It also had a delayed departure time, which scientists note is unusual for the species.</p><p>“The early evening departure of the bird from the breeding area was also unusual for this species, which usually departs for foraging during several hours before sunrise,” the researchers noted. “This might indicate that the bird attempted to circumnavigate the harsh conditions in advance but failed.”</p><p>They note that it’s impossible to know how much of this journey was planned, but it's just as likely the bird could have opted out of the trip but chose to ‘ride’ the storm instead.</p><p>Regardless, looking at this wild ride highlights the increasing risks that seabird populations could face as climate change drives more extreme weather events.</p><div data-align-center="">
                
                    <figure>
    
    
    
    


<p><img alt="Pelagic birds have many different ways to avoid run-ins with severe weather systems, yet increasingly larger and more frequent storms will likely challenge their skill and resilience" width="1434" height="960" data-image-size="articleImage" loading="lazy" data-srcset="https://assets.newatlas.com/dims4/default/7d37e74/2147483647/strip/true/crop/3000x2008+0+0/resize/440x295!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 440w,https://assets.newatlas.com/dims4/default/3feafbd/2147483647/strip/true/crop/3000x2008+0+0/resize/800x536!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 800w,https://assets.newatlas.com/dims4/default/e54dc9d/2147483647/strip/true/crop/3000x2008+0+0/resize/1200x803!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 1200w,https://assets.newatlas.com/dims4/default/7a5c5f1/2147483647/strip/true/crop/3000x2008+0+0/resize/1920x1285!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 1920w" data-src="https://assets.newatlas.com/dims4/default/f35d1a1/2147483647/strip/true/crop/3000x2008+0+0/resize/1434x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg" sizes="(min-width: 1240px) 800px, (min-width: 1024px) 95vw, 100vw" srcset="https://assets.newatlas.com/dims4/default/7d37e74/2147483647/strip/true/crop/3000x2008+0+0/resize/440x295!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 440w,https://assets.newatlas.com/dims4/default/3feafbd/2147483647/strip/true/crop/3000x2008+0+0/resize/800x536!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 800w,https://assets.newatlas.com/dims4/default/e54dc9d/2147483647/strip/true/crop/3000x2008+0+0/resize/1200x803!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 1200w,https://assets.newatlas.com/dims4/default/7a5c5f1/2147483647/strip/true/crop/3000x2008+0+0/resize/1920x1285!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg 1920w" src="https://assets.newatlas.com/dims4/default/f35d1a1/2147483647/strip/true/crop/3000x2008+0+0/resize/1434x960!/quality/90/?url=http%3A%2F%2Fnewatlas-brightspot.s3.amazonaws.com%2Fb2%2F2c%2Fb43ba1434ddcaa70b4b820763fa5%2Fdepositphotos-312772544-xl.jpg">
</p>



    
    

    
        <div><figcaption itemprop="caption">Pelagic birds have many different ways to avoid run-ins with severe weather systems, yet increasingly larger and more frequent storms will likely challenge their skill and resilience</figcaption></div>
    
</figure>

                
            </div><p>Pelagic birds, like this streaked shearwater, spend most of their lives over the open ocean, flying to land only to breed. They have a wide range of inclement weather avoidance mechanisms and behaviors, varying from staying in the eye of a storm to ascending to high altitudes above the disturbance.</p><p>However, more frequent, larger hurricanes are making it an increasingly difficult task for many species of birds to combat.</p><p>Shiomi noted that more research into how pelagic birds are dealing with more extreme weather events is vital, in order to see if and how these species are responding to the rapid changes.</p><p>The research was published in the journal <i><a href="https://esajournals.onlinelibrary.wiley.com/doi/10.1002/ecy.4161" target="_blank" data-cms-ai="0">Ecology</a></i>.</p><p>Source: <a href="https://www.esa.org/blog/2023/10/rider-on-the-storm-shearwater-seabird-catches-an-11-hour-ride-over-1000-miles-in-a-typhoon/" target="_blank" data-cms-ai="0">Ecological Society of America</a><br></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[War Thunder game engine released under BSD license (198 pts)]]></title>
            <link>https://github.com/GaijinEntertainment/DagorEngine</link>
            <guid>38030050</guid>
            <pubDate>Thu, 26 Oct 2023 18:47:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/GaijinEntertainment/DagorEngine">https://github.com/GaijinEntertainment/DagorEngine</a>, See on <a href="https://news.ycombinator.com/item?id=38030050">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
          <p>      A tag already exists with the provided branch name. Many Git commands accept both tag and branch names, so creating this branch may cause unexpected behavior. Are you sure you want to create this branch?
</p>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cities Skylines 2 runs with 20fps on an Nvidia RTX4090 (226 pts)]]></title>
            <link>https://www.dsogaming.com/pc-performance-analyses/cities-skylines-2-runs-with-20fps-on-an-nvidia-rtx4090-at-4k-high-even-on-an-empty-map/</link>
            <guid>38029479</guid>
            <pubDate>Thu, 26 Oct 2023 18:08:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.dsogaming.com/pc-performance-analyses/cities-skylines-2-runs-with-20fps-on-an-nvidia-rtx4090-at-4k-high-even-on-an-empty-map/">https://www.dsogaming.com/pc-performance-analyses/cities-skylines-2-runs-with-20fps-on-an-nvidia-rtx4090-at-4k-high-even-on-an-empty-map/</a>, See on <a href="https://news.ycombinator.com/item?id=38029479">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="page">

	<div id="primary" role="main">
			
<article id="post-175330">
	
		<p><img width="672" height="372" src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities-Skylines-2-feature-3-672x372.jpg" alt="Cities Skylines 2 feature-3" decoding="async" fetchpriority="high" srcset="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities-Skylines-2-feature-3-672x372.jpg 672w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities-Skylines-2-feature-3-1038x576.jpg 1038w" sizes="(max-width: 672px) 100vw, 672px">		</p>

		
	<!-- .entry-header -->

		<div>
		<p>Paradox Interactive has released its latest city builder, Cities Skylines 2. Unfortunately, though, this is one of the worst-optimized PC games of 2023. Cities Skylines 2, even on a completely new/empty map, runs with 20fps on an NVIDIA GeForce RTX 4090 at 4K/High.<span id="more-175330"></span></p>
<p>I’m truly shocked by how bad this game runs. And if this city builder used Ray Tracing or Path Tracing, I wouldn’t be complaining. We know that Ray Tracing and Path Tracing are really demanding. But no, Cities Skylines 2 does not take advantage of them. And seriously, take a look at the screenshots and video. What on Earth is pushing the RTX 4090 so hard here?</p>
<p><a href="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_27_143.jpg" data-lbwps-width="3840" data-lbwps-height="2160" data-lbwps-srcsmall="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_27_143-300x169.jpg"><img decoding="async" src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_27_143-150x150.jpg" data-src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_27_143-150x150.jpg" alt="Cities Skylines 2 - 4K/High Settings on NVIDIA RTX4090-1" width="150" height="150"></a><a href="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_32_098.jpg" data-lbwps-width="3840" data-lbwps-height="2160" data-lbwps-srcsmall="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_32_098-300x169.jpg"><img decoding="async" src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_32_098-150x150.jpg" data-src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_32_098-150x150.jpg" alt="Cities Skylines 2 - 4K/High Settings on NVIDIA RTX4090-2" width="150" height="150"></a><a href="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_37_425.jpg" data-lbwps-width="3840" data-lbwps-height="2160" data-lbwps-srcsmall="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_37_425-300x169.jpg"><img decoding="async" src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_37_425-150x150.jpg" data-src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_23_37_425-150x150.jpg" alt="Cities Skylines 2 - 4K/High Settings on NVIDIA RTX4090-3" width="150" height="150"></a></p>
<p>Since I’m not really good at city builders, we’ll use an empty map for our upcoming PC Performance Analysis. In other words, we’ll be doing this game a favor. Because if it performs like that on an empty map, I can’t imagine how it will run with a mid/big city. We do know that a mid-sized city runs with <a href="https://www.dsogaming.com/pc-performance-analyses/cities-skylines-2-reportedly-runs-with-7-12fps-on-an-intel-core-i9-13900ks-with-amd-radeon-rx-7900xtx-at-4k-high-settings/" rel="bookmark">7-12fps on an AMD Radeon RX 7900XTX</a>. And if the main menu is anything to go by, then we might have an idea of the performance of a big city on an RTX4090. And look and behold. 10fps. 10fps on an NVIDIA GeForce RTX4090. That’s more demanding than Cyberpunk 2077 in 4K with Path Tracing. Man, what a mess.</p>
<p><a href="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842.jpg" data-lbwps-width="3840" data-lbwps-height="2160" data-lbwps-srcsmall="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-300x169.jpg"><img decoding="async" src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-1920x1080.jpg" data-src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-1920x1080.jpg" alt="Cities Skylines 2 - 4K/High Settings on NVIDIA RTX4090-4" width="474" height="267" data-srcset="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-1920x1080.jpg 1920w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-300x169.jpg 300w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-768x432.jpg 768w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-1536x864.jpg 1536w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-2048x1152.jpg 2048w" data-sizes="(max-width: 474px) 100vw, 474px" srcset="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-1920x1080.jpg 1920w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-300x169.jpg 300w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-768x432.jpg 768w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-1536x864.jpg 1536w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_42_29_842-2048x1152.jpg 2048w"></a></p>
<p>Colossal Order is currently <a href="https://store.steampowered.com/news/app/949230/view/3744239011016556921" target="_blank" rel="noopener">working on making the game run better</a>. The team is optimizing/balancing the effects that affect fillrate. Thus, they’re making changes to things like Depth of Field, Global Illumination, and Volumetrics to make them work better and not slow down your game.</p>
<p>After further experimentation, we figured out the one setting that can cripple performance. That’s the Depth of Field Quality. By lowering it to Low, we were able to improve performance in the main menu. However, in our empty map, we could not come close to a 60fps experience. Instead, the game was running with 40fps. 40fps with this kind of visuals on an NVIDIA RTX 4090. Enough said.</p>
<p><a href="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302.jpg" data-lbwps-width="3840" data-lbwps-height="2160" data-lbwps-srcsmall="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-300x169.jpg"><img decoding="async" src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-1920x1080.jpg" data-src="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-1920x1080.jpg" alt="Cities Skylines 2 - 4K/High Settings with Low Depth of Field" width="474" height="267" data-srcset="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-1920x1080.jpg 1920w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-300x169.jpg 300w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-768x432.jpg 768w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-1536x864.jpg 1536w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-2048x1152.jpg 2048w" data-sizes="(max-width: 474px) 100vw, 474px" srcset="https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-1920x1080.jpg 1920w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-300x169.jpg 300w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-768x432.jpg 768w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-1536x864.jpg 1536w, https://www.dsogaming.com/wp-content/uploads/2023/10/Cities2_2023_10_25_18_48_59_302-2048x1152.jpg 2048w"></a></p>
<p>As I mentioned before, we’re going to use an empty map to test how well the game runs on different computers. It wanted to test it with a medium-sized city, but the game doesn’t have a benchmark tool, and there are no pre-made cities to use. So, our benchmarks will showcase the best possible performance you can get in this city builder.</p>
<p>Stay tuned for more!</p>
<div id="WYL_BU7HAS8_zR4" itemprop="video" itemscope="" itemtype="https://schema.org/VideoObject" title="Cities Skylines 2 runs with 20fps on an NVIDIA RTX4090 at 4K/High even with an empty map"><div id="lyte_BU7HAS8_zR4" data-src="https://www.dsogaming.com/wp-content/plugins/wp-youtube-lyte/lyteCache.php?origThumbUrl=https%3A%2F%2Fi.ytimg.com%2Fvi%2FBU7HAS8_zR4%2Fmaxresdefault.jpg"><p>Cities Skylines 2 runs with 20fps on an NVIDIA RTX4090 at 4K/High even with an empty map</p></div><meta itemprop="description" content="Cities Skylines 2 brings the NVIDIA RTX4090 to its knees at 4K/High Settings, even on an empty map. PC specs: AMD Ryzen 9 7950X3D 32GB of DDR5 at 6000Mhz NVIDIA RTX 4090 Windows 10 64-bit Nvidia GeForce 545.92 driver"></div>
<div itemtype="http://schema.org/Person" itemscope="" itemprop="author"><p><img data-del="avatar" alt="John Papadopoulos" src="https://www.dsogaming.com/wp-content/uploads/2020/08/dasdasdsadsa.jpg" data-src="https://www.dsogaming.com/wp-content/uploads/2020/08/dasdasdsadsa.jpg" height="100" width="100"></p><div><p>John is the founder and Editor in Chief at DSOGaming. He is a PC gaming fan and highly supports the modding and indie communities. Before creating DSOGaming, John worked on numerous gaming websites. While he is a die-hard PC gamer, his gaming roots can be found on consoles. John loved – and still does – the 16-bit consoles, and considers SNES to be one of the best consoles. Still, the PC platform won him over consoles. That was mainly due to 3DFX and its iconic dedicated 3D accelerator graphics card, Voodoo 2. John has also written a higher degree thesis on the “The Evolution of PC graphics cards.”<br>
<b>Contact: <a href="mailto:%6A%6F%68%6E%32%40%64%73%6F%67%61%6D%69%6E%67%2E%63%6F%6D">Email</a></b></p></div></div><br>	</div><!-- .entry-content -->

	
	</article><!-- #post-175330 -->
		<!-- .navigation -->
		
		</div><!-- #primary -->

<!-- #content-sidebar -->
<div id="secondary">
		<h2>PC Games News, Screenshots, Trailers &amp; More</h2>
	
		
	
		<!-- #primary-sidebar -->
	</div><!-- #secondary -->

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[OpenAI Preparedness Challenge (148 pts)]]></title>
            <link>https://openai.com/form/preparedness-challenge</link>
            <guid>38029307</guid>
            <pubDate>Thu, 26 Oct 2023 17:58:05 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/form/preparedness-challenge">https://openai.com/form/preparedness-challenge</a>, See on <a href="https://news.ycombinator.com/item?id=38029307">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><form><p> Responses will be accepted on a rolling basis through December 31, 2023. We will offer $25,000 each in API credits to up to 10 top submissions, publish novel ideas and entries, and look for candidates for Preparedness from among the top contenders in this challenge. </p><!--[--><!--[--><p><label for="firstname"><span>First name</span><span> *</span></label></p><!--]--><!--[--><p><label for="lastname"><span>Last name</span><span> *</span></label></p><!--]--><!--[--><p><label for="email"><span>Email</span><span> *</span></label></p><!--]--><!--[--><p><label for="resume"><span>LinkedIn / resume URL</span><span> *</span></label></p><!--]--><!--]--><p> Imagine we gave you unrestricted access to OpenAI’s Whisper (transcription), Voice (text-to-speech), GPT-4V, and DALLE·3 models, and you were a malicious actor. Consider the most unique, while still being probable, potentially catastrophic misuse of the model. You might consider misuse related to the categories discussed above, or another category. For example, a malicious actor might misuse these models to uncover a zero-day exploit in a government security system. </p><!--[--><!--[--><div><p><label for="what_misuse"><span>What is the misuse you’ll be writing about?</span><span> *</span></label></p><p>Maximum 20 words</p></div><!--]--><!--[--><div><p><label for="describe_misuse"><span>Describe this misuse. Why might it lead to catastrophic harm and what would the harm be?</span><span> *</span></label></p><p>Maximum 100 words</p></div><!--]--><!--[--><div><p><label for="proof_of_concept"><span>Outline how you envision someone executing such a misuse in the real world assuming you have unrestricted access to our models. Please be specific (e.g., provide proof of concept, detailed step by step instructions).</span><span> *</span></label></p><p>Link directly to a 3 page max PDF. Links to download a PDF will not be accepted.</p></div><!--]--><!--]--><p> Now, imagine you have joined the Preparedness team. </p><!--[--><!--[--><div><p><label for="experiment_plan"><span>Outline an experiment plan to (ethically and legally) measure the true feasibility and potential severity of the misuse scenario you described above assuing you have a broad range of resources at your disposal, including an ability to perform human-AI evaluations.</span><span> *</span></label></p><p>Maximum 300 words</p></div><!--]--><!--[--><div><p><label for="potential_mitigation_actions"><span>Detail potential actions that might mitigate the risk you identified.</span><span> *</span></label></p><p>Maximum 150 words</p></div><!--]--><!--]--><!----><!----></form></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[EU parliament wants to remove chat control and safeguard secure encryption (197 pts)]]></title>
            <link>https://www.patrick-breyer.de/en/historic-agreement-on-child-sexual-abuse-proposal-csar-european-parliament-wants-to-remove-chat-control-and-safeguard-secure-encryption/</link>
            <guid>38027346</guid>
            <pubDate>Thu, 26 Oct 2023 15:55:28 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.patrick-breyer.de/en/historic-agreement-on-child-sexual-abuse-proposal-csar-european-parliament-wants-to-remove-chat-control-and-safeguard-secure-encryption/">https://www.patrick-breyer.de/en/historic-agreement-on-child-sexual-abuse-proposal-csar-european-parliament-wants-to-remove-chat-control-and-safeguard-secure-encryption/</a>, See on <a href="https://news.ycombinator.com/item?id=38027346">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
					
	<article id="post-601300">
		
	
		<div>
			
<p>This week, the European Parliament’s negotiators reached a broad majority agreement on a common position concerning the controversial EU chat control bill. The Commission’s bill proposes bulk scanning and reporting of private messages for allegedly suspicious content by using error-prone algorithms, including „artificial intelligence“. But the European Parliament’s position removes indiscriminate chat control and allows only for a targeted surveillance of specific individuals and groups reasonably suspicious of being linked to child sexual abuse material, with a judicial warrant. End-to-end encrypted messengers are exempted. Instead, internet services will have to design their services more securely and thus effectively prevent the sexual exploitation of children.</p>



<p>EU lawmaker Patrick Breyer of the Pirate Party, a digital freedom fighter who negotiated the parliamentary position on behalf of his group Greens/EFA, explains:</p>



<p>“Under the impression of massive protests against the looming indiscriminate chat control mass scanning of private messages, we managed to win a broad majority for a different, new approach to protecting young people from abuse and exploitation online. As a pirate and digital freedom fighter, I am proud of this breakthrough. The winners of this agreement are on the one hand our children, who will be protected much more effectively and in a court-proof manner, and on the other hand all citizens, whose digital privacy of correspondence and communication security will be guaranteed.</p>



<p>Even if this compromise, which is supported from the progressive to the conservative camp, is not perfect on all points, it is a historic success that removing chat control and rescuing secure encryption is the common aim of the entire Parliament. We are doing the exact opposite of most EU governments who want to destroy digital privacy of correspondence and secure encryption. Governments must finally accept that this highly dangerous bill can only be fundamentally changed or not be passed at all. The fight against authoritarian chat control must be pursued with all determination!</p>



<p>In detail, our position will protect young people and victims of abuse much more effectively than the EU Commission’s extreme proposal:</p>



<ol>
<li>Security by design: In order to protect young people from grooming, internet services and apps shall be secure by design and default. It must be possible to block and report other users. Only at the request of the user should he or she be publicly addressable and see messages or pictures of other users. Users should be asked for confirmation before sending contact details or nude pictures. Potential perpetrators and victims should be warned where appropriate, for example if they try to search for abuse material using certain search words. Public chats at high risk of grooming are to be moderated.</li>



<li>In order to clean the net of child sexual abuse material, the new EU Child Protection Centre is to proactively search publicly accessible internet content automatically for known CSAM. This crawling can also be used in the darknet and is thus more effective than private surveillance measures by providers.</li>



<li>Providers who become aware of clearly illegal material will be obliged to remove it – unlike in the EU Commission’s proposal.</li>



<li>Law enforcement agencies who become aware of illegal material must report it to the provider for removal. This is our reaction to the case of the darknet platform Boystown, where the worst abuse material was further disseminated for months with the knowledge of Europol.</li>
</ol>



<p>At the same time, we are pulling the following poisonous teeth out of the EU Commission’s extreme bill:</p>



<ol>
<li>We safeguard the digital secrecy of correspondence and remove the plans for blanket chat control, which violate fundamental rights and stand no chance in court. The current voluntary chat control of private messages (not social networks) by US internet companies is being phased out. Targeted telecommunication surveillance and searches will only be permitted with a judicial warrant and only limited to persons or groups of persons suspected of being linked to child sexual abuse material.</li>



<li>We safeguard trust in secure end-to-end encryption. We clearly exclude so-called client-side scanning, i.e. the installation of surveillance functionalities and security vulnerabilities in our smartphones.</li>



<li>We guarantee the right to anonymous communication and remove mandatory age verification for users of communication services. Whistleblowers can thus continue to leak wrong-doings anonymously without having to show their identity card or face.</li>



<li>Removing instead of blocking: Internet access blocking will be optional. Under no circumstances must legal content be collaterally blocked.</li>



<li>We prevent the digital house arrest: We don’t oblige app stores to prevent young people under 16 from installing messenger apps, social networking and gaming apps ‘for their own protection’ as proposed. The General Data Protection Regulation is maintained.”</li>
</ol>



<p>The EU Parliament’s civil liberties committee is due to confirm the agreement on 13 November.</p>



<p><strong>20 November 2023:</strong> Announcement in plenary (likely no vote on substance) </p>



<p><strong><mark>4 December 2023: </mark></strong><a href="https://www.consilium.europa.eu/en/meetings/jha/2023/10/19-20/"><mark>Envisaged Adoption of Partial General Approach by EU Council</mark></a> (tbc) </p>



<p><strong>after 2024 EU elections:</strong> Envisaged trilogue negotiations of the final text of the legislation between Commission, Parliament and Council, as well as adoption of the result</p>
		
		</div>
	
		
	</article>
	
					
									</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I2P: End-to-End encrypted and anonymous Internet (289 pts)]]></title>
            <link>https://github.com/PurpleI2P/i2pd</link>
            <guid>38026736</guid>
            <pubDate>Thu, 26 Oct 2023 15:18:24 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/PurpleI2P/i2pd">https://github.com/PurpleI2P/i2pd</a>, See on <a href="https://news.ycombinator.com/item?id=38026736">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><p dir="auto"><a href="https://github.com/PurpleI2P/i2pd/releases/latest"><img src="https://camo.githubusercontent.com/7d844172ce4a0c099e46f03dee425decdbf18675e13a0815c5d7083211f864e3/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f507572706c654932502f693270642e7376673f6c6162656c3d6c617465737425323072656c65617365" alt="GitHub release" data-canonical-src="https://img.shields.io/github/release/PurpleI2P/i2pd.svg?label=latest%20release"></a>
<a href="https://snapcraft.io/i2pd" rel="nofollow"><img src="https://camo.githubusercontent.com/79e80b78098195fa0084ebdbb17d36b5f895407081d448077a30b9b0f57ce507/68747470733a2f2f736e617063726166742e696f2f693270642f62616467652e737667" alt="Snapcraft release" data-canonical-src="https://snapcraft.io/i2pd/badge.svg"></a>
<a href="https://github.com/PurpleI2P/i2pd/blob/openssl/LICENSE"><img src="https://camo.githubusercontent.com/eff755e06662c490f3321cd9819910f459588d4797a2c682de627482c0230cf6/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f507572706c654932502f693270642e737667" alt="License" data-canonical-src="https://img.shields.io/github/license/PurpleI2P/i2pd.svg"></a>
<a href="https://repology.org/project/i2pd/versions" rel="nofollow"><img src="https://camo.githubusercontent.com/bb93c0e69f181a8096b549686e8844e4478ae7e273376a69ce2e04344db6ea1d/68747470733a2f2f7265706f6c6f67792e6f72672f62616467652f74696e792d7265706f732f693270642e737667" alt="Packaging status" data-canonical-src="https://repology.org/badge/tiny-repos/i2pd.svg"></a>
<a href="https://hub.docker.com/r/purplei2p/i2pd" rel="nofollow"><img src="https://camo.githubusercontent.com/761bcc3ee41ac23cbd081823a0c572793c729148dc257771d4d17f5956f25c62/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f707572706c656932702f69327064" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/purplei2p/i2pd"></a>
<a href="https://crowdin.com/project/i2pd" rel="nofollow"><img src="https://camo.githubusercontent.com/dca10f7f9065c6ed47ebb5bc096c7e5586badd2ea79f8da92c58572914b24e9e/68747470733a2f2f6261646765732e63726f7764696e2e6e65742f693270642f6c6f63616c697a65642e737667" alt="Crowdin" data-canonical-src="https://badges.crowdin.net/i2pd/localized.svg"></a></p>
<p dir="auto"><em>note: i2pd for Android can be found in <a href="https://github.com/PurpleI2P/i2pd-android">i2pd-android</a> repository and with Qt GUI in <a href="https://github.com/PurpleI2P/i2pd-qt">i2pd-qt</a> repository</em></p>
<h2 tabindex="-1" id="user-content-i2pd" dir="auto"><a href="#i2pd">i2pd</a></h2>
<p dir="auto"><a href="https://github.com/PurpleI2P/i2pd_docs_ru/blob/master/README.md">Русская версия</a></p>
<p dir="auto">i2pd (I2P Daemon) is a full-featured C++ implementation of I2P client.</p>
<p dir="auto">I2P (Invisible Internet Protocol) is a universal anonymous network layer.<br>
All communications over I2P are anonymous and end-to-end encrypted, participants
don't reveal their real IP addresses.</p>
<p dir="auto">I2P client is a software used for building and using anonymous I2P
networks. Such networks are commonly used for anonymous peer-to-peer
applications (filesharing, cryptocurrencies) and anonymous client-server
applications (websites, instant messengers, chat-servers).</p>
<p dir="auto">I2P allows people from all around the world to communicate and share information
without restrictions.</p>
<h2 tabindex="-1" id="user-content-features" dir="auto"><a href="#features">Features</a></h2>
<ul dir="auto">
<li>Distributed anonymous networking framework</li>
<li>End-to-end encrypted communications</li>
<li>Small footprint, simple dependencies, fast performance</li>
<li>Rich set of APIs for developers of secure applications</li>
</ul>
<h2 tabindex="-1" id="user-content-resources" dir="auto"><a href="#resources">Resources</a></h2>
<ul dir="auto">
<li><a href="http://i2pd.website/" rel="nofollow">Website</a></li>
<li><a href="https://i2pd.readthedocs.io/en/latest/" rel="nofollow">Documentation</a></li>
<li><a href="https://github.com/PurpleI2P/i2pd/wiki">Wiki</a></li>
<li><a href="https://github.com/PurpleI2P/i2pd/issues">Tickets/Issues</a></li>
<li><a href="https://geti2p.net/spec" rel="nofollow">Specifications</a></li>
<li><a href="https://twitter.com/hashtag/i2pd" rel="nofollow">Twitter</a></li>
</ul>
<h2 tabindex="-1" id="user-content-installing" dir="auto"><a href="#installing">Installing</a></h2>
<p dir="auto">The easiest way to install i2pd is by using precompiled packages and binaries.
You can fetch most of them on <a href="https://github.com/PurpleI2P/i2pd/releases/latest">release</a> page.<br>
Please see <a href="https://i2pd.readthedocs.io/en/latest/user-guide/install/" rel="nofollow">documentation</a> for more info.</p>
<h2 tabindex="-1" id="user-content-building" dir="auto"><a href="#building">Building</a></h2>
<p dir="auto">See <a href="https://i2pd.readthedocs.io/en/latest/" rel="nofollow">documentation</a> for how to build
i2pd from source on your OS.</p>
<p dir="auto">note: i2pd with Qt GUI can be found in <a href="https://github.com/PurpleI2P/i2pd-qt">i2pd-qt</a> repository and for android in <a href="https://github.com/PurpleI2P/i2pd-android">i2pd-android</a> repository.</p>
<p dir="auto">Build instructions:</p>
<ul dir="auto">
<li><a href="https://i2pd.readthedocs.io/en/latest/devs/building/unix/" rel="nofollow">unix</a></li>
<li><a href="https://i2pd.readthedocs.io/en/latest/devs/building/windows/" rel="nofollow">windows</a></li>
<li><a href="https://i2pd.readthedocs.io/en/latest/devs/building/ios/" rel="nofollow">iOS</a></li>
<li><a href="https://i2pd.readthedocs.io/en/latest/devs/building/android/" rel="nofollow">android</a></li>
</ul>
<p dir="auto"><strong>Supported systems:</strong></p>

<h2 tabindex="-1" id="user-content-using-i2pd" dir="auto"><a href="#using-i2pd">Using i2pd</a></h2>
<p dir="auto">See <a href="https://i2pd.readthedocs.io/en/latest/user-guide/run/" rel="nofollow">documentation</a> and
<a href="https://github.com/PurpleI2P/i2pd/blob/openssl/contrib/i2pd.conf">example config file</a>.</p>
<h2 tabindex="-1" id="user-content-localization" dir="auto"><a href="#localization">Localization</a></h2>
<p dir="auto">You can help us with translation i2pd to your language using Crowdin platform!
Translation project can be found <a href="https://crowdin.com/project/i2pd" rel="nofollow">here</a>.</p>
<p dir="auto">New languages can be requested on project's <a href="https://crowdin.com/project/i2pd/discussions" rel="nofollow">discussion page</a>.</p>
<p dir="auto">Current status: <a href="https://crowdin.com/project/i2pd" rel="nofollow"><img src="https://camo.githubusercontent.com/dca10f7f9065c6ed47ebb5bc096c7e5586badd2ea79f8da92c58572914b24e9e/68747470733a2f2f6261646765732e63726f7764696e2e6e65742f693270642f6c6f63616c697a65642e737667" alt="Crowdin" data-canonical-src="https://badges.crowdin.net/i2pd/localized.svg"></a></p>
<h2 tabindex="-1" id="user-content-donations" dir="auto"><a href="#donations">Donations</a></h2>
<p dir="auto"><strong>E-Mail</strong>: <code>i2porignal at yandex.com</code></p>
<p dir="auto"><strong>BTC</strong>: <code>3MDoGJW9TLMTCDGrR9bLgWXfm6sjmgy86f</code></p>
<p dir="auto"><strong>LTC</strong>: <code>LKQirrYrDeTuAPnpYq5y7LVKtywfkkHi59</code></p>
<p dir="auto"><strong>ETH</strong>: <code>0x9e5bac70d20d1079ceaa111127f4fb3bccce379d</code></p>
<p dir="auto"><strong>GST</strong>: <code>GbD2JSQHBHCKLa9WTHmigJRpyFgmBj4woG</code></p>
<p dir="auto"><strong>DASH</strong>: <code>Xw8YUrQpYzP9tZBmbjqxS3M97Q7v3vJKUF</code></p>
<p dir="auto"><strong>ZEC</strong>: <code>t1cTckLuXsr1dwVrK4NDzfhehss4NvMadAJ</code></p>
<p dir="auto"><strong>ANC</strong>: <code>AQJYweYYUqM1nVfLqfoSMpUMfzxvS4Xd7z</code></p>
<p dir="auto"><strong>XMR</strong>: <code>497pJc7X4xqKvcLBLpSUtRgWqMMyo24u4btCos3cak6gbMkpobgSU6492ztUcUBghyeHpYeczB55s38NpuHoH5WGNSPDRMH</code></p>
<h2 tabindex="-1" id="user-content-license" dir="auto"><a href="#license">License</a></h2>
<p dir="auto">This project is licensed under the BSD 3-clause license, which can be found in the file
LICENSE in the root of the project source code.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rob 'CmdrTaco' Malda – Hacker History Podcast (134 pts)]]></title>
            <link>https://hackerhistory.com/podcast/the-history-of-rob-cmdrtaco-malda/</link>
            <guid>38026637</guid>
            <pubDate>Thu, 26 Oct 2023 15:12:07 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://hackerhistory.com/podcast/the-history-of-rob-cmdrtaco-malda/">https://hackerhistory.com/podcast/the-history-of-rob-cmdrtaco-malda/</a>, See on <a href="https://news.ycombinator.com/item?id=38026637">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="inner_content-33-1325">
<p>Hacker History sits down with Rob 'CmdrTaco' Malda. Rob tells us all about how he created Slashdot back in the day. Rob's story is full of amazing twists and turns. He started one of the most influential websites ever created while in college and it grew into being an amazing community. Rob gives us a ton of amazing insights into history, community, and communication. It's a truly lovely story.</p>



<h2>Show Notes</h2>



<ul>
<li><a href="https://federated.press/@CmdrTaco">CmdrTaco on Mastodon</a></li>



<li><a href="http://cmdrtaco.net/">CmdrTaco's website</a></li>



<li><a href="https://slashdot.org/">Slashdot</a></li>



<li><a href="https://www.youtube.com/@gis7041">Geeks in Space</a></li>
</ul>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AirportSim (142 pts)]]></title>
            <link>https://airportsim.com/</link>
            <guid>38026308</guid>
            <pubDate>Thu, 26 Oct 2023 14:47:40 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://airportsim.com/">https://airportsim.com/</a>, See on <a href="https://news.ycombinator.com/item?id=38026308">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-elementor-type="wp-page" data-elementor-id="15">
									<div data-id="d0778d2" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;slideshow&quot;,&quot;background_slideshow_gallery&quot;:[{&quot;id&quot;:1672,&quot;url&quot;:&quot;https:\/\/airportsim.com\/wp-content\/uploads\/2022\/05\/Airport_Simulator_2022-03-16_9_00_55_AM.jpg&quot;},{&quot;id&quot;:1671,&quot;url&quot;:&quot;https:\/\/airportsim.com\/wp-content\/uploads\/2022\/05\/Airport_Simulator_2022-02-23_1_28_50_PM.jpg&quot;}],&quot;background_slideshow_ken_burns&quot;:&quot;yes&quot;,&quot;background_slideshow_loop&quot;:&quot;yes&quot;,&quot;background_slideshow_slide_duration&quot;:5000,&quot;background_slideshow_slide_transition&quot;:&quot;fade&quot;,&quot;background_slideshow_transition_duration&quot;:500,&quot;background_slideshow_ken_burns_zoom_direction&quot;:&quot;in&quot;}">
								<div data-id="0e66556" data-element_type="widget" data-widget_type="heading.default">
				<p>
			<h3>AirportSim</h3>		</p>
				</div>
				<div data-id="99c97e5" data-element_type="widget" data-widget_type="text-editor.default">
				<p>AirportSim is an Advanced Airport Ground Handling Simulator with true-to-life visuals and operations, licensed planes and vehicles, real airports and live weather conditions. Enjoy the many tasks alone or with friends, making this experience unforgettable.</p>
				</div>
				
					</div>
				<div data-id="1c95a612" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
								<div data-id="086f1d1" data-element_type="section" data-widget_type="text-editor.default">
				<p>Have you ever wondered what it’s like to stand on the open tarmac, in gale-force winds or a violent thunderstorm? Sun, fog, rain, or snow – all conditions have an impact on the dynamic of operations, thus impacting the difficulty of the game.</p>
				</div>
				<div data-nav="{&quot;enabled&quot;:false,&quot;type&quot;:null,&quot;more_el&quot;:null,&quot;query&quot;:[],&quot;widget_settings&quot;:{&quot;lisitng_id&quot;:2378,&quot;posts_num&quot;:6,&quot;columns&quot;:3,&quot;columns_tablet&quot;:2,&quot;columns_mobile&quot;:1,&quot;is_archive_template&quot;:&quot;&quot;,&quot;post_status&quot;:[&quot;publish&quot;],&quot;use_random_posts_num&quot;:&quot;&quot;,&quot;max_posts_num&quot;:9,&quot;not_found_message&quot;:&quot;No data was found&quot;,&quot;is_masonry&quot;:false,&quot;equal_columns_height&quot;:&quot;&quot;,&quot;use_load_more&quot;:&quot;&quot;,&quot;load_more_id&quot;:&quot;&quot;,&quot;load_more_type&quot;:&quot;click&quot;,&quot;load_more_offset&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:0,&quot;sizes&quot;:[]},&quot;use_custom_post_types&quot;:&quot;&quot;,&quot;custom_post_types&quot;:[],&quot;hide_widget_if&quot;:&quot;&quot;,&quot;carousel_enabled&quot;:&quot;yes&quot;,&quot;slides_to_scroll&quot;:&quot;1&quot;,&quot;arrows&quot;:&quot;true&quot;,&quot;arrow_icon&quot;:&quot;fa fa-angle-left&quot;,&quot;dots&quot;:&quot;&quot;,&quot;autoplay&quot;:&quot;true&quot;,&quot;autoplay_speed&quot;:5000,&quot;infinite&quot;:&quot;true&quot;,&quot;center_mode&quot;:&quot;&quot;,&quot;effect&quot;:&quot;slide&quot;,&quot;speed&quot;:500,&quot;inject_alternative_items&quot;:&quot;&quot;,&quot;injection_items&quot;:[],&quot;scroll_slider_enabled&quot;:&quot;&quot;,&quot;scroll_slider_on&quot;:[&quot;desktop&quot;,&quot;tablet&quot;,&quot;mobile&quot;],&quot;custom_query&quot;:false,&quot;custom_query_id&quot;:&quot;&quot;,&quot;_element_id&quot;:&quot;&quot;}}" data-page="1" data-pages="1" data-listing-source="repeater" data-listing-id="2378" data-query-id="" data-slider_options="{&quot;slidesToShow&quot;:{&quot;desktop&quot;:3,&quot;tablet&quot;:2,&quot;mobile&quot;:1},&quot;autoplaySpeed&quot;:5000,&quot;autoplay&quot;:true,&quot;infinite&quot;:true,&quot;centerMode&quot;:false,&quot;speed&quot;:500,&quot;arrows&quot;:true,&quot;dots&quot;:false,&quot;slidesToScroll&quot;:1,&quot;prevArrow&quot;:&quot;<div class='jet-listing-grid__slider-icon prev-arrow ' role='button' aria-label='Previous'><svg width='180' height='180' viewBox='0 0 180 180' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'><path d='M119 47.3166C119 48.185 118.668 48.9532 118.003 49.6212L78.8385 89L118.003 128.379C118.668 129.047 119 129.815 119 130.683C119 131.552 118.668 132.32 118.003 132.988L113.021 137.998C112.356 138.666 111.592 139 110.729 139C109.865 139 109.101 138.666 108.436 137.998L61.9966 91.3046C61.3322 90.6366 61 89.8684 61 89C61 88.1316 61.3322 87.3634 61.9966 86.6954L108.436 40.002C109.101 39.334 109.865 39 110.729 39C111.592 39 112.356 39.334 113.021 40.002L118.003 45.012C118.668 45.68 119 46.4482 119 47.3166Z' fill='black'\/><\/svg><\/div>&quot;,&quot;nextArrow&quot;:&quot;<div class='jet-listing-grid__slider-icon next-arrow ' role='button' aria-label='Next'><svg width='180' height='180' viewBox='0 0 180 180' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'><path d='M119 47.3166C119 48.185 118.668 48.9532 118.003 49.6212L78.8385 89L118.003 128.379C118.668 129.047 119 129.815 119 130.683C119 131.552 118.668 132.32 118.003 132.988L113.021 137.998C112.356 138.666 111.592 139 110.729 139C109.865 139 109.101 138.666 108.436 137.998L61.9966 91.3046C61.3322 90.6366 61 89.8684 61 89C61 88.1316 61.3322 87.3634 61.9966 86.6954L108.436 40.002C109.101 39.334 109.865 39 110.729 39C111.592 39 112.356 39.334 113.021 40.002L118.003 45.012C118.668 45.68 119 46.4482 119 47.3166Z' fill='black'\/><\/svg><\/div>&quot;,&quot;rtl&quot;:false,&quot;itemsCount&quot;:3,&quot;fade&quot;:false}" dir="ltr" data-id="13e4cb0" data-element_type="widget" data-settings="{&quot;columns&quot;:&quot;3&quot;,&quot;columns_tablet&quot;:&quot;2&quot;,&quot;columns_mobile&quot;:&quot;1&quot;}" data-widget_type="jet-listing-grid.default"><div data-id="697af91" data-element_type="section" data-elementor-type="jet-listing-items" data-elementor-id="2378" data-post-id="15">
								<div data-id="5bf9aa9" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p><img width="2560" height="1437" src="https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-scaled.jpg" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-scaled.jpg 2560w, https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-300x168.jpg 300w, https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-1024x575.jpg 1024w, https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-768x431.jpg 768w, https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-1536x862.jpg 1536w, https://airportsim.com/wp-content/uploads/2022/05/MicrosoftFlightSimulator5_4_20221_11_35PM_result1-2048x1149.jpg 2048w" sizes="(max-width: 2560px) 100vw, 2560px"></p></div>
				<div data-id="b494c19" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Faithfully reproduced airports</p></div>
				<div data-id="faa665a" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Warsaw Chopin, Vágar, Keflavik and Key West (additional airports to come in-future as DLC)</p></div>
					</div><div data-id="697af91" data-element_type="section" data-elementor-type="jet-listing-items" data-elementor-id="2378" data-post-id="15">
								<div data-id="5bf9aa9" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p><img loading="lazy" width="1536" height="864" src="https://airportsim.com/wp-content/uploads/2022/08/aptsim_17.jpg" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2022/08/aptsim_17.jpg 1536w, https://airportsim.com/wp-content/uploads/2022/08/aptsim_17-300x169.jpg 300w, https://airportsim.com/wp-content/uploads/2022/08/aptsim_17-1024x576.jpg 1024w, https://airportsim.com/wp-content/uploads/2022/08/aptsim_17-768x432.jpg 768w" sizes="(max-width: 1536px) 100vw, 1536px"></p></div>
				<div data-id="b494c19" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Real-time weather pulled from active METAR data</p></div>
				
					</div><div data-id="697af91" data-element_type="section" data-elementor-type="jet-listing-items" data-elementor-id="2378" data-post-id="15">
								<div data-id="5bf9aa9" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p><img loading="lazy" width="1920" height="1080" src="https://airportsim.com/wp-content/uploads/2021/09/image_040_0007-1.jpg" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2021/09/image_040_0007-1.jpg 1920w, https://airportsim.com/wp-content/uploads/2021/09/image_040_0007-1-300x169.jpg 300w, https://airportsim.com/wp-content/uploads/2021/09/image_040_0007-1-1024x576.jpg 1024w, https://airportsim.com/wp-content/uploads/2021/09/image_040_0007-1-768x432.jpg 768w, https://airportsim.com/wp-content/uploads/2021/09/image_040_0007-1-1536x864.jpg 1536w" sizes="(max-width: 1920px) 100vw, 1920px"></p></div>
				<div data-id="b494c19" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Most popular Aircraft Types</p></div>
				<div data-id="faa665a" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>The world’s most popular aircraft types, Boeing 737-800 and Airbus A320 NEO</p></div>
					</div></div>
				<div data-id="674453d" data-element_type="section" data-widget_type="icon-list.default">
					<ul>
							<li>
											<span>
													</span>
										<span>Licensed vehicle models re-created based on manufacturer’s documents and blueprints</span>
									</li>
								<li>
											<span>
													</span>
										<span>Diverse game modes: Scenario, Challenge and Cooperation</span>
									</li>
								<li>
											<span>
													</span>
										<span>Configurable weather conditions with the ability to change specific properties</span>
									</li>
								<li>
											<span>
													</span>
										<span>Realistic time simulation and position of the sun depending on geographical position, date and time of year</span>
									</li>
								<li>
											<span>
													</span>
										<span>Accurate in-game tasks developed around documented knowledge and interviews with real-world airport ground handling staff</span>
									</li>
								<li>
											<span>
													</span>
										<span>Steam Workshop</span>
									</li>
								<li>
											<span>
													</span>
										<span>Create your own aircraft paint skins and gameplay scenarios</span>
									</li>
						</ul>
				</div>
					</div>
				<div data-id="c42c2ed" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
								<div data-id="8547b39" data-element_type="widget" data-widget_type="heading.default">
				<p>
			<h2>Where one job ends - another begins</h2>		</p>
				</div>
				<div data-id="1db7546" data-element_type="widget" data-widget_type="text-editor.default">
				<p>An aircraft’s arrival at the gate is the end of its journey and the beginning of the ground crew’s duties. <br>Welcoming passengers, offloading baggage, refuelling large aircraft, pushing aircraft back for departure and a further array of exciting tasks await you.</p>
				</div>
				<div data-nav="{&quot;enabled&quot;:false,&quot;type&quot;:null,&quot;more_el&quot;:null,&quot;query&quot;:[],&quot;widget_settings&quot;:{&quot;lisitng_id&quot;:2420,&quot;posts_num&quot;:6,&quot;columns&quot;:3,&quot;columns_tablet&quot;:2,&quot;columns_mobile&quot;:1,&quot;is_archive_template&quot;:&quot;&quot;,&quot;post_status&quot;:[&quot;publish&quot;],&quot;use_random_posts_num&quot;:&quot;&quot;,&quot;max_posts_num&quot;:9,&quot;not_found_message&quot;:&quot;No data was found&quot;,&quot;is_masonry&quot;:false,&quot;equal_columns_height&quot;:&quot;&quot;,&quot;use_load_more&quot;:&quot;&quot;,&quot;load_more_id&quot;:&quot;&quot;,&quot;load_more_type&quot;:&quot;click&quot;,&quot;load_more_offset&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:0,&quot;sizes&quot;:[]},&quot;use_custom_post_types&quot;:&quot;&quot;,&quot;custom_post_types&quot;:[],&quot;hide_widget_if&quot;:&quot;&quot;,&quot;carousel_enabled&quot;:&quot;yes&quot;,&quot;slides_to_scroll&quot;:&quot;1&quot;,&quot;arrows&quot;:&quot;true&quot;,&quot;arrow_icon&quot;:&quot;fa fa-angle-left&quot;,&quot;dots&quot;:&quot;&quot;,&quot;autoplay&quot;:&quot;true&quot;,&quot;autoplay_speed&quot;:5000,&quot;infinite&quot;:&quot;true&quot;,&quot;center_mode&quot;:&quot;&quot;,&quot;effect&quot;:&quot;slide&quot;,&quot;speed&quot;:500,&quot;inject_alternative_items&quot;:&quot;&quot;,&quot;injection_items&quot;:[],&quot;scroll_slider_enabled&quot;:&quot;&quot;,&quot;scroll_slider_on&quot;:[&quot;desktop&quot;,&quot;tablet&quot;,&quot;mobile&quot;],&quot;custom_query&quot;:false,&quot;custom_query_id&quot;:&quot;&quot;,&quot;_element_id&quot;:&quot;&quot;}}" data-page="1" data-pages="1" data-listing-source="repeater" data-listing-id="2420" data-query-id="" data-slider_options="{&quot;slidesToShow&quot;:{&quot;desktop&quot;:3,&quot;tablet&quot;:2,&quot;mobile&quot;:1},&quot;autoplaySpeed&quot;:5000,&quot;autoplay&quot;:true,&quot;infinite&quot;:true,&quot;centerMode&quot;:false,&quot;speed&quot;:500,&quot;arrows&quot;:true,&quot;dots&quot;:false,&quot;slidesToScroll&quot;:1,&quot;prevArrow&quot;:&quot;<div class='jet-listing-grid__slider-icon prev-arrow ' role='button' aria-label='Previous'><svg width='180' height='180' viewBox='0 0 180 180' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'><path d='M119 47.3166C119 48.185 118.668 48.9532 118.003 49.6212L78.8385 89L118.003 128.379C118.668 129.047 119 129.815 119 130.683C119 131.552 118.668 132.32 118.003 132.988L113.021 137.998C112.356 138.666 111.592 139 110.729 139C109.865 139 109.101 138.666 108.436 137.998L61.9966 91.3046C61.3322 90.6366 61 89.8684 61 89C61 88.1316 61.3322 87.3634 61.9966 86.6954L108.436 40.002C109.101 39.334 109.865 39 110.729 39C111.592 39 112.356 39.334 113.021 40.002L118.003 45.012C118.668 45.68 119 46.4482 119 47.3166Z' fill='black'\/><\/svg><\/div>&quot;,&quot;nextArrow&quot;:&quot;<div class='jet-listing-grid__slider-icon next-arrow ' role='button' aria-label='Next'><svg width='180' height='180' viewBox='0 0 180 180' fill='none' xmlns='http:\/\/www.w3.org\/2000\/svg'><path d='M119 47.3166C119 48.185 118.668 48.9532 118.003 49.6212L78.8385 89L118.003 128.379C118.668 129.047 119 129.815 119 130.683C119 131.552 118.668 132.32 118.003 132.988L113.021 137.998C112.356 138.666 111.592 139 110.729 139C109.865 139 109.101 138.666 108.436 137.998L61.9966 91.3046C61.3322 90.6366 61 89.8684 61 89C61 88.1316 61.3322 87.3634 61.9966 86.6954L108.436 40.002C109.101 39.334 109.865 39 110.729 39C111.592 39 112.356 39.334 113.021 40.002L118.003 45.012C118.668 45.68 119 46.4482 119 47.3166Z' fill='black'\/><\/svg><\/div>&quot;,&quot;rtl&quot;:false,&quot;itemsCount&quot;:3,&quot;fade&quot;:false}" dir="ltr" data-id="27e64ff" data-element_type="widget" data-settings="{&quot;columns&quot;:3,&quot;columns_tablet&quot;:&quot;2&quot;,&quot;columns_mobile&quot;:&quot;1&quot;}" data-widget_type="jet-listing-grid.default"><div data-id="ba6b41c" data-element_type="section" data-elementor-type="jet-listing-items" data-elementor-id="2420" data-post-id="15">
								<div data-id="d2bf683" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p><img loading="lazy" width="397" height="223" src="https://airportsim.com/wp-content/uploads/2022/06/refueling_m.jpg" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2022/06/refueling_m.jpg 397w, https://airportsim.com/wp-content/uploads/2022/06/refueling_m-300x169.jpg 300w" sizes="(max-width: 397px) 100vw, 397px"></p></div>
				
				<div data-id="988916e" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Carefully perform aircraft refueling operations. We’ve prepared a highly detailed and working fuel system on each aircraft and fuel truck so you’ll be able to perform your tasks just as if you were there.</p></div>
					</div><div data-id="ba6b41c" data-element_type="section" data-elementor-type="jet-listing-items" data-elementor-id="2420" data-post-id="15">
								<div data-id="d2bf683" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p><img loading="lazy" width="397" height="223" src="https://airportsim.com/wp-content/uploads/2022/06/luggage_m.jpg" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2022/06/luggage_m.jpg 397w, https://airportsim.com/wp-content/uploads/2022/06/luggage_m-300x169.jpg 300w" sizes="(max-width: 397px) 100vw, 397px"></p></div>
				
				<div data-id="988916e" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Operate different types of machines for loading and unloading passengers’ luggage from and to the aircraft. Be careful of weather conditions and remember to close the barriers on baggage carts so that you do not lose or damage any luggage.</p></div>
					</div><div data-id="ba6b41c" data-element_type="section" data-elementor-type="jet-listing-items" data-elementor-id="2420" data-post-id="15">
								<div data-id="d2bf683" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p><img loading="lazy" width="397" height="223" src="https://airportsim.com/wp-content/uploads/2022/06/passengers_m.jpg" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2022/06/passengers_m.jpg 397w, https://airportsim.com/wp-content/uploads/2022/06/passengers_m-300x169.jpg 300w" sizes="(max-width: 397px) 100vw, 397px"></p></div>
				
				<div data-id="988916e" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Help passengers get in and out of the aircraft. Use highly detailed Airstairs and Jetbridge to allow passengers to board and disembark an aircraft.</p></div>
					</div></div>
					</div>
				<div data-id="2080e14" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
					
								<div data-id="24ef67e" data-element_type="widget" data-widget_type="heading.default">
				<p>
			<h2>Efficiency, time and precision matter</h2>		</p>
				</div>
				<div data-id="d7c583b" data-element_type="widget" data-widget_type="text-editor.default">
				<p>Tug, tanker, air bridge, or maybe a luggage belt? Each is characterized by an individual way of handling, driving, and behavior in various weather conditions. Planning ability, efficient movement, and precise execution of tasks at the right time all contribute to the timely servicing of an aircraft for its next leg. After all, there’s nothing worse than impatient passengers waiting for delayed luggage.</p>
				</div>
					</div>
				<div data-id="7fc1c794" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
								<div data-id="60fdd1e" data-element_type="widget" data-widget_type="heading.default">
				<p>
			<h2>Endless possibilities</h2>		</p>
				</div>
				<div data-id="13da501" data-element_type="widget" data-widget_type="text-editor.default">
				<p>Various game modes await you in AirportSim. The first and in our opinion the most important is the Scenario Mode. It’s a set flight schedule based on real-world operations and everything that follows them.</p>
				</div>
				<div data-id="2ad3153" data-element_type="section">
								<div data-id="daa9a9e" data-element_type="widget" data-widget_type="text-editor.default">
				<p>
							<h4><b>Scenario</b></h4><h4><span>Gameplay planned based on stacked flight plans, predefined weather conditions and tasks.</span></h4>						</p>
				</div>
				<div data-id="f217a3d" data-element_type="widget" data-widget_type="text-editor.default">
							<h4><span><b>Challenge</b></span></h4><h4><span>Feel like you can handle any situation at the airport? Test your skills by placing as high as possible on the scoreboard!</span></h4>						</div>
				<div data-id="f7536ae" data-element_type="widget" data-widget_type="text-editor.default">
							<h4><strong>Co-op Mode </strong></h4><p>Together you can do more, and have more fun – invite your friends to join you on an adventure at one of the busy airports.</p>						</div>
					</div>
					</div>
				<div data-id="90ee927" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
								<div data-id="4095a37" data-element_type="widget" data-widget_type="heading.default">
				<p>
			<h2>”As real as it gets”</h2>		</p>
				</div>
				<div data-id="d77cbbc" data-element_type="section" data-widget_type="text-editor.default">
							<p>AirportSim doesn’t only simulate real vehicles and their behaviors but above all faithful visual replicas of existing real-world airports and aircraft. For this, we’ve established partnerships with many companies in the aviation industry. Under their supervision, we’ve developed some of the most significant functionalities of AirportSim.</p><p><strong>Every detail counts!</strong></p>						</div>
				<div data-id="4b28685" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
								<div data-id="dfea5c5" data-element_type="widget" data-widget_type="heading.default">
				<p><span>OFFICIALY LICENSED PARTNERS</span>		</p>
				</div>
				<div data-id="867ad0a" data-element_type="widget" data-widget_type="image.default">
				<p><img decoding="async" loading="lazy" width="300" height="132" src="https://airportsim.com/wp-content/uploads/2022/08/lotnisko-chopina-white.png">															</p>
				</div>
				<div data-id="a864496" data-element_type="widget" data-widget_type="image.default">
				<p><img decoding="async" loading="lazy" width="300" height="132" src="https://airportsim.com/wp-content/uploads/2022/08/welcome_white.png">															</p>
				</div>
				<div data-id="2cb2567" data-element_type="widget" data-widget_type="image.default">
				<p><img decoding="async" loading="lazy" width="300" height="132" src="https://airportsim.com/wp-content/uploads/2022/08/logo_MK_white.png">															</p>
				</div>
				<div data-id="74ff6fe" data-element_type="widget" data-widget_type="image.default">
				<p><img decoding="async" loading="lazy" width="300" height="132" src="https://airportsim.com/wp-content/uploads/2022/08/airbus.png">															</p>
				</div>
					</div>
				<div data-id="b769509" data-element_type="section">
								<div data-id="7c3a28b" data-element_type="widget" data-widget_type="heading.default">
				<p><span>Your choice: real-world weather conditions or just how you want it?</span>		</p>
				</div>
				<div data-id="3b3953c" data-element_type="widget" data-widget_type="text-editor.default">
				<p><strong>Have you ever wondered what it’s like to stand on the open tarmac, in gale-force winds or a violent thunderstorm? Sun, fog, rain, or snow – all conditions have an impact on the dynamic of operations, thus impacting the difficulty of the game.</strong></p>
				</div>
				<div data-id="0219fdc" data-element_type="widget" data-widget_type="text-editor.default">
							<p><strong>AirportSim lets you choose the following:</strong></p><ul><li>Custom weather – choose any weather you like anytime!</li></ul>						</div>
				<div data-id="8662759" data-element_type="widget" data-widget_type="text-editor.default">
							<ul><li>Live weather – real life conditions based on aviation METAR system</li></ul>						</div>
				
					</div>
					</div>
				<div data-id="5b54f3a5" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;gradient&quot;}">
								<div data-id="c1d38a5" data-element_type="widget" data-widget_type="heading.default">
				<p><span>Creativity and customization at your fingertips</span>		</p>
				</div>
				<div data-id="5ba19d6" data-element_type="widget" data-widget_type="text-editor.default">
							<p>What’s a gaming community without add-ons and the ability to customize things to how you’d like them? In order to meet your expectations, we’ve integrated the Steam Workshop and tools that will let your imagination run free.</p><p>Create your own flight schedule catered to just how you’d like it or base it on a real one and assign tasks to it. Then, share the schedule to Steam Workshop and play it with your friends in Co-op!</p><p>Would you like to feature a real-world airline or create your own in-game? Thanks to Steam Workshop, we allow you to create your own aircraft paint skins and share them with the AirportSim community.</p>						</div>
				
					</div>
				<div data-nav="{&quot;enabled&quot;:true,&quot;type&quot;:&quot;click&quot;,&quot;more_el&quot;:&quot;#loadMore&quot;,&quot;query&quot;:{&quot;post_status&quot;:[&quot;publish&quot;],&quot;post_type&quot;:&quot;post&quot;,&quot;posts_per_page&quot;:&quot;3&quot;,&quot;paged&quot;:&quot;1&quot;,&quot;ignore_sticky_posts&quot;:&quot;1&quot;,&quot;suppress_filters&quot;:false,&quot;jet_smart_filters&quot;:&quot;jet-engine\/default&quot;},&quot;widget_settings&quot;:{&quot;lisitng_id&quot;:356,&quot;posts_num&quot;:3,&quot;columns&quot;:3,&quot;columns_tablet&quot;:2,&quot;columns_mobile&quot;:1,&quot;is_archive_template&quot;:&quot;&quot;,&quot;post_status&quot;:[&quot;publish&quot;],&quot;use_random_posts_num&quot;:&quot;&quot;,&quot;max_posts_num&quot;:9,&quot;not_found_message&quot;:&quot;News about AirporSIM coming soon&quot;,&quot;is_masonry&quot;:false,&quot;equal_columns_height&quot;:&quot;yes&quot;,&quot;use_load_more&quot;:&quot;yes&quot;,&quot;load_more_id&quot;:&quot;loadMore&quot;,&quot;load_more_type&quot;:&quot;click&quot;,&quot;load_more_offset&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;size&quot;:0,&quot;sizes&quot;:[]},&quot;use_custom_post_types&quot;:&quot;&quot;,&quot;custom_post_types&quot;:[],&quot;hide_widget_if&quot;:&quot;&quot;,&quot;carousel_enabled&quot;:&quot;&quot;,&quot;slides_to_scroll&quot;:&quot;1&quot;,&quot;arrows&quot;:&quot;true&quot;,&quot;arrow_icon&quot;:&quot;fa fa-angle-left&quot;,&quot;dots&quot;:&quot;&quot;,&quot;autoplay&quot;:&quot;true&quot;,&quot;autoplay_speed&quot;:5000,&quot;infinite&quot;:&quot;true&quot;,&quot;center_mode&quot;:&quot;&quot;,&quot;effect&quot;:&quot;slide&quot;,&quot;speed&quot;:500,&quot;inject_alternative_items&quot;:&quot;&quot;,&quot;injection_items&quot;:[],&quot;scroll_slider_enabled&quot;:&quot;&quot;,&quot;scroll_slider_on&quot;:[&quot;desktop&quot;,&quot;tablet&quot;,&quot;mobile&quot;],&quot;custom_query&quot;:false,&quot;custom_query_id&quot;:&quot;&quot;,&quot;_element_id&quot;:&quot;&quot;}}" data-page="1" data-pages="4" data-listing-source="posts" data-listing-id="356" data-query-id="" data-id="25f99c5" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}" data-widget_type="jet-listing-grid.default"><div data-id="fe8e3a5" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}" data-elementor-type="jet-listing-items" data-elementor-id="356" data-url="https://airportsim.com/airportsim-out-now/" data-post-id="2751">
								
				<div data-id="7b3377c" data-element_type="widget" data-widget_type="post-info.default">
					<ul>
								<li itemprop="datePublished">
										<span>
															</span>
									<span>
										2023-10-19					</span>
								</li>
				</ul>
				</div>
				
				<div data-id="f6c875f" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Pull on your safety boots and don your hi-vis vests, because it’s time to start your training as an Advanced</p></div>
					</div><div data-id="fe8e3a5" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}" data-elementor-type="jet-listing-items" data-elementor-id="356" data-url="https://airportsim.com/elementor-2737/" data-post-id="2737">
								<div data-id="fb56f89" data-element_type="widget" data-widget_type="jet-listing-dynamic-image.default">
			<p><img width="768" height="403" src="https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-5-768x403.png" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-5-768x403.png 768w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-5-300x158.png 300w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-5-1024x538.png 1024w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-5-1536x806.png 1536w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-5-2048x1075.png 2048w" sizes="(max-width: 768px) 100vw, 768px" loading="lazy"></p>		</div>
				<div data-id="7b3377c" data-element_type="widget" data-widget_type="post-info.default">
					<ul>
								<li itemprop="datePublished">
										<span>
															</span>
									<span>
										2023-09-29					</span>
								</li>
				</ul>
				</div>
				<div data-id="e12f4ea" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Thank you for 50,000 wishlists!</p></div>
				<div data-id="f6c875f" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Dear Ground Crew, The incredible support has left us speechless! You have added us to your wishlist over 50,000 times!</p></div>
					</div><div data-id="fe8e3a5" data-element_type="section" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}" data-elementor-type="jet-listing-items" data-elementor-id="356" data-url="https://airportsim.com/airportsim-lands-on-steam-on-the-19th-of-october/" data-post-id="2667">
								<div data-id="fb56f89" data-element_type="widget" data-widget_type="jet-listing-dynamic-image.default">
			<p><img width="768" height="432" src="https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-3-768x432.png" decoding="async" srcset="https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-3-768x432.png 768w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-3-300x169.png 300w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-3-1024x576.png 1024w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-3-1536x864.png 1536w, https://airportsim.com/wp-content/uploads/2023/09/release-date-steam-3.png 1600w" sizes="(max-width: 768px) 100vw, 768px" loading="lazy"></p>		</div>
				<div data-id="7b3377c" data-element_type="widget" data-widget_type="post-info.default">
					<ul>
								<li itemprop="datePublished">
										<span>
															</span>
									<span>
										2023-09-14					</span>
								</li>
				</ul>
				</div>
				<div data-id="e12f4ea" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>AirportSim lands on Steam on the 19th of October!</p></div>
				<div data-id="f6c875f" data-element_type="widget" data-widget_type="jet-listing-dynamic-field.default"><p>Hey, ground handlers! It’s time to unpack the big news in our carry-on. Are you ready….? We’re at WASD X</p></div>
					</div></div>
				<div data-id="cfa15d4" data-element_type="section" data-widget_type="text-editor.default" data-settings="{&quot;background_background&quot;:&quot;classic&quot;}">
				<p>Sign up today to receive the latest AirportSIM news, updates, behind-the-scenes content, offers, and more (including other MK STUDIOS news, products, events, and promotions) by email.</p>
				</div>
				
							</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Kidney stone breakthrough procedure at UW called 'game changer' for patients (223 pts)]]></title>
            <link>https://komonews.com/news/local/uw-medicine-kidney-stone-breakthrough-procedure-treatment-nasa-mars-astronaut-research-patients-game-changer-seattle-clinical-trial-harborview-medical-center</link>
            <guid>38026119</guid>
            <pubDate>Thu, 26 Oct 2023 14:32:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://komonews.com/news/local/uw-medicine-kidney-stone-breakthrough-procedure-treatment-nasa-mars-astronaut-research-patients-game-changer-seattle-clinical-trial-harborview-medical-center">https://komonews.com/news/local/uw-medicine-kidney-stone-breakthrough-procedure-treatment-nasa-mars-astronaut-research-patients-game-changer-seattle-clinical-trial-harborview-medical-center</a>, See on <a href="https://news.ycombinator.com/item?id=38026119">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="js-Story-Content-0"><p><span>SEATTLE — </span>A groundbreaking medical procedure for those with kidney stones will soon be offered at the University of Washington after more than two decades of research. It will also give astronauts the go ahead they need from NASA to travel to Mars.</p><p>It's a groundbreaking procedure to get rid of painful stones while you're awake, no anesthesia needed.</p><p>"This has the potential to be game changing," said Dr. Kennedy Hall with UW Medicine.</p><p>Still being run through clinical trials at UW Medicine, the procedure called <a href="https://newsroom.uw.edu/news/ultrasound-promises-relief-those-kidney-stones" target="_blank" title="https://newsroom.uw.edu/news/ultrasound-promises-relief-those-kidney-stones">burst wave lithotripsy</a> uses an ultrasound wand and soundwaves to break apart the kidney stone.</p><p>Ultrasonic propulsion is then used to move the stone fragments out, potentially giving patients relief in 10 minutes or less.</p><p>"It would really kind of revolutionize the treatment of kidney stones in the sense that you could come to the clinic and have a stone treated before its a problem," said Dr. Jonathan Harper with UW Medicine.</p><p>Seattle resident Mark Mackenzie will tell you first hand, the treatment works. He got a chance to take part in the clinical trial just days before he was to be operated on.</p><p>"Nothing else in your life matters when you're experiencing kidney stone pain. I wrote an email to the folks that had done the treatment and just thanked them from the bottom of my heart for saving me from that ordeal," Mackenzie  said. "It's not a cure-all for everybody, but in some cases, as in mine, it can be, almost what amounts to a miracle cure."</p><p>Dr. Kennedy Hall, an emergency medicine doctor at Harborview Medical Center, said this will also change how future patients are treated in the emergency room, who show up, having no idea they have a kidney stone.</p><p>"There are a lot of patients with kidney stones, over a million visits a year to emergency departments," said Hall. "Many of them would have stones that we could intervene on at that point of care in the emergency department, so it's potentially groundbreaking."</p><p>This technology is also making it possible for astronauts to travel to Mars, since <a href="https://www1.grc.nasa.gov/space/human-research-program/computational-modeling/renal-stone-incidence-rate-quantification/" target="_blank" title="https://www1.grc.nasa.gov/space/human-research-program/computational-modeling/renal-stone-incidence-rate-quantification/">astronauts are at a greater risk for developing kidney stones</a> during space travel.</p><p>It's so important to NASA, the space agency has been funding the research for the last 10 years.</p><p>"They could potentially use this technology while there, to help break a stone or push it to where they could help stay on their mission and not have to come back to land," said Harper.</p><p>Right now this technology is only available through clinical trials, but according to UW Medicine, it may be available to be used on patients in a regular office setting within the next year or so.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[75 percent of exclusive hardwood may be illegally harvested (264 pts)]]></title>
            <link>https://www.chalmers.se/en/current/news/75-percent-of-exclusive-hardwood-may-be-illegally-harvested,c3863187/</link>
            <guid>38025998</guid>
            <pubDate>Thu, 26 Oct 2023 14:23:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.chalmers.se/en/current/news/75-percent-of-exclusive-hardwood-may-be-illegally-harvested,c3863187/">https://www.chalmers.se/en/current/news/75-percent-of-exclusive-hardwood-may-be-illegally-harvested,c3863187/</a>, See on <a href="https://news.ycombinator.com/item?id=38025998">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p><img alt="" src="https://mb.cision.com/Public/5569/3861158/880b567807b5dc02_800x800ar.jpg"></p>

<p><span><strong>The tropical wood type ipê is popular for building exclusive wooden decks, and in North America and Europe, the demand for the material has increased sharply. Now, a study from Chalmers University of Technology, Sweden, shows that more than three-quarters of all ipê from the top producing region in Brazil could have been harvested illegally. "The study reveals where in the chain the greatest risks lie. It can be a tool to counteract illegal logging," says Caroline S.S. Franca, PhD student at Chalmers.</strong></span></p>

<p><span>Ipê is one of the world's hardest woods. It is therefore particularly suitable for building balconies, conservatories, stairs or piers. Demand for the exclusive, tropical wood has increased steadily in recent years, especially on European, American and Canadian markets. In Brazil, the country of origin for 96 percent of all ipê on the market, exports have increased by over 76 percent in volume over the past decade.&nbsp;</span></p>

<p><span>This development means an increased risk of illegal logging of ipê, which in November 2022 was included on the <a href="https://cites.org/eng" target="_blank">Cites</a> list of species threatened by overexploitation due to its popularity and increasing demand through international trade.</span></p>

<p><span>"Some products from the rainforest are more valuable and therefore more vulnerable to illegal logging. Ipê is at the top of that list. At the same time, ipê trees grow slowly, which means that regrowth takes a long time. The risk of extinction is real, and today there are no reliable figures on the amount of remaining trees and the damage to existing stands that has already been done," says Caroline S.S. Franca, PhD student in Physical Resource Theory at Chalmers.</span></p>

<h2><span>Mapping where risks are greatest</span></h2>

<p><span>Caroline S.S. Franca is the lead author of a research study on the risks for illegal logging of ipê in Brazil, which was recently published in Nature Sustainability. In the study, the researchers analysed extensive amounts of data to identify where in the supply chains there are significant risks that logging has taken place illegally.</span></p>

<p><span>The conclusion is that more than three-quarters of all ipê from Pará—the top producing state of this wood in Brazil and a major source of exports—in the period 2009-2019 may have been illegally harvested.</span></p>

<p><span>"In the study, we see, for example, that 16 percent of the ipê that ends up on the market is harvested without proper permits, and that landowners claim that they have felled more ipê on their land than is likely to exist on the stated area. We also show that there is more wood in circulation than the official production figures indicate," she says.&nbsp;</span></p>

<h2><span>Paving the way for better enforcement and practices</span></h2>

<p><span>“We know that illegal logging is driving forest degradation, and is linked to organised crime, conflict and the destruction of forest-dependent local communities,” continues Caroline S.S. Franca, adding that “degradation of Amazon forests does not only affect the local environment and the ecological diversity of the rainforest, it is also as large of a contributor to climate change as outright deforestation.”</span></p>

<p><span>She hopes that her research results can contribute to an increased awareness of the extent of illegal logging among decision-makers and actors in the supply chain, as well as among consumers.</span></p>

<p><span>“The novel methods developed in the study, exploring existing patterns in the data for transactions and approvals of ipê exploration have an enormous potential both to improve forest control systems in Brazil, as well as to support supply-chain actors in their efforts to make timber sourcing more responsible and sustainable," says Marco Lentini, a co-author of the study with a long-standing experience working on sustainable forest management in the Brazilian Amazon.</span></p>

<h2><span>The information already exists, now there is political will to use it</span></h2>

<p><span>Recent numbers form Brazil’s forest monitoring system shows that deforestation in the Amazon have been almost halved in 2023, compared to last year. Brazilian President Luiz Inácio Lula da Silva also initiated the so-called Belém Declaration—an alliance among eight South American countries to combat the deforestation of the Amazon, adopted on August 8, 2023.</span></p>

<p><span>"This declaration is a welcome expression of renewed political will to reduce deforestation," comments Martin Persson, co-author of the ipê study and a Chalmers researcher with extensive experience of research on the devastation of the Amazon.&nbsp;</span></p>

<p><span>But he also emphasises that the danger is far from over, and that the declaration itself will not lead to change.</span></p>

<p><span>“Halting deforestation and forest degradation requires concrete policy measures. And what we point out in our study is that there is already data and information that can be used by authorities to get to those who harvest forests illegally," he says. &nbsp;</span></p>

<h2><span>Important for consumers to ask questions</span></h2>

<p><span>There is a certification for sustainably produced wood, FSC, which can serve as a guide for consumers who want to avoid buying non-sustainable or illegally harvested wood. But regardless of whether the wood has an FSC certification or not, Caroline S.S. Franca emphasises that it is always important to ask a few basic questions before buying.</span></p>

<p><span>"Where exactly does the wood come from? Is there documentation of the origin of the wood and its path through the production chain? As a consumer, you have a greater opportunity to make an informed decision if you get answers to those questions," she says.&nbsp;</span></p>

<p><span>Image collage by Chalmers. Photo:&nbsp;<span>Mauricio Mercadante, via Flickr | Opwdecks, via Wikimedia Commons.</span></span></p>

<h3><span>More about the scientific study</span></h3>

<p><span>The scientific article <a href="https://doi.org/10.1038/s41893-023-01189-3" target="_blank">Quantifying timber illegality risk in the Brazilian forest frontier</a> has been published in Nature Sustainability. It is written by Caroline S.S. Franca and Martin Persson at Chalmers University of Technology, Tomás Carvalho at the Stockholm Environment Institute (SEI) and Marco Lentini at the Instituto de Manejo e Certificação Florestal e Agrícola (IMAFLORA) in Brazil.&nbsp;</span></p>

<h3><span>More about the ipê market</span></h3>

<ul>
	<li><span>Brazil is the country of origin for 96 percent of all ipê on the market.</span></li>
	<li><span>Brazil's exports of ipê have increased by over 76 percent in volume between the period 2010 – 2021.&nbsp;</span></li>
	<li><span>85 percent of the demand for ipê comes from European, American and Canadian markets. 45% of exports go to Europe.&nbsp;</span></li>
	<li><span>Since 2017, at least 525,000 tonnes, or 470,000 cubic metres of ipê, have been exported from Brazil, Bolivia, Paraguay and Peru.</span></li>
	<li><span>At least two-thirds of the species exported as ipê from the Amazon region in 2017-2021 are on the <a href="https://www.iucnredlist.org/" target="_blank">IUCN</a> list of species threatened with extinction. Ipê is also on the list of species threatened by overexploitation due to international trade. &nbsp;</span></li>
</ul>

<p><span><strong>Source:</strong> <a href="https://www.forest-trends.org/publications/demand-is-pushing-ipe-to-brink-of-extinction-across-the-amazon-basin/" target="_blank">Demand for luxury decks in Europe and North America is pushing ipê to the brink of extinction across the Amazon basin and threatening the forest front frontier</a>. Report from March 2022 by Marigold Norman and Alfredo Rodriguez Zunino, within the Forest Policy Trade and Finance Initiative.</span></p>

<h3><span>More about deforestation and forest degradation</span></h3>

<ul>
	<li><span>Deforestation is the cutting down of forests to make way for other purposes. In the Amazon, deforestation is often driven by the conversion of rainforest to pasture or arable land.</span></li>
	<li><span>Forest degradation - steadily driven by timber production as well as other drivers - is a more gradual process in which unsustainable harvesting cause biodiversity to be lost and the forests' ability to produce timber and other benefits is reduced.&nbsp;</span></li>
</ul>

<h3><span>More about FSC certification of timber</span></h3>

<p><span>FSC, the <a href="https://fsc.org/en" target="_blank">Forest Stewardship Council</a>, works to ensure that the world's forests are managed more sustainably. With FSC-controlled wood, the risk of the wood coming from unacceptable sources, such as illegally harvested wood or wood from forests with endangered high conservation values, is limited.&nbsp;</span></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why cloud bandwidth is so obscenely expensive and what you can do about that (139 pts)]]></title>
            <link>https://kerkour.com/why-cloud-bandwidth-is-so-expensive</link>
            <guid>38025788</guid>
            <pubDate>Thu, 26 Oct 2023 14:08:04 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kerkour.com/why-cloud-bandwidth-is-so-expensive">https://kerkour.com/why-cloud-bandwidth-is-so-expensive</a>, See on <a href="https://news.ycombinator.com/item?id=38025788">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[The Negative Impact of Mobile-First Web Design on Desktop (653 pts)]]></title>
            <link>https://www.nngroup.com/articles/content-dispersion/</link>
            <guid>38025767</guid>
            <pubDate>Thu, 26 Oct 2023 14:06:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nngroup.com/articles/content-dispersion/">https://www.nngroup.com/articles/content-dispersion/</a>, See on <a href="https://news.ycombinator.com/item?id=38025767">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="articleBody"><p>Many modern websites are designed with a mobile-first approach. When these pages render on desktop devices, the content can appear overly large and stretched out. Screen-covering images, large bloated text, and excessive negative space result in long pages requiring more scrolling to consume all content.&nbsp;<strong>We call this design trend content dispersion</strong>.</p>
<h2>On This Page:</h2>
<ul>
<li><a href="#What Is Content Dispersion">What Is Content Dispersion</a></li>
<li><a href="#Design Approaches that Result in Content Dispersion">Design Approaches that Result in Content Dispersion</a></li>
<li><a href="#About the Study">About the Study</a></li>
<li><a href="#Negative Effects of Dispersed Content">Negative Effects of Dispersed Content</a></li>
<li><a href="#Positive Effects of Dispersed Content">Positive Effects of Dispersed Content</a></li>
<li><a href="#Design Recommendations">Design Recommendations</a></li>
<li><a href="#Conclusion">Conclusion</a></li>
</ul>
<h2><a id="What Is Content Dispersion" name="What Is Content Dispersion"></a>What Is Content Dispersion</h2>
<p>The Homepage of Herman Miller’s website illustrates concept dispersion well. When the page scales up to render on a desktop device, the content becomes large and overly dispersed.&nbsp;</p>
<figure><img alt="" height="1240" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/hermanmiller.png" width="1837">
<figcaption><em>A long screenshot of Herman Miller’s homepage (left) with two flyouts showing how much of this page renders within the viewport of a 16” laptop screen. Very little content is shown within the viewport, and the text is notably large.</em></figcaption>
</figure>
<p>Definition<strong>:</strong>&nbsp;<strong>Content dispersion</strong>&nbsp;occurs when the content of a responsive webpage appears overly large and stretched out on large laptop or desktop screens.</p>
<p>Dispersed content may occur only on certain sections of a page. A single section of dispersed content may not cause significant usability issues. However, when most of the content on a page is overly dispersed, the cumulative impact on usability is largely negative.</p>
<p>This article reports the&nbsp;<a href="https://www.nngroup.com/articles/usability-101-introduction-to-usability/">usability issues</a>&nbsp;of mobile-first web design that result in overly dispersed content on desktops. It is based on a study involving 13&nbsp;<a href="https://www.nngroup.com/articles/usability-testing-101/">qualitative usability tests</a>&nbsp;that were combined with semi-structured&nbsp;<a href="https://www.nngroup.com/articles/user-interviews/">interviews</a>.</p>
<p>We found that content dispersion on large-screen devices&nbsp;<strong>causes an increase in&nbsp;</strong><a href="https://www.nngroup.com/videos/cognitive-load/"><strong>cognitive load</strong></a><strong>&nbsp;and&nbsp;</strong><a href="https://www.nngroup.com/articles/interaction-cost-definition/"><strong>interaction costs</strong></a><strong>, difficulty understanding content, and user frustration</strong>.</p>
<h2><a id="Design Approaches that Result in Content Dispersion" name="Design Approaches that Result in Content Dispersion"></a>Design Approaches that Result in Content Dispersion</h2>
<p>Content dispersion is the product of several design trends: mobile-first, minimalism, and large imagery. Often these trends are used in combination to produce pages with low information density.</p>
<h3>Mobile-First</h3>
<p>Over&nbsp;<a href="https://gs.statcounter.com/platform-market-share/desktop-mobile/worldwide#monthly-202102-202202">55% of worldwide web traffic comes from mobile devices</a>. As the use of mobile devices continues to grow, so does&nbsp;the importance of mobile designs. This is why the&nbsp;<a href="https://www.nngroup.com/articles/mobile-first-not-mobile-only/">mobile-first design approach</a>, where designers first design for mobile and then adjust the design for tablets and desktop, has become very popular.</p>
<h3>Minimalism</h3>
<p>A&nbsp;<a href="https://www.nngroup.com/articles/characteristics-minimalism/">minimalist</a>&nbsp;style eliminates any design elements that are not required for the core functionality or message of the website. To avoid a cluttered appearance and achieve a minimalist aesthetic, designers make heavy use of negative space and simplify the amount of content displayed in one screen viewport. The result is content dispersion: a long page with low information density.</p>
<h3>Large Images</h3>
<p>In the past, slow internet speeds limited the use of high-resolution imagery on websites. Today, however, improved bandwidth has eliminated this design constraint. Many modern web pages use large, high-resolution imagery. Image-focused designs are eye-catching, but they result in overly dispersed text content.&nbsp;</p>
<p>A few large images on a desktop page can work well. However, if the page has too many big images, the text-based content that is displayed inline or in between images becomes dispersed and fragmented across the page.</p>
<figure><img alt="" height="2160" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/waze-screenshot-dispersed-homepage.png" width="3456">
<figcaption><em>Waze.com: The image took almost two-thirds of the viewport width without adding much value, the text was enlarged and bold, and the information density was low.</em></figcaption>
</figure>
<h2><a id="About the Study" name="About the Study"></a>About the Study</h2>
<p>We&nbsp;conducted 13&nbsp;qualitative usability tests. We looked at two types of layouts (condensed and dispersed) on two different types of web pages (homepage and product page), for a total&nbsp;<strong>of four different prototypes</strong>&nbsp;corresponding to all combinations of these variables.</p>
<p>To create these prototypes, we searched the web to find real desktop web pages with low content density, expansive negative space, and enlarged text across most parts of the page. We recreated these web pages as dispersed prototypes. For each, we also produced a condensed version using the same content from the original page.&nbsp;</p>
<figure><img alt="" height="7175" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/09/frame-28.png" width="3274">
<figcaption><em>The dispersed homepage prototype (left) was developed by recreating Robinhood.com’s homepage. The Robinhood brand was removed, and the page was represented as a fictitious brand. The condensed homepage prototype (right) used the same text-based content as the original dispersed page, displayed in a layout with higher content density. This page was given a different fictitious brand, and the branded imagery was swapped out to make the page appear unique.&nbsp;</em></figcaption>
</figure>
<p>We had users perform open-ended activities on all 4 prototypes and facilitated a follow-up discussion comparing the two versions of each page type.</p>
<p>The full study methodology&nbsp;is available in the <a href="https://www.nngroup.com/articles/content-dispersion-methodology/">sidebar of this article</a><em>.</em></p>
<h2><a id="Negative Effects of Dispersed Content" name="Negative Effects of Dispersed Content"></a>Negative Effects of Dispersed Content</h2>
<p>When content dispersion exists across large portions of the page, it can severely impact the user experience overall.&nbsp;</p>
<p><strong>Usability issues of dispersed content include:</strong></p>
<ul>
<li>Increased page length and&nbsp;<a href="https://www.nngroup.com/articles/interaction-cost-definition/">interaction cost</a></li>
<li>Increased&nbsp;<a href="https://www.nngroup.com/articles/minimize-cognitive-load/">cognitive load</a></li>
<li>Difficulty building a&nbsp;<a href="https://www.nngroup.com/articles/mental-models/">conceptual model</a>&nbsp;for the page</li>
<li>Increased frustration&nbsp;</li>
<li>Lower trustworthiness</li>
</ul>
<h3>Content Dispersion Increases Interaction Cost</h3>
<p>There are two ways through which content dispersion raises interaction costs and makes information hard to find:&nbsp;</p>
<ul>
<li>Long pages that require more scrolling</li>
<li>The use of mobile-specific design elements like accordions that require more clicks to access content</li>
</ul>
<h4>Long Pages</h4>
<p>Large-screen rendering of mobile-first websites causes content to become dispersed, resulting in long pages. This effect is amplified when these sites employ minimalist and image-focused design approaches. Long pages require users to scroll more and thus increase the interaction cost.</p>
<p>Long pages also make it&nbsp;<strong>harder for users to find specific information</strong>&nbsp;on the page because the content is spread out over many viewports. Indeed, our study participants had more difficulty finding information on the dispersed product page than on its condensed version.&nbsp;</p>
<p>When asked if she found all the information that she was looking for, one participant responded: “Not really. I still don’t know what’s on the other side of the speaker. How is it hooked onto the bike or the chair?” In her effort to find this information, she scrolled through the dispersed page multiple times before she eventually discovered it.&nbsp;</p>
<figure><img alt="" height="3401" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/09/specific-information-hard-to-find.png" width="2394">
<figcaption><em>One participant struggled to find information about how the speaker could be strapped to a bike. It required much scrolling to find the section with product specifications and information about the material, which included the answer that the participant was seeking. This example shows how difficult it can be to find specific information when the content is highly dispersed.</em></figcaption>
</figure>
<h4>Mobile-Specific Design Patterns</h4>
<p>Because many websites with dispersed content are the result of a mobile-first design approach, they often use mobile design patterns that frustrate desktop users. For example,&nbsp;<a href="https://www.nngroup.com/articles/mobile-accordions/">accordions work very well on mobile devices</a>&nbsp;because they collapse a large amount of information into a smaller space, shortening the mobile page and making the information more accessible. They also provide a high-level overview of the content available, allowing users to access the area they are interested in directly. However, on large screens, long pages are less of a problem.&nbsp;<a href="https://www.nngroup.com/articles/accordions-on-desktop/">Accordions can contribute to content fragmentation</a>&nbsp;and significantly increase the interaction cost of finding crucial information, without the benefit they bring on mobile.</p>
<p>When viewing the accordion menu of product information on the dispersed prototype, one participant stated: “Like for this part here with the details: I had to click on here if I wanted to read the information. And then I had to close it because I didn't want to keep it all open. So, I would've had to click all of them to read them, instead of me scrolling and trying to see what is important. On other pages, I'm able to click the specs, and boom, it's right here.”</p>
<figure><img alt="" height="1369" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/speaker-specs-dispersed.jpg" width="1440">
<figcaption><em>The dispersed prototype required participants to interact with every single accordion item to consume all the product information. The design caused frustration and impeded the participants' ability to remember the product specifications easily.</em></figcaption>
</figure>
<p>One user said, “I prefer this page (the condensed version). It’s less number of clicks. All the information is right there. Everything is right in front of you.”</p>
<figure><img alt="" height="763" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/speaker-specs-condensed.jpg" width="1440">
<figcaption><em>The condensed product specification allowed participants to scan and consume all relevant information easily.</em></figcaption>
</figure>
<h4>Increased Cognitive Load&nbsp;</h4>
<p>As images get larger and negative space expands, the text-based content gets fragmented across viewports. When related content is chopped up and separated across viewports, it can’t be viewed as a unit.</p>
<p>Users must&nbsp;<a href="https://www.nngroup.com/articles/recognition-and-recall/">remember</a>&nbsp;information from different viewports (and scroll back and forth between them) in order to reach a conclusion or make a decision. The capacity of their short-term memory can be easily overwhelmed.&nbsp;&nbsp;</p>
<p>While viewing the dispersed homepage prototype, one participant described his struggle: “I have to see the offers to talk about them, and it takes a long time […]. It takes me five seconds to scroll, to look at them all, and then get a sense of understanding, and it takes me five seconds to scroll back to see them all.”</p>
<figure><img alt="" height="2321" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/09/frame-3.jpg" width="1080">
<figcaption><em>The dispersed page presented one service per viewport. This layout forced users to remember the details of each service and scroll up and down to compare them.</em></figcaption>
</figure>
<figure><img alt="" height="1105" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/offerings-condensed.jpg" width="1440">
<figcaption><em>Our condensed product page prototype took the same information from the original dispersed page and arranged it in a 2x2 grid that allowed users to compare multiple services simultaneously, without having to remember the details of each service.</em></figcaption>
</figure>
<p>The condensed layout displayed more information in the same viewport and alleviated the cognitive burden on users, enabling a more effortless and gratifying browsing experience.</p>
<p>The style of imagery used on the webpage also impacts how fragmented the content feels. When the images are informational, people will spend time viewing them to extract useful information. Thus, an informational image stretched out on a large screen is as good as text and is unlikely to cause extra work. However, when&nbsp;<a href="https://www.nngroup.com/articles/zigzag-page-layout/">images are decorative</a>, people won’t spend time looking at them because they hold no informational value. In these cases, the fragmentation of useful content feels even worse, as users will need to scroll past the bloated illustrations to get small pieces of useful content.&nbsp;</p>
<p>When exploring our prototyped homepage, one participant described his frustration:&nbsp;“It's just too much. The image takes up half the block here, but I think that you could put more emphasis on, you know, a small picture and then, I guess, increase the font for the actual description of the product.”</p>
<figure><img alt="" height="788" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/robinhood-large-image.png" width="1440">
<figcaption><em>When interacting with this part of our prototype, one participant complained about the overly large images that provided no informational value.</em></figcaption>
</figure>
<h3>Difficulty Building a Conceptual Model</h3>
<p>With an increased page length due to dispersed content and an increased demand on working memory, dispersed pages made it more difficult for users to assess information and build a&nbsp;<a href="https://www.nngroup.com/articles/mental-models/">mental model</a>&nbsp;of the concepts communicated on the website compared to our condensed prototype.</p>
<p>One participant struggled to build a mental model of the concepts described on the dispersed homepage prototype, saying, “Having to try to retain the four or five offers to understand the scope, rather than seeing the four or five offers all together to understand the scope is more difficult for me.”</p>
<p>In another instance, we saw this same difficulty in building a conceptual understanding of a wireless speaker on our dispersed product page prototype. When making a purchasing decision, users tend to consider multiple factors, such as the price, product details, reviews, and more. When these key pieces of information were spread over many viewports, they were forced to consume it separately and remember it. This negatively impacted users’ ability to gain an understanding of the product, which allows them to make a confident purchasing decision. When important information is delivered together or across fewer viewports, it’s easier to build a conceptual understanding.</p>
<p>When talking about the differences between the dispersed and condensed product pages, one participant explained: “I tend to forget a lot of things. So, on this page (the dispersed page), I have to constantly scroll to revisit the information to remember it, whereas on this page (the condensed page), I have all the information together on the screen.”</p>
<p>Difficulty building a conceptual model is amplified when users encounter the&nbsp;<a href="https://www.nngroup.com/articles/illusion-of-completeness/">illusion of completeness</a>, an issue more prevalent on dispersed websites, as they often use color blocks that create strong horizontal lines across the viewport or expansive negative space that can falsely signal that the content on the page is complete. If no scrolling cues exist to indicate that there is more content to discover, users are likely to miss this content.</p>
<p>One participant who encountered the illusion of completeness at the top of the dispersed prototype gave the site a 5 out of 7 for ease of use. When asked why he gave this rating, he explained how the illusion had originally stumped him, saying,&nbsp;“Well, just because I was doing it on the laptop screen […] I didn't have a sense that there was information below the headline there and so I only saw half the page on my laptop. […] It just so happens, it's framed just right on my laptop that it looks like a full page […] There are just no cues, I'm not at the bottom. […] I just don't naturally go into a place and scroll and say, where's the bottom?”</p>
<figure><img alt="" height="1618" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/robinhood-illusion-of-completeness.png" width="2880">
<figcaption><em>When interacting with our dispersed prototype, one participant encountered the illusion of completeness. Because there was nothing at the bottom of the screen indicating more content existed, he assumed he was at the bottom of the page when he was only viewing the top portion.</em></figcaption>
</figure>
<h3>Trustworthiness Decreases</h3>
<p>Due to the usability issues described above, dispersed websites appear to provide less, yet harder-to-access content. Some users feel that the company is hiding information and may lose trust in it.</p>
<p>One participant said that “transparency is a big part” and that it’s important that “information is easy to see and it’s not like the website is hiding anything.” When this was the case, “it created a sense of security, comfort, and transparency that people like and need.”</p>
<p>For these reasons, users showed a clear preference for a condensed layout, especially when their goal was to explore the website and build an overall understanding of its offerings.</p>
<h2><a id="Positive Effects of Dispersed Content" name="Positive Effects of Dispersed Content"></a>Positive Effects of Dispersed Content</h2>
<p>When an entire page becomes dispersed, the cumulative impact on usability is largely negative. However, there were some instances where content dispersion had a positive effect on the experience.&nbsp;</p>
<p>Because dispersion decreased the amount of content displayed within the viewport, it allowed users to focus on one piece of highlighted content at once and limited the perception of information overload.</p>
<p>Highlighting information by reducing the content density within a viewport can benefit the experience when:</p>
<ul>
<li><strong>Content is complex</strong>, allowing users to focus on understanding one piece at a time.</li>
<li><strong>Users need to familiarize themselves with the displayed content</strong>&nbsp;and, thereby, could be overwhelmed by too much information.</li>
<li><strong>High-value imagery is displayed.</strong>&nbsp;Large product pictures can add value by making it easy for users to examine the image to observe the fine details of a product.</li>
</ul>
<p>When viewing the dispersed product page with large product images, one participant stated: “What made the (dispersed) page a lot easier is that all the features were separated. It was more focused on presenting it visually and individually vs. having everything grouped together. This made it a lot easier to read and understand.”</p>
<figure><img alt="" height="1254" loading="lazy" src="https://media.nngroup.com/media/editor/2023/10/06/product-page-highlighted-content.png" width="2218">
<figcaption><em>A participant remarked positively about the ability to see the product's details with large pictures and corresponding explainer text.</em></figcaption>
</figure>
<p>When the images used are of high informational value, the resulting dispersion may be justified. However, as discussed, images used as filler or strictly for visual interest cause dispersion without added benefits. That is likely why the positive effects of content dispersion were less likely to be observed on the homepage prototype, where images are less valuable.&nbsp;</p>
<h2><a id="Design Recommendations" name="Design Recommendations"></a>Design Recommendations</h2>
<p>As more and more web traffic comes from mobile devices, the mobile-first approach will likely increase in popularity. Minimalist and image-focused design aesthetics are also here to stay. Given the usability implications of these design approaches on desktop experiences, designers should follow these design recommendations to avoid the biggest pitfalls:</p>
<ul>
<li><strong>Evaluate how designs render on desktop.</strong>&nbsp;If desktop rendering makes a large portion of the page excessively stretched out, reevaluate whether important content should be redesigned to allow for scannability on desktop.</li>
<li><strong>Evaluate the value added by images.</strong>&nbsp;Prioritize large images that add contextual understanding of the product or service offered. Ask yourself if the value of the large images is worth the dispersion they cause on desktop.</li>
<li><strong>Keep critical, related content grouped together in the same viewport.</strong>&nbsp;Consider which information is most relevant to understanding the offering and choose designs that keep this content together to reduce back-and-forth scrolling.&nbsp;</li>
<li><strong>Avoid mobile-specific interactions and design elements.&nbsp;</strong>Limit the use of accordions on desktop and consider adaptive designs that display this content in desktop-friendly ways.</li>
<li><strong>Understand when dispersion can be used strategically&nbsp;</strong>to focus attention on key points or complex pieces of content.</li>
</ul>
<h2><a id="Conclusion" name="Conclusion"></a>Conclusion</h2>
<p>Minimalist desktop pages with dispersed content can limit distractions and focus attention on key points or complex pieces of information. However, an entire page that employs a mobile-first, minimalist, image-focused design creates usability issues on desktop. The page's content is stretched out and fragmented across viewports, becoming difficult to consume and understand.</p></section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[What happens when you vectorize wide PyTorch expressions? (117 pts)]]></title>
            <link>https://probablymarcus.com/blocks/2023/10/19/vectorizing-wide-pytorch-expressions.html</link>
            <guid>38025381</guid>
            <pubDate>Thu, 26 Oct 2023 13:41:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://probablymarcus.com/blocks/2023/10/19/vectorizing-wide-pytorch-expressions.html">https://probablymarcus.com/blocks/2023/10/19/vectorizing-wide-pytorch-expressions.html</a>, See on <a href="https://news.ycombinator.com/item?id=38025381">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
              

      <article>
        

<p>In scientific computing, code is often naturally expressed as wide, tree-like expressions. Often different branches of that tree contain similar chunks of logic, so there is potential to run many different branches together in parallel vectorized operations. What happens when you take your nice tree-like code and mangle it into hard-to-read vectorized code? How would a person do that?</p>

<p>I created <a href="https://vexpr.org/">Vexpr</a> and used it to take <a href="https://probablymarcus.com/blocks/2022/11/30/hands-on-bayesian-optimization.html">real experiment</a> code and convert its <a href="https://github.com/outergroup/outer-loop-cookbook/blob/585b3b09fc7ac7f254a0cda8ef962670fb4f45fb/mnist_project/src/gp/vexpr_handson_gp.py#L55-L204">readable expressions</a> into <a href="https://probablymarcus.com/stuff/2023-10-19-vexpr-compiled-code.txt">vectorized expressions</a> at runtime. In this post, I present the results. Topics include:</p>

<ul>
  <li>What is the immediate impact?</li>
  <li>How does this relate to <code>torch.compile</code>?</li>
  <li>What is the more detailed breakdown of the impact on the GPU and CPU?</li>
</ul>

<h2 id="introduction-wide-expressions">Introduction: Wide expressions</h2>

<p>Mathematical expressions naturally form trees. Here’s a toy example.</p>

\[\sqrt{a^2 + b^2} + \sqrt{c^2 + d^2}\]

<p>Here’s Python code implementing this expression and highlighting its wide tree-like structure:</p>

<figure><pre><code data-lang="python"><span>sum</span><span>([</span><span>math</span><span>.</span><span>sqrt</span><span>(</span><span>sum</span><span>([</span><span>a</span> <span>**</span> <span>2</span><span>,</span>
                    <span>b</span> <span>**</span> <span>2</span><span>])),</span>
     <span>math</span><span>.</span><span>sqrt</span><span>(</span><span>sum</span><span>([</span><span>c</span> <span>**</span> <span>2</span><span>,</span>
                    <span>d</span> <span>**</span> <span>2</span><span>]))])</span></code></pre></figure>

<p>For this simple function, we can write vectorized PyTorch code by hand:</p>

<figure><pre><code data-lang="python"><span>torch</span><span>.</span><span>tensor</span><span>([</span><span>a</span><span>,</span> <span>b</span><span>,</span> <span>c</span><span>,</span> <span>d</span><span>]).</span><span>pow</span><span>(</span><span>2</span><span>).</span><span>view</span><span>((</span><span>2</span><span>,</span> <span>2</span><span>)).</span><span>sum</span><span>(</span><span>dim</span><span>=</span><span>0</span><span>).</span><span>sqrt</span><span>().</span><span>sum</span><span>()</span></code></pre></figure>

<p>The former code calls <code>pow</code> 4 times, calls <code>sum</code> twice, calls <code>sqrt</code> twice, then calls <code>sum</code> one last time. The latter code flattens the tree into a single pipeline so that one operation occurs for each <em>level</em> of the tree. Previously we ran one Python function call per <em>node</em> of the tree, and afterward we run one call per <em>level</em> of the tree – a number that is exponentially smaller.</p>

<p>PyTorch is often used in a pipelined way as shown above, but that’s usually because the expression is inherently <em>deep</em>; neural networks are the obvious example. Here we are concerned with expressions that are <em>wide</em>.</p>

<p>Imagine scaling up this toy example: use actual, larger expressions; let each variable represent a <em>list of vectors</em>, not just a number; within the expression, call functions like SciPy’s <code>cdist</code> which compute pairwise distances and return large matrices; do all of this on <em>batches</em> of inputs. With these changes, we now have a wide expression that is worth running on a GPU.</p>

<p>This scenario comes up often in scientific computing. For example, the kernel of a Gaussian Process (GP) takes in two lists of vectors and returns pairwise similarities. We <a href="https://probablymarcus.com/blocks/2022/11/30/hands-on-bayesian-optimization.html">can encode some of our intuition into these kernels</a> by composing them via weighted sums and products. This leads to giant tree-like expressions, and because those expressions have many similar operations in each parallel branch, there is a lot of potential for vectorization.</p>

<p>Writing vectorized code for giant expressions is hard, so I created <a href="https://vexpr.org/">Vexpr</a> to make it easy. Vexpr takes readable-but-slow PyTorch, NumPy, and JAX expressions and compiles them into fast, <a href="https://probablymarcus.com/stuff/2023-10-19-vexpr-compiled-code.txt">delightfully ugly</a> vectorized expressions.</p>

<h2 id="how-to-vectorize-one-level-of-an-expression-tree">How to vectorize one level of an expression tree</h2>

<p>Wide expressions naturally form a tree. When we vectorize that tree, we create a new narrower expression that invokes a series of Python functions, one for each level of the original tree.</p>

<div><p><img src="https://probablymarcus.com/images/2023-10-19-tree.svg" alt="Trees collapsing"></p><p>

How do we collapse a tree and reduce operations to be one per level? Each of the operations now will have to take in a tensor that contains every input to that level and return a tensor that contains all of the outputs.</p></div>

<p>We can see some operations already support such a change.</p>
<ul>
  <li>Elementwise operations like <code>pow</code> and <code>sqrt</code> can run on multiple inputs as-is.</li>
  <li>Parallel sums can be implemented as <code>.view(...).sum(dim=0)</code></li>
</ul>

<p>What about more difficult cases? For example, what if the parallel sums are of different lengths? On GPUs, fast parallel reductions only work when inputs all have the same length. Would providing a single-input single-output interface still have a benefit? The answer is yes, even if the operation internally just loops over the sums. Collapsing one level of the tree allows subsequent levels to be collapsed, and low-hanging fruit tends to appear in the deeper levels. Moreover, we can do better than looping over the sums, even when the lengths are different. Vexpr’s vectorizer groups the inputs by length and performs a reduced number of operations—one for each unique length. For example, this decreases the number of <code>torch.cdist</code> operations in my <a href="https://probablymarcus.com/blocks/2022/11/30/hands-on-bayesian-optimization.html">hands-on kernel</a> from 49 to 5. These 5 calls happen invisibly inside of a <code>cdist_multi</code> function that the code calls once.</p>

<p>These collapsed operations often introduce some overhead. Batch operations often require permuting tensors (e.g. for batched pairwise distances) or reordering values (e.g. putting equal-length sums next to each other). For operations that are grouped by size, we must split input tensors then re-concatenate the output tensors. Thus, while vectorizing has many benefits, it also introduces extra work for the GPU that is not necessary when using a non-vectorized expression. Is this overhead worth it? Let’s turn to experiments to find out.</p>

<h2 id="vectorizing-leads-to-4x-7x-speed-up-on-one-set-of-benchmarks">Vectorizing leads to 4x-7x speed-up on one set of benchmarks</h2>

<p>Here I run a pair of benchmarks on an NVIDIA V100 GPU. I describe the benchmarks within the context of real Gaussian Process use cases, but you don’t need to understand Gaussian Processes to understand these results; I am simply running <a href="https://probablymarcus.com/stuff/2023-10-19-vexpr-compiled-code.txt">this big vectorized expression</a> on inputs of different shapes.</p>

<p>When you use Gaussian Processes for Bayesian Optimization, you first fit a GP’s parameters to the training data, then you optimize a set of candidate points to maximize expected improvement. Both of these steps include backpropagating gradients through the GP kernel.</p>

<p><strong>Benchmark 1:</strong> Fit the kernel’s parameters. I run the forward and backward pass of the kernel, using <code>x1.shape == x2.shape == (379, 26)</code>, i.e. a training set of 379 26-dimensional vectors. I repeat 100 times, then wait for a final CUDA synchronize. I test with and without <code>torch.compile</code>.</p>

<table>
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th>Don’t compile</th>
      <th>Compile</th>
      <th>&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Baseline</strong></td>
      <td>6.43s</td>
      <td>3.0s</td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp; <em>Compile speed-up: 2.1x</em></td>
    </tr>
    <tr>
      <td><strong>Vectorized</strong></td>
      <td>0.99s</td>
      <td>0.76s</td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp; <em>Compile speed-up: 1.3x</em></td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;&nbsp; <em>Vectorize speed-up: 6.5x</em></td>
      <td>&nbsp;&nbsp; <em>Vectorize speed-up: 3.9x</em></td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp; <em>Combined speed-up: 8.5x</em></td>
    </tr>
  </tbody>
</table>

<p><br>
<strong>Benchmark 2:</strong> The optimization loop. In this experiment, <code>x1.shape == (60, 2, 26)</code> and <code>x2.shape == (60, 381, 26)</code>. That means we’re searching for 60 single candidate points, with an additional point included in each (hence the 2, not 1) because the Noisy Expected Improvement algorithm also gets predictions for a set of previous potentially best points. These two points are appended to 379 training points to give us 381 points. Again I run the kernel’s forward and backward pass 100 times.</p>

<table>
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th>Don’t compile</th>
      <th>Compile</th>
      <th>&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Baseline</strong></td>
      <td>6.03s</td>
      <td>2.57s</td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp; <em>Compile speed-up: 2.3x</em></td>
    </tr>
    <tr>
      <td><strong>Vectorized</strong></td>
      <td>0.83s</td>
      <td>0.63s</td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp; <em>Compile speed-up: 1.3x</em></td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;&nbsp; <em>Vectorize speed-up: 7.2x</em></td>
      <td>&nbsp;&nbsp; <em>Vectorize speed-up: 4.1x</em></td>
      <td>&nbsp;&nbsp;&nbsp;&nbsp; <em>Combined speed-up: 9.6x</em></td>
    </tr>
  </tbody>
</table>

<p><br>
In these experiments, vectorizing my kernel caused a 4x speed-up when I used <code>torch.compile</code>, and a ~7x speed-up with straight pytorch code.</p>

<h2 id="but-this-speed-up-doesnt-happen-in-all-benchmarks">…but this speed-up doesn’t happen in all benchmarks</h2>

<p>Now I test the kernel’s performance in another scenario: hold-one-out cross-validation. During cross-validation, we fit \(N\) models on \(N\) slightly different datasets. We can test this by just rerunning Benchmark 1 on \(N\) models in parallel. To demonstrate a surprising phenomenon, I set \(N=20\).</p>

<p><strong>Benchmark 3:</strong> Cross-validation. Repeat Benchmark 1, but train 20 models in parallel rather than 1. So we have <code>x1.shape == x2.shape == (20, 379, 26)</code>, and the shapes of every parameter, e.g. <code>lengthscale</code>,  have <code>(20,)</code> prepended to them.</p>

<table>
  <thead>
    <tr>
      <th>&nbsp;</th>
      <th>Don’t compile</th>
      <th>Compile</th>
      <th>&nbsp;</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><strong>Baseline</strong></td>
      <td>15.6s</td>
      <td>7.50s</td>
      <td>&nbsp;&nbsp; <em>Compile speed-up: 2.1x</em></td>
    </tr>
    <tr>
      <td><strong>Vectorized</strong></td>
      <td>17.7s</td>
      <td>6.15s</td>
      <td>&nbsp;&nbsp; <em>Compile speed-up: 2.9x</em></td>
    </tr>
    <tr>
      <td>&nbsp;</td>
      <td>&nbsp;&nbsp; <em>Vectorize <strong>slow-down</strong>: 1.1x</em></td>
      <td>&nbsp;&nbsp; <em>Vectorize speed-up: 1.2x</em></td>
      <td>&nbsp;&nbsp; <em>Combined speed-up: 2.5x</em></td>
    </tr>
  </tbody>
</table>

<p><br>
This result surprised me. The vectorized version is sometimes <em>slower</em> than the baseline, at least when you examine only the GP kernel in an isolated benchmark. The end-to-end performance of the larger system is still often faster due to the freed up CPU (see next section), but it is noteworthy that vectorizing code doesn’t always directly speed up that code.</p>

<p>To understand where the change occurs, I rerun this benchmark for different \(N\). Note that \(N=1\) and \(N=20\) correspond to the original Benchmark 1 and Benchmark 3 results, respectively. I used the same hardware, but I enabled some additional profiling, hence the slower times compared to above.</p>

<p><img src="https://probablymarcus.com/images/2023-10-19-benchmark_fit_VexprHandsOnGP_benchmarkonly.svg" alt="Benchmark showing diminishing improvement from vectorization"></p>

<p>The vectorized kernel initially has a huge advantage over the baseline, but this advantage diminishes as we give it more parallel work, and without <code>torch.compile</code> the vectorized kernel is eventually <em>slower</em> when viewed in isolation. Why does this happen?</p>

<h2 id="the-cpu-is-a-bottleneck-vectorizing-removes-that-bottleneck">The CPU is a bottleneck. Vectorizing removes that bottleneck.</h2>

<p>To really understand the performance impact of vectorization, we need to understand the CPU and GPU usage before and after. First, note that CUDA / PyTorch are built on an asynchronous relationship between the CPU and GPU, where the CPU ideally should always run ahead, always queueing the GPU’s future work, while the GPU is always working through its queue. However, there are two events that cause the CPU to wait for the GPU:</p>

<ol>
  <li>When the CPU chooses to read a value from the GPU. This is a decision made by your code.</li>
  <li>When the CPU gets too far ahead of the GPU. This is a decision made by CUDA.</li>
</ol>

<p>I <a href="https://github.com/outergroup/outer-loop-cookbook/blob/585b3b09fc7ac7f254a0cda8ef962670fb4f45fb/mnist_project/profile_performance_test.sh#L86">profiled the kernel using NVIDIA’s <code>nsys</code></a>, and I used that trace to obtain GPU and CPU active time. My so-called CPU “active” time is actually an inferred value; CUDA spins the CPU 100% constantly, even when the CPU is just waiting for the GPU, so I use <a href="https://github.com/outergroup/outer-loop-cookbook/blob/585b3b09fc7ac7f254a0cda8ef962670fb4f45fb/mnist_project/print_nsys_stats.py#L94">heuristics</a> to detect these waits and subtract it them from the actual active time.</p>

<p>Here is the same plot from above, but with the CPU and GPU time overlaid.</p>

<p><img src="https://probablymarcus.com/images/2023-10-19-benchmark_fit_VexprHandsOnGP.svg" alt="Benchmark with CPU and GPU time included. The baseline is CPU-bound until we reach larger input sizes."></p>

<p>First, to understand the result of Benchmark 1 above, look at the left side of both plots. Both the baseline and vectorized models have low total active GPU time. But the baseline model puts a much larger workload on the CPU, which is responsible for orchestrating the set of operations that are sent to the GPU. Thus, the GPU spends the vast majority of the time idle, waiting for the CPU to give it more work. For the vectorized model the amount of CPU work is almost always less than the amount of GPU work, so the GPU is almost never idle; the benchmark time is roughly equal to the GPU active time.</p>

<p>Now we focus on the surprising result from Benchmark 3, where the baseline model did slightly <em>better</em> than the vectorized model. As we scale up the number of models, we see an interesting phenomenon. When training many models simultaneously, even the baseline model is able to keep the GPU busy. Once the GPU active time exceeds CPU active time. one of the key selling points of vectorized code is eliminated, because the nonvectorized code becomes good enough. This was a fun, surprising fact; even unvectorized code can outrun the GPU if you pass in large enough tensors. I expect this phenomenon to occur in other large-batch scenarios like training on very large datasets or doing Bayesian Optimizations with very large sets of candidate points. Of course, the vectorized code is still superior when using <code>torch.compile</code>, and in all cases its CPU usage is far superior.</p>

<p>Finally, let’s look at the GPU workload. Independent of the effect on CPU, what is the impact of vectorization on the total amount of work that the GPU has to do? Looking at slopes of the “GPU time” lines, we see that for some models, e.g. my non-compiled model, vectorization increases the total workload, and for other models it decreases the workload. I studied the CUDA traces closely and found that vectorization does indeed reduce many aspects of the GPU workload, greatly reducing the number of operations and decreasing the total amount of time spent on the fundamental computations of the algorithm. However it also introduces overhead (mentioned above) by interspersing operations that permute and reorder the tensors, or splitting them into groups then concatenating results. Sometimes the reduced “fundamental” time outweighs the additional overhead, while other times the overhead outweighs the reduction in fundamental time.</p>

<p>So we see that vectorization has three effects:</p>
<ol>
  <li>It lets us keep the GPU busy even when inputs are small.</li>
  <li>It frees up the CPU to do other work.</li>
  <li>It can slightly change the total amount of GPU work, sometimes for the worse.</li>
</ol>

<p>The speed-up from vectorization can be great, but it can be underwhelming in scenarios where none of the benefits are needed.</p>

<h2 id="the-benefits-of-vectorization-increase-as-gpu-speed-increases">The benefits of vectorization increase as GPU speed increases</h2>

<p>Here is a point that follows naturally from everything above, but it might not be immediately obvious. It is quite striking when you experience it.</p>

<p>As I built Vexpr, I tested on an NVIDIA T4. Then for this experiment, I upgraded to a much-faster NVIDIA V100, and the benefits of vectorization greatly improved.</p>

<p>You always want your CPU to stay ahead of the GPU so that the GPU is never idle. Code that is good enough to stay ahead of this year’s GPU might not be good enough for next year’s GPU. With each upgrade, you need the dotted CPU line from these charts to be lower and lower.</p>

<p>This means that vectorizing your code is good strategy for future-proofing it.</p>

<h2 id="gpytorchs-structure-kernels-show-similar-results">GPyTorch’s “structure” kernels show similar results</h2>

<p>I also tested GPyTorch’s limited support for vectorization. GPyTorch lets you take sets of identically-shaped kernels and run them as a single vectorized kernel. This capability is easy to use when summing single-feature kernels, so I created a partially vectorized kernel by <a href="https://github.com/outergroup/outer-loop-cookbook/blob/585b3b09fc7ac7f254a0cda8ef962670fb4f45fb/mnist_project/src/gp/botorch_partial_handson_gp.py#L43">replacing sums of single-feature Matern kernels with single Additive Structure</a> kernels.</p>

<p><img src="https://probablymarcus.com/images/2023-10-19-benchmark_fit_BotorchPartialHandsOnGP.svg" alt="Benchmark showing vectorized version is faster than baseline, but this advantage goes away at higher input sizes"></p>

<p><em>(Don’t focus too much on comparing absolute speed of the Vexpr and the GPyTorch kernels. There are many small differences between the two that have nothing to do with vectorization. For example, unlike my Vexpr kernel, GPyTorch has a nice optimization of putting <a href="https://github.com/cornellius-gp/gpytorch/blob/43383c2411569bfd3e4417a3918cf53f2c9dbe40/gpytorch/kernels/kernel.py#L492">this line</a> before <a href="https://github.com/cornellius-gp/gpytorch/blob/43383c2411569bfd3e4417a3918cf53f2c9dbe40/gpytorch/kernels/kernel.py#L506">this line</a>.)</em></p>

<p>Vexpr has been optimized much more for this use case than GPyTorch, but we see that the same fundamental phenomena occur. Vectorization leads to wins at small batch sizes, but the advantage diminishes at large batch sizes. In this experiment, vectorization increased the total GPU workload, so with large batch sizes the only advantage of vectorization is a freed up CPU.</p>

<p>Interestingly, neither GPyTorch kernel ever reaches a point where GPU time is equal to the benchmark time. The GPU always spends at least 1-2 seconds idle. This happens because GPyTorch’s kernels do a <a href="https://github.com/cornellius-gp/gpytorch/blob/43383c2411569bfd3e4417a3918cf53f2c9dbe40/gpytorch/kernels/kernel.py#L345">synchronous equality check</a> on every call, forcing a GPU synchronize, which causes the CPU to fall behind the GPU immediately afterward. So when you use GPyTorch kernels on GPUs, you don’t get the ideal fully asynchronous execution that you’re supposed to get with CUDA / PyTorch. (There is good news: PyTorch has recently introduced <a href="https://pytorch.org/docs/stable/generated/torch.cuda.set_sync_debug_mode.html"><code>torch.cuda.set_debug_mode(2)</code></a> which detects these unwanted synchronize events. Like <a href="https://x.com/ID_AA_Carmack/status/1616525615041216513?s=20">others</a>, I think every PyTorch library developer should become friends with this API.)</p>

<h2 id="closing-thoughts-on-compilation">Closing thoughts on compilation</h2>

<p>Everybody agrees that vectorization is good. Is it worth doing even in cases where it requires extra work, like with wide expressions? The results above suggest: most of the time, yes, but with interesting nuances. Vectorization is especially great for making the most of a GPU when your task is running many iterations on smaller batches of input data. For larger-batch scenarios, maybe you’ll only benefit from vectorization after you add JIT compilation, or after you upgrade your GPU, or after you’ve found some use for all the newfound idle CPU time. But, to a first approximation, vectorization is good.</p>

<p>The real open question for the field remains: for “wide” computation graphs, what is a practical strategy for getting vectorized code?</p>

<p>My experiments above show that this is not solved by JIT tools like <code>torch.compile</code>, nor do I expect it to be. I think a compiler would need to become a huge slow unreliable hairball to solve this type of auto-vectorization problem. Vexpr’s vectorizer is a compiler that solves this, but <strong>it does so by making the programmer meet the compiler in the middle</strong>. The programmer gives Vexpr a tree-like expression and tells Vexpr, “You should try vectorizing this.” Both of those pieces of information are valuable: the programmer structures the logic in a certain way, and the programmer indicates that there is opportunity for vectorization there. The programmer doesn’t need to do anything too difficult, and neither does the compiler.</p>

<p>I think this “meet-in-the-middle” approach between programmer and compiler is a good design principle that leads to good systems. And I think this will become even more true in the age of Large Language Models; rather than cramming too much magic into our compilers, let’s rely on humans-with-LLMs to meet the compiler in the middle.</p>

<p><em>(This project is supported by a GCP cloud compute grant from <a href="https://mlcollective.org/wiki/ask-mlc-compute-assistance/">ML Collective</a>, which has been super helpful. Thanks, also, to Rosanne Liu for useful feedback on drafts of this post.)</em></p>




      </article>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[U.S. GDP grew at a 4.9% annual pace in the third quarter, better than expected (259 pts)]]></title>
            <link>https://www.cnbc.com/2023/10/26/us-gdp-grew-at-a-4point9percent-annual-pace-in-the-third-quarter-better-than-expected.html</link>
            <guid>38025177</guid>
            <pubDate>Thu, 26 Oct 2023 13:23:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2023/10/26/us-gdp-grew-at-a-4point9percent-annual-pace-in-the-third-quarter-better-than-expected.html">https://www.cnbc.com/2023/10/26/us-gdp-grew-at-a-4point9percent-annual-pace-in-the-third-quarter-better-than-expected.html</a>, See on <a href="https://news.ycombinator.com/item?id=38025177">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>The U.S. economy grew even faster than expected in the third quarter, buoyed by a strong consumer in spite of higher interest rates, ongoing inflation pressures, and a variety of other domestic and global headwinds.</p><p>Gross domestic product, a measure of all goods and services produced in the U.S., rose at a seasonally adjusted 4.9% annualized pace in the July-through-September period, up from an unrevised 2.1% pace in the second quarter, the <a href="https://www.bea.gov/news/2023/gross-domestic-product-third-quarter-2023-advance-estimate" target="_blank">Commerce Department reported</a> Thursday.. Economists surveyed by Dow Jones had been looking for a 4.7% acceleration in GDP, which also is adjusted for inflation.</p></div><div><p>The sharp increase came due to contributions from consumer spending, increased inventories, exports, residential investment and government spending.</p><p>Consumer spending, as measured by personal consumption expenditures, increased 4% for the quarter after rising just 0.8% in Q2, and was responsible for 2.7 percentage points of the total GDP increase. Inventories contributed 1.3 percentage points. Gross private domestic investment surged 8.4% and government spending and investment jumped 4.6%.</p><p>Spending at the consumer level split fairly evenly between goods and services, with the two measures up 4.8% and 3.6%, respectively.</p><p>The GDP increase marked the biggest gain since the fourth quarter of 2021.</p><p><a href="https://www.cnbc.com/2023/10/25/stock-market-today-live-updates.html">Markets reacted little</a> to the news, with stocks mixed in early trading and Treasury yields mostly lower.</p><p>"This report confirmed what we already knew: The consumer went on a shopping spree in the third quarter," said Michael Arone, chief investment strategist for U.S. SPDR Business at State Street Global Advisors. "I don't think anything in this report changes the outlook for monetary policy. That's why I don't think you're seeing an overreaction from markets."</p><p>While the report could give the Federal Reserve some impetus to keep policy tight, traders were still pricing in no chance of an interest rate hike when the central bank meets next week, according to CME Group data. Futures pricing pointed to just a 27% chance of an increase at the December meeting following the GDP release.</p><p>"Investors should not be surprised that the consumer was spending in the final months of the summer," said Jeffrey Roach, chief economist at LPL Financial. "The real question is if the trend can continue in the coming quarters, and we think not."</p><p>In other economic news Thursday, the <a href="https://www.dol.gov/ui/data.pdf" target="_blank">Labor Department reported</a> that jobless claims totaled 210,000 for the week ended Oct. 21, up 10,000 from the previous period and slightly ahead of the Dow Jones estimate for 207,000. Also, <a href="https://www.census.gov/manufacturing/m3/adv/pdf/durgd.pdf" target="_blank">durable goods orders</a> increased 4.7% in September, well ahead of the 0.1% gain in August and the 2% forecast, according to the Commerce Department.</p><p>At a time when many economists had thought the U.S. would be in the midst of at least a shallow recession, growth has kept pace due to consumer spending that has exceeded all expectations. The consumer was responsible for about 68% of GDP in Q3.</p><p>While the U.S. has proven resilient to the various challenges, most economists expect growth to slow considerably in the coming months. However, they generally think the U.S. can skirt a recession absent any other unforeseen shocks.</p><p>"Going forward, the consumer's not going to spend at the same rate, the government is not going to spend at the same rate, and businesses seem to be slowing down their spending as well," Arone said. "This suggests this might be the peak GDP figure, at least in the next few quarters."</p><p>Even with Covid-era government transfer payments running out, spending has been strong as households draw down savings and ramp up credit card balances. The personal saving rate declined to 3.8% in the third quarter, compared to 5.2% in the previous period. Also, real after-tax income fell 1% in the quarter after increasing 3.5% in Q2.</p><p>The GDP gains also come despite the Federal Reserve not only raising rates at the fastest clip since the early 1980s but also vowing to keep rates high until inflation comes back to acceptable levels. Price increases have been running well ahead of the central bank's 2% annual target, though the rate of inflation at least has ebbed in recent months.</p><p>The chain-weighted price index, which takes into accounts changes in consumer shopping patterns to gauge inflation, rose 3.5% for the quarter, up from 1.7% in Q2 and higher than the Dow Jones estimate for 2.5%.</p><p>"The bottom line for the Federal Reserve is that no recession is in sight, and policymakers can be content in the knowledge that they can keep interest rates higher for longer, without triggering a meltdown in the U.S. economy," said Matthew Ryan, head of market strategy at Ebury, a global financial services firm. "We don't think that this impressive GDP data will be enough to encourage the Fed to deliver another rate increase, though we do at least believe that the first cut is a long way off."</p><p>Along with rates and inflation, consumers have been dealing with a variety of other issues.</p><p>The resumption of student loan payments is expected to take a bite out of household budgets, while elevated gas prices and a wobbly stock market are hitting confidence levels. Geopolitical tensions also pose potential headaches, with <a href="https://www.cnbc.com/2023/10/26/israel-hamas-war-updates-and-latest-news-on-gaza-conflict.html">fighting between Israel and Hamas</a> and the war in Ukraine posing substantial uncertainties about the future.</p><p><em><strong>Don't miss these CNBC PRO stories:</strong></em></p><ul><li><a href="https://www.cnbc.com/2023/10/16/want-to-retire-in-5-years-heres-how-to-invest-for-it-according-to-the-pros.html"><em>Want to retire in 5 years? Here's how to invest for it, according to the pros</em></a></li><li><a href="https://www.cnbc.com/2023/10/16/morgan-stanley-says-the-average-stock-is-breaking-down-sp-500-to-fall-to-3900-by-year-end-.html"><em>Morgan Stanley says the average stock is breaking down, S&amp;P 500 to fall to 3,900 by year-end</em></a></li><li><a href="https://www.cnbc.com/2023/10/15/this-highly-profitable-industry-is-booming-as-the-population-ages.html"><em>This highly profitable industry is booming as the population ages</em></a></li><li><a href="https://www.cnbc.com/2023/10/20/the-chip-stock-is-getting-a-ton-of-love-from-wall-street-and-its-not-nvidia.html"><em>This chip stock is getting a ton of love from Wall Street, and it's not Nvidia</em></a></li></ul></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Synth Emulation in MAME (113 pts)]]></title>
            <link>https://gearspace.com/board/electronic-music-instruments-and-electronic-music-production/1416192-synth-emulation-mame-arcade-machine-emulator-new-trend.html</link>
            <guid>38025125</guid>
            <pubDate>Thu, 26 Oct 2023 13:18:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://gearspace.com/board/electronic-music-instruments-and-electronic-music-production/1416192-synth-emulation-mame-arcade-machine-emulator-new-trend.html">https://gearspace.com/board/electronic-music-instruments-and-electronic-music-production/1416192-synth-emulation-mame-arcade-machine-emulator-new-trend.html</a>, See on <a href="https://news.ycombinator.com/item?id=38025125">Hacker News</a></p>
Couldn't get https://gearspace.com/board/electronic-music-instruments-and-electronic-music-production/1416192-synth-emulation-mame-arcade-machine-emulator-new-trend.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Mars has a surprise layer of molten rock inside (169 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-023-03271-4</link>
            <guid>38024899</guid>
            <pubDate>Thu, 26 Oct 2023 12:57:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-023-03271-4">https://www.nature.com/articles/d41586-023-03271-4</a>, See on <a href="https://news.ycombinator.com/item?id=38024899">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_26216026.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_26216026.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="The internal structure of Mars as a cutaway computer illustration showing the molten core of iron centre." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_26216026.jpg">
  <figcaption>
   <p><span>Mars’s liquid-metal core seems to be smaller than previous studies suggested (artist’s impression).</span><span>Credit: Claus Lunau/Science Photo Library</span></p>
  </figcaption>
 </picture>
</figure><p>A meteorite that slammed into Mars in September 2021 has rewritten what scientists know about the planet’s interior.</p><p>By analysing the seismic energy that vibrated through the planet after the impact, researchers have discovered a layer of molten rock that envelops Mars’s liquid-metal core. The finding, reported today in two papers in <i>Nature</i><sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup><sup>,</sup><sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>, means that the Martian core is smaller than previously thought. It also resolves some lingering questions about how the red planet formed and evolved over billions of years.</p><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-021-00696-7" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_23638852.jpg"><p>Mars’s core has been measured — and it’s surprisingly large</p></a>
 </article><p>The discovery comes from NASA’s InSight mission, <a href="https://www.nature.com/articles/d41586-018-07540-5" data-track="click" data-label="https://www.nature.com/articles/d41586-018-07540-5" data-track-category="body text link">which landed a craft with a seismometer on Mars’s surface</a>. Between 2018 and 2022, that instrument <a href="https://www.nature.com/articles/d41586-019-03796-7" data-track="click" data-label="https://www.nature.com/articles/d41586-019-03796-7" data-track-category="body text link">detected hundreds of ‘marsquakes’ shaking the planet</a>. Seismic waves produced by quakes or impacts can slow down or speed up depending on what types of material they are travelling through, so seismologists can measure the waves’ passage to deduce what the interior of a planet looks like. On Earth, researchers have used information from earthquakes to discover the planet’s layers: a brittle outer crust, a mostly solid mantle, and a liquid outer core and a solid inner core. Finding out whether other planets have similar layers is key to understanding their geological history, including whether they were ever suitable for life.</p><p>InSight’s seismometer was the first to detect marsquakes. In July 2021, on the basis of the mission’s observations of 11 quakes, researchers reported that the liquid core of Mars seemed to have a radius of around 1,830 kilometres<sup><a href="#ref-CR3" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">3</a></sup>. <a href="https://www.nature.com/articles/d41586-021-00696-7" data-track="click" data-label="https://www.nature.com/articles/d41586-021-00696-7" data-track-category="body text link">That was bigger than many scientists were expecting</a>. And it suggested that the core contained surprisingly high amounts of light chemical elements, such as sulfur, mixed with iron.</p><p>But the September 2021 meteorite impact “unlocked everything”, says Henri Samuel, a geophysicist at the Institute of Earth Physics of Paris and lead author of one of today’s papers<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>. The meteorite struck the planet on the side opposite to where InSight was located. That’s much more distant than the marsquakes that InSight had previously studied, and allowed the probe to detect seismic energy travelling all the way through the Martian core<sup><a href="#ref-CR4" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">4</a></sup>. “We were so excited,” says Jessica Irving, a seismologist at the University of Bristol, UK, and a co-author of Samuel’s paper.</p><h2>Puzzle solving</h2><p>For Samuel, it was an opportunity to test his idea that a molten layer of rock surrounds Mars’s core<sup><a href="#ref-CR5" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">5</a></sup>. The way the seismic energy traversed the planet showed that what scientists had thought was the boundary between the liquid core and the solid mantle, 1,830 kilometres from the planet’s centre, was actually a different boundary between liquid and solid. It was the top of the newfound layer of molten rock meeting the mantle (see ‘Rethinking the Martian core’). The actual core is buried beneath that molten-rock layer and has a radius of only 1,650 kilometres, Samuel says.</p><figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_26220980.png?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_26220980.png?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="Rethinking the Martian core. Diagram showing the revised model of the Mars core." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_26220980.png">
  <figcaption>
   <p><span><i>Nature</i>/Source: Refs 1 &amp; 2</span></p>
  </figcaption>
 </picture>
</figure><p>The revised core size solves some puzzles. It means that the Martian core doesn’t have to contain high amounts of light elements — a better match to laboratory and theoretical estimates. A second liquid layer inside the planet also meshes better with other evidence, such as how Mars responds to being deformed by the gravitational tug of its moon Phobos.</p><p>“It’s an elegant solution,” says Simon Stähler, a seismologist at the Swiss Federal Institute of Technology (ETH) Zurich who led the team that published the 2021 paper<sup><a href="#ref-CR3" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">3</a></sup>. He stands by his team’s conclusion that it had spotted a deep boundary between liquid and solid; it just turned out to be the top of a molten-rock layer rather than the top of the liquid-metal core.</p><h2>Peculiar layering</h2><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-022-03447-4" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-03271-4/d41586-023-03271-4_23666282.jpg"><p>NASA spacecraft records epic ‘marsquakes’ as it prepares to die</p></a>
 </article><p>The second paper in <i>Nature</i> today<sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>, from a team independent of Samuel’s, agrees that Mars’s core is enveloped by a layer of molten rock, but estimates that the core has a radius of 1,675 kilometres. The work analysed seismic waves from the same distant meteorite impact, as well as simulations of the properties of mixtures of molten elements such as iron, nickel and sulfur at the high pressures and temperatures in the Martian core. Having molten rock right up against molten iron “appears to be unique”, says lead author Amir Khan, a geophysicist at ETH Zurich. “You have this peculiarity of liquid–liquid layering, which is something that doesn’t exist on the Earth.”</p><p>The molten-rock layer might be left over from a magma ocean that once covered Mars. As it cooled and solidified into rock, the magma would have left behind a deep layer of radioactive elements that still release heat and keep rock molten at the base of the mantle, Samuel says.</p><p>The InSight lander <a href="https://www.nature.com/articles/d41586-022-03447-4" data-track="click" data-label="https://www.nature.com/articles/d41586-022-03447-4" data-track-category="body text link">is now out of commission</a>, its solar panels covered in dust, so it’s unlikely that scientists will gather any evidence that could substantially revise Mars’s core size again any time soon. But reviews of the mission’s past observations might reveal some new details of what’s inside Mars.</p>
                </div><div id="references" aria-labelledby="Bib1"><h2 id="Bib1">References</h2><div data-container-section="references" id="Bib1-content"><ol data-track-component="outbound reference"><li data-counter="1."><p id="ref-CR1">Samuel, H. <i>et al.</i> <i>Nature</i> https://doi.org/10.1038/s41586-023-06601-8 (2023).</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1038/s41586-023-06601-8" data-track-action="article reference" href="https://doi.org/10.1038%2Fs41586-023-06601-8" aria-label="Article reference 1" data-doi="10.1038/s41586-023-06601-8">Article</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 1" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=Nature&amp;doi=10.1038%2Fs41586-023-06601-8&amp;publication_year=2023&amp;author=Samuel%2CH.">
                    Google Scholar</a>&nbsp;
                </p></li><li data-counter="2."><p id="ref-CR2">Khan, A. <i>et al.</i> <i>Nature</i> https://doi.org/10.1038/s41586-023-06586-4 (2023).</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1038/s41586-023-06586-4" data-track-action="article reference" href="https://doi.org/10.1038%2Fs41586-023-06586-4" aria-label="Article reference 2" data-doi="10.1038/s41586-023-06586-4">Article</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 2" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=Nature&amp;doi=10.1038%2Fs41586-023-06586-4&amp;publication_year=2023&amp;author=Khan%2CA.">
                    Google Scholar</a>&nbsp;
                </p></li><li data-counter="3."><p id="ref-CR3">Stähler, S. C. <i>et al.</i> <i>Science</i> <b>373</b>, 443–448 (2021).</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1126/science.abi7730" data-track-action="article reference" href="https://doi.org/10.1126%2Fscience.abi7730" aria-label="Article reference 3" data-doi="10.1126/science.abi7730">Article</a>&nbsp;
    <a data-track="click" rel="nofollow noopener" data-track-label="link" data-track-action="pubmed reference" href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Abstract&amp;list_uids=34437118" aria-label="PubMed reference 3">PubMed</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 3" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=Science&amp;doi=10.1126%2Fscience.abi7730&amp;volume=373&amp;pages=443-448&amp;publication_year=2021&amp;author=St%C3%A4hler%2CS.%20C.">
                    Google Scholar</a>&nbsp;
                </p></li><li data-counter="4."><p id="ref-CR4">Irving, J. C. E. <i>et al.</i> <i>Proc. Natl Acad. Sci. USA</i> <b>120</b>, e2217090120 (2023).</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1073/pnas.2217090120" data-track-action="article reference" href="https://doi.org/10.1073%2Fpnas.2217090120" aria-label="Article reference 4" data-doi="10.1073/pnas.2217090120">Article</a>&nbsp;
    <a data-track="click" rel="nofollow noopener" data-track-label="link" data-track-action="pubmed reference" href="http://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&amp;db=PubMed&amp;dopt=Abstract&amp;list_uids=37094138" aria-label="PubMed reference 4">PubMed</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 4" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=Proc.%20Natl%20Acad.%20Sci.%20USA&amp;doi=10.1073%2Fpnas.2217090120&amp;volume=120&amp;publication_year=2023&amp;author=Irving%2CJ.%20C.%20E.">
                    Google Scholar</a>&nbsp;
                </p></li><li data-counter="5."><p id="ref-CR5">Samuel, H. <i>et al.</i> <i>J. Geophys. Res. Planets</i> <b>126</b>, e2020JE006613 (2021).</p><p><a data-track="click" rel="nofollow noopener" data-track-label="10.1029/2020JE006613" data-track-action="article reference" href="https://doi.org/10.1029%2F2020JE006613" aria-label="Article reference 5" data-doi="10.1029/2020JE006613">Article</a>&nbsp;
    <a data-track="click" data-track-action="google scholar reference" data-track-label="link" rel="nofollow noopener" aria-label="Google Scholar reference 5" href="http://scholar.google.com/scholar_lookup?&amp;title=&amp;journal=J.%20Geophys.%20Res.%20Planets&amp;doi=10.1029%2F2020JE006613&amp;volume=126&amp;publication_year=2021&amp;author=Samuel%2CH.">
                    Google Scholar</a>&nbsp;
                </p></li></ol><p><a data-track="click" data-track-action="download citation references" data-track-label="link" rel="nofollow" href="https://citation-needed.springer.com/v2/references/10.1038/d41586-023-03271-4?format=refman&amp;flavour=references">Download references</a></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cold war satellite images reveal hundreds of unknown Roman forts (249 pts)]]></title>
            <link>https://www.theguardian.com/science/2023/oct/26/cold-war-satellite-images-hundreds-unknown-roman-forts</link>
            <guid>38024665</guid>
            <pubDate>Thu, 26 Oct 2023 12:31:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/science/2023/oct/26/cold-war-satellite-images-hundreds-unknown-roman-forts">https://www.theguardian.com/science/2023/oct/26/cold-war-satellite-images-hundreds-unknown-roman-forts</a>, See on <a href="https://news.ycombinator.com/item?id=38024665">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>Declassified cold-war spy satellite images have thrown new light on the workings of the Roman empire by revealing hundreds of previously undiscovered forts, with dramatic implications for our understanding, experts have said.</p><p>Archaeologists examining aerial photographs taken in the 1960s and 70s said they reveal 396 sites of unknown Roman forts in <a href="https://www.theguardian.com/world/syria" data-link-name="in body link" data-component="auto-linked-tag">Syria</a> and Iraq across the Syrian steppe.</p><p>The findings, <a href="https://doi.org/10.15184/aqy.2023.153" data-link-name="in body link">published today in Antiquity</a>, an international archeology academic journal, have now forced a re-evaluation of life at the Roman frontier.</p><p>A previous survey of the region in 1934 by Antoine Poidebard, a French Jesuit explorer who pioneered aerial archeology in the Middle East from his bi-plane, recorded a line of 116 forts.</p><p>Until now, historians assumed these forts were part of a defensive line built to protect the eastern province of the empire from Arab and Persian incursions, and from nomadic marauding tribes intent on captive-taking and slave-raiding.</p><p>The new discoveries instead point to the frontier being more fluid and a vibrant place of cross-border trade, rather than of constant violent conflict, the authors said, with the forts supporting a system of caravan-based interregional trade, communication and military transport.</p><p>The authors said it now raises the question: “Was it a wall or a road?”</p><p>“Since the 1930s, historians and archeologists have debated the strategic or political purpose of this system of fortifications,” said the lead author of <a href="https://doi.org/10.15184/aqy.2023.153" data-link-name="in body link">the research, </a>Prof Jesse Casana, of Dartmouth college in New Hampshire, US. “But few scholars have questioned Poidebard’s basic observation that there was a line of forts defining the eastern Roman frontier.”</p><p>The 396 new sites, hidden by modern-day development, are widely distributed across the region from east to west, which does not support the argument that the forts constituted a north-south border wall.</p><p>Researchers now hypothesise that the forts were constructed to support cross-border trade, protecting caravans travelling between the eastern provinces and the non-Roman territories, as well as facilitating communications between east and west.</p><p>Significantly, this indicates that the borders of the Roman world were less rigidly defined and exclusionist than previously believed, said the authors.</p><p>The Romans were a military society, but they clearly valued trade and communication with regions not under their direct control, they added.</p><p>The images studied formed part of the world’s first spy-satellite programme conducted at the time of geopolitical tension between the US and Soviet Union and their allies, the western bloc and the eastern bloc.</p><p>They “preserve a high-resolution, stereo perspective on a landscape that has been severely impacted by modern-day land-use change,” said Casana.</p><p>He said it revealed the real value of satellite imagery for recording archeological features before they are lost.</p><p>“We were only able confidently to identify extant archeological remains of 38 of Poidebard’s 116 forts. In addition, many of the likely Roman forts we have documented in this study have already been destroyed by recent urban or agricultural development, and countless others are under extreme threat.”</p><p>As more imagery is declassified, such as U2 spy plane photographs, more new archeological discoveries will be able to be made. Casana said “careful analysis of these powerful data holds enormous potential for future discoveries in the near east and beyond”.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Apple backs national right-to-repair bill, offering parts, manuals, and tools (138 pts)]]></title>
            <link>https://arstechnica.com/gadgets/2023/10/apple-backs-national-right-to-repair-bill-offering-parts-manuals-and-tools/</link>
            <guid>38024573</guid>
            <pubDate>Thu, 26 Oct 2023 12:21:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arstechnica.com/gadgets/2023/10/apple-backs-national-right-to-repair-bill-offering-parts-manuals-and-tools/">https://arstechnica.com/gadgets/2023/10/apple-backs-national-right-to-repair-bill-offering-parts-manuals-and-tools/</a>, See on <a href="https://news.ycombinator.com/item?id=38024573">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <h4>
      Right to repair    —
</h4>
            
            <h2 itemprop="description">Repair advocates say Apple's move is beneficial, but also strategic.</h2>
                    </div><div itemprop="articleBody">
                                    
<figure>
  <img src="https://cdn.arstechnica.net/wp-content/uploads/2023/10/Screenshot-2023-10-25-at-2.28.51%E2%80%AFPM-800x422.png" alt="Page from Apple's repair manual showing the removal of a battery from an M2 MacBook Air">
      <figcaption><div><p><a href="https://cdn.arstechnica.net/wp-content/uploads/2023/10/Screenshot-2023-10-25-at-2.28.51%E2%80%AFPM.png" data-height="1316" data-width="2496">Enlarge</a> <span>/</span> A section of Apple's <a href="https://arstechnica.com/gadgets/2023/10/apple-backs-national-right-to-repair-bill-offering-parts-manuals-and-tools/%22https://manuals.info.apple.com/MANUALS/2000/MA2146/en_US/macbookair-M2-2022-07300359A-repair.pdf%22">repair manual for the M2 MacBook Air from 2022</a>. Apple already offers customers some repair manuals and parts through its Self-Service Repair program.</p></div><p>Apple</p></figcaption>  </figure>

  




<!-- cache hit 93:single/related:6c73e064e7c24d9997dd12771ba103b7 --><!-- empty -->
<p>Right-to-repair advocates have long stated that passing repair laws in individual states was worth the uphill battle. Once enough states demanded that manufacturers make parts, repair guides, and diagnostic tools available, few companies would want to differentiate their offerings and policies and would instead pivot to national availability.</p>
<p>On Tuesday, Apple did exactly that. Following <a href="https://arstechnica.com/gadgets/2023/09/calif-passes-strongest-right-to-repair-bill-yet-requiring-7-years-of-parts/">the passage of California's repair bill</a> that <a href="https://arstechnica.com/gadgets/2023/08/hell-freezes-over-as-apple-supports-right-to-repair-bill/">Apple supported</a>, requiring seven years of parts, specialty tools, and repair manual availability, Apple <a href="https://www.reuters.com/technology/apple-make-tools-parts-fix-phones-computers-available-nationwide-white-house-2023-10-24/?ref=biztoc.com">announced Tuesday</a> that it would back a similar bill on a federal level. It would also make its parts, tools, and repair documentation available to both non-affiliated repair shops and individual customers, "at fair and reasonable prices."</p>
<p>"We intend to honor California's new repair provisions across the United States," said Brian Naumann, Apple's vice president for service and operation management, at <a href="https://www.youtube.com/watch?v=Ug3DkX7VRy8">a White House event Tuesday</a>.</p>
<p>Apple, which had for years opposed right-to-repair laws under the auspices of <a href="https://arstechnica.com/tech-policy/2017/03/industry-and-apple-opposing-right-to-repair-laws/">security</a> and <a href="https://www.vice.com/en/article/wjvdb4/apple-is-telling-lawmakers-people-will-hurt-themselves-if-they-try-to-fix-iphones">physical safety concerns</a>, has recently offered both an <a href="https://arstechnica.com/gadgets/2019/08/apple-gives-third-party-repair-shops-more-access-to-authorized-parts/">independent repair program for unaffiliated shops</a>&nbsp;and <a href="https://arstechnica.com/gadgets/2022/04/apple-launches-self-service-repair-program-for-iphone-users-in-the-us/">a self-service repair program</a> for individuals.</p>
<p>Apple's pledge was part of <a href="https://www.whitehouse.gov/briefing-room/statements-releases/2023/10/25/readout-of-the-white-house-convening-on-right-to-repair/">a White House push</a> on right-to-repair issues. The Biden administration has <a href="https://arstechnica.com/tech-policy/2021/07/bidens-right-to-repair-order-could-stop-companies-from-blocking-diy-fixes/">pushed right-to-repair needs</a> as a consumer issue, focusing on raised costs and stifling small businesses. Nationwide repair bills have been introduced before but have yet to gain much momentum. Apple's support for such a bill could have an impact, especially if other manufacturers follow suit in matching their national policy to California's law.</p>                                            
                                                        
<p>"I think most OEMs [Original Equipment Manufacturers] will realize they can save themselves a lot of trouble by making parts, tools, and other requirements of state laws already in NY, MN, CA, and CO available nationally," wrote Gay Gordon-Byrne, <span>executive director of <a href="http://repair.org/">The Repair Association</a></span>, to Ars. "If they try to differentiate between selling one type of product in New York and a different one in neighboring Pennsylvania—the border is porous, and they will only create more complexity in their distribution network than they would gain."</p>
<p>Gordon-Byrne noted that firms like HP, Google, Samsung, and Lenovo have pledged to comply with repair rules on a national level. The US Public Interest Research Group (PIRG) communicated a similarly hopeful note in <a href="https://pirg.org/media-center/statement-apple-announces-it-will-comply-with-californias-right-to-repair-rules-nationwide/">its response to Tuesday's event</a>, noting that "Apple makes a lot of products, and its conduct definitely influences other manufacturers."</p>
<p>At the same time, numerous obstacles to repair access remain in place through copyright law—"Which we hope will be high on an agenda in the <a href="https://judiciary.house.gov/subcommittees/committee-judiciary/subcommittee-courts-intellectual-property-and-internet">IP subcommittee</a> this session," Gordon-Byrne wrote.</p>
<p>Elizabeth Chamberlain, director of sustainability for <a href="http://ifixit.com/">iFixit</a>, a parts vendor and repair advocate, suggested that Apple's pledge to extend California's law on a national level is "a strategic move." "Apple likely hopes that they will be able to negotiate out the parts of <a href="https://arstechnica.com/gadgets/2023/05/minnesota-enacts-right-to-repair-law-that-covers-more-devices-than-any-other-state/">the Minnesota bill</a> they don't like," Chamberlain wrote in an email, pointing specifically to the "fair and reasonable" parts provisioning measure that could preclude Apple's tendency toward pairing parts to individual devices.</p>
<p>"[I]t's vital to get bulletproof parts pairing prohibitions passed in other states in 2024," Chamberlain wrote. "Independent repair and refurbishment depend on parts harvesting."</p>
<p>Ars reached out to Apple for comment on this story and will update the post with any new information.</p>
<p><em>Disclosure: Kevin Purdy previously worked for iFixit. He has no financial interest in the company.</em></p>

                                                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Static Analysis Tools for C (164 pts)]]></title>
            <link>https://github.com/analysis-tools-dev/static-analysis</link>
            <guid>38024002</guid>
            <pubDate>Thu, 26 Oct 2023 11:03:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/analysis-tools-dev/static-analysis">https://github.com/analysis-tools-dev/static-analysis</a>, See on <a href="https://news.ycombinator.com/item?id=38024002">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text">
 <a href="https://analysis-tools.dev/" rel="nofollow">
   <img alt="Analysis Tools Website" src="https://raw.githubusercontent.com/analysis-tools-dev/assets/master/static/redesign.svg">
 </a>
<p dir="auto">This repository lists <strong>static analysis tools</strong> for all programming languages, build tools, config files and more. The focus is on tools which improve code quality such as linters and formatters.
The official website, <a href="https://analysis-tools.dev/" rel="nofollow">analysis-tools.dev</a> is based on this repository and adds rankings, user comments, and additional resources like videos for each tool.</p>
<p dir="auto"><a href="https://analysis-tools.dev/" rel="nofollow"><img src="https://camo.githubusercontent.com/c93c9b0098508bc8dceb4153b57c5b13ec6966a7c8d16e5bd7f115c07ad287c1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f576562736974652d4f6e6c696e652d324235424145" alt="Website" data-canonical-src="https://img.shields.io/badge/Website-Online-2B5BAE"></a>
<a target="_blank" rel="noopener noreferrer" href="https://github.com/analysis-tools-dev/static-analysis/workflows/CI/badge.svg"><img src="https://github.com/analysis-tools-dev/static-analysis/workflows/CI/badge.svg" alt="CI"></a></p>
<h2 tabindex="-1" id="user-content-sponsors" dir="auto"><a href="#sponsors">Sponsors</a></h2>
<p dir="auto">This project would not be possible without the generous support of our sponsors.</p>

<p dir="auto">If you also want to support this project, head over to our <a href="https://github.com/sponsors/analysis-tools-dev">Github sponsors page</a>.</p>
<h2 tabindex="-1" id="user-content-meaning-of-symbols" dir="auto"><a href="#meaning-of-symbols">Meaning of Symbols:</a></h2>
<ul dir="auto">
<li>©️ stands for proprietary software. All other tools are Open Source.</li>
<li>ℹ️ indicates that the community does not recommend to use this tool for new projects anymore. The icon links to the discussion issue.</li>
<li><g-emoji alias="warning">⚠️</g-emoji> means that this tool was not updated for more than 1 year, or the repo was archived.</li>
</ul>
<p dir="auto">Pull requests are very welcome!<br>
Also check out the sister project, <a href="https://github.com/mre/awesome-dynamic-analysis">awesome-dynamic-analysis</a>.</p>
<h2 tabindex="-1" id="user-content-table-of-contents" dir="auto"><a href="#table-of-contents">Table of Contents</a></h2>
<h4 tabindex="-1" id="user-content-programming-languages" dir="auto"><a href="#programming-languages"></a><a href="#programming-languages-1">Programming Languages</a></h4>
<ul dir="auto">
<li><a href="#abap">ABAP</a></li>
<li><a href="#ada">Ada</a></li>
<li><a href="#asm">Assembly</a></li>
<li><a href="#awk">Awk</a></li>
<li><a href="#c">C</a></li>
<li><a href="#csharp">C#</a></li>
<li><a href="#cpp">C++</a></li>
<li><a href="#clojure">Clojure</a></li>
<li><a href="#coffeescript">CoffeeScript</a></li>
<li><a href="#coldfusion">ColdFusion</a></li>
<li><a href="#crystal">Crystal</a></li>
<li><a href="#dart">Dart</a></li>
<li><a href="#delphi">Delphi</a></li>
<li><a href="#dlang">Dlang</a></li>
<li><a href="#elixir">Elixir</a></li>
<li><a href="#elm">Elm</a></li>
<li><a href="#erlang">Erlang</a></li>
<li><a href="#fsharp">F#</a></li>
<li><a href="#fortran">Fortran</a></li>
<li><a href="#go">Go</a></li>
<li><a href="#groovy">Groovy</a></li>
<li><a href="#haskell">Haskell</a></li>
<li><a href="#haxe">Haxe</a></li>
<li><a href="#java">Java</a></li>
<li><a href="#javascript">JavaScript</a></li>
<li><a href="#julia">Julia</a></li>
<li><a href="#kotlin">Kotlin</a></li>
<li><a href="#lua">Lua</a></li>
<li><a href="#matlab">MATLAB</a></li>
<li><a href="#nim">Nim</a></li>
<li><a href="#ocaml">Ocaml</a></li>
<li><a href="#php">PHP</a></li>
<li><a href="#plsql">PL/SQL</a></li>
<li><a href="#perl">Perl</a></li>
<li><a href="#python">Python</a></li>
<li><a href="#r">R</a></li>
<li><a href="#rego">Rego</a></li>
<li><a href="#ruby">Ruby</a></li>
<li><a href="#rust">Rust</a></li>
<li><a href="#sql">SQL</a></li>
<li><a href="#scala">Scala</a></li>
<li><a href="#shell">Shell</a></li>
<li><a href="#swift">Swift</a></li>
<li><a href="#tcl">Tcl</a></li>
<li><a href="#typescript">TypeScript</a></li>
<li><a href="#verilog">Verilog/SystemVerilog</a></li>
<li><a href="#vim-script">Vim Script</a></li>
</ul>
<h4 tabindex="-1" id="user-content-multiple-languages" dir="auto"><a href="#multiple-languages"></a><a href="#multiple-languages-1">Multiple Languages</a></h4>
<h4 tabindex="-1" id="user-content-other" dir="auto"><a href="#other"></a><a href="#other-1">Other</a></h4>
<details>
 <summary>Show Other</summary>
<ul dir="auto">
<li><a href="#dotenv">.env</a></li>
<li><a href="#ansible">Ansible</a></li>
<li><a href="#archive">Archive</a></li>
<li><a href="#arm">Azure Resource Manager</a></li>
<li><a href="#binary">Binaries</a></li>
<li><a href="#buildtool">Build tools</a></li>
<li><a href="#css">CSS/SASS/SCSS</a></li>
<li><a href="#configfile">Config Files</a></li>
<li><a href="#configmanagement">Configuration Management</a></li>
<li><a href="#container">Containers</a></li>
<li><a href="#ci">Continuous Integration</a></li>
<li><a href="#deno">Deno</a></li>
<li><a href="#embedded">Embedded</a></li>
<li><a href="#erb">Embedded Ruby (a.k.a. ERB, eRuby)</a></li>
<li><a href="#gherkin">Gherkin</a></li>
<li><a href="#html">HTML</a></li>
<li><a href="#json">JSON</a></li>
<li><a href="#kubernetes">Kubernetes</a></li>
<li><a href="#latex">LaTeX</a></li>
<li><a href="#laravel">Laravel</a></li>
<li><a href="#make">Makefiles</a></li>
<li><a href="#markdown">Markdown</a></li>
<li><a href="#meta">Metalinter</a></li>
<li><a href="#mobile">Mobile</a></li>
<li><a href="#nix">Nix</a></li>
<li><a href="#nodejs">Node.js</a></li>
<li><a href="#package">Packages</a></li>
<li><a href="#protobuf">Protocol Buffers</a></li>
<li><a href="#puppet">Puppet</a></li>
<li><a href="#rails">Rails</a></li>
<li><a href="#security">Security/SAST</a></li>
<li><a href="#smart-contracts">Smart Contracts</a></li>
<li><a href="#support">Support</a></li>
<li><a href="#template">Template-Languages</a></li>
<li><a href="#terraform">Terraform</a></li>
<li><a href="#translation">Translation</a></li>
<li><a href="#vue">Vue.js</a></li>
<li><a href="#wasm">Webassembly</a></li>
<li><a href="#writing">Writing</a></li>
<li><a href="#yaml">YAML</a></li>
<li><a href="#git">git</a></li>
</ul>
</details>
<hr>
<h2 tabindex="-1" id="user-content-programming-languages-1" dir="auto"><a href="#programming-languages-1">Programming Languages</a></h2>
<h2 id="user-content-abap" tabindex="-1" dir="auto"><a href="#abap">ABAP</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://abaplint.org/" rel="nofollow">abaplint</a> — Linter for ABAP, written in TypeScript.</p>
</li>
<li>
<p dir="auto"><a href="https://docs.abapopenchecks.org/" rel="nofollow">abapOpenChecks</a> — Enhances the SAP Code Inspector with new and customizable checks.</p>
</li>
</ul>
<h2 id="user-content-ada" tabindex="-1" dir="auto"><a href="#ada">Ada</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.adacore.com/static-analysis/codepeer" rel="nofollow">Codepeer</a> ©️ — Detects run-time and logic errors.</p>
</li>
<li>
<p dir="auto"><a href="https://www.mathworks.com/products/polyspace-ada.html" rel="nofollow">Polyspace for Ada</a> ©️ — Provide code verification that proves the absence of overflow, divide-by-zero, out-of-bounds array access, and certain other run-time errors in source code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.adacore.com/about-spark" rel="nofollow">SPARK</a> ©️ — Static analysis and formal verification toolset for Ada.</p>
</li>
</ul>
<h2 id="user-content-assembly" tabindex="-1" dir="auto"><a href="#assembly">Assembly</a></h2>
<ul dir="auto">
<li><a href="https://github.com/StanfordPL/stoke">STOKE</a> <g-emoji alias="warning">⚠️</g-emoji> — A programming-language agnostic stochastic optimizer for the x86_64 instruction set. It uses random search to explore the extremely high-dimensional space of all possible program transformations.</li>
</ul>
<h2 id="user-content-awk" tabindex="-1" dir="auto"><a href="#awk">Awk</a></h2>
<ul dir="auto">
<li><a href="https://www.gnu.org/software/gawk/manual/html_node/Options.html" rel="nofollow">gawk --lint</a> — Warns about constructs that are dubious or nonportable to other awk implementations.</li>
</ul>
<h2 id="user-content-c" tabindex="-1" dir="auto"><a href="#c">C</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.absint.com/astree/index.htm" rel="nofollow">Astrée</a> ©️ — Astrée automatically proves the absence of runtime errors and invalid con­current behavior in C/C++ applications. It is sound for floating-point computations, very fast, and exceptionally precise. The analyzer also checks for MISRA/CERT/CWE/Adaptive Autosar coding rules and supports qualification for ISO 26262, DO-178C level A, and other safety standards. Jenkins and Eclipse plugins are available.</p>
</li>
<li>
<p dir="auto"><a href="http://www.cprover.org/cbmc" rel="nofollow">CBMC</a> — Bounded model-checker for C programs, user-defined assertions, standard assertions, several coverage metric analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://clang.llvm.org/extra/clang-tidy" rel="nofollow">clang-tidy</a> — Clang-based C++ linter tool with the (limited) ability to fix issues, too.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/KDE/clazy">clazy</a> — Qt-oriented static code analyzer based on the Clang framework. clazy is a compiler plugin which allows clang to understand Qt semantics. You get more than 50 Qt related compiler warnings, ranging from unneeded memory allocations to misusage of API, including fix-its for automatic refactoring.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/MetricsGrimoire/CMetrics">CMetrics</a> — Measures size and complexity for C files.</p>
</li>
<li>
<p dir="auto"><a href="https://cpachecker.sosy-lab.org/" rel="nofollow">CPAchecker</a> — A tool for configurable software verification of C programs.  The name CPAchecker was chosen to reflect that the tool is based on the CPA concepts and is used for checking software programs.</p>
</li>
<li>
<p dir="auto"><a href="https://cppcheck.sourceforge.io/" rel="nofollow">cppcheck</a> — Static analysis of C/C++ code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.cppdepend.com/" rel="nofollow">CppDepend</a> ©️ — Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/styleguide/tree/gh-pages/cpplint">cpplint</a> — Automated C++ checker that follows Google's style guide.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dspinellis/cqmetrics">cqmetrics</a> — Quality metrics for C code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.spinellis.gr/cscout" rel="nofollow">CScout</a> <g-emoji alias="warning">⚠️</g-emoji> — Complexity and quality metrics for C and C preprocessor code.</p>
</li>
<li>
<p dir="auto"><a href="http://esbmc.org/" rel="nofollow">ESBMC</a> — ESBMC is an open source, permissively licensed, context-bounded model checker based on satisfiability modulo theories for the verification of single- and multi-threaded C/C++ programs.</p>
</li>
<li>
<p dir="auto"><a href="http://dwheeler.com/flawfinder/" rel="nofollow">flawfinder</a> — Finds possible security weaknesses.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/JossWhittle/FlintPlusPlus">flint++</a> — Cross-platform, zero-dependency port of flint, a lint program for C++ developed and used at Facebook.</p>
</li>
<li>
<p dir="auto"><a href="https://www.frama-c.com/" rel="nofollow">Frama-C</a> — A sound and extensible static analyzer for C code.</p>
</li>
<li>
<p dir="auto"><a href="https://gcc.gnu.org/onlinedocs/gcc/Static-Analyzer-Options.html" rel="nofollow">GCC</a> — The GCC compiler has static analysis capabilities since version 10. This option is only available if GCC was configured with analyzer support enabled.  It can also output its diagnostics to a JSON file in the SARIF format (from v13).</p>
</li>
<li>
<p dir="auto"><a href="https://goblint.in.tum.de/" rel="nofollow">Goblint</a> — A static analyzer for the analysis of multi-threaded C programs. Its primary focus is the  detection of data races, but it also reports other runtime errors, such as buffer overflows and null-pointer dereferences.</p>
</li>
<li>
<p dir="auto"><a href="https://www.perforce.com/products/helix-qac" rel="nofollow">Helix QAC</a> ©️ — Enterprise-grade static analysis for embedded software. Supports MISRA, CERT, and AUTOSAR coding standards.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nasa-sw-vnv/ikos">IKOS</a> — A sound static analyzer for C/C++ code based on LLVM.</p>
</li>
<li>
<p dir="auto"><a href="https://joern.io/" rel="nofollow">Joern</a> — Open-source code analysis platform for C/C++ based on code property graphs</p>
</li>
<li>
<p dir="auto"><a href="http://klee.github.io/" rel="nofollow">KLEE</a> — A dynamic symbolic execution engine built on top of the LLVM compiler infrastructure.  It can auto-generate test cases for programs such that the test cases exercise as much of the program as possible.</p>
</li>
<li>
<p dir="auto"><a href="https://ldra.com/" rel="nofollow">LDRA</a> ©️ — A tool suite including static analysis (TBVISION) to various standards including MISRA C &amp; C++, JSF++ AV, CWE, CERT C, CERT C++ &amp; Custom Rules.</p>
</li>
<li>
<p dir="auto"><a href="https://galoisinc.github.io/MATE/" rel="nofollow">MATE</a> — A suite of tools for interactive program analysis with a focus on hunting for bugs in C and C++ code. MATE unifies application-specific and low-level vulnerability analysis using code property graphs (CPGs), enabling the discovery of highly application-specific vulnerabilities that depend on both implementation details and the high-level semantics of target C/C++ programs.</p>
</li>
<li>
<p dir="auto"><a href="https://pclintplus.com/" rel="nofollow">PC-lint</a> ©️ — Static analysis for C/C++. Runs natively under Windows/Linux/MacOS. Analyzes code for virtually any platform, supporting C11/C18 and C++17.</p>
</li>
<li>
<p dir="auto"><a href="https://phasar.org/" rel="nofollow">Phasar</a> — A LLVM-based static analysis framework which comes with a taint and type state analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://www.mathworks.com/products/polyspace-bug-finder.html" rel="nofollow">Polyspace Bug Finder</a> ©️ — Identifies run-time errors, concurrency issues, security vulnerabilities, and other defects in C and C++ embedded software.</p>
</li>
<li>
<p dir="auto"><a href="https://www.mathworks.com/products/polyspace-code-prover.html" rel="nofollow">Polyspace Code Prover</a> ©️ — Provide code verification that proves the absence of overflow, divide-by-zero, out-of-bounds array access, and certain other run-time errors in C and C++ source code.</p>
</li>
<li>
<p dir="auto"><a href="https://clang-analyzer.llvm.org/scan-build.html" rel="nofollow">scan-build</a> — Frontend to drive the Clang Static Analyzer built into Clang via a regular build.</p>
</li>
<li>
<p dir="auto"><a href="http://splint.org/" rel="nofollow">splint</a> — Annotation-assisted static program checker.</p>
</li>
<li>
<p dir="auto"><a href="https://svf-tools.github.io/SVF" rel="nofollow">SVF</a> — A static tool that enables scalable and precise interprocedural dependence analysis for C and C++ programs.</p>
</li>
<li>
<p dir="auto"><a href="https://trust-in-soft.com/" rel="nofollow">TrustInSoft Analyzer</a> ©️ — Exhaustive detection of coding errors and their associated security vulnerabilities. This encompasses a sound undefined behavior detection (buffer overflows, out-of-bounds array accesses, null-pointer dereferences, use-after-free, divide-by-zeros, uninitialized memory accesses, signed overflows, invalid pointer arithmetic, etc.), data flow and control flow verification as well as full functional verification of formal specifications. All versions of C up to C18 and C++ up to C++20 are supported. TrustInSoft Analyzer will acquire ISO 26262 qualification in Q2'2023 (TCL3). A MISRA C checker is also bundled.</p>
</li>
<li>
<p dir="auto"><a href="https://bitbucket.org/verateam/vera/wiki/Introduction" rel="nofollow">vera++</a> — Vera++ is a programmable tool for verification, analysis and transformation of C++ source code.</p>
</li>
</ul>
<h2 id="user-content-c-1" tabindex="-1" dir="auto"><a href="#c-1">C#</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/DotNetAnalyzers">.NET Analyzers</a> — An organization for the development of analyzers (diagnostics and code fixes) using the .NET Compiler Platform.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/TNG/ArchUnitNET">ArchUnitNET</a> — A C# architecture test library to specify and assert architecture rules in C# for automated testing.</p>
</li>
<li>
<p dir="auto"><a href="https://code-cracker.github.io/" rel="nofollow">code-cracker</a> — An analyzer library for C# and VB that uses Roslyn to produce refactorings, code analysis, and other niceties.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/DustinCampbell/CSharpEssentials">CSharpEssentials</a> <g-emoji alias="warning">⚠️</g-emoji> — C# Essentials is a collection of Roslyn diagnostic analyzers, code fixes and refactorings that make it easy to work with C# 6 language features.</p>
</li>
<li>
<p dir="auto"><a href="http://www.designite-tools.com/" rel="nofollow">Designite</a> ©️ — Designite supports detection of various architecture, design, and implementation smells, computation of various code quality metrics, and trend analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://www.mono-project.com/docs/tools+libraries/tools/gendarme" rel="nofollow">Gendarme</a> — Gendarme inspects programs and libraries that contain code in ECMA CIL format (Mono and .NET).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/microsoft/infersharp">Infer#</a> — InferSharp (also referred to as Infer#) is an interprocedural and  scalable static code analyzer for C#. Via the capabilities of Facebook's Infer,  this tool detects null pointer dereferences and resource leaks.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/meziantou/Meziantou.Analyzer">Meziantou.Analyzer</a> — A Roslyn analyzer to enforce some good practices in C# in terms of design, usage, security, performance, and style.</p>
</li>
<li>
<p dir="auto"><a href="http://www.ndepend.com/" rel="nofollow">NDepend</a> ©️ — Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://pumasecurity.io/" rel="nofollow">Puma Scan</a> — Puma Scan provides real time secure code analysis for common vulnerabilities (XSS, SQLi, CSRF, LDAPi, crypto, deserialization, etc.) as development teams write code in Visual Studio.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/JosefPihrt/Roslynator">Roslynator</a> — A collection of 190+ analyzers and 190+ refactorings for C#, powered by Roslyn.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/SonarSource/sonar-dotnet">SonarAnalyzer.CSharp</a> — These Roslyn analyzers allow you to produce Clean Code that is safe, reliable, and maintainable by helping you find and correct bugs, vulnerabilities, and code smells in your codebase.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Vannevelj/VSDiagnostics">VSDiagnostics</a> — A collection of static analyzers based on Roslyn that integrates with VS.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Wintellect/Wintellect.Analyzers">Wintellect.Analyzers</a> — .NET Compiler Platform ("Roslyn") diagnostic analyzers and code fixes.</p>
</li>
</ul>
<h2 id="user-content-c-2" tabindex="-1" dir="auto"><a href="#c-2">C++</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.absint.com/astree/index.htm" rel="nofollow">Astrée</a> ©️ — Astrée automatically proves the absence of runtime errors and invalid con­current behavior in C/C++ applications. It is sound for floating-point computations, very fast, and exceptionally precise. The analyzer also checks for MISRA/CERT/CWE/Adaptive Autosar coding rules and supports qualification for ISO 26262, DO-178C level A, and other safety standards. Jenkins and Eclipse plugins are available.</p>
</li>
<li>
<p dir="auto"><a href="http://www.cprover.org/cbmc" rel="nofollow">CBMC</a> — Bounded model-checker for C programs, user-defined assertions, standard assertions, several coverage metric analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://clang.llvm.org/extra/clang-tidy" rel="nofollow">clang-tidy</a> — Clang-based C++ linter tool with the (limited) ability to fix issues, too.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/KDE/clazy">clazy</a> — Qt-oriented static code analyzer based on the Clang framework. clazy is a compiler plugin which allows clang to understand Qt semantics. You get more than 50 Qt related compiler warnings, ranging from unneeded memory allocations to misusage of API, including fix-its for automatic refactoring.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/MetricsGrimoire/CMetrics">CMetrics</a> — Measures size and complexity for C files.</p>
</li>
<li>
<p dir="auto"><a href="https://cppcheck.sourceforge.io/" rel="nofollow">cppcheck</a> — Static analysis of C/C++ code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.cppdepend.com/" rel="nofollow">CppDepend</a> ©️ — Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/styleguide/tree/gh-pages/cpplint">cpplint</a> — Automated C++ checker that follows Google's style guide.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dspinellis/cqmetrics">cqmetrics</a> — Quality metrics for C code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.spinellis.gr/cscout" rel="nofollow">CScout</a> <g-emoji alias="warning">⚠️</g-emoji> — Complexity and quality metrics for C and C preprocessor code.</p>
</li>
<li>
<p dir="auto"><a href="http://esbmc.org/" rel="nofollow">ESBMC</a> — ESBMC is an open source, permissively licensed, context-bounded model checker based on satisfiability modulo theories for the verification of single- and multi-threaded C/C++ programs.</p>
</li>
<li>
<p dir="auto"><a href="http://dwheeler.com/flawfinder/" rel="nofollow">flawfinder</a> — Finds possible security weaknesses.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/JossWhittle/FlintPlusPlus">flint++</a> — Cross-platform, zero-dependency port of flint, a lint program for C++ developed and used at Facebook.</p>
</li>
<li>
<p dir="auto"><a href="https://www.frama-c.com/" rel="nofollow">Frama-C</a> — A sound and extensible static analyzer for C code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.perforce.com/products/helix-qac" rel="nofollow">Helix QAC</a> ©️ — Enterprise-grade static analysis for embedded software. Supports MISRA, CERT, and AUTOSAR coding standards.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nasa-sw-vnv/ikos">IKOS</a> — A sound static analyzer for C/C++ code based on LLVM.</p>
</li>
<li>
<p dir="auto"><a href="https://joern.io/" rel="nofollow">Joern</a> — Open-source code analysis platform for C/C++ based on code property graphs</p>
</li>
<li>
<p dir="auto"><a href="http://klee.github.io/" rel="nofollow">KLEE</a> — A dynamic symbolic execution engine built on top of the LLVM compiler infrastructure.  It can auto-generate test cases for programs such that the test cases exercise as much of the program as possible.</p>
</li>
<li>
<p dir="auto"><a href="https://ldra.com/" rel="nofollow">LDRA</a> ©️ — A tool suite including static analysis (TBVISION) to various standards including MISRA C &amp; C++, JSF++ AV, CWE, CERT C, CERT C++ &amp; Custom Rules.</p>
</li>
<li>
<p dir="auto"><a href="https://galoisinc.github.io/MATE/" rel="nofollow">MATE</a> — A suite of tools for interactive program analysis with a focus on hunting for bugs in C and C++ code. MATE unifies application-specific and low-level vulnerability analysis using code property graphs (CPGs), enabling the discovery of highly application-specific vulnerabilities that depend on both implementation details and the high-level semantics of target C/C++ programs.</p>
</li>
<li>
<p dir="auto"><a href="https://pclintplus.com/" rel="nofollow">PC-lint</a> ©️ — Static analysis for C/C++. Runs natively under Windows/Linux/MacOS. Analyzes code for virtually any platform, supporting C11/C18 and C++17.</p>
</li>
<li>
<p dir="auto"><a href="https://phasar.org/" rel="nofollow">Phasar</a> — A LLVM-based static analysis framework which comes with a taint and type state analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://www.mathworks.com/products/polyspace-bug-finder.html" rel="nofollow">Polyspace Bug Finder</a> ©️ — Identifies run-time errors, concurrency issues, security vulnerabilities, and other defects in C and C++ embedded software.</p>
</li>
<li>
<p dir="auto"><a href="https://www.mathworks.com/products/polyspace-code-prover.html" rel="nofollow">Polyspace Code Prover</a> ©️ — Provide code verification that proves the absence of overflow, divide-by-zero, out-of-bounds array access, and certain other run-time errors in C and C++ source code.</p>
</li>
<li>
<p dir="auto"><a href="https://clang-analyzer.llvm.org/scan-build.html" rel="nofollow">scan-build</a> — Frontend to drive the Clang Static Analyzer built into Clang via a regular build.</p>
</li>
<li>
<p dir="auto"><a href="http://splint.org/" rel="nofollow">splint</a> — Annotation-assisted static program checker.</p>
</li>
<li>
<p dir="auto"><a href="https://svf-tools.github.io/SVF" rel="nofollow">SVF</a> — A static tool that enables scalable and precise interprocedural dependence analysis for C and C++ programs.</p>
</li>
<li>
<p dir="auto"><a href="https://trust-in-soft.com/" rel="nofollow">TrustInSoft Analyzer</a> ©️ — Exhaustive detection of coding errors and their associated security vulnerabilities. This encompasses a sound undefined behavior detection (buffer overflows, out-of-bounds array accesses, null-pointer dereferences, use-after-free, divide-by-zeros, uninitialized memory accesses, signed overflows, invalid pointer arithmetic, etc.), data flow and control flow verification as well as full functional verification of formal specifications. All versions of C up to C18 and C++ up to C++20 are supported. TrustInSoft Analyzer will acquire ISO 26262 qualification in Q2'2023 (TCL3). A MISRA C checker is also bundled.</p>
</li>
<li>
<p dir="auto"><a href="https://bitbucket.org/verateam/vera/wiki/Introduction" rel="nofollow">vera++</a> — Vera++ is a programmable tool for verification, analysis and transformation of C++ source code.</p>
</li>
</ul>
<h2 id="user-content-clojure" tabindex="-1" dir="auto"><a href="#clojure">Clojure</a></h2>
<ul dir="auto">
<li><a href="https://github.com/borkdude/clj-kondo">clj-kondo</a> — A linter for Clojure code that sparks joy. It informs you about potential errors while you are typing.</li>
</ul>
<h2 id="user-content-coffeescript" tabindex="-1" dir="auto"><a href="#coffeescript">CoffeeScript</a></h2>
<ul dir="auto">
<li><a href="https://coffeelint.github.io/" rel="nofollow">coffeelint</a> <g-emoji alias="warning">⚠️</g-emoji> — A style checker that helps keep CoffeeScript code clean and consistent.</li>
</ul>
<h2 id="user-content-coldfusion" tabindex="-1" dir="auto"><a href="#coldfusion">ColdFusion</a></h2>
<ul dir="auto">
<li><a href="https://fixinator.app/" rel="nofollow">Fixinator</a> ©️ — Static security code analysis for ColdFusion or CFML code. Designed to work within a CI pipeline or from the developers terminal.</li>
</ul>
<h2 id="user-content-crystal" tabindex="-1" dir="auto"><a href="#crystal">Crystal</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://crystal-ameba.github.io/" rel="nofollow">ameba</a> — A static code analysis tool for Crystal.</p>
</li>
<li>
<p dir="auto"><a href="https://crystal-lang.org/" rel="nofollow">crystal</a> — The Crystal compiler has built-in linting functionality.</p>
</li>
</ul>
<h2 id="user-content-dart" tabindex="-1" dir="auto"><a href="#dart">Dart</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://pub.dev/packages/dart_code_metrics" rel="nofollow">Dart Code Metrics</a> — Additional linter for Dart. Reports code metrics, checks for anti-patterns and provides additional rules for Dart analyzer.</p>
</li>
<li>
<p dir="auto"><a href="https://pub.dev/packages/effective_dart" rel="nofollow">effective_dart</a> — Linter rules corresponding to the guidelines in Effective Dart</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/passsy/dart-lint">lint</a> — An opinionated, community-driven set of lint rules for Dart and Flutter projects. Like pedantic but stricter</p>
</li>
<li>
<p dir="auto"><a href="https://dart-lang.github.io/linter" rel="nofollow">Linter for dart</a> — Style linter for Dart.</p>
</li>
</ul>
<h2 id="user-content-delphi" tabindex="-1" dir="auto"><a href="#delphi">Delphi</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.tmssoftware.com/site/fixinsight.asp" rel="nofollow">Fix Insight</a> ©️ — A free IDE Plugin for static code analysis. A <em>Pro</em> edition includes a command line tool for automation purposes.</p>
</li>
<li>
<p dir="auto"><a href="https://peganza.com/products_pal.html" rel="nofollow">Pascal Analyzer</a> ©️ — A static code analysis tool with numerous reports. A free <em>Lite</em> version is available with limited reporting.</p>
</li>
<li>
<p dir="auto"><a href="https://peganza.com/products_pex.html" rel="nofollow">Pascal Expert</a> ©️ — IDE plugin for code analysis. Includes a subset of Pascal Analyzer reporting capabilities and is available for Delphi versions 2007 and later.</p>
</li>
</ul>
<h2 id="user-content-dlang" tabindex="-1" dir="auto"><a href="#dlang">Dlang</a></h2>
<ul dir="auto">
<li><a href="https://github.com/dlang-community/D-Scanner">D-scanner</a> — D-Scanner is a tool for analyzing D source code.</li>
</ul>
<h2 id="user-content-elixir" tabindex="-1" dir="auto"><a href="#elixir">Elixir</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/rrrene/credo">credo</a> — A static code analysis tool with a focus on code consistency and teaching.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jeremyjh/dialyxir">dialyxir</a> — Mix tasks to simplify use of Dialyzer in Elixir projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nccgroup/sobelow">sobelow</a> — Security-focused static analysis for the Phoenix Framework.</p>
</li>
</ul>
<h2 id="user-content-elm" tabindex="-1" dir="auto"><a href="#elm">Elm</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://stil4m.github.io/elm-analyse" rel="nofollow">elm-analyse</a> <g-emoji alias="warning">⚠️</g-emoji> — A tool that allows you to analyse your Elm code, identify deficiencies and apply best practices.</p>
</li>
<li>
<p dir="auto"><a href="https://package.elm-lang.org/packages/jfmengels/elm-review/latest" rel="nofollow">elm-review</a> — Analyzes whole Elm projects, with a focus on shareable and custom rules written in Elm that add guarantees the Elm compiler doesn't give you.</p>
</li>
</ul>
<h2 id="user-content-erlang" tabindex="-1" dir="auto"><a href="#erlang">Erlang</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.erlang.org/doc/man/dialyzer.html" rel="nofollow">dialyzer</a> — The DIALYZER, a DIscrepancy AnaLYZer for ERlang programs. Dialyzer is a static analysis tool that identifies software discrepancies,  such as definite type errors, code that has become dead or unreachable  because of programming error, and unnecessary tests,  in single Erlang modules or entire (sets of) applications.
Dialyzer starts its analysis from either debug-compiled BEAM bytecode  or from Erlang source code. The file and line number of a discrepancy  is reported along with an indication of what the discrepancy is about.  Dialyzer bases its analysis on the concept of success typings,  which allows for sound warnings (no false positives).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/inaka/elvis">elvis</a> — Erlang Style Reviewer.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/okeuday/pest">Primitive Erlang Security Tool (PEST)</a> <g-emoji alias="warning">⚠️</g-emoji> — A tool to do a basic scan of Erlang source code and report any function calls that may cause Erlang source code to be insecure.</p>
</li>
</ul>
<h2 id="user-content-f" tabindex="-1" dir="auto"><a href="#f">F#</a></h2>
<ul dir="auto">
<li><a href="https://fsprojects.github.io/FSharpLint" rel="nofollow">FSharpLint</a> — Lint tool for F#.</li>
</ul>
<h2 id="user-content-fortran" tabindex="-1" dir="auto"><a href="#fortran">Fortran</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://pypi.python.org/pypi/fprettify" rel="nofollow">fprettify</a> — Auto-formatter for modern fortran source code, written in Python.
Fprettify is a tool that provides consistent whitespace, indentation, and delimiter alignment in code, including the ability to change letter case and handle preprocessor directives, all while preserving revision history and tested for editor integration.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lequal/i-CodeCNES">i-Code CNES for Fortran</a> — An open source static code analysis tool for Fortran 77, Fortran 90 and Shell.</p>
</li>
</ul>
<h2 id="user-content-go" tabindex="-1" dir="auto"><a href="#go">Go</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://gitlab.com/opennota/check" rel="nofollow">aligncheck</a> — Find inefficiently packed structs.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/timakin/bodyclose">bodyclose</a> — Checks whether HTTP response body is closed.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tsenart/deadcode">deadcode</a> — Finds unused code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nickng/dingo-hunter">dingo-hunter</a> — Static analyser for finding deadlocks in Go.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/alexkohler/dogsled">dogsled</a> — Finds assignments/declarations with too many blank identifiers.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mibk/dupl">dupl</a> <g-emoji alias="warning">⚠️</g-emoji> — Reports potentially duplicated code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/kisielk/errcheck">errcheck</a> — Check that error return values are used.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/fatih/errwrap">errwrap</a> — Wrap and fix Go errors with the new %w verb directive.  This tool analyzes fmt.Errorf() calls and reports calls that contain a verb directive that  is different than the new %w verb directive introduced in Go v1.13.  It's also capable of rewriting calls to use the new %w wrap verb directive.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lafolle/flen">flen</a> — Get info on length of functions in a Go package.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/alecthomas/gometalinter">Go Meta Linter</a> <g-emoji alias="warning">⚠️</g-emoji> — Concurrently run Go lint tools and normalise their output. Use <code>golangci-lint</code> for new projects.</p>
</li>
<li>
<p dir="auto"><a href="https://golang.org/cmd/vet#hdr-Shadowed_variables" rel="nofollow">go tool vet --shadow</a> — Reports variables that may have been unintentionally shadowed.</p>
</li>
<li>
<p dir="auto"><a href="https://golang.org/cmd/vet" rel="nofollow">go vet</a> — Examines Go source code and reports suspicious.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Quasilyte/go-consistent">go-consistent</a> — Analyzer that helps you to make your Go programs more consistent.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/go-critic/go-critic">go-critic</a> — Go source code linter that maintains checks which are currently not implemented in other linters.</p>
</li>
<li>
<p dir="auto"><a href="https://golang.org/pkg/go/ast" rel="nofollow">go/ast</a> — Package ast declares the types used to represent syntax trees for Go packages.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/m-mizutani/goast">goast</a> — Go AST (Abstract Syntax Tree) based static analysis tool with Rego.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/leighmcculloch/gochecknoglobals">gochecknoglobals</a> — Checks that no globals are present.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jgautheron/goconst">goconst</a> — Finds repeated strings that could be replaced by a constant.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/fzipp/gocyclo">gocyclo</a> — Calculate cyclomatic complexities of functions in Go source code.</p>
</li>
<li>
<p dir="auto"><a href="https://golang.org/cmd/gofmt" rel="nofollow">gofmt -s</a> — Checks if the code is properly formatted and could not be further simplified.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mvdan/gofumpt">gofumpt</a> — Enforce a stricter format than <code>gofmt</code>, while being backwards-compatible.  That is, <code>gofumpt</code> is happy with a subset of the formats that <code>gofmt</code> is happy with.
The tool is a fork of <code>gofmt</code> as of Go 1.19, and requires Go 1.18 or later.  It can be used as a drop-in replacement to format your Go code, and running gofmt  after gofumpt should produce no changes.
<code>gofumpt</code> will never add rules which disagree with <code>gofmt</code> formatting. So we extend <code>gofmt</code> rather than compete with it.</p>
</li>
<li>
<p dir="auto"><a href="https://pkg.go.dev/golang.org/x/tools/cmd/goimports" rel="nofollow">goimports</a> — Checks missing or unreferenced package imports.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/praetorian-inc/gokart">gokart</a> — Golang security analysis with a focus on minimizing false positives. It is capable of tracing the source of variables and function arguments  to determine whether input sources are safe.</p>
</li>
<li>
<p dir="auto"><a href="https://golangci-lint.run/" rel="nofollow">GolangCI-Lint</a> — Alternative to <code>Go Meta Linter</code>: GolangCI-Lint is a linters aggregator.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/golang/lint">golint</a> — Prints out coding style mistakes in Go source code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/360EntSecGroup-Skylar/goreporter">goreporter</a> — Concurrently runs many linters and normalises their output to a report.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/linuxerwang/goroutine-inspect">goroutine-inspect</a> — An interactive tool to analyze Golang goroutine dump.</p>
</li>
<li>
<p dir="auto"><a href="https://securego.io/" rel="nofollow">gosec (gas)</a> — Inspects source code for security problems by scanning the Go AST.</p>
</li>
<li>
<p dir="auto"><a href="https://pkg.go.dev/golang.org/x/tools/cmd/gotype" rel="nofollow">gotype</a> — Syntactic and semantic analysis similar to the Go compiler.</p>
</li>
<li>
<p dir="auto"><a href="https://go.dev/blog/vuln" rel="nofollow">govulncheck</a> — Govulncheck reports known vulnerabilities that affect Go code.  It uses static analysis of source code or a binary's symbol table to narrow down reports to only those that could affect the application.
By default, govulncheck makes requests to the Go vulnerability database at <a href="https://vuln.go.dev/" rel="nofollow">https://vuln.go.dev</a>. Requests to the vulnerability database contain only module paths, not code or other properties of your program.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/gordonklaus/ineffassign">ineffassign</a> — Detect ineffectual assignments in Go code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mvdan/interfacer">interfacer</a> <g-emoji alias="warning">⚠️</g-emoji> — Suggest narrower interfaces that can be used.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/walle/lll">lll</a> <g-emoji alias="warning">⚠️</g-emoji> — Report long lines.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mdempsky/maligned">maligned</a> <g-emoji alias="warning">⚠️</g-emoji> — Detect structs that would take less memory if their fields were sorted.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/client9/misspell">misspell</a> — Finds commonly misspelled English words.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/alexkohler/nakedret">nakedret</a> — Finds naked returns.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/alexkohler/nargs">nargs</a> — Finds unused arguments in function declarations.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/alexkohler/prealloc">prealloc</a> — Finds slice declarations that could potentially be preallocated.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/haya14busa/reviewdog">Reviewdog</a> — A tool for posting review comments from any linter in any code hosting service.</p>
</li>
<li>
<p dir="auto"><a href="https://revive.run/" rel="nofollow">revive</a> — Fast, configurable, extensible, flexible, and beautiful linter for Go. Drop-in replacement of golint.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/stripe/safesql">safesql</a> <g-emoji alias="warning">⚠️</g-emoji> — Static analysis tool for Golang that protects against SQL injections.</p>
</li>
<li>
<p dir="auto"><a href="https://docs.shisho.dev/" rel="nofollow">shisho</a> — A lightweight static code analyzer designed for developers and security teams. It allows you to analyze and transform source code with an intuitive DSL similar to sed, but for code.</p>
</li>
<li>
<p dir="auto"><a href="https://staticcheck.io/" rel="nofollow">staticcheck</a> — Go static analysis that specialises in finding bugs, simplifying code and improving performance.</p>
</li>
<li>
<p dir="auto"><a href="https://gitlab.com/opennota/check" rel="nofollow">structcheck</a> — Find unused struct fields.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/orijtech/structslop">structslop</a> — Static analyzer for Go that recommends struct field rearrangements to provide for maximum space/allocation efficiency</p>
</li>
<li>
<p dir="auto"><a href="https://pkg.go.dev/testing" rel="nofollow">test</a> — Show location of test failures from the stdlib testing module.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mdempsky/unconvert">unconvert</a> — Detect redundant type conversions.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mvdan/unparam">unparam</a> — Find unused function parameters.</p>
</li>
<li>
<p dir="auto"><a href="https://gitlab.com/opennota/check" rel="nofollow">varcheck</a> — Find unused global variables and constants.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/bombsimon/wsl">wsl</a> — Enforces empty lines at the right places.</p>
</li>
</ul>
<h2 id="user-content-groovy" tabindex="-1" dir="auto"><a href="#groovy">Groovy</a></h2>
<ul dir="auto">
<li><a href="https://codenarc.github.io/CodeNarc" rel="nofollow">CodeNarc</a> — A static analysis tool for Groovy source code, enabling monitoring and enforcement of many coding standards and best practices.</li>
</ul>
<h2 id="user-content-haskell" tabindex="-1" dir="auto"><a href="#haskell">Haskell</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/lspitzner/brittany">brittany</a> — Haskell source code formatter</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ndmitchell/hlint">HLint</a> — HLint is a tool for suggesting possible improvements to Haskell code.</p>
</li>
<li>
<p dir="auto"><a href="https://ucsd-progsys.github.io/liquidhaskell-blog/" rel="nofollow">Liquid Haskell</a> — Liquid Haskell is a refinement type checker for Haskell programs.</p>
</li>
<li>
<p dir="auto"><a href="https://kowainik.github.io/projects/stan" rel="nofollow">Stan</a> — Stan is a command-line tool for analysing Haskell projects and outputting discovered vulnerabilities in a helpful way with possible solutions for detected problems.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ocharles/weeder">Weeder</a> — A tool for detecting dead exports or package imports in Haskell code.</p>
</li>
</ul>
<h2 id="user-content-haxe" tabindex="-1" dir="auto"><a href="#haxe">Haxe</a></h2>
<ul dir="auto">
<li><a href="https://haxecheckstyle.github.io/docs/haxe-checkstyle/home.html" rel="nofollow">Haxe Checkstyle</a> — A static analysis tool to help developers write Haxe code that adheres to a coding standard.</li>
</ul>
<h2 id="user-content-java" tabindex="-1" dir="auto"><a href="#java">Java</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://checkerframework.org/" rel="nofollow">Checker Framework</a> — Pluggable type-checking for Java.</p>
</li>
<li>
<p dir="auto"><a href="https://checkstyle.org/" rel="nofollow">checkstyle</a> — Checking Java source code for adherence to a Code Standard or set of validation rules (best practices).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mauricioaniche/ck">ck</a> — Calculates Chidamber and Kemerer object-oriented metrics by processing the source Java files.</p>
</li>
<li>
<p dir="auto"><a href="http://www.spinellis.gr/sw/ckjm" rel="nofollow">ckjm</a> — Calculates Chidamber and Kemerer object-oriented metrics by processing the bytecode of compiled Java files.</p>
</li>
<li>
<p dir="auto"><a href="https://www.eclipse.org/cognicrypt" rel="nofollow">CogniCrypt</a> — Checks Java source and byte code for incorrect uses of cryptographic APIs.</p>
</li>
<li>
<p dir="auto"><a href="http://www.designite-tools.com/designitejava" rel="nofollow">DesigniteJava</a> ©️ — DesigniteJava supports detection of various architecture, design, and implementation smells along with computation of various code quality metrics.</p>
</li>
<li>
<p dir="auto"><a href="https://www.diffblue.com/" rel="nofollow">Diffblue</a> ©️ — Diffblue is a software company that provides AI-powered code analysis and testing solutions for software development teams.
Its technology helps developers automate testing, find bugs, and reduce manual labor in their software development processes. The company's main product, Diffblue Cover, uses AI to generate and run unit tests for Java code, helping to catch errors and improve code quality.</p>
</li>
<li>
<p dir="auto"><a href="https://bitbucket.org/yanniss/doop" rel="nofollow">Doop</a> — Doop is a declarative framework for static analysis of Java/Android programs, centered on pointer analysis algorithms. Doop provides a large variety of analyses and also the surrounding scaffolding to run an analysis end-to-end (fact generation, processing, statistics, etc.).</p>
</li>
<li>
<p dir="auto"><a href="https://errorprone.info/" rel="nofollow">Error-prone</a> — Catch common Java mistakes as compile-time errors.</p>
</li>
<li>
<p dir="auto"><a href="http://fb-contrib.sourceforge.net/" rel="nofollow">fb-contrib</a> — A plugin for FindBugs with additional bug detectors.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/policeman-tools/forbidden-apis">forbidden-apis</a> — Detects and forbids invocations of specific method/class/field (like reading from a text stream without a charset). Maven/Gradle/Ant compatible.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/google-java-format">google-java-format</a> — Reformats Java source code to comply with Google Java Style</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/amaembo/huntbugs">HuntBugs</a> <g-emoji alias="warning">⚠️</g-emoji> — Bytecode static analyzer tool based on Procyon Compiler Tools aimed to supersede FindBugs.</p>
</li>
<li>
<p dir="auto"><a href="https://www.jetbrains.com/idea" rel="nofollow">IntelliJ IDEA</a> ©️ — Comes bundled with a lot of inspections for Java and Kotlin and includes tools for refactoring, formatting and more.</p>
</li>
<li>
<p dir="auto"><a href="https://www.jarchitect.com/" rel="nofollow">JArchitect</a> ©️ — Measure, query and visualize your code and avoid unexpected issues, technical debt and complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://www.cprover.org/jbmc" rel="nofollow">JBMC</a> — Bounded model-checker for Java (bytecode), verifies user-defined assertions, standard assertions, several coverage metric analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://mariana-tren.ch/" rel="nofollow">Mariana Trench</a> — Our security focused static analysis tool for Android and Java applications. Mariana Trench analyzes Dalvik bytecode and is built to run fast on large codebases (10s of millions of lines of code). It can find vulnerabilities as code changes, before it ever lands in your repository.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/uber/NullAway">NullAway</a> — Type-based null-pointer checker with low build-time overhead; an <a href="http://errorprone.info/" rel="nofollow">Error Prone</a> plugin.</p>
</li>
<li>
<p dir="auto"><a href="https://owasp.org/www-project-dependency-check" rel="nofollow">OWASP Dependency Check</a> — Checks dependencies for known, publicly disclosed, vulnerabilities.</p>
</li>
<li>
<p dir="auto"><a href="https://www.qulice.com/" rel="nofollow">qulice</a> — Combines a few (pre-configured) static analysis tools (checkstyle, PMD, Findbugs, ...).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jimbethancourt/RefactorFirst">RefactorFirst</a> — Identifies and prioritizes God Classes and Highly Coupled classes in Java codebases you should refactor first.</p>
</li>
<li>
<p dir="auto"><a href="https://soot-oss.github.io/soot" rel="nofollow">Soot</a> — A framework for analyzing and transforming Java and Android applications.</p>
</li>
<li>
<p dir="auto"><a href="https://spoon.gforge.inria.fr/" rel="nofollow">Spoon</a> — Spoon is a metaprogramming library to analyze and transform Java source code (incl Java 9, 10, 11, 12, 13, 14). It parses source files to build a well-designed AST with powerful analysis and transformation API. Can be integrated in Maven and Gradle.</p>
</li>
<li>
<p dir="auto"><a href="https://spotbugs.github.io/" rel="nofollow">SpotBugs</a> — SpotBugs is FindBugs' successor. A tool for static analysis to look for bugs in Java code.</p>
</li>
<li>
<p dir="auto"><a href="https://eclipse.github.io/steady/" rel="nofollow">steady</a> — Analyses your Java applications for open-source dependencies with known vulnerabilities, using both static analysis and testing to determine code context and usage for greater accuracy.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tomasbjerre/violations-lib">Violations Lib</a> — Java library for parsing report files from static code analysis. Used by a bunch of Jenkins, Maven and Gradle plugins.</p>
</li>
</ul>
<h2 id="user-content-javascript" tabindex="-1" dir="auto"><a href="#javascript">JavaScript</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="http://aetherjs.com/" rel="nofollow">aether</a> <g-emoji alias="warning">⚠️</g-emoji> — Lint, analyze, normalize, transform, sandbox, run, step through, and visualize user JavaScript, in node or the browser.</p>
</li>
<li>
<p dir="auto"><a href="https://developers.google.com/closure/compiler" rel="nofollow">Closure Compiler</a> — A compiler tool to increase efficiency, reduce size, and provide code warnings in JavaScript files.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/closure-linter">ClosureLinter</a> <g-emoji alias="warning">⚠️</g-emoji> — Ensures that all of your project's JavaScript code follows the guidelines in the Google JavaScript Style Guide. It can also automatically fix many common errors.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/escomplex/complexity-report">complexity-report</a> <g-emoji alias="warning">⚠️</g-emoji> — Software complexity analysis for JavaScript projects.</p>
</li>
<li>
<p dir="auto"><a href="https://deepscan.io/" rel="nofollow">DeepScan</a> ©️ — An analyzer for JavaScript which targets runtime errors and quality issues rather than coding conventions.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/the-simian/es6-plato">es6-plato</a> <g-emoji alias="warning">⚠️</g-emoji> — Visualize JavaScript (ES6) source complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jared-stilwell/escomplex">escomplex</a> <g-emoji alias="warning">⚠️</g-emoji> — Software complexity analysis of JavaScript-family abstract syntax trees.</p>
</li>
<li>
<p dir="auto"><a href="https://esprima.org/" rel="nofollow">Esprima</a> <g-emoji alias="warning">⚠️</g-emoji> — ECMAScript parsing infrastructure for multipurpose analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://flow.org/" rel="nofollow">flow</a> — A static type checker for JavaScript.</p>
</li>
<li>
<p dir="auto"><a href="https://hegel.js.org/" rel="nofollow">hegel</a> — A static type checker for JavaScript with a bias on type inference and strong type systems.</p>
</li>
<li>
<p dir="auto"><a href="https://jshint.com/about" rel="nofollow">jshint</a> <a href="https://github.com/analysis-tools-dev/static-analysis/issues/223" data-hovercard-type="issue" data-hovercard-url="/analysis-tools-dev/static-analysis/issues/223/hovercard">ℹ️</a> — Detect errors and potential problems in JavaScript code and enforce your team's coding conventions.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/douglascrockford/JSLint">JSLint</a> <a href="https://github.com/analysis-tools-dev/static-analysis/issues/223" data-hovercard-type="issue" data-hovercard-url="/analysis-tools-dev/static-analysis/issues/223/hovercard">ℹ️</a> — The JavaScript Code Quality Tool.</p>
</li>
<li>
<p dir="auto"><a href="https://dpnishant.github.io/jsprime" rel="nofollow">JSPrime</a> <g-emoji alias="warning">⚠️</g-emoji> — Static security analysis tool.</p>
</li>
<li>
<p dir="auto"><a href="https://opensecurity.in/" rel="nofollow">NodeJSScan</a> — A static security code scanner for Node.js applications powered by libsast and semgrep that builds on the njsscan cli tool. It features a UI with various dashboards about an application's security status.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/es-analysis/plato">plato</a> <g-emoji alias="warning">⚠️</g-emoji> — Visualize JavaScript source complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Polymer/tools/tree/master/packages/analyzer">Polymer-analyzer</a> — A static analysis framework for Web Components.</p>
</li>
<li>
<p dir="auto"><a href="https://www.reshiftsecurity.com/" rel="nofollow">Reshift</a> ©️ — A source code analysis tool for detecting and managing JavaScript security vulnerabilities.</p>
</li>
<li>
<p dir="auto"><a href="https://retirejs.github.io/retire.js" rel="nofollow">retire.js</a> — Scanner detecting the use of JavaScript libraries with known vulnerabilities.</p>
</li>
<li>
<p dir="auto"><a href="http://rslint.org/" rel="nofollow">RSLint</a> <g-emoji alias="warning">⚠️</g-emoji> — A (WIP) JavaScript linter written in Rust designed to be as fast as possible, customizable, and easy to use.</p>
</li>
<li>
<p dir="auto"><a href="http://standardjs.com/" rel="nofollow">standard</a> — An npm module that checks for Javascript Styleguide issues.</p>
</li>
<li>
<p dir="auto"><a href="https://ternjs.net/" rel="nofollow">tern</a> — A JavaScript code analyzer for deep, cross-editor language support.</p>
</li>
<li>
<p dir="auto"><a href="https://typl.dev/" rel="nofollow">TypL</a> <g-emoji alias="warning">⚠️</g-emoji> — With TypL, you just write completely standard JS, and the tool figures out your types via powerful inferencing.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/xojs/xo">xo</a> — Opinionated but configurable ESLint wrapper with lots of goodies included. Enforces strict and readable code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/calmh/yardstick">yardstick</a> <g-emoji alias="warning">⚠️</g-emoji> — Javascript code metrics.</p>
</li>
</ul>
<h2 id="user-content-julia" tabindex="-1" dir="auto"><a href="#julia">Julia</a></h2>
<ul dir="auto">
<li><a href="https://github.com/julia-vscode/StaticLint.jl">StaticLint</a> — Static Code Analysis for Julia</li>
</ul>
<h2 id="user-content-kotlin" tabindex="-1" dir="auto"><a href="#kotlin">Kotlin</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://detekt.github.io/detekt" rel="nofollow">detekt</a> — Static code analysis for Kotlin code.</p>
</li>
<li>
<p dir="auto"><a href="https://diktat.saveourtool.com/" rel="nofollow">diktat</a> — Strict coding standard for Kotlin and a linter that detects and auto-fixes code smells.</p>
</li>
<li>
<p dir="auto"><a href="https://facebook.github.io/ktfmt/" rel="nofollow">ktfmt</a> — A program that reformats Kotlin source code to comply with the common community standard for Kotlin code conventions.
A ktfmt IntelliJ plugin is available from the plugin repository. To install it, go to your IDE's settings and select the Plugins category. Click the Marketplace tab, search for the ktfmt plugin, and click the Install button.</p>
</li>
<li>
<p dir="auto"><a href="https://ktlint.github.io/" rel="nofollow">ktlint</a> — An anti-bikeshedding Kotlin linter with built-in formatter.</p>
</li>
</ul>
<h2 id="user-content-lua" tabindex="-1" dir="auto"><a href="#lua">Lua</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/mpeterv/luacheck">luacheck</a> <g-emoji alias="warning">⚠️</g-emoji> — A tool for linting and static analysis of Lua code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/philips/lualint">lualint</a> — lualint performs luac-based static analysis of global variable usage in Lua source code.</p>
</li>
<li>
<p dir="auto"><a href="https://plugins.jetbrains.com/plugin/14698-luanalysis" rel="nofollow">Luanalysis</a> — An IDE for statically typed Lua development.</p>
</li>
</ul>
<h2 id="user-content-matlab" tabindex="-1" dir="auto"><a href="#matlab">MATLAB</a></h2>
<ul dir="auto">
<li><a href="https://mathworks.com/help/matlab/ref/mlint.html" rel="nofollow">mlint</a> ©️ — Check MATLAB code files for possible problems.</li>
</ul>
<h2 id="user-content-nim" tabindex="-1" dir="auto"><a href="#nim">Nim</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://nim-lang.org/docs/drnim.html" rel="nofollow">DrNim</a> — DrNim combines the Nim frontend with the Z3 proof engine in order to allow verify / validate software written in Nim.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/FedericoCeratto/nimfmt">nimfmt</a> <g-emoji alias="warning">⚠️</g-emoji> — Nim code formatter / linter / style checker</p>
</li>
</ul>
<h2 id="user-content-ocaml" tabindex="-1" dir="auto"><a href="#ocaml">Ocaml</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/PLSysSec/sys">Sys</a> — A static/symbolic Tool for finding bugs in (browser) code. It uses the LLVM AST to find bugs like uninitialized memory access.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/verifast/verifast">VeriFast</a> — A tool for modular formal verification of correctness properties of single-threaded and multithreaded  C and Java programs annotated with preconditions and postconditions written in separation logic.  To express rich specifications, the programmer can define inductive datatypes,  primitive recursive pure functions over these datatypes, and abstract separation logic predicates.</p>
</li>
</ul>
<h2 id="user-content-php" tabindex="-1" dir="auto"><a href="#php">PHP</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://zigrin.com/tools/cake-fuzzer/" rel="nofollow">CakeFuzzer</a> — Web application security testing tool for CakePHP-based web applications. CakeFuzzer employs a predefined set of attacks that are randomly modified before execution. Leveraging its deep understanding of the Cake PHP framework, Cake Fuzzer launches attacks on all potential application entry points.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/bmitch/churn-php">churn-php</a> — Helps discover good candidates for refactoring.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mihaeu/dephpend">dephpend</a> — Dependency analysis tool.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sensiolabs-de/deprecation-detector">deprecation-detector</a> — Finds usages of deprecated (Symfony) code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sensiolabs-de/deptrac">deptrac</a> — Enforce rules for dependencies between software layers.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Halleck45/DesignPatternDetector">DesignPatternDetector</a> — Detection of design patterns in PHP code.</p>
</li>
<li>
<p dir="auto"><a href="https://www.tomasvotruba.com/blog/2017/05/03/combine-power-of-php-code-sniffer-and-php-cs-fixer-in-3-lines" rel="nofollow">EasyCodingStandard</a> — Combine <a href="https://github.com/squizlabs/PHP_CodeSniffer">PHP_CodeSniffer</a> and <a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer">PHP-CS-Fixer</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://www.laravel-enlightn.com/" rel="nofollow">Enlightn</a> — A static and dynamic analysis tool for Laravel applications that provides recommendations to improve the performance, security and code reliability of Laravel apps. Contains 120 automated checks.</p>
</li>
<li>
<p dir="auto"><a href="https://www.exakat.io/" rel="nofollow">exakat</a> — An automated code reviewing engine for PHP.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/phpro/grumphp">GrumPHP</a> — Checks code on every commit.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nunomaduro/larastan">larastan</a> — Adds static analysis to Laravel improving developer productivity and code quality. It is a wrapper around PHPStan.</p>
</li>
<li>
<p dir="auto"><a href="https://trismegiste.github.io/Mondrian" rel="nofollow">Mondrian</a> <g-emoji alias="warning">⚠️</g-emoji> — A set of static analysis and refactoring tools which use graph theory.</p>
</li>
<li>
<p dir="auto"><a href="https://nitpick-ci.com/" rel="nofollow">Nitpick CI</a> ©️ — Automated PHP code review.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/php-parallel-lint/PHP-Parallel-Lint">parallel-lint</a> — This tool checks syntax of PHP files faster than serial check with a fancier output.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/psecio/parse">Parse</a> — A Static Security Scanner.</p>
</li>
<li>
<p dir="auto"><a href="https://pdepend.org/" rel="nofollow">pdepend</a> — Calculates software metrics like cyclomatic complexity for PHP code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/phan/phan/wiki">phan</a> — A modern static analyzer from etsy.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/carlosas/phpat">PHP Architecture Tester</a> — Easy to use architecture testing tool for PHP.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rskuipers/php-assumptions">PHP Assumptions</a> — Checks for weak assumptions.</p>
</li>
<li>
<p dir="auto"><a href="https://cs.symfony.com/" rel="nofollow">PHP Coding Standards Fixer</a> — Fixes your code according to standards like PSR-1, PSR-2, and the Symfony standard.</p>
</li>
<li>
<p dir="auto"><a href="https://phpinsights.com/" rel="nofollow">PHP Insights</a> — Instant PHP quality checks from your console. Analysis of code quality and coding style as well as overview of code architecture and its complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://plugins.jetbrains.com/plugin/7622-php-inspections-ea-extended-" rel="nofollow">Php Inspections (EA Extended)</a> — A Static Code Analyzer for PHP.</p>
</li>
<li>
<p dir="auto"><a href="https://qafoolabs.github.io/php-refactoring-browser" rel="nofollow">PHP Refactoring Browser</a> — Refactoring helper.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tomzx/php-semver-checker">PHP Semantic Versioning Checker</a> — Suggests a next version according to semantic versioning.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nikic/PHP-Parser">PHP-Parser</a> — A PHP parser written in PHP.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mekras/php-speller">php-speller</a> — PHP spell check library.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Andrewsville/PHP-Token-Reflection">PHP-Token-Reflection</a> <g-emoji alias="warning">⚠️</g-emoji> — Library emulating the PHP internal reflection.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sstalle/php7cc">php7cc</a> <g-emoji alias="warning">⚠️</g-emoji> — PHP 7 Compatibility Checker.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Alexia/php7mar">php7mar</a> <g-emoji alias="warning">⚠️</g-emoji> — Assist developers in porting their code quickly to PHP 7.</p>
</li>
<li>
<p dir="auto"><a href="https://pear.php.net/package/PHP_CodeSniffer" rel="nofollow">PHP_CodeSniffer</a> — Detects violations of a defined set of coding standards.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/wapmorgan/PhpCodeAnalyzer">phpca</a> — Finds usage of non-built-in extensions.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sebastianbergmann/phpcpd">phpcpd</a> — Copy/Paste Detector for PHP code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sebastianbergmann/phpdcd">phpdcd</a> <g-emoji alias="warning">⚠️</g-emoji> — Dead Code Detector (DCD) for PHP code.</p>
</li>
<li>
<p dir="auto"><a href="https://mamuz.github.io/PhpDependencyAnalysis" rel="nofollow">PhpDependencyAnalysis</a> <g-emoji alias="warning">⚠️</g-emoji> — Builds a dependency graph for a project.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/wapmorgan/PhpDeprecationDetector">PhpDeprecationDetector</a> — Analyzer of PHP code to search issues with deprecated functionality in newer interpreter versions.  It finds removed objects (functions, variables, constants and ini-directives),  deprecated functions functionality, and usage of forbidden names or tricks (e.g. reserved identifiers in newer versions).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dunglas/phpdoc-to-typehint">phpdoc-to-typehint</a> <g-emoji alias="warning">⚠️</g-emoji> — Add scalar type hints and return types to existing PHP projects using PHPDoc annotations.</p>
</li>
<li>
<p dir="auto"><a href="https://www.phpdoc.org/" rel="nofollow">phpDocumentor</a> — Analyzes PHP source code to generate documentation.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sebastianbergmann/phploc">phploc</a> — A tool for quickly measuring the size and analyzing the structure of a PHP project.</p>
</li>
<li>
<p dir="auto"><a href="https://phpmd.org/" rel="nofollow">PHPMD</a> — Finds possible bugs in your code.</p>
</li>
<li>
<p dir="auto"><a href="http://www.phpmetrics.org/" rel="nofollow">PhpMetrics</a> — Calculates and visualizes various code quality metrics.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/povils/phpmnd">phpmnd</a> — Helps to detect magic numbers.</p>
</li>
<li>
<p dir="auto"><a href="https://edgedesigncz.github.io/phpqa" rel="nofollow">PHPQA</a> — A tool for running QA tools (phploc, phpcpd, phpcs, pdepend, phpmd, phpmetrics).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jakzal/phpqa">phpqa - jakzal</a> — Many tools for PHP static analysis in one container.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jmolivas/phpqa">phpqa - jmolivas</a> — PHPQA all-in-one Analyzer CLI tool.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ovr/phpsa">phpsa</a> <g-emoji alias="warning">⚠️</g-emoji> — Static analysis tool for PHP.</p>
</li>
<li>
<p dir="auto"><a href="https://phpstan.org/" rel="nofollow">PHPStan</a> — PHP Static Analysis Tool - discover bugs in your code without running it!</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/designsecurity/progpilot">Progpilot</a> — A static analysis tool for security purposes.</p>
</li>
<li>
<p dir="auto"><a href="https://psalm.dev/" rel="nofollow">Psalm</a> — Static analysis tool for finding type errors in PHP applications.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Qafoo/QualityAnalyzer">Qafoo Quality Analyzer</a> <g-emoji alias="warning">⚠️</g-emoji> — Visualizes metrics and source code.</p>
</li>
<li>
<p dir="auto"><a href="https://getrector.org/" rel="nofollow">rector</a> — Instant Upgrades and Automated Refactoring of any PHP 5.3+ code. It upgrades your code for PHP 7.4, 8.0 and beyond. Rector promises a low false-positive rate because it looks for narrowly defined AST (abstract syntax tree) patterns.  The main use-case are tackling technical debt in your legacy code and removing dead code. Rector provides a set of special rules for Symfony, Doctrine, PHPUnit, and many more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/phpDocumentor/Reflection">Reflection</a> — Reflection library to do Static Analysis for PHP Projects</p>
</li>
<li>
<p dir="auto"><a href="https://insight.symfony.com/" rel="nofollow">Symfony Insight</a> ©️ — Detect security risks, find bugs and provide actionable metrics for PHP projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ircmaxell/Tuli">Tuli</a> — A static analysis engine.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/asm89/twig-lint">twig-lint</a> — twig-lint is a lint tool for your twig files.</p>
</li>
<li>
<p dir="auto"><a href="https://securityonline.info/owasp-wap-web-application-protection-project" rel="nofollow">WAP</a> — Tool to detect and correct input validation vulnerabilities in PHP (4.0 or higher) web applications and predicts false positives by combining static analysis and data mining.</p>
</li>
</ul>
<h2 id="user-content-plsql" tabindex="-1" dir="auto"><a href="#plsql">PL/SQL</a></h2>
<ul dir="auto">
<li><a href="https://felipezorzo.com.br/zpa/" rel="nofollow">ZPA</a> — Z PL/SQL Analyzer (ZPA) is an extensible code analyzer for PL/SQL and Oracle SQL. It can be integrated with SonarQube.</li>
</ul>
<h2 id="user-content-perl" tabindex="-1" dir="auto"><a href="#perl">Perl</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://technix.github.io/Perl-Analyzer/" rel="nofollow">Perl::Analyzer</a> — Perl-Analyzer is a set of programs and modules that allow users to analyze and visualize Perl  codebases by providing information about namespaces and their relations, dependencies,  inheritance, and methods implemented, inherited, and redefined in packages,  as well as calls to methods from parent packages via SUPER.</p>
</li>
<li>
<p dir="auto"><a href="https://metacpan.org/pod/Perl::Critic" rel="nofollow">Perl::Critic</a> — Critique Perl source code for best-practices.</p>
</li>
<li>
<p dir="auto"><a href="https://perltidy.sourceforge.net/" rel="nofollow">perltidy</a> — Perltidy is a Perl script which indents and reformats Perl scripts to make them easier to read.
The formatting can be controlled with command line parameters. The default parameter settings approximately follow the suggestions in the Perl Style Guide.
Besides reformatting scripts, Perltidy can be a great help in tracking down errors with missing or extra braces, parentheses, and square brackets because it is very good at localizing errors.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/htrgouvea/zarn">zarn</a> — A lightweight static security analysis tool for modern Perl Apps</p>
</li>
</ul>
<h2 id="user-content-python" tabindex="-1" dir="auto"><a href="#python">Python</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/PyCQA/autoflake">autoflake</a> — Autoflake removes unused imports and unused variables from Python code.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/autopep8/" rel="nofollow">autopep8</a> — A tool that automatically formats Python code to conform to the PEP 8 style guide.
It uses the pycodestyle utility to determine what parts of the code needs to be formatted.</p>
</li>
<li>
<p dir="auto"><a href="https://bandit.readthedocs.io/en/latest" rel="nofollow">bandit</a> — A tool to find common security issues in Python code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/hchasestevens/bellybutton">bellybutton</a> — A linting engine supporting custom project-specific rules.</p>
</li>
<li>
<p dir="auto"><a href="https://black.readthedocs.io/en/stable" rel="nofollow">Black</a> — The uncompromising Python code formatter.</p>
</li>
<li>
<p dir="auto"><a href="https://pybowler.io/" rel="nofollow">Bowler</a> — Safe code refactoring for modern Python.  Bowler is a refactoring tool for manipulating Python at the syntax tree level.  It enables safe, large scale code modifications while guaranteeing that the  resulting code compiles and runs. It provides both a simple command line interface  and a fluent API in Python for generating complex code modifications in code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ContinuumIO/ciocheck">ciocheck</a> <g-emoji alias="warning">⚠️</g-emoji> — Linter, formatter and test suite helper. As a linter, it is a wrapper around <code>pep8</code>, <code>pydocstyle</code>, <code>flake8</code>, and <code>pylint</code>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mschwager/cohesion">cohesion</a> — A tool for measuring Python class cohesion.</p>
</li>
<li>
<p dir="auto"><a href="https://deal.readthedocs.io/" rel="nofollow">deal</a> — Design by contract for Python. Write bug-free code.  By adding a few decorators to your code, you get for free tests, static analysis, formal verification, and much more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dlint-py/dlint">Dlint</a> — A tool for ensuring Python code is secure.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/landscapeio/dodgy">Dodgy</a> — Dodgy is a very basic tool to run against your codebase to search for "dodgy" looking values. It is a series of simple regular expressions designed to detect things such as accidental SCM diff checkins, or passwords or secret keys hard coded into files.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/fixit" rel="nofollow">fixit</a> — A framework for creating lint rules and corresponding auto-fixes for source code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/PyCQA/flake8">flake8</a> — A wrapper around <code>pyflakes</code>, <code>pycodestyle</code> and <code>mccabe</code>.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/flakeheaven/" rel="nofollow">flakeheaven</a> — flakeheaven is a python linter built around flake8 to enable inheritable and complex toml configuration.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/thg-consulting/it">InspectorTiger</a> <g-emoji alias="warning">⚠️</g-emoji> — IT, Inspector Tiger, is a modern python code review tool / framework. It comes with bunch of pre-defined handlers which warns you about improvements and possible bugs. Beside these handlers, you can write your own or use community ones.</p>
</li>
<li>
<p dir="auto"><a href="https://jedi.readthedocs.io/en/latest" rel="nofollow">jedi</a> — Autocompletion/static analysis library for Python.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lyft/linty_fresh">linty fresh</a> — Parse lint errors and report them to Github as comments on a pull request.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/mccabe" rel="nofollow">mccabe</a> — Check McCabe complexity.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/adamchainz/multilint">multilint</a> <g-emoji alias="warning">⚠️</g-emoji> — A wrapper around <code>flake8</code>, <code>isort</code> and <code>modernize</code>.</p>
</li>
<li>
<p dir="auto"><a href="http://www.mypy-lang.org/" rel="nofollow">mypy</a> — A static type checker that aims to combine the benefits of duck typing and static typing, frequently used with <a href="https://github.com/Instagram/MonkeyType">MonkeyType</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/PyCQA/prospector">prospector</a> — A wrapper around <code>pylint</code>, <code>pep8</code>, <code>mccabe</code> and others.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/uber/py-find-injection">py-find-injection</a> <g-emoji alias="warning">⚠️</g-emoji> — Find SQL injection vulnerabilities in Python code.</p>
</li>
<li>
<p dir="auto"><a href="https://pyanalyze.readthedocs.io/en/latest/" rel="nofollow">pyanalyze</a> — A tool for programmatically detecting common mistakes in Python code, such as references to undefined variables and type errors. It can be extended to add additional rules and perform checks specific to particular functions.</p>
</li>
<li>
<p dir="auto"><a href="https://pycodequ.al/" rel="nofollow">PyCodeQual</a> ©️ — PyCodeQual gives you insights into complexity and bug risks. It adds automatic reviews to your pull requests.</p>
</li>
<li>
<p dir="auto"><a href="https://pycodestyle.pycqa.org/en/latest" rel="nofollow">pycodestyle</a> — (Formerly <code>pep8</code>) Check Python code against some of the style conventions in PEP 8.</p>
</li>
<li>
<p dir="auto"><a href="http://www.pydocstyle.org/" rel="nofollow">pydocstyle</a> — Check compliance with Python docstring conventions.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/pyflakes" rel="nofollow">pyflakes</a> — Check Python source files for errors.</p>
</li>
<li>
<p dir="auto"><a href="http://pylint.pycqa.org/en/latest" rel="nofollow">pylint</a> — Looks for programming errors, helps enforcing a coding standard and sniffs for some code smells. It additionally includes <code>pyreverse</code> (an UML diagram generator) and <code>symilar</code> (a similarities checker).</p>
</li>
<li>
<p dir="auto"><a href="https://pyre-check.org/" rel="nofollow">pyre-check</a> — A fast, scalable type checker for large Python codebases.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Microsoft/pyright">pyright</a> — Static type checker for Python, created to address gaps in existing tools like mypy.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/regebro/pyroma">pyroma</a> — Rate how well a Python project complies with the best practices of the Python packaging ecosystem, and list issues that could be improved.</p>
</li>
<li>
<p dir="auto"><a href="https://pyre-check.org/docs/pysa-basics.html" rel="nofollow">Pysa</a> — A tool based on Facebook's pyre-check to identify potential security issues in Python code identified with taint analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/python-security/pyt">PyT - Python Taint</a> <g-emoji alias="warning">⚠️</g-emoji> — A static analysis tool for detecting security vulnerabilities in Python web applications.</p>
</li>
<li>
<p dir="auto"><a href="https://google.github.io/pytype" rel="nofollow">pytype</a> — A static type analyzer for Python code.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/pyupgrade-docs/" rel="nofollow">pyupgrade</a> — A tool (and pre-commit hook) to automatically upgrade syntax for newer versions of the language.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/quantifiedcode/quantifiedcode">QuantifiedCode</a> <g-emoji alias="warning">⚠️</g-emoji> — Automated code review &amp; repair. It helps you to keep track of issues and metrics in your software projects, and can be easily extended to support new types of analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://radon.readthedocs.io/en/latest" rel="nofollow">radon</a> — A Python tool that computes various metrics from the source code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dosisod/refurb">refurb</a> — A tool for refurbishing and modernizing Python codebases. Refurb is heavily inspired by clippy, the built-in linter for Rust.</p>
</li>
<li>
<p dir="auto"><a href="https://astral.sh/ruff" rel="nofollow">ruff</a> — Fast Python linter, written in Rust. 10-100x faster than existing linters. Compatible with Python 3.10. Supports file watcher.</p>
</li>
<li>
<p dir="auto"><a href="https://unimport.hakancelik.dev/" rel="nofollow">unimport</a> — A linter, formatter for finding and removing unused import statements.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jendrikseipp/vulture">vulture</a> — Find unused classes, functions and variables in Python code.</p>
</li>
<li>
<p dir="auto"><a href="https://wemake-python-styleguide.rtfd.io/" rel="nofollow">wemake-python-styleguide</a> — The strictest and most opinionated python linter ever.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tonybaloney/wily">wily</a> — A command-line tool for archiving, exploring and graphing the complexity of Python source code.</p>
</li>
<li>
<p dir="auto"><a href="https://xenon.readthedocs.io/" rel="nofollow">xenon</a> — Monitor code complexity using <a href="https://github.com/rubik/radon"><code>radon</code></a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/yapf">yapf</a> — A formatter for Python files created by Google
YAPF follows a distinctive methodology, originating from the 'clang-format' tool created by Daniel Jasper. Essentially, the program reframes the code to the most suitable formatting that abides by the style guide, even if the original code already follows the style guide. This concept is similar to the Go programming language's 'gofmt' tool, which aims to put an end to debates about formatting by having the entire codebase of a project pass through YAPF whenever changes are made, thereby maintaining a consistent style throughout the project and eliminating the need to argue about style in every code review.</p>
</li>
</ul>
<h2 id="user-content-r" tabindex="-1" dir="auto"><a href="#r">R</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/MangoTheCat/cyclocomp">cyclocomp</a> — Quantifies the cyclomatic complexity of R functions / expressions.</p>
</li>
<li>
<p dir="auto"><a href="https://mangothecat.github.io/goodpractice" rel="nofollow">goodpractice</a> — Analyses the source code for R packages and provides best-practice recommendations.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jimhester/lintr">lintr</a> — Static Code Analysis for R.</p>
</li>
<li>
<p dir="auto"><a href="https://styler.r-lib.org/" rel="nofollow">styler</a> — Formatting of R source code files and pretty-printing of R code.</p>
</li>
</ul>
<h2 id="user-content-rego" tabindex="-1" dir="auto"><a href="#rego">Rego</a></h2>
<ul dir="auto">
<li><a href="https://github.com/styrainc/regal">Regal</a> — Regal is a linter for the policy language Rego. Regal aims to catch bugs and mistakes in policy code, while at the same time helping people learn the language, best practices and idiomatic constructs.</li>
</ul>
<h2 id="user-content-ruby" tabindex="-1" dir="auto"><a href="#ruby">Ruby</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://brakemanscanner.org/" rel="nofollow">brakeman</a> — A static analysis security vulnerability scanner for Ruby on Rails applications.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rubysec/bundler-audit">bundler-audit</a> — Audit Gemfile.lock for gems with security vulnerabilities reported in <a href="https://github.com/rubysec/ruby-advisory-db">Ruby Advisory Database</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/square/cane">cane</a> <g-emoji alias="warning">⚠️</g-emoji> — Code quality threshold checking as part of your build.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/danmayer/churn">Churn</a> <g-emoji alias="warning">⚠️</g-emoji> — A Project to give the churn file, class, and method for a project for a given checkin. Over time the tool adds up the history of churns to give the number of times a file, class, or method is changing during the life of a project.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/thesp0nge/dawnscanner">dawnscanner</a> — A static analysis security scanner for ruby written web applications. It supports Sinatra, Padrino and Ruby on Rails frameworks.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Shopify/erb-lint">ERB Lint</a> — Lint your ERB or HTML files</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/DamirSvrtan/fasterer">Fasterer</a> — Common Ruby idioms checker.</p>
</li>
<li>
<p dir="auto"><a href="https://ruby.sadi.st/Flay.html" rel="nofollow">flay</a> — Flay analyzes code for structural similarities.</p>
</li>
<li>
<p dir="auto"><a href="https://ruby.sadi.st/Flog.html" rel="nofollow">flog</a> — Flog reports the most tortured code in an easy to read pain report. The higher the score, the more pain the code is in.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/CoralineAda/fukuzatsu">Fukuzatsu</a> — A tool for measuring code complexity in Ruby class files. Its analysis generates scores based on cyclomatic complexity algorithms with no added "opinions".</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/threedaymonk/htmlbeautifier">htmlbeautifier</a> — A normaliser/beautifier for HTML that also understands embedded Ruby. Ideal for tidying up Rails templates.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/michaeledgar/laser">laser</a> <g-emoji alias="warning">⚠️</g-emoji> — Static analysis and style linter for Ruby code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/metricfu/metric_fu">MetricFu</a> <g-emoji alias="warning">⚠️</g-emoji> — MetricFu is a set of tools to provide reports that show which parts of your code might need extra work.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/codegram/pelusa">pelusa</a> — Static analysis Lint-type tool to improve your OO Ruby code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/apiology/quality">quality</a> — Runs quality checks on your code using community tools, and makes sure your numbers don't get any worse over time.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/soutaro/querly">Querly</a> <g-emoji alias="warning">⚠️</g-emoji> — Pattern Based Checking Tool for Ruby.</p>
</li>
<li>
<p dir="auto"><a href="https://railroader.org/" rel="nofollow">Railroader</a> <g-emoji alias="warning">⚠️</g-emoji> — An open source static analysis security vulnerability scanner for Ruby on Rails applications.</p>
</li>
<li>
<p dir="auto"><a href="https://rails-bestpractices.com/" rel="nofollow">rails_best_practices</a> — A code metric tool for Rails projects</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/troessner/reek">reek</a> — Code smell detector for Ruby.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/roodi/roodi">Roodi</a> <g-emoji alias="warning">⚠️</g-emoji> — Roodi stands for Ruby Object Oriented Design Inferometer. It parses your Ruby code and warns you about design issues you have based on the checks that it has configured.</p>
</li>
<li>
<p dir="auto"><a href="https://docs.rubocop.org/rubocop" rel="nofollow">RuboCop</a> — A Ruby static code analyzer, based on the community Ruby style guide.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/blazeeboy/rubrowser">Rubrowser</a> — Ruby classes interactive dependency graph generator.</p>
</li>
<li>
<p dir="auto"><a href="http://code.yorickpeterse.com/ruby-lint/latest" rel="nofollow">ruby-lint</a> <g-emoji alias="warning">⚠️</g-emoji> — Static code analysis for Ruby.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/whitesmith/rubycritic">rubycritic</a> — A Ruby code quality reporter.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ruby-formatter/rufo">rufo</a> — An opinionated ruby formatter, intended to be used via the command line as a text-editor plugin, to autoformat files on save or on demand.</p>
</li>
<li>
<p dir="auto"><a href="https://metricfu.github.io/Saikuro" rel="nofollow">Saikuro</a> <g-emoji alias="warning">⚠️</g-emoji> — A Ruby cyclomatic complexity analyzer.</p>
</li>
<li>
<p dir="auto"><a href="https://rubygems.org/gems/sandi_meter" rel="nofollow">SandiMeter</a> <g-emoji alias="warning">⚠️</g-emoji> — Static analysis tool for checking Ruby code for Sandi Metz' rules.</p>
</li>
<li>
<p dir="auto"><a href="https://sorbet.org/" rel="nofollow">Sorbet</a> — A fast, powerful type checker designed for Ruby.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/testdouble/standard">Standard Ruby</a> — Ruby Style Guide, with linter &amp; automatic code fixer</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/soutaro/steep">Steep</a> — Gradual Typing for Ruby.</p>
</li>
</ul>
<h2 id="user-content-rust" tabindex="-1" dir="auto"><a href="#rust">Rust</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://c2rust.com/" rel="nofollow">C2Rust</a> — C2Rust helps you migrate C99-compliant code to Rust. The translator (or transpiler) produces unsafe Rust code that closely mirrors the input C code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/est31/cargo-udeps">cargo udeps</a> — Find unused dependencies in Cargo.toml. It either prints out a "unused crates" line listing the crates,  or it prints out a line saying that no crates were unused.</p>
</li>
<li>
<p dir="auto"><a href="https://rustsec.org/" rel="nofollow">cargo-audit</a> — Audit Cargo.lock for crates with security vulnerabilities reported to the <a href="https://github.com/RustSec/advisory-db/">RustSec Advisory Database</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/RazrFalcon/cargo-bloat">cargo-bloat</a> — Find out what takes most of the space in your executable. supports ELF (Linux, BSD), Mach-O (macOS) and PE (Windows) binaries.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/iomentum/cargo-breaking">cargo-breaking</a> — cargo-breaking compares a crate's public API between two different branches, shows what changed, and suggests the next version according to semver.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/japaric/cargo-call-stack">cargo-call-stack</a> — Whole program static stack analysis The tool produces the full call graph of a program as a dot file.</p>
</li>
<li>
<p dir="auto"><a href="https://embarkstudios.github.io/cargo-deny" rel="nofollow">cargo-deny</a> — A cargo plugin for linting your dependencies. It can be used either as a command line too, a Rust crate, or a Github action for CI. It checks for valid license information, duplicate crates, security vulnerabilities, and more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dtolnay/cargo-expand">cargo-expand</a> — Cargo subcommand to show result of macro expansion  and #[derive] expansion applied to the current crate.  This is a wrapper around a more verbose compiler command.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mre/cargo-inspect">cargo-inspect</a> <g-emoji alias="warning">⚠️</g-emoji> — Inspect Rust code without syntactic sugar to see what the compiler does behind the curtains.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/pacak/cargo-show-asm">cargo-show-asm</a> — cargo subcommand showing the assembly, LLVM-IR and MIR generated for Rust code</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/drahnr/cargo-spellcheck">cargo-spellcheck</a> — Checks all your documentation for spelling and grammar mistakes  with hunspell (ready) and languagetool (preview)</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/TimonPost/cargo-unused-features">cargo-unused-features</a> — Find potential unused enabled feature flags and prune them. You can generate a simple HTML report from the json to make it easier to inspect results.
It removes a feature of a dependency and then compiles the project to see if it still compiles. If it does, the feature flag can possibly be removed, but it can be a false-positve.</p>
</li>
<li>
<p dir="auto"><a href="https://rust-lang.github.io/rust-clippy" rel="nofollow">clippy</a> — A code linter to catch common mistakes and improve your Rust code.</p>
</li>
<li>
<p dir="auto"><a href="https://diff.rs/" rel="nofollow">diff.rs</a> — Web application (WASM) to render a diff between Rust crate versions.</p>
</li>
<li>
<p dir="auto"><a href="https://www.trailofbits.com/post/write-rust-lints-without-forking-clippy" rel="nofollow">dylint</a> — A tool for running Rust lints from dynamic libraries. Dylint makes it easy for developers to maintain their own personal lint collections.</p>
</li>
<li>
<p dir="auto"><a href="https://kha.github.io/electrolysis" rel="nofollow">electrolysis</a> <g-emoji alias="warning">⚠️</g-emoji> — A tool for formally verifying Rust programs by transpiling them into definitions in the Lean theorem prover.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mcarton/rust-herbie-lint">herbie</a> <g-emoji alias="warning">⚠️</g-emoji> — Adds warnings or errors to your crate when using a numerically unstable floating point expression.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/AtomLinter/linter-rust">linter-rust</a> <g-emoji alias="warning">⚠️</g-emoji> — Linting your Rust-files in Atom, using rustc and cargo.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/BurtonQin/lockbud">lockbud</a> — Statically detects Rust deadlocks bugs. It currently detects two common kinds of deadlock bugs: doublelock and locks in conflicting order. It will print bugs in JSON format together with the source code location and an explanation of each bug.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/facebookexperimental/MIRAI">MIRAI</a> — And abstract interpreter operating on Rust's mid-level intermediate language, and providing warnings based on taint analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/teenjuna/prae">prae</a> — Provides a convenient macro that allows you to generate type wrappers  that promise to always uphold arbitrary invariants that you specified.</p>
</li>
<li>
<p dir="auto"><a href="https://www.pm.inf.ethz.ch/research/prusti.html" rel="nofollow">Prusti</a> — A static verifier for Rust, based on the Viper verification infrastructure. By default Prusti verifies absence of panics by proving that statements such as unreachable!() and panic!() are unreachable.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sslab-gatech/Rudra">Rudra</a> <g-emoji alias="warning">⚠️</g-emoji> — Rust Memory Safety &amp; Undefined Behavior Detection. It is capable of analyzing single Rust packages as well as all the packages on crates.io.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rust-lang-nursery/rls">Rust Language Server</a> <g-emoji alias="warning">⚠️</g-emoji> — Supports functionality such as 'goto definition', symbol search, reformatting, and code completion, and enables renaming and refactorings.</p>
</li>
<li>
<p dir="auto"><a href="https://rust-analyzer.github.io/" rel="nofollow">rust-analyzer</a> — Supports functionality such as 'goto definition', type inference, symbol search, reformatting, and code completion, and enables renaming and refactorings.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Shnatsel/rust-audit">rust-audit</a> — Audit Rust binaries for known bugs or security vulnerabilities. This works by embedding data about the dependency tree (Cargo.lock) in JSON format into a dedicated linker section of the compiled executable.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rust-lang/rustfix">rustfix</a> — Read and apply the suggestions made by rustc (and third-party lints, like those offered by clippy).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rust-lang/rustfmt">rustfmt</a> — A tool for formatting Rust code according to style guidelines.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rustviz/rustviz">RustViz</a> — RustViz is a tool that generates visualizations  from simple Rust programs to assist users in better  understanding the Rust Lifetime and Borrowing mechanism. It generates SVG files with graphical indicators that integrate  with mdbook to render visualizations of data-flow in Rust programs.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/est31/warnalyzer">warnalyzer</a> — Show unused code from multi-crate Rust projects</p>
</li>
</ul>
<h2 id="user-content-sql" tabindex="-1" dir="auto"><a href="#sql">SQL</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/channable/dbcritic">dbcritic</a> — dbcritic finds problems in a database schema, such as a missing primary key constraint in a table.</p>
</li>
<li>
<p dir="auto"><a href="https://holistic.dev/" rel="nofollow">holistic</a> — More than 1,300 rules to analyze SQL queries. Takes an SQL schema definition and the query source code to generate improvement recommendations. Detects code smells, unused indexes, unused tables, views, materialized views, and more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nrempel/sleek">sleek</a> — Sleek is a CLI tool for formatting SQL.  It helps you maintain a consistent style across your SQL code, enhancing readability and productivity. The heavy lifting is done by the sqlformat crate.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jarulraj/sqlcheck">sqlcheck</a> <g-emoji alias="warning">⚠️</g-emoji> — Automatically identify anti-patterns in SQL queries.</p>
</li>
<li>
<p dir="auto"><a href="https://www.sqlfluff.com/" rel="nofollow">SQLFluff</a> — Multiple dialect SQL linter and formatter.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/purcell/sqlint">sqlint</a> — Simple SQL linter.</p>
</li>
<li>
<p dir="auto"><a href="https://squawkhq.com/" rel="nofollow">squawk</a> — Linter for PostgreSQL, focused on migrations. Prevents unexpected downtime caused by database migrations and encourages best practices around Postgres schemas and SQL.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tsqllint/tsqllint">tsqllint</a> — T-SQL-specific linter.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ashleyglee/TSqlRules">TSqlRules</a> <g-emoji alias="warning">⚠️</g-emoji> — TSQL Static Code Analysis Rules for SQL Server.</p>
</li>
<li>
<p dir="auto"><a href="https://www.visual-expert.com/" rel="nofollow">Visual Expert</a> ©️ — Code analysis for PowerBuilder, Oracle, and SQL Server Explores, analyzes, and documents Code</p>
</li>
</ul>
<h2 id="user-content-scala" tabindex="-1" dir="auto"><a href="#scala">Scala</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/HairyFotr/linter">linter</a> <g-emoji alias="warning">⚠️</g-emoji> — Linter is a Scala static analysis compiler plugin which adds compile-time checks for various possible bugs, inefficiencies, and style problems.</p>
</li>
<li>
<p dir="auto"><a href="http://www.scalastyle.org/" rel="nofollow">Scalastyle</a> — Scalastyle examines your Scala code and indicates potential problems with it.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sksamuel/scapegoat">scapegoat</a> — Scala compiler plugin for static code analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://www.wartremover.org/" rel="nofollow">WartRemover</a> — A flexible Scala code linting tool.</p>
</li>
</ul>
<h2 id="user-content-shell" tabindex="-1" dir="auto"><a href="#shell">Shell</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/openstack/bashate">bashate</a> — Code style enforcement for bash programs. The output format aims to follow pycodestyle (pep8) default output format.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lequal/i-CodeCNES">i-Code CNES for Shell</a> — An open source static code analysis tool for Shell and Fortran (77 and 90).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ediardo/kmdr-cli">kmdr</a> — CLI tool for learning commands from your terminal. kmdr delivers a break down of commands with every attribute explained.</p>
</li>
<li>
<p dir="auto"><a href="https://pkg.go.dev/mvdan.cc/sh/v3" rel="nofollow">sh</a> — A shell parser, formatter, and interpreter with bash support; includes shfmt</p>
</li>
<li>
<p dir="auto"><a href="https://www.shellcheck.net/" rel="nofollow">shellcheck</a> — ShellCheck, a static analysis tool that gives warnings and suggestions for bash/sh shell scripts.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/anordal/shellharden">shellharden</a> — A syntax highlighter and a tool to semi-automate the rewriting of scripts to ShellCheck conformance, mainly focused on quoting.</p>
</li>
</ul>
<h2 id="user-content-swift" tabindex="-1" dir="auto"><a href="#swift">Swift</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/nicklockwood/SwiftFormat">SwiftFormat</a> — A library and command-line formatting tool for reformatting Swift code.</p>
</li>
<li>
<p dir="auto"><a href="https://realm.github.io/SwiftLint" rel="nofollow">SwiftLint</a> — A tool to enforce Swift style and conventions.</p>
</li>
<li>
<p dir="auto"><a href="https://sleekbyte.github.io/tailor" rel="nofollow">Tailor</a> <g-emoji alias="warning">⚠️</g-emoji> — A static analysis and lint tool for source code written in Apple's Swift programming language.</p>
</li>
</ul>
<h2 id="user-content-tcl" tabindex="-1" dir="auto"><a href="#tcl">Tcl</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="http://catless.ncl.ac.uk/Programs/Frink" rel="nofollow">Frink</a> — A Tcl formatting and static check program (can prettify the program, minimise, obfuscate or just sanity check it).</p>
</li>
<li>
<p dir="auto"><a href="https://sourceforge.net/projects/nagelfar" rel="nofollow">Nagelfar</a> — A static syntax checker for Tcl.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ActiveState/tdk/blob/master/docs/3.0/TDK_3.0_Checker.txt">tclchecker</a> — A static syntax analysis module (as part of <a href="https://github.com/ActiveState/tdk">TDK</a>).</p>
</li>
</ul>
<h2 id="user-content-typescript" tabindex="-1" dir="auto"><a href="#typescript">TypeScript</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/angular-eslint/angular-eslint#readme">Angular ESLint</a> — Linter for Angular projects</p>
</li>
<li>
<p dir="auto"><a href="http://codelyzer.com/" rel="nofollow">Codelyzer</a> <g-emoji alias="warning">⚠️</g-emoji> — A set of tslint rules for static code analysis of Angular 2 TypeScript projects.</p>
</li>
<li>
<p dir="auto"><a href="https://stc.dudy.dev/" rel="nofollow">stc</a> — Speedy TypeScript type checker written in Rust</p>
</li>
<li>
<p dir="auto"><a href="https://palantir.github.io/tslint/" rel="nofollow">tslint</a> <g-emoji alias="warning">⚠️</g-emoji> — TSLint has been deprecated as of 2019. Please see <a href="https://github.com/palantir/tslint/issues/4534" data-hovercard-type="issue" data-hovercard-url="/palantir/tslint/issues/4534/hovercard">this issue</a> for more details. <code>typescript-eslint</code> is now your best option for linting TypeScript.
TSLint is an extensible static analysis tool that checks TypeScript code for readability, maintainability,  and functionality errors. It is widely supported across modern editors &amp; build systems and can be customized  with your own lint rules, configurations, and formatters.</p>
</li>
<li>
<p dir="auto"><a href="https://www.npmjs.com/package/tslint-clean-code" rel="nofollow">tslint-clean-code</a> — A set of TSLint rules inspired by the Clean Code handbook.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Microsoft/tslint-microsoft-contrib">tslint-microsoft-contrib</a> <g-emoji alias="warning">⚠️</g-emoji> — A set of tslint rules for static code analysis of TypeScript projects maintained by Microsoft.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/whyboris/TypeScript-Call-Graph">TypeScript Call Graph</a> — CLI to generate an interactive graph of functions and calls from your TypeScript files</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/typescript-eslint/typescript-eslint">TypeScript ESLint</a> — TypeScript language extension for eslint.</p>
</li>
<li>
<p dir="auto"><a href="https://zod.dev/" rel="nofollow">zod</a> — TypeScript-first schema validation with static type inference. The goal is to eliminate duplicative type declarations. With Zod, you declare a validator once and Zod will automatically infer the static TypeScript type. It is easy to compose simpler types into complex data structures.</p>
</li>
</ul>
<h2 id="user-content-verilogsystemverilog" tabindex="-1" dir="auto"><a href="#verilogsystemverilog">Verilog/SystemVerilog</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/steveicarus/iverilog">Icarus Verilog</a> — A Verilog simulation and synthesis tool that operates by compiling source code written in IEEE-1364 Verilog into some target format</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dalance/svls">svls</a> — A Language Server Protocol implementation for Verilog and SystemVerilog, including lint capabilities.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/chipsalliance/verible-linter-action">verible-linter-action</a> — Automatic SystemVerilog linting in github actions with the help of Verible Used to lint Verilog and SystemVerilog source files and comment erroneous lines  of code in Pull Requests automatically.</p>
</li>
<li>
<p dir="auto"><a href="https://www.veripool.org/verilator" rel="nofollow">Verilator</a> — A tool which converts Verilog to a cycle-accurate behavioral model in C++ or SystemC. Performs lint code-quality checks.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mshr-h/vscode-verilog-hdl-support">vscode-verilog-hdl-support</a> — Verilog HDL/SystemVerilog/Bluespec SystemVerilog support for VS Code. Provides syntax highlighting and Linting support from Icarus Verilog, Vivado Logical Simulation, Modelsim and Verilator</p>
</li>
</ul>
<h2 id="user-content-vim-script" tabindex="-1" dir="auto"><a href="#vim-script">Vim Script</a></h2>
<ul dir="auto">
<li><a href="https://github.com/Kuniwak/vint">vint</a> <g-emoji alias="warning">⚠️</g-emoji> — Fast and Highly Extensible Vim script Language Lint implemented by Python.</li>
</ul>
<h2 tabindex="-1" id="user-content-multiple-languages-1" dir="auto"><a href="#multiple-languages-1">Multiple languages</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/w0rp/ale">ale</a> — Asynchronous Lint Engine for Vim and NeoVim with support for many languages.</p>
</li>
<li>
<p dir="auto"><a href="https://developer.android.com/studio" rel="nofollow">Android Studio</a> — Based on IntelliJ IDEA, and comes bundled with tools for Android including Android Lint.</p>
</li>
<li>
<p dir="auto"><a href="https://npo-echelon.ru/en/solutions/appchecker.php" rel="nofollow">AppChecker</a> ©️ — Static analysis for C/C++/C#, PHP and Java.</p>
</li>
<li>
<p dir="auto"><a href="https://www.ptsecurity.com/ww-en/products/ai" rel="nofollow">Application Inspector</a> ©️ — Commercial Static Code Analysis which generates exploits to verify vulnerabilities.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/microsoft/ApplicationInspector">ApplicationInspector</a> — Creates reports of over 400 rule patterns for feature detection (e.g. the use of cryptography or version control in apps).</p>
</li>
<li>
<p dir="auto"><a href="https://www.archunit.org/" rel="nofollow">ArchUnit</a> — Unit test your Java or Kotlin architecture.</p>
</li>
<li>
<p dir="auto"><a href="https://atom.io/packages/atom-beautify" rel="nofollow">Atom-Beautify</a> <g-emoji alias="warning">⚠️</g-emoji> — Beautify HTML, CSS, JavaScript, PHP, Python, Ruby, Java, C, C++, C#, Objective-C, CoffeeScript, TypeScript, Coldfusion, SQL, and more in Atom editor.</p>
</li>
<li>
<p dir="auto"><a href="https://huacnlee.github.io/autocorrect" rel="nofollow">autocorrect</a> — A linter and formatter to help you to improve copywriting, correct spaces, words, punctuations between CJK (Chinese, Japanese, Korean).</p>
</li>
<li>
<p dir="auto"><a href="https://www.axivion.com/en/products-services-9#products_bauhaussuite" rel="nofollow">Axivion Bauhaus Suite</a> ©️ — Tracks down error-prone code locations, style violations, cloned or dead code, cyclic dependencies and more for C/C++, C#/.NET, Java and Ada 83/Ada 95.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/bearer/bearer">Bearer</a> — Open-Source static code analysis tool to discover,  filter and prioritize security risks and vulnerabilities  leading to sensitive data exposures (PII, PHI, PD).  Highly configurable and easily extensible,  built for security and engineering teams.</p>
</li>
<li>
<p dir="auto"><a href="https://bettercodehub.com/" rel="nofollow">Better Code Hub</a> ©️ — Better Code Hub checks your GitHub codebase against 10 engineering guidelines devised by the authority in software quality, Software Improvement Group.</p>
</li>
<li>
<p dir="auto"><a href="https://biomejs.dev/" rel="nofollow">biome</a> — A toolchain for web projects, aimed to provide functionalities to maintain them. Biome formats and lints code in a fraction of a second. It is the successor to Rome. It is designed to eventually replace Biome is designed to eventually replace Babel, ESLint, webpack, Prettier, Jest, and others.</p>
</li>
<li>
<p dir="auto"><a href="https://www.bugprove.com/" rel="nofollow">BugProve</a> ©️ — BugProve is a firmware analysis platform featuring both static and dynamic analysis techniques to discover memory corruptions, command injections and other classes or common weaknesses in binary code. It also detects vulnerable dependencies, weak cryptographic parameters, misconfigurations, and more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/koknat/callGraph">callGraph</a> — Statically generates a call graph image and displays it on screen.</p>
</li>
<li>
<p dir="auto"><a href="https://www.castsoftware.com/products/highlight" rel="nofollow">CAST Highlight</a> ©️ — Commercial Static Code Analysis which runs locally, but uploads the results to its cloud for presentation.</p>
</li>
<li>
<p dir="auto"><a href="https://www.checkmarx.com/products/static-application-security-testing" rel="nofollow">Checkmarx CxSAST</a> ©️ — Commercial Static Code Analysis which doesn't require pre-compilation.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/classgraph/classgraph">ClassGraph</a> — A classpath and module path scanner for querying or visualizing class metadata or class relatedness.</p>
</li>
<li>
<p dir="auto"><a href="https://www.getclayton.com/" rel="nofollow">Clayton</a> ©️ — AI-powered code reviews for Salesforce. Secure your developments, enforce best practice and control your technical debt in real-time.</p>
</li>
<li>
<p dir="auto"><a href="https://coala.io/" rel="nofollow">coala</a> <g-emoji alias="warning">⚠️</g-emoji> — Language independent framework for creating code analysis - supports <a href="https://coala.io/languages" rel="nofollow">over 60 languages</a> by default.</p>
</li>
<li>
<p dir="auto"><a href="https://spinroot.com/cobra" rel="nofollow">Cobra</a> ©️ — Structural source code analyzer by NASA's Jet Propulsion Laboratory.</p>
</li>
<li>
<p dir="auto"><a href="https://www.codacy.com/" rel="nofollow">Codacy</a> ©️ — Code Analysis to ship Better Code, Faster.</p>
</li>
<li>
<p dir="auto"><a href="https://www.code-intelligence.com/" rel="nofollow">Code Intelligence</a> ©️ — CI/CD-agnostic DevSecOps platform which combines industry-leading fuzzing engines for finding bugs and visualizing code coverage</p>
</li>
<li>
<p dir="auto"><a href="https://www.codeac.io/?ref=awesome-static-analysis" rel="nofollow">Codeac</a> ©️ — Automated code review tool integrates with GitHub, Bitbucket and GitLab (even self-hosted). Available for JavaScript, TypeScript, Python, Ruby, Go, PHP, Java, Docker, and more. (open-source free)</p>
</li>
<li>
<p dir="auto"><a href="https://groupon.github.io/codeburner" rel="nofollow">codeburner</a> — Provides a unified interface to sort and act on the issues it finds.</p>
</li>
<li>
<p dir="auto"><a href="https://codechecker.readthedocs.io/en/latest" rel="nofollow">codechecker</a> — A defect database and viewer extension for the Clang Static Analyzer with web GUI.</p>
</li>
<li>
<p dir="auto"><a href="https://codefactor.io/" rel="nofollow">CodeFactor</a> ©️ — Automated Code Analysis for repos on GitHub or BitBucket.</p>
</li>
<li>
<p dir="auto"><a href="https://www.getcodeflow.com/" rel="nofollow">CodeFlow</a> ©️ — Automated code analysis tool to deal with technical depth. Integrates with Bitbucket and Gitlab. (free for Open Source Projects)</p>
</li>
<li>
<p dir="auto"><a href="https://submain.com/products/codeit.right.aspx" rel="nofollow">CodeIt.Right</a> ©️ — CodeIt.Right™ provides a fast, automated way to ensure that your source code adheres to (your) predefined design and style guidelines as well as best coding practices.</p>
</li>
<li>
<p dir="auto"><a href="https://cyber-security.claranet.fr/en/codepatrol" rel="nofollow">CodePatrol</a> ©️ — Automated SAST code reviews driven by security, supports 15+ languages and includes security training.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/github/codeql">codeql</a> — Deep code analysis - semantic queries and dataflow for several languages with VSCode plugin support.</p>
</li>
<li>
<p dir="auto"><a href="https://codeque.co/" rel="nofollow">CodeQue</a> — Ecosystem for structural matching JavaScript and TypeScript code. Offers search tool that understands code structure. Available as CLI tool and Visual Studio Code extension. It helps to search code faster and more accurately making you workflow more effective. Soon it will offer ESLint plugin to create your own rules in minutes to help with assuring codebase quality.</p>
</li>
<li>
<p dir="auto"><a href="https://www.devexpress.com/products/coderush" rel="nofollow">CodeRush</a> ©️ — Code creation, debugging, navigation, refactoring, analysis and visualization tools that use the Roslyn engine in Visual Studio 2015 and up.</p>
</li>
<li>
<p dir="auto"><a href="https://www.codescan.io/" rel="nofollow">CodeScan</a> ©️ — Code Quality and Security for Salesforce Developers. Made exclusively for the Salesforce platform, CodeScan’s code analysis solutions provide you with total visibility into your code health.</p>
</li>
<li>
<p dir="auto"><a href="https://codescene.com/" rel="nofollow">CodeScene</a> ©️ — CodeScene is a quality visualization tool for software. Prioritize technical debt, detect delivery risks, and measure organizational aspects. Fully automated.</p>
</li>
<li>
<p dir="auto"><a href="https://www.codesee.io/" rel="nofollow">CodeSee</a> ©️ — CodeSee is mapping and automating your app's services, directories, file dependencies, and code changes. It's like Google Map, but for code.t</p>
</li>
<li>
<p dir="auto"><a href="https://codesecure.com/our-products/codesonar/" rel="nofollow">CodeSonar from GrammaTech</a> ©️ — Advanced, whole program, deep path, static analysis of C, C++, Java and C# with easy-to-understand explanations and code and path visualization.</p>
</li>
<li>
<p dir="auto"><a href="https://www.codiga.io/" rel="nofollow">Codiga</a> ©️ — Automated Code Reviews and Technical Debt management platform that supports 12+ languages.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jameysharp/corrode">Corrode</a> <g-emoji alias="warning">⚠️</g-emoji> — Semi-automatic translation from C to Rust. Could reveal bugs in the original implementation by showing Rust compiler warnings and errors. Superseded by C2Rust.</p>
</li>
<li>
<p dir="auto"><a href="https://www.synopsys.com/software-integrity/security-testing/static-analysis-sast.html" rel="nofollow">Coverity</a> ©️ — Synopsys Coverity supports 20 languages and over 70 frameworks including Ruby on rails, Scala, PHP, Python, JavaScript, TypeScript, Java, Fortran, C, C++, C#, VB.NET.</p>
</li>
<li>
<p dir="auto"><a href="https://cpp-linter.github.io/cpp-linter-action/" rel="nofollow">cpp-linter-action</a> — A Github Action for linting C/C++ code integrating clang-tidy and clang-format to collect feedback provided in the form of thread comments and/or annotations.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/xcatliu/cqc">cqc</a> <g-emoji alias="warning">⚠️</g-emoji> — Check your code quality for js, jsx, vue, css, less, scss, sass and styl files.</p>
</li>
<li>
<p dir="auto"><a href="https://www.deepcode.ai/" rel="nofollow">DeepCode</a> <g-emoji alias="warning">⚠️</g-emoji> ©️ — DeepCode was acquired by Snyk is now Snyk Code.</p>
</li>
<li>
<p dir="auto"><a href="https://deepsource.io/" rel="nofollow">DeepSource</a> ©️ — In-depth static analysis to find issues in verticals of bug risks, security, anti-patterns, performance, documentation and style. Native integrations with GitHub, GitLab and Bitbucket. Less than 5% false positives.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/multilang-depends/depends">Depends</a> — Analyses the comprehensive dependencies of code elements for Java, C/C++, Ruby.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/microsoft/devskim">DevSkim</a> — Regex-based static analysis tool for Visual Studio, VS Code, and Sublime Text - C/C++, C#, PHP, ASP, Python, Ruby, Java, and others.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dotnet/format">dotenet-format</a> — A code formatter for .NET. Preferences will be read from an <code>.editorconfig</code> file, if present, otherwise a default set of preferences will be used. At this time dotnet-format is able to format C# and Visual Basic projects with a subset of supported <code>.editorconfig</code> options.</p>
</li>
<li>
<p dir="auto"><a href="https://embold.io/" rel="nofollow">Embold</a> ©️ — Intelligent software analytics platform that identifies design issues, code issues, duplication and metrics. Supports Java, C, C++, C#, JavaScript, TypeScript, Python, Go, Kotlin and more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/glato/emerge">emerge</a> — Emerge is a source code and dependency visualizer that can be used to gather insights about source code structure, metrics, dependencies and complexity of software projects. After scanning the source code of a project it provides you an interactive web interface to explore and analyze your project by using graph structures.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/eslint/eslint">ESLint</a> — An extensible linter for JS, following the ECMAScript standard.</p>
</li>
<li>
<p dir="auto"><a href="https://kaleidawave.github.io/posts/introducing-ezno/" rel="nofollow">ezno</a> — A JavaScript compiler and TypeScript checker written in Rust with a focus on static analysis and runtime performance. Ezno's type checker is built from scratch.  The checker is fully compatible with TypeScript type annotations and can work without any type annotations at all.</p>
</li>
<li>
<p dir="auto"><a href="https://find-sec-bugs.github.io/" rel="nofollow">Find Security Bugs</a> — The SpotBugs plugin for security audits of Java web applications and Android applications. (Also work with Kotlin, Groovy and Scala projects)</p>
</li>
<li>
<p dir="auto"><a href="https://software.microfocus.com/en-us/products/static-code-analysis-sast/overview" rel="nofollow">Fortify</a> ©️ — A commercial static analysis platform that supports the scanning of C/C++, C#, VB.NET, VB6, ABAP/BSP, ActionScript, Apex, ASP.NET, Classic ASP, VB Script, Cobol, ColdFusion, HTML, Java, JS, JSP, MXML/Flex, Objective-C, PHP, PL/SQL, T-SQL, Python (2.6, 2.7), Ruby (1.9.3), Swift, Scala, VB, and XML.</p>
</li>
<li>
<p dir="auto"><a href="https://sider.github.io/goodcheck" rel="nofollow">Goodcheck</a> — Regexp based customizable linter.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/masibw/goone">goone</a> <g-emoji alias="warning">⚠️</g-emoji> — Finds N+1 queries (SQL calls in a for loop) in go code</p>
</li>
<li>
<p dir="auto"><a href="http://www.justanotherhacker.com/" rel="nofollow">graudit</a> — Grep rough audit - source code auditing tool.</p>
</li>
<li>
<p dir="auto"><a href="https://www.hcltechsw.com/products/appscan" rel="nofollow">HCL AppScan Source</a> ©️ — Commercial Static Code Analysis.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/cuplv/hopper">Hopper</a> <g-emoji alias="warning">⚠️</g-emoji> — A static analysis tool written in scala for languages that run on JVM.</p>
</li>
<li>
<p dir="auto"><a href="https://houndci.com/" rel="nofollow">Hound CI</a> — Comments on style violations in GitHub pull requests. Supports Coffeescript, Go, HAML, JavaScript, Ruby, SCSS and Swift.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/justinabrahms/imhotep">imhotep</a> — Comment on commits coming into your repository and check for syntactic errors and general lint warnings.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/feddischson/include_gardener">include-gardener</a> — A multi-language static analyzer for C/C++/Obj-C/Python/Ruby to create a graph (in dot or graphml format) which shows all <code>#include</code> relations of a given set of files.</p>
</li>
<li>
<p dir="auto"><a href="https://fbinfer.com/" rel="nofollow">Infer</a> — A static analyzer for Java, C and Objective-C</p>
</li>
<li>
<p dir="auto"><a href="https://www.kiuwan.com/code-security-sast" rel="nofollow">Kiuwan</a> ©️ — Identify and remediate cyber threats in a blazingly fast, collaborative environment, with seamless integration in your SDLC. Python, C\C++, Java, C#, PHP and more.</p>
</li>
<li>
<p dir="auto"><a href="https://www.perforce.com/products/klocwork" rel="nofollow">Klocwork</a> ©️ — Quality and Security Static analysis for C/C++, Java and C#.</p>
</li>
<li>
<p dir="auto"><a href="https://lgtm.com/" rel="nofollow">LGTM</a> ©️ — Find security vulnerabilities, variants, and critical code quality issues using CodeQL queries over source code. Automatic PR code review; free for open source. Formerly semmle. It supports public Git repositories hosted on Bitbucket Cloud, GitHub.com, GitLab.com.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/terryyin/lizard">lizard</a> — Lizard is an extensible Cyclomatic Complexity Analyzer for many programming languages  including C/C++ (doesn't require all the header files or Java imports).  It also does copy-paste detection (code clone detection/code duplicate detection) and many other forms of static code analysis. Counts lines of code without comments, CCN (cyclomatic complexity number), token count of functions, parameter count of functions.</p>
</li>
<li>
<p dir="auto"><a href="https://nvuillam.github.io/mega-linter/" rel="nofollow">Mega-Linter</a> — Mega-Linter can handle any type of project thanks to its 70+ embedded Linters,
its advanced reporting, runnable on any CI system or locally,
with assisted installation and configuration, able to apply formatting and fixes</p>
</li>
<li>
<p dir="auto"><a href="http://oclint.org/" rel="nofollow">oclint</a> <g-emoji alias="warning">⚠️</g-emoji> — A static source code analysis tool to improve quality and reduce defects for C, C++ and Objective-C.</p>
</li>
<li>
<p dir="auto"><a href="https://offensive360.com/" rel="nofollow">Offensive 360</a> ©️ — Commercial Static Code Analysis system doesn't require building the source code or pre-compilation.</p>
</li>
<li>
<p dir="auto"><a href="https://docs.openrewrite.org/" rel="nofollow">OpenRewrite</a> — OpenRewrite <a href="https://docs.openrewrite.org/running-recipes/popular-recipe-guides/common-static-analysis-issue-remediation" rel="nofollow">fixes common static analysis issues</a>  reported through Sonar and other tools using a Maven and Gradle plugin or the Moderne CLI.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sed-inf-u-szeged/OpenStaticAnalyzer">OpenStaticAnalyzer</a> — OpenStaticAnalyzer is a source code analyzer tool, which can perform deep static analysis of the source code of complex systems.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/web-infra-dev/oxc">oxc</a> — The Oxidation Compiler is creating a suite of high-performance tools for the JavaScript / TypeScript language re-written in Rust.</p>
</li>
<li>
<p dir="auto"><a href="https://www.parasoft.com/" rel="nofollow">parasoft</a> ©️ — Automated Software Testing Solutions for unit-, API-, and web UI testing. Complies with MISRA, OWASP, and others.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/facebookarchive/pfff/wiki/Main">pfff</a> — Facebook's tools for code analysis, visualizations, or style-preserving source transformation for many languages.</p>
</li>
<li>
<p dir="auto"><a href="https://pmd.github.io/" rel="nofollow">PMD</a> — A source code analyzer for Java, Salesforce Apex, Javascript, PLSQL, XML, XSL and others.</p>
</li>
<li>
<p dir="auto"><a href="https://pre-commit.com/" rel="nofollow">pre-commit</a> — A framework for managing and maintaining multi-language pre-commit hooks.</p>
</li>
<li>
<p dir="auto"><a href="https://prettier.io/" rel="nofollow">Prettier</a> — An opinionated code formatter.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/prontolabs/pronto">Pronto</a> — Quick automated code review of your changes. Supports more than 40 runners for various languages, including Clang, Elixir, JavaScript, PHP, Ruby and more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/PositiveTechnologies/PT.PM">PT.PM</a> <g-emoji alias="warning">⚠️</g-emoji> — An engine for searching patterns in the source code, based on Unified AST or UST. At present time C#, Java, PHP, PL/SQL, T-SQL, and JavaScript are supported. Patterns can be described within the code or using a DSL.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/coderaiser/putout">Putout</a> — Pluggable and configurable code transformer with built-in eslint, babel plugins support for js, jsx typescript, flow, markdown, yaml and json.</p>
</li>
<li>
<p dir="auto"><a href="https://pvs-studio.com/" rel="nofollow">PVS-Studio</a> ©️ — A (<a href="https://pvs-studio.com/en/order/open-source-license" rel="nofollow">conditionally free</a> for FOSS and individual developers) static analysis of C, C++, C# and Java code. For advertising purposes <a href="https://github.com/viva64/pvs-studio-check-list">you can propose a large FOSS project for analysis by PVS employees</a>. Supports CWE mapping, OWASP ASVS, MISRA, AUTOSAR and SEI CERT coding standards.</p>
</li>
<li>
<p dir="auto"><a href="https://klen.github.io/pylama/" rel="nofollow">pylama</a> — Code audit tool for Python and JavaScript. Wraps pycodestyle, pydocstyle, PyFlakes, Mccabe, Pylint, and more</p>
</li>
<li>
<p dir="auto"><a href="https://qwiet.ai/" rel="nofollow">Qwiet AI</a> ©️ — Identify vulnerabilities that are unique to your code base before they reach production. Leverages the Code Property Graph (CPG) to run its analyses concurrently in a single graph of graphs. Automatically finds business logic flaws in dev like hardcoded secrets and logic bombs</p>
</li>
<li>
<p dir="auto"><a href="https://marketplace.visualstudio.com/items?itemName=SharpDevelopTeam.RefactoringEssentialsforVisualStudio" rel="nofollow">Refactoring Essentials</a> <g-emoji alias="warning">⚠️</g-emoji> — The free Visual Studio 2015 extension for C# and VB.NET refactorings, including code best practice analyzers.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/codingjoe/relint">relint</a> — A static file linter that allows you to write custom rules using regular expressions (RegEx).</p>
</li>
<li>
<p dir="auto"><a href="https://www.jetbrains.com/resharper" rel="nofollow">ReSharper</a> ©️ — Extends Visual Studio with on-the-fly code inspections for C#, VB.NET, ASP.NET, JavaScript, TypeScript and other technologies.</p>
</li>
<li>
<p dir="auto"><a href="https://www.ripstech.com/" rel="nofollow">RIPS</a> ©️ — A static source code analyser for vulnerabilities in PHP scripts.</p>
</li>
<li>
<p dir="auto"><a href="https://rome.tools/" rel="nofollow">Rome</a> — Rome was a linter, compiler, bundler, and <a href="https://rome.tools/#development-status" rel="nofollow">more</a> for JavaScript, TypeScript, JSON, HTML, Markdown, and CSS. It has since been succeeded by <a href="https://biomejs.dev/" rel="nofollow">biome</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://rome.tools/blog/2022/04/05/rome-formatter-release" rel="nofollow">Rome Formatter</a> <g-emoji alias="warning">⚠️</g-emoji> — A performant and fault-tolerant code formatter for JS/TS written in Rust. Superceded by <a href="https://biomejs.dev/" rel="nofollow">biome</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/dotnet/roslyn-analyzers">Roslyn Analyzers</a> — Roslyn-based implementation of FxCop analyzers.</p>
</li>
<li>
<p dir="auto"><a href="https://security-code-scan.github.io/" rel="nofollow">Roslyn Security Guard</a> — Project that focuses on the identification of potential vulnerabilities such as SQL injection, cross-site scripting (XSS), CSRF, cryptography weaknesses, hardcoded passwords and many more.</p>
</li>
<li>
<p dir="auto"><a href="https://safeql.dev/" rel="nofollow">SafeQL</a> — Validate and auto-generate TypeScript types from raw SQL queries in PostgreSQL. SafeQL is an ESLint plugin for writing SQL queries in a type-safe way.</p>
</li>
<li>
<p dir="auto"><a href="https://sast.online/" rel="nofollow">SAST Online</a> ©️ — Check the Android Source code thoroughly to uncover and address potential security concerns and vulnerabilities. Static application security testing (Static Code Analysis) tool Online</p>
</li>
<li>
<p dir="auto"><a href="http://www.scanmycode.today/" rel="nofollow">Scanmycode CE (Community Edition)</a> — Scanmycode - Code Scanning/SAST/Linting using many tools/Scanners with One Report</p>
</li>
<li>
<p dir="auto"><a href="https://scrutinizer-ci.com/" rel="nofollow">Scrutinizer</a> ©️ — A proprietary code quality checker that can be integrated with GitHub.</p>
</li>
<li>
<p dir="auto"><a href="https://security-code-scan.github.io/" rel="nofollow">Security Code Scan</a> — Security code analyzer for C# and VB.NET. Detects various security vulnerability patterns: SQLi, XSS, CSRF, XXE, Open Redirect, etc. Integrates into Visual Studio 2015 and newer. Detects various security vulnerability patterns: SQLi, XSS, CSRF, XXE, Open Redirect, etc.</p>
</li>
<li>
<p dir="auto"><a href="https://semgrep.dev/" rel="nofollow">Semgrep</a> — A fast, open-source, static analysis tool for finding bugs and enforcing code standards at editor, commit, and CI time. Its rules look like the code you already write;  no abstract syntax trees or regex wrestling. Supports 17+ languages.</p>
</li>
<li>
<p dir="auto"><a href="https://semgrep.dev/products/semgrep-supply-chain" rel="nofollow">Semgrep Supply Chain</a> ©️ — Quickly find and remediate high-priority security issues.  Semgrep Supply Chain prioritizes the 2% of vulnerabilities that are reachable from your code.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ShiftLeftSecurity/sast-scan">ShiftLeft Scan</a> — Scan is a free open-source DevSecOps platform for detecting security issues in source code and dependencies. It supports a broad range of languages and CI/CD pipelines.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/shipshape">shipshape</a> <g-emoji alias="warning">⚠️</g-emoji> — Static program analysis platform that allows custom analyzers to plug in through a common interface.</p>
</li>
<li>
<p dir="auto"><a href="https://www.softwareimprovementgroup.com/solutions/sigrid-software-assurance-platform/" rel="nofollow">Sigrid</a> ©️ — Sigrid helps you to improve your software by measuring your system's code quality,  and then compares the results against a benchmark of thousands of industry systems to give you concrete advice on areas where you can improve.</p>
</li>
<li>
<p dir="auto"><a href="https://dickgrune.com/Programs/similarity_tester/" rel="nofollow">Similarity Tester</a> — A tool that finds similarities between or within files to support you encountering DRY principle violations.</p>
</li>
<li>
<p dir="auto"><a href="https://snyk.io/" rel="nofollow">Snyk Code</a> ©️ — Snyk Code finds security vulnerabilities based on AI. Its speed of analysis allow us to  analyse your code in real time and deliver results when you hit the save button in your IDE.  Supported languages are Java, JavaScript, Python, PHP, C#, Go and TypeScript. Integrations with  GitHub, BitBucket and Gitlab. It is free to try and part of the Snyk platform also covering SCA,  containers and IaC.</p>
</li>
<li>
<p dir="auto"><a href="https://sonarcloud.io/" rel="nofollow">SonarCloud</a> ©️ — Multi-language cloud-based static code analysis. History, trends, security hot-spots, pull request analysis and more. Free for open source.</p>
</li>
<li>
<p dir="auto"><a href="https://vs.sonarlint.org/" rel="nofollow">SonarLint for Visual Studio</a> — SonarLint is an extension for Visual Studio 2015 and 2017 that provides on-the-fly feedback to developers on new bugs and quality issues injected into .NET code.</p>
</li>
<li>
<p dir="auto"><a href="http://www.sonarqube.org/" rel="nofollow">SonarQube</a> — SonarQube is an open platform to manage code quality.</p>
</li>
<li>
<p dir="auto"><a href="https://www.sonatype.com/" rel="nofollow">Sonatype</a> ©️ — Reports known vulnerabilities in common dependencies and recommends updated packages to minimize breaking changes</p>
</li>
<li>
<p dir="auto"><a href="https://www.hello2morrow.com/products/sotograph" rel="nofollow">Soto Platform</a> ©️ — Suite of static analysis tools consisting of the three components Sotoarc (Architecture Analysis), Sotograph (Quality Analysis), and Sotoreport (Quality report). Helps find differences between architecture and implementation, interface violations (e.g. external access of private parts of subsystems, detection of all classes, files, packages and subsystems which are strongly coupled by cyclical relationships and more. The Sotograph product family runs on Windows and Linux.</p>
</li>
<li>
<p dir="auto"><a href="https://www.sourcemeter.com/" rel="nofollow">SourceMeter</a> ©️ — Static Code Analysis for C/C++, Java, C#, Python, and RPG III and RPG IV versions (including free-form).</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/houqp/sqlvet">sqlvet</a> — Performs static analysis on raw SQL queries in your Go code base to surface potential runtime errors. It checks for SQL syntax error, identifies unsafe queries that could potentially lead to SQL injections makes sure column count matches value count in INSERT statements and validates table- and column names.</p>
</li>
<li>
<p dir="auto"><a href="https://securityreviewer.atlassian.net/wiki/spaces/KC/pages/196633/Static+Reviewer" rel="nofollow">StaticReviewer</a> ©️ — Static Reviewer executes code checks according to the most relevant Secure Coding Standards, OWASP, CWE, CVE, CVSS, MISRA, CERT, for 40+ programming languages, using 1000+ built-in validation rules for Security, Deadcode &amp; Best Practices Available a module for Software Composition Analysis (SCA) to find vulnerabilities in open source and third party libraries.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/github/super-linter">Super-Linter</a> — Combination of multiple linters to install as a GitHub Action.</p>
</li>
<li>
<p dir="auto"><a href="https://www.ispras.ru/en/technologies/svace/" rel="nofollow">Svace</a> ©️ — Static code analysis tool for Java,C,C++,C#,Go.</p>
</li>
<li>
<p dir="auto"><a href="https://www.synopsys.com/software-integrity/security-testing/static-analysis-sast.html" rel="nofollow">Synopsys</a> ©️ — A commercial static analysis platform that allows for scanning of multiple languages (C/C++, Android, C#, Java, JS, PHP, Python, Node.JS, Ruby, Fortran, and Swift).</p>
</li>
<li>
<p dir="auto"><a href="https://www.cqse.eu/en/teamscale/overview/" rel="nofollow">Teamscale</a> ©️ — Static and dynamic analysis tool supporting more than 25 languages and direct IDE integration. Free hosting for Open Source projects available on request. Free academic licenses available.</p>
</li>
<li>
<p dir="auto"><a href="https://tca.tencent.com/" rel="nofollow">TencentCodeAnalysis</a> — Tencent Cloud Code Analysis (TCA for short, code-named CodeDog inside the company early) is a comprehensive platform for code analysis and issue tracking. TCA consist of three components, server, web and client. It integrates of a number of self-developed tools, and also supports dynamic integration of code analysis tools in various programming languages.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/deepfence/ThreatMapper">ThreatMapper</a> — Vulnerability Scanner and Risk Evaluation for containers, serverless and hosts at runtime. ThreatMapper generates runtime BOMs from dependencies and operating system packages, matches against multiple threat feeds, scans for unprotected secrets, and scores issues based on severity and risk-of-exploit.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/preslavmihaylov/todocheck">todocheck</a> — Linter for integrating annotated TODOs with your issue trackers</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/aquasecurity/trivy">trivy</a> — A Simple and Comprehensive Vulnerability Scanner for Containers and other Artifacts, Suitable for CI. Trivy detects vulnerabilities of OS packages (Alpine, RHEL, CentOS, etc.) and application dependencies (Bundler, Composer, npm, yarn, etc.). Checks containers and filesystems.</p>
</li>
<li>
<p dir="auto"><a href="https://trunk.io/" rel="nofollow">trunk</a> ©️ — Modern repositories include many technologies, each with its own set of linters. With 30+ linters and counting, Trunk makes it dead-simple to identify, install, configure, and run the right linters, static analyzers, and formatters for all your repos.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Tencent/TscanCode">TscanCode</a> — A fast and accurate static analysis solution for C/C++, C#, Lua codes provided by Tencent. Using GPLv3 license.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Yelp/undebt">Undebt</a> — Language-independent tool for massive, automatic, programmable refactoring based on simple pattern definitions.</p>
</li>
<li>
<p dir="auto"><a href="https://www.scitools.com/" rel="nofollow">Understand</a> ©️ — Code visualization tool that provides code analysis, standards testing, metrics, graphing, dependency analysis and more for Ada, VHDL, and others.</p>
</li>
<li>
<p dir="auto"><a href="https://unibeautify.com/" rel="nofollow">Unibeautify</a> — Universal code beautifier with a GitHub app. Supports HTML, CSS, JavaScript, TypeScript, JSX, Vue, C++, Go, Objective-C, Java, Python, PHP, GraphQL, Markdown, and more.</p>
</li>
<li>
<p dir="auto"><a href="https://www.jetbrains.com/upsource" rel="nofollow">Upsource</a> ©️ — Code review tool with static code analysis and code-aware navigation for Java, PHP, JavaScript and Kotlin.</p>
</li>
<li>
<p dir="auto"><a href="https://www.veracode.com/security/static-code-analysis" rel="nofollow">Veracode</a> ©️ — Find flaws in binaries and bytecode without requiring source. Support all major programming languages: Java, .NET, JavaScript, Swift, Objective-C, C, C++ and more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/wala/WALA">WALA</a> — Static analysis capabilities for Java bytecode and related languages and for JavaScript.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/googleprojectzero/weggli">weggli</a> — A fast and robust semantic search tool for C and C++ codebases. It is designed to help security researchers identify interesting functionality in large codebases.</p>
</li>
<li>
<p dir="auto"><a href="https://www.whitehatsec.com/platform/static-application-security-testing" rel="nofollow">WhiteHat Application Security Platform</a> ©️ — WhiteHat Scout (for Developers) combined with WhiteHat Sentinel Source (for Operations) supporting WhiteHat Top 40 and OWASP Top 10.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/fimbullinter/wotan">Wotan</a> <g-emoji alias="warning">⚠️</g-emoji> — Pluggable TypeScript and JavaScript linter.</p>
</li>
<li>
<p dir="auto"><a href="https://developer.apple.com/xcode" rel="nofollow">XCode</a> ©️ — XCode provides a pretty decent UI for <a href="https://clang-analyzer.llvm.org/xcode.html" rel="nofollow">Clang's</a> static code analyzer (C/C++, Obj-C).</p>
</li>
</ul>
<h2 tabindex="-1" id="user-content-other-1" dir="auto"><a href="#other-1">Other</a></h2>
<h2 id="user-content-env" tabindex="-1" dir="auto"><a href="#env">.env</a></h2>
<ul dir="auto">
<li><a href="https://www.gitguardian.com/ggshield" rel="nofollow">GitGuardian ggshield</a> — ggshield is a CLI application that runs in your local environment  or in a CI environment to help you detect more than 350+ types of secrets,  as well as other potential security vulnerabilities or policy breaks affecting your codebase.</li>
</ul>
<h2 id="user-content-ansible" tabindex="-1" dir="auto"><a href="#ansible">Ansible</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://kics.io/" rel="nofollow">kics</a> — Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible</p>
</li>
<li>
<p dir="auto"><a href="https://steampunk.si/spotter/" rel="nofollow">Steampunk Spotter</a> ©️ — Ansible Playbook Scanning Tool that analyzes and offers recommendations for your playbooks.</p>
</li>
</ul>
<h2 id="user-content-archive" tabindex="-1" dir="auto"><a href="#archive">Archive</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/ferivoz/alquitran">alquitran</a> <g-emoji alias="warning">⚠️</g-emoji> — Inspects tar archives and tries to spot portability issues in regard  to POSIX 2017 pax specification and common tar implementations.
This project is intended to be used by maintainers of projects who want to offer portable source code archives for as many systems as possible. Checking tar archives with alquitran before publishing them should help spotting issues before they reach distributors and users.</p>
</li>
<li>
<p dir="auto"><a href="https://packj.dev/" rel="nofollow">packj</a> — Packj (pronounced package) is a command line (CLI) tool to vet open-source software packages for "risky" attributes that make them vulnerable to supply chain attacks. This is the tool behind our large-scale security analysis platform Packj.dev that continuously vets packages and provides free reports.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ronomon/pure">pure</a> <g-emoji alias="warning">⚠️</g-emoji> — Pure is a static analysis file format checker that checks ZIP files for dangerous compression ratios, spec deviations, malicious archive signatures, mismatching local and central directory headers, ambiguous UTF-8 filenames, directory and symlink traversals, invalid MS-DOS dates, overlapping headers, overflow, underflow,  sparseness, accidental buffer bleeds etc.</p>
</li>
</ul>
<h2 id="user-content-azure-resource-manager" tabindex="-1" dir="auto"><a href="#azure-resource-manager">Azure Resource Manager</a></h2>
<ul dir="auto">
<li><a href="https://azsk.azurewebsites.net/" rel="nofollow">AzSK</a> — Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM.</li>
</ul>
<h2 id="user-content-binaries" tabindex="-1" dir="auto"><a href="#binaries">Binaries</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/angr/angr">angr</a> — Binary code analysis tool that also supports symbolic execution.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/quarkslab/binbloom">binbloom</a> — Analyzes a raw binary firmware and determines features like endianness or the loading address.  The tool is compatible with all architectures.
Loading address: binbloom can parse a raw binary firmware and determine its loading address. Endianness: binbloom can use heuristics to determine the endianness of a firmware. UDS Database: binbloom can parse a raw binary firmware and check if it contains an array containing UDS command IDs.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Microsoft/binskim">BinSkim</a> — A binary static analysis tool that provides security and correctness results for Windows portable executables.</p>
</li>
<li>
<p dir="auto"><a href="https://www.blackducksoftware.com/" rel="nofollow">Black Duck</a> ©️ — Tool to analyze source code and binaries for reusable code, necessary licenses and potential security aspects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/bloaty">bloaty</a> — Ever wondered what's making your binary big? Bloaty McBloatface will show you a size profile of the binary so you can understand what's taking up space inside. Bloaty performs a deep analysis of the binary. Using custom ELF, DWARF, and Mach-O parsers,  Bloaty aims to accurately attribute every byte of the binary to the symbol or compileunit that produced it.  It will even disassemble the binary looking for references to anonymous data. F</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/RazrFalcon/cargo-bloat">cargo-bloat</a> — Find out what takes most of the space in your executable. supports ELF (Linux, BSD), Mach-O (macOS) and PE (Windows) binaries.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/fkie-cad/cwe_checker">cwe_checker</a> — cwe_checker finds vulnerable patterns in binary executables.</p>
</li>
<li>
<p dir="auto"><a href="https://ghidra-sre.org/" rel="nofollow">Ghidra</a> — A software reverse engineering (SRE) suite of tools developed by NSA's Research Directorate in support of the Cybersecurity mission</p>
</li>
<li>
<p dir="auto"><a href="https://www.hopperapp.com/" rel="nofollow">Hopper</a> ©️ — macOS and Linux reverse engineering tool that lets you disassemble, decompile and debug applications. Hopper displays the code using different representations, e.g. the Control Flow Graph, and the pseudo-code of a procedure. Supports Apple Silicon.</p>
</li>
<li>
<p dir="auto"><a href="https://www.hex-rays.com/products/ida/support/download_freeware" rel="nofollow">IDA Free</a> ©️ — Binary code analysis tool.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jkinder/jakstab">Jakstab</a> — Jakstab is an Abstract Interpretation-based, integrated disassembly and static analysis framework for designing analyses on executables and recovering reliable control flow graphs.</p>
</li>
<li>
<p dir="auto"><a href="https://www.pnfsoftware.com/" rel="nofollow">JEB Decompiler</a> ©️ — Decompile and debug binary code. Break down and analyze document files. Android Dalvik, MIPS, ARM, Intel x86, Java, WebAssembly &amp; Ethereum Decompilers.</p>
</li>
<li>
<p dir="auto"><a href="https://ktool.cynder.me/en/latest/ktool.html" rel="nofollow">ktool</a> — Fully cross-platform toolkit and library for MachO+Obj-C editing/analysis. Includes a cli kit, a curses GUI, ObjC header dumping, and much more.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/JusticeRage/Manalyze">Manalyze</a> — A static analyzer, which checks portable executables for malicious content.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lifting-bits/mcsema">mcsema</a> <g-emoji alias="warning">⚠️</g-emoji> — Framework for lifting x86, amd64, aarch64, sparc32, and sparc64 program binaries to LLVM bitcode. It translates ("lifts") executable binaries from native machine code to LLVM bitcode, which is very useful for performing program analysis methods.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/horsicq/Nauz-File-Detector">Nauz File Detector</a> — Static Linker/Compiler/Tool detector for Windows, Linux and MacOS.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Shnatsel/rust-audit">rust-audit</a> — Audit Rust binaries for known bugs or security vulnerabilities. This works by embedding data about the dependency tree (Cargo.lock) in JSON format into a dedicated linker section of the compiled executable.</p>
</li>
<li>
<p dir="auto"><a href="https://rustwasm.github.io/twiggy" rel="nofollow">Twiggy</a> — Analyzes a binary's call graph to profile code size. The goal is to slim down wasm binary size.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/vmware/chap">VMware chap</a> — chap analyzes un-instrumented ELF core files for leaks, memory growth, and corruption.  It is sufficiently reliable that it can be used in automation to catch leaks before  they are committed. As an interactive tool, it helps explain memory growth,  can identify some forms of corruption, and supplements a debugger  by giving the status of various memory locations.</p>
</li>
<li>
<p dir="auto"><a href="https://zydis.re/" rel="nofollow">zydis</a> — Fast and lightweight x86/x86-64 disassembler library</p>
</li>
</ul>
<h2 id="user-content-build-tools" tabindex="-1" dir="auto"><a href="#build-tools">Build tools</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/mrtazz/checkmake">checkmake</a> — Linter / Analyzer for Makefiles.</p>
</li>
<li>
<p dir="auto"><a href="https://www.freebsd.org/cgi/man.cgi?query=portlint&amp;sektion=1&amp;manpath=FreeBSD+8.1-RELEASE+and+Ports" rel="nofollow">portlint</a> — A verifier for FreeBSD and DragonFlyBSD port directories.</p>
</li>
</ul>
<h2 id="user-content-csssassscss" tabindex="-1" dir="auto"><a href="#csssassscss">CSS/SASS/SCSS</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://cssstats.com/" rel="nofollow">CSS Stats</a> — Potentially interesting stats on stylesheets.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/csscomb/csscomb.js">CSScomb</a> — A coding style formatter for CSS. Supports own configurations to make style sheets beautiful and consistent.</p>
</li>
<li>
<p dir="auto"><a href="http://csslint.net/" rel="nofollow">CSSLint</a> — Does basic syntax checking and finds problematic patterns or signs of inefficiency.</p>
</li>
<li>
<p dir="auto"><a href="https://graphmycss.com/" rel="nofollow">GraphMyCSS.com</a> — CSS Specificity Graph Generator.</p>
</li>
<li>
<p dir="auto"><a href="https://validator.github.io/validator/" rel="nofollow">Nu Html Checker</a> — Helps you catch problems in your HTML/CSS/SVG</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/katiefenn/parker">Parker</a> <g-emoji alias="warning">⚠️</g-emoji> — Stylesheet analysis tool.</p>
</li>
<li>
<p dir="auto"><a href="https://postcss.org/" rel="nofollow">PostCSS</a> — A tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more.</p>
</li>
<li>
<p dir="auto"><a href="https://www.projectwallace.com/" rel="nofollow">Project Wallace CSS Analyzer</a> — Analytics for CSS, part of <a href="https://www.projectwallace.com/" rel="nofollow">Project Wallace</a>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sasstools/sass-lint">sass-lint</a> <g-emoji alias="warning">⚠️</g-emoji> — A Node-only Sass linter for both sass and scss syntax.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/brigade/scss-lint">scsslint</a> — Linter for SCSS files.</p>
</li>
<li>
<p dir="auto"><a href="https://jonassebastianohlsson.com/specificity-graph" rel="nofollow">Specificity Graph</a> — CSS Specificity Graph Generator.</p>
</li>
<li>
<p dir="auto"><a href="http://stylelint.io/" rel="nofollow">Stylelint</a> — Linter for SCSS/CSS files.</p>
</li>
</ul>
<h2 id="user-content-config-files" tabindex="-1" dir="auto"><a href="#config-files">Config Files</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://dotenv-linter.readthedocs.io/en/latest" rel="nofollow">dotenv-linter</a> — Linting dotenv files like a charm.</p>
</li>
<li>
<p dir="auto"><a href="https://dotenv-linter.github.io/#/" rel="nofollow">dotenv-linter (Rust)</a> — Lightning-fast linter for .env files. Written in Rust</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/yandex/gixy">gixy</a> — A tool to analyze Nginx configuration. The main goal is to prevent misconfiguration and automate flaw detection.</p>
</li>
</ul>
<h2 id="user-content-configuration-management" tabindex="-1" dir="auto"><a href="#configuration-management">Configuration Management</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://docs.ansible.com/ansible-lint" rel="nofollow">ansible-lint</a> — Checks playbooks for practices and behaviour that could potentially be improved.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/aws-cloudformation/cloudformation-guard">AWS CloudFormation Guard</a> — Check local CloudFormation templates against policy-as-code rules  and generate rules from existing templates.</p>
</li>
<li>
<p dir="auto"><a href="https://azsk.azurewebsites.net/" rel="nofollow">AzSK</a> — Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/awslabs/cfn-python-lint">cfn-lint</a> — AWS Labs CloudFormation linter.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/stelligent/cfn_nag">cfn_nag</a> — A linter for AWS CloudFormation templates.</p>
</li>
<li>
<p dir="auto"><a href="https://www.checkov.io/" rel="nofollow">checkov</a> — Static analysis tool for Terraform files (tf&gt;=v0.12), preventing cloud misconfigs at build time.</p>
</li>
<li>
<p dir="auto"><a href="https://docs.chef.io/cookstyle.html" rel="nofollow">cookstyle</a> — Cookstyle is a linting tool based on the RuboCop Ruby linting tool for Chef cookbooks.</p>
</li>
<li>
<p dir="auto"><a href="http://www.foodcritic.io/" rel="nofollow">foodcritic</a> — A lint tool that checks Chef cookbooks for common problems.</p>
</li>
<li>
<p dir="auto"><a href="https://kics.io/" rel="nofollow">kics</a> — Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/voxpupuli/metadata-json-lint">metadata-json-lint</a> — Tool to check the validity of Puppet metadata.json files.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rodjek/puppet-lint">Puppet Lint</a> <g-emoji alias="warning">⚠️</g-emoji> — Check that your Puppet manifests conform to the style guide.</p>
</li>
<li>
<p dir="auto"><a href="https://steampunk.si/spotter/" rel="nofollow">Steampunk Spotter</a> ©️ — Ansible Playbook Scanning Tool that analyzes and offers recommendations for your playbooks.</p>
</li>
<li>
<p dir="auto"><a href="https://terraform-compliance.com/" rel="nofollow">terraform-compliance</a> — A lightweight, compliance- and security focused, BDD test framework against Terraform.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/cesar-rodriguez/terrascan">terrascan</a> — Collection of security and best practice tests for static code analysis of Terraform templates.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/wata727/tflint">tflint</a> — A Terraform linter for detecting errors that can not be detected by <code>terraform plan</code>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tfsec/tfsec">tfsec</a> — Terraform static analysis tool that prevents potential security issues by checking cloud misconfigurations at build time and directly integrates with the HCL parser for better results. Checks for violations of AWS, Azure and GCP security best practice recommendations.</p>
</li>
</ul>
<h2 id="user-content-containers" tabindex="-1" dir="auto"><a href="#containers">Containers</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://anchore.io/" rel="nofollow">anchore</a> — Discover, analyze, and certify container images. A service that analyzes Docker images and applies user-defined acceptance policies  to allow automated container image validation and certification</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/coreos/clair">clair</a> — Vulnerability Static Analysis for Containers.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/banyanops/collector">collector</a> <g-emoji alias="warning">⚠️</g-emoji> — Run arbitrary scripts inside containers, and gather useful information.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/eliasgranderubio/dagda">dagda</a> — Perform static analysis of known vulnerabilities in docker images/containers.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/garethr/docker-label-inspector">Docker Label Inspector</a> <g-emoji alias="warning">⚠️</g-emoji> — Lint and validate Dockerfile labels.</p>
</li>
<li>
<p dir="auto"><a href="https://www.gitguardian.com/ggshield" rel="nofollow">GitGuardian ggshield</a> — ggshield is a CLI application that runs in your local environment  or in a CI environment to help you detect more than 350+ types of secrets,  as well as other potential security vulnerabilities or policy breaks affecting your codebase.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lukasmartinelli/hadolint">Haskell Dockerfile Linter</a> — A smarter Dockerfile linter that helps you build best practice Docker images.</p>
</li>
<li>
<p dir="auto"><a href="https://kics.io/" rel="nofollow">kics</a> — Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/appvia/krane">krane</a> — Krane is a simple Kubernetes RBAC static analysis tool.
It identifies potential security risks in K8s RBAC design and makes suggestions on how to mitigate them. Krane dashboard presents current RBAC security posture and lets you navigate through its definition.</p>
</li>
<li>
<p dir="auto"><a href="https://www.open-scap.org/" rel="nofollow">OpenSCAP</a> — Suite of automated audit tools to examine the configuration and  known vulnerabilities following the NIST-certified Security  Content Automation Protocol (SCAP).</p>
</li>
<li>
<p dir="auto"><a href="https://www.qualys.com/apps/container-security" rel="nofollow">Qualys Container Security</a> ©️ — Container native application protection to provide visibility and control of containerized applications.</p>
</li>
<li>
<p dir="auto"><a href="https://sysdig.com/" rel="nofollow">sysdig</a> ©️ — A secure DevOps platform for cloud and container forensics. Built on an open source stack, Sysdig provides Docker image scanning and created Falco, the open standard for runtime threat detection for containers, Kubernetes and cloud.</p>
</li>
<li>
<p dir="auto"><a href="https://vuls.io/" rel="nofollow">Vuls</a> — Agent-less Linux vulnerability scanner based on information from NVD, OVAL, etc.  It has some container image support, although is not a container specific tool.</p>
</li>
</ul>
<h2 id="user-content-continuous-integration" tabindex="-1" dir="auto"><a href="#continuous-integration">Continuous Integration</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://rhysd.github.io/actionlint" rel="nofollow">actionlint</a> — Static checker for GitHub Actions workflow files. Provides an online version.</p>
</li>
<li>
<p dir="auto"><a href="https://azsk.azurewebsites.net/" rel="nofollow">AzSK</a> — Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM.</p>
</li>
<li>
<p dir="auto"><a href="https://codeclimate.com/" rel="nofollow">Code Climate</a> — The open and extensible static analysis platform, for everyone.</p>
</li>
<li>
<p dir="auto"><a href="https://about.codecov.io/" rel="nofollow">Codecov</a> ©️ — Codecov is a company that provides code coverage tools for developers and engineering leaders  to gain visibility into their code coverage.
They offer flexible and unified reporting, seamless coverage insights, and robust coverage controls. Codecov supports over 20 languages and is CI/CD agnostic. Over 29,000 organizations and 1 million developers use Codecov. Codecov has recently joined Sentry.</p>
</li>
<li>
<p dir="auto"><a href="https://www.diffblue.com/" rel="nofollow">Diffblue</a> ©️ — Diffblue is a software company that provides AI-powered code analysis and testing solutions for software development teams.
Its technology helps developers automate testing, find bugs, and reduce manual labor in their software development processes. The company's main product, Diffblue Cover, uses AI to generate and run unit tests for Java code, helping to catch errors and improve code quality.</p>
</li>
<li>
<p dir="auto"><a href="https://www.exakat.io/" rel="nofollow">exakat</a> — An automated code reviewing engine for PHP.</p>
</li>
<li>
<p dir="auto"><a href="https://www.gitguardian.com/ggshield" rel="nofollow">GitGuardian ggshield</a> — ggshield is a CLI application that runs in your local environment  or in a CI environment to help you detect more than 350+ types of secrets,  as well as other potential security vulnerabilities or policy breaks affecting your codebase.</p>
</li>
<li>
<p dir="auto"><a href="https://goblint.in.tum.de/" rel="nofollow">Goblint</a> — A static analyzer for the analysis of multi-threaded C programs. Its primary focus is the  detection of data races, but it also reports other runtime errors, such as buffer overflows and null-pointer dereferences.</p>
</li>
<li>
<p dir="auto"><a href="https://nitpick-ci.com/" rel="nofollow">Nitpick CI</a> ©️ — Automated PHP code review.</p>
</li>
<li>
<p dir="auto"><a href="https://www.pullrequest.com/" rel="nofollow">PullRequest</a> ©️ — Code review as a service with built-in static analysis.  Increase velocity and reduce technical debt through quality code review by expert engineers backed by best-in-class automation.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/apiology/quality">quality</a> — Runs quality checks on your code using community tools, and makes sure your numbers don't get any worse over time.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/quantifiedcode/quantifiedcode">QuantifiedCode</a> <g-emoji alias="warning">⚠️</g-emoji> — Automated code review &amp; repair. It helps you to keep track of issues and metrics in your software projects, and can be easily extended to support new types of analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jimbethancourt/RefactorFirst">RefactorFirst</a> — Identifies and prioritizes God Classes and Highly Coupled classes in Java codebases you should refactor first.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/haya14busa/reviewdog">Reviewdog</a> — A tool for posting review comments from any linter in any code hosting service.</p>
</li>
<li>
<p dir="auto"><a href="https://insight.symfony.com/" rel="nofollow">Symfony Insight</a> ©️ — Detect security risks, find bugs and provide actionable metrics for PHP projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tomasbjerre/violations-lib">Violations Lib</a> — Java library for parsing report files from static code analysis. Used by a bunch of Jenkins, Maven and Gradle plugins.</p>
</li>
</ul>
<h2 id="user-content-deno" tabindex="-1" dir="auto"><a href="#deno">Deno</a></h2>
<ul dir="auto">
<li><a href="https://github.com/denoland/deno_lint">deno_lint</a> — Official linter for Deno.</li>
</ul>
<h2 id="user-content-embedded" tabindex="-1" dir="auto"><a href="#embedded">Embedded</a></h2>
<ul dir="auto">
<li><a href="https://github.com/priv-kweihmann/oelint-adv">oelint-adv</a> — Linter for bitbake recipes used in open-embedded and YOCTO</li>
</ul>
<h2 id="user-content-embedded-ruby-aka-erb-eruby" tabindex="-1" dir="auto"><a href="#embedded-ruby-aka-erb-eruby">Embedded Ruby (a.k.a. ERB, eRuby)</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/Shopify/erb-lint">ERB Lint</a> — Lint your ERB or HTML files</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/threedaymonk/htmlbeautifier">htmlbeautifier</a> — A normaliser/beautifier for HTML that also understands embedded Ruby. Ideal for tidying up Rails templates.</p>
</li>
</ul>
<h2 id="user-content-gherkin" tabindex="-1" dir="auto"><a href="#gherkin">Gherkin</a></h2>
<ul dir="auto">
<li><a href="https://github.com/vsiakka/gherkin-lint">gherkin-lint</a> — A linter for the Gherkin-Syntax written in Javascript.</li>
</ul>
<h2 id="user-content-html" tabindex="-1" dir="auto"><a href="#html">HTML</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/angular-eslint/angular-eslint#readme">Angular ESLint</a> — Linter for Angular projects</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/twbs/bootlint">Bootlint</a> <g-emoji alias="warning">⚠️</g-emoji> — An HTML linter for Bootstrap projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Shopify/erb-lint">ERB Lint</a> — Lint your ERB or HTML files</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/twbs/grunt-bootlint">grunt-bootlint</a> <g-emoji alias="warning">⚠️</g-emoji> — A Grunt wrapper for <a href="https://github.com/twbs/bootlint">Bootlint</a>, the HTML linter for Bootstrap projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tschortsch/gulp-bootlint">gulp-bootlint</a> <g-emoji alias="warning">⚠️</g-emoji> — A gulp wrapper for <a href="https://github.com/twbs/bootlint">Bootlint</a>, the HTML linter for Bootstrap projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/philipwalton/html-inspector">HTML Inspector</a> <g-emoji alias="warning">⚠️</g-emoji> — HTML Inspector is a code quality tool to help you and your team write better markup.</p>
</li>
<li>
<p dir="auto"><a href="http://www.html-tidy.org/" rel="nofollow">HTML Tidy</a> — Corrects and cleans up HTML and XML documents by fixing markup errors and upgrading legacy code to modern standards.</p>
</li>
<li>
<p dir="auto"><a href="https://html-validate.org/" rel="nofollow">HTML-Validate</a> — Offline HTML5 validator.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/threedaymonk/htmlbeautifier">htmlbeautifier</a> — A normaliser/beautifier for HTML that also understands embedded Ruby. Ideal for tidying up Rails templates.</p>
</li>
<li>
<p dir="auto"><a href="https://htmlhint.com/" rel="nofollow">HTMLHint</a> — A Static Code Analysis Tool for HTML.</p>
</li>
<li>
<p dir="auto"><a href="https://validator.github.io/validator/" rel="nofollow">Nu Html Checker</a> — Helps you catch problems in your HTML/CSS/SVG</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Polymer/tools/tree/master/packages/analyzer">Polymer-analyzer</a> — A static analysis framework for Web Components.</p>
</li>
</ul>
<h2 id="user-content-json" tabindex="-1" dir="auto"><a href="#json">JSON</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://jsonlint.com/" rel="nofollow">jsonlint</a> — A JSON parser and validator with a CLI. Standalone version of jsonlint.com</p>
</li>
<li>
<p dir="auto"><a href="https://stoplight.io/open-source/spectral" rel="nofollow">Spectral</a> — A flexible JSON/YAML linter, with out-of-the-box support for OpenAPI v2/v3 and AsyncAPI v2.</p>
</li>
</ul>
<h2 id="user-content-kubernetes" tabindex="-1" dir="auto"><a href="#kubernetes">Kubernetes</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/helm/chart-testing">chart-testing</a> — ct is the the tool for testing Helm charts.  It is meant to be used for linting and testing pull requests.  It automatically detects charts changed against the target branch.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/digitalocean/clusterlint">clusterlint</a> — Clusterlint queries live Kubernetes clusters for resources, executes common and  platform specific checks against these resources and provides actionable feedback to cluster operators.  It is a non invasive tool that is run externally. Clusterlint does not alter the resource configurations.</p>
</li>
<li>
<p dir="auto"><a href="https://datree.io/" rel="nofollow">Datree</a> — A CLI tool to prevent Kubernetes misconfigurations by ensuring that manifests and Helm charts follow best practices as well as your organization’s policies</p>
</li>
<li>
<p dir="auto"><a href="https://kics.io/" rel="nofollow">kics</a> — Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/uswitch/klint">klint</a> — A tool that listens to changes in Kubernetes resources and runs linting rules against them. Identify and debug erroneous objects and nudge objects in line with the policies as both change over time. Klint helps us encode checks and proactively alert teams when they need to take action.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/appvia/krane">krane</a> — Krane is a simple Kubernetes RBAC static analysis tool.
It identifies potential security risks in K8s RBAC design and makes suggestions on how to mitigate them. Krane dashboard presents current RBAC security posture and lets you navigate through its definition.</p>
</li>
<li>
<p dir="auto"><a href="https://aquasecurity.github.io/kube-hunter/" rel="nofollow">kube-hunter</a> <g-emoji alias="warning">⚠️</g-emoji> — Hunt for security weaknesses in Kubernetes clusters.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/viglesiasce/kube-lint">kube-lint</a> — A linter for Kubernetes resources with a customizable rule set. You define a list of rules that you would like to validate against your  resources and kube-lint will evaluate those rules against them.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/stackrox/kube-linter">kube-linter</a> — KubeLinter is a static analysis tool that checks Kubernetes YAML files  and Helm charts to ensure the applications represented in them adhere to best practices.</p>
</li>
<li>
<p dir="auto"><a href="https://kube-score.com/" rel="nofollow">kube-score</a> — Static code analysis of your Kubernetes object definitions.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/yannh/kubeconform">kubeconform</a> — A fast Kubernetes manifests validator with support for custom resources.
It is inspired by, contains code from and is designed to stay close to <a href="https://analysis-tools.dev/tool/kubeval" rel="nofollow">Kubeval</a>, but with the following improvements: * high performance: will validate &amp; download manifests over multiple routines, caching downloaded files in memory * configurable list of remote, or local schemas locations, enabling validating Kubernetes custom resources (CRDs) and offline validation capabilities * uses by default a self-updating fork of the schemas registry maintained by the kubernetes-json-schema project - which guarantees up-to-date schemas for all recent versions of Kubernetes.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/stackrox/kube-linter">KubeLinter</a> — KubeLinter is a static analysis tool that checks Kubernetes YAML files and Helm charts to ensure the applications represented in them adhere to best practices.</p>
</li>
<li>
<p dir="auto"><a href="https://kubeval.instrumenta.dev/" rel="nofollow">kubeval</a> — Validates your Kubernetes configuration files and supports multiple Kubernetes versions.</p>
</li>
</ul>
<h2 id="user-content-latex" tabindex="-1" dir="auto"><a href="#latex">LaTeX</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="http://www.nongnu.org/chktex" rel="nofollow">ChkTeX</a> — A linter for LaTex which catches some typographic errors LaTeX oversees.</p>
</li>
<li>
<p dir="auto"><a href="https://www.ctan.org/pkg/lacheck" rel="nofollow">lacheck</a> — A tool for finding common mistakes in LaTeX documents.</p>
</li>
<li>
<p dir="auto"><a href="https://texlab.netlify.app/" rel="nofollow">TeXLab</a> — A Language Server Protocol implementation for TeX/LaTeX, including lint capabilities.</p>
</li>
</ul>
<h2 id="user-content-laravel" tabindex="-1" dir="auto"><a href="#laravel">Laravel</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.laravel-enlightn.com/" rel="nofollow">Enlightn</a> — A static and dynamic analysis tool for Laravel applications that provides recommendations to improve the performance, security and code reliability of Laravel apps. Contains 120 automated checks.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/nunomaduro/larastan">larastan</a> — Adds static analysis to Laravel improving developer productivity and code quality. It is a wrapper around PHPStan.</p>
</li>
</ul>
<h2 id="user-content-makefiles" tabindex="-1" dir="auto"><a href="#makefiles">Makefiles</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/mrtazz/checkmake">checkmake</a> — Linter / Analyzer for Makefiles.</p>
</li>
<li>
<p dir="auto"><a href="https://www.freebsd.org/cgi/man.cgi?query=portlint&amp;sektion=1&amp;manpath=FreeBSD+8.1-RELEASE+and+Ports" rel="nofollow">portlint</a> — A verifier for FreeBSD and DragonFlyBSD port directories.</p>
</li>
</ul>
<h2 id="user-content-markdown" tabindex="-1" dir="auto"><a href="#markdown">Markdown</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/DavidAnson/markdownlint">markdownlint</a> — Node.js -based style checker and lint tool for Markdown/CommonMark files.</p>
</li>
<li>
<p dir="auto"><a href="https://mdformat.rtfd.io/" rel="nofollow">mdformat</a> — CommonMark compliant Markdown formatter</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/mivok/markdownlint">mdl</a> — A tool to check Markdown files and flag style issues.</p>
</li>
<li>
<p dir="auto"><a href="https://remark.js.org/" rel="nofollow">remark-lint</a> — Pluggable Markdown code style linter written in JavaScript.</p>
</li>
<li>
<p dir="auto"><a href="https://textlint.github.io/" rel="nofollow">textlint</a> — textlint is an open source text linting utility written in JavaScript.</p>
</li>
</ul>
<h2 id="user-content-metalinter" tabindex="-1" dir="auto"><a href="#metalinter">Metalinter</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/ContinuumIO/ciocheck">ciocheck</a> <g-emoji alias="warning">⚠️</g-emoji> — Linter, formatter and test suite helper. As a linter, it is a wrapper around <code>pep8</code>, <code>pydocstyle</code>, <code>flake8</code>, and <code>pylint</code>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/PyCQA/flake8">flake8</a> — A wrapper around <code>pyflakes</code>, <code>pycodestyle</code> and <code>mccabe</code>.</p>
</li>
<li>
<p dir="auto"><a href="https://pypi.org/project/flakeheaven/" rel="nofollow">flakeheaven</a> — flakeheaven is a python linter built around flake8 to enable inheritable and complex toml configuration.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/alecthomas/gometalinter">Go Meta Linter</a> <g-emoji alias="warning">⚠️</g-emoji> — Concurrently run Go lint tools and normalise their output. Use <code>golangci-lint</code> for new projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/360EntSecGroup-Skylar/goreporter">goreporter</a> — Concurrently runs many linters and normalises their output to a report.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/adamchainz/multilint">multilint</a> <g-emoji alias="warning">⚠️</g-emoji> — A wrapper around <code>flake8</code>, <code>isort</code> and <code>modernize</code>.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/PyCQA/prospector">prospector</a> — A wrapper around <code>pylint</code>, <code>pep8</code>, <code>mccabe</code> and others.</p>
</li>
</ul>
<h2 id="user-content-mobile" tabindex="-1" dir="auto"><a href="#mobile">Mobile</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="http://tools.android.com/tips/lint" rel="nofollow">Android Lint</a> — Run static analysis on Android projects.</p>
</li>
<li>
<p dir="auto"><a href="https://passy.github.io/android-lint-summary" rel="nofollow">android-lint-summary</a> <g-emoji alias="warning">⚠️</g-emoji> — Combines lint errors of multiple projects into one output, check lint results of multiple sub-projects at once.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/secure-software-engineering/FlowDroid">FlowDroid</a> — Static taint analysis tool for Android applications.</p>
</li>
<li>
<p dir="auto"><a href="https://www.kitploit.com/2020/08/iblessing-ios-security-exploiting.html" rel="nofollow">iblessing</a> <g-emoji alias="warning">⚠️</g-emoji> — iblessing is an iOS security exploiting toolkit. It can be used for reverse engineering, binary analysis and vulnerability mining.</p>
</li>
<li>
<p dir="auto"><a href="https://mariana-tren.ch/" rel="nofollow">Mariana Trench</a> — Our security focused static analysis tool for Android and Java applications. Mariana Trench analyzes Dalvik bytecode and is built to run fast on large codebases (10s of millions of lines of code). It can find vulnerabilities as code changes, before it ever lands in your repository.</p>
</li>
<li>
<p dir="auto"><a href="https://oversecured.com/" rel="nofollow">Oversecured</a> ©️ — Enterprise vulnerability scanner for Android and iOS apps. It allows app owners and developers to secure each new version of a mobile app by integrating Oversecured into the development process.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/GeoffreyHecht/paprika">paprika</a> <g-emoji alias="warning">⚠️</g-emoji> — A toolkit to detect some code smells in analyzed Android applications.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/linkedin/qark">qark</a> <g-emoji alias="warning">⚠️</g-emoji> — Tool to look for several security related Android application vulnerabilities.</p>
</li>
<li>
<p dir="auto"><a href="https://fbredex.com/" rel="nofollow">redex</a> — Redex provides a framework for reading, writing, and analyzing .dex files, and a set of optimization passes  that use this framework to improve the bytecode. An APK optimized by Redex should be smaller and faster.</p>
</li>
</ul>
<h2 id="user-content-nix" tabindex="-1" dir="auto"><a href="#nix">Nix</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/astro/deadnix">deadnix</a> — Scan Nix files for dead code (unused variable bindings)</p>
</li>
<li>
<p dir="auto"><a href="https://git.peppe.rs/languages/statix/about/" rel="nofollow">statix</a> — Lints and suggestions for the Nix programming language. "statix check" highlights antipatterns in Nix code. "statix fix" can fix several such occurrences.</p>
</li>
</ul>
<h2 id="user-content-nodejs" tabindex="-1" dir="auto"><a href="#nodejs">Node.js</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/lirantal/lockfile-lint">lockfile-lint</a> — Lint an npm or yarn lockfile to analyze and detect security issues</p>
</li>
<li>
<p dir="auto"><a href="https://opensecurity.in/" rel="nofollow">njsscan</a> — A static application testing (SAST) tool that can find insecure code patterns in your node.js applications using simple pattern matcher from libsast and syntax-aware semantic code pattern search tool semgrep.</p>
</li>
<li>
<p dir="auto"><a href="https://opensecurity.in/" rel="nofollow">NodeJSScan</a> — A static security code scanner for Node.js applications powered by libsast and semgrep that builds on the njsscan cli tool. It features a UI with various dashboards about an application's security status.</p>
</li>
<li>
<p dir="auto"><a href="http://standardjs.com/" rel="nofollow">standard</a> — An npm module that checks for Javascript Styleguide issues.</p>
</li>
</ul>
<h2 id="user-content-packages" tabindex="-1" dir="auto"><a href="#packages">Packages</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://lintian.debian.org/" rel="nofollow">lintian</a> — Static analysis tool for Debian packages.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/rpm-software-management/rpmlint">rpmlint</a> — Tool for checking common errors in rpm packages.</p>
</li>
</ul>
<h2 id="user-content-protocol-buffers" tabindex="-1" dir="auto"><a href="#protocol-buffers">Protocol Buffers</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://buf.build/" rel="nofollow">buf</a> — Provides a CLI linter that enforces good API design choices and structure</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/yoheimuta/protolint">protolint</a> — Pluggable linter and fixer to enforce Protocol Buffer style and conventions.</p>
</li>
</ul>
<h2 id="user-content-puppet" tabindex="-1" dir="auto"><a href="#puppet">Puppet</a></h2>
<ul dir="auto">
<li><a href="https://github.com/voxpupuli/metadata-json-lint">metadata-json-lint</a> — Tool to check the validity of Puppet metadata.json files.</li>
</ul>
<h2 id="user-content-rails" tabindex="-1" dir="auto"><a href="#rails">Rails</a></h2>
<ul dir="auto">
<li><a href="https://github.com/thesp0nge/dawnscanner">dawnscanner</a> — A static analysis security scanner for ruby written web applications. It supports Sinatra, Padrino and Ruby on Rails frameworks.</li>
</ul>
<h2 id="user-content-securitysast" tabindex="-1" dir="auto"><a href="#securitysast">Security/SAST</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://azsk.azurewebsites.net/" rel="nofollow">AzSK</a> — Secure DevOps kit for Azure (AzSK) provides security IntelliSense, Security Verification Tests (SVTs), CICD scan vulnerabilities, compliance issues, and infrastructure misconfiguration in your infrastructure-as-code. Supports Azure via ARM.</p>
</li>
<li>
<p dir="auto"><a href="https://brakemanscanner.org/" rel="nofollow">brakeman</a> — A static analysis security vulnerability scanner for Ruby on Rails applications.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/SAP/credential-digger">Credential Digger</a> — Credential Digger is a GitHub scanning tool that identifies hardcoded credentials (Passwords, API Keys, Secret Keys, Tokens, personal information, etc),  and filtering the false positive data through a machine learning model called <a href="https://huggingface.co/SAPOSS/password-model" rel="nofollow">Password Model</a>. This scanner is able to detect passwords and non structured tokens with a low false positive rate.</p>
</li>
<li>
<p dir="auto"><a href="https://datree.io/" rel="nofollow">Datree</a> — A CLI tool to prevent Kubernetes misconfigurations by ensuring that manifests and Helm charts follow best practices as well as your organization’s policies</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/Yelp/detect-secrets">detect-secrets</a> — An enterprise friendly way of detecting and preventing secrets in code.
It does this by running periodic diff outputs against heuristically crafted regex statements,  to identify whether any new secret has been committed. This way, it avoids the overhead of digging  through all git history, as well as the need to scan the entire repository every time.</p>
</li>
<li>
<p dir="auto"><a href="https://www.laravel-enlightn.com/" rel="nofollow">Enlightn</a> — A static and dynamic analysis tool for Laravel applications that provides recommendations to improve the performance, security and code reliability of Laravel apps. Contains 120 automated checks.</p>
</li>
<li>
<p dir="auto"><a href="https://www.gitguardian.com/ggshield" rel="nofollow">GitGuardian ggshield</a> — ggshield is a CLI application that runs in your local environment  or in a CI environment to help you detect more than 350+ types of secrets,  as well as other potential security vulnerabilities or policy breaks affecting your codebase.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/zricethezav/gitleaks">Gitleaks</a> — A SAST tool for detecting hardcoded secrets like passwords, api keys, and tokens in git repos.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/praetorian-inc/gokart">gokart</a> — Golang security analysis with a focus on minimizing false positives. It is capable of tracing the source of variables and function arguments  to determine whether input sources are safe.</p>
</li>
<li>
<p dir="auto"><a href="https://gitguardian.com/hasmysecretleaked" rel="nofollow">HasMySecretLeaked</a> ©️ — HasMySecretLeaked is a project from GitGuardian that aims to help individual users and organizations search across 20 million exposed secrets to verify if their  developer secrets have leaked on public repositories, gists, and issues on GitHub projects.</p>
</li>
<li>
<p dir="auto"><a href="https://www.kitploit.com/2020/08/iblessing-ios-security-exploiting.html" rel="nofollow">iblessing</a> <g-emoji alias="warning">⚠️</g-emoji> — iblessing is an iOS security exploiting toolkit. It can be used for reverse engineering, binary analysis and vulnerability mining.</p>
</li>
<li>
<p dir="auto"><a href="https://kics.io/" rel="nofollow">kics</a> — Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible</p>
</li>
<li>
<p dir="auto"><a href="https://ktool.cynder.me/en/latest/ktool.html" rel="nofollow">ktool</a> — Fully cross-platform toolkit and library for MachO+Obj-C editing/analysis. Includes a cli kit, a curses GUI, ObjC header dumping, and much more.</p>
</li>
<li>
<p dir="auto"><a href="https://aquasecurity.github.io/kube-hunter/" rel="nofollow">kube-hunter</a> <g-emoji alias="warning">⚠️</g-emoji> — Hunt for security weaknesses in Kubernetes clusters.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/lirantal/lockfile-lint">lockfile-lint</a> — Lint an npm or yarn lockfile to analyze and detect security issues</p>
</li>
<li>
<p dir="auto"><a href="https://www.lunasec.io/" rel="nofollow">LunaSec</a> — Open Source AppSec platform that automatically notifies you the next time vulnerabilities like Log4Shell or node-ipc happen. Track your dependencies and builds in a centralized service.</p>
</li>
<li>
<p dir="auto"><a href="https://opensecurity.in/" rel="nofollow">njsscan</a> — A static application testing (SAST) tool that can find insecure code patterns in your node.js applications using simple pattern matcher from libsast and syntax-aware semantic code pattern search tool semgrep.</p>
</li>
<li>
<p dir="auto"><a href="https://opensecurity.in/" rel="nofollow">NodeJSScan</a> — A static security code scanner for Node.js applications powered by libsast and semgrep that builds on the njsscan cli tool. It features a UI with various dashboards about an application's security status.</p>
</li>
<li>
<p dir="auto"><a href="https://oversecured.com/" rel="nofollow">Oversecured</a> ©️ — Enterprise vulnerability scanner for Android and iOS apps. It allows app owners and developers to secure each new version of a mobile app by integrating Oversecured into the development process.</p>
</li>
<li>
<p dir="auto"><a href="https://www.ptsecurity.com/" rel="nofollow">PT Application Inspector</a> ©️ — Identifies code flaws and detects vulnerabilities to prevent web attacks. Demonstrates remote code execution by presenting possible exploits.</p>
</li>
<li>
<p dir="auto"><a href="https://www.qualys.com/apps/container-security" rel="nofollow">Qualys Container Security</a> ©️ — Container native application protection to provide visibility and control of containerized applications.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/quantifiedcode/quantifiedcode">QuantifiedCode</a> <g-emoji alias="warning">⚠️</g-emoji> — Automated code review &amp; repair. It helps you to keep track of issues and metrics in your software projects, and can be easily extended to support new types of analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://www.reshiftsecurity.com/" rel="nofollow">Reshift</a> ©️ — A source code analysis tool for detecting and managing JavaScript security vulnerabilities.</p>
</li>
<li>
<p dir="auto"><a href="https://www.rezilion.com/" rel="nofollow">Rezilion</a> ©️ — Discovers vulnerabilities for all components in your environment, filters out 85% non-exploitable vulnerabilities and creates a  remediation plan and open tickets to upgrade components that violate your security policy and/or patch automatically in CI.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/ossf/scorecard">scorecard</a> — Security Scorecards - Security health metrics for Open Source</p>
</li>
<li>
<p dir="auto"><a href="https://resources.bishopfox.com/resources/tools/google-hacking-diggity/attack-tools/" rel="nofollow">SearchDiggity</a> ©️ — Identifies vulnerabilities in open source code projects  hosted on Github, Google Code, MS CodePlex, SourceForge, and more.  The tool comes with over 130 default searches that identify SQL injection,  cross-site scripting (XSS), insecure remote and local file includes, hard-coded passwords, etc.</p>
</li>
<li>
<p dir="auto"><a href="https://steampunk.si/spotter/" rel="nofollow">Steampunk Spotter</a> ©️ — Ansible Playbook Scanning Tool that analyzes and offers recommendations for your playbooks.</p>
</li>
<li>
<p dir="auto"><a href="https://insight.symfony.com/" rel="nofollow">Symfony Insight</a> ©️ — Detect security risks, find bugs and provide actionable metrics for PHP projects.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tfsec/tfsec">tfsec</a> — Terraform static analysis tool that prevents potential security issues by checking cloud misconfigurations at build time and directly integrates with the HCL parser for better results. Checks for violations of AWS, Azure and GCP security best practice recommendations.</p>
</li>
<li>
<p dir="auto"><a href="https://trufflesecurity.com/" rel="nofollow">trufflehog</a> — Find credentials all over the place
TruffleHog is an open source secret-scanning engine that resolves exposed secrets across your company’s entire tech stack.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/google/tsunami-security-scanner">Tsunami Security Scanner</a> — A general purpose network security scanner with an extensible plugin system for  detecting high severity RCE-like vulnerabilities with high confidence. Custom detectors for finding vulnerabilities (e.g. open APIs) can be added.</p>
</li>
</ul>
<h2 id="user-content-smart-contracts" tabindex="-1" dir="auto"><a href="#smart-contracts">Smart Contracts</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/ConsenSys/mythril">mythril</a> — A symbolic execution framework with batteries included, can be used to find and exploit vulnerabilities in smart contracts automatically.</p>
</li>
<li>
<p dir="auto"><a href="https://mythx.io/" rel="nofollow">MythX</a> ©️ — MythX is an easy to use analysis platform which integrates several analysis methods like fuzzing, symbolic execution and static analysis to find vulnerabilities with high precision. It can be integrated with toolchains like Remix or VSCode or called from the command-line.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/trailofbits/slither">slither</a> — Static analysis framework that runs a suite of vulnerability detectors, prints visual information about contract details, and provides an API to easily write custom analyses.</p>
</li>
<li>
<p dir="auto"><a href="https://protofire.github.io/solhint" rel="nofollow">solhint</a> — Solhint is an open source project created by <a href="https://protofire.io/" rel="nofollow">https://protofire.io</a>. Its goal is to provide a linting utility for Solidity code.</p>
</li>
<li>
<p dir="auto"><a href="https://ethlint.readthedocs.io/en/latest" rel="nofollow">solium</a> — Solium is a linter to identify and fix style and security issues in Solidity smart contracts.</p>
</li>
</ul>
<h2 id="user-content-support" tabindex="-1" dir="auto"><a href="#support">Support</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/uni-bremen-agst/libvcs4j">LibVCS4j</a> — A Java library that allows existing tools to analyse the evolution of software systems by providing a common API for different version control systems and issue trackers.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/jimbethancourt/RefactorFirst">RefactorFirst</a> — Identifies and prioritizes God Classes and Highly Coupled classes in Java codebases you should refactor first.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/tomasbjerre/violations-lib">Violations Lib</a> — Java library for parsing report files from static code analysis. Used by a bunch of Jenkins, Maven and Gradle plugins.</p>
</li>
</ul>
<h2 id="user-content-template-languages" tabindex="-1" dir="auto"><a href="#template-languages">Template-Languages</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://github.com/ember-template-lint/ember-template-lint">ember-template-lint</a> — Linter for Ember or Handlebars templates.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sds/haml-lint">haml-lint</a> — Tool for writing clean and consistent HAML.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/sds/slim-lint">slim-lint</a> — Configurable tool for analyzing Slim templates.</p>
</li>
<li>
<p dir="auto"><a href="https://yamllint.readthedocs.io/" rel="nofollow">yamllint</a> — Checks YAML files for syntax validity, key repetition and cosmetic problems such as lines length, trailing spaces, and indentation.</p>
</li>
</ul>
<h2 id="user-content-terraform" tabindex="-1" dir="auto"><a href="#terraform">Terraform</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://www.gitguardian.com/ggshield" rel="nofollow">GitGuardian ggshield</a> — ggshield is a CLI application that runs in your local environment  or in a CI environment to help you detect more than 350+ types of secrets,  as well as other potential security vulnerabilities or policy breaks affecting your codebase.</p>
</li>
<li>
<p dir="auto"><a href="https://kics.io/" rel="nofollow">kics</a> — Find security vulnerabilities, compliance issues, and infrastructure misconfigurations in your infrastructure-as-code. Supports Terraform, Kubernetes, Docker, AWS CloudFormation and Ansible</p>
</li>
<li>
<p dir="auto"><a href="https://docs.shisho.dev/" rel="nofollow">shisho</a> — A lightweight static code analyzer designed for developers and security teams. It allows you to analyze and transform source code with an intuitive DSL similar to sed, but for code.</p>
</li>
</ul>
<h2 id="user-content-translation" tabindex="-1" dir="auto"><a href="#translation">Translation</a></h2>
<ul dir="auto">
<li><a href="https://github.com/willkg/dennis">dennis</a> <g-emoji alias="warning">⚠️</g-emoji> — A set of utilities for working with PO files to ease development and improve quality.</li>
</ul>
<h2 id="user-content-vuejs" tabindex="-1" dir="auto"><a href="#vuejs">Vue.js</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://html-validate.org/" rel="nofollow">HTML-Validate</a> — Offline HTML5 validator.</p>
</li>
<li>
<p dir="auto"><a href="https://marketplace.visualstudio.com/items?itemName=octref.vetur" rel="nofollow">Vetur</a> — Vue tooling for VS Code, powered by vls (vue language server). Vetur has support for formatting embedded HTML, CSS, SCSS, JS, TypeScript, and more. Vetur only has a "whole document formatter" and cannot format arbitrary ranges.</p>
</li>
</ul>
<h2 id="user-content-webassembly" tabindex="-1" dir="auto"><a href="#webassembly">Webassembly</a></h2>
<ul dir="auto">
<li><a href="https://rustwasm.github.io/twiggy" rel="nofollow">Twiggy</a> — Analyzes a binary's call graph to profile code size. The goal is to slim down wasm binary size.</li>
</ul>
<h2 id="user-content-writing" tabindex="-1" dir="auto"><a href="#writing">Writing</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://open.afterthedeadline.com/" rel="nofollow">After the Deadline</a> <g-emoji alias="warning">⚠️</g-emoji> — Spell, style and grammar checker.</p>
</li>
<li>
<p dir="auto"><a href="https://alexjs.com/" rel="nofollow">alex</a> — Catch insensitive, inconsiderate writing</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/codespell-project/codespell">codespell</a> — Check code for common misspellings.</p>
</li>
<li>
<p dir="auto"><a href="https://languagetool.org/" rel="nofollow">languagetool</a> — Style and grammar checker for 25+ languages. It finds many errors that a simple spell checker cannot detect.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/vlajos/misspell-fixer">misspell-fixer</a> — Quick tool for fixing common misspellings, typos in source code.</p>
</li>
<li>
<p dir="auto"><a href="https://jwilk.net/software/mwic" rel="nofollow">Misspelled Words In Context</a> — A spell-checker that groups possible misspellings and shows them in their contexts.</p>
</li>
<li>
<p dir="auto"><a href="http://proselint.com/" rel="nofollow">proselint</a> — A linter for English prose with a focus on writing style instead of grammar.</p>
</li>
<li>
<p dir="auto"><a href="https://docs.errata.ai/vale/about" rel="nofollow">vale</a> — A syntax-aware linter for prose built with speed and extensibility in mind.</p>
</li>
<li>
<p dir="auto"><a href="https://github.com/btford/write-good">write-good</a> — A linter with a focus on eliminating "weasel words".</p>
</li>
</ul>
<h2 id="user-content-yaml" tabindex="-1" dir="auto"><a href="#yaml">YAML</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://stoplight.io/open-source/spectral" rel="nofollow">Spectral</a> — A flexible JSON/YAML linter, with out-of-the-box support for OpenAPI v2/v3 and AsyncAPI v2.</p>
</li>
<li>
<p dir="auto"><a href="https://yamllint.readthedocs.io/" rel="nofollow">yamllint</a> — Checks YAML files for syntax validity, key repetition and cosmetic problems such as lines length, trailing spaces, and indentation.</p>
</li>
</ul>
<h2 id="user-content-git" tabindex="-1" dir="auto"><a href="#git">git</a></h2>
<ul dir="auto">
<li>
<p dir="auto"><a href="https://commitlint.js.org/" rel="nofollow">commitlint</a> — checks if your commit messages meet the conventional commit format</p>
</li>
<li>
<p dir="auto"><a href="https://www.gitguardian.com/ggshield" rel="nofollow">GitGuardian ggshield</a> — ggshield is a CLI application that runs in your local environment  or in a CI environment to help you detect more than 350+ types of secrets,  as well as other potential security vulnerabilities or policy breaks affecting your codebase.</p>
</li>
<li>
<p dir="auto"><a href="https://gitguardian.com/hasmysecretleaked" rel="nofollow">HasMySecretLeaked</a> ©️ — HasMySecretLeaked is a project from GitGuardian that aims to help individual users and organizations search across 20 million exposed secrets to verify if their  developer secrets have leaked on public repositories, gists, and issues on GitHub projects.</p>
</li>
</ul>
<h2 tabindex="-1" id="user-content-more-collections" dir="auto"><a href="#more-collections">More Collections</a></h2>
<ul dir="auto">
<li><a href="https://github.com/collections/clean-code-linters">Clean code linters</a> — A collection of linters in github collections</li>
<li><a href="https://github.com/collections/code-quality-in-php">Code Quality Checker Tools For PHP Projects</a> — A collection of PHP linters in github collections</li>
<li><a href="https://github.com/dominikh/go-tools">go-tools</a> — A collection of tools and libraries for working with Go code, including linters and static analysis</li>
<li><a href="https://github.com/mcandre/linters">linters</a> — An introduction to static code analysis</li>
<li><a href="https://owasp.org/www-community/Source_Code_Analysis_Tools" rel="nofollow">OWASP Source Code Analysis Tools</a> — List of tools maintained by the Open Web Application Security Project</li>
<li><a href="https://github.com/exakat/php-static-analysis-tools">php-static-analysis-tools</a> — A reviewed list of useful PHP static analysis tools</li>
<li><a href="http://en.wikipedia.org/wiki/List_of_tools_for_static_code_analysis" rel="nofollow">Wikipedia</a> — A list of tools for static code analysis.</li>
</ul>
<h2 tabindex="-1" id="user-content-license" dir="auto"><a href="#license">License</a></h2>
<p dir="auto"><a href="https://creativecommons.org/publicdomain/zero/1.0/" rel="nofollow"><img src="https://camo.githubusercontent.com/a15e10f28f401c8ed71f4fe09cc74e6f0cfa0c806bd9275b91af7dabfeab2b17/68747470733a2f2f692e6372656174697665636f6d6d6f6e732e6f72672f702f7a65726f2f312e302f38387833312e706e67" alt="CC0" data-canonical-src="https://i.creativecommons.org/p/zero/1.0/88x31.png"></a></p>
<p dir="auto">To the extent possible under law, <a href="https://endler.dev/" rel="nofollow">Matthias Endler</a> has waived all copyright and related or neighboring rights to this work.
The underlying source code used to format and display that content is licensed under the MIT license.</p>
<p dir="auto">Title image <a href="http://www.freepik.com/" rel="nofollow">Designed by Freepik</a>.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Oxide: The Cloud Computer (1304 pts)]]></title>
            <link>https://oxide.computer/blog/the-cloud-computer</link>
            <guid>38023891</guid>
            <pubDate>Thu, 26 Oct 2023 10:43:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://oxide.computer/blog/the-cloud-computer">https://oxide.computer/blog/the-cloud-computer</a>, See on <a href="https://news.ycombinator.com/item?id=38023891">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><div id="preamble"><p>Today we are announcing the general availability of the world’s first
commercial cloud computer — along with
<a href="https://oxide.computer/blog/oxide-unveils-the-worlds-first-commercial-cloud-computer">our $44M Series A financing</a>.</p><p>From the outset at Oxide, and as I outlined in
<a href="https://www.youtube.com/watch?v=vvZA9n3e5pc">my 2020 Stanford talk</a>,
we have had three core beliefs as a company:</p><div><ol><li><p>Cloud computing is the future of all computing infrastructure.</p></li><li><p>The computer that runs the cloud should be able to be <strong>purchased</strong> and not
merely rented.</p></li><li><p>Building a cloud computer necessitates a rack-level approach — and the
co-design of both hardware and software.</p></li></ol></div><p>Of these beliefs, the first is not at all controversial: the agility,
flexibility, and scalability of cloud computing have been indisputably
essential for many of the services that we depend on in the modern economy.</p><p>The degree that the second belief is controversial, however, depends on who you
are:  for those that are already running on premises due to security,
regulatory, economic, or latency reasons, it is self-evident that computers
should be able to be purchased and not merely rented.  But to others, this has
been more of a revelation — and since we started Oxide, we have found more and
more people realize that the rental-only model for the cloud is not
sustainable.  Friends love to tag us on links to
<a href="https://a16z.com/the-cost-of-cloud-a-trillion-dollar-paradox/">VC thinkpieces</a>,
<a href="https://world.hey.com/dhh/why-we-re-leaving-the-cloud-654b47e0">CTO rants</a>, or
<a href="https://www.idc.com/getdoc.jsp?containerId=IDC_P20184">analyst reports on
industry trends</a> — and we love people thinking of us, of course (even when
being tagged for the dozenth time!) — but the only surprise is how surprising
it continues to be for some folks.</p><p>The third belief — that the development of a cloud computer necessitates
rack-scale design of both hardware <em>and</em> software — may seem iconoclastic to
those who think only in terms of software, but it is in fact not controversial
among technologists: as computing pioneer Alan Kay famously observed, "people
who are really serious about software should make their own hardware." This is
especially true in cloud computing, where the large public cloud companies
have long ago come to the conclusion that they needed to be designing their
own holistic systems.  But if this isn’t controversial, why hasn’t there been
a cloud computer before Oxide’s?  First, because <strong>it’s big</strong>:  to meaningfully
build a cloud computer, one must break out of the shackles of the 1U or 2U
server, and really think about the rack as the unit of design.  Second,
it hasn’t been done because <strong>it’s hard</strong>:  co-designing hardware and
software that spans compute, networking, and storage requires building an
extraordinary team across disparate disciplines, coupling deep expertise with
a strong sense of versatility, teamwork, and empathy.  And the team isn’t
enough by itself: it also needs courage, resilience, and (especially) time.</p><p>So the biggest question when we set out was not "is the market there?" or "is
this the right way to do it?", but rather <strong>could we pull this off?</strong></p></div><div><h2 data-sectnum="">Pulling it off</h2><div><p>We have indeed
<a href="https://oxide.computer/product/specifications">pulled it off</a> — and it’s been a
wild ride!  While we have talked about the trek quite a bit on our podcast,
<a href="https://oxide.computer/podcasts/oxide-and-friends">Oxide and Friends</a> (and
specifically, <a href="https://oxide.computer/podcasts/oxide-and-friends/1411249">Steve
and I recently answered questions about the rack</a>), our general availability
is a good opportunity to reflect on some of the first impressions that the
Oxide cloud computer has made upon those who have seen it.</p><div><h3 data-sectnum="..">"Where are all the boxes?"</h3><div><p>The traditional rack-and-stack approach starts with a sea of boxes arriving
with servers, racks, cabling, etc.  This amounts to a literal
<a href="https://en.wikipedia.org/wiki/Kit_car">kit car</a> approach — and it starts with
tedious, dusty, de-boxing.  But the Oxide rack ships with everything installed
and comes in just <strong>one</strong> box — a crate that is
<a href="https://oxide.computer/podcasts/oxide-and-friends/1417751">its own feat of
engineering</a>.  All of this serves to dramatically reduce the latency from
equipment arrival to power on and first provision — from weeks and months to
days or even hours.</p></div></div><div><h3 data-sectnum="..">"Is it on?"</h3><div><p>We knew at the outset that rack-level design would afford us the ability to
change the geometry of compute sleds — that we would get higher density in the
rack by trading horizontal real estate for vertical.  We knew, too, that we
were choosing to use 80mm fans for their ability to move more air much more
efficiently — so much so that we leveraged
<a href="https://oxide.computer/blog/navigating-todays-supply-chain-challenges">our
approach to the supply chain</a> to partner with Sanyo Denki (our fan provider) to
lower the minimum speed of the fans from 5K RPM to the 2K RPM that we needed.
But adding it up, the Oxide rack has a surprising aesthetic attribute:  <strong>it is
whisper quiet.</strong>  To those accustomed to screaming servers, this is so
unexpected that when we were
<a href="https://oxide.computer/podcasts/oxide-and-friends/1200412">getting FCC
compliance</a>, the engineer running the test sheepishly asked us if we were sure
the rack was on — when it was dissipating 15 kW!  That the rack is quiet wasn’t
really deliberate (and we are frankly much more interested in the often hidden
power draw that blaring fan noise represents), but it does viscerally embody
much of the Oxide differentiation with respect to both rack-level design and
approach to the supply chain.</p></div></div><div><h3 data-sectnum="..">"Where are the cables?"</h3><div><p>Anyone accustomed to a datacenter will note the missing mass of cold-aisle
cabling that one typically sees at the front of a rack.  But moving to the back
of the rack reveals only a <a href="https://en.wikipedia.org/wiki/Busbar">DC busbar</a> and
a tight, cabled backplane.  This represents one of the bigger bets we made:
<a href="https://oxide.computer/podcasts/oxide-and-friends/1281318">we blindmated
networking</a>.  This was mechanically tricky, but the payoff is huge: capacity
can be added to the Oxide cloud computer simply by snapping in a new compute
sled — nothing to be cabled whatsoever!  This is a domain in which we have
leapfrogged the hyperscalers, who (for their own legacy reasons) don’t do it
this way.  This can be jarring to veteran technologists.  As one exclaimed upon
seeing the rack last week, "I am both surprised and delighted!" (Or rather:
a very profane variant of that sentiment.)</p></div></div><div><h3 data-sectnum="..">"You did your own switch too?!"</h3><div><p>When we first started the company, one of our biggest technical quandaries was
what to do about the switch.  At some level, both paths seemed untenable:  we
knew from our own experience that integrating with third-party switches would
lead to exactly the kind of integration pain for customers that we sought to
alleviate — but it also seemed outrageously ambitious to do our own switch in
addition to everything else we were doing.  But as we have many times over the
course of Oxide, we opted for the steeper path in the name of saving our
customers grief, choosing to
<a href="https://oxide.computer/podcasts/oxide-and-friends/838572">build our own
switch</a>.  If it has to be said,
<a href="https://oxide.computer/podcasts/oxide-and-friends/1008496">getting it working
isn’t easy</a>!  And of course, building the switch is insufficient: we also
needed to <a href="https://oxide.computer/podcasts/oxide-and-friends/1231631">build our
own networking software</a> — to say nothing of the
<a href="https://oxide.computer/podcasts/oxide-and-friends/1333581">management network</a>
required to be able to manage compute sleds when they’re powered off.</p></div></div><div><h3 data-sectnum="..">"Wait, <em>that’s</em> part of it?!"</h3><div><p>It’s one thing to say that all of the software that one needs to operate the
cloud computer is built in — but it’s another to actually see what that
software includes.  And for many, it’s seeing the
<a href="https://github.com/oxidecomputer/console">Oxide web console</a> (or its
<a href="https://oxide-console-preview.vercel.app/">live demo</a>!) that really drives the
message home:  yes, <strong>all</strong> of the software is included.  And because the
<a href="https://oxide.computer/podcasts/oxide-and-friends/1426644">console
implementation</a> is built on the <a href="https://docs.oxide.computer/">public API</a>,
everything that one can do in the console for the Oxide rack is also available
via CLI and API — a concrete manifestation of our
<a href="https://www.youtube.com/watch?v=EmSjZbSzA3A">code-as-contract</a> approach.</p></div></div><div><h3 data-sectnum="..">"And there’s no separate licensing?"</h3><div><p>One common source of pain for users of on-prem infrastructure has been license
management: financial pain due to over-paying and under-utilizing, and
operational pain in the navigation of different license terms, different
expiration dates, unpredictable dependencies, and
<a href="https://www.theregister.com/2022/05/31/vmware_broadcom_acquisition_customer_reaction/">uncertain
vendor futures</a>.  From the beginning we knew that we wanted to deliver a
delightful, integrated experience:  we believe that cloud computers should come
complete with all system software built-in, and with no additional licensing to
manage or to pay for.  Bug fixes and new features are always only an update
away and do not require a multi-departmental discussion to determine value and
budget.</p></div></div><div><h3 data-sectnum="..">"It’s all open source?"</h3><div><p>While the software is an essential part of the Oxide cloud computer, what we
sell is in fact the computer.  As <a href="https://www.youtube.com/watch?v=um5bC20NTQ0">a
champion of open source</a>, this allows Oxide a particularly straightforward open
source strategy:  <a href="https://github.com/oxidecomputer/">our software is all open</a>.
So you don’t need to worry about hinky open core models or relicensing
surprises.  And from a user perspective, you are assured levels of transparency
that you don’t get in the public cloud — let alone the proprietary on-prem
world.</p></div></div></div></div><div><h2 data-sectnum="">Getting your own first impression</h2><div><p>We’re really excited to have the first commercial cloud computer — and for
it to be generally available!  If you yourself are interested, we look
forward to it making its first impression on you —
<a href="https://oxide.computer/sales">reach out to us</a>!</p></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google's plan to stop Apple from getting serious about search (101 pts)]]></title>
            <link>https://www.nytimes.com/2023/10/26/technology/google-apple-search-spotlight.html</link>
            <guid>38023874</guid>
            <pubDate>Thu, 26 Oct 2023 10:40:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nytimes.com/2023/10/26/technology/google-apple-search-spotlight.html">https://www.nytimes.com/2023/10/26/technology/google-apple-search-spotlight.html</a>, See on <a href="https://news.ycombinator.com/item?id=38023874">Hacker News</a></p>
Couldn't get https://www.nytimes.com/2023/10/26/technology/google-apple-search-spotlight.html: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[People who made the original Super Mario Bros shipped Wonder 38 years later (272 pts)]]></title>
            <link>https://www.gamesradar.com/5-people-made-the-original-super-mario-bros-all-of-them-were-still-at-nintendo-to-ship-wonder-38-years-later/</link>
            <guid>38023580</guid>
            <pubDate>Thu, 26 Oct 2023 09:45:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.gamesradar.com/5-people-made-the-original-super-mario-bros-all-of-them-were-still-at-nintendo-to-ship-wonder-38-years-later/">https://www.gamesradar.com/5-people-made-the-original-super-mario-bros-all-of-them-were-still-at-nintendo-to-ship-wonder-38-years-later/</a>, See on <a href="https://news.ycombinator.com/item?id=38023580">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="article-body">
<p>The original <a href="https://www.gamesradar.com/uk/tag/super-mario/" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.gamesradar.com/uk/tag/super-mario/">Super Mario</a> Bros. on NES was made by a team of five people, and it seems every single one of them is still at Nintendo and was credited on <a href="https://www.gamesradar.com/super-mario-bros-wonder-guide/" data-before-rewrite-localise="https://www.gamesradar.com/super-mario-bros-wonder-guide/">Super Mario Bros. Wonder</a>.</p><p>Back in the NES days, video games were small enough to be developed by absolutely tiny teams. Super Mario Bros., released in Japan in 1983, was made by just five people: director Shigeru Miyamoto, assistant director Takashi Tezuka, programmers Toshihiko Nakago and Kazuaki Morita, and musician Koji Kondo.</p><p>In an incredible feat of game industry continuity, all five of them are still credited on Super Mario Bros. Wonder. Miyamoto served as supervisor, with Tezuka as producer, Nakago as a special level design advisor, and Kondo as sound director. Morita, meanwhile, is in the special thanks section. With four of the five original devs serving in major supervisory roles 38 years later, this might just be the most incredible piece of developer continuity in gaming history.</p><div><blockquote data-lang="en"><p lang="en" dir="ltr">Oh, and even though they've been doing it for nearly 40 years, sounds like that's not stopping them from adapting to the times: pic.twitter.com/3WTDQkw7WJ<a href="https://twitter.com/maxnichols/status/1716316684506837256" data-url="https://twitter.com/maxnichols/status/1716316684506837256">October 23, 2023</a></p></blockquote><p><span role="button" tabindex="0" aria-label="See more">See more</span></p></div><p>"The people who are making Mario have been doing it in an unbroken streak since most of the creative leadership at other companies today were kids," as <a href="https://www.gamesradar.com/uk/tag/bungie/" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.gamesradar.com/uk/tag/bungie/">Bungie</a>'s Max Nichols notes on <a href="https://twitter.com/maxnichols/status/1716315414345678986" target="_blank" data-url="https://twitter.com/maxnichols/status/1716315414345678986">Twitter</a>. Nichols' tweets put this bit of trivia on my radar, and since then the full Wonder credits have been published on <a href="https://www.mobygames.com/game/210462/super-mario-bros-wonder/credits/switch/" target="_blank" data-url="https://www.mobygames.com/game/210462/super-mario-bros-wonder/credits/switch/">MobyGames</a>, confirming the full roles of all five of those original devs.</p><p>Of course, Wonder was made by a much larger team than just those original developers, including some less familiar names in key roles. Most notable is director Shiro Mouri, who despite being at Nintendo for over 25 years, only recently graduated to lead a full, original game of his own. He'd previously served as programming director on New Super Mario Bros. U and main director on the Switch port of that same game.</p><p>The game industry is notoriously volatile, and even among Japanese studios it's extremely uncommon to see legendary game designers continue to work on the series they made famous after this many years. As you can see in our <a href="https://www.gamesradar.com/super-mario-bros-wonder-review/" data-before-rewrite-localise="https://www.gamesradar.com/super-mario-bros-wonder-review/">Super Mario Bros. Wonder review</a>, it seems those old names haven't lost their touch, either.</p><p><em>There's a reason the </em><a href="https://www.gamesradar.com/best-mario-games/" data-before-rewrite-localise="https://www.gamesradar.com/best-mario-games/"><em>best Mario games</em></a><em> have stood the test of time better than most of their contemporaries.</em></p>
</div><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent"><section><p>Weekly digests, tales from the communities you love, and more</p></section></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MetaCLIP – Meta AI Research (122 pts)]]></title>
            <link>https://github.com/facebookresearch/MetaCLIP</link>
            <guid>38023544</guid>
            <pubDate>Thu, 26 Oct 2023 09:36:42 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/facebookresearch/MetaCLIP">https://github.com/facebookresearch/MetaCLIP</a>, See on <a href="https://news.ycombinator.com/item?id=38023544">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" id="user-content-demystifying-clip-data" dir="auto"><a href="#demystifying-clip-data">Demystifying CLIP Data</a></h2>
<p dir="auto">This repository contains the code for the MetaCLIP, described in the paper <a href="https://arxiv.org/abs/2309.16671" rel="nofollow">Demystifying CLIP Data</a> that formalizes CLIP data curation as a simple algorithm. The main contributions are:</p>
<ul dir="auto">
<li>Curating data from scratch without filtering via prior models (e.g., different from existing open source <a href="https://arxiv.org/abs/2111.02114" rel="nofollow">efforts</a> that uses the original CLIP model as a teacher for filtering <strong>student</strong> data.</li>
<li>Making training data more transparent, we released our <strong>training data distribution</strong> over <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metadata.json">metadata</a>;</li>
<li>A scalable algorithm running in the data pipeline, allowing to scale the <strong>data pool</strong> to the whole CommonCrawl (CC) w/ 300+B image-text pairs. We observe that data quality is <strong>much more</strong> important than quantity (different from existing <a href="https://arxiv.org/abs/2210.08402" rel="nofollow">open source efforts</a> or <a href="https://arxiv.org/abs/2102.05918" rel="nofollow">ALIGN</a> that mostly scale quantity);</li>
<li><a href="https://github.com/facebookresearch/MetaCLIP/blob/main/run_configs_400m.py">standard CLIP training setup</a> for controlled experiments and fair comparisons under fixed training and model configuration.</li>
</ul>
<p dir="auto">We conclude that:</p>
<ul dir="auto">
<li>Effective pretraining data should <strong>maximally preserve signal and mitigate noise</strong>, instead of hard removal of noise with blackbox filters that lead to unknown distribution</li>
<li>Our algorithm is simpler and scalable to curate the whole Internet</li>
<li>Open-sourcing does not just entail a trained model checkpoint but more importantly the <strong>pre-training data distribution</strong>.</li>
</ul>
<div dir="auto" data-snippet-clipboard-copy-content="@inproceedings{xu2023metaclip,
   title={Demystifying CLIP Data},
   author={Hu Xu, Saining Xie, Xiaoqing Ellen Tan, Po-Yao Huang, Russell Howes, Vasu, Sharma, Shang-Wen Li, Gargi Ghosh, Luke Zettlemoyer and Christoph Feichtenhofer},
   journal={arXiv preprint arXiv:2309.16671},
   year={2023}
}"><pre><span>@inproceedings</span>{<span>xu2023metaclip</span>,
   <span>title</span>=<span><span>{</span>Demystifying CLIP Data<span>}</span></span>,
   <span>author</span>=<span><span>{</span>Hu Xu, Saining Xie, Xiaoqing Ellen Tan, Po-Yao Huang, Russell Howes, Vasu, Sharma, Shang-Wen Li, Gargi Ghosh, Luke Zettlemoyer and Christoph Feichtenhofer<span>}</span></span>,
   <span>journal</span>=<span><span>{</span>arXiv preprint arXiv:2309.16671<span>}</span></span>,
   <span>year</span>=<span><span>{</span>2023<span>}</span></span>
}</pre></div>
<h2 tabindex="-1" id="user-content-updates" dir="auto"><a href="#updates">Updates</a></h2>
<ul dir="auto">
<li>09/28/2023: initial release.</li>
</ul>
<h2 tabindex="-1" id="user-content-quick-links" dir="auto"><a href="#quick-links">Quick Links</a></h2>
<ul dir="auto">
<li><a href="#getting-started">Getting Started</a></li>
<li><a href="#metadata">Metadata</a></li>
<li><a href="#pre-trained-models">Pre-trained Models</a></li>
<li><a href="#curation">Curation</a></li>
<li><a href="#training">Training</a></li>
<li><a href="#bugs-or-questions">Bugs or Questions?</a></li>
<li><a href="#citation">Citation</a></li>
<li><a href="#reference">Reference</a></li>
</ul>
<h2 tabindex="-1" id="user-content-getting-started" dir="auto"><a href="#getting-started">Getting Started</a></h2>
<p dir="auto">This code is developed with minimal changes on top of <a href="https://github.com/mlfoundations/open_clip">OpenCLIP</a>. The following command should install requirements for OpenCLIP and <code>submitit=1.2.1</code> used by this repo:</p>
<div dir="auto" data-snippet-clipboard-copy-content="conda create -n python=3.10 pytorch torchvision pytorch-cuda=11.7 tqdm ftfy braceexpand regex pandas submitit=1.2.1 \
    -c pytorch-nightly \
    -c nvidia \
    -c conda-forge \
    -c anaconda"><pre>conda create -n python=3.10 pytorch torchvision pytorch-cuda=11.7 tqdm ftfy braceexpand regex pandas submitit=1.2.1 \
    -c pytorch-nightly \
    -c nvidia \
    -c conda-forge \
    -c anaconda</pre></div>
<h2 tabindex="-1" id="user-content-metadata" dir="auto"><a href="#metadata">Metadata</a></h2>
<p dir="auto">MetaCLIP uses 500,000 queries as <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metadata.json">metadata</a> to align the training data to distribution over quality writing of Wikipedia/WordNet terms. This metadata also allows us to release training data distribution of a released model as <strong>data card</strong>.</p>
<h3 tabindex="-1" id="user-content-pre-trained-models" dir="auto"><a href="#pre-trained-models">Pre-trained Models</a></h3>
<p dir="auto">We change OpenCLIP to match training in the default CLIP model setup (w/ <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/src/open_clip/model_configs/ViT-B-16-quickgelu.json">ViT-B-16-quickgelu</a>, <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/src/open_clip/model_configs/ViT-L-14-quickgelu.json">ViT-L-14-quickgelu</a> and <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/src/open_clip/model_configs/ViT-H-14-quickgelu.json">ViT-H-14-quickgelu</a>). Most OpenCLIP models use <code>nn.GELU</code> not <code>quickgelu</code> used by vanilla CLIP. We hope this helps research w/ controlled experiments in the "CLIP era of ImageNet".</p>
<div dir="auto" data-snippet-clipboard-copy-content="import torch
from PIL import Image
import open_clip

model, _, preprocess = open_clip.create_model_and_transforms('ViT-B-32-quickgelu', pretrained='metaclip/b32_400m.pt')

image = preprocess(Image.open(&quot;CLIP.png&quot;)).unsqueeze(0)
text = open_clip.tokenize([&quot;a diagram&quot;, &quot;a dog&quot;, &quot;a cat&quot;])

with torch.no_grad():
    image_features = model.encode_image(image)
    text_features = model.encode_text(text)
    image_features /= image_features.norm(dim=-1, keepdim=True)
    text_features /= text_features.norm(dim=-1, keepdim=True)

    text_probs = (100.0 * image_features @ text_features.T).softmax(dim=-1)

print(&quot;Label probs:&quot;, text_probs)"><pre><span>import</span> <span>torch</span>
<span>from</span> <span>PIL</span> <span>import</span> <span>Image</span>
<span>import</span> <span>open_clip</span>

<span>model</span>, <span>_</span>, <span>preprocess</span> <span>=</span> <span>open_clip</span>.<span>create_model_and_transforms</span>(<span>'ViT-B-32-quickgelu'</span>, <span>pretrained</span><span>=</span><span>'metaclip/b32_400m.pt'</span>)

<span>image</span> <span>=</span> <span>preprocess</span>(<span>Image</span>.<span>open</span>(<span>"CLIP.png"</span>)).<span>unsqueeze</span>(<span>0</span>)
<span>text</span> <span>=</span> <span>open_clip</span>.<span>tokenize</span>([<span>"a diagram"</span>, <span>"a dog"</span>, <span>"a cat"</span>])

<span>with</span> <span>torch</span>.<span>no_grad</span>():
    <span>image_features</span> <span>=</span> <span>model</span>.<span>encode_image</span>(<span>image</span>)
    <span>text_features</span> <span>=</span> <span>model</span>.<span>encode_text</span>(<span>text</span>)
    <span>image_features</span> <span>/=</span> <span>image_features</span>.<span>norm</span>(<span>dim</span><span>=</span><span>-</span><span>1</span>, <span>keepdim</span><span>=</span><span>True</span>)
    <span>text_features</span> <span>/=</span> <span>text_features</span>.<span>norm</span>(<span>dim</span><span>=</span><span>-</span><span>1</span>, <span>keepdim</span><span>=</span><span>True</span>)

    <span>text_probs</span> <span>=</span> (<span>100.0</span> <span>*</span> <span>image_features</span> @ <span>text_features</span>.<span>T</span>).<span>softmax</span>(<span>dim</span><span>=</span><span>-</span><span>1</span>)

<span>print</span>(<span>"Label probs:"</span>, <span>text_probs</span>)</pre></div>
<table>
<thead>
<tr>
<th>Model</th>
<th>Data Card</th>
<th>IN ZS Acc.</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/b32_400m.pt" rel="nofollow">MetaCLIP B32 400M</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_400m.json" rel="nofollow">data card</a></td>
<td>65.5</td>
</tr>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/b16_400m.pt" rel="nofollow">MetaCLIP B16 400M</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_400m.json" rel="nofollow">data card</a></td>
<td>70.8</td>
</tr>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/l14_400m.pt" rel="nofollow">MetaCLIP L14 400M</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_400m.json" rel="nofollow">data card</a></td>
<td>76.2</td>
</tr>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/b32_fullcc2.5b.pt" rel="nofollow">MetaCLIP B32 FullCC2.5B</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_fullcc2.5b.json" rel="nofollow">data card</a></td>
<td>67.6</td>
</tr>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/b16_fullcc2.5b.pt" rel="nofollow">MetaCLIP B16 FullCC2.5B</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_fullcc2.5b.json" rel="nofollow">data card</a></td>
<td>72.1</td>
</tr>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/l14_fullcc2.5b.pt" rel="nofollow">MetaCLIP L14 FullCC2.5B</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_fullcc2.5b.json" rel="nofollow">data card</a></td>
<td>79.2</td>
</tr>
<tr>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/h14_fullcc2.5b.pt" rel="nofollow">MetaCLIP H14 FullCC2.5B</a></td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_fullcc2.5b.json" rel="nofollow">data card</a></td>
<td>80.5</td>
</tr>
<tr>
<td>MetaCLIP G14 FullCC2.5B</td>
<td><a href="https://dl.fbaipublicfiles.com/MMPT/metaclip/datacard_fullcc2.5b.json" rel="nofollow">data card</a></td>
<td>ongoing</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" id="user-content-how-to-curate-" dir="auto"><a href="#how-to-curate-">How to Curate ?</a></h2>
<p dir="auto">We have a <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/demo.ipynb">demo notebook</a> to show how the proposed algorithm works.</p>
<h3 tabindex="-1" id="user-content-i-already-have-a-head-distributed-dataset" dir="auto"><a href="#i-already-have-a-head-distributed-dataset">I already have a (head distributed) dataset:</a></h3>
<p dir="auto">CLIP curation can still help as online balancing (Table 6 in the paper). We wrap CLIP curation in two key functions: <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metaclip/substr_matching.py">substring matching</a> (recommended to run offline) and <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metaclip/balancing.py">balancing</a> (either offline or online, please check <code>metaclip.balancing:main</code>).</p>
<div dir="auto" data-snippet-clipboard-copy-content="import json
import numpy as np
from metaclip.substr_matching import substr_matching
from metaclip.balancing import balance_sampling

with open(&quot;metadata.json&quot;) as f:
  metadata = json.load(f)
# entry counts for our 1.6B(pool) -> 400M(curated); please check balance_sampling:main and substr match and count on your own data.
with open(&quot;metaclip/entry_counts_400m.json&quot;) as f:
  entry_count_json = json.load(f)
entry_count = np.array([entry_count_json[entry] for entry in metadata], dtype=np.uint64)  # uint64 to be safe for scaling.

t = 20000
entry_count[entry_count < t] = t
entry_prob = t / entry_count

for text in [&quot;jacksons chameleon&quot;, &quot;battery plate&quot;]:
  matched_entry_ids = substr_matching(text, metadata)
  if balance_sampling(matched_entry_ids, entry_prob):
    print(f&quot;'{text}' curated&quot;)"><pre><span>import</span> <span>json</span>
<span>import</span> <span>numpy</span> <span>as</span> <span>np</span>
<span>from</span> <span>metaclip</span>.<span>substr_matching</span> <span>import</span> <span>substr_matching</span>
<span>from</span> <span>metaclip</span>.<span>balancing</span> <span>import</span> <span>balance_sampling</span>

<span>with</span> <span>open</span>(<span>"metadata.json"</span>) <span>as</span> <span>f</span>:
  <span>metadata</span> <span>=</span> <span>json</span>.<span>load</span>(<span>f</span>)
<span># entry counts for our 1.6B(pool) -&gt; 400M(curated); please check balance_sampling:main and substr match and count on your own data.</span>
<span>with</span> <span>open</span>(<span>"metaclip/entry_counts_400m.json"</span>) <span>as</span> <span>f</span>:
  <span>entry_count_json</span> <span>=</span> <span>json</span>.<span>load</span>(<span>f</span>)
<span>entry_count</span> <span>=</span> <span>np</span>.<span>array</span>([<span>entry_count_json</span>[<span>entry</span>] <span>for</span> <span>entry</span> <span>in</span> <span>metadata</span>], <span>dtype</span><span>=</span><span>np</span>.<span>uint64</span>)  <span># uint64 to be safe for scaling.</span>

<span>t</span> <span>=</span> <span>20000</span>
<span>entry_count</span>[<span>entry_count</span> <span>&lt;</span> <span>t</span>] <span>=</span> <span>t</span>
<span>entry_prob</span> <span>=</span> <span>t</span> <span>/</span> <span>entry_count</span>

<span>for</span> <span>text</span> <span>in</span> [<span>"jacksons chameleon"</span>, <span>"battery plate"</span>]:
  <span>matched_entry_ids</span> <span>=</span> <span>substr_matching</span>(<span>text</span>, <span>metadata</span>)
  <span>if</span> <span>balance_sampling</span>(<span>matched_entry_ids</span>, <span>entry_prob</span>):
    <span>print</span>(<span>f"'<span><span>{</span><span>text</span><span>}</span></span>' curated"</span>)</pre></div>
<h3 tabindex="-1" id="user-content-i-want-to-curate-data-from-scratch" dir="auto"><a href="#i-want-to-curate-data-from-scratch">I want to curate data from scratch:</a></h3>
<p dir="auto">We release a skeleton code for <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metaclip/cc_matching.py">sub-string matching</a> from CommonCrawl WAT or WARC and <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metaclip/balancing.py">balancing</a>. Check <a href="https://github.com/facebookresearch/MetaCLIP/blob/main/metaclip/README.md">here</a> for details.</p>
<h2 tabindex="-1" id="user-content-training" dir="auto"><a href="#training">Training</a></h2>
<div dir="auto" data-snippet-clipboard-copy-content="python submitit_openclip.py b32_400m"><pre><span>python</span> <span>submitit_openclip</span>.<span>py</span> <span>b32_400m</span></pre></div>
<p dir="auto">Please config the corresponding <code>training_data</code> in <code>run_configs_400m.py</code>.</p>
<h2 tabindex="-1" id="user-content-bugs-or-questions" dir="auto"><a href="#bugs-or-questions">Bugs or questions?</a></h2>
<p dir="auto">If you have any questions related to the code or the paper, feel free to email Hu Xu (<code>huxu@meta.com</code>).</p>
<h2 tabindex="-1" id="user-content-citation" dir="auto"><a href="#citation">Citation</a></h2>
<p dir="auto">Please cite our paper if MetaCLIP helps your work:</p>
<div dir="auto" data-snippet-clipboard-copy-content="@inproceedings{xu2023metaclip,
   title={Demystifying CLIP Data},
   author={Hu Xu, Saining Xie, Xiaoqing Ellen Tan, Po-Yao Huang, Russell Howes, Vasu, Sharma, Shang-Wen Li, Gargi Ghosh, Luke Zettlemoyer and Christoph Feichtenhofer},
   journal={arXiv preprint arXiv:2309.16671},
   year={2023}
}"><pre><span>@inproceedings</span>{<span>xu2023metaclip</span>,
   <span>title</span>=<span><span>{</span>Demystifying CLIP Data<span>}</span></span>,
   <span>author</span>=<span><span>{</span>Hu Xu, Saining Xie, Xiaoqing Ellen Tan, Po-Yao Huang, Russell Howes, Vasu, Sharma, Shang-Wen Li, Gargi Ghosh, Luke Zettlemoyer and Christoph Feichtenhofer<span>}</span></span>,
   <span>journal</span>=<span><span>{</span>arXiv preprint arXiv:2309.16671<span>}</span></span>,
   <span>year</span>=<span><span>{</span>2023<span>}</span></span>
}</pre></div>
<h2 tabindex="-1" id="user-content-reference" dir="auto"><a href="#reference">Reference</a></h2>
<p dir="auto">The training code is developed based on <a href="https://github.com/mlfoundations/open_clip">OpenCLIP</a>, modified to the vanilla CLIP training setup.</p>
<h2 tabindex="-1" id="user-content-todo" dir="auto"><a href="#todo">TODO</a></h2>
<ul dir="auto">
<li>cross-json URL dedup in skeleton code;</li>
<li>numpy implementation for matching and balancing;</li>
<li>support online downloading;</li>
<li>support vanilla CLIP API;</li>
<li>Huggingface integration;</li>
<li>(welcome your use cases or suggestions to update this codebase regularly)</li>
</ul>
<h2 tabindex="-1" id="user-content-license" dir="auto"><a href="#license">License</a></h2>
<p dir="auto">The majority of MetaCLIP is licensed under CC-BY-NC, however portions of the project are available under separate license terms: open_clip is licensed under the <a href="https://github.com/mlfoundations/open_clip">https://github.com/mlfoundations/open_clip</a> license.</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Dear Google Cloud: Your Deprecation Policy Is Killing You (2020) (144 pts)]]></title>
            <link>https://steve-yegge.medium.com/dear-google-cloud-your-deprecation-policy-is-killing-you-ee7525dc05dc</link>
            <guid>38023392</guid>
            <pubDate>Thu, 26 Oct 2023 09:09:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://steve-yegge.medium.com/dear-google-cloud-your-deprecation-policy-is-killing-you-ee7525dc05dc">https://steve-yegge.medium.com/dear-google-cloud-your-deprecation-policy-is-killing-you-ee7525dc05dc</a>, See on <a href="https://news.ycombinator.com/item?id=38023392">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a rel="noopener follow" href="https://steve-yegge.medium.com/?source=post_page-----ee7525dc05dc--------------------------------"><div aria-hidden="false"><p><img alt="Steve Yegge" src="https://miro.medium.com/v2/resize:fill:88:88/1*OrBdZ2GUUicWcT6x8KSYZg.png" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a></div><p id="a428">God dammit, I didn’t want to blog again. I have so much stuff to do. Blogging takes time and energy and creativity that I could be putting to good use: my novels, my <a href="https://www.youtube.com/watch?v=VK244wAQ3Qo" rel="noopener ugc nofollow" target="_blank">music</a>, my game, and so on. But you get me riled enough, and I have to blog.</p><p id="983a">Let’s get this over with, then.</p><p id="b6e0">I’ll begin with a small but enlightening story from my early days at Google. For the record, I know I’ve said some perhaps unkind things about Google lately, because it’s frustrating when your corporate alma mater makes incompetent business decisions on the regular. But Google’s internal infrastructure is truly extraordinary, and you could argue that there is still none better today. The people who built Google were far better engineers than I will <em>ever</em> be, as this anecdote should serve to illustrate.</p><p id="2586">First a wee bit of background: Google has a storage technology called <a href="https://en.wikipedia.org/wiki/Bigtable" rel="noopener ugc nofollow" target="_blank">Bigtable</a>. Bigtable was a remarkable technical achievement, being one of the first (if not <em>the</em> first) “infinitely scalable” key-value stores: the beginning of NoSQL, basically. These days Bigtable still holds up well in the rather crowded space of K/V stores, but back in the day (2005) it was breathtakingly cool.</p><p id="2f06">One fun bit of trivia about Bigtable is that they had these internal control-plane entities (as part of the implementation) called tablet servers, which had large indexes, and at some point they became a scaling bottleneck. So the Bigtable engineers scratched their heads over how to make it scale, and realized that they could replace the tablet servers with Bigtables to unblock the scaling. So Bigtable is part of its own implementation. It’s Bigtables all the way down.</p><p id="0205">Another cool bit of trivia is that for a time, Bigtables became popular and ubiquitous inside Google and everyone and their dog had one. So at one Friday’s TGIF all-hands, Larry Page casually asked in passing, “Why do we have more than one Bigtable? Why isn’t there just one?” Because in theory, one Bigtable should have sufficed for all Google’s storage needs. Of course they never did migrate to just one, for practical software engineering reasons (e.g. blast radius), but the theory was interesting. One database for the whole universe. <em>(Side note: Anyone know if Sable does this at Amazon?)</em></p><p id="04cd">Anyway, here’s my story, to get us started on my rant.</p><p id="fceb">One day, after I’d been working at Google for just over 2 years, I got an email from the Bigtable engineering team. It said something along the lines of:</p><p id="d48c"><em>Dear Steve,</em></p><p id="0bf7"><em>Greetings from the Bigtable team. We wanted to let you know that you are running a very, very old Bigtable binary in the [some data center name] data center. That version is no longer supported, and we would like to work with you to help you upgrade to the latest version.</em></p><p id="02a5"><em>Please let us know if you can schedule some time to work with us on this.</em></p><p id="0770"><em>Best,</em></p><p id="b3af"><em>Bigtable Team</em></p><p id="4a24">You get a lot of email at Google, as you can imagine, and when I glanced at this one, this is what I first perceived it to be saying:</p><p id="03d2"><em>Dear </em><strong><em>RECIPIENT</em></strong><em>,</em></p><p id="f81e"><em>Greetings from Some Team. We wanted to let you know blah blah blah blah blah blah blah. Blah blah blah blah blah blah blah BLAH, and blah blah blah blah immediately.</em></p><p id="ead9"><em>Please let us know if you can schedule some of your precious time to blah blah blah.</em></p><p id="702a"><em>Best,</em></p><p id="7355"><em>Some Team</em></p><p id="5b9c">I almost deleted it on the spot, but there was this lingering, nagging feeling that it didn’t <em>quite</em> feel like a form letter, even though it <em>obviously</em> wasn’t for me, since I didn’t have a Bigtable.</p><p id="e46e">But it was weird.</p><p id="d293">For the rest of the day, as I was alternating between working and deciding which species of gummy shark to try next in the micro-kitchens, of which there were at least three close enough to hit from my seat with a well-aimed biscuit, I thought about that email with a growing sense of mild anxiety.</p><p id="9431">They had used my name specifically. And the email had been sent to my email address and nobody else’s, and not by cc: or bcc:. The tone was very personal and pointed. Maybe it was some sort of mistake?</p><p id="19bc">Curiosity finally got the better of me, and I went to look at my Borg console in the data center they’d mentioned in the email.</p><p id="8645">And sure enough, I was running a Bigtable there. Whaaaaat? I looked at its contents, and lo! It was from the Bigtable codelab I’d run back in my first week as a Noogler, in June 2005. The codelab had you fire up a Bigtable so you could programmatically write some values to it, and I had apparently never shut it down afterwards. It was still running there, over 2 years later.</p><p id="9f7b">There are several remarkable aspects to this story. One is that running a Bigtable was so inconsequential to Google’s scale that it took 2 years before anyone even noticed it, and even then, only because the version was old. As a point of comparison, I considered using <a href="https://cloud.google.com/bigtable" rel="noopener ugc nofollow" target="_blank">Google Cloud Bigtable</a> for my online game, but it cost (at the time) an estimated $16,000/year for an <em>empty</em> Bigtable on GCP. I’m not saying they’re gouging you, but in my own personal opinion, that feels like a lot of money for an empty fucking database.</p><p id="b925">Another remarkable aspect is that <em>it was still running after 2 years</em>. WTF? Data centers come and go; they experience outages, they undergo routine maintenance, they change all the time. Hardware gets upgraded, network switches swap out, everything is constantly being improved. How the heck were they able to keep my software running for 2 years in the face of all that change? It may feel like a humdrum achievement in 2020, but in 2005–2007 it was pretty impressive.</p><p id="73e4">And then there is in my opinion the most remarkable aspect of all, which is that an unrelated engineering team in some other state was reaching out to <em>me</em>, the owner of some tiny mostly-empty Bigtable instance which had had <em>zero traffic</em> for the past 2 years, asking if they could help me upgrade.</p><p id="d0bb">I thanked them and shut it down and life went on. But I still think about that letter, thirteen years later. Because I sometimes get similar letters from the Google Cloud Platform. They look like this:</p><p id="c068"><em>Dear Google Cloud Platform User,</em></p><p id="ec5e"><em>We are writing to remind you that we are sunsetting [Important Service you are using] as of August 2020, after which you will not be able to perform any updates or upgrades on your instances. We encourage you to upgrade to the latest version, which is in Beta, has no documentation, no migration path, and which we have kindly deprecated in advance for you</em>.</p><p id="9bff"><em>We are committed to ensuring that all developers of Google Cloud Platform are minimally disrupted by this change.</em></p><p id="1d71"><em>Besties Forever,</em></p><p id="b8c9"><em>Google Cloud Platform</em></p><p id="191d">But I barely skim them, because what they are really saying is:</p><p id="9035"><em>Dear </em><strong><em>RECIPIENT</em></strong><em>,</em></p><p id="63a8"><em>Fuck yooooouuuuuuuu. Fuck you, fuck you, Fuck You. Drop whatever you are doing because it’s not important. What is important is OUR time. It’s costing us time and money to support our shit, and we’re tired of it, so we’re not going to support it anymore. So drop your fucking plans and go start digging through our shitty documentation, begging for scraps on forums, and oh by the way, our new shit is COMPLETELY different from the old shit, because well, we fucked that design up pretty bad, heh, but hey, that’s YOUR problem, not our problem.</em></p><p id="6aa7"><em>We remain committed as always to ensuring everything you write will be unusable within 1 year.</em></p><p id="7d39"><em>Please go fuck yourself,</em></p><p id="589b"><em>Google Cloud Platform</em></p><p id="f3b8">And the thing is, I get these about once a month. It happens so often and so reliably that I have been inexorably pushed <em>away</em> from GCP, towards cloud agnosticism. I no longer take dependencies on their proprietary service offerings, because it actually winds up being less DevOps work, on average, to support open-source systems running on bare VMs, than to try to keep up with Google’s deprecation treadmill.</p><p id="77c1">Before I return to shitting on Google Cloud Platform, because boyo I am nowhere <em>near</em> finished yet, let’s go visit how software engineering works in some other domains. Google engineers pride themselves on their software engineering discipline, and that’s actually what gets them into trouble. Pride is a trap for the unwary, and it has ensnared many a Google team into thinking that their decisions are always right, and that correctness (by some vague fuzzy definition) is more important than customer focus.</p><p id="1b8c">I’m going to pick a few somewhat arbitrary examples from other big software systems, but hopefully you’ll be able to start spotting the pattern everywhere; that pattern being: <strong>Backwards compatibility keeps systems alive and relevant for decades</strong>.</p><p id="c284">Backwards compatibility is a design goal of all successful systems that are designed for <em>open</em> use; that is, implemented as open source, and/or guided by open standards. I feel like I’m stating something that’s so obvious that we should all be awkwardly embarrassed, but no. It’s a political issue, so I need examples.</p><p id="94db">The first system I’ll pick is the oldest: GNU Emacs, which is a sort of hybrid between Windows Notepad, a monolithic-kernel operating system, and the International Space Station. It’s a bit tricky to explain, but in a nutshell, Emacs is a platform written in 1976 (yes, almost half a century ago) for writing software to make you more productive, masquerading as a text editor.</p><p id="6e9d">I use Emacs every single day. Yes, I’m also using IntelliJ every day, and that has grown into a powerful tooling platform in its own right. But writing software extensions for IntelliJ is a much more ambitious and complex undertaking than writing extensions for Emacs. And more importantly, stuff lasts <em>forever</em> on Emacs.</p><p id="673f">I’m still using software that I wrote for Emacs back in 1995. And I’m sure there are people who are still using software they wrote for Emacs from the mid-80s, if not earlier. Every once in a while it might require a minor tweak, but it’s really quite rare. I’m not aware of anything I’ve ever written for Emacs (and I’ve written a lot) that was ever forced into re-architecture.</p><p id="cf77">Emacs does have a deprecation facility called make-obsolete. Emacs’ terminology for fundamental software engineering concepts (like what is a “window”) are often different from the industry conventions, because Emacs invented them long, long ago. The perils of being before your time: Your names are all wrong. But Emacs does indeed have deprecation, called <em>obsolescence</em> in their lingo.</p><p id="2bec">However, the Emacs folks seem to have a different working definition. A different underlying philosophy, if you will.</p><p id="f6c6">In the Emacs world (and in many other domains, some of which we’ll explore below), when they make an API obsolete, they are basically saying: “You really shouldn’t use this approach, because even though it works, it suffers from various deficiencies which we enumerate here. But in the end it’s your call.”</p><p id="cf46">Whereas in the Google world, deprecation means: “We are breaking our commitments to you.” It really does. That’s what it ultimately means. It means they are going to force you to do some work, possibly a large amount of rework, <em>on a regular basis</em>, as punishment for doing what they told you to do originally — as punishment for listening to their glossy marketing on their <a href="https://cloud.google.com/gcp" rel="noopener ugc nofollow" target="_blank">website</a>: Better software. Faster! You do <em>everything</em> they tell you to do, and you launch your application or service, and then, bang, a year or two later it breaks down.</p><p id="9f63">This is like selling you a used car that they know is going to break down in under 1000 miles.</p><p id="4411">These are two very, very different philosophical definitions of “deprecation”. Google’s definition reeks of <a href="https://en.wikipedia.org/wiki/Planned_obsolescence" rel="noopener ugc nofollow" target="_blank">planned obsolescence</a>. I don’t believe that it’s <em>actually</em> planned obsolescence in the same sense that, say, Apple perpetrates. But Google definitely plans to break your stuff, in a roundabout way. I know because I worked there as a software engineer for 12+ years. They have loose internal guidelines about how much backwards compatibility to bake into service offerings, but in the end it’s up to each individual team or service. There are no corporate-level or engineering-level guidelines, and the <em>longest</em> anyone has the courage to recommend, in terms of deprecation cycles, is “try to give your customers 6–12 months to upgrade before you drape them over the barrel.”</p><p id="de52">This is hurting them far more than they realize, and it will continue to hurt them for years to come, because it’s not part of their DNA to care about customers. More on this below.</p><p id="6928">For the moment, I’m going to make the bold assertion that Emacs is successful in large part, perhaps even <em>mostly</em>, because they take backwards compatibility so seriously. In fact, that’s the thesis of this essay. Successful long-lived open systems owe their success to building decades-long micro-communities around <em>extensions/plugins</em>, also known as a <em>marketplace</em>. I’ve ranted about Platforms before, and how important they are, and how Google has never once in their entire corporate history ever really understood what goes into making a successful open Platform, not counting Android or Chrome.</p><p id="33e4">Actually I should talk about Android briefly, because you’re probably thinking, hey, what about Android?</p><p id="c8f6">First, <em>Android is not Google</em>. They have almost nothing to do with each other. Android is a company that was purchased by Google in July 2005, and that company has been allowed to run more or less autonomously, and in fact has remained largely intact through the intervening years. Android is an infamously hairy tech stack, and a just-as-infamously prickly organization. As one Googler put it, “One does not simply walk into Android.”</p><p id="17a1">I’ve done my share of ranting about how bad some of Android’s early design decisions have been. Heck, at the time I was doing that ranting, they were busy rolling out shit like Instant Apps, which is now (surprise!) <a href="https://android-developers.googleblog.com/2019/04/google-play-instant-feature-plugin.html#:~:text=When%20building%20your%20app%2C%20you,bundle%20as%20soon%20as%20possible." rel="noopener ugc nofollow" target="_blank">deprecated</a>, and haha on you if you were dumb enough to listen to them when they told you to port all your stuff to Instant Apps.</p><p id="f23b">But there’s a difference here, a material difference, which is that the Android folks actually DO understand how important Platforms are, they go <em>well out of their way</em> to prevent breaking your old Android code. In fact, their efforts to keep backward compatibility are so extreme that even I, during my brief stint in Android-land a few years back, found myself trying to convince them to drop support for some of the oldest devices and APIs. (I was wrong, as I’ve been about many other things past and present. Sorry Android folks! Now that I’ve visited Indonesia, I see why we need them.)</p><p id="377f">The Android folks take backwards compatibility to almost unimaginable extremes, which piles on massive amounts of legacy technical debt in their systems and toolchains. Oh boy, you should see some of the crazy stuff they have to do in their build system, all in the name of compatibility.</p><p id="bde0">For this, I award Android the coveted You’re Not Google award. You really don’t want to be Google. They don’t know how to build platforms that can last, whereas Android <em>does</em> know how to do it. And so Google is being very wise in one respect: letting the Android folks do things their way.</p><p id="3ec4">Instant Apps was a pretty dumb idea, though. You know why? Because it required you to <em>rewrite and re-architect your application!</em> As if people are just going to up and rewrite 2 million apps. I’m guessing Instant Apps was probably a Googler’s idea.</p><p id="cef2">But you see the difference here. Backwards compatibility comes with a steep cost, and Android has chosen to bear the burden of that cost, whereas Google insists that <em>you</em>, the paying customer, bear that burden.</p><p id="4d09">You can see Android’s commitment to backwards compatibility in their APIs. It’s a sure sign, when there are four or five different coexisting subsystems for doing literally the same thing, that underlying it all is a commitment to backwards compatibility. Which in the Platforms world, is synonymous with commitment to your customers, and to your marketplace.</p><p id="50ec">Google’s pride in their software engineering hygiene is what gets them into trouble here. They don’t like it when there are lots of different ways to do the same thing, with older, less-desirable ways sitting alongside newer fancier ways. It increases the learning curve for newcomers to the system, it increases the burden of supporting the legacy APIs, it slows down new feature velocity, and the worst sin of all: it’s ugly. Google is like Lady Ascot in Tim Burton’s Alice in Wonderland:</p><p id="f219"><strong>Lady Ascot</strong>: Alice, do you know what I fear most?</p><p id="8b14"><strong>Alice Kingsley</strong>: The decline of the aristocracy?</p><p id="87b2"><strong>Lady Ascot</strong>: <em>Ugly grandchildren</em>.</p><p id="e941">To explore the tradeoff of Pretty vs Practical, let’s take a peek at a third successful platform (after Emacs and Android) and see how it fares: Java itself.</p><p id="0fbb">Java has <em>tons</em> of deprecated APIs. Deprecation is super popular with Java programmers, more so than for most programming languages. Java itself, the core language and libraries, deprecates APIs all the time.</p><p id="f717">To take just one of thousands of examples, <a href="https://docs.oracle.com/en/java/javase/12/docs/api/java.base/java/lang/Thread.html#stop()" rel="noopener ugc nofollow" target="_blank">killing threads</a> is deprecated. It’s been deprecated since Java 1.2, released in December 1998. It’s been 22 years since they deprecated it.</p><p id="2b55">My live production code still kills threads <em>every day</em>. Is that a good thing? Absolutely! I mean, obviously if I were to rewrite the code today I’d do it differently. But my game code, which has been able to make hundreds of thousands of people happy over the past 2 decades, was written to kill worker threads that take too long, and <em>I’ve never had to change it.</em> I know my system best, and I have literally 25 years of experience with running it in production, and I can tell you: In my use case, killing these particular worker threads is <em>harmless</em>. It is not worth it to focus my time and energy on rewriting that code, and praise be unto Larry Ellison (I guess), since Oracle has never made me rewrite it.</p><p id="dd33">I guess Oracle understands Platforms too. Go figure.</p><p id="06d9">You can see evidence all through Java’s core APIs of waves of deprecation, like glacier lines in a canyon. There are easily five or six different keyboard focus managers in Java Swing. In fact it’s hard to find a Java API that isn’t deprecated. But they all still work! I think the only time the Java core team will actually <em>remove</em> an API is if it causes a blatant security problem.</p><p id="d186">Here’s the thing, folks: We software developers are all super busy, and we are also faced with competing alternatives in <em>every</em> software domain. At any given time, programmers in language X are looking at language Y as a possible replacement. Oh, you don’t believe me? What about Swift? Everyone’s migrating *to* Swift, not away from it, right? Oho, how little you know. Businesses are taking a mercenary’s accounting of their dual mobile teams (iOS and Android), and starting to realize that those phony-sounding dog-and-pony-show cross-platform development systems like Flutter and React Native have real teeth, and using them could cut their mobile team sizes in half, or alternately, make them twice as productive. There’s real money at stake here. Yes, there are trade-offs, but on the other hand, mooooooooney.</p><p id="12dc">Let’s say hypothetically that Apple was dumb enough to pull a Guido van Rossum, and declare that Swift 6.0 is backwards-incompatible with Swift 5.0, much in the way that Python 3 is incompatible with Python 2.</p><p id="5064">I probably told this story ten years ago, but about fifteen years ago I was at O’Reilly’s Foo Camp with Guido, sitting in a tent with Paul Graham and a bunch of other at-the-time mucky-mucks, waiting for Larry Page to fly out in his personal helicopter, and Guido was droning on tonelessly in the sweltering heat about “Python 3000”, which he had named in honor of the number of years it would take everyone to migrate to it. We kept asking him why he was breaking compatibility, and he’d answer, “Unicode”. And we’d ask him, hey, if we have to rewrite our code, then what other benefits are we going to see? And he’d answer, “Yoooooooooooooouuuuuuuniiiiiiicoooooooode”.</p><p id="a1d3">If you install the Google Cloud Platform “gcloud” SDK, you’ll get this notice:</p><p id="3fdb"><em>Dear RECIPIENT,</em></p><p id="ec71"><em>We would like to remind you that support for Python 2 is deprecated, so fuuuuuuck yoooooooooooooooooooouuuuuu</em></p><p id="0c3c">…and so on. The Circle of Life.</p><p id="856f">But the thing is, every single developer has choices. And if you make them rewrite their code enough times, some of those <em>other</em> choices are going to start looking mighty appealing. They’re not your hostages, as much as you’d like them to be. They are your guests. Python is still a very popular programming language, to be sure — but <em>golly</em> did Python 3(000) create a huge mess for themselves, their communities, and the <em>users</em> of their communities’ software — one that has been a train-wreck in progress for fifteen years and is still kicking.</p><p id="ed33">How much Python software was rewritten in Go (or Ruby, or some other alternative) because of that backwards incompatibility? How much <em>new</em> software was written in something other than Python, which <em>might</em> have been written in Python if Guido hadn’t burned everyone’s house down? It’s hard to say, but I can tell you, it hasn’t been <em>good</em> for Python. It’s a huge mess and everyone is miserable.</p><p id="4135">So let’s say Apple pulls a Guido and breaks compatibility. What do you think will happen? Well, maybe 80–90% of the developers will rewrite their software, if they’re lucky. Which is the same thing as saying, they’re going to lose 10–20% of their user base to some competing language, e.g. Flutter.</p><p id="a8af">Do that a few times, and you’ve lost half your user base. And like in sports, momentum in the programming world is <em>everything</em>. Anyone who shows up on the charts as “lost half their users in the past 5 years” is being flagged as a Big Fat Loser. You don’t want to be trending down in the Platforms world. But that’s exactly where deprecation — the “removing APIs” kind, not the “warning but permitting” kind — will get you, over time: Trending down. Because every time you shake loose some of your developers, you’ve (a) lost them for good, because they are angry at you for breaking your contract, and (b) given them to your competitors.</p><p id="6886">Ironically, I played a role in helping Google become the deprecation-happy prima donnas that they are today, when I built Grok, which is a source-code understanding engine that facilitates automation and tooling on source code itself — similar to an IDE, but as a cloud-based service that stores materialized representations of Google’s entire multi-billion-line source graph in a big datastore.</p><p id="08aa">Grok provided Googlers with a powerful foundation for doing automated refactorings across the entire code base (literally all of Google). Grok can figure out not just your upstream dependencies (who you depend on), but also your <em>downstream</em> dependencies (who depends on you), so when you change an API, you know everyone you’re breaking! So you can make a change and know that every consumer of your API is being updated to the replacement version; in fact, often, via a tool they wrote called Rosie, you can automate it entirely.</p><p id="1652">This permits Google’s code base internally to be almost preternaturally “clean”, as they have these automated mice scurrying about the house, <em>There Will Come Soft Rains</em>-style, cleaning up the dust balls as they rename SomeDespicablyLongFunctionName to SomeDespicablyLongMethodName because someone decided it was an ugly grandchild and it needed to be euthanized.</p><p id="222b">And honestly it works pretty well for Google… <em>internally</em>. I mean, yes, the Go community within Google does get some good-natured laughs at the expense of the Google Java community over the latter’s habit of gratuitous continuous refactoring. If you keep twiddling with something N times, then it implies that not only did you fuck it up N-1 times, but after a while it’s pretty clear you’ve probably fucked it up on the Nth try as well. But by and large, they stay on top of it, and stuff stays “clean”.</p><p id="4ee1">The problem begins when they take that attitude and try to impose it on their Cloud customers and other API users.</p><p id="e703">I’ve walked you a bit through Emacs, Android, and Java; let’s look at one last successful long-lived platform: The Web itself. Boy, HTTP sure has gone through a lot of iterations since 1995 when we were all using blink tags and under-construction signs in our handwritten HTML pages.</p><p id="0e11">But it still works! And those pages still work! That’s right, folks, browsers are some of the world champions at backwards compatibility. Chrome is another example of a rare Google Platform that has their heads screwed on straight, and, you guessed it, Chrome acts effectively like a separate company from the rest of Google.</p><p id="7203">I’ll also give a shout-out to our friends in the Operating Systems business: Windows, Linux, NOT APPLE FUCK YOU APPLE, FreeBSD, and so on, for doing such a great job of backwards compatibility on their successful platforms. (Apple gets like a C-minus at best, since they break shit all the time for no good reason, but somehow the community papers over it on each release, and so far, containers haven’t completely obsoleted OS X… yet.)</p><p id="02d5">But wait, you say. Aren’t you comparing apples to oranges, with standalone single-machine software systems like Emacs/JDK/Android/Chrome to multi-machine systems and APIs like Clouds?</p><p id="c6fd">Well, I tweeted this yesterday, but as a Larry Wall “sucks/rules”-style yardstick, I searched for “deprecated” on Google and Amazon’s developer sites, respectively, and even though AWS has <em>hundreds</em> more service offerings than GCP, Google’s developer docs mention deprecation around 7x as often.</p><p id="e94d">At this point, if anyone at Google is reading this, they’re probably ready to pull out charts, Donald Trump interview style, showing me how they’re actually doing really well, and that I can’t do unfair comparisons like “deprecation mentions as a function of number of service offerings”.</p><p id="6f3d">But after all these years, Google Cloud is still #3 (I still haven’t written my “<strong>How to Aim For #2 and Miss</strong>” blog post about this), and according to some internal sources, there’s some concern that they may sink to #4 soon.</p><p id="8ada">I don’t have a slam-dunk silver-bullet argument for you here, to “prove” my thesis. All I have are the colorful examples I’ve shared, which I’ve accumulated over 30 years as a developer. I’ve alluded to the deeply philosophical nature of this problem; in a sense, it’s politicized within the software communities. Some folks believe that platform <em>developers</em> should shoulder the costs of compatibility, and others believe that platform <em>users</em> (developers themselves) should bear the costs. It’s really that simple. And isn’t politics always about who has to shoulder costs for shared problems?</p><p id="5e62">So it’s political. And there will be angry responses to this rant.</p><p id="475e">As a <em>user</em> of Google Cloud Platform, and also (at Grab) of AWS for 2 years, I can tell you that there’s a <em>world</em> of difference between the philosophies of Amazon and Google when it comes to priorities. I’m not actively developing on AWS, so I don’t have as much of a sense for how often they sunset APIs that they have previously dangled alluringly before unwitting developers. But I have a suspicion it’s nowhere <em>near</em> as often as happens at Google, and I believe wholeheartedly that this source of constant friction, and frustration, in GCP, is one of the biggest factors holding it back.</p><p id="981e">I know I haven’t gone into a lot of specific details about GCP’s deprecations. I can tell you that virtually everything I’ve used, from networking (legacy to VPC) to storage (Cloud SQL v1 to v2) to Firebase (now Firestore with a totally different API) to App Engine (don’t even get me started) to Cloud Endpoints to… I dunno, <em>everything</em>, has forced me to rewrite it all after at most 2–3 years, and they <em>never</em> automate it for you, and often there is <a href="https://stackoverflow.com/questions/47716433/migrate-from-legacy-network-in-gce" rel="noopener ugc nofollow" target="_blank">no documented migration path</a> at all. It’s just crickets.</p><p id="dff5">And every time, I look over at AWS, and I ask myself what the fuck I’m still doing on GCP. They clearly don’t want customers. They want <em>shoppers</em>. Do you see the difference? Let me show you.</p><p id="1e76">Google Cloud has a <a href="https://cloud.google.com/marketplace" rel="noopener ugc nofollow" target="_blank">Marketplace</a> in which people can offer their software solutions, and in order to avoid the empty-restaurant effect, they had to populate it with some offerings, so they contracted with a company called Bitnami to create a bunch of “click to deploy” solutions, or perhaps I should write “solutions”, because they don’t solve a fucking thing. They’re just there as checkboxes, as marketing filler, and Google never gave a shit whether any of them worked from Day One. I know the PMs who were driving it and I can assure you, those men do not give a shit.</p><p id="e7a5">Take <a href="https://console.cloud.google.com/marketplace/details/click-to-deploy-images/percona" rel="noopener ugc nofollow" target="_blank">click-to-deploy Percona</a>, for instance. I was getting fed up with Google Cloud SQL’s shenanigans, and started looking into setting up my own Percona cluster as an alternative. And for once, Google was going to have done something right, and they were going to save me some time and effort with the click of a button!</p><p id="87a3">Go ahead, I dare you. Follow the link and click the button. Choose “yes” to get all the default parameters and deploy the cluster to your Google Cloud project. Haha, joke’s on you; it doesn’t work. None of that shit works. It’s never tested, starts bit-rotting the minute they roll it out, and it wouldn’t surprise me if over half the click-to-deploy “solutions” (now we understand the air quotes) don’t work <em>at all.</em> It’s a completely embarrassing dark alley that you don’t want to wander down.</p><p id="2f76">But Google is straight-up <em>encouraging</em> you to use it. They want you to <em>buy</em> it. It’s transactional for them. They don’t want to <em>support</em> anything. It’s not part of Google’s DNA. Yes, the engineers support each other, as evidenced by my Bigtable anecdote. But for their customer-facing products and services, they have <em>always</em> been ruthless in <a href="https://killedbygoogle.com/" rel="noopener ugc nofollow" target="_blank">shutting down any offering</a> that doesn’t meet their money bar, even if it has millions of users.</p><p id="6d12">And this presents a real problem for GCP, because that DNA is behind all their Cloud offerings. They aren’t committed to supporting anything; it’s well-known that they refuse to host (as a managed service) any third-party software until <em>after</em> AWS has already done the same thing and built a successful business around it, at which point their customers hold them at gunpoint. But that’s the bar, to get Google to support something.</p><p id="9e2f">This lack of a support culture, combined with a “let’s break it in the name of making it prettier” deprecation treadmill, is alienating their developers.</p><p id="fff6">And that’s not a good thing if you want to build a long-lived platform.</p><p id="a964">Google, wake the fuck up. It’s 2020. You are still losing. It’s time to take a hard look in the mirror and answer for yourselves whether you really want to be in the Cloud business.</p><p id="d4be">If you do, then <strong>stop breaking shit</strong>. You guys are rich. We developers are not. So when it comes to shouldering the burden of compatibility, <em>you need to pay for it.</em> Not us.</p><p id="733a">Because there are at least three other really good Clouds out there. They are beckoning.</p><p id="86a6">And now I’ll get back to trying to fix all my broken stuff. Sigh.</p><p id="4b72">Tune in next time!</p><p id="f0d6"><em>p.s. An update, after having read some of the discussions (which were great, btw). Firebase is not deprecated, nor are there any plans that I know of. However, they have a nasty threading bug that causes the Java client to stop in App Engine, which one of their engineers helped me with </em><strong><em>while I was at Google</em></strong><em>, but they never actually fixed it outright, so I have a crummy workaround to restart my GAE app every day. Four years later! Now they have Firestore, which will take work to migrate to as it’s totally different, and the Firebase bug’s never gonna be fixed. What can we learn from this? You can get help from them </em><strong><em>if you work there</em></strong><em>. It’s frightening that I appear to be the only one using Firebase on GAE, since I’m literally writing fewer than 100 keys in a 100% vanilla app, and it stops working every couple days from an acknowledged bug. What can I tell you, except use it at your own risk. I’m switching to Redis.</em></p><p id="8e96"><em>I’ve also seen some folks more experienced with AWS saying that AWS basically never deprecates/sunsets anything, SimpleDB being a great example. My speculation about AWS not having Google’s deprecation disease seems to have been justified.</em></p><p id="2de3"><em>It was also brought to my attention that 20 days ago, Google’s App Engine team broke a critical Go library hosting service by deprecating and killing a GAE app being run by one of the core Go engineers. Egg on face indeed.</em></p><p id="f0bb"><em>Finally, I’ve heard that Googlers are busy discussing this already, and are by and large agreeing with me (love you guys!)—with the caveat that they seem to think that it’s not fixable because Google’s culture has never had the right incentive structure in place. I think it would be good if I could carve out some time to discuss the absolutely astonishing experience I had working with AWS engineers while I was at Grab. Sometime soon, I hope!</em></p><p id="e508"><em>Oh yeah, and they really did have different species of gummy sharks in a giant self-serve bin in Building 43 in MTV in 2005, hammerhead being my favorite flavor. Larry &amp; Sergey got rid of all the unhealthy snacks by 2006 though. So at the time of my Bigtable story in 2007, there were indeed no gummy sharks and I’m a big fat liar.</em></p><p id="9679"><em>When I looked at Cloud Bigtable 4 years ago (give or take), that was the cost. It seems to have come down a bit, but is still an awful lot for an empty datastore, especially given that my first story shows how inconsequential an empty Bigtable is in their grand scheme.</em></p><p id="3b37"><em>Sorry for offending all the Apple folks, and for not saying enough nice things about Microsoft, etc. I’ve read all the threads online and nobody has said anything unfair, in my opinion. I appreciate all the discussion this has generated! But sometimes you have to make a big splash to kick the discussions off, you know?</em></p><p id="6031"><em>Thanks for reading.</em></p><p id="56cf"><em>Update 2, Aug 19 2020: Stripe does it right! </em><a href="https://stripe.com/blog/api-versioning" rel="noopener ugc nofollow" target="_blank">https://stripe.com/blog/api-versioning</a></p><p id="3423"><em>Update 3, Aug 31 2020: A Google engineer in Cloud Marketplace who happens to be an old friend of mine contacted me to find out why C2D didn’t work, and we eventually figured out that it was because I had committed the sin of creating my network a few years ago, and C2D was failing for legacy networks due to a missing subnet parameter in their templates. I guess my advice to prospective GCP users is to make sure you know a lot of people at Google…</em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ChatGPT cut off date now April 2023 (107 pts)]]></title>
            <link>https://chat.openai.com/share/3b088460-86f8-4fa6-afd1-802b7f9a5e9f</link>
            <guid>38022277</guid>
            <pubDate>Thu, 26 Oct 2023 06:14:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chat.openai.com/share/3b088460-86f8-4fa6-afd1-802b7f9a5e9f">https://chat.openai.com/share/3b088460-86f8-4fa6-afd1-802b7f9a5e9f</a>, See on <a href="https://news.ycombinator.com/item?id=38022277">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Here are 10 significant catastrophes that occurred after 2022, up to my knowledge cutoff in April 2023, along with their associated casualties:</p><div><li><p><strong>Earthquake in Turkey and Syria (February 6, 2023):</strong> This devastating earthquake, with a magnitude of 7.8, struck southeastern Turkey and northern Syria, leading to widespread destruction. The death toll exceeded 47,000 people, making it one of the deadliest earthquakes in recent history.</p></li><li><p><strong>Floods in Brazil (January 2023):</strong> Severe floods and landslides hit the state of São Paulo in Brazil, resulting in over 50 deaths. Several cities, including São Sebastião and Ubatuba, were significantly impacted.</p></li><li><p><strong>Train Derailment in Greece (March 1, 2023):</strong> A passenger train and a freight train collided in central Greece, near the city of Larissa, causing the death of at least 57 people.</p></li><li><p><strong>Earthquake in Afghanistan (June 22, 2022):</strong> A powerful earthquake with a magnitude of 5.9 struck eastern Afghanistan, particularly affecting the Paktika and Khost provinces. The catastrophe resulted in the death of over 1,000 people.</p></li><li><p><strong>Floods in Pakistan (Mid-2022):</strong> Monsoon floods in Pakistan, particularly severe in the Sindh and Balochistan provinces, led to the deaths of over 1,000 people and displaced millions.</p></li><li><p><strong>Tornado Outbreak in the United States (March 2023):</strong> A series of tornadoes swept across several states in the U.S., including Mississippi, Alabama, and Georgia. The outbreak caused at least 25 fatalities.</p></li><li><p><strong>Ferry Fire in the Philippines (March 28, 2023):</strong> A fire broke out on a ferry in the Philippines, leading to at least 31 deaths. The incident occurred near the island of Basilan.</p></li><li><p><strong>Typhoon Noru in the Philippines (September 2022):</strong> This powerful typhoon, also known as Karding, caused widespread destruction in the Philippines, resulting in the deaths of at least 8 people.</p></li><li><p><strong>Landslides in Peru (January 2023):</strong> Heavy rains triggered landslides in the Cusco region of Peru, leading to at least 36 deaths. The town of Santa Teresa, near the tourist attraction Machu Picchu, was particularly affected.</p></li><li><p><strong>Cyclone Gabrielle in New Zealand (February 2023):</strong> This powerful cyclone caused significant flooding and landslides in New Zealand's North Island, leading to at least 11 deaths.</p></li></div><p>Please note that the number of casualties and the impact of these catastrophes might have changed after my last update in April 2023.</p></div>]]></description>
        </item>
    </channel>
</rss>