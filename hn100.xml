(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Wed, 13 Nov 2024 22:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Why the Guardian is no longer posting on X (154 pts)]]></title>
            <link>https://www.theguardian.com/media/2024/nov/13/why-the-guardian-is-no-longer-posting-on-x</link>
            <guid>42129924</guid>
            <pubDate>Wed, 13 Nov 2024 20:58:09 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theguardian.com/media/2024/nov/13/why-the-guardian-is-no-longer-posting-on-x">https://www.theguardian.com/media/2024/nov/13/why-the-guardian-is-no-longer-posting-on-x</a>, See on <a href="https://news.ycombinator.com/item?id=42129924">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="maincontent"><p>We wanted to let readers know that we will no longer post on any official Guardian editorial accounts on the social media site X (formerly Twitter). We think that the benefits of being on X are now outweighed by the negatives and that resources could be better used promoting our journalism elsewhere.</p><p>This is something we have been considering for a while given the often disturbing content promoted or found on the platform, including <a href="https://www.theguardian.com/technology/article/2024/sep/05/racism-misogyny-lies-how-did-x-become-so-full-of-hatred-and-is-it-ethical-to-keep-using-it" data-link-name="in body link">far-right conspiracy theories and racism</a>. The US presidential election campaign served only to underline what we have considered for a long time: that X is a toxic media platform and that its owner, Elon Musk, has been able to use its influence to <a href="https://www.theguardian.com/technology/2024/nov/04/elon-musk-x-network-donald-trump" data-link-name="in body link">shape political discourse</a>.</p><p>X users will still be able to share our articles, and the nature of live news reporting means we will still occasionally embed content from X within our article pages.</p><p>Our reporters will also be able to carry on using the site for news-gathering purposes, just as they use other social networks in which we do not officially engage.</p><p>Social media can be an important tool for news organisations and help us to reach new audiences but, at this point, X now plays a diminished role in promoting our work. Our journalism is available and open to all on our website and we would prefer people to come to <a href="http://theguardian.com/" data-link-name="in body link">theguardian.com</a> and support our work there.</p><p>Thankfully, we can do this because our business model does not rely on viral content tailored to the whims of the social media giants’ algorithms – instead we’re funded directly by our readers. You can <strong><a href="https://support.theguardian.com/uk/contribute?utm_source=GUARDIAN_WEB&amp;utm_content=X_announcement&amp;utm_campaign=X_announcement&amp;utm_medium=ACQUISITIONS_EDITORIAL_LINK&amp;utm_term=X_announcement" data-link-name="in body link">support the Guardian today from just £1/$1</a>.</strong></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A Student's Guide to Writing with ChatGPT (104 pts)]]></title>
            <link>https://openai.com/chatgpt/use-cases/student-writing-guide/</link>
            <guid>42129064</guid>
            <pubDate>Wed, 13 Nov 2024 19:26:26 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/chatgpt/use-cases/student-writing-guide/">https://openai.com/chatgpt/use-cases/student-writing-guide/</a>, See on <a href="https://news.ycombinator.com/item?id=42129064">Hacker News</a></p>
Couldn't get https://openai.com/chatgpt/use-cases/student-writing-guide/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Wonder is acquiring Grubhub (101 pts)]]></title>
            <link>https://about.grubhub.com/news/wonder-announces-acquisition-of-grubhub/</link>
            <guid>42128935</guid>
            <pubDate>Wed, 13 Nov 2024 19:12:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://about.grubhub.com/news/wonder-announces-acquisition-of-grubhub/">https://about.grubhub.com/news/wonder-announces-acquisition-of-grubhub/</a>, See on <a href="https://news.ycombinator.com/item?id=42128935">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">
		<main id="main">

			<!-- Single News - Top -->
			<div>

				<!-- Back To Previous Page -->
				<!-- END Back To Previous Page -->

				<div>
					

					<p><span>November 13, 2024</span>

					</p>

					<!-- ShareThis BEGIN -->
					
					<!-- ShareThis END -->

					<!-- Featured Image -->
					<p><img width="680" height="280" src="https://about.grubhub.com/wp-content/uploads/2024/11/Wonder-x-Grubhub-featured.png" alt="" decoding="async" fetchpriority="high" srcset="https://about.grubhub.com/wp-content/uploads/2024/11/Wonder-x-Grubhub-featured.png 680w, https://about.grubhub.com/wp-content/uploads/2024/11/Wonder-x-Grubhub-featured-300x124.png 300w" sizes="(max-width: 680px) 100vw, 680px">					</p>
					<!-- END Featured Image -->

				</div>

									<!-- Content -->
					<div><p><span>NEW YORK and CHICAGO, Nov. 13, 2024 — </span><a href="https://www.wonder.com/"><span>Wonder</span></a><span>, a new kind of food hall that is revolutionizing the food industry by creating the super app for mealtime, announced that it is acquiring </span><a href="https://www.grubhub.com/"><span>Grubhub</span></a><span>, a leading food ordering and delivery platform with more than 375,000 merchants and 200,000 delivery partners across the United States. </span><span>Integrating Grubhub with Wonder is the next step in Wonder’s mission to make great food more accessible, bringing together the convenience, speed and selection of first-party and third-party restaurants, groceries and meal kits in a single app order.</span> <span>Additionally, all Wonder locations will be available on Grubhub for third-party delivery.</span></p>
<p><span>Wonder will acquire Grubhub from Just Eat Takeaway.com for an enterprise value of $650 million, including $500 million of senior notes and $150 million cash. Completion is expected during Q1 2025, subject to customary closing conditions including regulatory approvals. Jefferies served as Wonder’s exclusive financial advisor on the transaction.</span></p>
<p><span>Wonder has also announced an additional $250 million in capital raised exclusively from new investors to further its mission and growth.</span></p>
<p><span>Founded by serial entrepreneur Marc Lore, Wonder is making great food more accessible while pioneering a new category of “Fast Fine” dining. Wonder offers Multi-Restaurant Ordering, a first in the industry where customers can order from upwards of 30 restaurants in a single order, with each item being made-to-order in a sequenced fashion so that they finish simultaneously and can be delivered to the customer together.</span></p>
<p><span>The platform features exclusive offerings from the world’s best chefs–including Bobby Flay, Marcus Samuelsson and José Andrés–and the country’s best restaurants–including Maydan, Tejas Barbecue, Di Fara Pizza and Fred’s Meat and Bread. Wonder currently has 28 locations in the Northeastern U.S., with seven additional locations slated to open by the end of the year. Leveraging its proprietary technology, Wonder is able to differentiate itself from every other restaurant or food delivery concept by offering exceptionally high-quality food, with order-to-delivery times below 30 minutes.</span></p>
<p><span>For 20 years, Grubhub has connected merchants with nearby customers looking for takeout and delivery. Its logistics network covers the vast majority of the U.S. population with on-demand delivery from independent restaurants, leading national restaurant brands, and convenience, grocery, pet and office supply retailers. The company’s loyalty program, </span><a href="https://www.grubhub.com/plus"><span>Grubhub+</span></a><span>, provides members with $0 delivery fees, lower service fees and 5 percent back on pickup orders. Beyond its consumer delivery marketplace, Grubhub has a </span><a href="https://www.grubhub.com/about/campus"><span>Campus Dining</span></a><span> business that powers online ordering at more than 360 universities and a </span><a href="https://corporate.grubhub.com/"><span>Corporate Accounts</span></a><span> business that provides flexible meal perks platforms for more than 10,000 companies.</span></p>
<p><span>“Wonder’s acquisition of Grubhub continues our mission to make great food more accessible. As we enhance our customer experience with selection, speed, and variety, we’re excited to soon offer a curated selection of Grubhub’s restaurant partners directly in the Wonder app, alongside our owned and operated restaurants and meal kits,” said Marc Lore, Founder and CEO of Wonder. “Bringing Wonder and Grubhub together is the next step in our vision to create the super app for meal time, re-envisioning the future of food delivery.”&nbsp;</span></p>
<p><span>“I am incredibly excited for Grubhub to join forces with Wonder and bring more value to our diners, merchants and delivery partners,” said Howard Migdal, Grubhub CEO. “Since our earliest days, Grubhub has helped restaurants open their doors to new customers, while introducing diners to new cuisines. That’s why I’m confident that Grubhub will complement Wonder’s mission to make great food more accessible and that together we will create remarkable dining experiences for more customers across the country.”</span></p>
<p><strong>About Wonder</strong></p>
<p><span>Wonder is a new kind of food hall that is revolutionizing the food industry by creating the super app for mealtime, operating a collection of delivery-first restaurants and pioneering a new category of “Fast Fine” dining.&nbsp;</span></p>
<p><span>Featuring some of the world’s best chefs including Bobby Flay, Jose Andres, Nancy Silverton and Marcus Samuelsson, along with award-winning restaurants from across the country including Tejas Barbeque and Di Fara Pizza, customers can experience any combination of these chefs and restaurants all together in one order for the first time. In 2023, Wonder acquired meal kit pioneer Blue Apron.</span></p>
<p><strong>About Grubhub</strong></p>
<p><span>Grubhub is a leading U.S. food ordering and delivery marketplace. Dedicated to connecting diners with the food they love from their favorite local restaurants, Grubhub elevates food ordering through innovative restaurant technology, easy-to-use platforms, and an improved delivery experience. Grubhub features 375,000 merchants in over 4,000 U.S. cities.</span></p>
</div>
					<!-- END Content -->
				
			</div>
			<!-- END Single News - Top -->

		</main><!-- #main -->
	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Impact of Jungle Music in 90s Video Game Development (212 pts)]]></title>
            <link>https://pikuma.com/blog/jungle-music-video-game-drum-bass</link>
            <guid>42128717</guid>
            <pubDate>Wed, 13 Nov 2024 18:43:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://pikuma.com/blog/jungle-music-video-game-drum-bass">https://pikuma.com/blog/jungle-music-video-game-drum-bass</a>, See on <a href="https://news.ycombinator.com/item?id=42128717">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>Jungle music was found in countless games from the early 90s. This article explains what jungle is, where it comes from, and why its soundtrack was such a perfect match for titles of the PlayStation &amp; Nintendo 64 era.</p><div>
                        <p>This blog post will be fundamentally different and less technical than the other ones we have in our school website. You might be surprised to find an entire blog post dedicated to a style of music in an education platform, but the more I studied and learned about this topic, the more I realized how much some of my life-long passions overlapped. We are about to go on a journey filled with game development history, retro 3D polygons, electronic music, old synths, samplers, and audio production using ancient Amiga &amp; Atari computers. It's a beautiful thing!</p>
                        <p>The 90s saw 3D polygons taking over the main stage in people's homes with the <a href="https://en.wikipedia.org/wiki/PlayStation_(console)" target="_blank">Sony PlayStation</a>, the <a href="https://en.wikipedia.org/wiki/Sega_Saturn" target="_blank">Sega Saturn</a>, and the <a href="https://en.wikipedia.org/wiki/Nintendo_64" target="_blank">Nintendo 64</a>. This generation of 32-bit consoles not only redefined our understanding of game graphics but also helped in amplifying the reach of a new style of music around the globe.</p>
                        <p>Born in the UK in the end of the 80s, Jungle music was full of energetic drum patterns, tasty bass lines, and a high tempo that matched the fast-pace nature of these new 3D titles. Combine all these elements with that naïve <i>"hope for the future"</i> that was flowing in the air in the 90s and we get ourselves an amazing decade to be alive!</p>

                        <h3>Looking Back</h3>
                        <p>Let's position ourselves back in time to contemplate what was really happening in terms of music and technology. We'll briefly review the birth of electronic music and explore its evolution until we reach the early days of jungle music.</p>
                        <p>Up until the 70s and 80s, the vast majority of instruments used in recordings and live concerts were <i>organic</i>. We are just leaving the 50s and 60s which were the peak years of jazz albums using drums, bass, acoustic pianos, trumpet, saxophone, etc. The evolution of the urban sound of the Chicago blues and the popularity of rock &amp; roll music changed things a bit, for we could already find many instruments using electricity to either produce, amplify, or distort sound. Electric guitars, tonewheel organs, electric pianos, and many other instruments were now using electricity and mechanical parts to create music. But still, they were fundamentally <i>organic</i> instruments that did not use any form of digital transformation to produce or alter sound waves.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/hammond-rhodes.png" alt="hammond organ fender rhodes"></p><p>Both the Hammond B3 organ and the Fender Rhodes are electro-mechanic instruments</p>
                        <p>The 80s saw an explosion of digital equipment being used in music production. Synthesizers became the mascots of 80s music and digital computers were now being largely used to create, record, and edit audio. Sequencers, drum machines, samples, and software-based instruments were now being used to create the music that was being broadcasted to the world. We were seeing the birth to the electronic dance music (<a href="https://en.wikipedia.org/wiki/Electronic_dance_music" target="_blank">EDM</a>) scene, which is strongly associated to the culture of raves &amp; clubbers.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/first-digital-synth.jpg" alt="fairlight cmi"></p><p>The 1979 <a href="https://en.wikipedia.org/wiki/Fairlight_CMI" target="_blank">Fairlight CMI</a> is a digital synth, sampler, &amp; digital audio workstation.</p>
                        <p>By the late 80s and early 90s, the advent of the home computer with multimedia capabilities allowed virtually anyone that owned a computer to create and record music. Not only big music labels were able to produce high-quality albums, but many independent artists had the chance to do so from improvised digital home studios.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/atari-st-home-studio.jpg" alt="atari st"></p><p><a href="https://www.youtube.com/@TransistorSounds" target="_blank">TransistorSounds'</a> home studio with an Atari ST running a MIDI sequencer</p>
                        <p>Most of this production was happening in rich countries with easy access to technology, like US, UK, and Germany. The techno scene originated in Germany, reached the UK, and it was later associated with the Chicago &amp; Detroit EDM scene in America.</p>

                        <h3>The Early Days of Jungle Music</h3>
                        <p>Music producers started to explore using different tempos and including different break patterns in their tracks. One popular technique was to use a <a href="https://en.wikipedia.org/wiki/Sampler_(musical_instrument)" target="_blank">sampler</a> to isolate and record parts of existing songs and use them to create new tunes. In simple terms, a sampler is a musical instrument that can record and play back samples (portions of sound recordings). The most popular samplers from that era were the ones from AKAI.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/akai-s1100.jpg" alt="akai s1100"></p><p>The AKAI S1100 was one of the first samplers that could add effects to audio (reverbs, delays, echoes).</p>
                        <p>UK producers started to use samplers to isolate drums from existing songs and create different break patterns for their own tracks. <a href="https://en.wikipedia.org/wiki/Fabio_(DJ)" target="_blank">Fabio</a> &amp; <a href="https://en.wikipedia.org/wiki/Grooverider" target="_blank">Grooverider</a> are considered by many the two originators of Jungle. Famous jungle producer <a href="https://en.wikipedia.org/wiki/Goldie" target="_blank">Goldie</a> even mentioned in an interview that Fabio was the first person to ever use the term "jungle" to describe this new style of music. Both Fabio and Grooverider started mixing R&amp;B and Funk tunes with fast-tempo beats from techno &amp; house tracks. They noticed that people enjoyed the combination so they started using the same formula in their own productions. They would browse their collection of R&amp;B albums and sample drum breaks that could then be chopped up &amp; rearranged to serve as a foundation for a new song.</p>
                        <h5>The "Amen Break"</h5>
                        <p>One of the first challenges is to find a good drum break. The method consists in browsing one's vinyl collection looking for a clear drum solo that can be isolated, sampled, and chopped up. The following audio is an excerpt of a very popular drum break that was used many times in jungle music production. The song is called "Amen Brother!" and it was recorded in 1969 by <a href="https://en.wikipedia.org/wiki/The_Winstons" target="_blank">The Winstons</a>.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/vynil-amen-brother.png" alt="amen brother vinyl"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/amen-brother.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/HrrWhCbZAyY?si=NPSU090tlTkE638e" target="_blank">[full version]</a></p>
                        <p>This is arguably the most popular sample in the history of jungle music. The drum break above was sped up, sampled, and used in so many tracks that it was even awarded a special name: <a href="https://en.wikipedia.org/wiki/Amen_break" target="_blank"><i>The Amen Break</i></a>.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/amen-break-notation.svg" alt="amen break notation"></p><p>Drum notation for the Amen break</p>
                        <p>Of course, the Amen break is not the only famous drum pattern used by jungle artists. Other classic drum samples also became famous and are instantly recognizable by jungle listeners. Examples of popular drum breaks are:</p>
                        <ul>
                            <li><strong>Think break</strong>: Used in the song <a href="https://youtu.be/z5NMTyAuPMk?si=zEaVB3pNVUGxnzuP" target="_blank">Burial</a> by Leviticus</li>
                            <li><strong>Apache break</strong>: Used in the song <a href="https://youtu.be/fRzjfOtsUcQ?si=AxX_2cy_fzlUvb8X" target="_blank">Inner City Life</a> by Goldie</li>
                            <li><strong>Action break</strong>: Used in the song <a href="https://youtu.be/S60DEe_LxWI?si=vRoLVSMC7URx0QVj" target="_blank">Heroes</a> by Reprazent</li>
                            <li><strong>Assembly Line break</strong>: Used in the song <a href="https://youtu.be/5-xmAhqb_ZQ?si=5cEVUTcmLEU7WYex" target="_blank">Obsession</a> by Future Cut</li>
                            <li><strong>Do the Do break</strong>: Used in the song <a href="https://youtu.be/t6Wr1JgCO9A?si=PjUAk6uyXCaYW5Us" target="_blank">Circles</a> by Adam F</li>
                            <li><strong>Sniper break</strong>: Used in the song <a href="https://youtu.be/29pSN5gJTYE?si=v4AICD5gxnf73YCv" target="_blank">Something Out There</a> by Ray Keith</li>
                        </ul>
                        <h3>Chopping Things Up</h3>
                        <p>UK producers started to chop up breaks, add synths, pads, chords, vocals, and many other elements on top of the original drum pattern.</p>
                        <p>Back in the day, most electronic producers would glue all these pieces together using a <a href="https://en.wikipedia.org/wiki/Amiga" target="_blank">Commodore Amiga</a> or an <a href="https://en.wikipedia.org/wiki/Atari_ST" target="_blank">Atari ST</a> computer. A very popular tracker that could be used to chop up samples from the early jungle days was <a href="https://en.wikipedia.org/wiki/OctaMED">OctaMED</a> on the Amiga.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/octamed.jpg" alt="octamed"></p><p>OctaMED tracker on the Commodore Amiga</p>
                        <p>Some producers also used a MIDI sequencer called <a href="https://en.wikipedia.org/wiki/Steinberg_Cubase" target="_blank">Cubase</a> on the Atari ST. They could connect samplers and synths to the computer via MIDI and sequence a track using the advanced (at the time) features of <a href="https://en.wikipedia.org/wiki/Steinberg" target="_blank">Steinberg's</a> software. Nowadays, Cubase is a complete digital audio workstation (DAW) that can record, arrange, and edit audio. But the first Cubase version that ran on the Atari ST was originally only a MIDI sequencer.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/cubase-atari-st.jpg" alt="cubase atari st"></p><p>Cubase sequencer on the Atari ST</p>
                        <p>Many jungle tunes have staple synth, strings, and pads sounds. Some famous synths &amp; keyboards from this era were the <a href="https://en.wikipedia.org/wiki/Prophet-5" target="_blank">Sequential Prophet-5</a>, <a href="https://en.wikipedia.org/wiki/Casio_CZ_synthesizers" target="_blank">Casio CZ-1000</a>, <a href="https://en.wikipedia.org/wiki/Korg_Poly-61" target="_blank">Korg Poly-61</a>, and the <a href="https://en.wikipedia.org/wiki/Roland_Alpha_Juno" target="_blank">Roland Alpha Juno</a>.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/jungle-synths.png" alt="jungle synths"></p><p>The Prophet-5, the Korg Poly-61, and the Casio CZ-1000 were largely used in early EDM recordings</p>
                        <p>To give you a taste of what the final product sounds like, the track below is an example of a complete song produced by Andy C &amp; Ant Miles called "Valley of the Shadows" from 1992. It uses sampled drums, bass, keyboards, and vocals.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/vynil-origin-unknown.png" alt="origin unknown valley of the shadows"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/origin-unknown-valley-of-the-shadows.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/a5meT63flnM?si=AF_3TnEHCb6bF4KA" target="_blank">[full version]</a></p>
                        <p><strong>Fun fact</strong>: It's very common for jungle tracks to use samples extracted from movies &amp; TV shows. The "long dark tunnel" sample above is from a late 80s BBC Q.E.D. science documentary about near death experiences.</p>

                        <h3>The Jamaican Influence</h3>
                        <p>Jungle music was always strongly associated with the Jamaican culture and has strong roots in elements of Jamaican music. During the UK growth period following the Second World War, Caribbean people were strongly encouraged to immigrate to the United Kingdom to help with jobs and the development of the country. They brought their families and traditions to the UK and slowly started infusing their culture into the communities they became a part of. This included food, clothing, language, and of course, music.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/jamaica-mc.jpg" alt="jamaica jungle"></p><p>The <i>Sound System</i> is an important part of Jamaican culture and history.</p>
                        <p>The UK rave scene that brought large groups of people together to hear and celebrate electronic dance music was very similar to the <a href="https://en.wikipedia.org/wiki/Sound_system_(Jamaican)" target="_blank">Jamaican sound system.</a> The sound system represented a gathering site and social mixing where a group of DJs and MCs played mostly ska, dancehall, and reggae music. The sound system found a new home in the UK and it is an important part of Jamaican culture which largely influenced the UK hardcode and jungle scene. Samples of Jamaican music with ragga vocals and dubs are very common in the early days of jungle.</p>
                        <p>The track below is a classic example of jungle with Jamaican ragga vocals. "Champion Dj" was recorded by Blackstar (a.k.a. Congo Natty, a.k.a. Rebel MC) and Top Cat:</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/vynil-champion-dj.png" alt="blackstar feat top cat champion dj"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/champion-dj.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://www.youtube.com/watch?v=pzmgycOmhqo" target="_blank">[full version]</a></p>
                        <p>Another great example of Jamaican ragga vocals is the jungle version of "How The West Was Won" by Bounty Killer. Bounty Killer started in the dancehall industry in Kingston and is now worldwide famous for his aggressive vocal style:</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/vynil-how-the-west-was-won.png" alt="bounty killer how the west was won"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/how-the-west-was-won-jungle.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://www.youtube.com/watch?v=A2KU0epVkkM" target="_blank">[full version]</a></p>

                        <h3>Jungle Evolution &amp; Subgenres</h3>
                        <p>It was very difficult for rave culture to be embraced by the mainstream media in its early days, mainly because of its association with drug use in the UK. While licensed radio stations would flat out refuse to play any underground music, pirated stations were happy to do so.</p>
                        <p><strong>Fun fact</strong>: Unlicensed stations began streaming jungle music from onboard ships off the coast of Britain, hence the expression "pirate radios." These illegal streaming sites would soon move to city council flats (housing facilities similar to what Americans call “the projects”). Popular jungle producer <a hreg="https://en.wikipedia.org/wiki/Roni_Size" target="_blank">Roni Size</a> mentioned in an interview that he used to live in a council flat with prepaid electricity and he could only work 15-20 minutes on a track before the flat ran out of electricity and he was forced to top up the meter.</p>
                        <p>Pirate radios such as <a href="" target="_blank">Kool FM</a>, <a href="https://en.wikipedia.org/wiki/Kiss_(UK_radio_station)" target="_blank">Kiss FM</a>, and <a href="https://en.wikipedia.org/wiki/Rinse_FM" target="_blank">Rinse FM</a> were undeniably one of the big reasons jungle music became so popular in the UK. These pirate stations were built around communities and helped stream the style to thousands of listeners every day.</p>
                        <p>Jungle music grew, evolved, and gave birth to many subgenres:</p>
                        <ul>
                          <li><strong>Ragga</strong>: A subgenre where jungle breaks contain Jamaican dub samples and ragga vocals by MCs. Popular names of the ragga jungle style are Serial Killaz, Rebel MC, General Levy, Benny Page, Shy FX, Top Cat, Sizzla, M-Beat, Krinjah, and Jacky Murda.</li>
                          <li><strong>Atmospheric</strong>: Jungle breaks with atmospheric sounds made from synth pads and keyboards. Artists like LTJ Bukem, 4Hero, and Artemis helped spread the style and the label Good Looking Records became a synonym of ambient and atmospheric jungle.</li>
                          <li><strong>Liquid</strong>: Liquid jungle or sometimes called Liquid funk uses several influences from soul &amp; funk music, including melodic vocals and R&amp;B basslines similar to the ones found in house and trance music. A few examples of liquid jungle artists are High Contrast, Calibre, Netsky, Makoto, Solid State, and Nu:Tone.</li>
                          <li><strong>Jazzstep</strong>: Jungle breaks combined with organic jazz instruments like upright bass, Rhodes piano, organ, saxophone, trumpet, and sometimes played using a real live drum kit instead of electronic drum samples. Some known jazzy jungle producers are Roni Size, Alex Reece, LTJ Bukem, London Elektricity, EZ-Rollers, and A-Sides.</li>
                          <li><strong>Darkstep</strong>: Heavy use of deep pads with low frequencies to achieve a dark mood; often includes samples from horror movies. Popular darkstep artists are Goldie, Limewax, Dieselboy, Bad Company, 4Hero, Ray Keith, and Black Sun Empire.</li>
                          <li><strong>Techstep</strong>: A subgenre characterized by removing the R&amp;B influence and the lack of organic instruments. It contains a dark sci-fi mood and near exclusive use of synthesized or sampled sound sources. It brings many influences from industrial techno music and some popular names of the style are Ed Rush, Trace, and other artists from the Metalheadz label.</li>
                          <li><strong>Sambass</strong>: This style uses Brazilian elements from samba, bossa nova, and other Latin music styles on top of a drum'n'bass base. The pioneers of this style are Patife, Marky, XRS, and Drumagick.</li>
                        </ul>
                        <p>By the second half of the 90s, jungle music was everywhere and as a consequence the sound ended up losing a bit of its essence. At the same time, the party drug of choice switched from ecstasy to cocaine and the atmosphere of the rave scene started to change. Wanting to distance themselves from this environment and aiming to gain more mainstream space, producers began to tweak the formula further, removing the ragga and reggae influences from their tunes but keeping the same fast BPM breaks and heavy basslines. This new style was named <a href="https://en.wikipedia.org/wiki/Drum_and_bass" target="_blank">drum'n'bass</a> and it achieved massive popularity in the following years.</p>

                        <h3>Electronic &amp; Jungle Music in 90s Games</h3>
                        <p>Jungle and many other genres of EDM were a perfect match for the fast-pace games that were developed in the 90s. Most of the titles using a jungle soundtrack were from the second half of the decade, although the trend continued all the way up through the mid 2000s.</p>
                        <p>Consoles from this generation were also able to store and play CD-quality audio, which meant developers could really take advantage of the entire spectrum of frequencies and sounds that both jungle &amp; drum'n'bass demanded.</p>
                        <p>Many PlayStation &amp; Nintendo 64 games dipped into different subgenres of jungle as different levels required different moods. Atmospheric &amp; ambient were often used in games with a futuristic or space-like style. Some developers would prefer a calmer jazzy track for menus and transition levels, while other games required a more chaotic high-BPM track for levels where the objective was to create tension.</p>

                        <h5>Wipeout</h5>
                        <p>Back in 1994, Sony was getting everything ready for the release of the PlayStation. Sony knew that it needed two important things to succeed in the following years: an easy SDK and a set of competent developers that would help them create exciting games for the new console.</p>
                        <p>One of Sony's big decisions before the release of the PlayStation was the acquisition of the British game development studio <a href="https://en.wikipedia.org/wiki/Psygnosis" target="_blank">Psygnosis</a>. The Liverpool-based studio was involved not only in the development of the official PlayStation SDK but also in launch titles for the console.</p>
                        <p>One of the most important games for the Sony PlayStation was <a href="https://en.wikipedia.org/wiki/Wipeout_(video_game)" target="_blank">Wipeout</a>. Unique at the time, the game was noted for its futuristic setting and by its influence of electronic music and rave scene. The development of Wipeout overlapped with a boom in popularity of EDM, and the British-based developers were able to inject their experiences from the UK rave scene into the game's sound and visuals.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/wipeout.png" alt="wipeout game"></p><p>Psygnosis' Wipeout for the Sony PlayStation</p>
                        <p>1994 was considered by many as "the summer of jungle". Many legal stations started to play the style and several CD compilations of jungle music appeared on store shelves.</p>
                        <p>Wipeout's electronic music soundtrack featured original in-house compositions by Tim Wright (a.k.a. CoLD SToRAGE) and some modern versions of the series also include tracks from famous EDM artist like Leftfield, The Chemical Brothers, Orbital, New Order and The Prodigy.</p>
                        <p><strong>Fun fact</strong>: Tim Wright mentioned in an interview that he did not really enjoy electronic music culture before his work on Wipeout, and he was actually disappointed when the marketing team gave him a box of EDM albums to serve "as inspiration" for the new game's soundtrack. Tim also mentioned that he only fully understood the mood that the development team wanted once he was forced to visit a UK underground club and experience the sound and the culture by himself.</p>

                        <h5>Rage Racer</h5>
                        <p>It is impossible to talk about jungle music on PlayStation games without mentioning the prolificity and the influence of composer <a href="https://acecombat.fandom.com/wiki/Tetsukazu_Nakanishi" target="_blank">Tetsukazu Nakanishi</a>, who joined Namco in 1996 to work on the game <a href="https://en.wikipedia.org/wiki/Rage_Racer" target="_blank">Rage Racer</a>.</p>
                        <!-- <img class="image img-fluid mb-2" src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/rage-racer.png" alt="rage racer playstation" style="width:100%;max-width:500px;">
                        <div class="image-label small mb-4 text-gray-500 text-center">Namco's Rage Racer for the Sony PlayStation</div> -->
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/rage-racer-silver-stream.jpg" alt="rage racer silver stream"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/rage-racer-silver-stream.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/TDIPGQWedvo?si=GmxZ0XJA_MPBCafW" target="_blank">[full version]</a></p>
                        <p>Nakanishi's compositions can be found in many games from this era, like <a href="https://en.wikipedia.org/wiki/Ace_Combat" target="_blank">Ace Combat, </a><a href="https://en.wikipedia.org/wiki/Ridge_Racer" target="_blank">Ridge Racer</a>, <a href="https://en.wikipedia.org/wiki/Tekken" target="_blank">Tekken</a>, <a href="https://en.wikipedia.org/wiki/Me_%26_My_Katamari" target="_blank">Me &amp; My Katamari</a>, <a href="https://en.wikipedia.org/wiki/Klonoa:_Door_to_Phantomile" target="_blank">Klonoa: Door To Phantomile</a>, and many others.</p>

                        <h5>Ace Combat</h5>
                        <p>One of Nakanishi's most notable contributions is the music of <a href="https://en.wikipedia.org/wiki/Ace_Combat" target="_blank">Ace Combat</a>. Even though most of the game soundtrack does not really go too deep into electronic music, some of the tracks were influenced by jungle elements. The following track is called "Dead End" and it's part of Ace Combat 2's original soundtrack.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/ace-combat.png" alt="ace combat 2"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/ace-combat-dead-end.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/DlZeKfxJgzQ?si=wJyskzG9S7VhnCSq" target="_blank">[full version]</a></p>

                        <h5>Klonoa: Door To Phantomile</h5>
                        <p>Namco released <a href="https://en.wikipedia.org/wiki/Klonoa:_Door_to_Phantomile" target="_blank">Klonoa: Door To Phantomile</a> in 1998 and the game soundtrack included many jungle tracks. The song below is called "Beats from Above" and it's part of the original soundtrack composed by Nakanishi.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/klonoa.png" alt="klonoa door to phantomile"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/klonoa-beats-from-above.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/EV4x4xYS9no?si=bQDde7MdaB1maV0i" target="_blank">[full version]</a></p>
                        
                        <h5>Gran Turismo</h5>
                        <p>Another great example of PlayStation title with a beautiful jungle soundtrack is <a href="https://en.wikipedia.org/wiki/Gran_Turismo_(series)" target="_blank">Gran Turismo</a>. The artist behind the tracks is the Japanese guitarrist and composer <a href="https://en.wikipedia.org/wiki/Masahiro_Andoh" target="_blank">Masahiro Andō</a>. Andō was comissioned by the studio <a href="https://en.wikipedia.org/wiki/Polyphony_Digital" target="_blank">Polyphony Digital</a> in 1997 to create the music for the game. The following track is called "High" and it is only present in the western version of the game. If you listen closely, you'll spot the use of a modified <i>Think break.</i></p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/gran-turismo.png" alt="gran turismo"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/gran-turismo-tmf.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/yxyK5mjYUj4?si=woMjOgBj7wqVxyWW" target="_blank">[full version]</a></p>

                        <h5>F1 Racing Championship</h5>
                        <p><a href="https://racingsoundtracks.com/game/f1-racing-championship" target="_blank">Margin Dutasta</a> worked with Ubisoft on the music for <a href="" target="_blank">F1 Racing Championship</a>. Each location of the game (São Paulo, Barcelona, Imola, Budapest, etc.) has its own companion soundtrack. The following audio is an example of the music created exclusively for the "Monte Carlo" circuit.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/f1-racing.jpg" alt="f1 racing championship"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/f1-racing-monte-carlo.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/cdKFXULhr18?si=_HSbIFKfeRj18WPV" target="_blank">[full version]</a></p>

                        <h5>Soul of the Samurai</h5>
                        <p><a href="https://en.wikipedia.org/wiki/Soul_of_the_Samurai" target="_blank">Soul of the Samurai</a> was a PlayStation exclusive released and published by <a href="https://en.wikipedia.org/wiki/Konami" target="_blank">Konami</a> in 1999. Its entire soundtrack was composed by Yasuhisa Ito, who is also known for his work on <a href="https://en.wikipedia.org/wiki/Metal_Gear_Solid_4:_Guns_of_the_Patriots" target="_blank">Metal Gear Solid 4: Guns of the Patriots</a> and <a href="https://en.wikipedia.org/wiki/Super_Smash_Bros._Ultimate" target="_blank">Super Smash Bros. Ultimate</a>.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/soul-of-the-samurai.png" alt="soul of the samurai playstation"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/soul-of-the-samurai-boss-karasu.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/2kk2P-y3HRw?si=V9JwsWPr6Tg8VsaQ" target="_blank">[full version]</a></p>

                        <h5>Ape Escape</h5>
                        <p>Composer <a href="https://en.wikipedia.org/wiki/Soichi_Terada" target="_blank">Soichi Terada</a> has plenty of experience with electronic music and was never able to hide his passion for jungle music. You can hear some of his best work in the game <a href="https://en.wikipedia.org/wiki/Ape_Escape" target="_blank">Ape Escape</a> from 1999. One of the game directors listened to Terada's work on the album <a href="https://www.youtube.com/watch?v=XrTZV1oyUMM" target="_blank">Sumo Jungle</a> and approached him to compose the music for the game.</p>
                        <p>The music changes in-game depending on the situation and level; for example, should players act stealthily, the music alters slightly to give the gameplay a mellow atmosphere. The track below is called "Snowy Mammoth" and it is just one example of many beautiful jungle tunes included in this game's soundtrack.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/ape-escape.jpg" alt="ape escape"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/ape-escape-snowy-mammoth.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/FGnCFRbMSbk?si=9r0_4tAYmGiVjkqq" target="_blank">[full version]</a></p>

                        <h5>Bomberman</h5>
                        <p>The Nintendo 64 also had its share of jungle soundtracks. One great example is the work of <a href="https://en.wikipedia.org/wiki/Jun_Chikuma" target="_blank">June Chikuma</a> in the <a href="https://en.wikipedia.org/wiki/Bomberman" target="_blank">Bomberman</a> series. Her work started with the NES version of Bomberman and continued until the newer versions of the game that were released in the early 2000s.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/bomberman-64.jpg" alt="bomberman 64"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/bomberman-spiral.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/Z70H-QWBr1c?si=86KXfUWkGwXhL6hO" target="_blank">[full version]</a></p>

                        <h5>1080 Snowboarding</h5>
                        <p>An exclusive title for the Nintendo 64, <a href="https://en.wikipedia.org/wiki/1080%C2%B0_Snowboarding" target="_blank">1080° Snowboarding</a> was released in 1998 by <a href="https://en.wikipedia.org/wiki/Nintendo_Entertainment_Analysis_%26_Development" target="_blank">Nintendo EAD</a>. Kenta Nagata was the composer of what is still consider by many one of best jungle soundtracks for the N64 console.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/1080-snowboarding.png" alt="1080 snowboarding nintendo 64"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/1080-snowboarding-white-out.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/NQ70k4Zt-Nw?si=sfJdnJKNNzknz10q" target="_blank">[full version]</a></p>
                        
                        <h5>Sega Marine Fishing</h5>
                        <p>We could also find amazing jungle music for the <a href="https://en.wikipedia.org/wiki/Dreamcast" target="_blank">Sega Dreamcast</a> console. One example is <a href="https://en.wikipedia.org/wiki/Sega_Marine_Fishing" target="_blank">Sega Marine Fishing</a>, released in 1999 as a sequel to 1997's <a href="https://en.wikipedia.org/wiki/Sega_Bass_Fishing" target="_blank">Sega Bass Fishing</a>. The game was also available for the Sega NAOMI arcade &amp; for Windows/PC but one unique aspect of the Dreamcast version was that users could play the game using the Dreamcast fishing rod controller. Makoto Iida was the composer for both Sega Bass Fishing &amp; Sega Marine Fishing.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/sega-marine-fishing.png" alt="sega marine fishing dreamcast"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/sega-marine-fishing-the-offing.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/Rdxy3J_acRE?si=tNs870aU0CCHRg_d" target="_blank">[full version]</a></p>

                        <h5>Magical Tetris Challenge</h5>
                        <p>It's funny how you could find jungle breaks in unexpected places. <a href="https://en.wikipedia.org/wiki/Magical_Tetris_Challenge" target="_blank">Magical Tetris Challenge</a> was a puzzle game featuring <a href="https://en.wikipedia.org/wiki/The_Walt_Disney_Company" target="_blank">Disney</a> characters that was released by Capcom in 1998 for the <a href="https://en.wikipedia.org/wiki/Nintendo_64" target="_blank">Nintendo 64</a>, <a href="https://en.wikipedia.org/wiki/Game_Boy_Color" target="_blank">Game Boy Color</a>, and <a href="https://en.wikipedia.org/wiki/PlayStation_(console)" target="_blank">PlayStation</a>. It is one of the few Nintendo 64 games to be entirely in 2D, in addition to being Capcom's first game for the console. Masato Kouda composed the soundtrack for both Nintendo 64 &amp; PlayStation consoles and <a href="https://en.wikipedia.org/wiki/Harumi_Fujita" target="_blank">Harumi Fujita</a> composed the tracks for the Game Boy Color.</p>
                        <p><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/magical-tetris-challenge.jpg" alt="magical tetris challenge"></p><p>
                          <audio controls="">
                            <source src="https://pikuma.com/files/blog/jungle-music-video-game-drum-bass/magical-tetris-challenge-petes-theme.mp3" type="audio/mpeg">
                            Your browser does not support the audio element.
                          </audio>
                        </p>
                        <p><a href="https://youtu.be/8hGd3c2vlqo?si=cjXjTiYA05bRNY8I" target="_blank">[full version]</a></p>
                        <p>The track above is called "Pete's Theme" and it was composed for the final battle of the game. The fast tempo combined with the energetic jungle breaks are a great fit for the level's difficulty.</p>

                        <h3>Additional Resources</h3>
                        <p>As we conclude our journey, I just want to leave some useful links with couple of great resources for those who wish to explore and learn more about this topic.</p>
                        <h5>State of Bass by Martin James</h5>
                        <div>
                            <p>The first recommendation is Martin James' book <a href="https://velocitypress.uk/product/state-of-bass/" target="_blank">State of Bass</a>. Martin explores the roots of jungle through its social, cultural, and musical antecedents. The book contain interviews with key figures of the early years of jungle as well as a detailed explanation of different styles and subgenres.</p>
                            <p><a href="https://velocitypress.uk/product/state-of-bass/" target="_blank"><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/book-state-of-bass.png" alt="book state of bass"></a></p>
                        </div>
                        
                        <h5>PlayStation Programming Lectures</h5>
                        <div>
                            <p>Our lectures on <a href="https://pikuma.com/courses/ps1-programming-mips-assembly-language" target="_blank">PlayStation Programming</a> are also useful for those interested in learning more about the early days of 3D polygons. The course has a full section on PlayStation audio programming and we even go as far as creating a custom jungle track that gets added to our final coding project.</p>
                            <p><a href="https://pikuma.com/courses/ps1-programming-mips-assembly-language" target="_blank"><img src="https://pikuma.com/images/blog/jungle-music-video-game-drum-bass/ps1-course.png" alt="playstation programming tutorial"></a></p>
                        </div>

                        <h3>Conclusion</h3>
                        <p>This topic is so much fun! And the best thing is that it never ends; I keep discovering new games and new jungle tracks from that era almost every week. Every once in a while I find a new port or a new game composer that was clearly influenced by the 90s jungle scene.</p>
                        <p>It goes without saying that it would be impossible to include a full list of all games with jungle soundtrack. I have decided to mention just a small list of titles that really caught my attention when I was younger. If you have a suggestion of a game or a soundtrack from that period that you think I should have included in my selection, feel free to <a hreg="https://x.com/pikuma" target="_blank">drop me a message on Twitter</a> and I'll see what I can do about it.</p>
                        <p>I hope this whole thing was informative and fun...</p>
                        <p><i>Can I get an Amen?</i></p>
                        <hr>
                        
                    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[MIT engineers make converting CO2 into useful products more practical (132 pts)]]></title>
            <link>https://news.mit.edu/2024/mit-engineers-make-converting-co2-into-products-more-practical-1113</link>
            <guid>42126984</guid>
            <pubDate>Wed, 13 Nov 2024 15:42:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://news.mit.edu/2024/mit-engineers-make-converting-co2-into-products-more-practical-1113">https://news.mit.edu/2024/mit-engineers-make-converting-co2-into-products-more-practical-1113</a>, See on <a href="https://news.ycombinator.com/item?id=42126984">Hacker News</a></p>
<div id="readability-page-1" class="page"><div itemprop="articleBody">
          

            <p>As the world struggles to reduce greenhouse gas emissions, researchers are seeking practical, economical ways to capture carbon dioxide and convert it into useful products, such as transportation fuels, chemical feedstocks, or even building materials. But so far, such attempts have struggled to reach economic viability.</p><p>New research by engineers at MIT could lead to rapid improvements in a variety of electrochemical systems that are under development to convert carbon dioxide into a valuable commodity. The team developed a new design for the electrodes used in these systems, which increases the efficiency of the conversion process.</p><p>The findings are reported today in the journal <em>Nature Communications</em>, in a paper by MIT doctoral student Simon Rufer, professor of mechanical engineering Kripa Varanasi, and three others.</p><p>“The CO2 problem is a big challenge for our times, and we are using all kinds of levers to solve and address this problem,” Varanasi says. It will be essential to find practical ways of removing the gas, he says, either from sources such as power plant emissions, or straight out of the air or the oceans. But then, once the CO2 has been removed, it has to go somewhere.</p><p>A wide variety of systems have been developed for converting that captured gas into a useful chemical product, Varanasi says. “It’s not that we can’t do it — we can do it. But the question is how can we make this efficient? How can we make this cost-effective?”</p><p>In the new study, the team focused on the electrochemical conversion of CO2 to ethylene, a widely used chemical that can be made into a variety of plastics as well as fuels, and which today is made from petroleum. But the approach they developed could also be applied to producing other high-value chemical products as well, including methane, methanol, carbon monoxide, and others, the researchers say.</p><p>Currently, ethylene sells for about $1,000 per ton, so the goal is to be able to meet or beat that price. The electrochemical process that converts CO2 into ethylene involves a water-based solution and a catalyst material, which come into contact along with an electric current in a device called a gas diffusion electrode.</p><p>There are two competing characteristics of the gas diffusion electrode materials that affect their performance: They must be good electrical conductors so that the current that drives the process doesn’t get wasted through resistance heating, but they must also be “hydrophobic,” or water repelling, so the water-based electrolyte solution doesn’t leak through and interfere with the reactions taking place at the electrode surface.</p><p>Unfortunately, it’s a tradeoff. Improving the conductivity reduces the hydrophobicity, and vice versa. Varanasi and his team set out to see if they could find a way around that conflict, and after many months of work, they did just that.</p><p>The solution, devised by Rufer and Varanasi, is elegant in its simplicity. They used a plastic material, PTFE (essentially Teflon), that has been known to have good hydrophobic properties. However, PTFE’s lack of conductivity means that electrons must travel through a very thin catalyst layer, leading to significant voltage drop with distance. To overcome this limitation, the researchers wove a series of conductive copper wires through the very thin sheet of the PTFE.</p><p>“This work really addressed this challenge, as we can now get both conductivity and hydrophobicity,” Varanasi says.</p><p>Research on potential carbon conversion systems tends to be done on very small, lab-scale samples, typically less than 1-inch (2.5-centimeter) squares. To demonstrate the potential for scaling up, Varanasi’s team produced a sheet 10 times larger in area and demonstrated its effective performance.</p><p>To get to that point, they had to do some basic tests that had apparently never been done before, running tests under identical conditions but using electrodes of different sizes to analyze the relationship between conductivity and electrode size. They found that conductivity dropped off dramatically with size, which would mean much more energy, and thus cost, would be needed to drive the reaction.</p><p>“That’s exactly what we would expect, but it was something that nobody had really dedicatedly investigated before,” Rufer says. In addition, the larger sizes produced more unwanted chemical byproducts besides the intended ethylene.</p><p>Real-world industrial applications would require electrodes that are perhaps 100 times larger than the lab versions, so adding the conductive wires will be necessary for making such systems practical, the researchers say. They also developed a model which captures the spatial variability in voltage and product distribution on electrodes due to ohmic losses. The model along with the experimental data they collected enabled them to calculate the optimal spacing for conductive wires to counteract the drop off in conductivity.</p><p>In effect, by weaving the wire through the material, the material is divided into smaller subsections determined by the spacing of the wires. “We split it into a bunch of little subsegments, each of which is effectively a smaller electrode,” Rufer says. “And as we’ve seen, small electrodes can work really well.”</p><p>Because the copper wire is so much more conductive than the PTFE material, it acts as a kind of superhighway for electrons passing through, bridging the areas where they are confined to the substrate and face greater resistance.</p><p>To demonstrate that their system is robust, the researchers ran a test electrode for 75 hours continuously, with little change in performance. Overall, Rufer says, their system “is the first PTFE-based electrode which has gone beyond the lab scale on the order of 5 centimeters or smaller. It’s the first work that has progressed into a much larger scale and has done so without sacrificing efficiency.”</p><p>The weaving process for incorporating the wire can be easily integrated into existing manufacturing processes, even in a large-scale roll-to-roll process, he adds.</p><p>“Our approach is very powerful because it doesn’t have anything to do with the actual catalyst being used,” Rufer says. “You can sew this micrometric copper wire into any gas diffusion electrode you want, independent of catalyst morphology or chemistry. So, this approach can be used to scale anybody’s electrode.”</p><p>“Given that we will need to process gigatons of CO2 annually to combat the CO2 challenge, we really need to think about solutions that can scale,” Varanasi says. “Starting with this mindset enables us to identify critical bottlenecks and develop innovative approaches that can make a meaningful impact in solving the problem. Our hierarchically conductive electrode is a result of such thinking.”</p><p>The research team included MIT graduate students Michael Nitzsche and Sanjay Garimella,&nbsp; as well as Jack Lake PhD ’23. The work was supported by Shell, through the MIT Energy Initiative.</p>        

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Bluetooth USB Peripheral Relay – Bridge Bluetooth Devices to USB (190 pts)]]></title>
            <link>https://github.com/bahaaador/bluetooth-usb-peripheral-relay</link>
            <guid>42125863</guid>
            <pubDate>Wed, 13 Nov 2024 13:24:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/bahaaador/bluetooth-usb-peripheral-relay">https://github.com/bahaaador/bluetooth-usb-peripheral-relay</a>, See on <a href="https://news.ycombinator.com/item?id=42125863">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">Bluetooth USB HID Relay</h2><a id="user-content-bluetooth-usb-hid-relay" aria-label="Permalink: Bluetooth USB HID Relay" href="#bluetooth-usb-hid-relay"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">A delightfully over-engineered solution to an unusual modern problem!</h3><a id="user-content-a-delightfully-over-engineered-solution-to-an-unusual-modern-problem" aria-label="Permalink: A delightfully over-engineered solution to an unusual modern problem!" href="#a-delightfully-over-engineered-solution-to-an-unusual-modern-problem"></a></p>
<p dir="auto">Use Bluetooth peripherals with Bluetooth-disabled computers.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/bahaaador/bluetooth-usb-peripheral-relay/blob/main/assets/bluetooth-usb-peripheral-relay-image.png"><img src="https://github.com/bahaaador/bluetooth-usb-peripheral-relay/raw/main/assets/bluetooth-usb-peripheral-relay-image.png" alt="Bluetooth USB HID Relay Overview"></a></p>
<p dir="auto">This project creates a Bluetooth USB HID relay using a Raspberry Pi Zero (or similar OTG-enabled single-board computer). It allows you to use Bluetooth keyboards and mice with computers that have Bluetooth disabled, by presenting the board as a composite USB HID device.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Inspiration</h2><a id="user-content-inspiration" aria-label="Permalink: Inspiration" href="#inspiration"></a></p>
<p dir="auto">This project was born out of a desire to help a friend who couldn't use his favorite Bluetooth mouse and keyboard due to Bluetooth being disabled on his work laptop. As someone who enjoys tinkering and problem-solving, I saw this as an opportunity to create something useful while learning more about Linux internals, USB gadgets, and Go programming. The Raspberry Pi Zero became the perfect bridge, connecting Bluetooth peripherals to computers that wouldn't normally allow it.</p>
<section data-identity="1879b375-f4d2-4153-848d-d6b700f7bb21" data-host="https://viewscreen.githubusercontent.com" data-src="https://viewscreen.githubusercontent.com/markdown/mermaid?docs_host=https%3A%2F%2Fdocs.github.com" data-type="mermaid" aria-label="mermaid rendered output container">
  <div dir="auto" data-json="{&quot;data&quot;:&quot;graph TD\n    B(Keyboard) -- Bluetooth --&amp;gt;  A{\&quot;HID &amp;lt;br&amp;gt; (Raspberry Pi Zero)\&quot;}\n    C(Mouse) -- Bluetooth --&amp;gt; A\n    A -- USB--&amp;gt; D(Host Computer)\n&quot;}" data-plain="graph TD
    B(Keyboard) -- Bluetooth -->  A{&quot;HID <br> (Raspberry Pi Zero)&quot;}
    C(Mouse) -- Bluetooth --> A
    A -- USB--> D(Host Computer)
">
      <pre lang="mermaid" aria-label="Raw mermaid code">graph TD
    B(Keyboard) -- Bluetooth --&gt;  A{"HID &lt;br&gt; (Raspberry Pi Zero)"}
    C(Mouse) -- Bluetooth --&gt; A
    A -- USB--&gt; D(Host Computer)
</pre>
    </div>
  <span role="presentation">
    <span data-view-component="true">
      <span>Loading</span>
</span>
  </span>
</section>

<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li>Connects to Bluetooth keyboards and mice</li>
<li>Presents itself as a composite USB HID device (keyboard and mouse) to the host computer</li>
<li>Works with Windows, Mac, and Linux computers</li>
<li>Automatically starts the relay service at boot</li>
<li>Configures the board as a USB OTG device</li>
<li>Includes a script to help pair Bluetooth devices</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Components</h2><a id="user-content-components" aria-label="Permalink: Components" href="#components"></a></p>
<ul dir="auto">
<li>Raspberry Pi Zero or other single-board computer capable of USB OTG</li>
<li>DietPi or another lightweight Linux distribution</li>
<li>Bash scripts for setup and configuration</li>
<li>Go program for handling Bluetooth input and USB HID output</li>
<li>Systemd service for automatic startup</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Prerequisites</h2><a id="user-content-prerequisites" aria-label="Permalink: Prerequisites" href="#prerequisites"></a></p>
<p dir="auto">Before building and running the project, ensure you have the following installed:</p>
<ol dir="auto">
<li>
<p dir="auto">Go (version 1.21 or later)</p>
<p dir="auto">On most Linux distributions, including Raspberry Pi OS (formerly Raspbian), you can install Go using:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo apt-get update
sudo apt-get install golang"><pre>sudo apt-get update
sudo apt-get install golang</pre></div>
</li>
<li>
<p dir="auto">Task runner using:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sh -c &quot;$(curl --location https://taskfile.dev/install.sh)&quot; -- -d -b ~/.local/bin"><pre>sh -c <span><span>"</span><span><span>$(</span>curl --location https://taskfile.dev/install.sh<span>)</span></span><span>"</span></span> -- -d -b <span>~</span>/.local/bin</pre></div>
<p dir="auto">or</p>
<div dir="auto" data-snippet-clipboard-copy-content="go install github.com/go-task/task/v3/cmd/task@latest"><pre>go install github.com/go-task/task/v3/cmd/task@latest</pre></div>
</li>
</ol>
<blockquote>
<p dir="auto">Note: You may need to add $(go env GOPATH)/bin to your PATH environment variable with the second command.</p>
</blockquote>
<p dir="auto"><h2 tabindex="-1" dir="auto"><g-emoji alias="warning">⚠️</g-emoji> Caution</h2><a id="user-content-️-caution" aria-label="Permalink: ⚠️ Caution" href="#️-caution"></a></p>
<p dir="auto"><strong>Please read before proceeding:</strong></p>
<p dir="auto">This project is currently in an experimental state and has only been tested on a limited number of devices. While it works well for my use case, please be aware that:</p>
<ul dir="auto">
<li>The scripts modify system-level configurations and USB settings</li>
<li>Incorrect USB gadget configuration could potentially require a fresh OS installation to recover</li>
<li>The project has only been tested on a small number of devices and configurations</li>
<li>This is a personal project, not production-ready software</li>
</ul>
<p dir="auto"><strong>Before running this project, you should:</strong></p>
<ul dir="auto">
<li>Only use it on devices where you can easily reinstall the OS if needed</li>
<li>Carefully review all scripts and code before execution</li>
<li>Have a backup plan in case something goes wrong</li>
<li>Be comfortable with Linux system administration and USB configurations</li>
</ul>
<p dir="auto">I cannot guarantee this will work on all devices or configurations. Proceed at your own risk.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Setup</h2><a id="user-content-setup" aria-label="Permalink: Setup" href="#setup"></a></p>
<ol dir="auto">
<li>
<p dir="auto">Log in to your Raspberry Pi Zero.</p>
</li>
<li>
<p dir="auto">Clone this repository to your board.</p>
</li>
<li>
<p dir="auto">Run the setup scripts in the following order:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo chmod +x scripts/*.sh # make sure all scripts are executable
sudo ./scripts/setup_usb_host.sh # enable the USB host and load the necessary modules
sudo reboot
sudo ./scripts/setup_bluetooth.sh # enable and start the bluetooth service
sudo ./scripts/setup_gadgets.sh # create the gadget and configure the USB strings"><pre>sudo chmod +x scripts/<span>*</span>.sh <span><span>#</span> make sure all scripts are executable</span>
sudo ./scripts/setup_usb_host.sh <span><span>#</span> enable the USB host and load the necessary modules</span>
sudo reboot
sudo ./scripts/setup_bluetooth.sh <span><span>#</span> enable and start the bluetooth service</span>
sudo ./scripts/setup_gadgets.sh <span><span>#</span> create the gadget and configure the USB strings</span></pre></div>
</li>
<li>
<p dir="auto">Pair your Bluetooth devices manually or using the script:</p>
<div dir="auto" data-snippet-clipboard-copy-content="sudo ./scripts/pair_devices.sh"><pre>sudo ./scripts/pair_devices.sh</pre></div>
</li>
<li>
<p dir="auto">Build and install the service:</p>
<div dir="auto" data-snippet-clipboard-copy-content="task build
sudo task service:install"><pre>task build
sudo task service:install</pre></div>
</li>
</ol>
<p dir="auto"><h2 tabindex="-1" dir="auto">Usage</h2><a id="user-content-usage" aria-label="Permalink: Usage" href="#usage"></a></p>
<p dir="auto">Connect the board to the target computer via USB. This will turn the board on and start the service automatically (assuming it was installed and enabled using the steps above) the bluetooth peripherals should connect automatically as well and the service will retry if they are not connected momentarily. Both Windows and MacOS have been tested and should work.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Tasks</h2><a id="user-content-tasks" aria-label="Permalink: Tasks" href="#tasks"></a></p>
<p dir="auto">This project uses Task runner for common operations:</p>
<p dir="auto"><h3 tabindex="-1" dir="auto">General tasks</h3><a id="user-content-general-tasks" aria-label="Permalink: General tasks" href="#general-tasks"></a></p>
<ul dir="auto">
<li><code>task --list</code> - List all available tasks</li>
<li><code>task build</code> - Build the project</li>
<li><code>task clean</code> - Clean build artifacts</li>
<li><code>task test</code> - Run tests</li>
<li><code>task run</code> - Build and run the application</li>
<li><code>task doctor</code> - Run the diagnose tool</li>
<li><code>task simulate</code> - Run the simulate tool</li>
</ul>
<p dir="auto"><h3 tabindex="-1" dir="auto">Service Management</h3><a id="user-content-service-management" aria-label="Permalink: Service Management" href="#service-management"></a></p>
<ul dir="auto">
<li><code>task service:install</code> - Install and enable the service</li>
<li><code>task service:status</code> - Check service status</li>
<li><code>task service:logs</code> - View service logs</li>
<li><code>task service:restart</code> - Restart the service</li>
<li><code>task service:start</code> - Start the service</li>
<li><code>task service:stop</code> - Stop the service</li>
<li><code>task service:uninstall</code> - Remove the service</li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Diagnostic Tools</h2><a id="user-content-diagnostic-tools" aria-label="Permalink: Diagnostic Tools" href="#diagnostic-tools"></a></p>
<p dir="auto"><h3 tabindex="-1" dir="auto">I/O Doctor</h3><a id="user-content-io-doctor" aria-label="Permalink: I/O Doctor" href="#io-doctor"></a></p>
<p dir="auto">This tool will check for connected Bluetooth devices and display all incoming events from your Bluetooth keyboard and mouse, helping you debug connection and input issues.</p>

<p dir="auto"><h3 tabindex="-1" dir="auto">Input Simulation</h3><a id="user-content-input-simulation" aria-label="Permalink: Input Simulation" href="#input-simulation"></a></p>
<p dir="auto">To test the USB HID output without Bluetooth devices:</p>

<p dir="auto">This interactive tool allows you to:</p>
<ol dir="auto">
<li>Move the mouse in a circle pattern</li>
<li>Type a test message
These simulations help verify that the USB HID device is working correctly on the host computer.</li>
</ol>
<p dir="auto"><h3 tabindex="-1" dir="auto">Uninstall and remove gadget</h3><a id="user-content-uninstall-and-remove-gadget" aria-label="Permalink: Uninstall and remove gadget" href="#uninstall-and-remove-gadget"></a></p>
<p dir="auto">To uninstall the service:</p>

<p dir="auto">To remove the gadget and restore the USB host configuration:</p>
<div dir="auto" data-snippet-clipboard-copy-content="./scripts/uninstall/undo_setup_gadgets.sh
./scripts/uninstall/undo_setup_usb_host.sh"><pre>./scripts/uninstall/undo_setup_gadgets.sh
./scripts/uninstall/undo_setup_usb_host.sh</pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development</h2><a id="user-content-development" aria-label="Permalink: Development" href="#development"></a></p>
<p dir="auto">This project can be used as is or as basis for other types of USB gadgets. It can also serve as a learning opportunity for:</p>
<ul dir="auto">
<li>Linux internals</li>
<li>Creating USB gadgets</li>
<li>Using Go for hardware interfacing</li>
<li>Setting up systemd services</li>
<li>Configuring single-board computers as USB OTG devices</li>
<li>Bluetooth device pairing and management</li>
</ul>
<p dir="auto">It's been a fun journey of discovery, and I hope others find it useful or inspiring for their own projects!</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Compatibility</h2><a id="user-content-compatibility" aria-label="Permalink: Compatibility" href="#compatibility"></a></p>
<p dir="auto">Tested with DietPi 64bit as host and Windows 10 and MacOS USB clients to which the keyboard and mouse were connected. No issues with latency or input delay. My friend have been using this setup for a few days now and it works great.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Issues and Support</h2><a id="user-content-issues-and-support" aria-label="Permalink: Issues and Support" href="#issues-and-support"></a></p>
<p dir="auto">Found a bug or have a suggestion? Please feel free to create an issue on GitHub! I'm actively maintaining this project and would be happy to look into any problems or improvements you identify. While this is a personal project, I'm committed to helping others get it working and making it better.</p>
<p dir="auto">Your feedback and contributions help make this project more reliable for everyone! 💜</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">References</h2><a id="user-content-references" aria-label="Permalink: References" href="#references"></a></p>
<ul dir="auto">
<li><a href="https://cdn-learn.adafruit.com/downloads/pdf/turning-your-raspberry-pi-zero-into-a-usb-gadget.pdf" rel="nofollow">Adafruit Guide: Turning your Raspberry Pi Zero into a USB Gadget</a></li>
<li><a href="https://www.isticktoit.net/?p=1383" rel="nofollow">Composite USB Gadgets on the Raspberry Pi Zero</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the MIT License - see the <a href="https://github.com/bahaaador/bluetooth-usb-peripheral-relay/blob/main/LICENSE">LICENSE</a> file for details.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Qwen2.5-Coder-32B is an LLM that can code well that runs on my Mac (153 pts)]]></title>
            <link>https://simonwillison.net/2024/Nov/12/qwen25-coder/</link>
            <guid>42123909</guid>
            <pubDate>Wed, 13 Nov 2024 08:16:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://simonwillison.net/2024/Nov/12/qwen25-coder/">https://simonwillison.net/2024/Nov/12/qwen25-coder/</a>, See on <a href="https://news.ycombinator.com/item?id=42123909">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-permalink-context="/2024/Nov/12/qwen25-coder/">

<p>12th November 2024</p>



<p>There’s a whole lot of buzz around the new <a href="https://qwenlm.github.io/blog/qwen2.5-coder-family/">Qwen2.5-Coder Series</a> of open source (Apache 2.0 licensed) LLM releases from Alibaba’s Qwen research team. On first impression it looks like the buzz is well deserved.</p>
<p>Qwen claim:</p>
<blockquote>
<p>Qwen2.5-Coder-32B-Instruct has become the current SOTA open-source code model, matching the coding capabilities of GPT-4o.</p>
</blockquote>
<p>That’s a <em>big</em> claim for a 32B model that’s small enough that it can run on my 64GB MacBook Pro M2. The Qwen published scores look impressive, comparing favorably with GPT-4o and Claude 3.5 Sonnet (October 2024) edition across various code-related benchmarks:</p>
<p><img src="https://static.simonwillison.net/static/2024/qwen-scores.jpg" alt="In benchmark comparisons, Qwen 2.5 Coder (32B Instruct) outperforms both GPT-4o and Claude 3.5 Sonnet on LiveCodeBench, Spider, and BIRD-SQL metrics, falls behind on MBPP, Aider, and CodeArena, shows mixed results on MultiPL-E, and performs similarly on HumanEval and McEval benchmarks."></p>
<p>How about benchmarks from other researchers? Paul Gauthier’s <a href="https://aider.chat/docs/leaderboards/">Aider benchmarks</a> have a great reputation and <a href="https://twitter.com/paulgauthier/status/1856018124031832236">Paul reports</a>:</p>
<blockquote>
<p>The new Qwen 2.5 Coder models did very well on aider’s code editing benchmark. The 32B Instruct model scored in between GPT-4o and 3.5 Haiku.</p>
<p>84% 3.5 Sonnet,
75% 3.5 Haiku,
74% Qwen2.5 Coder 32B,
71% GPT-4o,
69% Qwen2.5 Coder 14B,
58% Qwen2.5 Coder 7B</p>
<p><img src="https://static.simonwillison.net/static/2024/qwen-paul.jpg" alt="Those numbers as a chart"></p>
</blockquote>
<p>That was for the Aider “whole edit” benchmark. The “diff” benchmark <a href="https://twitter.com/paulgauthier/status/1856042640279777420">scores well</a> too, with Qwen2.5 Coder 32B tying with GPT-4o (but a little behind Claude 3.5 Haiku).</p>
<p>Given these scores (and the <a href="https://www.reddit.com/r/LocalLLaMA/comments/1gp84in/qwen25coder_32b_the_ai_thats_revolutionizing/">positive buzz on Reddit</a>) I had to try it for myself.</p>
<p>My attempts to run the <a href="https://huggingface.co/Qwen/Qwen2.5-Coder-32B-Instruct-GGUF">Qwen/Qwen2.5-Coder-32B-Instruct-GGUF</a> Q8 using <a href="https://github.com/simonw/llm-gguf">llm-gguf</a> were a bit too slow, because I don’t have that compiled to use my Mac’s GPU at the moment.</p>
<p>But both the <a href="https://ollama.com/">Ollama</a> version <em>and</em> the <a href="https://github.com/ml-explore/mlx">MLX</a> version worked great!</p>
<p>I installed the Ollama version using:</p>
<pre><code>ollama pull qwen2.5-coder:32b
</code></pre>
<p>That fetched a 20GB quantized file. I ran a prompt through that using my <a href="https://llm.datasette.io/">LLM</a> tool and Sergey Alexandrov’s <a href="https://github.com/taketwo/llm-ollama">llm-ollama</a> plugin like this:</p>
<pre><code>llm install llm-ollama
llm models # Confirming the new model is present
llm -m qwen2.5-coder:32b 'python function that takes URL to a CSV file and path to a SQLite database, fetches the CSV with the standard library, creates a table with the right columns and inserts the data'
</code></pre>
<p>Here’s <a href="https://gist.github.com/simonw/0a47f9e35a50d4e25a47826f4ab75dda">the result</a>. The code worked, but I had to work around a frustrating <code>ssl</code> bug first (which wouldn’t have been an issue if I’d allowed the model to use <code>requests</code> or <code>httpx</code> instead of the standard library).</p>
<p>I also tried running it using the Apple Silicon fast array framework MLX using the <a href="https://github.com/riccardomusmeci/mlx-llm">mlx-llm</a> library directly, run via <a href="https://github.com/astral-sh/uv">uv</a> like this:</p>
<pre><code>uv run --with mlx-lm \
  mlx_lm.generate \
  --model mlx-community/Qwen2.5-Coder-32B-Instruct-8bit \
  --max-tokens 4000 \
  --prompt 'write me a python function that renders a mandelbrot fractal as wide as the current terminal'
</code></pre>
<p>That gave me a <em>very</em> <a href="https://gist.github.com/simonw/1cc1e0418a04dbd19cd281cf9b43666f">satisfying result</a>—when I ran the code it generated in a terminal I got this:</p>
<p><img src="https://static.simonwillison.net/static/2024/mlx-fractal.jpg" alt="macOS terminal window displaying a pleasing mandelbrot fractal as ASCII art"></p>
<p>This is a really promising development. 32GB is just small enough that I can run the model on my Mac without having to quit every other application I’m running, and both the speed and the quality of the results feel genuinely competitive with the current best of the hosted models.</p>

<p>Given that code assistance is probably around 80% of my LLM usage at the moment this is a meaningfully useful release for how I engage with this class of technology.</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Docker Compose Isn't Enough (116 pts)]]></title>
            <link>https://blog.tealok.tech/post/docker-compose-isnt-enough/</link>
            <guid>42122690</guid>
            <pubDate>Wed, 13 Nov 2024 03:42:43 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.tealok.tech/post/docker-compose-isnt-enough/">https://blog.tealok.tech/post/docker-compose-isnt-enough/</a>, See on <a href="https://news.ycombinator.com/item?id=42122690">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
			<h2 id="summary">Summary</h2>
<p><!-- raw HTML omitted --><a href="https://docs.docker.com/compose/">Docker-compose</a><!-- raw HTML omitted --> is a tool for working with Docker containers. It solves very real problems with deploying complex applications. By itself it is not enough to make self-hosting applications simple enough for the mass-market. What we need is something like docker-compose, but at a higher level of abstraction that has a concept of SQL databases, local caches, durable storage, service discovery, and resource management.</p>
<h2 id="what-does-docker-do">What does docker do?</h2>
<p>I’m actually going to assume that you’re already familiar with <a href="https://www.docker.com/resources/what-container/">containerization</a> as popularized by Docker. Metaphorically, you can think of some host system with an unknown configuration like a ship. The ship can be large or small, efficient or not. It has a method for holding some number of containers. It doesn’t need to care what’s in them, only that they are a standard shape and strength.</p>
<p>A basic system diagram running containers looks like this:</p>
<p><img src="https://blog.tealok.tech/post/docker-compose-isnt-enough/containers-without-compose.png" alt="A stacked-block diagram. At the bottom is the system hardware. Above that is the operating system. Above that is the container runtime, reverse web proxy, and database which run on the operating system. Above the container runtime are containers for an application, including a webapp container and an API container" title="If I had an artist on staff I would have put these blocks into a happy whale-shaped container ship for hopefully obvious reasons."></p>
<p>You’ve got some hardware with an operating system and a container runtime. Containers run within the runtime and talk to some other services like databases or a webserver.</p>
<h2 id="what-does-docker-compose-do">What does docker-compose do?</h2>
<p><!-- raw HTML omitted --><a href="https://docs.docker.com/compose/">Docker-compose</a><!-- raw HTML omitted --> is a tool for specifying groups of containers that work together. I’m also going to assume in this article that you’re familiar with the basics. <!-- raw HTML omitted -->Docker-compose<!-- raw HTML omitted --> kinda breaks our metaphor - within shipping there’s no reason a given ship would need to position some number of containers together and let them communicate with each other.</p>
<p>This may seem like a minor point, but I want to expand upon it. The entire point of containers is simplifying operations by standardizing the interface. <code>Docker-compose</code> breaks the standardization and recreates the problems that containers originally solved. Within shipping there is the concept of the <a href="https://en.wikipedia.org/wiki/Intermodal_freight_transport">intermodal freight system</a>. <code>Docker-compose</code> should have been like intermodal freight - standardizing interactions between commonly used tools and reducing the cost of switching carrying networks.</p>
<p>That said, <code>docker-compose</code> has been extremely popular as a tool for specifying how to deploy self-hosted applications. It’s declarative and makes it possible to get multiple separate processes (web server, database, cache, background workers, API) to communicate with each other. In order explain where <code>docker-compose</code> falls short it’s useful to build up to an example.</p>
<h3 id="pihole">Pihole</h3>
<p>Let’s look at an application that lots of people want to self-host: <a href="https://pi-hole.net/">Pihole</a>. Here’s <a href="https://github.com/pi-hole/docker-pi-hole/blob/master/examples/docker-compose.yml.example">an example docker-compose file</a>:</p>
<pre tabindex="0"><code># https://github.com/pi-hole/docker-pi-hole/blob/master/README.md

services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp"
      - "80:80/tcp"
    environment:
      TZ: 'America/Chicago'
      # WEBPASSWORD: 'set a secure password here or it will be random'
    # Volumes store your data between container upgrades
    volumes:
      - './etc-pihole:/etc/pihole'
      - './etc-dnsmasq.d:/etc/dnsmasq.d'
    #   https://github.com/pi-hole/docker-pi-hole#note-on-capabilities
    cap_add:
      - NET_ADMIN
    restart: unless-stopped # Recommended but not required (DHCP needs NET_ADMIN)  
</code></pre><p>This is pretty complex because pihole is a DNS server. We have the <code>name</code> and the <code>image</code> to use, then a slew of ports to open up (53 for the DNS queries, 67 for DHCP, 80 for the web admin interface). There’s some <code>environment</code> that gets passed to the container, including the timezone we are running in and the ability to set a password. <code>Volumes</code> mounts some data from the host into the container, in this case it’s two different directories that store configuration data that can be changed from the web interface. <code>Cap_add</code> grants additional capabilities to the container, <code>NET_ADMIN</code> specifies the ability to configure network interfaces. Finally, <code>restart</code> specifies the behavior when the container crashes. In this case we bring it back up since our entire network is going to depend on it.</p>
<p>Whew! That’s a lot of stuff! And this is running just one container for pihole. It could, in theory, have a separate container for the web admin interface, a separate database, a batch processing container, and on and on.</p>
<p>Pihole could be more like Jitsi Meet</p>
<h3 id="jitsi-meet">Jitsi Meet</h3>
<p><a href="https://jitsi.org/jitsi-meet/">Jitsi Meet</a> is complex software. It comes with <a href="https://jitsi.github.io/handbook/docs/devops-guide/devops-guide-docker/">a system</a> for <em>generating</em> a <code>docker-compose</code> configuration. That configuration involves 4 different containers in a single network, 7 volumes, 9 ports, and 200+ lines of environment configuration.</p>
<p>I won’t reproduce it here.</p>
<p>This is a bit extreme, but not very much.</p>
<p>Let’s look at some others.</p>
<h3 id="other-applications">Other Applications</h3>
<p>I’m going to choose a few applications that are popular in the self-hosting community, and that I’m familiar with. Some have a single <code>docker-compose</code> configuration, others use scripts to generate it, others have a menu of configurations that you choose from.</p>
<table>
<thead>
<tr>
<th>Software</th>
<th>Containers</th>
<th>Ports</th>
<th>Volumes</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://docs.goauthentik.io/docs/install-config/install/docker-compose">Authentik</a></td>
<td>postgres, redis, server, worker</td>
<td>http, https</td>
<td>database, redis</td>
</tr>
<tr>
<td><a href="https://github.com/nextcloud/all-in-one/blob/main/compose.yaml">Nextcloud</a></td>
<td>master, caddy (optional)</td>
<td>http (main), http (service), https</td>
<td>master</td>
</tr>
<tr>
<td><a href="https://immich.app/docs/install/docker-compose/">Immich</a></td>
<td>server, machine-learning, redis, postgres</td>
<td>2283 (?)</td>
<td>upload, localtime, cache, postgres-data</td>
</tr>
<tr>
<td><a href="https://jellyfin.org/docs/general/installation/container/">Jellyfin</a></td>
<td>jellyfin</td>
<td>None - host networking</td>
<td>config, cache, media1, media2, fonts</td>
</tr>
<tr>
<td><a href="https://docs.paperless-ngx.com/setup/">Paperless NGX</a></td>
<td>redis, db, webserver</td>
<td>http</td>
<td>cache, postgres-data, data, media, export, consume</td>
</tr>
</tbody>
</table>
<p>On the positive side <code>docker-compose</code> is <strong>far</strong> <strong>easier than raw docker commands.</strong> Each of these configurations would take dozens, if not hundreds of <code>docker</code> commands to reproduce. <code>Docker-compose</code> is a huge improvement over the existing alternatives.</p>
<h2 id="the-problem">The Problem</h2>
<p>The problem is that <code>docker-compose</code> is <strong>too flexible</strong>, <strong>too detailed,</strong> and <strong>operates at the wrong layer of abstraction</strong>. Each of the applications above have some kind of HTTP-handling process. Each of them have a cache or a database (or both). Every single one has one or more volumes for dealing with persistent data.</p>
<p>These applications leave database backup as an exercise for the system operator. Getting back to the shipping metaphor, let’s pretend databases are our railway lines. If you run multiple container workloads on a single host using <code>docker-compose</code> it’s like hand building a crane out of wood to move your container to your rail lines rather than enjoying the benefits of <a href="https://en.wikipedia.org/wiki/Container_crane">container cranes</a>.</p>
<p>The problem is best detailed by looking closely at the number #1 issue when using <code>docker-compose</code> - reverse http(s) proxies.</p>
<h3 id="reverse-http-proxies">Reverse HTTP proxies</h3>
<p>A reverse HTTP proxy is a program that receives incoming HTTP requests and forwards them on to another program. It stands in as a proxy for the program itself on <em>incoming</em> requests. The fact that it’s incoming instead of outgoing is what makes it a “reverse” proxy.</p>
<p>Each of the programs above have some kind of administrative or user interface that is served over HTTP.</p>
<p>For each program the developers must decide: do we include a web server or not?</p>
<p>Frankly, you’re damned if you do. You’re also damned if you don’t.</p>
<h4 id="included-web-server">Included Web Server</h4>
<p>If you include a web server then your program will work, including the browser-based interface. It will only work on a particular port, and unless you use host networking, a specific container-only IP address.</p>
<p>If you run IPv4 networking and more than one container with a web server, you’ll need to remap their ports on the host. Then you’ll need a reverse proxy, with its bespoke configuration, to pass web requests to this web server. You have at least two web servers to serve one application.</p>
<p>If every program does this we end up deploying multiple redundant programs doing approximately the same work, taking up compute resources.</p>
<h4 id="no-web-server">No Web Server</h4>
<p>If you don’t include a web server then at least you aren’t wasting resources through redundant server processes. Instead, you have to configure the application without an administrative interface (config files, environment variables) so that it can communicate with the web server you provide. This may include generating static assets (HTML, CSS), setting headers (CORS, Authentication), and breaking requests out to different ports based on their path.</p>
<h4 id="dns">DNS</h4>
<p>Your web interface is going to have an address, whether it’s available on the public internet or not. If you want TLS (<a href="https://smallstep.com/blog/use-tls/">and you do</a>) then you’ll need a name, not just an IP address. If you run multiple services on a single host you’ll need to route requests either by domain name or by path (please choose domain name).</p>
<p>If your service is publicly addressable, you can register a domain name and use <a href="https://letsencrypt.org/">Let’s Encrypt</a>. If your service is not publicly addressable, you can <a href="https://smallstep.com/docs/step-ca/">run your own certificate authority</a>. Either way, you’re going to need an automated system for getting new certificates, or you’re going to need incredible patience for toil.</p>
<h4 id="ports">Ports</h4>
<p>Really, the problem is ports. <code>Docker-compose</code> allows for exposing and remapping ports. This is great if you want arbitrarily complex networking setups.</p>
<p>We want to be able to support arbitrarily complex networking setups.</p>
<p>We don’t want applications to actually use them.</p>
<p>What we want is for an application like Immich not to say “I expose some networked service on port 2283, read the manual and find out what it is and how dangerous it might be!” What we want is for Immich to say “I need an HTTPS proxy in front of me to handle client requests. Please let me know what domain name it’s using so I can configure myself internally accordingly.”</p>
<h3 id="databases">Databases</h3>
<p>Okay, I said reverse proxies are the #1 issue. Databases are issue #1 ½</p>
<p>Docker <a href="https://docs.docker.com/get-started/docker-concepts/running-containers/persisting-container-data/">says</a>:</p>
<p>“When a container starts, it uses the files and configuration provided by the image. Each container is able to create, modify, and delete files and does so without affecting any other containers. When the container is deleted,** these file changes are also deleted**.” (emphasis mine)</p>
<p>So a <code>docker-compose</code> file says it needs a database. By nature, that database container is going to delete everything when the database stops. The smart developer then adds a volume to the <code>docker-compose</code> file to store the database contents.</p>
<p>What happens if I hit the machine with a sledgehammer?</p>
<p>Your volume won’t save you.</p>
<h4 id="n12-or-something">N+1=2 or something</h4>
<p>You can save your database from my sledgehammer, or at least the resulting consequences to your application, by having an off-site backup.</p>
<p>Do you know how to backup Authentik?</p>
<p>Me neither.</p>
<p>I could probably do okay by iterating over all of the volumes on the service and copying the files in the volume. That may be wasteful and capture files I don’t care about. It may also produce corruption unless I take the service offline.</p>
<p>You could modify the <code>docker-compose</code> configuration and add in a sidecar that stops the database server and exports its databases into a backup-friendly format, then export that from the cluster.</p>
<p>You could also do some <a href="https://www.howtoforge.com/tutorial/how-to-use-snapshots-clones-and-replication-in-zfs-on-linux">crazy stuff </a>with filesystem-level replication.</p>
<p>There be dragons.</p>
<h4 id="waste">Waste</h4>
<p>Did you know that one database server can service many logical databases? It can! So, if each of your services bundles a separate database server process we are wasting compute resources, just like a reverse proxy. Nobody needs 5 copies of Postgres fighting for context switches on the same system. Run one Postgres, have it manage 5 databases.</p>
<p>Can one learn this power? Not from <code>docker-compose</code></p>
<h3 id="in-pictures">In Pictures</h3>
<p>To summarize the problem I drew this pretty diagram of services running with docker-compose:</p>
<p><img src="https://blog.tealok.tech/post/docker-compose-isnt-enough/containers-with-compose.png" alt="Another block diagram that starts with hardware, an operating system, and a container runtime. This time we have multiple database containers in the container runtime talking to volumes and a port remapper between the webapp containers and the reverse proxy. There’s duplicate containers for everything." title="This image really understates how annoying it is to have dozens of services that need manual port remapping and how annoying it is to figure out what the hell any given application is doing with each of the 5 ports they want to expose."></p>
<h2 id="the-solution">The Solution</h2>
<p>Okay, maybe not “the” solution, not yet, but certainly <strong>a solution</strong>.</p>
<p>Let’s move up a layer of abstraction. Instead of talking about meaningless interchangeable container images and opaque network protocols let’s add some semantics. Our semantics are going to delimit the kinds of containers that we can depend on: databases, reverse web proxy, cache, static web assets, etc.</p>
<h3 id="an-example-in-semantics">An Example in Semantics</h3>
<p>Here’s a configuration for a pretend web app  in <code>docker-compose</code>:</p>
<pre tabindex="0"><code>services:
 web:
   build: .
   ports:
     - "8000:5000"
 redis:
   image: "redis:alpine"
</code></pre><p>From the view of docker this is just two containers on the same network (which is implied) and exposing a single port. The actual type of containers and the protocol of the port is meaningless.</p>
<p>Now I’m going to introduce a new configuration format for my higher-level semantic constructs. I’m not using YAML, <a href="https://news.ycombinator.com/item?id=12423733">it’s garbage</a>. I’m going to use TOML</p>
<pre tabindex="0"><code>service = "mywebapp"
build = "."

[https]
reverse-proxy = true

[cache]
variant = "redis"
</code></pre><p>In this snippet I’m providing a name for the application. I’m still building a container image from the current directory. I’m specifying that I want an https-capable reverse proxy. I don’t specify a port - the container will always use a standard port for incoming requests from the reverse proxy. That’s because I didn’t tell you, but each of these containers gets an IPv6 address within a specific subnet, so all the containers on a host don’t have to fight for the same pool of ports. I also specify I want a caching service, one that specifically speaks “redis”, but the actual provider is up to the runtime.</p>
<h3 id="solution-1">Solution #1</h3>
<p>This already solves most of the reverse proxy problems:</p>
<ul>
<li>Each program requests a reverse proxy, it doesn’t instantiate one. No duplication, no waste.</li>
<li>That reverse proxy provides the DNS name the program runs at on a standard environment variable. It’s not configurable on purpose.</li>
<li>The reverse proxy can be informed by the container of assets that should be extracted from the container image and made available by the reverse proxy. The runtime handles the extraction.</li>
<li>The reverse proxy forwards all paths (that aren’t static assets) to the program without the need for configuration in the reverse proxy. The application will need to conform to this rather than doing whatever the developers think of and being a snowflake.</li>
</ul>
<h3 id="solution-15">Solution #1.5</h3>
<p>Okay, so what about databases?</p>
<pre tabindex="0"><code>service = "myphotoapp"
image = "github.com/eliribble/iminurphotos"

[https]
reverse-proxy = true

[database]
variant = "sql:2023"
permissions = "full"
</code></pre><p>The only new items here are the <code>database</code> section. It specifies we need a database that complies with the 2023 version of the SQL standard and that the program expects “full” permissions. This means the applications will create the schema and populate the tables and will take no care to coordinate with other programs within the database.</p>
<p>If an application needs a specific database it can specify a given variant. In general, I’d encourage app developers to be standards-compliant and avoid requiring specific database variants. This allows operators the freedom to choose a database that’s best for them.</p>
<p>With this configuration - database owned outside the application - operators are free to stream replication to a second host, create backups, and store those backups however they see fit. This only needs to be configured once and any number of applications can benefit.</p>
<h3 id="what-about-ports">What About Ports?</h3>
<p>Like I said before, each program gets its own IPv6 address that’s routable over the network the host is on. This means I can run Jellyfin and Paperless NGX on the same host and they can both use <a href="https://en.wikipedia.org/wiki/List_of_TCP_and_UDP_port_numbers">well-known port numbers</a> for HTTP (80). Since we care about security, we’re going to use a firewall to prevent anything but the reverse proxy from accessing that port.</p>
<p>Applications that bind to port 443 are expected to terminate their own TLS and have a facility for handling certificates. This doesn’t need to be negotiated or configured. If the application binds to that well-known port, it’s expected they are using the corresponding protocol, and they are responsible for it.</p>
<p>Pihole should still bind port 53, which is the standard for DNS. Since it has a valid IP address on the network, it can receive DHCP on port 67 and respond properly.</p>
<p>In a lot of ways we got here because containers default to IPv4. This meant there was contention between containers for the host’s port numbers. This meant we couldn’t use standard port numbers. Then we had to communicate what we were doing on non-standard port numbers out-of-band through product documentation.</p>
<p>If you start with IPv6 you can have multiple addresses on a single adapter. Then you can have an address per container. Then you can use standard port numbers. Then you can add semantics to your runtime about the right ways to handle the different protocols. Adding all of this together makes it possible to have a single runtime that can run all your applications with standardized interfaces.</p>
<h3 id="moar-pictures">Moar Pictures</h3>
<p><img src="https://blog.tealok.tech/post/docker-compose-isnt-enough/containers-with-tealok.png" alt="“Another block diagram. Hardware and operating system on the bottom. The container runtime has just one block - the Tealok runtime. Within that runtime is the webproxy, database, and storage volumes. It also has an arrow out to offsite backups. Above the Tealok runtime is a number of application containers.”" title="I haven't decided yet whether or not Tealok should enforce an application having a single container. I'm leaning toward doing it. It certainly makes the diagram cleaner."></p>
<h2 id="tealok---a-new-container-runtime">Tealok - A New Container Runtime</h2>
<p>Tealok is a runtime we’re building for running containers. It’s like an <a href="https://en.wikipedia.org/wiki/Intermodal_freight_transport">intermodal freight transport system</a> in the <a href="https://www.docker.com/resources/what-container/">ongoing extended metaphor</a> Docker started over a decade ago. Tealok imposes certain constraints on containers and provides standardized interfaces.</p>
<p>Tealok runs on Linux hosts. You tell it what applications you want to run and it runs them. The applications tell Tealok what they need and Tealok supplies it to the application. Tealok gets TLS certificates, runs a reverse proxy, sets up DNS records, and makes backups. For operators it helps avoid waste, ensure consistent good practices, and reduces the burden of managing individual snowflake deployment configurations. For application developers it makes it easier to make decisions about how their application is deployed.</p>
<p>Tealok’s designed to make hosting applications operationally simple. So simple, in fact, that anyone who can use a phone can have a Tealok and own their own cloud computing. This means owning your data, owning your services, and owning your destiny. Join us by <a href="https://mailing-list.tealok.tech/subscription/form">subscribing to our mailing list</a>, <a href="https://www.tealok.tech/hardware.html">preordering some hardware</a>, or <a href="https://github.com/tealok-tech/tealok">contributing to the project</a>.</p>

		</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[80286 ATX mainboard based on the IBM 5170 AT PC (127 pts)]]></title>
            <link>https://github.com/rodneyknaap/atx-286at-v1-mainboard</link>
            <guid>42122642</guid>
            <pubDate>Wed, 13 Nov 2024 03:34:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/rodneyknaap/atx-286at-v1-mainboard">https://github.com/rodneyknaap/atx-286at-v1-mainboard</a>, See on <a href="https://news.ycombinator.com/item?id=42122642">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">ATX form factor 80286 AT mainboard PCB Rev 1</h2><a id="user-content-atx-form-factor-80286-at-mainboard-pcb-rev-1" aria-label="Permalink: ATX form factor 80286 AT mainboard PCB Rev 1" href="#atx-form-factor-80286-at-mainboard-pcb-rev-1"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rodneyknaap/atx-286at-v1-mainboard/blob/main/286-AT-PC-ATX-mainboard_Rev1_3Dviewer_2.png"><img src="https://github.com/rodneyknaap/atx-286at-v1-mainboard/raw/main/286-AT-PC-ATX-mainboard_Rev1_3Dviewer_2.png" alt="A 3D view picture of the mainboard design generated by KiCad"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rodneyknaap/atx-286at-v1-mainboard/blob/main/ISA-Memory-subsystem-Rev1-top-view2.png"><img src="https://github.com/rodneyknaap/atx-286at-v1-mainboard/raw/main/ISA-Memory-subsystem-Rev1-top-view2.png" alt="A 3D view picture of the ISA Memory card design generated by KiCad"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rodneyknaap/atx-286at-v1-mainboard/blob/main/Img_4692s.jpg"><img src="https://github.com/rodneyknaap/atx-286at-v1-mainboard/raw/main/Img_4692s.jpg" alt="A photo of the finalized system with all upgrades enabled"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Current status(okt 2024): This project is built, fully functional, now able to operate at 20MHz CPU speed.</h2><a id="user-content-current-statusokt-2024-this-project-is-built-fully-functional-now-able-to-operate-at-20mhz-cpu-speed" aria-label="Permalink: Current status(okt 2024): This project is built, fully functional, now able to operate at 20MHz CPU speed." href="#current-statusokt-2024-this-project-is-built-fully-functional-now-able-to-operate-at-20mhz-cpu-speed"></a></p>
<p dir="auto">See at the bottom for the latest developments!</p>
<p dir="auto">The project consists of a ATX mainboard and a ISA memory card.</p>
<p dir="auto">Purpose and permitted use, cautions for a potential builder of this design
This project was created for historical purposes out of love for historical computing designs and for the purpose of enabling computing enthousiasts with a sufficient level of building and troubleshooting expertise to be able to experience the technology by building and troubleshooting the hardware described in this project. Due to the level of this project, it may be suitable as a project for students to get into. If there are any questions from teachers who like to teach about this technology I would be happy to answer them. It may be really interesting to analyse the elaborate and complex CPU timing and 8 bit to 16 bit data byte translation and DMA mechanisms in an educational setting.</p>
<p dir="auto">Besides the GPL3 license there are a few warnings and usage restrictions applicable:
No guarantees of function or fitness for any particular or useful purpose is given, building and using this design is at the sole responsibility of the builder.</p>
<p dir="auto">Do not attempt this project unless you have the necessary electronics assembly expertise and experience, and know how to observe all electronics safety guidelines which are applicable.</p>
<p dir="auto">It is not permitted to use the computer built from this design without the assumption of the possibility of loss of data or malfunction of the connected device. To be used strictly for personal hobby and experimental purposes only. No applications are permitted where failure of the device could result in damage or injury of any kind.</p>
<p dir="auto">If you plan to use this design or any part of it in new designs, the acknowledgement of the designer and the design sources and inspirations, historical and modern, of all subparts contained within this design should be included and respected in your publication, to accredit the hard work, time and effort dedicated by the people before you who contributed to make your project possible.</p>
<p dir="auto">No guarantee for any proper operation or suitability for any possible use or purpose is given, using the resulting hardware from this design is purely educational and experimental and not intended for serious applications. Loss of data is likely and to be expected when connecting any storage device or storage media to the resulting system from this design, or when configuring or operating any storage device or media with the system of this design.</p>
<p dir="auto">When connecting this system to a computer network which contains stored information on it, it is at the sole responsibility and risk of the person making the connection, no guarantee is given against data loss or data corruption, malfunctions or failure of the whole computer network and/or any information contained inside it on other devices and media which are connected to the same network.</p>
<p dir="auto">When building this project, the builder assumes personal responsibility for troubleshooting it and using the necessary care and expertise to make it function properly as defined by the design. You can email me with questions, but I will reply only if I have time and if I find the question to be valid. Which will probably also lead to an update here. I want to primarily dedicate my time to new project development, I am not able to do any user support, so that's why I provide the elaborate info here which will be expanded if needed.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Acknowledgements</h2><a id="user-content-acknowledgements" aria-label="Permalink: Acknowledgements" href="#acknowledgements"></a></p>
<p dir="auto">This project was inspired by:</p>
<ul dir="auto">
<li>IBM Corporation who introduced the 16 bit AT concept after their PC and XT product lines</li>
<li>concept and software of the XT-IDE universal BIOS <a href="https://www.xtideuniversalbios.org/" rel="nofollow">https://www.xtideuniversalbios.org</a></li>
<li>discussions with members of the German DOS Reloaded forum
<a href="https://dosreloaded.de/forum/thread/6811-diy-diskretes-logik-atx-turbo-at-286-mainboard-ohne-chipsatz/" rel="nofollow">https://dosreloaded.de/forum/thread/6811-diy-diskretes-logik-atx-turbo-at-286-mainboard-ohne-chipsatz/</a></li>
<li>discussions with members of the VCF forum
<a href="https://forum.vcfed.org/index.php?threads/project-to-create-an-atx-80286-mainboard-based-on-the-ibm-5170.1243108/" rel="nofollow">https://forum.vcfed.org/index.php?threads/project-to-create-an-atx-80286-mainboard-based-on-the-ibm-5170.1243108/</a>
I want to thank users Makefile, acgs, sergey, Timo W., sharkcz, Hpela, Alvaro64, Chuck(G), Theoryboy, modem7, Toportyán, Hak Foo, sorphin, ajacocks, Eudimorphodon, lowen, jonny64, HoJoPo, mogwaay, upnorth and sqpat for their responses, constructive ideas and discussions, and technical feedback!</li>
</ul>
<p dir="auto">In particular I want to thank Johann (jonny64) who took an active concern and participation in my project to help reverse engineer the PAL chips on the 5170 mainboard.
This process has been extremely difficult and Johann helped a lot by programming python scripts to quickly be able to analyze large volumes of logic equation information.
Resulting from our cooperation Johann has developed a reverse engineering python program called "pete" and a script which can generate the PAL fuse maps from reverse analysis which can be directly programmed into a GAL. He is planning, or has published his work in the mean time on GitHub so be sure to search for his project here if you are doing similar work on PAL ICs used in old devices.</p>
<p dir="auto">User Alvaro64 from Spain was very kind to provide friendly discussions and various information and he even offered me to borrow his legacy Intel mainboard for checking and analysis.</p>
<p dir="auto">I was happy to see some reactions from Sergey who also did some amazing work to design and build various classic PCs. He developed a BIOS of his own and a HD Floppy supporting BIOS extension.</p>
<p dir="auto">User lowen gave me some very useful time saving tips in using CPLD programmable logic from Atmel/Microchip, to be able to more easily and quickly get started with suitable CPLD parts in this project.
This will be my first programmable logic project which I will explain below.
User Eudomorphodon provided me some valuable feedback in terms of which type of logic would be possible to exist within the IBM PALS which was a big issue and problem to determine exactly what IBM did in their PAL programming, literally costing me a few weeks.
User sharkcz was very helpful for pointing me to the Copam PC-501 schematics where I found more clues about the 80287 coprocessor control circuits which are also located in a PAL on the IBM 5170.
User Chuck(G) also provided various information and wrote extensive useful information about PAL chips and how to reverse engineer them.</p>
<p dir="auto">I thank Charles MacDonald for developing his PAL read adapter and PA.EXE software which reduces the logic equations.
As I mentioned, Johann(jonny64) developed his own version of a PAL analyzer named "pete" which can do a few more advanced things to be able to do very important logic reductions and conclusions on RAW PAL read data from Charles' adapter. Especially is "pete" able to detect certain inputs on a PAL which sometimes switch to operating as an output. So the scripts Johann made can conclude this mode of operation by itself and also can reduce the subsequent logic consequences of this operation mode in the logic equations. If we don't have this automatic function from pete, it will be the person doing the analysis who will need to reason what is happening back from the observations, which is what I have initially done myself, it was quite a frustrating process to discover what was happening exactly inside the PAL U87 which caused me a lot of stress and lost sleep!</p>
<p dir="auto">Also a special thanks goes out to user LimeProgramming (Adam) here on GitHub for making his excellent USB to serial mouse project with the RP2040!
<a href="https://github.com/LimeProgramming/USB-serial-mouse-adapter">https://github.com/LimeProgramming/USB-serial-mouse-adapter</a>
He kindly agrees for his project to be integrated into mine in a modified form, thank you Adam!</p>
<p dir="auto">During my work I always keep meeting other enthousiasts, a special mention deserves Luca (Retro*Tech) from Italy who supported me with encouraging words and expressed the kind wish to contribute some helpful hardware items for my research and development work. Thanks Luca!</p>
<p dir="auto">Thanks to sqpat for the friendly discussions about how to enhance my project, for sending me two of his verified high clock rate 286 CPUs, and for his suggested assembly code to make a shadow copy of all ROM code into shadow RAM. This change made 20MHz operation a reality! Do remember to check out <a href="https://github.com/sqpat/RealDOOM">his project RealDoom here on GitHub</a>!</p>
<p dir="auto">Thank you dreNorteR for your helpful assembly code contributions and X86 programming tips for detecting a warm boot to support shadow copy functions!</p>
<p dir="auto">Everyone else who showed an interest in my work and commented and replied to all my posts, thanks for your help and friendship!</p>
<ul dir="auto">
<li>datasheets, application notes and specifications by:
Intel (80286 datasheet)
LG Semiconductors (Goldstar) (GM82C765 FDC, GM16C550)
Standard Microsystems Corporation (FDC37C65C datasheet, FDC register access table)
Realtek (RTL8019AS)
NCR (53C400 SCSI)</li>
</ul>
<p dir="auto">Acknowledgements of people who were instrumental in preceeding developments upon which this design was elaborated:</p>
<p dir="auto"><a href="https://www.ibm.com/ibm/history/exhibits/builders/builders_estridge.html" rel="nofollow">Don Estridge</a>
<a href="https://www.ibm.com/ibm/history/exhibits/pc25/pc25_birth.html" rel="nofollow">IBM PC development team</a>
<a href="https://arstechnica.com/gadgets/2017/06/ibm-pc-history-part-1/" rel="nofollow">Some historical info</a>
<a href="https://www.ibm.com/ibm/history/exhibits/builders/builders_lowe.html" rel="nofollow">Bill Lowe</a></p>
<p dir="auto"><a href="https://www.xtideuniversalbios.org/" rel="nofollow">XT-IDE universal BIOS project development team for developing the XT-IDE BIOS</a>
Amazing and extremely efficient software, fast disk access for XT and various AT computers.
Works with every IDE drive I have tested. Still under active development earlier in 2023.</p>
<p dir="auto">All source data remains the copyright of the original creators and must be respected.
This design is only released for hobby computing enthousiasts and educational purposes, no profit is to be made from this design or derived work from it.</p>
<p dir="auto">I have taken time to respectfully include all the above acknowledgements. This project has taken me almost a year up to the present time starting from all the research work I have done. If anyone or anything is left out, that is absolutely not intentional, please contact me and I will be happy to update this page further.</p>
<p dir="auto">After elaborately studying the available source design files which inspired the system, I conceived this design with my own variations, circuit additions and changes which I see as improvements according to my personal design views and preferences.</p>
<p dir="auto">My purpose was a good and clear recreation in my own methods, and never to exactly copy the original.
This project also serves to document the historical 16 bit AT PC design by implementing the fundamental concepts in a functional build which incorporates a lot of the original design concepts and functions which Don Estridge of IBM conceived. I admire Don and his work and I will attempt to explain in this text why his 16 bit AT concept was so important and elemental in promoting the industry standard development process!</p>
<p dir="auto">I have designed various I/O control circuits using the chip manufacturer datasheets to determine the proper interfacing methods, ports etc suitable for this 286 AT design.
I also searched in many IO port documents to determine how to interface the onboard devices.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">How the project took more solid form</h2><a id="user-content-how-the-project-took-more-solid-form" aria-label="Permalink: How the project took more solid form" href="#how-the-project-took-more-solid-form"></a></p>
<p dir="auto">I started by finding a suitable mainboard for study, testing and analysis. I found a few examples from NCR and ARC however these proved to be frustratingly unstable and in a poorly operating condition. By no means would I have been able to base this project on those designs. Luckily I found an Ebay auction which offered an IBM 5170 mainboard for a very reasonable price. I repaired this mainboard and I have extensively tested it out. The IBM has the added advantage of being completely documented in their schematics which was very useful for this project.</p>
<p dir="auto">I proceeded to draft modern KiCad schematics for the 5170 and subsequently modified the IBM designs to suit this project as much as possible. This involved removing the DRAM support logic and parity checking mechanisms from the schematics. Next I needed to reverse engineer the contents of PAL U87 which is elemental in the 5170 operation. Without the U87 design, a 5170 and its schematics will be useless and missing the vital operating circuits without which we have no AT! At the time there was not any documentation of the logic contained inside U87 to be found anywhere. So I proceeded to discover the logic by analysis. I used the method developed by Charles MacDonald initially and discussed with Johann to develop a utility program python script which I needed to form my conclusions about the actual operation of the U87 PAL.
Finally we succeeded to crack the design and even further simplify the logic equations of U87 to their most likely original PAL source code as originally created, probably by Don Estridge himself. If anyone has more information on how he developed the AT, please contact me, I am very much interested!</p>
<p dir="auto">After I had the complete design of the 5170, I had to evaluate the large amount of logic chips which would be involved in case I would choose to use TTL chips only to implement the whole design. From the equations of U87, I could conclude why IBM chose this path of development. Adding all this additional logic would make the PCB even larger and make this whole concept impossible to properly implement on a single PCB in a practical PCB size. So I have concluded that I will need to use programmable logic in order to reduce the PCB area needed. And since I needed to use programmable logic anyway, I decided I had better do it properly to benefit from this concept the most. So I chose the ATF1508AS CPLD with the help and advice of user lowen.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Development path leading up to the first design revision</h2><a id="user-content-development-path-leading-up-to-the-first-design-revision" aria-label="Permalink: Development path leading up to the first design revision" href="#development-path-leading-up-to-the-first-design-revision"></a></p>
<p dir="auto">After reverse engineering PAL U87, I proceeded to draft schematics and did some initial parts placements on the mainboard. This quickly led me to conclude that in order to integrate many necessary devices onboard as planned, I would need to shift the entire memory subsystem and decoder CPLD onto a ISA adapter card. The BIOS and option ROM EPROMS are still placed on the mainboard because I like it more this way in a more traditional view of typical mainboards of the time.</p>
<p dir="auto">I proceeded to draft my modified and new design of this project into schematics using KiCad and Quartus.</p>
<p dir="auto">The complete design including my changes and additions is contained in and needs:</p>
<ul dir="auto">
<li>a full ATX size mainboard PCB</li>
<li>three 84 pin PLCC CPLDs which can be plugged into through-hole sockets</li>
<li>a ISA memory subsystem card PCB containing the footprints for a total of 15MB of fully decoded SRAM memory.
This card provides 640KB of conventional memory, 128KB of UMBs at D0000 and E0000 segments with disable jumpers, and 14MB of XMS memory.
Each set of two 512KB SRAM ICs provides an additional megabyte of RAM for the system.
The amount of memory can be chosen by populating the desired amount of SRAM chips.
So basically this ISA slot card takes the function of the historically more typical DRAM SIMMs and implements the full PC memory space in SRAM memory.
Please note to observe the pin 1 mark of your particular RAM ICs and make sure you are not using a reversed pinout SRAM which would need to be soldered in flipped over orientation!</li>
</ul>
<p dir="auto">The mainboard provides two 16 bit IDE ports, a 8 bit SCSI port, a floppy drive interface, 16 bit Realtek LAN, USB to serial mouse using RP2040, discrete simplified LPT port, ATX power supply control, reset logic, and various LEDs to indicate certain system functions. The 64k BIOS is contained in two EPROMs on the mainboard and there is also a 32kb sized option ROM EPROM socket included on the mainboard. The design of this project is meant to use the XT-IDE BIOS option ROM software developed by XT IDE universal BIOS team, which needs to be configured and programmed into an option ROM EPROM IC which can be placed in the option ROM socket on the mainboard.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">My appreciation for Don Estridge and his amazing AT concept</h2><a id="user-content-my-appreciation-for-don-estridge-and-his-amazing-at-concept" aria-label="Permalink: My appreciation for Don Estridge and his amazing AT concept" href="#my-appreciation-for-don-estridge-and-his-amazing-at-concept"></a></p>
<p dir="auto">IBM released the 5170 on the market for a price which no competitor on the PC market could equal at the time. For a long period of time, the AT went without any competition!
IBM even could not meet the demand of new units.
The 5170 offered substantial performance increases which raised the PC standard to a whole new level of usage, and formed a true competing product for mini computers at the time.
But the AT was much more than those aspects when you dive deep into the technology which powers it. IBM succeeded in creating a 16 bit PC which achieved 100% compatibility with all previous 8-bit hardware and software. When you study how this was done, you realize it was no small thing! In order to achieve this they created some pretty ingenious mechanisms of 8 to 16 bit data byte conversions for which they even synchronized and modified the CPU cycles on the 80286 by delaying them while the data bytes are being converted with perfect timings. The more I studied this principle, the more respect I developed for the work by IBM engineers. To provide such advanced conversion technology in the AT was a stroke of genious and this has played an extremely important role in the historic success of the 16 bit AT PC and it further solidified the success of the emerging industry standard. When you look at computer history, this achievement of true backward compatibility is truly amazing to behold and in my opinion this is a much overlooked fact. To the user it is almost invisible because everything simply works and is fully functional. 8 And 16 bit technology just works seemlessly and perfectly together. But for those who study everything in full detail, this reveils some amazing technology and circuits developed by IBM which deserve some proper respect and credit.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">BIOS to use</h2><a id="user-content-bios-to-use" aria-label="Permalink: BIOS to use" href="#bios-to-use"></a></p>
<p dir="auto">I recommend using a BIOS other than the IBM one mainly because the IBM BIOS is known to contain restrictions in operation and verifies the clock speed to lockout operation if the speed is raised.
So any similar BIOS to the IBM 5170 from other sources would possibly qualify to run on this project.
There have been BIOS code produced by ARC, COPAM, NCR and MR BIOS to name a few examples.
MR BIOS is the most elegant BIOS at the moment. It may sometimes misdetect the COM port chip, erasing the CMOS RAM will reset detection.
Recommended to backup the CMOS RAM with a utility to file as soon as the COM port is detected.
Restoring that file and a CTRL-ALT-DEL ensures that you can use the mouse properly.
The Quadtel BIOS for 5170 is best at detecting all hardware though less elegant looking, but 100% reliable.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Project status (july 2024)</h2><a id="user-content-project-status-july-2024" aria-label="Permalink: Project status (july 2024)" href="#project-status-july-2024"></a></p>
<p dir="auto">The mainboard and ISA memory card are built and extensively tested.
The CPLD programs are verified and debugged, and latest versions are uploaded here in a single archive containing all the CPLD design projects and JED files.</p>
<p dir="auto">There is no Turbo function in the design, the CPU internal clock speed is verified at 16Mhz, tested for many hours.
Recommended a Harris 286 rated at 16Mhz. Higher speeds pending, waiting for further testing and verification.
When using sockets, please find tight fitting and reliable ones.
There is a lot of garbage being sold on the internet, stable contacts are a requirement of 16Mhz CPU clock operation.
If your system freezes, the most likely reason is a loose contact so re-insert all ICs.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rodneyknaap/atx-286at-v1-mainboard/blob/main/Rev_1_PCB_Prototype_photo.jpg"><img src="https://github.com/rodneyknaap/atx-286at-v1-mainboard/raw/main/Rev_1_PCB_Prototype_photo.jpg" alt="A photo of the assembled Rev1 prototype test setup"></a></p>
<p dir="auto">It is currently not recommended to add the RTL8019AS chip on the mainboard.
On my setup this created a lot of interference.
In fact I recommend a UMC UM9008 LAN card instead.
FTP transfer works most reliable when "putting" a large archive backup for example into the remote FTP server.
This allows to transfer gigabytes without any freeze.
For archiving and backups ARJ is recommended on this type of system.
If you want to play Doom, I highly recommend the Doom8088 project here at GitHub
Make sure to add enough RAM, for example 8 chips will make 4MB of RAM.
All RAM should be added in sequence, and will be automatically detected by the BIOS.
All RAM above 1MB is technically XMS memory (HIMEM.SYS) and DOS can be loaded into high memory.
128 KB of UMB blocks in segment D and E fully available for loading TSR drivers, needs UMB RAM clearing and UMB driver by Marco van Zwetselaar same as on XT PC.</p>
<p dir="auto">VGA card: recommended a Trident TVGA9000B card. Otherwise just test what you have.
Usually older and slower cards may not work at 16Mhz CPU clock.</p>
<p dir="auto">The DMA controllers operate at 5.33Mhz at 1/3 division from 16Mhz FDC clock, this is slightly over spec but with newer date DMA chips this seems fine. Tested and verified formatting and booting from floppy disks, using disk images to restore to floppy disk, all appears to function 100% reliably using this DMA clock speed. This can benefit games where sound data is loaded via DMA for example so the game routines experience less delays from loading the sound.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Please read these notes:</h2><a id="user-content-please-read-these-notes" aria-label="Permalink: Please read these notes:" href="#please-read-these-notes"></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Recommended changes/additions besides PCB assembly:</h2><a id="user-content-recommended-changesadditions-besides-pcb-assembly" aria-label="Permalink: Recommended changes/additions besides PCB assembly:" href="#recommended-changesadditions-besides-pcb-assembly"></a></p>
<ul dir="auto">
<li>pulldown 15k on PEREQ</li>
<li>pullup 10k on /ERROR (free resistor on RN2 pin 2)</li>
<li>R10 SHOULD BE SHORTED, CONNECT PIN2 OF KBC TO GROUND IS MORE STABLE</li>
<li>Pico LEDS wrong resistors should be 1k resnet</li>
<li>R72 R73 R74 not needed short these connections</li>
<li>polarity hdd leds reversed on silkscreen, check schematic should be reversed</li>
<li>use R23 of 300 ohms, works best</li>
<li>S0 AND S1 PULL UP 4K7</li>
<li>use 10k resistor networks on all ISA data and address lines. Best to solder a resistor network on the transceivers which is the easiest.</li>
<li>These 10k resistors are not required but add to system stability</li>
<li>the RTL8019AS cannot be used, leave it out</li>
<li>40MHz oscillator provides 20MHz to the CPU.</li>
</ul>
<p dir="auto">Check Limeprogramming USB to serial project for programming RP2040 on GitHub. Pins see the schematic of mainboard, same numbering as RP2040, using some wires and pin strips the RP2040 can be directly plugged in.
See the VCF project thread for other details.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">The core AT components are fully verified in my test build</h2><a id="user-content-the-core-at-components-are-fully-verified-in-my-test-build" aria-label="Permalink: The core AT components are fully verified in my test build" href="#the-core-at-components-are-fully-verified-in-my-test-build"></a></p>
<p dir="auto">All the information on this GitHub page is openly provided for informational purposes only for everyone interested in such a project, with all the clear cautions and understanding that anything you do is at your own sole risk and responsibility and no operation or useful purpose is implied or possible, please carefully read and understand the contents of all comments above.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">replacement logic for the 82284 and 82288 is fully developed</h2><a id="user-content-replacement-logic-for-the-82284-and-82288-is-fully-developed" aria-label="Permalink: replacement logic for the 82284 and 82288 is fully developed" href="#replacement-logic-for-the-82284-and-82288-is-fully-developed"></a></p>
<p dir="auto">I have replaced all the output system control signals previously coming from the 82284 and 82288 with my own custom logic.
So this makes the 82284 and 82288 chips no longer necessary for this project. This means that some level of rewiring is needed for the current PCB. I have done these upgrades in such a way that a minimal amount of wires will need to be added. Compared to the whole system it's not that much.
The System controller now receives the double clock frequency from an oscillator, and controls the CPU clock, CPU synchronization to the /RES input and system /RESET net.
All the system control is now generated by the System control CPLD by extensive state machine logic which I created. I was inspired after finding an article by Doug Kern of AMD in a documentation book full of applications for AMD programmable logic. So one of the example application was the replacement of the 82284 and 82288. Doug had created his own version of the 82284 and 82288 using a custom CPU cycle type. After a few brief tests using his method, I decided to design my own version of such logic. Basically I started from scratch, having only the datasheets of the 82284, 82288, and 80286 as a source of information. I have done many measurements and analysis of the system and the resulting design is my recreation. After seeing what Doug created using a state machine model of logic, I also decided to design my own state machine which facilitates very straight forward interpretation of the state bits in other logic areas. So the system controller now outputs all the system control signals, and we no longer need the 82284 and 82288. This upgrade also allows much faster logic to take over these functions inside the CPLDs.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Shadow RAM for all the ROM code</h2><a id="user-content-shadow-ram-for-all-the-rom-code" aria-label="Permalink: Shadow RAM for all the ROM code" href="#shadow-ram-for-all-the-rom-code"></a></p>
<p dir="auto">When working with CPU speeds of 20MHz and higher, it's no longer reliable to use ROM chips to initialize the system from. So I started work on a Shadow RAM system, encouraged by sqpat and dreNorteR on the VCF forums. Sqpat and dreNorteR gave me some sound advice on the assembly commands needed for shadow copying the BIOS and option ROM space into a shadow RAM area. I changed the RESET jump command to jump into my code, which then continues to jump into the BIOS INIT/POST entry point. Next I developed a system to switch the Shadow RAM into place after the copy is completed by writing to a memory location in the 0C0000 memory region. After testing this system, immediately I saw a big improvement in my 20MHz tests.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Replacing the 74LS646</h2><a id="user-content-replacing-the-74ls646" aria-label="Permalink: Replacing the 74LS646" href="#replacing-the-74ls646"></a></p>
<p dir="auto">The 74LS646 used in the IBM 5170 AT design is another part which needs substitution. So I proceeded to analyze and rewrite the logic of the 74LS646, specifically as used in the 5170 AT logic. The result is that the 74LS646 can be replaced by a single 74F245 transceiver and a 74F574 latch. I have tested this solution extensively and it now has the added advantage that the functions of the 74LS646 can now be replaced with much faster 74F type logic.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rodneyknaap/atx-286at-v1-mainboard/blob/main/74LS646_REPLACEMENT_245_574.png"><img src="https://github.com/rodneyknaap/atx-286at-v1-mainboard/raw/main/74LS646_REPLACEMENT_245_574.png" alt="Schematic of 74LS646 replacement - section to be wired in"></a>
Schematic of 74LS646 replacement - section to be wired in place of the actual 74LS646</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/rodneyknaap/atx-286at-v1-mainboard/blob/main/74LS646_REPLACEMENT_CONTROL.png"><img src="https://github.com/rodneyknaap/atx-286at-v1-mainboard/raw/main/74LS646_REPLACEMENT_CONTROL.png" alt="Schematic of 74LS646 replacement - section inside the System controller CPLD"></a>
Schematic of 74LS646 replacement - control logic inside the System controller CPLD generating the control inputs for the replacement ICs.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Regarding the real time clock</h2><a id="user-content-regarding-the-real-time-clock" aria-label="Permalink: Regarding the real time clock" href="#regarding-the-real-time-clock"></a></p>
<p dir="auto">I have done extensive testing with the RTC and CMOS RAM chip. In my tests, I achieved the most reliable results using a DS12885 chip, which I recommend using. The two jumpers next to the RTC need to be set accordingly for the DS12885 chip. Also, I suggest that no battery is really needed as long as you leave the ATX PSU on the power cable and the back power switch set to the ON position. The circuits on the mainboard will provide power to the RTC and RTC clock generator in order to advance the system clock and keep the CMOS settings. So there is no need to be working with potentially harmful batteries in the system if you prefer not to, as I also do.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting 20MHz to function reliably</h2><a id="user-content-getting-20mhz-to-function-reliably" aria-label="Permalink: Getting 20MHz to function reliably" href="#getting-20mhz-to-function-reliably"></a></p>
<p dir="auto">Operating the system at 20MHz needs a few modifications:</p>
<ul dir="auto">
<li>Shadow RAM</li>
<li>CPU clock cycle control, meaning to manipulate the CPU clock for certain operations like reading the VGA BIOS, accessing the VGA RAM. These memory map areas are behind the VGA controller and thus this interpretation of memory causes some delays which needs adjustment of the cycles. I have created decoding which can also be expanded and upgraded to facilitate other areas of memory or I/O as needed to accommodate slower expansion cards or system chips.</li>
<li>extending the ALE signal, the ALE signal is normally of the same period length as one double CPU clock. However around 18MHz and above, this is simply getting too short for the address latches on the ISA slots to reliably store the address states for all the cycles. So this means that the ALE signal needs further enhancement. I have tried various mechanisms, and the best result was achieved by extending the ALE signal to start earlier at the CPU assertion of S1/S0 status signals, and to remain within the CPU state of T_STATUS. Using this method can extend the ALE signal long enough to reliably be able to catch the address states at 20MHz.</li>
<li>changing the logic type of many of the transceivers and latches in the system to speed up the bus.</li>
<li>At 20MHz, the System controller CPLD has difficulty terminating the cycles at 1 wait state, which results in skewing the cycle termination one cycle more than the logic is set to. Which is fine for I/O operations which are inherently slower than fast memory access. For speeding up the 16 bit memory access I have reduced the circuit to zero wait states. With the added wait state by frequency limits of the System controller, we now get a single wait state. This results in 13322 writes per millisecond using the "VIDSPEED.EXE *" test.</li>
<li>the option ROM is now no longer a separate ROM chip but included in the system BIOS ROM positions. The SA16 line needs to be wired to pin 1 on both these ROMS and the memory decoder in the 20MHz version is already updated to support this. The lower half of the ROM chips provides 32KB of option ROM space at 0C8000 - 0CFFFF. This allows for example XT-IDE ROM routines to run at fast 16 bit RAM speeds using the shadow RAM system. So the option ROM socket needs to be left empty and the ROMs replaced with fast types of 64KB flash ROM chips which support the standard DIP ROM pin locations.</li>
</ul>
<p dir="auto">Mostly the system now operates on 74F logic. Certain areas need HCT, ALS and HC logic.
20MHz Is really stretching the capabilities of the 10ns CPLDs. I am not sure how much higher the system could run, though I have been able to get into the MR BIOS menu at 25 MHz a few times. But that is far from a functional system. At 20MHz, in windows there is some minor graphics glitching going on, though it's nothing like freezing the system or causing resets. Other than some glitching, the system keeps running fine. In DOS the system is completely stable and I have not seen any problems running games or software in DOS.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Shadow copy routines in assembly source code:</h2><a id="user-content-shadow-copy-routines-in-assembly-source-code" aria-label="Permalink: Shadow copy routines in assembly source code:" href="#shadow-copy-routines-in-assembly-source-code"></a></p>
<div data-snippet-clipboard-copy-content="section .text
global main

main:
in al,0x64       ;read kbc status thank you dreNorteR
test al,0x04     ;bit 2 clear on powerup
jnz goto_init    ;if not clear, assume shadow RAM already initialized

mov cx,0xf000   ; thank you sqpat for inspiring this solution
mov ds,cx	; source segment
mov cx,0xf000	
mov es,cx	; destination segment
mov cx,0x8000	; number of copies 32768 x 2 bytes
xor di,di	; clear di destination index register
xor si,si	; clear si source index register
rep movsw	; repeat copy instruction in word mode cx times
mov cx,0xC800
mov ds,cx	; source segment
mov cx,0xC800
mov es,cx	; destination segment
mov cx,0x4000	; number of copies 16384 x 2 bytes
xor di,di	; clear di destination index register
xor si,si	; clear si source index register
rep movsw	; repeat copy instruction in word mode cx times
mov cx,0xC000	; switch the shadow RAM in place of the ROM area now
mov ds,cx	; load segment pointer with 0xC000 for register indirect write operation
xor di,di	; clear offset pointer to 0x0000
mov [ds:di], cx	; write contents of cx into memory location 0xC000:0x0000

goto_init:
jmp 0xF000:0xE05B	; jump to BIOS INIT and POST start address to initialize the system"><pre><code>section .text
global main

main:
in al,0x64       ;read kbc status thank you dreNorteR
test al,0x04     ;bit 2 clear on powerup
jnz goto_init    ;if not clear, assume shadow RAM already initialized

mov cx,0xf000   ; thank you sqpat for inspiring this solution
mov ds,cx	; source segment
mov cx,0xf000	
mov es,cx	; destination segment
mov cx,0x8000	; number of copies 32768 x 2 bytes
xor di,di	; clear di destination index register
xor si,si	; clear si source index register
rep movsw	; repeat copy instruction in word mode cx times
mov cx,0xC800
mov ds,cx	; source segment
mov cx,0xC800
mov es,cx	; destination segment
mov cx,0x4000	; number of copies 16384 x 2 bytes
xor di,di	; clear di destination index register
xor si,si	; clear si source index register
rep movsw	; repeat copy instruction in word mode cx times
mov cx,0xC000	; switch the shadow RAM in place of the ROM area now
mov ds,cx	; load segment pointer with 0xC000 for register indirect write operation
xor di,di	; clear offset pointer to 0x0000
mov [ds:di], cx	; write contents of cx into memory location 0xC000:0x0000

goto_init:
jmp 0xF000:0xE05B	; jump to BIOS INIT and POST start address to initialize the system
</code></pre></div>
<p dir="auto">I should mention, building this system is an advanced work, not for novice builders. The designs need some understanding of the system in order to be able to do the modification wiring on the mainboard. You will need to know which signal goes where by looking at the quartus projects. Some signals are wired between the CPLDs which carry the same net names. I am working on a layout upgrade to include all the changes, which will eventually be released, however this is a lot of work because many areas of the PCB need to be reworked. Changing some of the logic also invites moving circuits around slightly, which will cost even more time than the modifications. I also decided to not include the RTL8019AS and the SCSI controller. The SCSI chips are too hard to find, and the RTL8019AS proved not a stable device on this system. Instead I decided to use a ISA card with a UMC9008AF network chip. I may decide to take an easier path and simply connect everything together in the new configuration, and just leaving some empty spaces on the board where chips were removed. Maybe it's not efficient, however the function of the system is the real goal that we want to achieve.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">What's next now?</h2><a id="user-content-whats-next-now" aria-label="Permalink: What's next now?" href="#whats-next-now"></a></p>
<p dir="auto">Since we have a working AT concept system design, it's now possible to upgrade the core 5170 system concept into a 486 based AT PC design. I will attempt to first feature a 486DX type CPU and forcing it in 16 bit mode. This will make the transition later into a full 32 bit system more easy. So I am working on this concept now. This new design will feature one of more FPGAs for replacing much of the system logic, and to provide and control the system RAM memory. It's my intention to use the fastest affordable memory type which can hopefully support a very clock-efficient CPU function in the new design. The system will be featured using custom cards which fulfill certain functions. Such as a FPGA and memory card, a CPU card, and a core AT logic card. I also have ideas to design the system in such a way that also other solutions would be possible to form a system. Such as when a mainboard with chipset logic is badly damaged because of battery chemicals, someone could opt to move the chipset ICs onto a card and use that card to form a new ATX PC system. Basically it would be giving new life to the chipset ICs in a new design. These are just some of the research phase outlines of the next project, so due to alteration depending on what will be the best design method in my vision.</p>
<p dir="auto">I will continue my work in <a href="https://github.com/rodneyknaap/atx-486at-mainboard">a new project repository here on GitHub</a> which features research, development and design information for my next generation system.
This system will support at least the 286 CPU and the 486DX CPU, and later possibly others.</p>
<p dir="auto">Updated last on oktober 20th, 2024.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Micron launches 60TB PCIe gen5 SSD with 12GB/s read speeds (136 pts)]]></title>
            <link>https://www.micron.com/products/storage/ssd/data-center-ssd/6550-ion</link>
            <guid>42122434</guid>
            <pubDate>Wed, 13 Nov 2024 02:53:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.micron.com/products/storage/ssd/data-center-ssd/6550-ion">https://www.micron.com/products/storage/ssd/data-center-ssd/6550-ion</a>, See on <a href="https://news.ycombinator.com/item?id=42122434">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="featuredcontent-c51baab6d8" data-cmp-data-layer="{&quot;featuredcontent-c51baab6d8&quot;:{&quot;@type&quot;:&quot;micron/components/content/featuredcontent&quot;,&quot;repo:modifyDate&quot;:&quot;2024-11-12T12:35:34Z&quot;,&quot;dc:title&quot;:&quot;DOWNLOAD PRODUCT BRIEF&quot;,&quot;dc:description&quot;:&quot;Micron 6550 ION NVMe™ is a 60TB SSD available in both 30.72TB or 61.44TB capacities&quot;}}">
  
    <div>
      
    

      
  
  <h2>
    The world’s fastest and most energy-efficient 60TB SSD 
  </h2>

      
    <div><p>The Micron 6550 ION SSD is the world’s first 60TB PCIe Gen5 data center SSD, built to deliver unparalleled performance, energy efficiency and density. It’s ideal for meeting the increasing demands of AI workloads in AI data lakes, high-performance computing (HPC), big data and analytics environments. </p>
<p>With capacity up to 61.44TB, the 6550 ION SSD provides the high capacity needed for growing AI workloads while delivering best-in-class performance and up to 20% lower SSD power consumption than competitive SSDs.<sup><a href="#fn1" target="_self">1,2,3</a></sup>&nbsp;Its best-in-class power efficiency for AI workloads helps enable increased data center savings and sustainability.<sup><a href="#fn1" target="_self">4</a></sup></p>
<p>As the first 60TB SSD in an E3.S form factor, the 6550 ION SSD provides industry-leading storage density and helps customers reduce their data center footprint up to 67%.&nbsp;</p>
<p>The 6550 ION SSD is also equipped with OCP 2.5 intelligent management capabilities, helping bring cloud-scale capabilities to enterprise data centers.<sup><a href="#fn1" target="_self">5</a></sup> Designed for end-to-end security, it safeguards data with features like SED, SPDM 1.2 and secure encrypted environment (SEE).<sup><a href="#fn1" target="_self">6&nbsp;</a></sup></p>
</div>

      
    

    </div>
    
    <div>
<p><img src="https://dmassets.micron.com/is/image/microntechnology/product-6550-group-front-white%3A3-2-all-others?ts=1731414934546&amp;dpr=off" loading="lazy" itemprop="contentUrl" width="1280" height="768" alt="Micron 6550 ION NVMe SSD ">
    
    
    
</p>

    

</div>

  
</div><div data-cmp-data-layer="{&quot;text-cc4c38187a&quot;:{&quot;@type&quot;:&quot;micron/components/content/text&quot;,&quot;repo:modifyDate&quot;:&quot;2024-11-12T12:35:35Z&quot;,&quot;xdm:text&quot;:&quot;<p>1.&amp;nbsp;The Micron 6550 ION offers a capacity of up to 61.44TB. Comparisons are made with other 61.44TB NVMe SSDs from Samsung, Solidigm and Western Digital.&amp;nbsp;</p>\r\n<p>2.&amp;nbsp;These comparisons use publicly available competitor information from published sources at the time of the 6550 ION launch, with the 6550 ION and Western Digital drive using a maximum power of 20W and Samsung and Solidigm drives using 25W, resulting in up to 20% less maximum power consumption for the 6550 ION.</p>\r\n<p>3.&amp;nbsp;The Micron 6550 ION 61.44TB SSD at 20W provides better performance/watt than competing 61.44TB SSDs at 20W and 25W, resulting in up to 20% power savings. Performance per watt claims are based on publicly available competitor information per footnote 1.</p>\r\n<p>4.&amp;nbsp;Tests conducted by Micron engineering using a maximum power limit of 20W for the Micron 6550 ION and the Solidigm D5-P5336 using 25W maximum for all tests in this section.</p>\r\n<p>5.&amp;nbsp;The Micron 6550 ION SSD complies with most, but not all, requirements of the Open Compute Project (OCP) Datacenter NVMe SSD Specification 2.5. For more information, see the <a href=\&quot;https://www.opencompute.org/documents/datacenter-nvme-ssd-specification-v2-5-pdf\&quot; target=\&quot;_blank\&quot;>OCP 2.5 public specification</a>.</p>\r\n<p>6.&amp;nbsp;No hardware, software or system can provide absolute security under all conditions. Micron assumes no liability for lost, stolen or corrupted data arising from the use of any Micron products, including those products that incorporate any of the mentioned security features.</p>\r\n<p>7.&amp;nbsp;Fill time calculation = 100% 128KB sequential writes per specification performance vs. competitive drives, per footnotes 1 and 2, until the drive’s usable capacity is full.</p>\r\n&quot;}}" id="fn1" data-component="container">
    <p>1.&nbsp;The Micron 6550 ION offers a capacity of up to 61.44TB. Comparisons are made with other 61.44TB NVMe SSDs from Samsung, Solidigm and Western Digital.&nbsp;</p>
<p>2.&nbsp;These comparisons use publicly available competitor information from published sources at the time of the 6550 ION launch, with the 6550 ION and Western Digital drive using a maximum power of 20W and Samsung and Solidigm drives using 25W, resulting in up to 20% less maximum power consumption for the 6550 ION.</p>
<p>3.&nbsp;The Micron 6550 ION 61.44TB SSD at 20W provides better performance/watt than competing 61.44TB SSDs at 20W and 25W, resulting in up to 20% power savings. Performance per watt claims are based on publicly available competitor information per footnote 1.</p>
<p>4.&nbsp;Tests conducted by Micron engineering using a maximum power limit of 20W for the Micron 6550 ION and the Solidigm D5-P5336 using 25W maximum for all tests in this section.</p>
<p>5.&nbsp;The Micron 6550 ION SSD complies with most, but not all, requirements of the Open Compute Project (OCP) Datacenter NVMe SSD Specification 2.5. For more information, see the <a href="https://www.opencompute.org/documents/datacenter-nvme-ssd-specification-v2-5-pdf" target="_blank">OCP 2.5 public specification</a>.</p>
<p>6.&nbsp;No hardware, software or system can provide absolute security under all conditions. Micron assumes no liability for lost, stolen or corrupted data arising from the use of any Micron products, including those products that incorporate any of the mentioned security features.</p>
<p>7.&nbsp;Fill time calculation = 100% 128KB sequential writes per specification performance vs. competitive drives, per footnotes 1 and 2, until the drive’s usable capacity is full.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[No GPS required: our app can now locate underground trains (887 pts)]]></title>
            <link>https://blog.transitapp.com/go-underground/</link>
            <guid>42122085</guid>
            <pubDate>Wed, 13 Nov 2024 01:46:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.transitapp.com/go-underground/">https://blog.transitapp.com/go-underground/</a>, See on <a href="https://news.ycombinator.com/item?id=42122085">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
    
<h6><a href="https://blog.transitapp.com/fr/go-dans-le-metro/">En français svp</a></h6>







<p>In the twisting vaults of a subway, metro, or U-Bahn, there’s often no reliable cell service, wifi, or GPS.&nbsp;</p>



<p>Which means you had no good way of keeping track of your stops or ETA when underground.</p>


<div>
<figure><img decoding="async" width="750" height="300" data-attachment-id="14507" data-permalink="https://blog.transitapp.com/go-underground/blue-dot-lagging-en-v2/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Blue-dot-lagging-EN-v2.gif" data-orig-size="750,300" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Blue-dot-lagging-EN-v2" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Blue-dot-lagging-EN-v2-705x300.gif" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Blue-dot-lagging-EN-v2.gif" src="https://blog.transitapp.com/wp-content/uploads/2024/10/Blue-dot-lagging-EN-v2.gif" alt="GIF: representation of a vehicle location not being updated when there is no GPS"></figure></div>


<p>You had to look out the window for signs on the platform, listen for station announcements, or tilt your neck 90° to read one of those digital screens. How perfectly quaint!</p>



<p><strong>Here’s the bad news:</strong> we don’t have a hundred billion dollars to build ground-penetrating GPS satellites. <strong>The good news:</strong> we have Étienne, Ayser, Jonathan and Luc!</p>



<p>Thanks to our clever engineering, we can now predict your location in a subway tunnel using your phone’s vibration signature. Simply:</p>



<p>1. Start a trip with GO</p>



<figure><img decoding="async" width="2000" height="534" data-attachment-id="14752" data-permalink="https://blog.transitapp.com/go-underground/go-flows-en-2/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1.png" data-orig-size="2000,534" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="GO-flows EN" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1.png" alt="" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1-768x205.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/GO-flows-EN-1-1536x410.png 1536w" sizes="(max-width: 2000px) 100vw, 2000px"><figcaption>You can start a GO trip directly from the line details screen or from a trip you planned</figcaption></figure>



<p>2. Ta-da! We’ll show your predicted location on the map, count down the stations, and update your ETA</p>



<p>Yes. Even without knowing your GPS coordinates.</p>



<figure><img decoding="async" width="1200" height="780" data-attachment-id="14767" data-permalink="https://blog.transitapp.com/go-underground/nycmtl-en-v5/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/NYCMTL-EN-v5.gif" data-orig-size="1200,780" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="NYC+MTL-EN-v5" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/NYCMTL-EN-v5-705x510.gif" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/NYCMTL-EN-v5.gif" src="https://blog.transitapp.com/wp-content/uploads/2024/10/NYCMTL-EN-v5.gif" alt=""></figure>



<p><em>Now, for a peek behind our magic curtain…</em></p>


<div>
<figure><img decoding="async" width="1036" height="748" data-attachment-id="14562" data-permalink="https://blog.transitapp.com/go-underground/separateur2x-2/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1.png" data-orig-size="1036,748" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="séparateur@2x" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1.png" alt="" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1.png 1036w, https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1-705x510.png 705w, https://blog.transitapp.com/wp-content/uploads/2024/10/separateur@2x-1-768x555.png 768w" sizes="(max-width: 1036px) 100vw, 1036px"></figure></div>


<h4><strong>Step 1: basic motion classification</strong></h4>



<p>Once you enter a train tunnel with bad GPS, the magic begins. First, we have to figure out where you are between stations. For that, we need to confirm that you’re on a moving train!</p>



<p>To get our bearings, let’s look at some accelerometer data from Stephen, the fastest-walking Transit employee, which he recorded on his phone during his commute to our Montreal office:</p>



<figure><img decoding="async" width="2000" height="830" data-attachment-id="14749" data-permalink="https://blog.transitapp.com/go-underground/phone-acceleration-during-a-commute-en/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN.png" data-orig-size="2000,830" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Phone acceleration during a commute EN" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN.png" alt="" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN-768x319.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/Phone-acceleration-during-a-commute-EN-1536x637.png 1536w" sizes="(max-width: 2000px) 100vw, 2000px"></figure>



<p>Fast but also meticulous, Stephen labeled the different parts of his trip, like:</p>



<ul>
<li>when he started walking</li>



<li>when he descended a set of stairs</li>



<li>when he was waiting on the platform</li>



<li>when the train started moving, when it stopped, etc.<br></li>
</ul>



<p>With inspiration from one of our <a href="https://en.wikipedia.org/wiki/Fourier_transform">favourite French mathematicians</a>, we can clean up Stephen’s acceleration data and turn it into frequency data, which can start to give us an idea about what’s happening on a moving train vs. elsewhere.</p>



<figure><img decoding="async" width="2000" height="800" data-attachment-id="14668" data-permalink="https://blog.transitapp.com/go-underground/frequencies-during-a-commute-4/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5.png" data-orig-size="2000,800" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Frequencies during a commute" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5.png" alt="Spectrogram showing frequencies in hertz (Hz) during a trip in the subway, with the vertical axis indicating frequencies (0 to 12 Hz) and the horizontal axis showing the elapsed time in seconds. Colors vary to represent the intensity of frequencies at different moments.&quot;" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5-768x307.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/Frequencies-during-a-commute-5-1536x614.png 1536w" sizes="(max-width: 2000px) 100vw, 2000px"></figure>



<p>There’s a few clues. For one, when Stephen’s train is moving his phone vibrates at ~5 Hz, versus ~2 Hz when he’s walking. But the pattern isn’t clear-cut, with lots of random noise and harmonic frequencies (those fainter pink lines cascading above the more vivid red ones) muddying up the picture.</p>



<p>To definitively say “this is a moving train” vs. “this is not” we need to train a machine to classify motion types — a task which requires A LOT of training data.</p>



<hr>



<h4><strong>Step 2: gathering ground truth</strong></h4>



<p>We asked Stephen and his valiant colleagues to repeat the exercise: but now labeling data for hundreds of trips across dozens of cities, so that we could build a generalized model to say “yes! moving train!” regardless of the type of train or tracks being used.</p>



<p>Our trusty emissaries Étienne and Elijah were sent down from Montreal to collect vibration data on our app’s most popular underground system: the <a href="https://transitapp.com/en/region/nyc">New York City</a> subway.</p>


<div>
<figure><img decoding="async" width="2000" height="1860" data-attachment-id="14446" data-permalink="https://blog.transitapp.com/go-underground/photo-elijahetienne-2/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1.png" data-orig-size="2000,1860" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="photo-Elijah+Etienne" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1.png" alt=" Étienne and Elijah taking the bus and subway in NYC" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1-768x714.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/photo-ElijahEtienne-1-1536x1428.png 1536w" sizes="(max-width: 2000px) 100vw, 2000px"><figcaption><em> Étienne and Elijah on a hunt for truth. (The under-ground truth™)</em></figcaption></figure></div>


<p>Armed with iPhones, Androids, and MetroCards, they spent a week riding the MTA’s buses and trains, labeling each step of every trip:</p>


<div>
<figure><img decoding="async" width="2000" height="1994" data-attachment-id="14448" data-permalink="https://blog.transitapp.com/go-underground/photo-phones-2/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2.png" data-orig-size="2000,1994" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="photo-phones" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2.png" alt="Phone used during the &quot;Ground Truth&quot; quest with app tool to provide info" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2-768x766.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2-1536x1531.png 1536w, https://blog.transitapp.com/wp-content/uploads/2024/10/photo-phones-2-350x350.png 350w" sizes="(max-width: 2000px) 100vw, 2000px"></figure></div>


<p>We’d rely on their data for clues to distinguish between on-a-train vibrations vs. other vibrations in a train station.</p>



<p>Which meant Elijah and Étienne had to ride the escalators and elevators up and down for hours at a time, vigilantly annotating each time they stopped to catch their breath.</p>



<p>They eventually rode every subway line in New York, from the Bronx to Brighton Beach, across the Queensboro, Manhattan, and Williamsburg Bridges (where there is cell service) back through the rickety Canarsie Tunnel (where there is not).</p>



<hr>



<h4><strong>Step 3: training our motion classifier</strong></h4>



<p>After cleaning and processing our data, we could begin training our motion classifier to distinguish “moving train!” from “not moving train!”.</p>



<p>We start by feeding the model our unlabelled sensor data and ask it to randomly guess whether the phone is on a moving train, a stopped train, walking, going up an escalator, et cetera. We verify these guesses against our manual annotations (the “ground truth”) and add logic to guide our model to more accurate predictions.</p>



<p>After a great deal of tinkering, our model can now confidently predict if someone is on a moving train – or if their phone is just vibin’.</p>



<figure><img decoding="async" width="2000" height="640" data-attachment-id="14656" data-permalink="https://blog.transitapp.com/go-underground/predicting-motion-state-from-frequencies-clean-3/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2.png" data-orig-size="2000,640" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Predicting motion state from frequencies Clean" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2.png" alt="" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2-768x246.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/Predicting-motion-state-from-frequencies-Clean-2-1536x492.png 1536w" sizes="(max-width: 2000px) 100vw, 2000px"></figure>



<p>Now that we know when a rider is moving underground, the next step is to make that information useful: <strong>where, precisely, is their train?</strong></p>



<hr>



<h4><strong>Step 4: making a location prediction</strong></h4>



<p>It was time to add one last model to the mix, aptly named <strong><em>The Mixer.</em></strong></p>



<p>We trained this model to weigh…</p>



<ol>
<li>the motion type prediction<strong> </strong>(aka “is this a moving train?”)&nbsp;</li>



<li>the last-known location of the user</li>



<li>whether the last-known location came recently or a long time ago</li>



<li>the train schedule</li>
</ol>



<p>…to predict the user’s <strong><em>current</em></strong> <strong>location</strong>.</p>



<p>It now makes the right location prediction 90% of the time.</p>



<figure><img decoding="async" width="2000" height="1150" data-attachment-id="14671" data-permalink="https://blog.transitapp.com/go-underground/location-updates-during-a-train-ride-2/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1.png" data-orig-size="2000,1150" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="Location updates during a train ride" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1-705x510.png" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1.png" src="https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1.png" alt="" srcset="https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1.png 2000w, https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1-768x442.png 768w, https://blog.transitapp.com/wp-content/uploads/2024/10/Location-updates-during-a-train-ride-1-1536x883.png 1536w" sizes="(max-width: 2000px) 100vw, 2000px"><figcaption><em>A list of cellular pings during an RER trip in Paris — you can see the underground part of this west-to-east ride (on the left) gets a few sporadic location updates via GPS and Bluetooth/wifi scanning. With these location updates, we can calibrate our underground location predictions in the areas without coverage. When the user pops above ground to areas with cell service (on the right)? We go back to using standard GPS locations.</em></figcaption></figure>



<p>This is the holy grail of underground detection:<strong> since you can predict where a rider is, you can show them where they are on a map, update their ETA, and tell them when to get off at the right station.</strong></p>



<p>It’s a step up from the status quo method of detecting your location underground. No more relying on spotty GPS — or bobbing and weaving between incomprehensibly tall humans to read those digital screens!</p>



<figure><img decoding="async" width="1000" height="750" data-attachment-id="14777" data-permalink="https://blog.transitapp.com/go-underground/nyc-mixer-en-v7/" data-orig-file="https://blog.transitapp.com/wp-content/uploads/2024/10/NYC-mixer-EN-v7.gif" data-orig-size="1000,750" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="NYC-mixer-EN-v7" data-image-description="" data-image-caption="" data-medium-file="https://blog.transitapp.com/wp-content/uploads/2024/10/NYC-mixer-EN-v7-705x510.gif" data-large-file="https://blog.transitapp.com/wp-content/uploads/2024/10/NYC-mixer-EN-v7.gif" src="https://blog.transitapp.com/wp-content/uploads/2024/10/NYC-mixer-EN-v7.gif" alt=""></figure>



<p><strong>What’s even more wonderful? Our station counting works completely offline. </strong>Both of our models (the motion classifier, and the mixer) have been compressed into tiny files that run on your phone, without sending any data to Transit’s servers.</p>



<p>No tracking. No cookies. Your vibration data is your own damn business!</p>



<hr>



<h4><strong>Want to try out our underground detection for yourself?</strong></h4>



<p>Easy: just find yourself an underground train, open Transit, start a trip with GO, and watch the stations tick down, one-by-one! We’ve helped riders detect 1.5 million underground stations and ~400,000 trips during our initial tests.</p>



<p>GO’s step-by-step navigation was already being used by millions of aboveground riders in<a href="https://transitapp.com/en/region"> 600+ cities</a> — including folks propelled by bikes, since our launch of <a href="https://blog.transitapp.com/go-bike/">GO Bike</a> last month.</p>



<p>Now, their subterranean train-riding counterparts can rely on it more confidently in areas with bad service, so Transit can be their guiding light from end-to-end in every tunnel.</p>







<p><a href="https://transitapp.com/download.html?utm_source=blog_transit&amp;utm_medium=referral&amp;utm_campaign=button_blog_article">Try it in the app</a></p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[From BSP to ESP – How S3ctor Abused Quake Editors to Redefine the Morrowind Mod (127 pts)]]></title>
            <link>https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/</link>
            <guid>42121957</guid>
            <pubDate>Wed, 13 Nov 2024 01:23:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/">https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/</a>, See on <a href="https://news.ycombinator.com/item?id=42121957">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>From BSP To ESP – How S3ctor Abused Quake Editors to Redefine the Morrowind Modding Experience          <span>2024-11-08 - jvoisin</span>
        </p>
        
<p><a href="https://gitlab.com/magicaldave1">S3ctor</a> is a core developer of OpenMW, and has, like most of us to be fair, odd interests. This is the incredible story how he mixed two immensely cool things: Quake, and Morrowind, narrated by our hero himself!</p>



<p>Possibly the first thing anybody who has met me in person will say about me is that I am obsessed with game engines – and while OpenMW is my baby, my first love was <a href="https://en.wikipedia.org/wiki/Id_Tech">idTech</a>. At eight years old, I picked up a steel-book copy of Doom 3. Surprisingly, I ended up spending more time with the extras than the game itself. The developer documentary and Carmack’s E3 talk about the render pipeline and engine design captivated me completely. I have distinct memories of my young self barely understanding <a href="https://en.wikipedia.org/wiki/Shadow_volume#Depth_fail">Carmack’s Reverse.</a> I tried to explain it to other kids, to absolutely no reaction. Nobody else really understood, but it was the coolest thing in the world to me. All of this is to say that I have been interested in this technology since before I could read.</p>



<p>What we’re going to explore today is the history and process through which I developed a brand-new workflow for the OpenMW engine that allows modders to utilize arguably the most powerful component of old idTech – the brush-based level editor.</p>



<p>In order to fully grasp what we’re about to discuss, you’ll need some background on both early idTech and OpenMW/Morrowind. First things first: many modern game engines use a <em>mesh</em>-based workflow. This is somewhat like building a house. The artists are carpenters, creating individual pieces (3D models) independently. Then, level designers – the general contractors in this analogy – take these pieces into the engine’s toolbox and construct the game world around them.</p>



<p>In the modern era, studios have mastered the mesh-based workflow, building their entire operations around it. However, no individual can match the output of a full studio. Take <a href="https://www.blender.org/">Blender</a>, for instance. It’s an incredible tool, but its complexity matches its capabilities. Learning Blender, or any game engine for that matter, is no small feat.</p>



<p>The mesh-based workflow is intentionally designed to separate level designers and artists. While this isn’t necessarily bad, it does add a layer of complexity that brush-based games simply don’t have. Blender won’t light a scene the same way your engine will, nor will it handle post-processing, interactivity, or your game’s unique features. It’s an amazingly flexible tool – but it’s not tailor made for the experience your game is meant to provide. Nor are <a href="https://en.wikipedia.org/wiki/Autodesk_3ds_Max">Max</a>, <a href="https://en.wikipedia.org/wiki/Autodesk_Maya">Maya</a>, <a href="https://crocotile3d.com/">Crocotile</a>, or whatever your preferred modeling tool is.</p>



<p>In contrast, brush-based workflows blur these lines. Here, the level designer wears multiple hats, acting as both a formal designer and a modeler. This approach, inherited by Half-Life through its modified Quake engine, persists in Valve’s design philosophy even today, driving their continued innovation and industry-redefining success.</p>



<p>This was a very difficult concept for me to come to grips with, having always modded and developed OpenMW – it didn’t even <em>occur</em> to me that it was possible to go outside the mesh-based workflow. So let us now demonstrate the difference.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image.png"><img fetchpriority="high" decoding="async" width="1024" height="647" data-attachment-id="6640" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-4/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image.png" data-orig-size="1488,940" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-300x190.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-1024x647.png" src="https://openmw.org/wp-content/uploads/2024/11/image-1024x647.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-1024x647.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-300x190.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-768x485.png 768w, https://openmw.org/wp-content/uploads/2024/11/image.png 1488w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>Here’s an image of a house in OpenCS, OpenMW’s native game development tool. You can see the frame of the room is made up of four static pieces which I’ve been glued together. This type of prefabbing makes it impossible to add little details or variations into the structure of an existing asset, you need to change the one, or make a new one. Let’s now attempt to reproduce this in my favorite Quake editor – <a href="https://trenchbroom.github.io/">Trenchbroom</a>!</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-1.png"><img decoding="async" width="907" height="893" data-attachment-id="6641" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-5/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-1.png" data-orig-size="907,893" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-1-300x295.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-1.png" src="https://openmw.org/wp-content/uploads/2024/11/image-1.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-1.png 907w, https://openmw.org/wp-content/uploads/2024/11/image-1-300x295.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-1-768x756.png 768w" sizes="(max-width: 907px) 100vw, 907px"></a></figure></div>


<p>In just a couple of moments, we’ve got the frame for a brand-new one. Here, there are six “brushes” – I really dislike this term as it can be extremely confusing. Brushes are simply individual polyhedron – cubes, pyramids, anything that could be expressed as a single convex shape is considered a brush. Notice I mentioned <code>convex</code> explicitly – this is a key detail, as the mathematics behind brush-based workflows necessitate that all shaped be convex. More on this later.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-2.png"><img decoding="async" width="1024" height="476" data-attachment-id="6642" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-6/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-2.png" data-orig-size="1916,890" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-2-300x139.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-2-1024x476.png" src="https://openmw.org/wp-content/uploads/2024/11/image-2-1024x476.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-2-1024x476.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-2-300x139.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-2-768x357.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-2-1536x713.png 1536w, https://openmw.org/wp-content/uploads/2024/11/image-2.png 1916w" sizes="(max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>And here’s an entire room! It’s not a very good one, though, so let’s make a variant with a door.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-3.png"><img loading="lazy" decoding="async" width="556" height="859" data-attachment-id="6643" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-7/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-3.png" data-orig-size="556,859" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-3-194x300.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-3.png" src="https://openmw.org/wp-content/uploads/2024/11/image-3.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-3.png 556w, https://openmw.org/wp-content/uploads/2024/11/image-3-194x300.png 194w" sizes="auto, (max-width: 556px) 100vw, 556px"></a></figure></div>


<p>Now let’s iterate a bit, bring the wall trim out some, change a few textures here and there…</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-4.png"><img loading="lazy" decoding="async" width="1024" height="188" data-attachment-id="6644" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-8/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-4.png" data-orig-size="1918,353" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-4-300x55.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-4-1024x188.png" src="https://openmw.org/wp-content/uploads/2024/11/image-4-1024x188.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-4-1024x188.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-4-300x55.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-4-768x141.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-4-1536x283.png 1536w, https://openmw.org/wp-content/uploads/2024/11/image-4.png 1918w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>We’ve now got three brand new template sets of our own to work with. Just like in real life construction, we can expand and tweak these as we build each unique house or area. No two homes need to be identical – we’ve got the freedom to customize! While these assets were whipped up quickly for this article, there’s plenty of room for improvements and personal touches. The key takeaway here is the accessibility and rapid iteration of our tooling. We’ve streamlined the level design process by eliminating the need for separate 3D modeling tools. Naturally, you won’t be animating here, but you’re not meant to – Quake editors are level editors, not entire replacements for modeling software.</p>



<p>But wait, now I’m back to talking about idTech stuff again – this is supposed to be about Morrowind, isn’t it? Well, I’ve been modding OpenMW for a couple of years and in that time used the engine itself as a springboard to get further into game development, netcode, and C++ in general! In that time I’ve made a decent few friends whom I’m proud to call that. <a href="https://github.com/EpochWon)">Epoch</a> was the first person who’d turned me onto the concept of Trenchbroom in general – we’d discussed it offhandedly a few times while probing for features we could implement into OpenMW’s rendering pipeline.</p>



<p>Later, at some point, a mutual acquaintance of ours challenged me to a match of Fortnite. <em>Insulted</em>, I did what any old-school gamer like myself would do: I rolled a Quake 3 server at <a href="https://s3kshun8.games/">https://s3kshun8.games</a> and challenged him to a match instead. As it turns out, our mutual friend was <em>also</em> a fan of Quake and within minutes was mopping the floor with me. But, nevertheless, Epoch and I continued diving into the depths of modding idTech to see what we could come up with.</p>



<p>Our first idea was to port Morrowind assets into Quake. Everything goes downhill from here. First came Stroggvarine:</p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-5.png"><img loading="lazy" decoding="async" width="1024" height="576" data-attachment-id="6646" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-9/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-5.png" data-orig-size="1488,837" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-5-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-5-1024x576.png" src="https://openmw.org/wp-content/uploads/2024/11/image-5-1024x576.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-5-1024x576.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-5-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-5-768x432.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-5.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p>Then Crassius Curio.</p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-6.png"><img loading="lazy" decoding="async" width="1024" height="576" data-attachment-id="6647" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-10/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-6.png" data-orig-size="1488,837" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-6-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-6-1024x576.png" src="https://openmw.org/wp-content/uploads/2024/11/image-6-1024x576.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-6-1024x576.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-6-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-6-768x432.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-6.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p>Then Epoch had an even worse idea: </p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-7.png"><img loading="lazy" decoding="async" width="1024" height="576" data-attachment-id="6648" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-11/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-7.png" data-orig-size="1488,837" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-7-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-7-1024x576.png" src="https://openmw.org/wp-content/uploads/2024/11/image-7-1024x576.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-7-1024x576.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-7-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-7-768x432.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-7.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p>Okay, so, now we’ve got characters in, what about <em>structures</em>? How could we recreate Balmora, Vivec, or Sadrith Mora in Quake 3? (Tell me you wouldn’t play FFA in Sadrith Mora, I dare you) There <em>seemed</em> to be a solution to this according to some old research I dug up from <a href="http://katsbits.com/">katsbits.com</a>. I found their discord and joined, looking to figure out how to integrate 3d models into a Quake 3 map using patches. I got all the details, but, it just seemed like too much work at the time and the process was so… raw, and based on old tools – I never did give it much of a chance to get fleshed out.</p>



<p>Because along the way, I had another, much better idea. I’d started playing with Quake editors like <a href="https://valvedev.info/tools/jack/">JACK</a> and <a href="https://github.com/Garux/netradiant-custom">NetRadiant-Custom</a>, trying to learn how the level design flow worked – and I immediately fell in love. Having tried and failed (not particularly seriously) to use Blender many times, having a way to make my own assets felt as though I’d unlocked the missing piece to being able to ship an entire game on my own. I wondered, idly, if we could apply this to Morrowind somehow. And then I noticed an <code>export to .obj file</code> button in Trenchbroom. The tool itself did this, to some degree, so I <em>knew</em> it had to be possible, beyond all shadow of a doubt – it <em>was</em> doable. So I sidled on over to the Trenchbroom GitHub and <a href="https://github.com/TrenchBroom/TrenchBroom/issues/4448">opened a discussion</a> about it.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-8.png"><img loading="lazy" decoding="async" width="657" height="369" data-attachment-id="6649" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-12/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-8.png" data-orig-size="657,369" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-8-300x168.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-8.png" src="https://openmw.org/wp-content/uploads/2024/11/image-8.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-8.png 657w, https://openmw.org/wp-content/uploads/2024/11/image-8-300x168.png 300w" sizes="auto, (max-width: 657px) 100vw, 657px"></a><figcaption>The very first attempt at loading a Quake map in OpenMW.</figcaption></figure></div>


<p>What you see above is the first attempt at getting a Quake map into Morrowind. We exported a map out of Trenchbroom, imported the OBJ into blender, and re-exported the NIF. Textures got lost and the scale is all wrong – it’s actually a lot smaller here than it should’ve been. At the time, we had no idea what the scaling ratio would be between Morrowind and Quake 1. As it turns out, this was really simple – there’s no fancy asset-level scaling happening in either engine with regard to assets. The only scaling difference between the two engines is that a Quake 1 player is almost exactly half the height in units of the default male Dunmer in Morrowind.</p>



<p>You might be curious about how we figured that out. Well, Quake editors define the player as some or another kind of game object, whose bounding box is displayed in the editor. Like this:</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-9.png"><img loading="lazy" decoding="async" width="159" height="280" data-attachment-id="6650" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-13/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-9.png" data-orig-size="159,280" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-9.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-9.png" src="https://openmw.org/wp-content/uploads/2024/11/image-9.png" alt=""></a></figure></div>


<p>The player themselves is represented in Morrowind.fgd file like this:</p>



<p><code>@baseclass size(-16 -16 -34, 16 16 33) color(0 255 0) = PlayerClass []</code></p>



<p>The same line exists in Quake.fgd, there the player is 56 units tall:</p>



<p><br><code>@baseclass base(Appearflags) size(-16 -16 -24, 16 16 32) color(0 255 0) = PlayerClass []</code></p>



<p>All we actually had to do was launch OpenMW and check the player’s bounding box like so:</p>



<p><br><code>self:getBoundingBox().halfSize.z</code> </p>



<p>and there we go. We prefer building at smaller scale, so, we just based the Morrowind.fgd off the halfsize instead of the player’s true height and build at half scale by convention. It’s just easier.</p>



<p>Having figured the basics out, the <em>real</em> work could now begin. What we needed at this point, was a compiler – except instead of compiling a <em>BSP</em>, we’d be compiling an <em>ESP</em>. But it’s the same concept Quake uses – in-development, maps are passed around as text-based source files, and then a compiler converts them into actual 3D geometry, gameobjects, et cetera.</p>



<p>Inside of a <code>.map</code> file, brushes are stored as a set of planes with some data about their extents and mapped textures.</p>



<p>For reference, here’s a simple cube – the default map Trenchbroom creates along with each new document:</p>



<pre><code>// brush 0
{
( -64 -64 -16 ) ( -64 -63 -16 ) ( -64 -64 -15 ) __TB_empty [ 0 -1 0 0 ] [ 0 0 -1 0 ] 0 0.25 0.25
( -64 -64 -16 ) ( -64 -64 -15 ) ( -63 -64 -16 ) __TB_empty [ 1 0 0 0 ] [ 0 0 -1 0 ] 0 0.25 0.25
( -64 -64 -16 ) ( -63 -64 -16 ) ( -64 -63 -16 ) __TB_empty [ -1 0 0 0 ] [ 0 -1 0 0 ] 0 0.25 0.25
( 64 64 16 ) ( 64 65 16 ) ( 65 64 16 ) __TB_empty [ 1 0 0 0 ] [ 0 -1 0 0 ] 0 0.25 0.25
( 64 64 16 ) ( 65 64 16 ) ( 64 64 17 ) __TB_empty [ -1 0 0 0 ] [ 0 0 -1 0 ] 0 0.25 0.25
( 64 64 16 ) ( 64 64 17 ) ( 64 65 16 ) __TB_empty [ 0 1 0 0 ] [ 0 0 -1 0 ] 0 0.25 0.25
}</code></pre>



<p>By convention, they’re numbered, but this is not a crucial aspect of the format. The important bit is that this is a representation of each face of the cube, stored as three (three-dimensional) points. These three points define a plane which is a half-space – an infinite set of points bounded by a plane. It sounds complicated, and the mathematics are, but essentially – you’re looking at each side of a cube here.</p>



<p>BSP compilers then use a range of techniques to extrapolate vertices from these half-spaces, such as computing them directly, or the original Quake compiler’s approach of using a large cube to determine points of intersection. For more of the mathematical details, you can read up <a href="https://quakewiki.org/wiki/Quake_Map_Format">here</a>. Originally I attempted to reproduce this approach on my own with little success – I tried many variations on the formula, and eventually hit one that seemed to work, but actually, was only valid on perfect cubes. It did work on every possible cube, though. But only cubes.</p>



<p>Defeated, I researched further and learned about <a href="https://github.com/QodotPlugin/Qodot">Qodot</a>. I wasn’t the first person to have this idea. Now known as <a href="https://github.com/func-godot">func_godot</a>, a project already existed which used Trenchbroom in another unintended engine. Digging around in their repositories didn’t net me much, until I stumbled into <a href="https://github.com/QodotPlugin/shambler/">this</a> little ditty. Apparently, the original developer of Qodot suddenly got <em>very</em> into Rust one day and rewrote all of the necessary tooling in Rust and then vanished. The team was very cagey about discussing this particular developer, and they seemed to have been gone for a while, and I couldn’t reach them for months. It happened to be <em>precisely</em> what I needed in ways I didn’t even think of originally, and seemingly was all mine to whatever I pleased with.</p>



<p>Now we’re really going to get into technical details, so please bear with me – I’ll take you through it as best as I can, and I pinky-promise this won’t be half as bad as you think it’ll be! Once you’ve built a map, the final step is to compile it and get it in-game. So how does the compilation process work for OpenMW? Let’s crack open the <a href="https://github.com/magicaldave/Morrobroom">Morrobroom</a> source code and take a high-level overview of what it’s doing.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-10.png"><img loading="lazy" decoding="async" width="1024" height="388" data-attachment-id="6651" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-14/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-10.png" data-orig-size="1367,518" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-10-300x114.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-10-1024x388.png" src="https://openmw.org/wp-content/uploads/2024/11/image-10-1024x388.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-10-1024x388.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-10-300x114.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-10-768x291.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-10.png 1367w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>It all starts… with startup arguments. Not a lot to see here – you give it a path to a <code>.map</code> file, the ESP it’s supposed to save to, and an optional scale argument to increase or decrease the overall asset size. This is handy for making maps for both Morrowind and Quake (yes, really).</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-11.png"><img loading="lazy" decoding="async" width="1024" height="438" data-attachment-id="6652" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-15/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-11.png" data-orig-size="1079,461" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-11-300x128.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-11-1024x438.png" src="https://openmw.org/wp-content/uploads/2024/11/image-11-1024x438.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-11-1024x438.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-11-300x128.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-11-768x328.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-11.png 1079w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p><br>Some key points here – <code>MapData</code> is a class which does the necessary Shambler calls in order to get all of the texture and geometry data out of <a href="https://quake.fandom.com/wiki/Shambler_(Q1)">Shambler</a> and into a struct we can work with later. This includes the texture info, entity data, vertices, vertex normals, et cetera. We then loop over all <em>brush</em> entities inside of the map and generate a <code>Mesh</code> from them. The Mesh struct is halfway between a custom representation and an actual NIF file – there’s just a little bit of extra info there to make the compiler work properly. This segment is also responsible for making sure that game objects do not have duplicate definitions inside of the final ESP file.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-12.png"><img loading="lazy" decoding="async" width="600" height="333" data-attachment-id="6653" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-16/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-12.png" data-orig-size="600,333" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-12-300x167.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-12.png" src="https://openmw.org/wp-content/uploads/2024/11/image-12.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-12.png 600w, https://openmw.org/wp-content/uploads/2024/11/image-12-300x167.png 300w" sizes="auto, (max-width: 600px) 100vw, 600px"></a></figure></div>


<p>We then get the reference’s object ID and if assigned, the model override which they’ve been given. Trenchbroom doesn’t support OpenMW’s primary model format, NIF, so the best we can do is just tell it to use a different asset instead of the one the mapper put together. I’ll omit the next part, but, we simply do a big match against the name of the type of the brush entity, and use that to decide if it should become a light, or an NPC, or a door, et cetera.</p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-13.png"><img loading="lazy" decoding="async" width="776" height="437" data-attachment-id="6654" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-17/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-13.png" data-orig-size="776,437" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-13-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-13.png" src="https://openmw.org/wp-content/uploads/2024/11/image-13.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-13.png 776w, https://openmw.org/wp-content/uploads/2024/11/image-13-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-13-768x432.png 768w" sizes="auto, (max-width: 776px) 100vw, 776px"></a></figure></div>


<p><br>Finally we get the center point of each brush asset and use that position as the reference position in-engine. This means they’ll be placed in the same spot in-game as they were in Trenchbroom. Buried underneath all this are also advanced model editing options, such as configuring alpha testing vertex colors, and whether or not collisions are used. More features are consistently being added over time as we improve the compiler and find new things to add!</p>



<p>That was a highly simplified overview, but, that’s the entire main loop for the OpenMW compiler. There is a lot more code which was not showed or explained for brevity – please do review the Morrobroom GitHub or simply reach out if you have any questions about it! So, now, all compiler’d up and nowhere to go… What do I do from here?</p>



<p>Well, naturally, you try to port Quake whole-hog into Morrowind at this point. What else <em>would</em> you do as a responsible Morrowind-modding Rustacean who really needs a job and plays too much Quake? Now, this gets into dicey legal territory. I refuse to publish the compiled assets myself, because this is an area that’s way too ambiguous for me to mess with. However, it’s worth mentioning that the Quake community tosses around the entire texture set for the game all over the place, and way back when, John Romero released the map sources <em>claiming</em> that he made them GPL, but that claim has been disputed. Now, John Romero can get away with just saying he made the maps GPL and nobody’s gonna go argue with <em>him</em> about that, but I don’t have that luxury.</p>



<p>Instead, I will just share some screenshots and mention that both the necessary textures and .map sources are easy to get, if you’d like to reproduce this for yourself:</p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-14.png"><img loading="lazy" decoding="async" width="1024" height="576" data-attachment-id="6655" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-18/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-14.png" data-orig-size="1488,837" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-14-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-14-1024x576.png" src="https://openmw.org/wp-content/uploads/2024/11/image-14-1024x576.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-14-1024x576.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-14-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-14-768x432.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-14.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p>Is it cursed? Yes. Is it my crowning achievement as a technologist? Probably also yes. So far. We still have even further to go. You might notice the maps are empty. We don’t support quake entities yet, and we dropped porting official Quake because of above licensing issues I wasn’t able to get solid answers on. Enter <a href="https://librequake.queer.sh/">LibreQuake</a> – much like FreeDoom, LibreQuake is an open-source reimplementation of the game code and assets that made up Quake. It’s not the exact same thing, but it’s intended to be visually and technically compatible with any Quake engine or mod.</p>



<p>And thus began the port. First came the shotgun:<br></p>


<div>
<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-15.png"><img loading="lazy" decoding="async" width="1024" height="576" data-attachment-id="6656" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-19/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-15.png" data-orig-size="1136,639" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-15-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-15-1024x576.png" src="https://openmw.org/wp-content/uploads/2024/11/image-15-1024x576.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-15-1024x576.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-15-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-15-768x432.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-15.png 1136w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure></div>


<p>This is the first screenshot I took with it, but it worked! Later versions have much better bullet spread and are actually capable of killing targets which they hit. They even use real objects, although it’d be much more efficient if we simply used raycasts to do hit scanning instead of these slow-moving projectiles.</p>



<p>We’re almost done, actually. Research is ongoing into porting creatures. Fortunately, LibreQuake has the source <code>.blend</code> files in its repository, so this won’t be too awful to figure out… eventually. However, I’d like to demonstrate Epoch’s technique he developed for reproducing the Quake skybox! You might’ve noticed in previous images the sky looks really odd.</p>



<p>This is because The Quake sky was implemented at a time before transparency in textures was a common technique – the sky there is actually one texture, folded on top of itself, with the black pixels masked out, and then the result scrolls across any brush which uses the sky texture. Epoch’s postprocess shader is able to replicate this effect, mostly, by essentially utilizing a greenscreen. We place green sky brushes as usual, and then:<br></p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-16.png"><img loading="lazy" decoding="async" width="1024" height="576" data-attachment-id="6657" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-20/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-16.png" data-orig-size="1488,837" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-16-300x169.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-16-1024x576.png" src="https://openmw.org/wp-content/uploads/2024/11/image-16-1024x576.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-16-1024x576.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-16-300x169.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-16-768x432.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-16.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p>It has all the problems of a typical greenscreen though:<br></p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-17.png"><img loading="lazy" decoding="async" width="1024" height="538" data-attachment-id="6658" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-21/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-17.png" data-orig-size="1920,1008" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-17-300x158.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-17-1024x538.png" src="https://openmw.org/wp-content/uploads/2024/11/image-17-1024x538.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-17-1024x538.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-17-300x158.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-17-768x403.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-17-1536x806.png 1536w, https://openmw.org/wp-content/uploads/2024/11/image-17.png 1920w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p>Later, we’ll be able to implement a much nicer version of this technique by using Morrobroom to apply animations directly to these assets and <em>maybe</em> use alpha testing to similarly mask out the black pixels. The great thing about it is… We don’t even know yet!</p>



<p>So what’s the value add in all this? Well, we’re able to iterate much faster on level design and create more unique assets than almost anybody else using this engine. They’re not necessarily as high fidelity, but they’re much more satisfying to work with and really allow to execute one’s artistic vision. Our results speak for themselves: !</p>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-18.png"><img loading="lazy" decoding="async" width="1024" height="676" data-attachment-id="6659" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-22/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-18.png" data-orig-size="1488,983" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-18-300x198.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-18-1024x676.png" src="https://openmw.org/wp-content/uploads/2024/11/image-18-1024x676.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-18-1024x676.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-18-300x198.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-18-768x507.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-18.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-19.png"><img loading="lazy" decoding="async" width="1024" height="551" data-attachment-id="6660" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-23/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-19.png" data-orig-size="1488,800" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-19-300x161.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-19-1024x551.png" src="https://openmw.org/wp-content/uploads/2024/11/image-19-1024x551.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-19-1024x551.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-19-300x161.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-19-768x413.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-19.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-20.png"><img loading="lazy" decoding="async" width="1024" height="551" data-attachment-id="6661" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-24/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-20.png" data-orig-size="1488,800" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-20-300x161.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-20-1024x551.png" src="https://openmw.org/wp-content/uploads/2024/11/image-20-1024x551.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-20-1024x551.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-20-300x161.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-20-768x413.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-20.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-22.png"><img loading="lazy" decoding="async" width="1024" height="551" data-attachment-id="6663" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-26/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-22.png" data-orig-size="1488,800" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-22-300x161.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-22-1024x551.png" src="https://openmw.org/wp-content/uploads/2024/11/image-22-1024x551.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-22-1024x551.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-22-300x161.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-22-768x413.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-22.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<figure><a href="https://openmw.org/wp-content/uploads/2024/11/image-23.png"><img loading="lazy" decoding="async" width="1024" height="651" data-attachment-id="6664" data-permalink="https://openmw.org/2024/from-bsp-to-esp-how-s3ctor-abused-quake-editors-to-redefine-the-morrowind-modding-experience/image-27/" data-orig-file="https://openmw.org/wp-content/uploads/2024/11/image-23.png" data-orig-size="1488,946" data-comments-opened="0" data-image-meta="{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}" data-image-title="image" data-image-description="" data-image-caption="" data-medium-file="https://openmw.org/wp-content/uploads/2024/11/image-23-300x191.png" data-large-file="https://openmw.org/wp-content/uploads/2024/11/image-23-1024x651.png" src="https://openmw.org/wp-content/uploads/2024/11/image-23-1024x651.png" alt="" srcset="https://openmw.org/wp-content/uploads/2024/11/image-23-1024x651.png 1024w, https://openmw.org/wp-content/uploads/2024/11/image-23-300x191.png 300w, https://openmw.org/wp-content/uploads/2024/11/image-23-768x488.png 768w, https://openmw.org/wp-content/uploads/2024/11/image-23.png 1488w" sizes="auto, (max-width: 1024px) 100vw, 1024px"></a></figure>



<p><br>What you see above are maps which Epoch and I produced together, and he worked to develop baked lighting, normal, and specular maps for. Along with a creepy postprocess fog visible in the last image. The first image is a set of 2500 chunks procedurally generated based on the Trenchbroom maps we made. Eat your heart out, Starfield!</p>



<p>If you want to know more about our stack, the OpenMW project, or just to talk, <a href="https://discord.gg/YegsVV3aRb">please do reach out</a>! I love discussing this topic and am always open to explore game development concepts (and OpenMW) with new friends.</p>



<h2>What does this mean for OpenCS?</h2>



<p>Great things. Trenchbroom has a very similar stack to OpenCS – both are Qt-based level editing applications running OpenGL. The similarities <em>mostly</em> end there, though, and in a good way. I borrowed some of Trenchbroom’s code for <a href="https://gitlab.com/OpenMW/openmw/-/merge_requests/3974">an early attempt</a> at Windows dark mode support. My implementation didn’t manifest, but the relevant Trenchbroom bits from that old MR will allow better usage of the ALT key in our editor to more closely reflect the orbit camera behavior of the original TESCS.</p>



<p>Additionally, I’ve (politely) butted heads with the Trenchbroom author once or twice about adding new preferences in TB – something which they are <em>very</em> resistant to. And rightly so! I’ve spoken with many people who thought they had feature requests for OpenCS and it turned out they were asking for something buried in its preferences menu.</p>



<p>Finally, after implementing <a href="https://gitlab.com/OpenMW/openmw/-/merge_requests/3675">!3675</a>, I realized we could do even better than that when it comes to moving objects in the editor. In Trenchbroom, you simply hold shift to move an object only along whichever of the X and Y axes has moved further, and alt to move on the Z axis. It’s not at all like how TESCS works, but it’s very fast once you’re used to it and far less laborious than either my or Blender’s versions of the same feature.</p>



<p>To cap this article, I’d like to also share <a href="https://assetstore.unity.com/packages/tools/level-design/tremble-map-importer-277805">Tremble</a>, the Unity integration for Trenchbroom, and <a href="https://forums.unrealengine.com/t/hammuer-a-hammer-worldcraft-map-importer-for-unreal-engine/50145">HammUEr</a>, the Unreal integration. You can use Quake-based workflows in essentially any 3D-capable game engine! Consider using it if you find Blender difficult or just don’t have the time or interest. It might just revolutionize the way you think about level design.</p>
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: How to deal with a serious mental health breakdown? (138 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=42121630</link>
            <guid>42121630</guid>
            <pubDate>Wed, 13 Nov 2024 00:34:28 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=42121630">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><td><table>
        <tbody><tr id="42121630">
      <td><span></span></td>      <td><center><a id="up_42121630" href="https://news.ycombinator.com/vote?id=42121630&amp;how=up&amp;goto=item%3Fid%3D42121630"></a></center></td><td><span><a href="https://news.ycombinator.com/item?id=42121630">Ask HN: How to deal with a serious mental health breakdown?</a></span></td></tr><tr><td colspan="2"></td><td><span>
          <span id="score_42121630">101 points</span> by <a href="https://news.ycombinator.com/user?id=satori99">satori99</a> <span title="2024-11-13T00:34:28 1731458068"><a href="https://news.ycombinator.com/item?id=42121630">5 hours ago</a></span> <span id="unv_42121630"></span> | <a href="https://news.ycombinator.com/hide?id=42121630&amp;goto=item%3Fid%3D42121630">hide</a> | <a href="https://hn.algolia.com/?query=Ask%20HN%3A%20How%20to%20deal%20with%20a%20serious%20mental%20health%20breakdown%3F&amp;type=story&amp;dateRange=all&amp;sort=byDate&amp;storyText=false&amp;prefix&amp;page=0">past</a> | <a href="https://news.ycombinator.com/fave?id=42121630&amp;auth=5080ced61014484f42eba08ffc24dfb23f1c15c2">favorite</a> | <a href="https://news.ycombinator.com/item?id=42121630">50&nbsp;comments</a>        </span>
              </td></tr>
    <tr><td></td></tr><tr><td colspan="2"></td><td><div><p>I am dealing with a delicate problem concerning my housemate who has recently had a very serious mental health breakdown.</p><p>This man is my friend of a decade and a housemate for 5 (uneventful) years. He began behaving erratically last week, and got progressivlely worse over the last weekend to the point where he was not really making any sense at all anymore. ("Reality is an illusion - but he knows the truth now" type stuff). He was not sleeping and began talking to himself.</p><p>I no choice but to call his family and also a mental health crisis team. The crisis team arrived first with police and forcibly entered his space.</p><p>This made him very angry, both at them and me, and he was forcibly removed to a hospital where I understand that he is refusing any sort of treatment and cannot be forced.</p><p>His family arrived to pack some things for his stay and found a half-written suicide note in his room. He is claiming it is "creative writing".</p><p>My flatmate is fiercely intelligent, and very highly educated. He is a professional working scientist and way smarter than me, or almost anyone I know.</p><p>He is insisting on returning to our house (as his legal right) but obviously I am very worried about him and terrified of making wrong decisions for both myself and him.</p><p>I know am not responsible for him, but his family are not really helping him properly (imo) either and he is my friend.</p><p>Has anyone dealt with a situation like this before? I am lost and desperate for advice.</p><p>dang: please delete this post if you deem it inappropriate.</p></div></td></tr>        <tr><td></td></tr><tr><td colspan="2"></td><td><form action="comment" method="post"></form></td></tr>  </tbody></table>
  </td></div></div>]]></description>
        </item>
    </channel>
</rss>