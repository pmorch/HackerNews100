<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Mon, 25 Dec 2023 19:00:04 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Stupid Patent of the Month: Selfie Contests (121 pts)]]></title>
            <link>https://www.eff.org/deeplinks/2023/12/stupid-patent-month-selfie-contests</link>
            <guid>38763566</guid>
            <pubDate>Mon, 25 Dec 2023 15:51:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.eff.org/deeplinks/2023/12/stupid-patent-month-selfie-contests">https://www.eff.org/deeplinks/2023/12/stupid-patent-month-selfie-contests</a>, See on <a href="https://news.ycombinator.com/item?id=38763566">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <article role="article">
  
  
  <div><p><span>Patents are supposed to be an incentive to invent. Too often, they end up being a way to try to claim “ownership” of what should be basic building blocks of human activity, culture, and knowledge. This is especially true of </span><a href="https://www.eff.org/issues/patents"><span>software patents</span></a><span>, an area EFF has been speaking out about for more than 20 years now.&nbsp;</span></p>
<p><span>This month’s Stupid Patent, No. </span><a href="https://patents.google.com/patent/US8655715B2/"><span>8,655,715</span></a><span>, continues the tradition of trying to use software language to capture a monopoly on a basic human cultural activity–in this case, contests.&nbsp;</span></p>
<p><span>A company called Opus One, which does business under the name “Contest Factory,” claims this patent and </span><a href="https://patents.google.com/patent/US10891642B2/en"><span>a related one</span></a><span> cover a huge array of online contests. So far, they’ve filed five lawsuits against other companies that help build online contests, and even threatened a small photo company that organizes mostly non-commercial contests online.&nbsp;</span></p>
<p><span>The patents held by Contest Factory are a good illustration of why EFF has been concerned about out-of-control software patents. It’s not just that wrongly issued patents extort a vast tax on the U.S. economy (although they do—one study </span><a href="https://hbr.org/2014/07/the-evidence-is-in-patent-trolls-do-hurt-innovation"><span>estimated $29 billion in annual direct costs</span></a><span>). The worst software patents also harm peoples’ rights to express themselves and participate in online culture. Just as we’re free in the physical world to </span><a href="https://www.eff.org/deeplinks/2023/01/stupid-patent-month-digital-verification-systems-patents-e-signatures"><span>sign documents</span></a><span>, </span><a href="https://www.eff.org/deeplinks/2019/12/how-patent-sorting-photos-got-used-sue-free-software-group"><span>sort photos</span></a><span>, </span><a href="https://arstechnica.com/tech-policy/2015/10/east-texas-judge-throws-out-168-patent-cases-in-one-fell-swoop/"><span>store and label information</span></a><span>, </span><a href="https://www.eff.org/deeplinks/2023/02/stupid-patent-month-clocking-work-app"><span>clock in to work</span></a><span>, </span><a href="https://www.eff.org/deeplinks/2022/05/patent-troll-uses-ridiculous-people-finder-patent-sue-small-dating-companies"><span>find people to date</span></a><span>, or </span><a href="https://www.eff.org/deeplinks/2018/07/effs-help-language-teacher-responds-ridiculous-patent-threat"><span>teach foreign languages</span></a><span>, without paying extortionate fees to others, we must also be free to do so online.&nbsp;</span></p>
<h3><strong><span>Patenting Contests</span></strong></h3>
<p><span>Claim 1 of the ‘715 patent has steps that claim:&nbsp;</span></p>
<ul>
<li><span>Receiving, storing, and accessing data on a computer;&nbsp;</span></li>
<li><span>Sorting it and generating “contest data”;&nbsp;</span></li>
<li><span>Tabulating votes and picking a winner.</span></li>
</ul>
<p>The patent also uses other terms for common activities of general purpose computers, such as “transmitting” and “displaying” data.&nbsp;</p>
<p><span>In other words, the patent describes everyday use of computers, plus the idea of users participating in a contest. This is a classic abstract idea, and it never should have been eligible for a patent.&nbsp;</span></p>
<p><span>In a </span><a href="https://gamification.cioreview.com/vendor/2017/contest_factory"><span>2017 article in CIO Review</span></a><span>, the company acknowledges how incredibly broad its claims are. Contest Factory claims it patented “voting in online contests long before TV contest shows with public voting components made their appearance,” and that it holds patents “associated with online contests and integrating online voting with virtually any type of contest.”&nbsp;</span></p>
<h3><strong>Lawsuit Over Radio Station Contest&nbsp;</strong></h3>
<p><span>In its most recent lawsuit, Contest Factory says that a Minneapolis radio station’s “Mother’s Day Giveaway” for a mother/daughter spa day infringed its patent. The radio station asked people to post mother-daughter selfies online and share their entry to collect votes.&nbsp;</span></p>
<p><span>Contest Factory sued Pancake Labs (</span><a href="https://www.eff.org/document/contest-factory-v-pancake-labs"><span>complaint</span></a><span>), the company that helped the radio station put the contest online. Contest Factory also claimed a </span><a href="https://www.shortstack.com/blog/how-pbs-maximizes-shortstacks-scalability-versatility-and-customizability-when-creating-digital-marketing-campaigns"><span>PBS contest</span></a><span> in which viewers created short films and voted on them was an example of infringement.&nbsp;</span></p>
<p><span>For the “Mother’s Day Giveaway” contest, the patent infringement accusation reads in part that, “the executable instructions … cause the generation of a contest and the transmission of the first and second content data to at least one user to view and rate the content.”&nbsp;</span></p>
<p><span>Contest Factory has sued over quite a few internet contests, dating back more than a decade. Its 2016 lawsuits, based on the ‘715 patent and two earlier related patents,&nbsp;were filed against three small online marketing firms: Vancouver-based </span><a href="https://www.strutta.com/about/"><span>Strutta</span></a><span>, Florida-based </span><a href="https://www.linkedin.com/company/elettro"><span>Elettro</span></a><span>, and California-based </span><a href="https://www.votigo.com/"><span>Votigo</span></a><span>, for contests that go back to 2011. We don’t know how many more companies or online communities have been threatened in all.&nbsp;</span></p>
<p><span>Sharing user-generated content like photos—cooperatively or competitively—is the kind of sharing that the digital world is ideal for. When patent owners demand a toll for these activities, it doesn’t matter whether they’re patent “trolls” or operating companies seeking to extract settlements from competitors. They threaten our freedoms in unacceptable ways.&nbsp;</span></p>
<p><span>The government shouldn’t be issuing patents like these, and it certainly shouldn’t be making them </span><a href="https://www.eff.org/deeplinks/2023/11/publics-right-fight-bad-patents-must-be-protected"><span>harder to challenge</span></a><span>.&nbsp;</span></p>

<ul>
<li><span>Opus One d/b/a Contest Factory v. Pancake Labs </span><a href="https://www.eff.org/document/contest-factory-v-pancake-labs"><span>complaint</span></a></li>
<li><span>Opus One d/b/a Contest Factory v. Telescope </span><a href="https://www.eff.org/document/contest-factory-v-telescope"><span>complaint&nbsp;</span></a></li>
<li><span>Opus One d/b/a Contest Factory v. Elletro </span><a href="https://www.eff.org/document/contest-factory-v-elletro"><span>complaint&nbsp;</span></a></li>
<li><span>Opus One d/b/a Contest Factory v. Votigo </span><a href="https://www.eff.org/document/contest-factory-v-votigo"><span>complaint&nbsp;</span></a></li>
<li><span>Opus One d/b/a Contest Factory v. Strutta </span><a href="https://www.eff.org/document/contest-factory-v-strutta-complaint"><span>complaint</span></a></li>
</ul>

</div>

          </article>
    </div><div>
          <h2>Join EFF Lists</h2>
        
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Unblocking User Freedom: the right to use adblockers (127 pts)]]></title>
            <link>https://fsfe.org/news/2023/news-20231220-01.en.html</link>
            <guid>38763165</guid>
            <pubDate>Mon, 25 Dec 2023 15:06:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://fsfe.org/news/2023/news-20231220-01.en.html">https://fsfe.org/news/2023/news-20231220-01.en.html</a>, See on <a href="https://news.ycombinator.com/item?id=38763165">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content">


<p id="category"><a href="https://fsfe.org/news/news.en.html">News</a></p>

<p><span>on: </span><time>2023-12-20</time>
</p>

<p>Companies increasingly aim to control how users interact with their 
content online, threatening user freedom. As more companies crack down 
on browser extensions and other third-party software used by internet 
users to customise their experiences, two recent German court cases on 
adblockers could strengthen the legal case for user control over 
technology.</p>

<figure>
  <img src="https://pics.fsfe.org/uploads/medium/c2/a1/d5fc8d5a7998f9146d7be156e0f2.png" alt="An illustration about privacy showing eyes behind some bars">
  <figcaption>
    CC-BY-NC-SA by <a href="http://rahak.net/work.html">Rahak</a>
  </figcaption>
</figure>

	
<p>Advertisements are a part of our lives, including our digital ones. 
They are in the websites we browse, the search results we receive, and 
the online news we read. Tired of receiving so many ads, some users try 
to avoid them by installing an adblocker. But is this a legal practice? 
Is using adblockers an act of restricting market autonomy, or do they 
help achieve user freedom?</p>

<p>Imagine a scenario where website owners hold copyright over their 
websites, including whatever ads they place, and could effectively sue 
for copyright infringement if users were to remove or suppress ads when 
visiting these websites. This hypothetical situation would enable any 
website copyright holder to use the legal system to stop any ordinary 
user on the internet who tries to bypass these ads. This would 
lead to an internet where unsolicited information 
and advertisements are imposed on users. Fortunately, recent court 
decisions have at least prevented this hypothetical from becoming a 
reality in Germany.</p> 

<h2 id="id-is-it-legal-to-use-adblockers-the-lawsuit-in-question">Is it legal to use adblockers? The lawsuit in question</h2>

<p>Using an adblocker is the main way in which many internet users 
bypass ads and pop-ups when accessing websites. Adblockers usually come 
in the form of browser extensions and plugins that filter out unwanted 
ads for an ad-free internet browsing experience.</p> 

<p>As the use of these adblockers increases, some companies have begun 
considering whether it is legal for  users to be able to block their 
ads. This was the case in Germany when Axel Springer SE (Axel 
Springer), one of Germany’s largest publishing companies, engaged in 
lawsuits against Eyeo GmbH (Eyeo), the creator of <a href="https://adblockplus.org/en/about#whymoney">Adblock Plus</a> (a 
Free 
Software adblocking tool licensed under the GPLv3). These lawsuits have 
resulted in a legal battle for user freedom and an open internet.</p>

<p>In the case of Adblock Plus, ads are blocked according to filter rules 
maintained in a so-called “black list”, which users use as a default 
setting. The extension offers ad providers the possibility of having 
their ads excluded from this black list (and included in a “white 
list”) by complying with <a href="https://acceptableads.com/standard/">“acceptable advertising 
standards”,</a> disclosing 
their annual turnover, and paying a sum to Eyeo. Users will only see 
ads that have been included in the white list, but they also have the 
option of blocking ads from both white and black lists altogether.</p>

<div>
<p>Axel Springer filed several suits in Germany against Eyeo on the grounds 
that the Adblock Plus extension interfered with their business, 
alleging that by blocking its advertisements, Eyeo had engaged in 
anti-competitive measures. According to Axel Springer, Eyeo’s business 
model constituted:</p>
<ol>
<li>Targeted obstruction and aggressive business practice; and </li>
<li>A violation of freedom of the press.</li>
</ol>
</div>

<h3 id="id-the-right-not-to-be-advertised-to">The right not to be advertised to</h3> 
<p>After ruling that the option to use adblockers is a decision that internet users should be able to make, 
the courts in Germany ruled that user rights not only include the 
freedom to express an opinion and to receive information, but also the 
rights to refrain from expressing an opinion and to refuse to receive 
imposed information. In doing so, the rulings considered a user’s 
interest in being spared from obtrusive advertising.</p>

<p>Accordingly, internet users are simply exercising their right to not 
have certain forms of advertising displayed when visiting internet 
websites when they choose to make use of an adblocker. Adblock Plus’s 
business model, according to the courts, was therefore a marketable 
service offer which was not primarily aimed at impairing the 
competitive development of Axel Springer. In the opinion of the courts, 
Adblock Plus also does not directly interfere with the business, as 
users retain autonomy to do as they wish with the settings of the 
add-on after installation. Users can block or wish to see only the ads 
in the whitelist. Adblock Plus is therefore merely a product whose use 
is decided solely by the internet user.</p>

<h3 id="id-the-html-argument-does-the-use-of-adblockers-constitute-a-modification-of-a-computer-program">The HTML argument: does the use of adblockers constitute a modification of a computer program?</h3>

<p>Axel Springer also submitted an argument to the German courts that their
websites would be protected under German copyright law as a copyrighted 
computer program, and that their HTML code would similarly be covered 
under this ambit because of the control components it included. Because 
of how Adblock Plus interacts with its website, Axel Springer therefore 
claimed that copies and adaptations of the code in its website were 
violations of copyright made without permission.</p>

<p>In both the initial court ruling and the decision on the subsequent appeal in favour 
of Eyeo, the court disagreed with Axel Springer and held that the use 
of Adblock Plus solely affects the program flow through external 
commands, without altering the program’s essence or generating a 
changed version. Thus, the use of the extension results in a mere 
browser configuration carried out by users according to their 
preferences.</p>

<p>The courts noted that internet users do not require permission from 
website owners when they want to make the website look better for 
themselves. Modern websites are made up of many separate parts that can 
be technically distinguished from each other, including text, images, and 
videos, as well as software that is embedded in the HTML page. For the 
courts, it wasn’t enough that these software components were used in 
the website’s HTML page to mean that the website itself was a 
protectable computer program. We can therefore infer that adblockers 
do not infringe upon a program’s protections.</p>

<h2 id="id-downsides-of-the-case">Downsides of the case</h2> 
<p>Nevertheless, some aspects in the judgments are still not ideal in 
promoting the average user’s rights. While user freedom  means that 
users are able to use the tools that they wish to when browsing the 
World Wide Web, the court nevertheless preserved Axel 
Springer’s right to exclude users with an activated adblocker from 
accessing its content. This can be understood as an approval on the use 
of adblock detection tools by companies like Axel Springer.</p> 

<p>Unfortunately, the court also mentioned that Axel Springer can convert 
its content into a paid access model, justifying this measure as an 
element inherent for competition. We fear that this tacit approval can 
result in paywalls and adblock detection tools becoming the basic 
standard on the internet.</p> 

<p>More importantly, tools to detect the use of adblockers go against <a href="https://eur-lex.europa.eu/legal-content/EN/TXT/PDF/?uri=CELEX:32002L0058">Art. 
5(3) of the ePrivacy directive</a>, which mandates that websites must seek 
consent before accessing or storing information about a user’s device. 
The EU commission has confirmed that, Art. 5(3) of the ePrivacy directive 
<a href="https://forum.adblockplus.org/viewtopic.php?t=45001">is not 
just limited to cookies but ‘all types of information’ stored or 
accessed</a> in the user’s terminal device. This applies to the storage by 
websites of scripts in users’ terminal equipment to detect if users 
have installed or are using adblockers.</p> 

<h2 id="id-a-win-for-user-freedom">A win for user freedom?</h2> 

<p>With many service providers and websites on the internet following the 
trend of restricting users with adblockers from accessing their services, these court 
decisions in Germany help build precedents that uphold and recognize 
principles of user freedom.</p> 

<p>Indeed, these decisions support the principles of a <a href="https://fsfe.org/activities/ngi/ngi.en.html">Next Generation 
Internet</a>, including ensuring that internet users can make individual 
choices and exercise their freedom of expression, in ways in which they 
can freely develop and use new extensions and browser features to 
enhance their online experience and user control.</p>  

<p>Despite the steps forward for user control found in these judgments, 
they do not go as far as we would hope to secure user freedom when 
using the internet, and are still subject to appeals and therefore may 
not be final. We will keep an eye on the legal proceedings in this case 
and keep you updated when new developments occur. In the meantime, the 
court cases can be read on the <a href="https://juris.bundesgerichtshof.de/cgi-bin/rechtsprechung/document.py?Gericht=bgh&amp;Art=en&amp;nr=8849">Bundesgerichtshof</a> 
and <a href="https://www.landesrecht-hamburg.de/bsha/document/JURE220021753">Landesgerichts</a> 
websites. If you are aware of any similar cases or other developments to 
support user freedom in any other member states in the EU, then please 
do share and reach out to us!</p>


<p id="discussion-link"><a href="https://community.fsfe.org/t/1114">Discuss this </a></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Non-interactive SSH password authentication (142 pts)]]></title>
            <link>https://vincent.bernat.ch/en/blog/2023-sshpass-without-sshpass</link>
            <guid>38762214</guid>
            <pubDate>Mon, 25 Dec 2023 12:55:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://vincent.bernat.ch/en/blog/2023-sshpass-without-sshpass">https://vincent.bernat.ch/en/blog/2023-sshpass-without-sshpass</a>, See on <a href="https://news.ycombinator.com/item?id=38762214">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="lf-text">

<p>SSH offers several forms of authentication, such as <strong>passwords</strong> and
<strong>public keys</strong>. The latter are considered more secure. However, password
authentication remains prevalent, particularly with network equipment.<sup id="fnref-why"><a href="#fn-why">1</a></sup></p>
<p>A classic solution to avoid typing a password for each connection is
<a href="https://sourceforge.net/projects/sshpass/" title="sshpass: Non-interactive ssh password auth">sshpass</a>, or its more correct variant <a href="https://github.com/clarkwang/passh">passh</a>. Here is a wrapper for <em>Zsh</em>,
getting the password from <a href="https://www.passwordstore.org/" title="The standard UNIX password manager">pass</a>, a simple password manager:<sup id="fnref-security"><a href="#fn-security">2</a></sup></p>
<div><pre><span></span>pssh<span>()</span><span> </span><span>{</span>
<span>  </span>passh<span> </span>-p<span> </span>&lt;<span>(</span>pass<span> </span>show<span> </span>network/ssh/password<span> </span><span>|</span><span> </span>head<span> </span>-1<span>)</span><span> </span>ssh<span> </span><span>"</span><span>$@</span><span>"</span>
<span>}</span>
compdef<span> </span><span>pssh</span><span>=</span>ssh
</pre></div>


<p>This approach is a bit brittle as it requires to parse the output of the <code>ssh</code>
command to look for a password prompt. Moreover, if no password is required, the
password manager is still invoked. Since <a href="https://www.openssh.com/txt/release-8.4" title="OpenSSH 8.4 release notes">OpenSSH 8.4</a>, we can use
<code>SSH_ASKPASS</code> and <code>SSH_ASKPASS_REQUIRE</code> instead:</p>
<div><pre><span></span>ssh<span>()</span><span> </span><span>{</span>
<span>  </span><span>set</span><span> </span>-o<span> </span>localoptions<span> </span>-o<span> </span>localtraps
<span>  </span><span>local</span><span> </span><span>passname</span><span>=</span>network/ssh/password
<span>  </span><span>local</span><span> </span><span>helper</span><span>=</span><span>$(</span>mktemp<span>)</span>
<span>  </span><span>trap</span><span> </span><span>"command rm -f </span><span>$helper</span><span>"</span><span> </span>EXIT<span> </span>INT
<span>  </span>&gt;<span> </span><span>$helper</span><span> </span><span>&lt;&lt;EOF</span>
<span>#!$SHELL</span>
<span>pass show $passname | head -1</span>
<span>EOF</span>
<span>  </span>chmod<span> </span>u+x<span> </span><span>$helper</span>
<span>  </span><span>SSH_ASKPASS</span><span>=</span><span>$helper</span><span> </span><span>SSH_ASKPASS_REQUIRE</span><span>=</span>force<span> </span><span>command</span><span> </span>ssh<span> </span><span>"</span><span>$@</span><span>"</span>
<span>}</span>
</pre></div>


<p>If the password is incorrect, we can display a prompt on the second
tentative:</p>
<div><pre><span></span>ssh<span>()</span><span> </span><span>{</span>
<span>  </span><span>set</span><span> </span>-o<span> </span>localoptions<span> </span>-o<span> </span>localtraps
<span>  </span><span>local</span><span> </span><span>passname</span><span>=</span>network/ssh/password
<span>  </span><span>local</span><span> </span><span>helper</span><span>=</span><span>$(</span>mktemp<span>)</span>
<span>  </span><span>trap</span><span> </span><span>"command rm -f </span><span>$helper</span><span>"</span><span> </span>EXIT<span> </span>INT
<span>  </span>&gt;<span> </span><span>$helper</span><span> </span><span>&lt;&lt;EOF</span>
<span>#!$SHELL</span>
<span>if [ -k $helper ]; then</span>
<span>  {</span>
<span>    oldtty=\$(stty -g)</span>
<span>    trap 'stty \$oldtty &lt; /dev/tty 2&gt; /dev/null' EXIT INT TERM HUP</span>
<span>    stty -echo</span>
<span>    print "\rpassword: "</span>
<span>    read password</span>
<span>    printf "\n"</span>
<span>  } &gt; /dev/tty &lt; /dev/tty</span>
<span>  printf "%s" "\$password"</span>
<span>else</span>
<span>  pass show $passname | head -1</span>
<span>  chmod +t $helper</span>
<span>fi</span>
<span>EOF</span>
<span>  </span>chmod<span> </span>u+x<span> </span><span>$helper</span>
<span>  </span><span>SSH_ASKPASS</span><span>=</span><span>$helper</span><span> </span><span>SSH_ASKPASS_REQUIRE</span><span>=</span>force<span> </span><span>command</span><span> </span>ssh<span> </span><span>"</span><span>$@</span><span>"</span>
<span>}</span>
</pre></div>


<p>A possible improvement is to use a different password entry depending on the
remote host:<sup id="fnref-zsh"><a href="#fn-zsh">3</a></sup></p>
<div><pre><span></span>ssh<span>()</span><span> </span><span>{</span>
<span>  </span><span># Grab login information</span>
<span>  </span><span>local</span><span> </span>-A<span> </span>details
<span>  </span><span>details</span><span>=(</span><span>${</span><span>=</span><span>${</span><span>(M)</span><span>${</span><span>:-</span><span>"</span><span>${</span><span>(@f)</span><span>$(</span><span>command</span><span> </span>ssh<span> </span>-G<span> </span><span>"</span><span>$@</span><span>"</span><span> </span><span>2</span>&gt;/dev/null<span>)</span><span>}</span><span>"</span><span>}</span><span>:#(host|hostname|user) *</span><span>}}</span><span>)</span>
<span>  </span><span>local</span><span> </span><span>remote</span><span>=</span><span>${</span><span>details</span><span>[host]</span><span>:-</span><span>details</span><span>[hostname]</span><span>}</span>
<span>  </span><span>local</span><span> </span><span>login</span><span>=</span><span>${</span><span>details</span><span>[user]</span><span>}</span>@<span>${</span><span>remote</span><span>}</span>

<span>  </span><span># Get password name</span>
<span>  </span><span>local</span><span> </span>passname
<span>  </span><span>case</span><span> </span><span>"</span><span>$login</span><span>"</span><span> </span><span>in</span>
<span>    </span>admin@*.example.net<span>)</span><span>  </span><span>passname</span><span>=</span>company1/ssh/admin<span> </span><span>;;</span>
<span>    </span>bernat@*.example.net<span>)</span><span> </span><span>passname</span><span>=</span>company1/ssh/bernat<span> </span><span>;;</span>
<span>    </span>backup@*.example.net<span>)</span><span> </span><span>passname</span><span>=</span>company1/ssh/backup<span> </span><span>;;</span>
<span>  </span><span>esac</span>

<span>  </span><span># No password name? Just use regular SSH</span>
<span>  </span><span>[[</span><span> </span>-z<span> </span><span>$passname</span><span> </span><span>]]</span><span> </span><span>&amp;&amp;</span><span> </span><span>{</span>
<span>    </span><span>command</span><span> </span>ssh<span> </span><span>"</span><span>$@</span><span>"</span>
<span>    </span><span>return</span><span> </span><span>$?</span>
<span>  </span><span>}</span>

<span>  </span><span># Invoke SSH with the helper for SSH_ASKPASS</span>
<span>  </span><span># […]</span>
<span>}</span>
</pre></div>


<p>It is also possible to make <code>scp</code> invoke our custom <code>ssh</code> function:</p>
<div><pre><span></span>scp<span>()</span><span> </span><span>{</span>
<span>  </span><span>set</span><span> </span>-o<span> </span>localoptions<span> </span>-o<span> </span>localtraps
<span>  </span><span>local</span><span> </span><span>helper</span><span>=</span><span>$(</span>mktemp<span>)</span>
<span>  </span><span>trap</span><span> </span><span>"command rm -f </span><span>$helper</span><span>"</span><span> </span>EXIT<span> </span>INT
<span>  </span>&gt;<span> </span><span>$helper</span><span> </span><span>&lt;&lt;EOF </span>
<span>#!$SHELL</span>
<span>source ${(%):-%x}</span>
<span>ssh "\$@"</span>
<span>EOF</span>
<span>  </span><span>command</span><span> </span>scp<span> </span>-S<span> </span><span>$helper</span><span> </span><span>"</span><span>$@</span><span>"</span>
<span>}</span>
</pre></div>


<p>For the complete code, have a look at my <a href="https://github.com/vincentbernat/zshrc/blob/master/rc/ssh.zsh">zshrc</a>. As an alternative, you can
put the <code>ssh()</code> function body into its own script file and replace <code>command ssh</code>
with <code>/usr/bin/ssh</code> to avoid an unwanted recursive call. In this case, the
<code>scp()</code> function is not needed anymore.</p>
<div>
<hr>
<ol>
<li id="fn-why">
<p>First, some vendors make it <a href="https://vincent.bernat.ch/en/blog/2020-syncing-ssh-keys-iosxr-ansible" title="Syncing SSH keys on Cisco IOS-XR with a custom Ansible module">difficult to associate an SSH key with a
user</a>. Then, many vendors do not support certificate-based
authentication, making it difficult to scale. Finally, interactions between
public-key authentication and finer-grained authorization methods like
TACACS+ and Radius are still uncharted territory.&nbsp;<a href="#fnref-why" title="Jump back to footnote 1 in the text">↩︎</a></p>
</li>
<li id="fn-security">
<p>The clear-text password never appears on the command line, in the
environment, or on the disk, making it difficult for a third party without
elevated privileges to capture it. On Linux, <em>Zsh</em> provides the password
through a file descriptor.&nbsp;<a href="#fnref-security" title="Jump back to footnote 2 in the text">↩︎</a></p>
</li>
<li id="fn-zsh">
<p>To decipher the fourth line, you may get help from <code>print -l</code> and the
<a href="https://manpages.debian.org/bookworm/zsh-common/zshexpn.1.en.html" title="zshexpn(1) manual page">zshexpn(1)</a> manual page. <code>details</code> is an <a href="https://scriptingosx.com/2019/11/associative-arrays-in-zsh/" title="Associative arrays in zsh">associative array</a> defined
from an array alternating keys and values.&nbsp;<a href="#fnref-zsh" title="Jump back to footnote 3 in the text">↩︎</a></p>
</li>
</ol>
</div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[I told the flight attendant "the WiFi isn't working" (186 pts)]]></title>
            <link>https://x.com/erratarob/status/1739132876732674539?s=46&amp;t=FFxXRm_qmWG4nJwsccRUbA</link>
            <guid>38762065</guid>
            <pubDate>Mon, 25 Dec 2023 12:27:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://x.com/erratarob/status/1739132876732674539?s=46&#x26;t=FFxXRm_qmWG4nJwsccRUbA">https://x.com/erratarob/status/1739132876732674539?s=46&#x26;t=FFxXRm_qmWG4nJwsccRUbA</a>, See on <a href="https://news.ycombinator.com/item?id=38762065">Hacker News</a></p>
Couldn't get https://x.com/erratarob/status/1739132876732674539?s=46&t=FFxXRm_qmWG4nJwsccRUbA: Error: Request failed with status code 400]]></description>
        </item>
        <item>
            <title><![CDATA[Breakdown of faults by car brand: Tesla has replaced Dacia at the bottom (373 pts)]]></title>
            <link>https://www.tuvsud.com/en/press-and-media/2023/november/regular-servicing-makes-all-the-difference</link>
            <guid>38760933</guid>
            <pubDate>Mon, 25 Dec 2023 08:51:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tuvsud.com/en/press-and-media/2023/november/regular-servicing-makes-all-the-difference">https://www.tuvsud.com/en/press-and-media/2023/november/regular-servicing-makes-all-the-difference</a>, See on <a href="https://news.ycombinator.com/item?id=38760933">Hacker News</a></p>
Couldn't get https://www.tuvsud.com/en/press-and-media/2023/november/regular-servicing-makes-all-the-difference: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Zotero for Android available for beta tests (229 pts)]]></title>
            <link>https://forums.zotero.org/discussion/110371/available-for-beta-testing-zotero-for-android</link>
            <guid>38760864</guid>
            <pubDate>Mon, 25 Dec 2023 08:30:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://forums.zotero.org/discussion/110371/available-for-beta-testing-zotero-for-android">https://forums.zotero.org/discussion/110371/available-for-beta-testing-zotero-for-android</a>, See on <a href="https://news.ycombinator.com/item?id=38760864">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="Discussion_110371"><p>
                    We're happy to announce the beta of Zotero for Android.</p><p>You can install the app from the Google Play Store:</p><p><a href="https://play.google.com/store/apps/details?id=org.zotero.android" rel="nofollow">https://play.google.com/store/apps/details?id=org.zotero.android</a></p><p>Current features:
</p><ul><li>Sync personal and group libraries</li><li>Edit item data and notes</li><li>Organize items into collections</li><li>Download and upload files via Zotero Storage</li><li>View PDFs and snapshots</li><li>Annotate PDFs (highlight, note, image, and ink annotations)</li></ul><p>
Not yet implemented:
</p><ul><li>Saving from the browser</li><li>Adding items via identifier or barcode scanning</li><li>Citation/bibliography generation</li><li>WebDAV file syncing</li></ul><p>
This is an early beta, so we don't recommend using it if you're in the middle of an important project. If you do want to try it, be sure you’ve made a backup of the <a rel="nofollow" href="https://www.zotero.org/support/zotero_data">Zotero data directory</a> on your computer before installing the app.</p><p>The beta is currently limited to 1,000 testers, but we'll increase that limit once the app has gone through a bit more testing.</p><p>Please create new threads in these forums for any bug reports or feature requests. Be sure to put "Android" in your thread title so it's clear what you're referring to.</p><p>Thanks for helping to test the app!                </p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ruby 3.3 (477 pts)]]></title>
            <link>https://www.ruby-lang.org/en/news/2023/12/25/ruby-3-3-0-released/</link>
            <guid>38760477</guid>
            <pubDate>Mon, 25 Dec 2023 07:01:17 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.ruby-lang.org/en/news/2023/12/25/ruby-3-3-0-released/">https://www.ruby-lang.org/en/news/2023/12/25/ruby-3-3-0-released/</a>, See on <a href="https://news.ycombinator.com/item?id=38760477">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-wrapper">
    <p>Posted by naruse on 25 Dec 2023</p>

    
<p>We are pleased to announce the release of Ruby 3.3.0. Ruby 3.3 adds a new parser named Prism, uses Lrama as a parser generator, adds a new pure-Ruby JIT compiler named RJIT, and many performance improvements especially YJIT.</p>

<h2>Prism</h2>

<ul>
  <li>Introduced <a href="https://github.com/ruby/prism">the Prism parser</a> as a default gem
    <ul>
      <li>Prism is a portable, error tolerant, and maintainable recursive descent parser for the Ruby language</li>
    </ul>
  </li>
  <li>Prism is production ready and actively maintained, you can use it in place of Ripper
    <ul>
      <li>There is <a href="https://ruby.github.io/prism/">extensive documentation</a> on how to use Prism</li>
      <li>Prism is both a C library that will be used internally by CRuby and a Ruby gem that can be used by any tooling which needs to parse Ruby code</li>
      <li>Notable methods in the Prism API are:
        <ul>
          <li><code>Prism.parse(source)</code> which returns the AST as part of a parse result object</li>
          <li><code>Prism.parse_comments(source)</code> which returns the comments</li>
          <li><code>Prism.parse_success?(source)</code> which returns true if there are no errors</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>You can make pull requests or issues directly on <a href="https://github.com/ruby/prism">the Prism repository</a> if you are interested in contributing</li>
  <li>You can now use <code>ruby --parser=prism</code> or <code>RUBYOPT="--parser=prism"</code> to experiment with the Prism compiler. Please note that this flag is for debugging only.</li>
</ul>

<h2>Use Lrama instead of Bison</h2>

<ul>
  <li>Replace Bison with <a href="https://github.com/ruby/lrama">Lrama LALR parser generator</a> <a href="https://bugs.ruby-lang.org/issues/19637">[Feature #19637]</a>
    <ul>
      <li>If you have interest, please see <a href="https://rubykaigi.org/2023/presentations/spikeolaf.html">The future vision of Ruby Parser</a></li>
      <li>Lrama internal parser is replaced with LR parser generated by Racc for maintainability</li>
      <li>Parameterizing Rules <code>(?, *, +)</code> are supported, it will be used in Ruby parse.y</li>
    </ul>
  </li>
</ul>

<h2>YJIT</h2>

<ul>
  <li>Major performance improvements over Ruby 3.2
    <ul>
      <li>Support for splat and rest arguments has been improved.</li>
      <li>Registers are allocated for stack operations of the virtual machine.</li>
      <li>More calls with optional arguments are compiled. Exception handlers are also compiled.</li>
      <li>Unsupported call types and megamorphic call sites no longer exit to the interpreter.</li>
      <li>Basic methods like Rails <code>#blank?</code> and
<a href="https://github.com/rails/rails/pull/49909">specialized <code>#present?</code></a> are inlined.</li>
      <li><code>Integer#*</code>, <code>Integer#!=</code>, <code>String#!=</code>, <code>String#getbyte</code>,
<code>Kernel#block_given?</code>, <code>Kernel#is_a?</code>, <code>Kernel#instance_of?</code>, and <code>Module#===</code>
are specially optimized.</li>
      <li>Compilation speed is now slightly faster than Ruby 3.2.</li>
      <li>Now more than 3x faster than the interpreter on Optcarrot!</li>
    </ul>
  </li>
  <li>Significantly improved memory usage over Ruby 3.2
    <ul>
      <li>Metadata for compiled code uses a lot less memory.</li>
      <li><code>--yjit-call-threshold</code> is automatically raised from 30 to 120
when the application has more than 40,000 ISEQs.</li>
      <li><code>--yjit-cold-threshold</code> is added to skip compiling cold ISEQs.</li>
      <li>More compact code is generated on Arm64.</li>
    </ul>
  </li>
  <li>Code GC is now disabled by default
    <ul>
      <li><code>--yjit-exec-mem-size</code> is treated as a hard limit where compilation of new code stops.</li>
      <li>No sudden drops in performance due to code GC.
Better copy-on-write behavior on servers reforking with
<a href="https://github.com/shopify/pitchfork">Pitchfork</a>.</li>
      <li>You can still enable code GC if desired with <code>--yjit-code-gc</code></li>
    </ul>
  </li>
  <li>Add <code>RubyVM::YJIT.enable</code> that can enable YJIT at run-time
    <ul>
      <li>You can start YJIT without modifying command-line arguments or environment variables.
Rails 7.2 will <a href="https://github.com/rails/rails/pull/49947">enable YJIT by default</a>
using this method.</li>
      <li>This can also be used to enable YJIT only once your application is
done booting. <code>--yjit-disable</code> can be used if you want to use other
YJIT options while disabling YJIT at boot.</li>
    </ul>
  </li>
  <li>More YJIT stats are available by default
    <ul>
      <li><code>yjit_alloc_size</code> and several more metadata-related stats are now available by default.</li>
      <li><code>ratio_in_yjit</code> stat produced by <code>--yjit-stats</code> is now available in release builds,
a special stats or dev build is no longer required to access most stats.</li>
    </ul>
  </li>
  <li>Add more profiling capabilities
    <ul>
      <li><code>--yjit-perf</code> is added to facilitate profiling with Linux perf.</li>
      <li><code>--yjit-trace-exits</code> now supports sampling with <code>--yjit-trace-exits-sample-rate=N</code></li>
    </ul>
  </li>
  <li>More thorough testing and multiple bug fixes</li>
</ul>

<h2>RJIT</h2>

<ul>
  <li>Introduced a pure-Ruby JIT compiler RJIT and replaced MJIT.
    <ul>
      <li>RJIT supports only x86-64 architecture on Unix platforms.</li>
      <li>Unlike MJIT, it doesn’t require a C compiler at runtime.</li>
    </ul>
  </li>
  <li>RJIT exists only for experimental purposes.
    <ul>
      <li>You should keep using YJIT in production.</li>
    </ul>
  </li>
  <li>If you are interested in developing JIT for Ruby, please check out <a href="https://rubykaigi.org/2023/presentations/k0kubun.html#day3">k0kubun’s presentation on Day 3 of RubyKaigi</a>.</li>
</ul>

<h2>M:N thread scheduler</h2>

<ul>
  <li>M:N thread scheduler was introduced. <a href="https://bugs.ruby-lang.org/issues/19842">[Feature #19842]</a>
    <ul>
      <li>M Ruby threads are managed by N native threads (OS threads) so the thread creation and management cost are reduced.</li>
      <li>It can break C-extension compatibility so that M:N thread scheduler is disabled on the main Ractor by default.
        <ul>
          <li><code>RUBY_MN_THREADS=1</code> environment variable enables M:N threads on the main Ractor.</li>
          <li>M:N threads are always enabled on non-main Ractors.</li>
        </ul>
      </li>
      <li><code>RUBY_MAX_CPU=n</code> environment variable sets maximum number of <code>N</code> (maximum number of native threads). The default value is 8.
        <ul>
          <li>Since only one Ruby thread per Ractor can run at the same time, the number of native threads will be used, which is the smaller of the number specified in <code>RUBY_MAX_CPU</code> and the number of running Ractors. So that single Ractor applications (most of applications) will only use 1 native thread.</li>
          <li>To support blocking operations, more than <code>N</code> native threads can be used.</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2>Performance improvements</h2>

<ul>
  <li><code>defined?(@ivar)</code> is optimized with Object Shapes.</li>
  <li>Name resolution such as <code>Socket.getaddrinfo</code> can now be interrupted (in environments where pthreads are available). <a href="https://bugs.ruby-lang.org/issues/19965">[Feature #19965]</a></li>
  <li>Several performance improvements to the Garbage Collector
    <ul>
      <li>Young objects referenced by old objects are no longer immediately
  promoted to the old generation. This significantly reduces the frequency of
  major GC collections. <a href="https://bugs.ruby-lang.org/issues/19678">[Feature #19678]</a></li>
      <li>A new <code>REMEMBERED_WB_UNPROTECTED_OBJECTS_LIMIT_RATIO</code> tuning variable was
  introduced to control the number of unprotected objects cause a major GC
  collection to trigger. The default is set to <code>0.01</code> (1%). This significantly
  reduces the frequency of major GC collection. <a href="https://bugs.ruby-lang.org/issues/19571">[Feature #19571]</a></li>
      <li>Write Barriers were implemented for many core types that were missing them,
  notably <code>Time</code>, <code>Enumerator</code>, <code>MatchData</code>, <code>Method</code>, <code>File::Stat</code>, <code>BigDecimal</code>
  and several others. This significantly reduces minor GC collection time and major
  GC collection frequency.</li>
      <li>Most core classes are now using Variable Width Allocation, notably <code>Hash</code>, <code>Time</code>,
  <code>Thread::Backtrace</code>, <code>Thread::Backtrace::Location</code>, <code>File::Stat</code>, <code>Method</code>.
  This makes these classes faster to allocate and free, use less memory and reduce
  heap fragmentation.</li>
      <li>Support for weak references has been added to the garbage collector. <a href="https://bugs.ruby-lang.org/issues/19783">[Feature #19783]</a></li>
    </ul>
  </li>
</ul>

<h2>Other notable changes since 3.2</h2>

<h3>IRB</h3>

<p>IRB has received several enhancements, including but not limited to:</p>

<ul>
  <li>Advanced <code>irb:rdbg</code> integration that provides an equivalent debugging experience to <code>pry-byebug</code> (<a href="https://github.com/ruby/irb#debugging-with-irb">doc</a>).</li>
  <li>Pager support for <code>ls</code>, <code>show_source</code> and <code>show_cmds</code> commands.</li>
  <li>More accurate and helpful information provided by the <code>ls</code> and <code>show_source</code> commands.</li>
  <li>Experimental autocompletion using type analysis (<a href="https://github.com/ruby/irb#type-based-completion">doc</a>).</li>
  <li>It is now possible to change the font color and font style in the completion dialog by a newly introduced class Reline::Face (<a href="https://github.com/ruby/ruby/blob/master/doc/reline/face.md">doc</a>)</li>
</ul>

<p>In addition, IRB has also undergone extensive refactoring and received dozens of bug fixes to facilitate easier future enhancements.</p>

<h2>Compatibility issues</h2>

<p>Note: Excluding feature bug fixes.</p>

<ul>
  <li><code>it</code> calls without arguments in a block with no ordinary parameters are
deprecated. <code>it</code> will be a reference to the first block parameter in Ruby 3.4.
<a href="https://bugs.ruby-lang.org/issues/18980">[Feature #18980]</a></li>
</ul>

<h3>Removed environment variables</h3>

<p>The following deprecated methods are removed.</p>

<ul>
  <li>Environment variable <code>RUBY_GC_HEAP_INIT_SLOTS</code> has been deprecated and is a no-op. Please use environment variables <code>RUBY_GC_HEAP_{0,1,2,3,4}_INIT_SLOTS</code> instead. <a href="https://bugs.ruby-lang.org/issues/19785">[Feature #19785]</a></li>
</ul>

<h2>Stdlib compatibility issues</h2>

<h3><code>ext/readline</code> is retired</h3>

<ul>
  <li>We have <code>reline</code> that is pure Ruby implementation compatible with <code>ext/readline</code> API. We rely on <code>reline</code> in the future. If you need to use <code>ext/readline</code>, you can install <code>ext/readline</code> via rubygems.org with <code>gem install readline-ext</code>.</li>
  <li>We no longer need to install libraries like <code>libreadline</code> or <code>libedit</code>.</li>
</ul>

<h2>Standard library updates</h2>

<p>RubyGems and Bundler warn if users do <code>require</code> the following gems without adding them to Gemfile or gemspec. This is because they will become the bundled gems in the future version of Ruby.</p>

<p>This warning is suppressed if you use bootsnap gem. We recoomend to run your application with <code>DISABLE_BOOTSNAP=1</code> environmental variable at least once. This is limitation of this version.</p>

<p>Targeted libraries are:</p>
<ul>
  <li>abbrev</li>
  <li>base64</li>
  <li>bigdecimal</li>
  <li>csv</li>
  <li>drb</li>
  <li>getoptlong</li>
  <li>mutex_m</li>
  <li>nkf</li>
  <li>observer</li>
  <li>racc</li>
  <li>resolv-replace</li>
  <li>rinda</li>
  <li>syslog</li>
</ul>

<p>The following default gem is added.</p>

<ul>
  <li>prism 0.19.0</li>
</ul>

<p>The following default gems are updated.</p>

<ul>
  <li>RubyGems 3.5.3</li>
  <li>abbrev 0.1.2</li>
  <li>base64 0.2.0</li>
  <li>benchmark 0.3.0</li>
  <li>bigdecimal 3.1.5</li>
  <li>bundler 2.5.3</li>
  <li>cgi 0.4.1</li>
  <li>csv 3.2.8</li>
  <li>date 3.3.4</li>
  <li>delegate 0.3.1</li>
  <li>drb 2.2.0</li>
  <li>english 0.8.0</li>
  <li>erb 4.0.3</li>
  <li>error_highlight 0.6.0</li>
  <li>etc 1.4.3</li>
  <li>fcntl 1.1.0</li>
  <li>fiddle 1.1.2</li>
  <li>fileutils 1.7.2</li>
  <li>find 0.2.0</li>
  <li>getoptlong 0.2.1</li>
  <li>io-console 0.7.1</li>
  <li>io-nonblock 0.3.0</li>
  <li>io-wait 0.3.1</li>
  <li>ipaddr 1.2.6</li>
  <li>irb 1.11.0</li>
  <li>json 2.7.1</li>
  <li>logger 1.6.0</li>
  <li>mutex_m 0.2.0</li>
  <li>net-http 0.4.0</li>
  <li>net-protocol 0.2.2</li>
  <li>nkf 0.1.3</li>
  <li>observer 0.1.2</li>
  <li>open-uri 0.4.1</li>
  <li>open3 0.2.1</li>
  <li>openssl 3.2.0</li>
  <li>optparse 0.4.0</li>
  <li>ostruct 0.6.0</li>
  <li>pathname 0.3.0</li>
  <li>pp 0.5.0</li>
  <li>prettyprint 0.2.0</li>
  <li>pstore 0.1.3</li>
  <li>psych 5.1.2</li>
  <li>rdoc 6.6.2</li>
  <li>readline 0.0.4</li>
  <li>reline 0.4.1</li>
  <li>resolv 0.3.0</li>
  <li>rinda 0.2.0</li>
  <li>securerandom 0.3.1</li>
  <li>set 1.1.0</li>
  <li>shellwords 0.2.0</li>
  <li>singleton 0.2.0</li>
  <li>stringio 3.1.0</li>
  <li>strscan 3.0.7</li>
  <li>syntax_suggest 2.0.0</li>
  <li>syslog 0.1.2</li>
  <li>tempfile 0.2.1</li>
  <li>time 0.3.0</li>
  <li>timeout 0.4.1</li>
  <li>tmpdir 0.2.0</li>
  <li>tsort 0.2.0</li>
  <li>un 0.3.0</li>
  <li>uri 0.13.0</li>
  <li>weakref 0.1.3</li>
  <li>win32ole 1.8.10</li>
  <li>yaml 0.3.0</li>
  <li>zlib 3.1.0</li>
</ul>

<p>The following bundled gem is promoted from default gems.</p>

<ul>
  <li>racc 1.7.3</li>
</ul>

<p>The following bundled gems are updated.</p>

<ul>
  <li>minitest 5.20.0</li>
  <li>rake 13.1.0</li>
  <li>test-unit 3.6.1</li>
  <li>rexml 3.2.6</li>
  <li>rss 0.3.0</li>
  <li>net-ftp 0.3.3</li>
  <li>net-imap 0.4.9</li>
  <li>net-smtp 0.4.0</li>
  <li>rbs 3.4.0</li>
  <li>typeprof 0.21.9</li>
  <li>debug 1.9.1</li>
</ul>

<p>See GitHub releases like <a href="https://github.com/ruby/logger/releases">Logger</a> or
changelog for details of the default gems or bundled gems.</p>

<p>See <a href="https://github.com/ruby/ruby/blob/v3_3_0/NEWS.md">NEWS</a>
or <a href="https://github.com/ruby/ruby/compare/v3_2_0...v3_3_0">commit logs</a>
for more details.</p>

<p>With those changes, <a href="https://github.com/ruby/ruby/compare/v3_2_0...v3_3_0#file_bucket">5532 files changed, 326851 insertions(+), 185793 deletions(-)</a>
since Ruby 3.2.0!</p>

<p>Merry Christmas, Happy Holidays, and enjoy programming with Ruby 3.3!</p>

<h2>Download</h2>

<ul>
  <li>
    <p><a href="https://cache.ruby-lang.org/pub/ruby/3.3/ruby-3.3.0.tar.gz">https://cache.ruby-lang.org/pub/ruby/3.3/ruby-3.3.0.tar.gz</a></p>

    <div><pre><code>SIZE: 22065999
SHA1: 1a7e56851bf29bda1183aca99b3b323c58e0187b
SHA256: 96518814d9832bece92a85415a819d4893b307db5921ae1f0f751a9a89a56b7d
SHA512: 26074009b501fc793d71a74e419f34a6033c9353433919ca74ba2d24a3de432dbb11fd92c2bc285f0e4d951a6d6c74bf5b69a2ab36200c8c26e871746d6e0fc6
</code></pre></div>
  </li>
  <li>
    <p><a href="https://cache.ruby-lang.org/pub/ruby/3.3/ruby-3.3.0.tar.xz">https://cache.ruby-lang.org/pub/ruby/3.3/ruby-3.3.0.tar.xz</a></p>

    <div><pre><code>SIZE: 16345456
SHA1: c8f68e1b0a114b90460a0b44165a3b2f540fa5b6
SHA256: 676b65a36e637e90f982b57b059189b3276b9045034dcd186a7e9078847b975b
SHA512: 7959c5753bfa0bfc4d6d74060869aabbe9815c1c97930659da11b917ee0803ddbbd80e869e00c48b8694b4ba48709c3b6493fd045568e36e902616c35ababf01
</code></pre></div>
  </li>
  <li>
    <p><a href="https://cache.ruby-lang.org/pub/ruby/3.3/ruby-3.3.0.zip">https://cache.ruby-lang.org/pub/ruby/3.3/ruby-3.3.0.zip</a></p>

    <div><pre><code>SIZE: 26935108
SHA1: a433eef1d7f96daeaf3b4cb842d0ed2dd82e7dc1
SHA256: 0e6563f679dd3694732eb3addf9de681c67b584602ac574376b60e7a509d2cd8
SHA512: a94a85937a14b217c1f4b90d24185289ed4aee79239c4f3eecf8034d3fd34e65ee8d66869473857ed153067188adc9b70c0471e4ebe842c9f98ef60c34090450
</code></pre></div>
  </li>
</ul>

<h2>What is Ruby</h2>

<p>Ruby was first developed by Matz (Yukihiro Matsumoto) in 1993,
and is now developed as Open Source. It runs on multiple platforms
and is used all over the world especially for web development.</p>

  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Constellations are younger than continents (206 pts)]]></title>
            <link>https://www.lesswrong.com/posts/YMakfmwZsoLdXAZhb/constellations-are-younger-than-continents</link>
            <guid>38760131</guid>
            <pubDate>Mon, 25 Dec 2023 05:39:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.lesswrong.com/posts/YMakfmwZsoLdXAZhb/constellations-are-younger-than-continents">https://www.lesswrong.com/posts/YMakfmwZsoLdXAZhb/constellations-are-younger-than-continents</a>, See on <a href="https://news.ycombinator.com/item?id=38760131">Hacker News</a></p>
Couldn't get https://www.lesswrong.com/posts/YMakfmwZsoLdXAZhb/constellations-are-younger-than-continents: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Ask HN: How do I train a custom LLM/ChatGPT on my own documents in Dec 2023? (574 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=38759877</link>
            <guid>38759877</guid>
            <pubDate>Mon, 25 Dec 2023 04:42:46 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=38759877">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="38760098"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760098" href="https://news.ycombinator.com/vote?id=38760098&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>You don't train on documents. There are many startups claiming that but they are deliberately using a misleading term because they know that's what people are searching for.<p>You still do RAG. Llamaindex is still the best option that I know of. Most of the startups that have working products are likely using llamaindex. All of the ones that say they are training on documents are actually using RAG.</p><p>Test it out. If it really and truly doesn't work, search for a script that creates question and answer pairs automatically with gpt-4. Then try using that for qLoRA. I have never heard of anyone successfully using that for a private document knowledgebase though. Only for skills like math, reasoning, Python, etc. I think the issue is that you need a LOT of data and it needs to repeat concepts or any facts you need to learn many, many times in different supporting ways.</p><p>What absolutely does not work is trying to just feed a set of documents into fine tuning. I personally have proven that dozens of times because I had a client who is determined to do it. He has been mislead.</p><p>What it will do is learn the patterns that are in those documents.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760251"><td></td></tr>
                <tr id="38760512"><td></td></tr>
            <tr id="38760260"><td></td></tr>
                  <tr id="38760189"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760189" href="https://news.ycombinator.com/vote?id=38760189&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>To sing the praises of Bedrock again, it does have continuous pre-training as well as RAG “knowledge bases”.  The former is based on JSON fragments and the RAG stuff is PDFs and other document formats.<p>With regards to its efficacy, I haven’t gone to production with it yet but I was reasonably impressed.</p><p>I uploaded 100 legal case documents to Bedrock via Claude and could push it pretty hard asking about the various cases and for situations across the knowledge base.</p><p>It did feel like it broke down and got confused at a certain point of complexity of questioning, but I still think it’s already useful as a “copilot” or search engine and surely it will only improve over time.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760632"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760632" href="https://news.ycombinator.com/vote?id=38760632&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>I forgot about the continuous pre-training thing. How long and how much did they cost on Bedrock?<p>I had tried to suggest continuous pre-training to my client but it seemed expensive and when I mentioned that  he lost interest and just kept wanting me to do fine tuning.</p><p>Also to clarify, did you do the continuous pre-training or RAG? And did you compare the efficacy of one or the other or both?
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760652"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38760652" href="https://news.ycombinator.com/vote?id=38760652&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>I used the RAG knowledge bases for most of my testing described above.<p>I got a toy demo up and running with continuous pre-training but haven’t evaluated it unfortunately.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        <tr id="38760126"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760126" href="https://news.ycombinator.com/vote?id=38760126&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>Another question, which one is preferred, LlamaIndex or Langchain, for RAG? Thanks in advance for your insights.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760430"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760430" href="https://news.ycombinator.com/vote?id=38760430&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>You basically don't use langchain for anything besides 30 minute demos that you copied from someone else's github. It has a completely spaghettified API, is not performant, and forces you into excessive mental contortions to reason about otherwise simple tasks.<p>LlamaIndex is pretty good.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38760444"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760444" href="https://news.ycombinator.com/vote?id=38760444&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>LlamaIndex is mainly focused on RAG. LangChain does a ton of other stuff too. I'd focus on LlamaIndex first.</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38760121"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760121" href="https://news.ycombinator.com/vote?id=38760121&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>Are there public examples of working products using RAG, compared with fine-tuning or training from scratch?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760393"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760393" href="https://news.ycombinator.com/vote?id=38760393&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>The OpenAI assistants API is an implementation of a RAG pipeline. It performs both RAG on any documents you upload, and on any conversation you have with it that exceeds the context.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760282"><td></td></tr>
                  <tr id="38760142"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760142" href="https://news.ycombinator.com/vote?id=38760142&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>Well said.
The problem is, there are way too many alternatives. Any idea how llamaindex's ingestion engine compares to unstructured.io? ( Which is used in langchain)</span></p></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38760081"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760081" href="https://news.ycombinator.com/vote?id=38760081&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>AWS Bedrock is fairly easy.  You can do it in 5 or 6 clicks.<p>You have to upload your documents to S3, create a “Knowledge Base” then sync your documents into a vector database like OpenSearch or PineCone.  You are then good to go via their playground or the AWS API.</p><p>I made a video here describing the process, check around 14 minutes in:</p><p><a href="https://ensembleanalytics.io/blog/introducing-bedrock-knowledge-bases" rel="nofollow noreferrer">https://ensembleanalytics.io/blog/introducing-bedrock-knowle...</a></p><p>Bedrock is a decent product I think.  All of the models in one place (apart from the big dogs from OpenAI) and a common API across them.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760325"><td></td></tr>
                <tr id="38760370"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760370" href="https://news.ycombinator.com/vote?id=38760370&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>The documents are encoded as vectors and stored in a database, so I suspect it would be effectively unlimited.  You would just pay for storage and compute.<p>AWS OpenSearch has fairly good integration so you could look up costs for that.  It’s not the cheapest AWS service to run and not exactly serverless as you pay by the hour.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38760351"><td></td></tr>
                <tr id="38760357"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38760357" href="https://news.ycombinator.com/vote?id=38760357&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>I’m sorry, I don’t understand those limits. It uses a lot of unfamiliar terms like “batch inference” and “modality”. I just want a nice UI that I can give my hard-drive to and then ask it questions.</span></p></div></td></tr>
        </tbody></table></td></tr>
                                        <tr id="38760618"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760618" href="https://news.ycombinator.com/vote?id=38760618&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>A go-to method is to ingest different chunksizes based on the document hierarchy &amp; then use langchain with a bunch of retrievers depending on the doc type.<p>Then create an index about the metadata of each doc. So that you can ask the RAGbot what all it can answer about.</p><p>Another way to ensure it stays on-domain is to generate synthetic questions &amp; check for similarity against user queries. There's a whole rabbit hole of query decomposition to avoid straying off topic as well.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38760083"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760083" href="https://news.ycombinator.com/vote?id=38760083&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>I haven't personally tried this for anything serious yet, but to get the thread started:<p>Cheshire Cat [0] looks promising. It's a framework for building AI assistants by providing it with documents that it stores as "memories" that can be retrieved later. I'm not sure how well it works yet, but it has an active community on Discord and seems to be developing rapidly.</p><p>The main perk over the cloud options is that you can point it at any language model, including fully local—my local install pointed at my local Ollama running Mistral.</p><p>[0] <a href="https://github.com/cheshire-cat-ai/core">https://github.com/cheshire-cat-ai/core</a>
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760116"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760116" href="https://news.ycombinator.com/vote?id=38760116&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>But that's not training. That's RAG. They seem to be using qdrant which I believe is a vector store.</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760335"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760335" href="https://news.ycombinator.com/vote?id=38760335&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>They've updated the question to clarify that RAG counts, and as many have noted, properly "training" on a set of documents isn't really a thing.</span></p></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="38760676"><td></td></tr>
            <tr id="38760275"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760275" href="https://news.ycombinator.com/vote?id=38760275&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>Slightly off topic but is there recommended advice on how to tune / train not for document retrieval but for consistent JSON output with specific enums?<p>i.e given a text, always return back a certain set of fields. For some keys here is the possible set of enums etc. One shot prompting does work but curious how others approach this if you have training data on hand.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760434"><td></td></tr>
            <tr id="38760388"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760388" href="https://news.ycombinator.com/vote?id=38760388&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>You want grammars to restrict the output, search for "gbnf grammar". That and combined with a good prompt with an example, also check out outlines.dev</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760453"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760453" href="https://news.ycombinator.com/vote?id=38760453&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>For OpenAI, use their functions schema mechanism.<p>Aside from that, take a look at llama.cpp grammars.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                  <tr id="38760543"><td></td></tr>
            <tr id="38760123"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760123" href="https://news.ycombinator.com/vote?id=38760123&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>GPT-4 Turbo has a 128K (~300 pages) context window, which probably handles a lot of use cases which might have previously needed extra training/refinement.</span></p></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760415"><td></td></tr>
            <tr id="38760377"><td></td></tr>
            <tr id="38760346"><td></td></tr>
            <tr id="38760112"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760112" href="https://news.ycombinator.com/vote?id=38760112&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>Train on your own documents or analyze your own documents for answers? Very different things.<p>For the first (fine tuning) follow “AI Jason” on YouTube. He has some great tutorials.</p><p>For the second (RAG or similar), fire up a cloud VM with GPUs or use Ollama locally and read through the LlamaIndex docs on how to build a RAG pipeline.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760132"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760132" href="https://news.ycombinator.com/vote?id=38760132&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><br><div>
                  <p><span>Would you kindly elaborate a little bit the difference between training on own documents vs analyzing documents for answers?</span></p></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760466"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760466" href="https://news.ycombinator.com/vote?id=38760466&amp;how=up&amp;goto=item%3Fid%3D38759877"></a></center>    </td><td><p><span>The word "training" implies creating a new model by fine-tuning an existing model on top of new documents.<p>As several other comments in this thread have already indicated: this is almost always the wrong direction. Which is confusing because it's the direction everyone always assumes they should go in at first.</p><p>The approaches that does work is surprisingly simple: take the user's question, search for snippets of your documents that appear to be about that question, then paste all of those snippets into the prompt along with the user's question and see what answer you get.</p><p>This is known as RAG: Retrieval Augmented Generation. It's a very powerful approach.
              </p></span></p></td></tr>
        </tbody></table></td></tr>
                        </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Reforming Unix (137 pts)]]></title>
            <link>https://github.com/Ericson2314/baccumulation/blob/main/reforming-unix.adoc</link>
            <guid>38759875</guid>
            <pubDate>Mon, 25 Dec 2023 04:42:11 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/Ericson2314/baccumulation/blob/main/reforming-unix.adoc">https://github.com/Ericson2314/baccumulation/blob/main/reforming-unix.adoc</a>, See on <a href="https://news.ycombinator.com/item?id=38759875">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <nav aria-label="Global">
            <ul>
                <li>
      
      <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Actions&quot;,&quot;label&quot;:&quot;ref_cta:Actions;&quot;}" href="https://github.com/features/actions">
      
      <div>
        <p>Actions</p><p>
        Automate any workflow
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Packages&quot;,&quot;label&quot;:&quot;ref_cta:Packages;&quot;}" href="https://github.com/features/packages">
      
      <div>
        <p>Packages</p><p>
        Host and manage packages
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Security&quot;,&quot;label&quot;:&quot;ref_cta:Security;&quot;}" href="https://github.com/features/security">
      
      <div>
        <p>Security</p><p>
        Find and fix vulnerabilities
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Codespaces&quot;,&quot;label&quot;:&quot;ref_cta:Codespaces;&quot;}" href="https://github.com/features/codespaces">
      
      <div>
        <p>Codespaces</p><p>
        Instant dev environments
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Copilot&quot;,&quot;label&quot;:&quot;ref_cta:Copilot;&quot;}" href="https://github.com/features/copilot">
      
      <div>
        <p>Copilot</p><p>
        Write better code with AI
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Code review&quot;,&quot;label&quot;:&quot;ref_cta:Code review;&quot;}" href="https://github.com/features/code-review">
      
      <div>
        <p>Code review</p><p>
        Manage code changes
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Issues&quot;,&quot;label&quot;:&quot;ref_cta:Issues;&quot;}" href="https://github.com/features/issues">
      
      <div>
        <p>Issues</p><p>
        Plan and track work
      </p></div>

    
</a></li>

                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Product&quot;,&quot;action&quot;:&quot;click to go to Discussions&quot;,&quot;label&quot;:&quot;ref_cta:Discussions;&quot;}" href="https://github.com/features/discussions">
      
      <div>
        <p>Discussions</p><p>
        Collaborate outside of code
      </p></div>

    
</a></li>

            </ul>
          </div>
</li>


                <li>
      
      
</li>


                <li>
      
      <div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to GitHub Sponsors&quot;,&quot;label&quot;:&quot;ref_cta:GitHub Sponsors;&quot;}" href="https://github.com/sponsors">
      
      <div>
        <p>GitHub Sponsors</p><p>
        Fund open source developers
      </p></div>

    
</a></li>

            </ul>
          </div>
          <div>
            <ul>
                <li>
  <a data-analytics-event="{&quot;category&quot;:&quot;Header dropdown (logged out), Open Source&quot;,&quot;action&quot;:&quot;click to go to The ReadME Project&quot;,&quot;label&quot;:&quot;ref_cta:The ReadME Project;&quot;}" href="https://github.com/readme">
      
      <div>
        <p>The ReadME Project</p><p>
        GitHub community articles
      </p></div>

    
</a></li>

            </ul>
          </div>
          
      </div>
</li>


                <li>
    <a data-analytics-event="{&quot;category&quot;:&quot;Header menu top item (logged out)&quot;,&quot;action&quot;:&quot;click to go to Pricing&quot;,&quot;label&quot;:&quot;ref_cta:Pricing;&quot;}" href="https://github.com/pricing">Pricing</a>
</li>

            </ul>
          </nav>

        <div>
                


<qbsearch-input data-scope="repo:Ericson2314/baccumulation" data-custom-scopes-path="/search/custom_scopes" data-delete-custom-scopes-csrf="H7nO_qQgVfq--GkIjqbJOZy8lXFGXTAoY-bZEhT-KSXpuqLXEB446eZBaTWyyETQ81SaA3bIp29pbFMFMWVZRQ" data-max-custom-scopes="10" data-header-redesign-enabled="false" data-initial-value="" data-blackbird-suggestions-path="/search/suggestions" data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations" data-current-repository="Ericson2314/baccumulation" data-current-org="" data-current-owner="Ericson2314" data-logged-in="false" data-copilot-chat-enabled="false" data-blackbird-indexed-repo-csrf="<esi:include src=&quot;/_esi/rails_csrf_token_form_hidden?r=JIzIh8dk57DHD8KnPgWgEUhKLP7jSvw9pFli%2FUKyWYeWYIUVxY6xkaQmUBpclANsF%2F8bIZpQ9iai0jaKBAgnKUR%2F1csjZna9r02Hru%2FZvyMbMznfsWHo4gPNf5EmKigK1blJS5wx3J%2FM6EWEhjv99vwsAvJTZDS%2BszL6%2F3NO3neoWI8Pphyj4QY7H1HqMRuAFZ8Gb1%2F%2FULchyo3o%2FrhK2yf6Jw8XWttZ1dby1CijDSgdEQmj65cT0VRgMngCVVziHtlhXhnc0aA0onFwa2t1XG3uPNl%2FpYL%2Be08NhsNA0IY%2BRyQNniC2OUaap1QKHYM5M7%2FxAWeM2EWNrWNdl8y3gNk6EFU2VCMS4McM6pZOEbnAYxXs9htPdNv5e9YB1I9ZJPsJQzqUC5lAdwSylx1b%2FYYjDWwAQzT2wyTxn5W1oZHMp%2FgOoYtEzV1RRGw7QbvipSxmccrYvaXxztEjFwdf%2BIWz2SdwJMz3E4ihBmsagpGNpIT7%2Fu29g2xEUdcjC7N4qPlT0GmqL3zihxsC%2B8rN4VD8Q2AmR139gGFDo9EsbVPx9bic9UyH2r4edjQ12rh8gj3rsH9RRp5zMvk2TSAmVX7s--jDD%2F5I4XJtckmREK--uQSYqdoLVrjULkLtkk%2FQpQ%3D%3D&quot; />">
  <div data-modal-dialog-overlay="" data-action="click:qbsearch-input#searchInputContainerClicked">
  <modal-dialog data-action="close:qbsearch-input#handleClose cancel:qbsearch-input#handleClose" data-target="qbsearch-input.searchSuggestionsDialog" role="dialog" id="search-suggestions-dialog" aria-modal="true" aria-labelledby="search-suggestions-dialog-header" data-view-component="true">
      <h2 id="search-suggestions-dialog-header">Search code, repositories, users, issues, pull requests...</h2>
    
</modal-dialog></div>
  
  <div>
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="qbsearch-input.feedbackDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="feedback-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="feedback-dialog-title" aria-describedby="feedback-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="feedback-dialog-title">
        Provide feedback
      </h2>
    </p>
    
  </div>
      
      
</modal-dialog></div>

    <custom-scopes data-target="qbsearch-input.customScopesManager">
    
<div data-modal-dialog-overlay="">
  <modal-dialog data-target="custom-scopes.customScopesModalDialog" data-action="close:qbsearch-input#handleDialogClose cancel:qbsearch-input#handleDialogClose" role="dialog" id="custom-scopes-dialog" aria-modal="true" aria-disabled="true" aria-labelledby="custom-scopes-dialog-title" aria-describedby="custom-scopes-dialog-description" data-view-component="true">
    <div data-view-component="true">
    <p>
      <h2 id="custom-scopes-dialog-title">
        Saved searches
      </h2>
        <h2 id="custom-scopes-dialog-description">Use saved searches to filter your results more quickly</h2>
    </p>
    
  </div>
      
      
</modal-dialog></div>
    </custom-scopes>
  </div>
</qbsearch-input>

            <p><a href="https://github.com/signup?ref_cta=Sign+up&amp;ref_loc=header+logged+out&amp;ref_page=%2F%3Cuser-name%3E%2F%3Crepo-name%3E%2Fblob%2Fshow&amp;source=header-repo&amp;source_repo=Ericson2314%2Fbaccumulation" data-hydro-click="{&quot;event_type&quot;:&quot;authentication.click&quot;,&quot;payload&quot;:{&quot;location_in_page&quot;:&quot;site header menu&quot;,&quot;repository_id&quot;:null,&quot;auth_type&quot;:&quot;SIGN_UP&quot;,&quot;originating_url&quot;:&quot;https://github.com/Ericson2314/baccumulation/blob/main/reforming-unix.adoc&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="0116b341db17442baf960210460ce42324080d22f1c6829b7ee70543f9951cb1" data-analytics-event="{&quot;category&quot;:&quot;Sign up&quot;,&quot;action&quot;:&quot;click to sign up for account&quot;,&quot;label&quot;:&quot;ref_page:/<user-name>/<repo-name>/blob/show;ref_cta:Sign up;ref_loc:header logged out&quot;}">
              Sign up
            </a>
        </p></div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The Star – Arthur C. Clarke (1967) [pdf] (282 pts)]]></title>
            <link>https://sites.uni.edu/morgans/astro/course/TheStar.pdf</link>
            <guid>38759297</guid>
            <pubDate>Mon, 25 Dec 2023 03:08:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sites.uni.edu/morgans/astro/course/TheStar.pdf">https://sites.uni.edu/morgans/astro/course/TheStar.pdf</a>, See on <a href="https://news.ycombinator.com/item?id=38759297">Hacker News</a></p>
&lt;Not HTML&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[GTA 5 source code leaks online (274 pts)]]></title>
            <link>https://www.sportskeeda.com/gta/news-gta-5-source-code-leaks-online-giving-rockstar-huge-blow-christmas-report</link>
            <guid>38759257</guid>
            <pubDate>Mon, 25 Dec 2023 02:58:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.sportskeeda.com/gta/news-gta-5-source-code-leaks-online-giving-rockstar-huge-blow-christmas-report">https://www.sportskeeda.com/gta/news-gta-5-source-code-leaks-online-giving-rockstar-huge-blow-christmas-report</a>, See on <a href="https://news.ycombinator.com/item?id=38759257">Hacker News</a></p>
<div id="readability-page-1" class="page"><p>After Insomniac’s leak incident, it seems that GTA 5 developer Rockstar Games has been targeted next by leakers. According to a report by popular YouTuber SKizzle on X earlier today, the entire source code of Grand Theft Auto 5 has been leaked publicly. The leak also revealed data related to Bully 2 and the next Grand Theft Auto title codenamed Project Americas.</p><p>As can be seen in the aforementioned post, @SKizzleAXE even shared a screenshot of the leaked GTA 5 source code, confirming the legitimacy of the report. According to the details, Rockstar was also working on a supposed sequel to the highly acclaimed Bully video game.</p><p>Another report on X claims that the source code has been leaked in a Discord server, the name of which has not been disclosed to avoid spreading the data.</p><p>A fan who goes by the name "Agent" also shared their part of the GTA 5 source code leaks and some of the images of Rockstar Games’ RAGE engine on X. However, their post has now been taken down.</p><p>The source code of Grand Theft Auto 5 was supposedly leaked last year alongside the leaked footage. However, it was never made public until now. This is a huge data loss for the developer and could have implications for both current players as well as future players of the series.</p><p>Popular online reporter Gaming Detective (@that1detectiv3) also emphasized the potential impact of the leaked source code, which may even result in delays for the upcoming <a href="https://www.sportskeeda.com/gta/news-gta-6-fans-believe-actress-ana-esposito-lucia-make-side-by-side-comparisons-1" target="_blank" rel="noopener noreferrer" data-is-sponsored="false">Grand Theft Auto 6 by Rockstar Games</a>.</p><p>Rockstar Games hasn’t addressed the leak at the time of writing this article. Fans are requested to appreciate the hard work the developers put into their video games and avoid spreading the leaked source code further.</p><p>With all the ongoing <a href="https://www.sportskeeda.com/gta/news-after-florida-joker-another-man-claims-gta-6-trailer-used-likeness" target="_blank" rel="noopener noreferrer" data-is-sponsored="false">GTA 6 controversy</a> and the Insomniac data breach, it seems like the worst holiday season for developers as well as gamers around the globe.</p><div id="poll">
<p>Poll : Do you think Rockstar will ever release Bully 2?</p>

<p id="poll-count">
39 votes
</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Post-apocalyptic life in American health care (185 pts)]]></title>
            <link>https://metarationality.com/post-apocalyptic-health-care</link>
            <guid>38759142</guid>
            <pubDate>Mon, 25 Dec 2023 02:35:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://metarationality.com/post-apocalyptic-health-care">https://metarationality.com/post-apocalyptic-health-care</a>, See on <a href="https://news.ycombinator.com/item?id=38759142">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        

  

  

  

  <article id="article">

    
    
    <p>
TL;DR:
</p>
<ul>
<li>Much of my time for the past year has been spent navigating the medical maze on behalf of my mother, who has dementia.</li>
<li>I observe that American health care organizations can no longer operate systematically, so participants are forced to act in the communal mode, as if in the pre-modern world.</li>
<li>Health care is one leading edge of a general breakdown in systematicity—while, at the same time, employing sophisticated systematic technologies.</li>
<li>Communal-mode interpersonal skills may become increasingly important to life success—not less, as techies hope.</li>
<li>For complex health care problems, I recommend hiring a consultant to provide administrative (not medical!) guidance.</li>
</ul>
<p><em>Epistemic status</em>: impressionistic blogging during a dazed lull between an oncologist and an MRI. No attempt to validate with statistical data or knowledgeable sources.</p>
<!--break-->
<h2 id="system">No system</h2>
<p>My mother’s mild dementia began accelerating rapidly a year ago. I’ve been picking up pieces of her life as she drops them. That has grown from a part-time job to a full-time job. In the past month, as she’s developed unrelated serious medical issues, it’s become a way-more-than-full-time job.</p>
<p>The most time-consuming aspect has been coordinating the dozens of different institutions involved in her care. I had read that the biggest failing of the American health care system is its fragmentation; I’ve now spent hundreds of hours observing that first-hand.</p>
<p>There is, in fact, no system. There are systems, but mostly they don’t talk to each other. I have to do that.</p>
<p>It’s been fascinating watching people working in hospitals and medical offices trying and failing to communicate with each other. I’ll tell one story, and then explain a pattern. This is the most dramatic instance I’ve encountered so far, but is typical in form.</p>
<p>The short version is that at least seven experts spent roughly ten full-time days trying to find out a basic fact about my mother’s insurance, and finally failed. Meanwhile, many thousands of dollars were wasted on unnecessary hospitalization.</p>
<p>This is a stark example of <a href="http://slatestarcodex.com/2017/02/09/considerations-on-cost-disease/">medical cost disease</a>, but the post is not about that. It’s about how institutions fail to talk to each other—and what that implies about our future.</p>
<p>(If the story gets boring, you can <a href="#interface">skip ahead</a> to my interpretation of the pattern.)</p>
<p>My mother went into the hospital a month ago with severe pain in her hip. (It’s still undiagnosed.) After two days, she was medically ready for discharge from the hospital: whatever the pain was, it wasn’t one they could help with. Instead, she should be sent to a “skilled nursing facility” (SNF) where she’d get “physical therapy,” i.e.&nbsp;leg exercises.</p>
<p>For a SNF to agree to take her, they had to get confirmation from an insurance company that insurance would cover her stay. She has two kinds of health insurance, Medicare plus coverage through a private insurer (Anthem). Which would cover her? Or both, or neither?</p>
<p>SNFs have admissions officers, whose full-time job is to answer this question. Two different SNFs started working on the problem. I talked with the admissions people every day. Both claimed to be working on it more-or-less full-time. The hospital wanted to free up my mother’s bed, so their insurance person was also working on it.</p>
<p>Days passed. The hospital doctor on rounds said “Well, this is typical, especially with Anthem. It’s costing them several thousand dollars a day to keep her here, versus a few hundred dollars a day in a SNF, but it might take a week for them to figure out which local SNF they cover. Don’t worry, they’ll sort it out eventually.”</p>
<p>Meanwhile, I learned that Anthem and Medicare were confused about their relationship. (As far as I can tell, this was a coincidence and not the underlying problem, although I’m still not sure.) Medicare believed that my mother (who retired in 1997) is employed and therefore ineligible. Her Anthem coverage is through her former employer.</p>
<p>I talked with her ex-employer’s benefits person (whose full-time job is understanding insurance, pretty much). She looked into it and said she couldn’t understand what was going on. She called the company’s outside insurance consultant. He couldn’t understand what was going on. He called people he knew at Medicare and Anthem. He said that they couldn’t understand it either, but that multiple people in both organizations were working on straightening it out.</p>
<p>A week later, I called Medicare to verify that it worked. The surprisingly competent customer service person looked up my mother’s info and said: “This is really weird… I don’t know what’s going on… there was a record that said Anthem is primary. And then on November 16th, there’s a note that said it’s deleted, and Medicare is primary. But then there’s an update on the 18th that says Anthem is primary. But obviously since your mother is 84 she’s not employed, so Medicare should be primary… I’ll delete the record again…”</p>
<p>After three days of trying, one of the SNFs gave up. I talked to the admissions dude there. I’ll call him Paul. He was smart and friendly, and he was willing to explain:</p>
<blockquote>
<p>My full-time job for ten years has been understanding how to get insurance to pay us, and I have no idea how the system works. Even if I somehow learned how it works, it changes completely every year, and I would have to start over. But at most of the insurance companies I know people who can sometimes make things happen, so I call them up, and then they try to figure out how it works. But Anthem… I spent hours and hours on hold, and in phone trees, getting transferred from one department to another, and eventually back to where I started. The most clueful-sounding person I could find sent me to a web site that just says ‘This program is not implemented yet.’ Does ‘program’ mean software, or does it mean some project they haven’t got going?</p>
</blockquote>
<p>Hospitals are bad places that make you ill; you don’t want to spend any more time there than you have to. On day six, I said “if she doesn’t go to a SNF today, I’m taking her home—the risk of her dying there seems less now than the risk of her dying here.” That got results: the other SNF agreed to take her “on spec.” Their admissions person was reasonably confident that either Anthem or Medicare would pay, even though neither was willing to say either yes or no ahead of time.</p>
<p>The SNF called me to tell me they needed my mother’s records from the hospital. Well, what do you want <em>me</em> to do about that? We need you to call the hospital and ask them to fax us the records. “Fax”? Why not send clay tablets in wicker baskets on the back of a donkey?</p>
<h2 id="interface">No interface</h2>
<p>To ship a package by FedEx, you don’t need to call someone who knows someone who knows someone. You go to a web site, put in some numbers, it gives you back some numbers, you put them on the envelope, drop it in a box, and it appears at a farmhouse on an island in Lapland the next day.</p>
<p>If Amazon sends you the wrong type of cable adapter, you don’t have to call them up and try to act pathetic and virtuous in order to convince someone that you need and deserve a refund because your poor mother is so ill. You go to a web site and push a button.</p>
<p>FedEx and Amazon have <em>systematic interfaces</em>. They are transparent on the outside, and black boxes on the inside. You don’t have to know anything about how they operate in order to use them.</p>
<p>Health care organizations are—at best—the opposite. They may run on systems internally, but the interface is opaque. There’s no defined way to get them to do something.</p>
<p>This is not their fault.</p>
<h2 id="fault">No fault</h2>
<p>I was trying to get my mother into a SNF—but all I could do was talk to Paul, who couldn’t say yes or no. It wasn’t his fault. He was trying to talk to people at Anthem, who couldn’t say yes or no. Was that their fault?</p>
<p>Just speculating, I imagine they are supposed to apply 1600 pages of rules for what’s covered in what situation. And the rules are vague and conflicting and change constantly, and who can read 1600 pages of rules anyway? So eventually someone has to make up a yes-or-no answer on the basis of what seems more-or-less reasonable. Whoever it is could get blamed if someone higher up later decides that was “wrong” based on their interpretation of the rules, so it’s better to pass the buck.</p>
<p>Are the confused rules Anthem’s fault? I imagine that the 1600 pages try to reconcile federal, state, and local legislation, plus the rules of three federal regulatory agencies, nine state agencies, and fifteen local agencies. All those are vague and conflicting and constantly changing, but Anthem’s rule-writing department does their best. They call the agencies to try to find out what the regulations are supposed to mean, and they spend hours on hold, are transferred from one official to another and back, and eventually get directed to a .gov web site that says “program not implemented yet.” Then they make something up, and hope that when the government sues Anthem, they don’t get blamed for it personally.</p>
<p>I imagine people working in legislative offices and regulatory agencies find themselves in a similar position.</p>
<p>In this maze, even competent people with good intentions cannot act systematically. Their work depends on coordinating with other institutions that have no systematic interface.</p>
<h2 id="ruins">Traditional life in the ruins of systematicity</h2>
<p>It’s like one those post-apocalyptic science fiction novels whose characters hunt wild boars with spears in the ruins of a modern city. Surrounded by machines no one understands any longer, they have reverted to primitive technology.</p>
<p>Except it’s in reverse. Hospitals can still operate modern material technologies (like an MRI) just fine. It’s social technologies that have broken down and reverted to a medieval level.</p>
<p><a href="https://vividness.live/developing-ethical-social-and-cognitive-competence#systematic">Systematic social relationships</a> involve formally-defined roles and responsibilities. That is, “professionalism.” But across medical organizations, there are none. Who do you call at Anthem to find out if they’ll cover an out-of-state SNF stay? No one knows.</p>
<p>What do you do when systematicity breaks down? You revert to what I’ve described as the “<a href="https://vividness.live/developing-ethical-social-and-cognitive-competence#communal">communal mode</a>” or “<a href="https://meaningness.com/choiceless-mode">choiceless mode</a>.” That is, “pre-modern,” or “traditional” ways of being.</p>
<p>Working in a medical office is like living in a pre-modern town. It’s all about knowing someone who knows someone who knows someone who can get something done. Several times, I’ve taken my mother to a doctor who said something like: “She needs lymphedema treatment, and the only lymphedema clinic around here is booked months in advance, but I know someone there, and I think I can get her in next week.” Or, “The pathology report on this biopsy is only one sentence, and it’s unsigned. The hospital that faxed it to me doesn’t know who did it. I need details, so I called all the pathologists I know, and none of them admit to writing it, so we are going to need to do a new biopsy.”</p>
<p>But at the same time, each clinic <em>does</em> have an electronic patient records management system, which does work some of the time. And there <em>are</em> professional relationships with defined roles that operate effectively within the building.</p>
<p>I suspect increasing “patchiness” of systems may be typical of our post-systematic <a href="https://meaningness.com/atomized-mode">atomized era</a>. Understanding the medical case may help predict the texture of cultural and social life as atomization proceeds.</p>
<p>A central research topic in ethnomethodology is the relationship between formal rationality (such as an insurance company’s 1600 pages of unworkable rules) and “mere reasonableness,” which is what people mostly use to get a job done. The disjunction between electronic patient records and calling around town to try to find out who wrote a biopsy report that arrived by fax seems sufficiently extreme that it may produce a qualitatively new way of being.</p>
<p>I would like to ask:</p>
<ul>
<li>How does health care continue to function <em>at all</em>?</li>
<li>Can it <em>continue</em> to function at all?</li>
<li>How do people within the ex-system navigate a world that mashes up high-tech infrastructure that only sometimes works with pre-modern social relationships across organizations?</li>
<li>How do they understand this contrast? How do they cope personally?<sup id="fn_mark_1"><a href="#fn_1" title="I imagine for many it’s awful. “Communal” sounds “nice,” but most are in medicine because they want to help others, and they can’t get their jobs done when the system breaks down.">1</a></sup></li>
<li>What can we do about it?</li>
</ul>
<p>Maybe an ethnomethodological understanding of how health care organizations operate in practice could make the systems work incrementally better. Maybe an enlightened COO could incorporate the view that the systems and reality are only vaguely related. But… it may be impossible to improve individual organizations.</p>
<h2 id="fix">No local fix</h2>
<p>It’s obvious how to fix health care. Just make everything run systematically, like FedEx or Amazon. There are no technical or business obstacles to this. Anyone who understands IT and/or business can see how to do it.<sup id="fn_mark_2"><a href="#fn_2" title="Step 1: Throw away the ubiquitous fax machines. Sink or swim. Hire donkeys if necessary.">2</a></sup></p>
<p>Back-of-envelope calculations say a working health care system would deliver dramatically better quality at 10-20% of the current cost.</p>
<p>Health care is notionally a profit-driven free market. This looks like an easy opportunity to make trillions of dollars by making the world better for everyone. Why doesn’t someone do that?</p>
<p>It appears that 73% of the labor cost of a health care organization is spent on trying to communicate with other health care organizations that have no defined interface.<sup id="fn_mark_3"><a href="#fn_3" title="The number 73% is my dazed estimate based on informal observation and analysis conducted in doctors’ examination rooms.">3</a></sup> Patrick Collison <a href="https://twitter.com/patrickc/status/937514552308113408">has suggested</a> calling this pattern “<a href="https://en.wikipedia.org/wiki/X-inefficiency">Leibenstein’s Inefficiency</a> Disease,” by analogy to <a href="https://en.wikipedia.org/wiki/Baumol%27s_cost_disease">Baumol’s Cost Disease</a>. An organization can’t improve the 73% by much on its own; that inefficiency is forced on it by the environment it operates in.</p>
<p>Instead, organizations in sectors afflicted with inefficiency disease try to push their own administrative work outside. Both out into other organizations, and—more visibly—they force it onto you, the customer. It’s <em>your</em> job to fill out forms they could have done more efficiently themselves. When they screw up, <em>you</em> have to try to fix it. This negative externality could be called “paperwork pollution,” by analogy with negative externalities of smokestack industries.</p>
<p>Standardizing an interface between health care providers and insurance companies would be a huge win. No matter how badly designed, it would be better than the current mess, and save several percent of US GDP. That would need cooperation from most of the major players in the industry. Other industries manage that routinely: machine screws and futures contracts come in standard sizes, without which manufacturing and finance would be as inefficient as health care. The need for a standard insurer/provider interface is obvious. Since it’s lacking, I imagine some powerful group extracts enormous rents from the inefficiency. I know nothing about that, so I won’t speculate.</p>
<h2 id="village">You will need village life skills</h2>
<p>Perhaps American health care is a bellwether model for the future of other aspects of life in the post-systemic world? A pattern that occurs in many other sectors: as systems fail, people fall back on innate communal logic. Politics and the media are obvious current examples.</p>
<p>The hope of the tech industry is that “<a href="https://a16z.com/2016/08/20/why-software-is-eating-the-world/">software is eating the world</a>,” as Marc Andreessen put it in 2011. That is, we’re FedEx-izing every aspect of the economy: making it radically more efficient and reliable, using well-designed IT-supported systematic business processes.</p>
<p>In that world, systematic-mode skills (especially programming and finance) will be ever more valuable. Hooray! We will create a utopia for all, in which (for once) those of us with high-functioning autism get properly rewarded.</p>
<p>In 2017, software is conspicuously not eating the cost-disease economic sectors: health care, education, housing, government. They are being eaten—by communal mode tribalism.</p>
<p>In 2017, tribalists are threatening to eat the tech industry.</p>
<p>There’s a possible future in which all systems fall to tribalism. Then everyone dies, because <a href="https://meaningness.com/counterculture-war">tribal signaling</a> does not deliver electric power. In another possible future, we create a meta-systematic society that addresses the inherent defects of both tribalism and systematicity. (I discussed both these possibilities tangentially in “<a href="https://metarationality.com/stem-fluidity-bridge">A bridge to meta-rationality vs.&nbsp;civilizational collapse</a>.” I hope to write more soon.)</p>
<p>In the short run, more likely, current trends will continue. Additional aspects of life will increasingly revert to the communal mode, but some critical systems will fend off the barbarians and limp along well enough to keep us alive.</p>
<p>In that world, people skills will be ever more valuable. Surviving and thriving in 2037 may depend mainly on who you can charm, who you know, and whether they owe you favors.</p>
<p>Techies take note.</p>
<p>You might consider working in a medical office, to get some practice.</p>
<h2 id="consultant">Hire a consultant</h2>
<p>Some more-serious, practical advice:</p>
<p>If you find yourself in a situation like mine, hire an independent health care administration consultant. Their job is to know administrative people inside organizations who can get stuff done. They also know what <em>can</em> be gotten done, which is unknowable to the public. They can also deal with inscrutable paperwork and organizational screw-ups.</p>
<p>Hiring someone became imperative for me when coordinating my mother’s care got to be a way-more-than-full-time job. (In retrospect, I wish I had done that months earlier.)</p>
<p>It could also be worthwhile in less critical cases, if no one in the family can take enough time off from work, or in which you’d simply rather pay someone else to clean up after a hospital’s paperwork pollution.</p>
<p>This role has developed only recently, as systems have broken down. There’s not yet a standardized term; “health care advocate” is one among several.</p>
<p>Mine specializes in gerontology and dementia. Others specialize in other disease areas; or in other aspects of the administrative nightmare, such as sorting out bogus hospital bills, which frequently include fraudulent additions.</p>
<p>They are not inexpensive (mine charges $150/hour), so not an option for everyone.</p>
<p>There are good and not-so-good advocates. I spoke with several before hiring one. Some were clearly clueless; the one I hired last month has seemed consistently competent.</p>
<p>Since they recommend particular providers, there is an inherent principal-agent problem. Ask if they get any compensation from services they recommend. Take their recommendations with a grain of salt in any case.</p>

    

<nav id="next-page"></nav>



    
      
    

    




  
  
  </article>

  


  

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[HNInternal: Tell HN: Merry Christmas (629 pts)]]></title>
            <link>https://news.ycombinator.com/item?id=38759092</link>
            <guid>38759092</guid>
            <pubDate>Mon, 25 Dec 2023 02:28:41 GMT</pubDate>
            <description><![CDATA[<p>See on <a href="https://news.ycombinator.com/item?id=38759092">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
            <tbody><tr id="38760402"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760402" href="https://news.ycombinator.com/vote?id=38760402&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=culebron21">culebron21</a> <span title="2023-12-25T06:46:23"><a href="https://news.ycombinator.com/item?id=38760402">12 minutes ago</a></span> <span id="unv_38760402"></span>          <span>
             |  [–]<span></span>          </span>
                  </span></p></div><p><span>In ex USSR we celebrate New Year. So the first several years of remote work with Western folks, I was always surprised to see no colleagues some day in December. Only later in the evening, I would remember they had Christmas that day. :)<p>Merry Christmas!
              </p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760402&amp;goto=item%3Fid%3D38759092%2338760402" rel="nofollow">reply</a></u>
                  </span>
      </p></div></span></p></td></tr>
        </tbody></table></td></tr>
                <tr id="38760424"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760424" href="https://news.ycombinator.com/vote?id=38760424&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=cperciva">cperciva</a> <span title="2023-12-25T06:50:42"><a href="https://news.ycombinator.com/item?id=38760424">8 minutes ago</a></span> <span id="unv_38760424"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Don't forget Old New Year!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760424&amp;goto=item%3Fid%3D38759092%2338760424" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38760441"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760441" href="https://news.ycombinator.com/vote?id=38760441&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=aunty_helen">aunty_helen</a> <span title="2023-12-25T06:53:15"><a href="https://news.ycombinator.com/item?id=38760441">5 minutes ago</a></span> <span id="unv_38760441"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas everyone. I hope you get some time to reflect on the year that’s been, the crazy change we’re going through and the great community we all work to better.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760441&amp;goto=item%3Fid%3D38759092%2338760441" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760428"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760428" href="https://news.ycombinator.com/vote?id=38760428&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=riffruff24">riffruff24</a> <span title="2023-12-25T06:51:06"><a href="https://news.ycombinator.com/item?id=38760428">7 minutes ago</a></span> <span id="unv_38760428"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><p><span>Merry x-mas, hn.<p>Some of you might not celebrate it but that just means I'll have to eat your share of cakes \(^_^)/
              </p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760428&amp;goto=item%3Fid%3D38759092%2338760428" rel="nofollow">reply</a></u>
                  </span>
      </p></div></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38760446"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760446" href="https://news.ycombinator.com/vote?id=38760446&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=docdeek">docdeek</a> <span title="2023-12-25T06:54:06"><a href="https://news.ycombinator.com/item?id=38760446">4 minutes ago</a></span> <span id="unv_38760446"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760446&amp;goto=item%3Fid%3D38759092%2338760446" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760426"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760426" href="https://news.ycombinator.com/vote?id=38760426&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=batrat">batrat</a> <span title="2023-12-25T06:50:53"><a href="https://news.ycombinator.com/item?id=38760426">7 minutes ago</a></span> <span id="unv_38760426"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><p><span>Merry Christmas!<p>I'm on call and already had my first intervention. How's your Christmas going?
              </p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760426&amp;goto=item%3Fid%3D38759092%2338760426" rel="nofollow">reply</a></u>
                  </span>
      </p></div></span></p></td></tr>
        </tbody></table></td></tr>
            <tr id="38760208"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760208" href="https://news.ycombinator.com/vote?id=38760208&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=linsomniac">linsomniac</a> <span title="2023-12-25T05:51:59"><a href="https://news.ycombinator.com/item?id=38760208">1 hour ago</a></span> <span id="unv_38760208"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>May your pagers be silent.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760208&amp;goto=item%3Fid%3D38759092%2338760208" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760416"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760416" href="https://news.ycombinator.com/vote?id=38760416&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=kyriakos">kyriakos</a> <span title="2023-12-25T06:49:29"><a href="https://news.ycombinator.com/item?id=38760416">9 minutes ago</a></span> <span id="unv_38760416"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Pagers?</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760416&amp;goto=item%3Fid%3D38759092%2338760416" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760439"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760439" href="https://news.ycombinator.com/vote?id=38760439&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=locusofself">locusofself</a> <span title="2023-12-25T06:53:05"><a href="https://news.ycombinator.com/item?id=38760439">5 minutes ago</a></span> <span id="unv_38760439"></span>          <span>
             |  |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>I'm not sure how many companies still use "pagers" aka "beepers", but this person is talking about the device you carry that would alert you when there is a problem with one of your systems. <a href="https://www.google.com/search?sca_esv=593535494&amp;q=pager&amp;tbm=isch&amp;source=lnms&amp;sa=X&amp;ved=2ahUKEwjB4vmfgKqDAxWkMDQIHfqODaYQ0pQJegQIDBAB&amp;biw=1440&amp;bih=754&amp;dpr=2" rel="nofollow noreferrer">https://www.google.com/search?sca_esv=593535494&amp;q=pager&amp;tbm=...</a></span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760439&amp;goto=item%3Fid%3D38759092%2338760439" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760449"><td><table>  <tbody><tr>    <td indent="3"><img src="https://news.ycombinator.com/s.gif" height="1" width="120"></td><td>
      <center><a id="up_38760449" href="https://news.ycombinator.com/vote?id=38760449&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=kyriakos">kyriakos</a> <span title="2023-12-25T06:54:56"><a href="https://news.ycombinator.com/item?id=38760449">3 minutes ago</a></span> <span id="unv_38760449"></span>          <span>
             |  |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Yes I know what a pager is but was surprised the word is still in use.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760449&amp;goto=item%3Fid%3D38759092%2338760449" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                  <tr id="38760445"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760445" href="https://news.ycombinator.com/vote?id=38760445&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=defrost">defrost</a> <span title="2023-12-25T06:54:02"><a href="https://news.ycombinator.com/item?id=38760445">4 minutes ago</a></span> <span id="unv_38760445"></span>          <span>
             |  |  |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>They're coming back you know, just ask Dennis Duffy, Beeper King.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760445&amp;goto=item%3Fid%3D38759092%2338760445" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="38760292"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760292" href="https://news.ycombinator.com/vote?id=38760292&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=d-z-m">d-z-m</a> <span title="2023-12-25T06:16:43"><a href="https://news.ycombinator.com/item?id=38760292">42 minutes ago</a></span> <span id="unv_38760292"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas to all, and to all a good night.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760292&amp;goto=item%3Fid%3D38759092%2338760292" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760285"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760285" href="https://news.ycombinator.com/vote?id=38760285&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=dev-jayson">dev-jayson</a> <span title="2023-12-25T06:16:06"><a href="https://news.ycombinator.com/item?id=38760285">42 minutes ago</a></span> <span id="unv_38760285"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>And a jolly Christmas to you too, kind stranger!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760285&amp;goto=item%3Fid%3D38759092%2338760285" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760313"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760313" href="https://news.ycombinator.com/vote?id=38760313&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=mordechai9000">mordechai9000</a> <span title="2023-12-25T06:22:11"><a href="https://news.ycombinator.com/item?id=38760313">36 minutes ago</a></span> <span id="unv_38760313"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>"Merry Christmas, I don't want to fight tonight." -The Ramones</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760313&amp;goto=item%3Fid%3D38759092%2338760313" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760241"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760241" href="https://news.ycombinator.com/vote?id=38760241&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=replwoacause">replwoacause</a> <span title="2023-12-25T06:02:08"><a href="https://news.ycombinator.com/item?id=38760241">56 minutes ago</a></span> <span id="unv_38760241"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas all</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760241&amp;goto=item%3Fid%3D38759092%2338760241" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760334"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760334" href="https://news.ycombinator.com/vote?id=38760334&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=atonse">atonse</a> <span title="2023-12-25T06:26:07"><a href="https://news.ycombinator.com/item?id=38760334">32 minutes ago</a></span> <span id="unv_38760334"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas HN!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760334&amp;goto=item%3Fid%3D38759092%2338760334" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760350"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760350" href="https://news.ycombinator.com/vote?id=38760350&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=grumblepeet">grumblepeet</a> <span title="2023-12-25T06:30:28"><a href="https://news.ycombinator.com/item?id=38760350">28 minutes ago</a></span> <span id="unv_38760350"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas everyone! Haveagoodun.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760350&amp;goto=item%3Fid%3D38759092%2338760350" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760330"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760330" href="https://news.ycombinator.com/vote?id=38760330&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=dlachausse">dlachausse</a> <span title="2023-12-25T06:25:17"><a href="https://news.ycombinator.com/item?id=38760330">33 minutes ago</a></span> <span id="unv_38760330"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas to all and to all a good night!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760330&amp;goto=item%3Fid%3D38759092%2338760330" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760324"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760324" href="https://news.ycombinator.com/vote?id=38760324&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=gordon_freeman">gordon_freeman</a> <span title="2023-12-25T06:23:54"><a href="https://news.ycombinator.com/item?id=38760324">34 minutes ago</a></span> <span id="unv_38760324"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas to the HN community!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760324&amp;goto=item%3Fid%3D38759092%2338760324" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760314"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760314" href="https://news.ycombinator.com/vote?id=38760314&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=seejayseesjays">seejayseesjays</a> <span title="2023-12-25T06:22:19"><a href="https://news.ycombinator.com/item?id=38760314">36 minutes ago</a></span> <span id="unv_38760314"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merriest possible Christmas!!!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760314&amp;goto=item%3Fid%3D38759092%2338760314" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760311"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760311" href="https://news.ycombinator.com/vote?id=38760311&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=justhereforthe">justhereforthe</a> <span title="2023-12-25T06:22:02"><a href="https://news.ycombinator.com/item?id=38760311">36 minutes ago</a></span> <span id="unv_38760311"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Happy Christmas, everyone!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760311&amp;goto=item%3Fid%3D38759092%2338760311" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760233"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760233" href="https://news.ycombinator.com/vote?id=38760233&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=DrAwesome">DrAwesome</a> <span title="2023-12-25T06:00:01"><a href="https://news.ycombinator.com/item?id=38760233">58 minutes ago</a></span> <span id="unv_38760233"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760233&amp;goto=item%3Fid%3D38759092%2338760233" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759890"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759890" href="https://news.ycombinator.com/vote?id=38759890&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=brian_herman">brian_herman</a> <span title="2023-12-25T04:45:30"><a href="https://news.ycombinator.com/item?id=38759890">2 hours ago</a></span> <span id="unv_38759890"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759890&amp;goto=item%3Fid%3D38759092%2338759890" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760306"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760306" href="https://news.ycombinator.com/vote?id=38760306&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=_tk_me">_tk_me</a> <span title="2023-12-25T06:21:03"><a href="https://news.ycombinator.com/item?id=38760306">37 minutes ago</a></span> <span id="unv_38760306"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760306&amp;goto=item%3Fid%3D38759092%2338760306" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760305"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760305" href="https://news.ycombinator.com/vote?id=38760305&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=mbn404">mbn404</a> <span title="2023-12-25T06:20:44"><a href="https://news.ycombinator.com/item?id=38760305">38 minutes ago</a></span> <span id="unv_38760305"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry christmas</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760305&amp;goto=item%3Fid%3D38759092%2338760305" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760061"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760061" href="https://news.ycombinator.com/vote?id=38760061&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=ilaksh">ilaksh</a> <span title="2023-12-25T05:20:44"><a href="https://news.ycombinator.com/item?id=38760061">1 hour ago</a></span> <span id="unv_38760061"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>And Happy Holidays!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760061&amp;goto=item%3Fid%3D38759092%2338760061" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760252"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760252" href="https://news.ycombinator.com/vote?id=38760252&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=accrual">accrual</a> <span title="2023-12-25T06:05:36"><a href="https://news.ycombinator.com/item?id=38760252">53 minutes ago</a></span> <span id="unv_38760252"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Happy tree day!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760252&amp;goto=item%3Fid%3D38759092%2338760252" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759320"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759320" href="https://news.ycombinator.com/vote?id=38759320&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=ExploreColorado">ExploreColorado</a> <span title="2023-12-25T03:11:39"><a href="https://news.ycombinator.com/item?id=38759320">3 hours ago</a></span> <span id="unv_38759320"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas to all those that celebrate.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759320&amp;goto=item%3Fid%3D38759092%2338759320" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760249"><td><table>  <tbody><tr>    <td indent="1"><img src="https://news.ycombinator.com/s.gif" height="1" width="40"></td><td>
      <center><a id="up_38760249" href="https://news.ycombinator.com/vote?id=38760249&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=smegsicle">smegsicle</a> <span title="2023-12-25T06:04:23"><a href="https://news.ycombinator.com/item?id=38760249">54 minutes ago</a></span> <span id="unv_38760249"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>and especially to those who don't</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760249&amp;goto=item%3Fid%3D38759092%2338760249" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                <tr id="38760307"><td><table>  <tbody><tr>    <td indent="2"><img src="https://news.ycombinator.com/s.gif" height="1" width="80"></td><td>
      <center><a id="up_38760307" href="https://news.ycombinator.com/vote?id=38760307&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=whoknowsidont">whoknowsidont</a> <span title="2023-12-25T06:21:12"><a href="https://news.ycombinator.com/item?id=38760307">37 minutes ago</a></span> <span id="unv_38760307"></span>          <span>
             |  |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Why especially?</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760307&amp;goto=item%3Fid%3D38759092%2338760307" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
                        <tr id="38760242"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760242" href="https://news.ycombinator.com/vote?id=38760242&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=AdamJacobMuller">AdamJacobMuller</a> <span title="2023-12-25T06:02:12"><a href="https://news.ycombinator.com/item?id=38760242">56 minutes ago</a></span> <span id="unv_38760242"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760242&amp;goto=item%3Fid%3D38759092%2338760242" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759846"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759846" href="https://news.ycombinator.com/vote?id=38759846&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=synthoidzeta">synthoidzeta</a> <span title="2023-12-25T04:36:05"><a href="https://news.ycombinator.com/item?id=38759846">2 hours ago</a></span> <span id="unv_38759846"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Aye, merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759846&amp;goto=item%3Fid%3D38759092%2338759846" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759944"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759944" href="https://news.ycombinator.com/vote?id=38759944&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=tjr">tjr</a> <span title="2023-12-25T04:56:29"><a href="https://news.ycombinator.com/item?id=38759944">2 hours ago</a></span> <span id="unv_38759944"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759944&amp;goto=item%3Fid%3D38759092%2338759944" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760217"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760217" href="https://news.ycombinator.com/vote?id=38760217&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=treyd">treyd</a> <span title="2023-12-25T05:54:16"><a href="https://news.ycombinator.com/item?id=38760217">1 hour ago</a></span> <span id="unv_38760217"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760217&amp;goto=item%3Fid%3D38759092%2338760217" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760360"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760360" href="https://news.ycombinator.com/vote?id=38760360&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=goles">goles</a> <span title="2023-12-25T06:34:12"><a href="https://news.ycombinator.com/item?id=38760360">24 minutes ago</a></span> <span id="unv_38760360"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Thank you for your work, Dan. Scott. Paul. All others.</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760360&amp;goto=item%3Fid%3D38759092%2338760360" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759566"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759566" href="https://news.ycombinator.com/vote?id=38759566&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=_navierstokes">_navierstokes</a> <span title="2023-12-25T03:55:54"><a href="https://news.ycombinator.com/item?id=38759566">3 hours ago</a></span> <span id="unv_38759566"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759566&amp;goto=item%3Fid%3D38759092%2338759566" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760232"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760232" href="https://news.ycombinator.com/vote?id=38760232&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=devgoth">devgoth</a> <span title="2023-12-25T05:59:39"><a href="https://news.ycombinator.com/item?id=38760232">59 minutes ago</a></span> <span id="unv_38760232"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>merry christmas!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760232&amp;goto=item%3Fid%3D38759092%2338760232" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759103"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759103" href="https://news.ycombinator.com/vote?id=38759103&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=bpiche">bpiche</a> <span title="2023-12-25T02:30:22"><a href="https://news.ycombinator.com/item?id=38759103">4 hours ago</a></span> <span id="unv_38759103"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas to you as well</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759103&amp;goto=item%3Fid%3D38759092%2338759103" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759372"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759372" href="https://news.ycombinator.com/vote?id=38759372&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=Utkarsh_Mood">Utkarsh_Mood</a> <span title="2023-12-25T03:21:02"><a href="https://news.ycombinator.com/item?id=38759372">3 hours ago</a></span> <span id="unv_38759372"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry christmas HN!</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759372&amp;goto=item%3Fid%3D38759092%2338759372" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759162"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759162" href="https://news.ycombinator.com/vote?id=38759162&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=turtleyacht">turtleyacht</a> <span title="2023-12-25T02:39:08"><a href="https://news.ycombinator.com/item?id=38759162">4 hours ago</a></span> <span id="unv_38759162"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759162&amp;goto=item%3Fid%3D38759092%2338759162" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759232"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759232" href="https://news.ycombinator.com/vote?id=38759232&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=MilnerRoute">MilnerRoute</a> <span title="2023-12-25T02:53:32"><a href="https://news.ycombinator.com/item?id=38759232">4 hours ago</a></span> <span id="unv_38759232"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry Christmas, my friend</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759232&amp;goto=item%3Fid%3D38759092%2338759232" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38759528"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38759528" href="https://news.ycombinator.com/vote?id=38759528&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=jumboonsale">jumboonsale</a> <span title="2023-12-25T03:48:24"><a href="https://news.ycombinator.com/item?id=38759528">3 hours ago</a></span> <span id="unv_38759528"></span>          <span>
             |  |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>Merry christmas</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38759528&amp;goto=item%3Fid%3D38759092%2338759528" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            <tr id="38760366"><td><table>  <tbody><tr>    <td indent="0"><img src="https://news.ycombinator.com/s.gif" height="1" width="0"></td><td>
      <center><a id="up_38760366" href="https://news.ycombinator.com/vote?id=38760366&amp;how=up&amp;goto=item%3Fid%3D38759092"></a></center>    </td><td><div><p><span>
          <a href="https://news.ycombinator.com/user?id=SeanAnderson">SeanAnderson</a> <span title="2023-12-25T06:36:17"><a href="https://news.ycombinator.com/item?id=38760366">22 minutes ago</a></span> <span id="unv_38760366"></span>          <span>
             |  [–]<span></span>          </span>
                  </span></p></div><br><div>
                  <p><span>bah humbug! /s :)</span></p><div>        <p><span size="1">
                      <u><a href="https://news.ycombinator.com/reply?id=38760366&amp;goto=item%3Fid%3D38759092%2338760366" rel="nofollow">reply</a></u>
                  </span>
      </p></div></div></td></tr>
        </tbody></table></td></tr>
            </tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Cray-1 vs Raspberry Pi (307 pts)]]></title>
            <link>http://www.roylongbottom.org.uk/Cray%201%20Supercomputer%20Performance%20Comparisons%20With%20Home%20Computers%20Phones%20and%20Tablets.htm</link>
            <guid>38758355</guid>
            <pubDate>Mon, 25 Dec 2023 00:16:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.roylongbottom.org.uk/Cray%201%20Supercomputer%20Performance%20Comparisons%20With%20Home%20Computers%20Phones%20and%20Tablets.htm">http://www.roylongbottom.org.uk/Cray%201%20Supercomputer%20Performance%20Comparisons%20With%20Home%20Computers%20Phones%20and%20Tablets.htm</a>, See on <a href="https://news.ycombinator.com/item?id=38758355">Hacker News</a></p>
<div id="readability-page-1" class="page"><div width="95%">
 <tbody><tr>
  <td>
  <span face="Verdana" size="2">
  <h3><br>Contents</h3>
  </span>

  <span face="Verdana" size="2"><a href="#anchor1"><b>Summary and Background Activities</b></a></span>
  <table bordercolor="#00ffff">
   <tbody><tr>
    <td><span face="Verdana" size="2"><a href="#anchor1a">Summary</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor1">Reliability Studies</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor2">Acceptance Trials</a></span>
    </td>
   </tr>
   <tr>
    <td><span face="Verdana" size="2"><a href="#anchor2a">System Evaluation and Trials</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor3">Stress Testing Programs</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor4">Met Seymour Cray</a></span>
    </td>
   </tr>
   <tr>
    <td><span face="Verdana" size="2"><a href="#anchor5">External Consultancy</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor6">Hands on Cray 1</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor7">Collecting Performance Data</a></span>
    </td>
   </tr>
   <tr>
    <td><span face="Verdana" size="2"><a href="#anchor8">Met Key Benchmark Authors</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor9">Influencing Supercomputer Choice</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor10">Benchmarking In Japan</a></span>
    </td>
   </tr>
  </tbody></table>

  <br>
  <span face="Verdana" size="2"><a href="#anchor12"><b>My PC Benchmarks</b></a></span>
  

  <br>
  <span face="Verdana" size="2"><a href="#anchor20"><b>Detailed Results and Comparisons</b></a></span>
  <table bordercolor="#00ffff">
   <tbody><tr>
    <td><span face="Verdana" size="2"><a href="#anchor20">Variations</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor21">Cray 1</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor22">Raspberry Pi</a></span>
    </td>
   </tr>
   <tr>
    <td><span face="Verdana" size="2"><a href="#anchor23">Android</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor24">Windows PCs</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor25">SIMD Windows and Linux PCs</a></span>
    </td>
   </tr>
    <tr>
    <td><span face="Verdana" size="2"><a href="#anchor26">Vector Whetstone</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor27">MP Whetstone</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor27a">MP MFLOPS</a></span>
    </td>
   </tr>
   <tr>
    <td><span face="Verdana" size="2"><a href="#anchor27b">MP MFLOPS Part 2</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor30a">MP Livermore Loops</a></span>
    </td>
   <td><span face="Verdana" size="2"><a href="#anchor30">MP MFLOPS 4 to 64 Threads</a></span>
   </td>
   </tr>
   <tr>
   <td><span face="Verdana" size="2"><a href="#anchor27d">Performance Summary</a></span>
   </td>
    <td><span face="Verdana" size="2"><a href="#anchor27e">More Advanced Hardware</a></span>
    </td>
   <td><span face="Verdana" size="2"><a href="#anchor27c">Disassembled Code</a></span>
    </td>
   </tr>
   <tr>
     <td><span face="Verdana" size="2"><a href="#anchor28">Benchmark Error Reports</a></span>
    </td>
    <td><span face="Verdana" size="2"><a href="#anchor29">Run Time Displays</a></span>
   </td>
    <td><span face="Verdana" size="2"><a href="#anchor29a">Faster Than Expected</a></span>
    </td>
   </tr>
 </tbody></table>
 <center><b>Also celebrating the 50th anniversary of the Whetstone Benchmark - 1972 to 2022.</b></center>  
 

 <span face="Verdana" size="2">
   <a name="anchor1a"></a>
   <h3><br>Summary</h3>
   <p>This report is mainly based on the comprehensive benchmark used to verify performance of the first Cray 1. This comprises the Lawrence Livermore Laboratory  program kernels (aka Livermore Loops), that provides a range of Millions of Floating Point Operations Per Second (MFLOPS) measurements. In this case, results from my 1990s conversion to all C code are used. 
   </p><p>To support these performance ratings, results are also considered from two similar vintage benchmarks. These are the Linpack and Whetstone benchmarks. The first is linpack-pc.c, my accepted conversion for PCs, available at Netlib. For the second, I took over design responsibility from Harold Curnow, the original author, 
   and developed enhanced variations, including one with 100% vectorisation, the initial target being the first Cray 1 system delivered to the UK. 
   </p><p>A selection of available results is provided to demonstrate performance variations and comparisons over the years. Other important issues can be considered, based on the information provided in my first Raspberry Pi report.  
   </p><p>"In 1978, the Cray 1 supercomputer cost $7 Million, weighed 10,500 pounds and had a 115 kilowatt power supply. It was, by far, the fastest computer in the world. The Raspberry Pi costs around $70 (CPU board, case, power supply, SD card), weighs a few ounces, uses a 5 watt power supply and is more than 4.5 times faster than the Cray 1"
   </p><p><b>Background Activities</b> - This provides details of my involvement in evaluating, acceptance testing and benchmarking mainframe and supercomputer systems for UK Government and University projects, including hands-on Cray 1 program development of benchmarks and stress tests..
   </p><p><b>Results Provided</b> -  Livermore Loops MFLOPS minimum, geometric mean (official average) and maximum, Linpack MFLOPS, Whetstone overall MWIPS and average MFLOPS of appropriate tests. These are all single core benchmarks. 
   </p><p><b>Raspberry Pi ARM CPUs</b> - The comment above was for the 2012 Pi 1. In 2020, the Pi 400 average Livermore Loops, Linpack and Whetstone MFLOPS reached <b>78.8, 49.5 and 95.5 times</b> faster than the Cray 1.
   </p><p><b>Android ARM CPUs</b> - 2012 Android tablet results  identified Cray 1 gains  with a range from barely there up to 10 times. My 2021 mid priced phone produced MFLOPS gains of <b>123, 74 and 151 times</b>.
   </p><p><b>Windows and Linux PCs Intel CPUs</b> - The first PC to reach the average Cray 1 Livermore Loops score is indicated as a 1994 100 MHz Pentium. Best results for the original benchmarks are for a medium range laptop with a 2021 11th generation 4150 MHz Core i5 CPU. The the three MFLOPS gains were <b>117,  131 and 134 times</b>.  
   </p><p><b>Advanced SIMD</b> compilations lead to i5 gains of <b>359, 337 and 226 times</b>.
   </p><p><b>Multiprogramming Livermore Loops</b> - Four copies of the Advanced SIMD Livermore Loops Benchmark were run at the same time. This resulted in a MFLOPS throughput gain of <b>1134 times</b>.
   </p><p><b>Vector Whetstones</b> - This single core benchmark uses large data arrays that produce 100% vectorisation for all test functions and was produced to benchmark the first UK Cray 1. Results are included for thirteen 1978 to 1991 supercomputers. For this benchmark, Single and Double Precision (SP and DP) versions are available, the latter could be appropriate for comparison with supercomputer longer words. Top SP and DP MFLOPS measurements for the <b>Core i5</b> were <b>602 and 433 times</b> faster than Cray 1.
   </p><p><b>Multithreading MP Whetstones</b> - Results are provided essentially from running multiple copies of the mainly scalar version of the Whetstone benchmark, using 1, 2, 4, and 8 threads, via a single program. It highlights complications  due to varying CPU MHz, according to the number of threads, and benefits of PC Hyperthreading. Single and double precision versions were run, in this case obtaining similar performance. Eight thread throughput gains over the Cray 1  were <b>Raspberry Pi 400 times</b>, <b>Android phone 757 times</b> and <b>Core i5 laptop 1521 times</b>.
   </p><div><p><b>MP MFLOPS</b> - This executes combinations of floating point multiplications and additions handling SP or DP variables, intended to demonstrate near maximum performance, again from a single program. For Intel, assembly code listings are provided for the normally fastest test. Based on the mix of floating point operations, an estimate of Cray 1 maximum speed, running these, is reduced from 160 MFLOPS to 122. The <b>Core i5 laptop</b> gains, over the revised Cray 1 maximum rating, were <b>SP 2671 and DP 1317 times</b> via <b>326 and 161 GFLOPS</b>.

   Gains on the other devices were <b>Android phone SP 293 times</b> and <b>Raspberry Pi SP 247 times</b>, both at greater than <b>30 GFLOPS</b>. 
   This benchmark has a run time parameter to use up to 64 threads that should demonstrate far superior performance of more advanced CPUs.

 </p></div><center><a href="#anchor1">Background Activities Next</a> or <a href="#anchorStart">Go To Start</a></center> 
   

   <a name="anchor1"></a>
   <h3><br>Background Activities</h3>
   <b>Reliability Studies</b> - I worked for the UK Government  Central Computer Agency from 1960, initially analysing fault returns that were contractually required for all new systems.  These provided the first detailed statistics included in my book �Computer System Reliability� published in 1980. I also provided assistance in running acceptance tests, gathering similar information, over the years, for inclusion in my book. 
   <p> 
 
   <a name="anchor2"></a>
 <b><br>Acceptance Trials and First Supercomputer Involvement</b> - During the late 1960s, with 20 staff, I became  in charge of all acceptance trials, taking personal responsibility for top of the range computers. This included organising and supervising trials the UK Atlas 2 for Cambridge University Mathematical Laboratory, the 1962 earlier version said to be the most powerful supercomputer in the world.
  </p><p>

   <a name="anchor2a"></a>
  <b><br>Scientific Systems Evaluation and Acceptance Trials</b> - In the 1970s and early 1980s, with up to 15 staff,  I covered evaluating and acceptance testing of scientific systems, with continuing  responsibility for design and acceptance trial supervision of the larger systems. Between 1972 and 1973 these included an IBM 360/195 for UK Met Office  and a CDC 7600 for ULCC (University of London), again said to be the current fastest supercomputers. 
   </p><p>

  <a name="anchor3"></a>
  <b><br>Stress Testing Programs</b> - In order to stress test all computers, during acceptance tests and under Operating Systems, I produced a range of Fortran programs, a few for testing CPUs, with others covering everything from paper tape punches to disk drives. These had parameters to run for extended periods and were used during hundreds of acceptance tests from 1972 up until the 1990s. The tests included the Whetstone benchmark, produced by my CCTA colleague Harold Curnow and the first accepted general purpose computer benchmark. I collected running times of most programs for use in performance evaluation. 
  </p><p>

  <a name="anchor4"></a>
  <b><br>Met Seymour Cray</b> - It must have been 1969, when I was visiting Control Data manufacturing facility in Minnesota, that I was asked to visit Chippewa Falls in Wisconsin to witness a UK Met Office benchmark run on the CDC 7600. Then, I had a brief encounter with Seymour Cray, who appeared to run the benchmark. After setting it up, it was all over in a flash, with Seymour reported that it took not a lot of milliseconds. This influenced my later development of general purpose benchmarks to have have noticeable running times with ongoing displays of progress. 
  </p><p>

  <a name="anchor5"></a>
  <b><br>External Consultancy</b> -  CCTA had contractual responsibility for handling procurement of centrally funded university computers, leading to me becoming an advisor to the Computer Board for Universities and Research Councils, and later a member of the Technical Sub-Group for Advanced Research Computers. In 1976,  I was appointed, as an expert from a Member State, to join a European Centre for Medium-Range Weather Forecasts Committee, involving procurement of a new supercomputer, where a Cray 1 became the obvious choice. 
  </p><p>

  <a name="anchor6"></a>
  <b><br>Hands-on Cray 1</b> - My detailed involvement in real supercomputers started in in 1978, including a second visit to Chippewa Falls to evaluate the Cray 1. This was followed by a pre-delivery factory trial, in 1979, for the new AWRE Aldermaston system.. Meanwhile, Cray 1 serial 1 was at the UK Rutherford Laboratory, where I converted all my appropriate test programs, and Whetstone benchmark, to use the new vector instructions. The on-site acceptance trials were carried out later in 1979, where the Cray 1 passed with flying colours. This was followed by the same factory and on-site testing procedures on serial 1 CDC Cyber 205 for UK Met Office, in 1981. That one failed its first factory trial due to my I/O stress testing program identifying a design fault. 
  </p><p>

  <a name="anchor7"></a>
  <b><br>Collecting Performance Data</b> - Next, until my early retirement in 1993, I was mainly involved in performance consultancy of data processing systems, personally covering more than 60 projects. I also took over design responsibility for the Whetstone benchmark and continued consultancy on university procurements.  Starting during this period, I collected published details of computers, amounting to  more than 2000 mainframes, minicomputers, supercomputers and workstations, from around 120 suppliers.  I also continued  collecting Whetstone results, ending with more than 700  from 53 computer manufacturers, covering minicomputers, through mainframes, to supercomputers. 
  These provided the beginning for my ResearchGate reports, starting with      

  <a href="https://www.researchgate.net/publication/318755466_Whetstone_Benchmark_History_and_Results">Whetstone Benchmark History and Results.pdf</a>  and
  <a href="https://www.researchgate.net/publication/318793086_Computer_Speed_Claims_1980_to_1996">Computer_Speed_Claims_1980_to_1996.pdf</a>,  
  also    
  <a href="https://www.researchgate.net/publication/318793156_Computer_Speeds_From_Instruction_Mixes_pre-1960_to_1971">Computer Speeds From Instruction Mixes pre-1960 to 1971.pdf</a>. 
  </p><p>

  <a name="anchor8"></a>
  <b><br>Met Key Supercomputer Benchmark Authors</b> - As part of a university benchmark investigation team, I visited the USA in 1987, including to the creator of the Linpack range of benchmarks, Jack Dongarra in Tennessee, and to the Lawrence  Livermore Research Laboratory, who produced the Livermore Loops (Livermore Fortran Kernels) benchmark. This became the key supercomputer benchmark for a number of years. 
  </p><p>

  <a name="anchor9"></a>
  <b><br>Influencing Supercomputer Choice</b> - In 1988, the Director of University of Manchester Regional Computer Centre requested my performance analysis of the two competing supercomputers, after being quoted by part of the evaluation team that I would support one of the proposals. I demonstrated the opposite choice, that was accepted, using results of my scalar and vector Whetstone benchmark results. This is based on a large number of users, where 90% of programs can be vectorised. Then, the one with the fastest maximum vector speed, but the lowest for scalar code, lost the battle.  
  </p><p>

  <a name="anchor10"></a>
  <b><br>Benchmarking Supercomputers in Japan</b> - My last involvement in supercomputers was for a new one for University of London Computer Centre, over 1991 and 1992, when I became the independent observer of a benchmark, based on numerous real applications, at Fujitsu and NEC in Japan. My colleague dealt with Cray, in the USA, that won the contract with a Y-MP configuration. As confirmed with my simple scalar and vector Whetstone, that I ran then, it was really comparing multiple pipelines against multiple CPUs, each of the latter with scalar and vector processing capabilities. 
  </p><center><a href="#anchor12">My PC Benchmarks Next</a> or <a href="#anchorStart">Go To Start</a></center> 
 

 <a name="anchor12"></a>
 <h3><br>My PC Benchmarks</h3>
 <b>Classic Benchmarks</b> - Following retirement came part time consultancy and eventually creating my website (roylongbottom.org.uk) to house copies of performance data, collected during my CCTA days (with approval) and a range of benchmarks, initially concentrating on those for PCs, all for free with no adverts. The first, being detailed in my 
 <a href="https://www.researchgate.net/publication/318987839_Classic_Computer_Benchmarks">Classic Benchmarks</a> 
 report, covering Whetstone, Dhrystone, Linpack 100 and Livermore Loops, using C/C++ compiled programs. Early PCs  had poor timer resolution, with benchmarks or functions requiring running times of 5 seconds for consistent performance. Other requirements included logging results in text files, checking output for consistent numeric results and, where possible, performance and results  displayed as the tests progressed.  
  Besides benchmark reports, identified below, I developed programs in assemly code, with reports now at ResearchGate in   
  <a href="https://www.researchgate.net/publication/319645485_PC_CPUID_1994_to_2013_plus_Measured_Maximum_Speeds_Via_Assembler_Code">PC CPUID 1994 to 2013, plus Measured Maximum Speeds via Assembler Code.pdf </a> and 
  <a href="https://www.researchgate.net/publication/319645396_PC_CPU_Specifications_1994_to_2014_plus_Measured_MIPS_and_MFLOPS_per_MHz">PC CPU Specifications 1994 to 2014 plus Measured MIPS and MFLOPS per MHz.pdf</a>.
  <p>

  <a name="anchor13"></a>
  <b><br>Netlib Involvement</b> - Other than for my Whetstone programs, the initial source code was obtained from Netlib, where my linpack-pc.c code, was later accepted and included, for use on PCs.   Livermore Loops conversion was time consuming, where C code was available for the calculations, but data generation, checking and other activities were in Fortran, that I converted to C. All these followed conversion routes from running under DOS, though variations of Windows, Linux, including Raspberry Pi, and Android, most at 32 bits and 64 bits. The majority of early results were collected through involvement  in Compuserve Benchmark and Standards Forum. 
  </p><p>

  <a name="anchor14"></a>
  <b><br>Livermore Loops</b> - Results shown here are for the second version of this benchmark, comprising 24 loops. Besides MFLOPS measurements for each of these, summary minimum, maximum and various averages are produced, with geometric mean being the official average. During my visit to LLL, I was given a copy of the 1986 report �The Livermore Fortran Kernels: A Computer Test of the Numerical Performance Range�, with over 200 pages of results for minicomputers to supercomputers. The document appears to be available via Internet, but I never managed to obtain a free download. My ResearchGate report 
  <a href="https://www.researchgate.net/publication/319176194_Livermore_Loops_Benchmark_Results_On_PCs_and_Later_Devices_Roy_Longbottom"> Livermore Loops Benchmark Results On PCs and Later Devices.pdf</a>,   
  contains results  up to 2017. 
  As for the other Classic Benchmarks, later details are included in reports covering the different platforms.   
  </p><p>

  <a name="anchor15"></a>
  <b><br>Linpack 100</b> - Performance of this original version of the benchmark is dependent on a function that simply calculates   dy[i] = dy[i] + da*dx[i]; but with too many overheads that prevent performance from approaching maximum possible. However, this can be compiled to use linked (fused) multiply and add instructions, such as available on the Cray 1 and later computers, particularly with SIMD vector capabilities. As for Livermore Loops, run on systems with smaller word sizes than Cray 1, it is compiled to use double precision arithmetic. Detailed results of this original version, and that for the later HPL variety for modern supercomputers, are available from Netlib in document 
  <a href="https://www.netlib.org/benchmark/performance.pdf"> Performance of Various Computers Using Standard Linear Equations Software</a>. 
  My 
  <a href="https://www.researchgate.net/publication/319176419_Linpack_Benchmark_Results_On_PCs_and_Later_Devices_Roy_Longbottom"> Linpack Benchmark results On PCs and Later Devices</a> 
  is available from ResearchGate.
  </p><p>
  
  <a name="anchor16"></a>
  <b><br>Whetstone</b> - The current versions include the changes I made to produce performance ratings of each of the eight test functions, particularly to identify cases where some of the code was not being executed (deliberately by some, in the days of minicomputers). Here, the original overall MWIPS ratings are quoted, along with average MFLOPS for the three tests carrying out straightforward calculations.  Two other tests include functions such as SIN and LOG, where changes in maths libraries can significantly affect overall MWIPS.  This benchmark is based on simple code sequences used in the 1960s, where performance is more inclined to be proportional to CPU MHz until dramatic changed are made in hardware, like the introduction of additional instructions. 
  My ResearchGate report for this benchmark is 
  <a href="https://www.researchgate.net/publication/318761123_Whetstone_Benchmark_Detailed_Later_Results">Whetstone Benchmark Detailed Later Results</a>. 


  </p><p>


  <a name="anchor17"></a> 
  <b><br>Vector Whetstone</b> - The vector version, converted for the Cray 1, executes the same functions as the scalar version, but covering a number of sequential memory locations, defined by a vector length parameter. Cray 1 performance achieved maximum performance at vector lengths of 64 words and above, with a sawtooth pattern . I have a previous unpublished C/C++ version that I ran on Raspberry Pi 400 and Windows and Linux based PCs, with results, at vector lengths of 256, being provided below. 
  </p><p>

  <a name="anchor18"></a>
  <b><br>MP Whetstone</b> - None of the other benchmarks, covered here so far, exercise more than one CPU core. This MP benchmark currently executes 1, 2, 4 and 8 copies of the standard code via multithreading in a single program.   Some results are included to highlight  performance gains over the single CPU in the Cray 1. 
  </p><div><p><b><br>MP MFLOPS</b> - Results for this benchmark have been included for comparison with the maximum MFLOPS  possible on the Cray 1. The benchmark executes tests with 2, 8 and 32 floating point operations per data word, covering larger caches and RAM. Default operation uses 8 threads but can be changed, up to 64 threads, with a run time parameter. Description and earlier results are available in 
  <a href="https://www.researchgate.net/publication/320716999_MultiThreading_Benchmarks">MultiThreading Benchmarks</a>.
   </p></div><center><a href="#anchor20">Detailed Results Next</a> or <a href="#anchorStart">Go To Start</a></center> 
   

  <a name="anchor20"></a> 
  <h3><br>Detailed Results and Comparisons</h3>
  <b>Variations</b> - Results provided below, cover Livermore Loops, Linpack and Whetstone benchmarks. Note that the main Livermore report contains numerous results, covering different compilers and possibly hardware changes. As for the Whetstone benchmark, slow performance of single test functions can  severely impact overall ratings.  The chosen results represent my choice of typical performance. 
  <p>

  <a name="anchor21"></a> 
  <b><br>Cray 1</b> - The maximum possible hardware performance was said to be  160 MFLOPS for the 80 MHz Cray 1, comprising linked multiply and add, for two results per clock cycle. The LLL benchmark maximum shown is 82.1 MFLOPS with average 11.9 and minimum 1.2. Then Linpack and Whetstone are 27 and 6 MFLOPS, Linpack benefiting from  linked multiply and add. 
  </p><p>

  <a name="anchor22"></a> 
  <b><br>Raspberry Pi</b> - In 2013 I ran my benchmarks on the first version of Raspberry Pi. These were essentially the same as those used on PCs, under Linux. The programs included the Livermore Loops benchmark and that lead me including the following in a report. 
  </p><p>�In 1978, the Cray 1 supercomputer cost $7 Million, weighed 10,500 pounds and had a 115 kilowatt power supply. It was, by far, the fastest computer in the world. The Raspberry Pi costs around $70 (CPU board, case, power supply, SD card), weighs a few ounces, uses a 5 watt power supply and is more than 4.5 times faster than the Cray 1.� This refers to official average geometric mean results.
  </p><p>In 2019 (aged 84), I was invited to become a voluntary member of Raspberry Pi Foundation�s Alpha Testing Team, which I accepted. This lead to me running my benchmarks and stress tests on new top of the range systems before announcement. The supply of new hardware and software, so far, lead to me producing eight additional  PDF reports that are available from ResearchGate. See Project Log for 
  <a href="https://www.researchgate.net/project/Performance-of-Raspberry-Pi-and-Android-Devices">Performance of Raspberry Pi and Android Devices</a>. 
  Early results are included in the benchmark specific reports, identified above. 
  Later reports that include links to download the benchmarks are 
  <a href="https://www.researchgate.net/publication/345162012_Raspberry_Pi_400_PC_32_Bit_and_64_Bit_Benchmarks_and_Stress_Tests">Raspberry Pi 400 PC 32 Bit and 64 Bit Benchmarks and Stress Tests.pdf</a> 
  and
  <a href="https://www.researchgate.net/publication/319433633_Raspberry_Pi_32_Bit_and_64_Bit_Benchmarks_and_Stress_Tests">Raspberry Pi 32 Bit and 64 Bit Benchmarks and Stress Tests.pdf</a>.   

  </p><p>The following MFLOPS comparisons are in the order of Livermore Loops average. 
  </p><p><b>Comparison</b> - The three 700 MHz Pi 1 main measurements (Loops, Linpack and Whetstone) were 55, 42 and 94 MFLOPS, with the four gains over Cray 1 being  8.8 times for MHz and 4.6, 1.6, 15.7 times for MFLOPS.
  </p></span><p><span face="Verdana" size="2">The 2020 1800 MHz Pi 400 provided  819, 1147 and 498 MFLOPS, with MHz speed gains of 23 times and 69, 42 and 83 times for MFLOPS. With more advanced SIMD options, the 64 bit compilation produced <b>Cray 1 MFLOPS gains of 78.8, 49.5 and 95.5 times</b>. 
  </span>
 <div>
  <pre><b>
                            LLLOOPS MFLOPS    MFLOPS  MWIPS MFLOPS    CPU Device
CPU                  MHz    Max  Gmean    Min Linpack Whets  Whets   Year   Year
Main Columns          V             V             V             V
Cray</b>
Cray 1                80   82.1   11.9    1.2     27   16.2 est  6          1978
XMP1                 118  162.2   17.3    2.1    121   30.3     11          1985

Cray 1 Whets     MFLOPS estimated based on XMP results

Raspberry Pi 32 bit
Pi   CPU
1 1176JZF            700    148     55     17     42    271     94   2001   2012
2    A7              900    248    115     42    120    525    244   2011   2014
3   A53             1200    436    184     56    176    725    324   2012   2016
4   A72             1500   1861    679    180    764   1883    415   2015   2019
400 A72             1800   2262    819    217   1147   2258    498   2015   2020

Raspberry Pi 64 bit
400 A72             1800   3353    938    242   1337   2505    573   2015   2020

Rpi 1/Cray 1         8.8    1.8    4.6   13.8    1.6   16.7   15.7
64 bit/32 bit        1.0    1.5    1.1    1.1    1.2    1.1    1.1
64 bit/Cray 1       22.5   40.8   78.8  201.7   49.5  154.6   95.5
<b>
Main Columns          #             #             #             #</b>
  </pre> 
  </div>
 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor23">Android Next</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 

 <a name="anchor23"></a>
 <h3><br>Android</h3>
 In 2012, I converted my benchmarks to run via Android, in native ARM code, requiring Java front end programs. The latest versions identify the hardware, automatically running code for ARM or Intel CPUs,  under 32 bit or 64 bit Operating Systems. In the early days I obtained lots of results with similar performance, a sample of these being provided below. 
 <p><b>Comparison</b> - The first results were for tablets that did not have hardware or software to support fast floating point calculations. The earliest with appropriate facilities, from 2012, used the ARM Cortex-A9 processors, starting with 800 Mhz versions. This is indicated as having the three MFLOPS speeds of 20, 11 and 22, or at 10 times Cray 1 CPU MHz, with gains of 1.7, 0.4 and 3.7 in MFLOPS. 
 </p><p>A later 800 MHz V7-A9 obtained 115, 101 and 155 MFLOPS, or Cray 1 gains of  9.7,  3.7 and  25.8 times.

  </p><p>Fastest results provided are for a 2021 mid priced phone with a Kryo 570 CPU, said to be based on ARM Cortex-A77. At 2000 MHz, this  obtained an average LLL speed of 1468 MFLOPS, with Linpack at 1986 and 905 for Whetstone and <b>Cray 1 performance gains of 123, 74 and 151 times</b>, at 25 times CPU MHz. 
  </p></span><p><span face="Verdana" size="2">The latest versions of the benchmarks can be downloaded and installed from the following (see security warning). 
  <a href="https://www.researchgate.net/publication/340593554_Android_9_Benchmarks_and_Stress_Tests_On_32_Bit_and_64_Bit_CPUs_Contents"> Android 9 Benchmarks and Stress Tests On 32 Bit and 64 Bit CPUs</a>. 
  Then 
  <a href="https://www.researchgate.net/publication/354630352_Android_10_and_11_Benchmarks_and_ARM_bigLITTLE_Architecture_Issues"> Android 10 and 11 Benchmarks and ARM big.LITTLE Architecture Issues</a>  
  might be of interest, with 
  <a href="https://www.researchgate.net/publication/319483151_Android_Benchmarks_For_32_Bit_and_64_Bit_CPUs_from_ARM_and_Intel"> Android Benchmarks For 32 Bit and 64 Bit CPUs from ARM and Intel</a> 
  providing more information, results and access to older (out of date) apps.  


 

  </span>
 <div>
  <pre><b>
                            LLLOOPS MFLOPS    MFLOPS  MWIPS MFLOPS    CPU Device
CPU                  MHz    Max  Gmean    Min Linpack Whets  Whets   Year   Year
Main Columns          V             V             V             V
</b>
Cray 1                80   82.1   11.9    1.2     27   16.2    6.0          1978

Android 32 bits
V7-A9 a              800     36     20     11     11    171     22   2012   2012
V7-A9 a later        800    253    115     47    101    687    155   2012   2012
v7-A9               1200    208    176     27    159    731    259   2012   2012
v8-A53              1300    397    164     28    348    868    332   2012   2015
v7-A15              1700    471    342     34    826    907    329   2012   2013
QU-800              2150    447    356    112    630   1974    610   2013   2013
V8-A72              1800    674    584    136   1023   2053    465   2015   2015

Android 64 bits
v8-A53              1300    805    238    101    338   1494    319   2012   2015
Exynos 8890         2300    188    158     27    999   3342    760   2016   2017
v8-A57              2000    724    641    245   1163   1988    390   2013   2015
v8-A73              2000    877    786    269   1122   2927    497   2016   2019
Kryo 570            2000   1620   1468    514   1986   4650    905   2020   2021

A53 64/32bit         1.0    2.0    1.5    3.6    1.0    1.7    1.0
V7-A9 a/Cray 1      10.0    0.4    1.7    9.2    0.4   10.6    3.7
v7-A9 later         10.0    3.1    9.7   39.2    3.7   42.4   25.8
32b A72/Cray 1      22.5    8.2   49.0  113.5   37.9  126.7   77.5
64b 570/Cray 1      25.0   19.7  123.3  428.0   73.6  287.1  150.8
<b>
Main Columns         #             #             #             #</b>
  </pre> 
  </div>
 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor24">PCs Next</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 

  <a name="anchor24"></a> 
  <h3><br>Windows Intel and AMD CPUs</h3>
  I developed my benchmarks for Intel CPUs in the 1990s, starting with DOS and OS/2. through varieties of Windows and Linux. The compiled benchmarks and source codes are all available for download via my PDF reports at ResearchGate. I received numerous results up to 2005. By 2013, my interests became ARM CPUs, with MHz of those from Intel not increasing sufficiently to show real improvements in performance of my single core benchmarks. Then, my 3.9 GHz CPU was close to maximum speed and, in 2021, this appears to have only reached 5.5 GHz, but now with 16 CPU cores.
  In order to obtain some up to date performance data, I bought a new laptop with a 11th  generation Core i5 CPU that runs at a maximum speed of 4.15 GHz.

  <p><b>Comparison</b> - Below are samples of results where details for the three benchmarks were available. The first PC to reach the average Cray 1 Livermore Loops score is indicated  as a 1994 100 MHz Pentium, shown as 12 MFLOPS, with Linpack and Whetstone at 12 and 16. This gives approximate Cray 1 comparisons of MHz and the three MFLOPS measurements  of  1.3, 1.0. 0.44 and 2.6 times.
  </p><p>PCs with faster Pentium processors  continued to produce performance proportional to CPU MHz, with improvements appearing with the 1995 Pentium Pro. At 200 MHz the three MFLOPS measurements were 34, 49 and 41 and four comparisons 2.5, 2.9, 1.8 and 6.8 times.
  </p><p>Next came various Pentium II and III models with improvements to these benchmarks mainly proportional to CPU MHz. Then the 2002 Pentium 4 is show to achieve 187	, 382 and 146 MFLOPS, but at 1700 MHz, producing the four Cray ` comparisons of  21, 16, 14 and 24 times, with decreases in MFLOPS per MHz, compared with earlier Pentiums. 
  </p><p>With alternative CPU technology, the per MHz ratio improved with a single core of a 1820 MHz 2007 Core 2 processor obtaining 413,	998 and 374 MFLOPS or Cray 1 improvements of 23, 35, 37 and 62 times.
  </p><p>The 2010 Core i7 range produced an improvement in MFLOPS per MHz, with the 3900 MHz 2013 model obtaining  1108, 2684 and 716 MFLOPS and comparisons 49, 93, 99 and 119 times. 
  </p><p>The 2021 laptop with a Core i5 1135G7 CPU provided further gains with a higher MFLOPS per MHz rating for Livermore Loops and Linpack but not much with Whetstone. MFLOPS identified were 1387, 3541 and 802, and <b>Cray 1 comparisons of 117, 131 and 134 times</b>. 
  </p></span><p><span face="Verdana" size="2">These results are from running optimised versions of the original Windows Classic Benchmarks  livecont.exe, linpcont.exe and whetcont.exe, available in downloadable 
  <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Classic-Computer-Benchmarks/attachment/59884efd4cde26e1c1d37853/AS:524681461460994@1502105216501/download/benchnt.zip?context=ProjectUpdatesLog"> benchnt.zip</a>. 

 </span>
 <div>
  <pre><b>
                                                                          LLLoops
                                                                            Gmean
                            LLLOOPS MFLOPS    MFLOPS  MWIPS MFLOPS Device  MFLOPS
CPU                  MHz    Max  Gmean    Min Linpack Whets  Whets   Year per MHz
Main Columns          V             V             V             V
</b>
Cray 1                80   82.1   11.9    1.2     27   16.2    6.0   1978    0.15
<b>
Windows PCs</b>
AMD 80386             40    1.2    0.6    0.2    0.5    5.7    0.8   1991    0.02
80486 DX2             66    4.9    2.7    0.7    2.6     15    3.3   1992    0.04
Pentium               75     24    7.7    1.3    7.6     48     11   1994    0.10
Pentium              100     34     12    2.1     12     66     16   1994    0.12
Pentium              200     66     22    3.8           132     31   1996    0.11
AMD K6               200     68     22    2.7     23    124     26   1997    0.11
Pentium Pro          200    121     34    3.6     49    161     41   1995    0.17
Pentium II           300    177     51    5.5     48    245     61   1997    0.17
AMD K62              500    172     55    6.0     46    309     67   1999    0.11
Pentium III          450    267     77    8.3     62    368     92   1999    0.17
Pentium 4           1700   1043    187     19    382    603    146   2002    0.11
Athlon Tbird        1000   1124    201     23    373    769    161   2000    0.20
Core 2              1830   1650    413     40    998   1557    374   2007    0.23
Core i5             2300   2326    438     35   1065   1813    428   2009    0.19
Athlon 64           2150   2484    447     48    812   1720    355   2005    0.21
Phenom II           3000   3894    644     64   1413   2145    424   2009    0.21
Core i7 930         3066   2751    732     68   1765   2496    576   2010    0.24
Core i7 4820K       3900   5508   1108     88   2680   3114    716   2013    0.28
Core i5 1135G7      4150   7505   1387     92   3541   3293    802   2021    0.33

Pentium/Cray 1       1.3    0.4    1.0    1.8    0.4    4.1    2.6
i5/Cray 1             52     91    117     77    131    203    134
i5/i7                1.1    1.4    1.3    1.1    1.3    1.1    1.1
<b>
Main Columns          #             #             #             #
</b>
  </pre> 
  </div>
 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor25">SIMD Windows and Linux Next</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 

  <a name="anchor25"></a> 
  <h3><br>SIMD Windows and Linux PCs</h3>
  Following are results from running the benchmarks compiled with SSE, AVX and AVX-512 SIMD options.  These employ 128, 256  or 512 bit vector registers simultaneous operating on 4, 8 or 16 single precision (SP) and 2, 4 or 8 double precision (DP) numbers, historically stated as producing maximum SP performance of  4, 8 or 16 MFLOPS per MHz and half those for DP. With 100% fused multiply and add (FMA) type operations these maximum expectations would be doubled.  FMA was only available on the Core i5 laptop tested here.
  It should be noted that using fused operation can result in slightly different accuracy in computed results. The benchmarks report these as errors. See  <a href="#anchor28">Error Reports</a>.  Similar variations were encountered, in the past, using different versions of the compilers. 

  <p><b>Windows</b> benchmarks, used in this area, were lloops64.exe, linpack64.exe and whetsSSE.exe. These and source code files are included in 
 <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620528acf5675b211b24214b/AS:1121950533455880@1644505260912/download/Windows-Benchmarks.zip?context=ProjectUpdatesLog">Windows-Benchmarks.zip </a>. 
 Compared with the earlier results, performance increased to achieve <b>Cray 1 MFLOPS gains of  238,  190  and  182 times</b>.  
 For this area, double precision Whetstone results are also shown to run at the same speed as the single precision version.

</p><p>I have had difficulties in using the latest C compilers for Windows, but a new bootable flash drive for Ubuntu 20.04 provided the compiler, enabling more advanced options to be used under Linux. The new  benchmarks were initially compiled on an older PC as it did not seem possible to boot the latest flash drive on my new Core i5 based laptop. For the latter, I installed WSL (Windows Subsystem for Linux) in order to compile and run the programs.  

 </p><p><b>Linux</b> - The first compilations under Linux were slightly faster than those from Windows. Those used here were compiled on the i5 laptop using the latest gcc 9.3.0 compiler, under Ubuntu. 
 Disassembly code was examined to show that SSE, AVX and AVX-512 instructions were being used, as appropriate. This cannot be guaranteed by relying on compile options.   These benchmarks can be downloaded in 
 <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620640d6b3729f0f61a782fa/AS:1122251357335554@1644576982762/download/Linux-Benchmarks.tar.xz?context=ProjectUpdatesLogProjectUpdatesLog">Linux-Benchmarks.tar.xz</a>. 
 The first Linux results, using the AVX SIMD instructions, increased the three i5 Cray 1 gains to  300, 259 and 179 times.  AVX-512 hardware was only available on the Core i5 CPU, providing the three <b>MFLOPS gains of  359, 337 and 226 times</b>. 

 </p></span><p><span face="Verdana" size="2">The table provides MFLOPS per MHz calculations for Livermore Loops average and maximum results. A major surprise is that the latter for SSE and AVX, of 3.56 and 4.77 were higher than recognised maximum double precision ratios,  without FMA, of 2.0 and 4.0. This also applied for SSE for the Core i7 at 3.05. The AVX-512 FMA 47692 MFLOPS ratio of 11.49 suggests significant FMA was being used.
 See also <a href="#anchor29a">Faster Than Expected</a> below.
 </span>
 <div>
  <pre><b>
                                                                             DP LLLoops
                                                                            Gmean     Max
                            LLLOOPS MFLOPS    MFLOPS  MWIPS MFLOPS Device  MFLOPS  MFLOPS
CPU                  MHz    Max  Gmean    Min Linpack Whets  Whets   Year per MHz per MHz
Main Columns          V             V             V             V
</b>
Cray 1                80   82.1   11.9    1.2     27   16.2    6.0   1978    0.15    1.03
<b>
Windows PCs Earlier SSE Compiler</b>
Core i7 4820K       3900   6145   2037    327   3601   6385   1081   2013    0.52    1.58
Core i5 1135G7      4150   8313   2828    386   5132   7466   1094   2021    0.68    2.00
Core i5 DP          4150                               7256   1098
i5/Cray 1             52    101    238    321    190    461    182
i5/i7                1.1    1.4    1.4    1.2    1.4    1.2    1.0
<b>
Linux PCs SSE New Compiler</b>
Core i7 4820K       3900  11881   2578    569   5306   6007   1182   2013    0.66    3.05
Core i5 1135G7      4150  14786   3364    575   7322   6586   1052   2021    0.81    3.56
i5/Cray 1             52    180    283    479    271    407    175
i5/i7                1.1    1.2    1.3    1.0    1.4    1.1    0.9
<b>
Linux PCs AVX New Compiler</b>
Core i7 4820K       3900  12878   2615    597   5098   5887   1174   2013    0.67    3.30
Core i5 1135G7      4150  19794   3568    943   6998   6477   1077   2021    0.86    4.77
Core i5 DP                                             6861   1076
i5/Cray 1             52    241    300    786    259    400    179
i5/i7                1.1    1.5    1.4    1.6    1.4    1.1    0.9
SP/DP                                                   0.9    1.0
i7 AVX/SSE                  1.1    1.0    1.0    1.0    1.0    1.0
i5 AVX/SSE                  1.3    1.1    1.6    1.0    1.0    1.0
<b>
Linux AVX 512 FMA New Cpmpiler</b>
Core i5 1135G7      4150  47692   4273    965   9088   8193   1353   2021    1.03   11.49
i5/Cray 1             52    581    359    805    337    506    226
<b>
Main Columns          #             #             #             #</b>
  </pre> 
  </div>

 <span face="Verdana" size="2">
 The following is a summary of the range of results on the 2021 Core i5, to show the impact of compilers that support newer technology. Note that trying to run the AVX-512 variety on earlier CPUs, without this option, results in an program failure report. 
 The No SSE results are from <a href="#anchor24">the earlier table</a>. 
 </span></p><p><span face="Verdana" size="2">The i5  CPU MHz  is 52 times than that for the Cray 1, compared with over 300 times for Livermore Loops and Linpack benchmarks  using AVX-512 functions and more than 200 times for Whetstone. Later are multithreading results for the latter, and for a vector  version, to highlight the benefits of using more advanced facilities 
 </span>
 </p><pre><center><b>              MFLOPS               i5/Cray 1     
       LLOOPS Linpack Whets  LLOOPS Linpack Whets
</b>
No SSE  1387   3541    802     117    131    134 
SSE     3364   7322   1052     283    271    175 
AVX     3568   6998   1077     300    259    179 
AVX512  4273   9088   1353     359    337    226 
 </center></pre>


 <span face="Verdana" size="2">
 <center><a href="#anchor26">Vector Whetstone Benchmark Next</a> or <a href="#anchorStart">Go To Start</a></center> 
 

  <a name="anchor26"></a> 
  <h3><br>Vector Whetstone Benchmark</h3>
  Below are details of supercomputer Whetstone Scalar and Vector benchmark results included in my ResearchGate 
  <a href="https://www.researchgate.net/publication/318755466_Whetstone_Benchmark_History_and_Results">Whetstone Benchmark History and Results</a>  
  report. Details of the vector program version are included 
  <a href="#anchor17">above</a>. 
  As far as I remember, all these results are from systems using a single scalar CPU, possibly with more than one vector pipeline. Cray was the first manufacturer to produce systems with multiple scalar CPUs but it is not clear if any of the others followed this line in the timescale considered. 
  From the details here, both Cray Y-MP MHz clock speed and scalar MFLOPS are indicated as around twice as fast as Cray 1, with vector MFLOPS four times faster, the system having two vector units.
  This benchmark is included in 
  <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620640d6b3729f0f61a782fa/AS:1122251357335554@1644576982762/download/Linux-Benchmarks.tar.xz?context=ProjectUpdatesLogProjectUpdatesLog">Linux-Benchmarks.tar.xz</a> 
  and
  <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620528acf5675b211b24214b/AS:1121950533455880@1644505260912/download/Windows-Benchmarks.zip?context=ProjectUpdatesLog">Windows-Benchmarks.zip </a>. 
 
  </span><p><span face="Verdana" size="2">Best results, from the next table,  for Core i5 and Raspberry Pi 400 are provided, to demonstrate their superiority over 1991 supercomputers. On top of this, the former have multiple cores, with the potential of four time higher throughput or raw performance.  See
  <a href="#anchor27">MP Whetstone results</a> and those for <a href="#anchor27a">MP MFLOPS</a>. 
 </span>
 <div>
  <pre><b>                                                     Vector/        
                         Scalar        Vector        Scalar
                     MHz  MWIPS MFLOPS  MWIPS MFLOPS MFLOPS   DATE
</b>
Cray 1                80   16.2    5.9     98     47    8.0   1978
CDC Cyber 205         50   11.9    4.9    161     57   11.7   1981
Cray XMP1            118   30.3   11.0    313    151   13.7   1982
Cray 2/1             244   25.8    N/A    425    N/A          1984
Amdahl VP 500   #    143   21.7    7.5    250    103   13.8   1984
Amdahl VP 1100  #    143   21.7    7.5    374    146   19.5   1984
Amdahl VP 1200  #    143   21.7    7.5    581    264   35.3   1984
IBM 3090-150 VP       54   12.1    4.9     60     17    3.6   1986
(CDC) ETA 10E         95   15.7    6.5    335    124   19.2   1987
Cray YMP1            154   31.0   12.0    449    195   16.3   1987
Fujitsu VP-2400/4    312   71.7   25.4   1828    794   31.3   1991
NEC SX-3/11          345   42.9   17.0   1106    441   25.9   1991
NEC SX-3/12          345   42.9   17.0   1667    753   44.3   1991
                # Fujitsu Systems

Core i5 AVX512 SP   4150   7780   1353  21039  28303   20.9   2021 
Core i5 AVX512 DP   4150   8193   1353  21464  20346   15.0   2021

Pi 400 SP           1800   2505    573   3755   2131    3.7   2020
Pi 400 DP           1800   2684    575   3407   1184    2.1   2020
  </pre> 
  </div>
 <span face="Verdana" size="2">
 The following include all three MFLOPS measurements to identify maximum, as the second test sometimes falls behind.  Single and double precision results are provided, where either could be valid, depending on numeric precision requirements.    
 </span></p><p><span face="Verdana" size="2">The fastest Whetstone floating point code is not suitable to benefit much from fused multiply and add operation, with one multiply associated with four additions or subtractions. The maximum Core i5 speed of 75.1 GFLOPS is quite impressive. 
 Average i5 <b>Cray 1 MFLOPS gains were 602 and 433 times</b>, for single then double precision calculations.
 Note that some SP SSE MFLOPS per MHz were again greater than 4.0 and AVX  above 8.0 and half these with DP.  The Raspberry Pi 400 vector performance was not that good but,  as shown above,  somewhat faster than the scalar speed.
 </span>
 <div>
  <pre><b>
                                                                   Average Maximum Average
                                                            Average MFLOPS  MFLOPS  MFLOPS
                   Mode     MHz  MWIPS MFLOPS MFLOPS MFLOPS MFLOPS Per MHz Per MHz xCray 1
Windows SSE</b>
Phenom II        64b SP    3000   4869   4429   3067    751   1593    0.5     1.5      34
Phenom II        64b DP    3000   4897   2418   1722    751   1290    0.4     0.8      27
Phenom II        32b SP    3000   4624   1798   1584    701   1148    0.4     0.6      24

Core i7 4820K    64b SP    3900   7256  14233  12655    958   2513    0.6     3.6      53
Core i7 4820K    64b DP    3900   7299   7416   7019    953   2261    0.6     1.9      48
Core i7 4820K    32b SP    3900  10494  10362   9748   9468   9846    2.5     2.7     209

Core i5 1135G7   64b SP    4150   8435  23709  21246   1043   2862    0.7     5.7      61
Core i5 1135G7   64b DP    4150   8621  12375  11475   1041   2659    0.6     3.0      57
Core i5 1135G7   32b SP    4150  13387  18221  17254  13739  16162    3.9     4.4     344
<b>
Linux</b>
Core i7 4820K    Op3 SP    3900  12012  12896   6248  17131  10136    2.6     4.4     216
Core i7 4820K    AVX SP    3900  11924  20394   7124  23551  12938    3.3     6.0     275
Core i7 4820K    Op3 DP    3900  11383   6259   4601   8711   6099    1.6     2.2     130
Core i7 4820K    AVX DP    3900  11526  10509   5789  11950   8533    2.2     3.1     182

Core i5 1135G7   Op3 SP    4150  20870  21024  10721  28800  17088    4.1     6.9     364
Core i5 1135G7   AVX SP    4150  20294  37170  12353  39126  22487    5.4     9.4     478
Core i5 1135G7   A512 SP   4150  21039  62592  13037  75094  28303    6.8    18.1     602
Core i5 1135G7   Op3 DP    4150  20045  10884   8035  14575  10528    2.5     3.5     224
Core i5 1135G7   AVX DP    4150  20526  19270  10311  20360  15152    3.7     4.9     322
Core i5 1135G7   A512 DP   4150  21464  33188  11504  32907  20346    4.9     8.0     433

Raspberry Pi 400 SP        1800   3755   2413   1683   2506   2131    1.2     1.4      45
Raspberry Pi 400 DP        1800   3407   1216   1151   1186   1184    0.7     0.7      25
  </pre> 
  </div>

 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor27"> MP Whetstone Benchmarks Next</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 

 <a name="anchor27"></a>
 <h3><br>MP Whetstone Benchmark</h3>
 Previous results compared Cray 1 performance with single CPU cores on the later systems.  
 Here we consider possible implication of using multiple cores, using this benchmark that effectively represents 1, 2, 4 and 8 users concurrently executing the same application, but using different data. 

 Details shown are overall MWIPS ratings, the three MFLOPS measurements, overall harmonic mean MFLOPS, recorded running times, MFLOPS performance gains over the Cray 1 and MFLOPS per MHz ratios for single core activity. 
 Note nominal running time varies due to rough calibration of the number of passes to use.
 The benchmark is also included in 
 <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620640d6b3729f0f61a782fa/AS:1122251357335554@1644576982762/download/Linux-Benchmarks.tar.xz?context=ProjectUpdatesLogProjectUpdatesLog">Linux-Benchmarks.tar.xz</a>  
 and
 <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620528acf5675b211b24214b/AS:1121950533455880@1644505260912/download/Windows-Benchmarks.zip?context=ProjectUpdatesLog">Windows-Benchmarks.zip </a>. 

 <p><b>Phenom, Windows 7</b> - This demonstrates almost perfect speed gains using 1 to 2 and 2 to 4 cores, with no further increase using 8 threads.
 </p><p><b>Core i7 Desktop</b> - This can use 4 cores or 8 independent threads at the same time. This application appeared to demonstrate  near best case performance gains using 8 threads.
 </p><p><b>Core i5 Laptop</b> - Performance Monitor indicated that this ran at around 4150 MHz using 1 and 2 threads, but reduced to about 3800 MHz for 4 and 8 threads.
 </p><p><b>Windows vs Linux</b> - Average MFLOPS performance was quite similar, on both the i7 and i5 PCs,  at the lower level of optimisation shown here. 
 </p><p><b>Single vs Double Precision</b> - Results indicated similar performance, as expected from scalar operation. 
 </p><p><b>PC Performance Gains</b> - some of the Core i7 speeds were faster than on the i5. For the latter, eight thread  <b>Cray 1 MFLOPS gains were  1521 times</b>.

 </p><p><b>Android Phone</b> - The Kryo 570 CPU has out-of-order execution, maybe responsible for the highest MFLOPS per MHz ratio of 0.42. 
 But maximum performance of the big/LITTLE CPU arrangement, of 2 fast and 6 slow cores, lead to 8 core performance being only 5 times faster than than for 1 core. Still, the <b>Cray 1 gain was 757 times</b>.
 </p></span><p><span face="Verdana" size="2"><b>Raspberry Pi 400</b> - As might be expected, performance of this quad core system produced the same elapsed time using 1, 2 and 4 threads, and a little bit extra with 8 threads. <b>Maximum Cray 1 gain was 400 times</b>. 
 </span>
 <div>
  <pre><b>
                                                     Average       --- Average MFLOPS ---
System           Threads  MWIPS MFLOPS MFLOPS MFLOPS  MFLOPS  Secs xCray 1   Gain Per MHz
</b>
Desktop <b>Win 7</b>       1      4086    817    817    752    794    5.0    132     1.0    0.26
Phenom II           2      8149   1635   1616   1501   1582    5.0    264     2.0
4 core              4     16199   3261   3234   2968   3149    5.1    525     4.0
3000 MHz            8     16602   3428   3461   3056   3304   10.1    551     4.2

Desktop <b>Win 10</b>      1      6169   1236   1236    856   1077    4.5    179     1.0    0.28
Core i7 4820K       2     13106   2601   2604   1910   2322    4.2    387     2.2
4 Core 8 Thread     4     25343   5181   5197   3723   4587    4.5    764     4.3
3900 MHz            8     46579  10310  10263   7403   9104    5.0   1517     8.5

Laptop <b>Win 10</b>       1      7555   1195   1216   1046   1147    4.9    191     1.0    0.28
Core i5 1135G7      2     15048   2385   2424   2083   2287    5.0    381     2.0
4 Core 8 Thread     4     27290   4339   4407   3787   4158    5.6    693     3.6
4150 MHz or less    8     53037   8619   8773   7538   8272    5.9   1379     7.2
<b>
Linux</b>
Desktop SP          1      6157   1189   1146    931   1076    4.7    179     1.0    0.28
Core i7 4820K       2     12641   2529   2608   1931   2314    4.6    386     2.1
4 Core 8 Thread     4     25490   5204   5213   3900   4685    4.6    781     4.4
3900 MHz            8     43907  10217  10440   7714   9279    5.7   1547     8.6

Desktop DP          1      6500   1235   1252    972   1138    3.9    190     1.0    0.29
Core i7 4820K       2     13098   2542   2636   1938   2328    3.9    388     2.0
4 Core 8 Thread     4     26298   5105   5273   3906   4676    3.9    779     4.1
3900 MHz            8     44758  10268  10435   7755   9312    5.2   1552     8.2

Laptop SP           1      7640   1140   1199   1015   1113    5.0    185     1.0    0.27
Core i5 1135G7      2     14662   2347   2262   1997   2192    5.4    365     2.0
4 Core 8 Thread     4     26754   4320   4387   3752   4133    6.1    689     3.7
4150 MHz or less    8     46016   7885   8264   6701   7556    7.5   1259     6.8

Laptop SP AVX512    1      8432   1281   1280   1248   1269    5.0    212     1.0    0.31
Core i5 1135G7      2     16728   2542   2548   2471   2520    5.0    420     2.0
4 Core 8 Thread     4     29816   4625   4617   4523   4588    6.0    765     3.6
4150 MHz or less    8     54985   9203   9188   8994   9127    6.6   1521     7.2

Laptop DP AVX512    1      8748   1278   1278   1248   1268    4.9    211     1.0    0.31
Core i5 1135G7      2     17372   2542   2542   2481   2521    5.0    420     2.0
4 Core 8 Thread     4     31459   4622   4622   4514   4585    5.5    764     3.6
4150 MHz or less    8     57024   9187   9210   8985   9126    6.0   1521     7.2
<b>
Android Phone</b>       1      4327   1010    984    782    913    4.6    152     1.0    0.42
Kryo 570            2      8782   1850   2126   1604   1836    4.5    306     2.0
2 x 2200 MHz +      4     13969   3189   3373   2641   3034    6.9    506     3.3
6 x 1800 MHz        8     21039   4535   4985   4171   4540    7.9    757     5.0
<b>
Raspberry Pi 400</b>    1      2266    644    645    376    520    5.0     87     1.0    0.29
4 x Cortex A72      2      4533   1285   1284    751   1038    5.0    173     2.0
1800 MHz            4      9065   2562   2498   1505   2062    5.0    344     4.0
                    8      9611   3284   3375   1543   2402   10.1    400     4.6 </pre> 
  </div>
 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor27a">MP MFLOPS Next</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 
 
 <a name="anchor27a"></a>
 <h3><br>MP MFLOPS Linux - Intel Single Precision Results</h3>
 The benchmark aims at producing maximum measured performance of floating point operation for comparison with the theoretically possible 160 MFLOPS on Cray 1.  Here, a Linux benchmark is used, running SSE and AVX Intel SIMD instructions 
 (in 
 <a href="https://www.researchgate.net/profile/Roy-Longbottom/project/Cray-1-Supercomputer-Performance-Comparisons-With-Home-Computers-Phones-and-Tablets/attachment/620640d6b3729f0f61a782fa/AS:1122251357335554@1644576982762/download/Linux-Benchmarks.tar.xz?context=ProjectUpdatesLogProjectUpdatesLog">Linux-Benchmarks.tar.xz</a>). 
 
 <p>Calculations are carried out  of the form x[i] = (x[i] + a) * b - (x[i] + c) * d + (x[i] + e) * f with 2, 8 or 32 operations per input data word. In each case, accessing 102400, 1024000 and 10240000 data words, covering caches and RAM. Up to 64 threads can be used, each using a dedicated segment of the data, default being 8 threads. Data is checked  for consistent values at the end.  
 </p><p>Below are measured MFLOPS using 1, 2, 4 and 8 threads for the Core i7 and i5 computers, executing SSE and AVX instructions, plus AVX-512 on the i5. As for MP Whetstones, performance improvements, from doubling the number of threads (MP Gains), are shown to be non-linear  for the Core i5 laptop. 
 </p><p>Single core MFLOPS per MHz ratios are also shown. Maximum single precision expectations, without FMA instructions, are  4 for SSE and 8 for AVX and 16 for AVX-512, then 32 for the latter, where FMA is used. Then double precision operation  expectations are half these values. 
 </p><p>It can be seen that, for both i7 and i5,  SSE and AVX MFLOPS/MHz ratios were higher than these. I have been unable to identify the reason for these  levels of performance, without FMA type instructions being used. 
 For further information see 
 <a href="#anchor29a">Faster Than Expected</a> 
 below.
 </p><p>AVX-512  MFLOPS per MHz  was less than 32, one reason being that all instructions were not of the FMA variety, as shown in code disassemblies, shown <a href="#anchor27c">below</a>. These  indicate that the highest expected speed achievable by the FMA code is just over 76% of maximum with complete FMA instructions, or 24.4 MFLOPS/MHz, close to that obtained.
 </p><p>The performance adjustment is also shown to produce a likely reduction in Cray 1 maximum speed to 122 MFLOPS, executing these functions. The maximum Core i5 <b>single precision</b> speed of  <b>325915 MFLOPS</b> indicates a <b>Cray 1 gain of 2671 times</b>. 
 Maximum <b>double precision</b> result, from the next page, was <b>160641 MFLOPS</b> with a <b>gain of 1317 times</b>. 
 </p></span><p><span face="Verdana" size="2">Also <b>single precision results</b> on the next page indicate maximum 8 thread speed on <b>Raspberry Pi of  30150 MFLOPS</b> or <b>Cray 1 gain of 247 times</b> and <b>Android phone at 35686 MFLOPS</b> or <b>gain of 293 times</b>, both at Intel SSE SIMD level.
 </span>
 <div>
  <pre><b>Threads      1      2      4      8      1      2      4      8      1      2      4      8
KWDs Ops   SSE    SSE    SSE    SSE    AVX    AVX    AVX    AVX AVX512 AVX512 AVX512 AVX512

       Core i7 3900 MHz MFLOPS </b>
  102  2 10106  22704  47224  54668  11379  27114  56982  63095    N/A    N/A    N/A    N/A
 1024  2  9801  19227  36849  42389  10542  20127  39567  45256
10240  2  5856   9342  10120   9951   6004   9400  10165   9936

  102  8 24258  48818  91871  97077  36354  82307 169881 184765
 1024  8 24356  49258  91911  96902  34820  67057 130960 161412
10240  8 19421  34454  39855  39777  22340  36088  40372  39578

  102 32 23355  46711  88383  93448  45374  88045 171961 177649
 1024 32 23284  46883  88776  93381  45459  91277 172443 178895
10240 32 23107  46102  85346  92767  43834  86697 152019 157381

Maximum  24356  49258  91911  97077  45459  91277 172443 184765
MP Gains   1.0    2.0    3.8    4.0    1.0    2.0    3.8    4.1
AVX/SSE                                1.9    1.9    1.9    1.9
Max/MHz    6.2                        11.7
<b>
       Core i5 MFLOPS</b>
   102 2 24612  48845  46738  80544  29021  30791  86020  93812  37656  74288  72164 121973
  1024 2 21362  42345  43579  79180  21656  44753  44415  93920  23333  46844  58968 122122
 10240 2  7495  12295  13298  14067   7620  11160  13454  14020   9274  13455  13337  13995

   102 8 33271  65364  71105 119460  64946 128515 153955 210177  71895 142743 142554 241880
  1024 8 32614  65504  63763 118933  62120 127095 121959 210157  66304 134081 144756 239841
 10240 8 22467  38871  50079  56166  24963  42384  53438  56122  30345  49693  54170  56226

  102 32 33273  58673  69365 119426  64941 124972 133637 225265  94417 170909 324843 325915
 1024 32 32997  39974  86194 119313  64304 125772 125365 224014  91558 185785 324870 324936
10240 32 32777  64727  82112 116115  61061 114491 127026 200120  77458 140903 182219 222231

Maximum  33273  65504  86194 119460  64946 128515 153955 225265  94417 185785 324870 <b>325915</b>
MP Gains   1.0    2.0    2.6    3.6    1.0    2.0    2.4    3.5    1.0    2.0    3.4    3.5
AVX/SSE                                2.0    2.0    1.8    1.9
a512/AVX                                                           1.5    1.4    2.1    1.4
i5/i7      1.4    1.3    0.9    1.2    1.4    1.4    0.9    1.2
MHz       4150   4150   3600   3600   4150   4150   3600   3600   4150   4150   3600   3600
Max/MHz    8.0                        15.6                        22.8</pre>  
  </div>

 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor27b">continued below</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 

  <a name="anchor27b"></a>
 <h3><br>MP MFLOPS 2 - Intel DP, Android and Raspberry Pi SP</h3>
 The first columns in this table, provide Core i7 and Core i5 double precision MP MFLOPS results, using. 1 and 8 threads. Calculations below show that performance at 32 operations per word, and other high performing areas, was effectively at half single precision speed, as expected with SIMD. The lower ratios probably reflect half speed double precision calculations and overheads dealing with 64 bit numbers. 
<p>
Single precision results are also included for the 2000 MHz Kryo 570 Android phone and 1800 MHz Raspberry Pi 400. 
For these, SIMD level used is equivalent to Intel SSE. 
 Worse than MP Whetstone, this time the Kryo 570, using 8 threads,  was only three times faster than during the single thread test. Then, a CPU monitoring app indicated that six cores were running at 1804 MHz, with two at 768  MHz. 
 </p></span>
 <div>
  <pre><b>
           Core i7                     Core i5                                     Phone        RPi
Threads      1      8      1      8      1      8      1      8      1      8     1     8     1     8
 Ops/word  SSE    SSE    AVX    AVX    SSE    SSE    AVX    AVX AVX512 AVX512    SP    SP    SP    SP
</b>
   102 2  4921  28537   5290  32337  12437  38391  14606  43320  18872  60955  6977 15998  4015 10169
  1024 2  4820  21214   4772  19551   4978  29821   6351  32157   8120  35674  8034 14536  3865  9622
 10240 2  2949   4923   2946   4950   3604   6562   3683   6728   4442   6514  2984  2442   447   585

   102 8 12233  48924  17683  95178  16500  59285  32504 104046  35958 120212
  1024 8 12074  48679  16145  78149  12762  54904  19300  92706  22226 105465
 10240 8  9929  19774  10969  19845  10941  26897  12157  27045  14806  26544

  102 32 11742  46894  22880  89459  16602  58258  32420 111461  47200 160641 12178 34803  7902 28978
 1024 32 11697  46848  22667  88958  16314  59325  31215 107323  42515 151251 12139 35686  7860 30150
10240 32 11615  46395  21983  78687  16315  57399  30488  99303  38532 105812 12137 34050  7326  8537

Maximum  12233  48924  22880  95178  16602  59325  32504 111461  47200 <b>160641</b> 12178 <b>35686</b>  7902 <b>30150</b>
MP Gain    1.0    4.0    1.0    4.2    1.0    3.6    1.0    3.4    1.0    3.4   1.0   2.9   1.0   3.8
MF/MHZ    3.14          5.87           4.0           7.8          11.4          6.1         4.4
<b>
Double/Single Precision</b>
   102 2  0.49   0.52   0.46   0.51   0.51   0.48   0.50   0.46   0.50   0.50
  1024 2  0.49   0.50   0.45   0.43   0.23   0.38   0.29   0.34   0.35   0.29
 10240 2  0.50   0.49   0.49   0.50   0.48   0.47   0.48   0.48   0.48   0.47

   102 8  0.50   0.50   0.49   0.52   0.50   0.50   0.50   0.50   0.50   0.50
  1024 8  0.50   0.50   0.46   0.48   0.39   0.46   0.31   0.44   0.34   0.44
 10240 8  0.51   0.50   0.49   0.50   0.49   0.48   0.49   0.48   0.49   0.47

  102 32  0.50   0.50   0.50   0.50   0.50   0.49   0.50   0.49   0.50   0.49
 1024 32  0.50   0.50   0.50   0.50   0.49   0.50   0.49   0.48   0.46   0.47
10240 32  0.50   0.50   0.50   0.50   0.50   0.49   0.50   0.50   0.50   0.48
  </pre> 
  </div>
 <span face="Verdana" size="2">
  <a name="anchor30a"></a>
 <h3>MP Livermore Loops</h3>
 Four copies of the Livermore Loops Benchmark were run at the same time on the i5 laptop, with a longer  parameter for seconds per loop, each program running for around 15 minutes. Using all cores lead to the usual reduction in CPU MHz, but there may have been more throttling to counteract heating effects.  Single thread (Geomean) official  average speed was  4273 MFLOPS, compared with a per thread  average of 3375 here. However, the total throughput of  13500 MFLOPS indicates an <b>increase over Cray 1 of  1134 times</b>.
 </span>
 <div>
  <pre><b>
         ---------- AVX-512 DP MFLOPS ----------
 Thread  Maximum Average Geomean Harmean Minimum
</b>
    1    33413.3  5809.5  3430.8  2293.0   493.7
    2    35648.5  5576.5  3275.7  2223.1   552.1 
    3    35422.7  5953.9  3449.2  2300.6   505.1
    4    36895.5  5746.0  3344.4  2190.7   459.4</pre> 
  </div>


 <span face="Verdana" size="2">
  <a name="anchor30"></a>
 <h3>MP MFLOPS 4 to 64 Threads</h3>
 As indicated earlier, MP MFLOPS benchmark can handle up to 64 threads, with an execution command under LINUX  (such as ./MPmflops64AVX512 Threads 64). For correct operation, the specified number must be 1, 2, 4, 8, 16, 32 or 64. 
 Following are results on the i5 between 4 and 64 threds. These show that performance can be significantly improved using additional threads, the reason is due to data being allocated to a faster lower level cache.
 </span>
 <div>
  <pre>    4 Byte  Ops/  Repeat          MFLOPS Using Number Of Threads
     Words  Word  Passes       4        8       16       32       64

    102400     2   75000    72164   112210   155132   158133   153968
   1024000     2    7500    58968   108429   119118   117709   122011
  10240000     2     750    13337    13824    17251    60342   116964

    102400     8   75000   142554   210116   253359   270576   275220
   1024000     8    7500   144756   212406   233939   236110   242271
  10240000     8     750    54170    54988    64520   174245   235583

    102400    32   75000   324843   312508   316881   318233   327762
   1024000    32    7500   324870   308995   310405   325996   327897
  10240000    32     750   182219   204563   243408   301543   322605
  </pre> 
  </div>
 <span face="Verdana" size="2">

 <center><a href="#anchor27d">Performance Summary below</a> or <a href="#anchorStart">Go To Start</a></center> 
 

  <a name="anchor27d"></a>
 <h3><br>Performance Summary</h3>
 Following is a summary of most results, intended to show best case performance gains, over the Cray 1, for different classes of work.  
 Considering the Core i5 details, the first four are for programs that only use (or are intended to use) a single CPU core. The main one for Cray 1 comparison being Livermore Loops average. Linpack is the only one that provides a single measurement. Whetstones identify relative performance of scalar and vector processing. 
 As for MP benchmarks, vector single and double precision results are provided. The former can be used for comparison with those produced via the long word used by Cray, if the numeric accuracy is acceptable. 
 <p>The MP benchmark results can be used to represent multiple users running the same program or a single program executing multiple threads, each handling a dedicated segment of shared data. Again for the Core i5,  MP Whetstone MFLOPS were similar for double and single precision versions, with little opportunity for vectorisation.
 The simpler Whetstone calculations demonstrate the benefit of hyperthreading  with the 4 core, 8 thread throughput being nearly seven times faster than the standalone run. 
 On the other hand, MP MFLOPS suffered from the i5 running at a lower MHz  when four cores were being used, leading to 8 thread performance being less than four times faster than via 1 thread. This benchmark identified the highest Cray 1 performance gains of over 2600 times for single precision calculations, but half of this at double precision.
 </p><p>On cost/performance grounds, the Raspberry Pi 400 was better than the Core i5 laptop, in some of the early cases, but worse on others,   then  fell far behind on benchmarks that could benefit from compilation using Intel Advanced Vector instructions. Compared with the Cray 1, MP performance gains of up to 400 times  were recorded.  
 </p></span><p><span face="Verdana" size="2">Just considering performance of the Android phone, the more advanced ARM CPU used provided some significant gains over the Raspberry Pi, but lost the advantage, due to the big/LITTLE architecture,  on running the MP MFLOPS 8 thread test. Still, best Cray 1 performance gain was 757 times through using multiple cores.

 </span>
 <div><pre><b>
                             Core i5 AVX-512    Android Phone    Raspberry Pi 400
                     Cray 1           X Cray           X Cray           X Cray
</b>
CPU MHz 1 Thread         80     4150      52     2000      25     1800      23
CPU MHz 8 Thread        N/A     3600            &lt;1800             1800 

<b>1. Livermore Loops</b>
MFLOPS Max             82.1    47692     581     1620      20     3353      41
MFLOPS Average         11.9     4273     359     1468     123      938      79

<b>2. Linpack</b>
MFLOPS                   27     9088     337     1986      74     1337      50

<b>3. Whetstone</b>
MFLOPS                    6     1353     226      905     151      573      96

<b>4. Vector Whetstone</b>
MFLOPS DP Average        47    20346     433                      1184      25
MFLOPS DP Maximum              32907                              1216
MFLOPS SP Average              28303     602                      2131      45
MFLOPS SP Maximum              75094                              2506

<b>5. MP Whetstone</b>
MFLOPS DP Average         6     9126    1521
MFLOPS DP Maximum               9210
MFLOPS SP Average               9127    1521     4540     757     2402     400
MFLOPS SP Maximum               9203             4985             3284

<b>6. MP MFLOPS</b>
MFLOPS DP 1 Thread      122    47200     387
MFLOPS DP 8 Thread            160641    1317
MFLOPS SP 1 Thread             94417     774    12178     100     7902      65
MFLOPS SP 8 Thread            325915    2671    35686     293    30150     247</pre> 
  </div>

 <span face="Verdana" size="2">
  <a name="anchor27e"></a>
 </span></p><span face="Verdana" size="2">
 <h3>More Advanced Hardware</h3>
 Here, relative Cray 1 performance calculations, for Android devices and PCs, have been for mid range hardware. It is useful to consider apparent more powerful processors. 
 <p><b>CPU MHz</b> - In a given processing architecture,  performance is usually proportional to CPU MHz. This was clear in earlier times, when Pentium, Celeron and Xeon  processors had the same core processor. The above benchmarks were run on a Core i5 with maximum turbo speed of 4150 MHz  and an ARM CPU at 2000 MHz.  The latest 2022 processors appear to be rated at up to 5500 MHz for PCs and 3000 MHz for ARM based phones. These would affect the single core benchmarks but not excessively.
 </p><p><b>Multiple Cores</b> - At least for the laptop and phone used here, full benefits of multiple cores were not apparent. The laptop switched to a lower MHz and the phone�s 8 core big/LITTLE  processor maximum performance became not much better than the 4 core Raspberry Pi. Performance appears to be becoming even more unpredictable. The latest (that I have seen)  - Intel 24 threads over 16 cores, 8 at up to 5.1 GHz  and  8 to  3.8 GHz.Then ARM  that has cores 1 at 3200 MHz, 3 at 2420 MHz and  4 at 1800 MHz. 
 </p></span><p><span face="Verdana" size="2"><b>More Advanced CPU Options</b> - Some CPUs in the Core range have two 512-bit fused-multiply add (FMA) units that can, potentially, double SIMD performance of the right sort of application.  Judging by the improvement in adopting a higher level of SIMD here and consideration of heating effects, I would not bet on it.

 </span>
 </p><center><a href="#anchor27c">Disassembled Code Next</a> or <a href="#anchorStart">Go To Start</a></center> 
 

  <a name="anchor27c"></a>
 <h3><br>Disassembled Code</h3> 
 Disassembled code compiled to use AVX-512 and AVX instructions are listed below. The former includes vector fused multiply and add or subtract instructions. 
 With AVX-512 there are 21 arithmetic vector instructions and the expected 32  with AVX, the latter also applying for SSE code. Minimum instructions for full fused multiply and add type is 16, leading to  a  (16/21) 76.19% reduction in achievable speed.  This would lead the maximum Cray 1 MFLOPS for this code becoming 122, instead of 160. 
  
 <div>
  <pre> 
 <b>AVX-512                                     AVX</b>  
 L22:                                        L60:
    vmovupd (%rax), %zmm0                       vmovups (%rax), %xmm1
    addq    $64, %rax                           vinsertf128     $0x1, 16(%rax), %ymm1, %ymm1
    vaddpd  %zmm0, %zmm28, %zmm31               addq    $32, %rax
    vaddpd  %zmm0, %zmm30, %zmm1                vaddps  -24(%rsp), %ymm1, %ymm0
    vmulpd  %zmm27, %zmm31, %zmm31              vmulps  8(%rsp), %ymm0, %ymm15
    vfmsub132pd     %zmm29, %zmm31, %zmm        vaddps  40(%rsp), %ymm1, %ymm0
    vaddpd  %zmm0, %zmm26, %zmm31               vmulps  72(%rsp), %ymm0, %ymm0
    vfmadd231pd     %zmm31, %zmm25, %zmm        vsubps  %ymm0, %ymm15, %ymm0
    vaddpd  %zmm24, %zmm0, %zmm31               vaddps  104(%rsp), %ymm1, %ymm15
    vfnmadd132pd    %zmm23, %zmm1, %zmm3        vmulps  136(%rsp), %ymm15, %ymm15
    vaddpd  %zmm22, %zmm0, %zmm1                vaddps  %ymm15, %ymm0, %ymm0
    vfmadd231pd     %zmm21, %zmm1, %zmm3        vaddps  168(%rsp), %ymm1, %ymm15
    vaddpd  %zmm20, %zmm0, %zmm1                vmulps  -56(%rsp), %ymm15, %ymm15
    vfnmadd132pd    %zmm19, %zmm31, %zmm        vsubps  %ymm15, %ymm0, %ymm0
    vaddpd  %zmm18, %zmm0, %zmm31               vaddps  %ymm14, %ymm1, %ymm15
    vfmadd231pd     %zmm17, %zmm31, %zmm        vmulps  -88(%rsp), %ymm15, %ymm15
    vaddpd  %zmm16, %zmm0, %zmm31               vaddps  %ymm15, %ymm0, %ymm0
    vfnmadd132pd    %zmm15, %zmm1, %zmm3        vaddps  %ymm13, %ymm1, %ymm15
    vaddpd  %zmm14, %zmm0, %zmm1                vmulps  %ymm12, %ymm15, %ymm15
    vfmadd231pd     %zmm13, %zmm1, %zmm3        vsubps  %ymm15, %ymm0, %ymm0
    vaddpd  %zmm12, %zmm0, %zmm1                vaddps  %ymm11, %ymm1, %ymm15
    vaddpd  %zmm10, %zmm0, %zmm0                vmulps  %ymm10, %ymm15, %ymm15
    vfnmadd132pd    %zmm11, %zmm31, %zmm        vaddps  %ymm15, %ymm0, %ymm0
    vfmadd132pd     %zmm9, %zmm1, %zmm0         vaddps  %ymm9, %ymm1, %ymm15
    vmovupd %zmm0, -64(%rax)                    vmulps  %ymm8, %ymm15, %ymm15
    cmpq    %rax, %rcx                          vsubps  %ymm15, %ymm0, %ymm0
    jne     .L22                                vaddps  %ymm7, %ymm1, %ymm15
                                                vmulps  %ymm6, %ymm15, %ymm15
                                                vaddps  %ymm15, %ymm0, %ymm0
                                                vaddps  %ymm5, %ymm1, %ymm15
                                                vaddps  %ymm3, %ymm1, %ymm1
                                                vmulps  %ymm4, %ymm15, %ymm15
                                                vsubps  %ymm15, %ymm0, %ymm0
                                                vmulps  %ymm2, %ymm1, %ymm15
                                                vaddps  %ymm15, %ymm0, %ymm0
                                                vmovups %xmm0, -32(%rax)
                                                vextractf128    $0x1, %ymm0, -16(%rax)
                                                cmpq    %rdx, %rax
                                                jne     .L60

  </pre> 
  </div>

 <span face="Verdana" size="2">
 <center><a href="#anchor28">Benchmark Error Reports Next</a> or <a href="#anchorStart">Go To Start</a></center> 
 

 <a name="anchor28"></a>
 <h3><br>Benchmark Error Reports</h3>
 <b>Livermore Loops</b> benchmark displays details of results for each of the three times 24 sets of calculations. These include the final numeric results, whose values are included in the program and can vary slightly, depending on the hardware and compiler options.  The values under OK indicate  accuracy in terms of the number of decimal places, double precision numbers being said to be accurate up to 16 decimal places, but possibly subject to rounding errors. 
 </span><p><span face="Verdana" size="2">As indicated, there were differences in numeric results from the Core i5 laptop, with accuracy reducing from 15 or 16  decimal places to 12 or 13, using the AVX512 compile option.  Apparently, there is only one rounding for fused operations, as opposed to one for each separate instruction. 
 
 </span>
 <div>
  <pre><b>
Kernel       Floating Pt ops
No  Passes E No    Total      Secs.  MFLOPS Span     Checksums          OK

Earlier Compilation</b>
 6   3 x 658  2  1.566566e+09  0.89 1751.62   64  4.375116344729986e+03 16
 7   4 x 529 16  6.737344e+09  0.89 7529.02  995  6.104251075174761e+04 16
18   2 x 703 44  6.124536e+09  0.89 6867.09  100  1.015727037502299e+05 15
<b>Log Program report - Numeric results were as expected


AVX Compilation</b>
 6   3 x 814  2  1.937971e+09  1.00 1929.85   64  4.375116344729986e+03 16
 7   4 x 616 16  7.845376e+09  1.00 7835.67  995  6.104251075174761e+04 16
18   2 x1711 44  1.490623e+10  1.0014869.06  100  1.015727037502299e+05 15
<b>Log Program report - Numeric results were as expected


AVX512 Compilation</b>
 6   3 x 757  2  1.802266e+09  1.00 1802.82   64  4.375116344743195e+03 12
 7   4 x3738 16  4.760717e+10  1.00<b>47691.47</b>  995  6.104251075174966e+04 13
18   2 x2393 44  2.084782e+10  1.00<b>20781.51</b>  100  1.015727037502806e+05 12
<b>Log Program report - Examples of different numeric results </b>

 Test  6 result was  4.375116344743195e+03 expected  4.375116344729986e+03
 Test  7 result was  6.104251075174966e+04 expected  6.104251075174761e+04
 Test 18 result was  1.015727037502806e+05 expected  1.015727037502299e+05
  </pre> 
  </div>
 
 <span face="Verdana" size="2"> 
 </span></p><span face="Verdana" size="2">
 <h3>MP Linpack and Whetstone Benchmarks Error Reports</h3>
 </span><p><span face="Verdana" size="2">Similar sumcheck variations were recorded on running the Linpack and Whetstone benchmarks on the Core i5 based laptop. In both cases, as for the Livermore Loops example, the errors were not reported running on older hardware or from alternative compilations. 
 </span>
 <div>
  <pre>
 <b>Linpack AVX-512</b>
 Linpack Double Precision Unrolled Benchmark n @ 100
 Optimisation AVX512 64 Bit, Tue Dec  7 11:38:24 2021

 Speed    5151.83 MFLOPS

 Variable norm. resid Non-standard result was              1.9 instead of              1.7
 Variable resid       Non-standard result was   8.46778499e-14 instead of   7.41628980e-14
 Variable x[0]-1      Non-standard result was  -1.11799459e-13 instead of  -1.49880108e-14
 Variable x[n-1]-1    Non-standard result was  -9.60342916e-14 instead of  -1.89848137e-14

 <b>Whetstone SSE</b>
 Whetstone Double Precision SSE2 Benchmark Tue Jan 11 19:34:50 2022

 Test 5 Non-standard result was      0.49902937281518372 instead of      0.49902937281518167

  <b>Log file result</b>
   Loop content                  Result              MFLOPS      MOPS   Seconds

  N5 sin,cos etc.         0.49902937281518372                 281.276     2.089
  </pre> 
  </div>
 <span face="Verdana" size="2">
 </span></p><center><span face="Verdana" size="2"><a href="#anchor29">Run Time Displays Next</a> or <a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2"> 
 


 <a name="anchor29"></a>
 <h3><br>Run Time Displays</h3>
 The running times of benchmarks, used here, are calibrated to run  for a given noticeable time, with Windows and Linux versions displaying details on completion of individual test functions.  This automatic adjustment has currently survived more than 100 times increase in CPU MHz. The aim for Livermore Loops is currently 1 second for each of the 72 tests, 
 with Linpack 1 second for each of the 10 calculations and Whetstone 10 seconds overall.   
 </span>
 <div>
  <pre><b>
L.L.N.L. 'C' KERNELS: MFLOPS   P.C.  VERSION 4.0
</b>
Calculating outer loop overhead
      1000 times   0.00 seconds
     10000 times   0.00 seconds
    100000 times   0.00 seconds
   1000000 times   0.01 seconds
  10000000 times   0.04 seconds
  20000000 times   0.08 seconds
  40000000 times   0.16 seconds
  80000000 times   0.31 seconds
Overhead for each loop   3.9288e-09 seconds

Calibrating part 1 of 3

Loop count          4  0.00 seconds
Loop count         16  0.00 seconds
Loop count         64  0.00 seconds
Loop count        256  0.01 seconds

Loops  200 x  1 x Passes

Kernel       Floating Pt ops
No  Passes E No    Total      Secs.  MFLOPS Span     Checksums          OK
------------ -- ------------- ----- ------- ---- ---------------------- --
 1   7 x1566  5  1.097296e+10  0.9811171.25 1001  5.114652693224671e+04 16
 2  67 x 595  4  3.093524e+09  0.98 3164.40  101  1.539721811668385e+03 15
 3   9 x 657  2  2.367565e+09  0.95 2494.82 1001  1.000742883066363e+01 15
 4  14 x 728  2  2.446080e+09  0.96 2555.68 1001  5.999250595473891e-01 16
 5  10 x 234  2  9.360000e+08  0.95  980.20 1001  4.548871642387267e+03 16
 6   3 x 904  2  2.152243e+09  0.95 2276.20   64  4.375116344729986e+03 16
 7   4 x 975 16  1.241760e+10  1.0312101.10  995  6.104251075174761e+04 16
 8  10 x 385 36  5.488560e+09  0.95 5788.45  100  1.501268005625795e+05 15
 9  36 x 536 17  6.626246e+09  0.96 6926.99  101  1.189443609974981e+05 16
10  34 x 456  9  2.818627e+09  0.95 2973.11  101  7.310369784325296e+04 16
11  11 x 565  1  1.243000e+09  0.95 1309.65 1001  3.342910972650109e+07 16
12  12 x1201  1  2.882400e+09  0.95 3030.87 1000  2.907141294167248e-05 16
13  36 x 177  7  5.709312e+08  0.95  600.71   64  1.202533961842805e+11 15
14   2 x 290 11  1.277276e+09  0.95 1347.14 1001  3.165553044000335e+09 15
15   1 x 660 33  2.178000e+09  0.96 2268.96  101  3.943816690352044e+04 15
16  25 x 768 10  2.035200e+09  0.94 2153.77   75  5.650760000000000e+05 16
17  35 x 368  9  2.341584e+09  0.96 2447.92  101  1.114641772902486e+03 16
18   2 x 733 44  6.385896e+09  0.97 6567.18  100  1.015727037502299e+05 15
19  39 x 215  6  1.016262e+09  0.95 1070.62  101  5.421816960147207e+02 16
20   1 x 187 26  9.724000e+08  0.95 1021.36 1000  3.040644339351239e+07 16
21   1 x 302  2  7.625500e+09  0.95 8021.31  101  1.597308280710199e+08 15
22  11 x 356 17  1.344754e+09  0.95 1416.60  101  2.938604376566697e+02 16
23   8 x 223 11  1.942776e+09  0.95 2045.20  100  3.549900501563623e+04 16
24   5 x1553  1  1.553000e+09  0.95 1637.44 1001  5.000000000000000e+02 16

                     Maximum   Rate12101.10 
                     Average   Rate 3557.12 
                     Geometric Mean 2580.73 
                     Harmonic  Mean 1966.74 
                     Minimum   Rate  600.71 

                     Do Span    471

Calibrating part 2 of 3

Loop count          8  0.00 seconds
Loop count         32  0.00 seconds
Loop count        128  0.00 seconds

Loops  200 x  2 x Passes

Kernel       Floating Pt ops
No  Passes E No    Total      Secs.  MFLOPS Span     Checksums          OK
------------ -- ------------- ----- ------- ---- ---------------------- --
 1  40 x1061  5  8.572880e+09  0.98 8769.29  101  5.253344778937972e+02 16
 2  40 x 495  4  3.072960e+09  1.01 3046.39  101  1.539721811668385e+03 15
 3  53 x 595  2  2.548028e+09  1.00 2536.39  101  1.009741436578952e+00 16
 4  70 x 949  2  3.188640e+09  1.00 3194.69  101  5.999250595473891e-01 16
 5  55 x 247  2  1.086800e+09  1.00 1082.99  101  4.589031939600982e+01 16
 6   7 x 760  2  2.042880e+09  0.98 2081.44   32  8.631675645333210e+01 16
 7  22 x 858 16  1.220145e+10  0.9912378.97  101  6.345586315784055e+02 16

 <center>More Below or <a href="#anchorStart">Go To Start</a></center> 
 

 8   6 x 338 36  5.782234e+09  1.00 5784.83  100  1.501268005625795e+05 15
 9  21 x 483 17  6.966212e+09  1.00 6934.93  101  1.189443609974981e+05 16
10  19 x 431  9  2.977520e+09  1.01 2952.22  101  7.310369784325296e+04 16
11  64 x 536  1  1.372160e+09  1.00 1366.60  101  3.433560407475758e+04 16
12  68 x 931  1  2.532320e+09  1.04 2443.43  100  7.127569130821465e-06 16
13  41 x 165  7  6.061440e+08  1.00  603.71   32  9.816387810944356e+10 15
14  10 x 373 11  1.657612e+09  1.01 1640.50  101  3.039983465145392e+07 15
15   1 x 348 33  2.296800e+09  1.00 2295.02  101  3.943816690352044e+04 15
16  27 x 748 10  2.261952e+09  1.01 2241.47   40  6.480410000000000e+05 16
17  20 x 340  9  2.472480e+09  1.01 2441.10  101  1.114641772902486e+03 16
18   1 x 753 44  6.560136e+09  0.99 6608.43  100  1.015727037502299e+05 15
19  23 x 192  6  1.070438e+09  1.02 1053.29  101  5.421816960147207e+02 16
20   8 x 125 26  1.040000e+09  1.01 1031.93  100  3.126205178815431e+04 16
21   1 x 324  2  8.100000e+09  1.00 8099.88   50  7.824524877232093e+07 16
22   7 x 295 17  1.418242e+09  1.00 1415.93  101  2.938604376566697e+02 16
23   5 x 188 11  2.047320e+09  1.00 2044.93  100  3.549900501563623e+04 16
24  31 x 881  1  1.092440e+09  1.00 1087.94  101  5.000000000000000e+01 16

                     Maximum   Rate12378.97 
                     Average   Rate 3464.01 
                     Geometric Mean 2544.88 
                     Harmonic  Mean 1951.83 
                     Minimum   Rate  603.71 

                     Do Span     90

Calibrating part 3 of 3

Loop count         32  0.00 seconds
Loop count        128  0.00 seconds
Loop count        512  0.00 seconds
Loop count       2048  0.01 seconds

Loops  200 x  8 x Passes

Kernel       Floating Pt ops
No  Passes E No    Total      Secs.  MFLOPS Span     Checksums          OK
------------ -- ------------- ----- ------- ---- ---------------------- --
 1  28 x1795  5  1.085616e+10  1.0010866.23   27  3.855104502494961e+01 16
 2  46 x 748  4  2.422323e+09  1.00 2415.89   15  3.953296986903059e+01 16
 3  37 x1126  2  3.599597e+09  1.01 3575.44   27  2.699309089320672e-01 16
 4  38 x1471  2  2.683104e+09  1.00 2685.18   27  5.999250595473891e-01 16
 5  40 x 473  2  1.574144e+09  1.02 1546.96   27  3.182615248447483e+00 16
 6  21 x1047  2  1.688602e+09  1.01 1665.66    8  1.120309393467088e+00 15
 7  20 x1082 16  1.163366e+10  0.9412311.54   21  2.845720217644024e+01 16
 8   9 x 427 36  5.755277e+09  1.00 5741.74   14  2.960543667875005e+03 15
 9  26 x 664 17  7.043712e+09  1.00 7015.77   15  2.623968460874250e+03 16
10  25 x 557  9  3.007800e+09  1.02 2959.56   15  1.651291227698265e+03 16
11  46 x1015  1  1.942304e+09  1.02 1901.09   27  6.551161335845770e+02 16
12  48 x1714  1  3.422515e+09  1.02 3359.57   26  1.943435981130448e-06 16
13  31 x 226  7  6.277376e+08  1.01  621.29    8  3.847124199949431e+10 15
14   8 x 490 11  1.862784e+09  1.01 1853.19   27  2.923540598672009e+06 15
15   1 x 639 33  2.361744e+09  1.00 2361.30   15  1.108997288134785e+03 16
16  14 x 974 10  2.399936e+09  1.00 2394.06   15  5.152160000000000e+05 16
17  26 x 513  9  2.881008e+09  1.00 2875.92   15  2.947368618589361e+01 16
18   2 x 647 44  5.921344e+09  1.00 5907.72   14  9.700646212337041e+02 16
19  28 x 273  6  1.100736e+09  1.02 1074.17   15  1.268230698051003e+01 15
20   7 x 145 26  1.097824e+09  1.02 1077.78   26  5.987713249475302e+02 16
21   1 x 212  2  8.480000e+09  1.01 8435.26   20  5.009945671204667e+07 16
22   8 x 421 17  1.374144e+09  1.00 1373.68   15  6.109968728263972e+00 16
23   7 x 356 11  2.850848e+09  1.00 2862.02   14  4.850340602749970e+02 16
24  23 x 952  1  9.108736e+08  1.00  910.11   27  1.300000000000000e+01 16

                     Maximum   Rate12311.54 
                     Average   Rate 3657.96 
                     Geometric Mean 2704.87 
                     Harmonic  Mean 2064.49 
                     Minimum   Rate  621.29 

                     Do Span     19

                Overall

                Part 1 weight 1
                Part 2 weight 2
                Part 3 weight 1

                     Maximum   Rate12378.97 
                     Average   Rate 3535.78 
                     Geometric Mean 2593.02 
                     Harmonic  Mean 1982.64 
                     Minimum   Rate  600.71 

                     Do Span    167
 <center> More Below or <a href="#anchorStart">Go To Start</a></center> 
 
<b>
Unrolled Double Precision Linpack Benchmark - PC Version in 'C/C++'
</b>
Optimisation AVX 64 Bit

norm resid      resid           machep         x[0]-1          x[n-1]-1
   1.7    7.41628980e-14   2.22044605e-16  -1.49880108e-14  -1.89848137e-14

Times are reported for matrices of order          100
1 pass times for array with leading dimension of  201

      dgefa      dgesl      total     Mflops       unit      ratio
    0.00016    0.00001    0.00017    4091.04     0.0005     0.0030

Calculating matgen overhead
        10 times   0.00 seconds
       100 times   0.00 seconds
      1000 times   0.03 seconds
     10000 times   0.28 seconds
     20000 times   0.54 seconds
     40000 times   1.02 seconds
Overhead for 1 matgen      0.00003 seconds

Calculating matgen/dgefa passes for 1 seconds
        10 times   0.00 seconds
       100 times   0.02 seconds
      1000 times   0.17 seconds
      2000 times   0.32 seconds
      4000 times   0.64 seconds
      8000 times   1.27 seconds
Passes used       6311 

Times for array with leading dimension of 201

      dgefa      dgesl      total     Mflops       unit      ratio
    0.00013    0.00000    0.00014    5049.22     0.0004     0.0024
    0.00013    0.00000    0.00014    4949.89     0.0004     0.0025
    0.00013    0.00000    0.00014    4956.75     0.0004     0.0025
    0.00013    0.00000    0.00014    5048.17     0.0004     0.0024
    0.00013    0.00000    0.00014    5049.18     0.0004     0.0024
Average                              5010.64

Calculating matgen2 overhead
Overhead for 1 matgen      0.00003 seconds

Times for array with leading dimension of 200

      dgefa      dgesl      total     Mflops       unit      ratio
    0.00012    0.00000    0.00013    5372.95     0.0004     0.0023
    0.00012    0.00000    0.00013    5374.23     0.0004     0.0023
    0.00012    0.00000    0.00013    5370.76     0.0004     0.0023
    0.00012    0.00000    0.00013    5462.18     0.0004     0.0022
    0.00012    0.00000    0.00013    5463.74     0.0004     0.0022
Average                              5408.77

Unrolled Double  Precision     5010.64 Mflops 

<b>
Single Precision C Whetstone Benchmark AVX 64 Bit, Tue Jan 18 23:29:03 2022
</b>
Calibrate
       0.01 Seconds          1   Passes (x 100)
       0.01 Seconds          5   Passes (x 100)
       0.05 Seconds         25   Passes (x 100)
       0.23 Seconds        125   Passes (x 100)
       1.12 Seconds        625   Passes (x 100)
       5.49 Seconds       3125   Passes (x 100)

Use 5695  passes (x 100)

          Single Precision C/C++ Whetstone Benchmark

Loop content                  Result              MFLOPS      MOPS   Seconds

N1 floating point     -1.12475013732910156      1324.013              0.083
N2 floating point     -1.12274742126464844      1319.724              0.580
N3 if then else        1.00000000000000000                   0.000    0.000
N4 fixed point        12.00000000000000000                6512.599    0.275
N5 sin,cos etc.        0.49911010265350342                 134.391    3.526
N6 floating point      0.99999982118606567       977.216              3.144
N7 assignments         3.00000000000000000                3908.815    0.269
N8 exp,sqrt etc.       0.75110864639282227                  99.207    2.135

MWIPS                                           5688.198             10.012
  </pre> 
  </div>

 <span face="Verdana" size="2">
 <center><a href="#anchor29a">Faster Than Expected Next</a> or <a href="#anchorStart">Go To Start</a></center> 
 


 <a name="anchor29a"></a>
 <h3><br>Faster Than Expected</h3>
 The following is intended to show that it is not just my MP MFLOPS benchmark that provides performance levels higher than expected via compilations using SSE and AVX instructions, in this case dealing with  double precision variables.  The other benchmark considered is the naturally double precision Livermore Loops. In both cases, disassembled code was checked to ensure that there were no Fused Multiply and Add (FMA) type  instructions. Then, according to viewed documentation, maximum performance using SSE functions is 2.0 MFLOPS per MHz, using 128-bit xmm registers, and 4.0 using  256-bit AVX with ymm registers. 
 <p>Below, the Livermore Loops example shows the full displayed output for the kernel producing maximum MFLOPS, the source code with 16 floating point operations and compile commands used.
 The SSE example indicates 3.56 MFLOPS per MHz, thought to be impossible without FMA. The AVX results provide 4.86 MFLOPS per MHz 21.5% higher than expected maximum.
 </p><p>The same range of results, source code and compile options are provided for MP MFLOPS benchmark these combinations of instructions., running via a single thread. Looking at the first word size details, least likely to involve RAM data transfers, SSE 12437 to  16602 MFLOPS equates to 3.00 to 4.00 per MHz and AVX 14606 to 32420 MFLOPS at 3.53 to 7.81 per MHz. These ranges include Livermore Loops ratios,  but the larger ones are higher than might be expected using FMA, with the particular combination of instructions shown. 
 </p></span><p><span face="Verdana" size="2">Unexpected high  levels of performance were also produced on running the benchmarks on the much older Core i7 PC. Livermore Loops SSE maximum was 3.05 MFLOPS per MHz and 1 thread DP MP-MFLOPS with SSE 3.14 and AVX 5.87 MFLOPS per MHz.
 </span>
 <div>
  <pre> <b>4150 MHz Core i5 Livermore Loops Benchmark 

 Kernel       Floating Pt ops
 No  Passes E No    Total      Secs.   MFLOPS Span     Checksums          OK
------------ -- ------------- ----- ------- ---- ---------------------- --
 SSE2</b>
 7   4 x1037 16  1.320723e+10  0.89 14782.74  995  6.104251075174761e+04 16
 <b>AVX</b>
 7   4 x1423 16  1.812333e+10  0.90 20184.30  995  6.104251075174761e+04 16

 <b>Kernel 7 C Code</b>
        for ( k=0 ; k &lt; n ; k++ )
         {
            x[k] = u[k] + r*( z[k] + r*y[k] ) +
                   t*( u[k+3] + r*( u[k+2] + r*u[k+1] ) +
                      t*( u[k+6] + q*( u[k+5] + q*u[k+4] ) ) );
         }

 <b>Compiled With</b> gcc lloops.c -O3 -msse2 -m64 -lrt -lc -lm -o lloopssse2
 <b>          and</b> gcc lloops.c -O3 -mavx  -m64 -lrt -lc -lm -o lloopsavx

 #####################################################
 <b>4150 MHz Core i5 MP  DP MFLOPS Benchmark 1 Thread

  Test             4 Byte  Ops/   Repeat    Seconds   MFLOPS       First   All
                    Words  Word   Passes                         Results  Same
 SSE2</b>
 Data in &amp; out     102400     2    75000   1.234995    12437    0.414016   Yes
 Data in &amp; out    1024000     2     7500   3.085865     4978    0.812316   Yes
 Data in &amp; out   10240000     2      750   4.262126     3604    0.977908   Yes

 Data in &amp; out     102400     8    75000   3.723678    16500    0.563491   Yes
 Data in &amp; out    1024000     8     7500   4.814260    12762    0.883058   Yes
 Data in &amp; out   10240000     8      750   5.615416    10941    0.986707   Yes

 Data in &amp; out     102400    32    75000  14.803324    16602    0.353716   Yes
 Data in &amp; out    1024000    32     7500  15.063927    16314    0.723569   Yes
 Data in &amp; out   10240000    32      750  15.063069    16315    0.964957   Yes

 <b>AVX</b> 
 Data in &amp; out     102400     2    75000   1.051636    14606    0.414016   Yes
 Data in &amp; out    1024000     2     7500   2.418388     6351    0.812316   Yes
 Data in &amp; out   10240000     2      750   4.170949     3683    0.977908   Yes

 Data in &amp; out     102400     8    75000   1.890234    32504    0.563491   Yes
 Data in &amp; out    1024000     8     7500   3.183412    19300    0.883058   Yes
 Data in &amp; out   10240000     8      750   5.054079    12157    0.986707   Yes

 Data in &amp; out     102400    32    75000   7.580423    32420    0.353716   Yes
 Data in &amp; out    1024000    32     7500   7.873082    31215    0.723569   Yes
 Data in &amp; out   10240000    32      750   8.061002    30488    0.964957   Yes

  <b>C Function Code 8 Operationss per Word</b>
     for(i=0; i &lt; n; i++)
     x[i] = (x[i]+a)*b-(x[i]+c)*d+(x[i]+e)*f;

 <b>Compiled With</b> gcc mpmflops2dp.c -lpthread -msse2 -lrt -lc -lm -O3 -o MPmflops64SSE2DP
 <b>          and</b> gcc mpmflops2dp.c -lpthread  -mavx -lrt -lc -lm -O3 -o MPmflops64AVXDP 
  </pre></div>
 <span face="Verdana" size="2">

  </span></p><center><span face="Verdana" size="2"><a href="#anchorStart">Go To Start</a></span></center><span face="Verdana" size="2">
   </span>
 </td>
 </tr>
</tbody></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[x86-64 Assembly Language Programming with Ubuntu (2022) (174 pts)]]></title>
            <link>http://www.egr.unlv.edu/~ed/x86.html</link>
            <guid>38758063</guid>
            <pubDate>Sun, 24 Dec 2023 23:28:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://www.egr.unlv.edu/~ed/x86.html">http://www.egr.unlv.edu/~ed/x86.html</a>, See on <a href="https://news.ycombinator.com/item?id=38758063">Hacker News</a></p>
<div id="readability-page-1" class="page">


<h2>By Ed Jorgensen<br>
</h2>

&nbsp;

<p><img alt="x86-64 Assembly Language Programming with Ubuntu Cover Page" src="http://www.egr.unlv.edu/~ed/asmCover.jpg"><br>
</p>

<p><big><big><span color="#000000">The purpose of this text is to
provide a reference for University level assembly language and systems
programming courses.&nbsp; Specifically, this text addresses the x86-64
instruction set for the popular x86-64 class of processors using the
Ubuntu 64-bit Operating System (OS).&nbsp; While the provided code and
various examples should work under any Linux-based 64-bit OS, they have
only been tested under Ubuntu 14/16/18 LTS (64-bit).</span></big></big></p>

<big><span>x86 Text, PDF Format:</span>&nbsp;
<a href="http://www.egr.unlv.edu/~ed/assembly64.pdf">x86-64 Assembly Language Programming with
Ubuntu</a></big>
</div>]]></description>
        </item>
        <item>
            <title><![CDATA[The era of American computer magazines has drawn to a close (261 pts)]]></title>
            <link>https://bytecellar.com/2023/12/23/the-era-of-american-computer-magazines-has-drawn-to-a-close/</link>
            <guid>38757887</guid>
            <pubDate>Sun, 24 Dec 2023 23:03:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://bytecellar.com/2023/12/23/the-era-of-american-computer-magazines-has-drawn-to-a-close/">https://bytecellar.com/2023/12/23/the-era-of-american-computer-magazines-has-drawn-to-a-close/</a>, See on <a href="https://news.ycombinator.com/item?id=38757887">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						
<figure><img decoding="async" fetchpriority="high" width="1200" height="900" src="https://bytecellar.com/wp-content/uploads/2023/12/bootmpc_1280.jpg" alt="" srcset="https://bytecellar.com/wp-content/uploads/2023/12/bootmpc_1280.jpg 1200w, https://bytecellar.com/wp-content/uploads/2023/12/bootmpc_1280-300x225.jpg 300w, https://bytecellar.com/wp-content/uploads/2023/12/bootmpc_1280-1024x768.jpg 1024w, https://bytecellar.com/wp-content/uploads/2023/12/bootmpc_1280-768x576.jpg 768w" sizes="(max-width: 1200px) 100vw, 1200px"></figure>



<p>I’ve been buying a copy of <em>Maximum PC</em> magazine at the airport newsstand on every long-distance trip I’ve taken over the past two decades. I’m primarily a Mac user but <em>Maximum PC</em>, which started life as <em>boot</em>, bought at these intervals kept me comfortably up to date on the state of affairs in the PC hardware world. Thumbing through these issues a few times a year, I got an overall feel for what was the state of the art in PC CPUs, GPUs, motherboards, RAM technology, and so on. I’ve got all of these issues over there on the shelf, handy to look back on when trying to assess this or that mildly-vintage system that might come my way. </p>



<p>But, when I flew to Boston this spring, I couldn’t find my copy of <em>Maximum PC</em> on the newsstand. It wasn’t at Washington National or at Logan, on either end of the week-long trip. A few days later when I was back in town, I checked the local Barnes and Noble for the current issue and wasn’t able to find it there, either. </p>



<p>It was then that I did a bit of searching on the web and was rather alarmed to find <em>Technologizer</em>‘s recent post, “<a href="https://technologizer.com/2023/04/15/the-end-of-computer-magazines-in-america/#:~:text=With%20Maximum%20PC%20and%20MacLife%27s,and%20was%20quite%20a%20run.">The End of Computer Magazines in America,</a>” subtitled “With <em>Maximum PC</em> and <em>MacLife</em>’s abandonment of print, the dead-tree era of computer journalism is officially over. It lasted almost half a century—and was quite a run.” I lament that the April 2023 issues of both of the aforementioned magazines’ were there last. Indeed, I do lament.</p>



<figure><img decoding="async" width="1201" height="567" src="https://bytecellar.com/wp-content/uploads/2015/08/cc_mags.jpg" alt="Creative Computing magazines" srcset="https://bytecellar.com/wp-content/uploads/2015/08/cc_mags.jpg 1201w, https://bytecellar.com/wp-content/uploads/2015/08/cc_mags-300x142.jpg 300w, https://bytecellar.com/wp-content/uploads/2015/08/cc_mags-1024x483.jpg 1024w" sizes="(max-width: 1201px) 100vw, 1201px"></figure>



<p>Ever since I got my first home computer on Christmas morning, 1982, I have been buying and reading computer magazines. Some general — <em>Creative Computing, BYTE, Compute!, Personal Computing, Computers &amp; Electronics, Pen Computing, Next Generation, </em>etc. — and some platform specific — <em>A+, InCider, ’99er, AmigaWorld, STart, INFO 64, NeXTWorld,</em> etc. — these magazines riveted me with the promises of upcoming software, hardware, new systems, and the like in a world before the internet when monthly magazines like these were how we knew what was coming. They were what got me excited about the Next Big Thing. </p>



<p>And now, basically all American computer print magazines have vanished. Some have gone online in various fashions…but it’s not the same. Coming to realize that this reality had crept slowly upon me was a sad moment.</p>


<div>
<figure><img decoding="async" width="300" height="205" src="https://bytecellar.com/wp-content/uploads/2005/07/10349498653_9a77d3aa16_k-300x205.jpg" alt="Pen Computing Magazines" srcset="https://bytecellar.com/wp-content/uploads/2005/07/10349498653_9a77d3aa16_k-300x205.jpg 300w, https://bytecellar.com/wp-content/uploads/2005/07/10349498653_9a77d3aa16_k-768x524.jpg 768w, https://bytecellar.com/wp-content/uploads/2005/07/10349498653_9a77d3aa16_k-1024x699.jpg 1024w, https://bytecellar.com/wp-content/uploads/2005/07/10349498653_9a77d3aa16_k.jpg 2048w" sizes="(max-width: 300px) 100vw, 300px"></figure></div>


<p>It is the case that the British computer magazine business is still rolling along, to some degree. Indeed, I have been a subscriber of <em>Retro Gamer</em> magazine since it started up in 2004 and it has taught me most of what I know about the ZX Spectrum, BBC Micro, Amstrad CPC, and other British machines of the sort. (<a href="https://bytecellar.com/2015/12/07/on-being-featured-in-retro-gamers-collectors-corner/">I was featured</a> in issue 148, in fact.) But, the systems that were in use here in the U.S. and those that were in use across the pond — especially early on in the home computer era — differed notably, and it is the American magazines that formed my notion of the computing industry relevant to me as a whole. </p>



<p>I am glad to have saved what magazines I did (though sadly most I let go, sold with various systems <a href="https://bytecellar.com/2019/05/08/computer-classifieds-dating-back-over-35-years-uncovered/">as I moved from one to the next</a>) and to have acquired some here and there since beginning my vintage computer collection. I still flip through those old magazines from time to time, which is a part of my vintage computing hobby that I quite enjoy. But, it seems my magazine shelves are unlikely to find themselves much more burdened, now that this era of computing history has drawn to a close. </p>
											</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Time is encoded in the weights of finetuned language models (105 pts)]]></title>
            <link>https://arxiv.org/abs/2312.13401</link>
            <guid>38757269</guid>
            <pubDate>Sun, 24 Dec 2023 21:53:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://arxiv.org/abs/2312.13401">https://arxiv.org/abs/2312.13401</a>, See on <a href="https://news.ycombinator.com/item?id=38757269">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content-inner">
    
    
                
    <p><a href="https://arxiv.org/pdf/2312.13401.pdf">Download PDF</a>
    <a href="https://browse.arxiv.org/html/2312.13401v1">HTML (experimental)</a></p><blockquote>
            <span>Abstract:</span>We present time vectors, a simple tool to customize language models to new time periods. Time vectors are created by finetuning a language model on data from a single time (e.g., a year or month), and then subtracting the weights of the original pretrained model. This vector specifies a direction in weight space that, as our experiments show, improves performance on text from that time period. Time vectors specialized to adjacent time periods appear to be positioned closer together in a manifold. Using this structure, we interpolate between time vectors to induce new models that perform better on intervening and future time periods, without any additional training. We demonstrate the consistency of our findings across different tasks, domains, model sizes, and time scales. Our results suggest that time is encoded in the weight space of finetuned models.
    </blockquote>

    <!--CONTEXT-->
    
  </div><div>
      <h2>Submission history</h2><p> From: Kai Nylund [<a href="https://arxiv.org/show-email/0148ca17/2312.13401">view email</a>]      <br>    <strong>[v1]</strong>
        Wed, 20 Dec 2023 20:04:45 UTC (8,942 KB)<br>
</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA["Attention", "Transformers", in Neural Network "Large Language Models" (255 pts)]]></title>
            <link>http://bactra.org/notebooks/nn-attention-and-transformers.html</link>
            <guid>38756888</guid>
            <pubDate>Sun, 24 Dec 2023 21:10:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://bactra.org/notebooks/nn-attention-and-transformers.html">http://bactra.org/notebooks/nn-attention-and-transformers.html</a>, See on <a href="https://news.ycombinator.com/item?id=38756888">Hacker News</a></p>
Couldn't get http://bactra.org/notebooks/nn-attention-and-transformers.html: Error: getaddrinfo ENOTFOUND bactra.org]]></description>
        </item>
        <item>
            <title><![CDATA[Medical schools do not prepare students to care for autistic or disabled people (165 pts)]]></title>
            <link>https://www.statnews.com/2023/12/11/medical-schools-idd-education-intellectual-developmental-disabilities-patients/</link>
            <guid>38756871</guid>
            <pubDate>Sun, 24 Dec 2023 21:07:56 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.statnews.com/2023/12/11/medical-schools-idd-education-intellectual-developmental-disabilities-patients/">https://www.statnews.com/2023/12/11/medical-schools-idd-education-intellectual-developmental-disabilities-patients/</a>, See on <a href="https://news.ycombinator.com/item?id=38756871">Hacker News</a></p>
<div id="readability-page-1" class="page"><section>
	<p><span><span>O</span></span>liver McGowan was 18 years old when he was hospitalized in England with recurrent seizures and pneumonia. He was autistic, and he and his parents had one specific request for the medical team: no antipsychotic medications. When he had taken them in the past, they made his seizures worse and had devastating effects on his mood. Despite the family’s vehement protests, doctors gave him an antipsychotic. A few days later, Oliver suffered a lethal neurological side effect. A week later, he was taken off life support. An inquest into his death found that the drug had led to the rapid deterioration.</p>
<p>After his death in 2016, his mother, Paula, launched a campaign to mandate training on intellectual disability and autism for health care workers. In 2022, <a href="https://www.hee.nhs.uk/our-work/learning-disability/current-projects/oliver-mcgowan-mandatory-training-learning-disability-autism/background" target="_blank" rel="noopener">the U.K. National Health Service listened</a>. Now, all health care workers in the NHS must complete both an <a href="https://www.e-lfh.org.uk/programmes/the-oliver-mcgowan-mandatory-training-on-learning-disability-and-autism/#:~:text=a%20learning%20disability.-,The%20Oliver%20McGowan%20Mandatory%20Training%20on%20Learning%20Disability%20and%20Autism,tiers%20consist%20of%202%20parts." target="_blank" rel="noopener">online module and a live interactive session</a> covering communication and accommodations needed for this population. The U.S. needs to follow suit, starting with medical schools.</p>
<p>Though there are <a href="https://publications.ici.umn.edu/risp/infographics/people-with-idd-in-the-united-states-and-the-proportion-who-receive-services" target="_blank" rel="noopener">7.4 million Americans</a> with intellectual and developmental disabilities, <a href="https://med.stanford.edu/content/dam/sm/neurodiversity/documents/Manuscripts/Clarke-2022---The-impact-of-autism-related-training-programs-on-physician-knowledge-self-efficacy-and-practice-behavior--A-systematic-review.pdf" target="_blank" rel="noopener">physicians are often uncomfortable</a> treating them. <a href="https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8722582/" target="_blank" rel="noopener">In a recent survey</a> of 714 Massachusetts physicians across various specialties, only 40% reported being very confident treating physically or intellectually disabled patients, and just 56% strongly agreed that they’d welcome disabled patients into their practice. <a href="https://pubmed.ncbi.nlm.nih.gov/26334872/" target="_blank" rel="noopener">Another study</a> found that 77% of physicians reported only poor or fair ability to care for autistic individuals, in particular. It is no wonder that families struggle to find disability-friendly practices, and that people with intellectual and developmental disorders are <a href="https://pubmed.ncbi.nlm.nih.gov/35357055/" target="_blank" rel="noopener">four times more likely</a> than neurotypical people to have unmet health care needs.</p>
		
		
<p>I know firsthand what these barriers can look like because my twin brother is the <a href="https://www.usnews.com/news/health-news/articles/2023-07-13/nearly-1-in-10-u-s-children-has-a-developmental-disability-cdc" target="_blank" rel="noopener">1 in nearly 10 U.S. children</a> diagnosed with an intellectual and/or developmental disability. His profound autism and nonverbal status mean my family lives with anxiety about taking him to the hospital or even about finding physicians willing to treat him. This past summer, my mother had to call 12 oral surgery practices before finding a surgeon willing to extract my brother’s painful wisdom tooth. Now, as a new medical student, I’m starting to understand why the health care system is so unwelcoming to people with intellectual/developmental disabilities (IDDs).</p>
<p>Many of the schools that offer education on these topics do so only in the form of an elective, which tends to attract a self-selecting group of students already interested in IDD health, particularly those pursuing residencies in neurology or psychiatry.</p>
<p>But anyone who wants to be a practicing doctor in any specialty needs to know how to work with patients with IDD. My brother sees a primary care provider, dentist, allergist, ophthalmologist, and gastroenterologist. Women and girls with IDDs also need routine care from a gynecologist. These patients require medical care from every discipline, which means that learning to care for them should be a mandatory part of medical school curricula.</p>
<p>Yet efforts to integrate more IDD education have been slow. In 2009, the American Academy of Developmental Medicine and Dentistry created a funding source to eliminate financial barriers for all U.S. medical schools to integrate robust IDD education in their curricula. The <a href="https://www.aadmd.org/niche" target="_blank" rel="noopener">National Curriculum Initiative in Developmental Medicine</a> program offers grants and resources to schools willing to undertake this curricular addition. As of 2023, only <a href="https://www.aadmd.org/medical-school-partners" target="_blank" rel="noopener">15% of U.S. medical schools</a> have taken advantage of these grants.</p>
<p>I’m very grateful to attend one of the few medical schools that did so, just four years ago. Though we still have much room for growth, our curriculum is beginning to represent the type of IDD education that every medical student in the country should receive.</p>
<p><strong>1. Providing longitudinal exposure: </strong>Most medical schools have three phases of training: preclinical classroom learning, clinical rotations, then post-clinical time. Ideally, IDD-related content should be integrated across all three of these phases. At Harvard, we receive our first exposure during our first-semester genetics course, when we meet adults with Down syndrome. To prepare for clinical rotations, students have sessions about working with caregivers and disabled patients. After rotations are over, electives such as “The Children with Neurodevelopmental Disabilities,” or “Developmental Pediatrics and Learning Disorders,” offer opportunities for more in-depth learning about these populations. By incorporating these throughout the four years of schooling, schools send a clear message: Those with IDD deserve physicians competent in serving them.</p>
<p><strong>2. Teaching what questions to ask:</strong> Physicians have the responsibility to ask questions that will garner relevant information — allergies, family medical history, substance use, etc. IDD patients require some additional questions. Are there certain stimuli that make the person upset or hyper-stimulated? How do they communicate? Do they have sensory differences? For instance, a physician asking us these questions would learn that my brother gets over-stimulated by loud voices and that he has an unusually high pain tolerance. As students at my school transition to clinical rotations, they begin receiving direct guidance on effectively interviewing disabled patients and how to balance caregiver participation. <a href="https://med.virginia.edu/faculty-affairs/wp-content/uploads/sites/458/2021/03/Interventions_to_Teach_Medical_Students_About.7.pdf" target="_blank" rel="noopener">Some other schools</a> have implemented an additional “standardized patient encounter,” a cornerstone of clinical training, where students must effectively communicate within a devised scenario where a patient actor has IDD.</p>
		
		
<p><strong>3. Teaching how to adapt to patient needs: </strong>Asking the right questions can help future doctors make visits smoother for people with IDD. This sort of practical training to help accommodate IDD patients is an area still under progress at my school. For example, knowing that a patient struggles with the concept of time could be a sign to use a visual timer or schedule to keep them motivated throughout an appointment. Knowing that bright lights overstimulate the patient is a sign to dim lights before they arrive. Our childhood dental hygienist always scheduled my appointment right before my brother’s so he could see what to expect and sometimes did his dental cleaning as he sat in a chair instead of laying down beneath the bright light. In preparation for dreaded vaccinations, our pediatrician set colorful lollipops on the counter so my brother had a tangible reward within view. We found these providers through word of mouth from other IDD families, knowing well that most providers aren’t as willing to accommodate. Medical students learn to adapt to various patient populations such as in pediatric and geriatric realms, and the IDD population should be no exception.</p>
<p>The last few years have seen many physicians and disability advocates calling for the Liaison Committee on Medical Education (LCME) to mandate IDD curricula for medical schools to be accredited — and these calls remain unanswered.</p>
<p>Luckily, medical education lives in a constant state of evolution, responding to its fundamental call to address shifting societal needs. In response to the growing opioid crisis, <a href="https://www.aamc.org/data-reports/curriculum-reports/data/curriculum-topics-required-and-elective-courses-medical-school-programs" target="_blank" rel="noopener">95% of medical schools now train students on opioid addiction</a>, and in response to more social awareness, <a href="https://www.usnews.com/education/best-graduate-schools/top-medical-schools/articles/lgbtq-health-issues-how-to-choose-a-medical-school-at-the-forefront" target="_blank" rel="noopener">many schools are developing LGBTQ+ health curricula.</a> Disability education must follow suit.</p>
<p><em>Romila Santra is a first-year medical student at Harvard Medical School.</em></p>
<p><em>Correction: This piece was updated to remove an incorrection characterization of a survey into medical school education about intellectual and developmental disabilities.</em></p>
<p>
<h2>LETTER TO THE EDITOR</h2>
<h4>Have an opinion on this essay? <a href="https://statnews.com/submit-a-letter-to-the-editor/?subject=U.S.%20medical%20schools%20aren%E2%80%99t%20teaching%20future%20doctors%20about%207.4%20million%20of%20their%20patients" target="_blank" rel="noopener">Submit a letter to the editor here</a>.</h4>
</p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Toyota's Daihatsu to halt all vehicle shipments as safety scandal widens (132 pts)]]></title>
            <link>https://www.cnbc.com/2023/12/20/toyotas-daihatsu-to-halt-vehicle-shipments-as-safety-scandal-widens.html</link>
            <guid>38756044</guid>
            <pubDate>Sun, 24 Dec 2023 19:33:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.cnbc.com/2023/12/20/toyotas-daihatsu-to-halt-vehicle-shipments-as-safety-scandal-widens.html">https://www.cnbc.com/2023/12/20/toyotas-daihatsu-to-halt-vehicle-shipments-as-safety-scandal-widens.html</a>, See on <a href="https://news.ycombinator.com/item?id=38756044">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="RegularArticle-ArticleBody-6" data-module="ArticleBody" data-test="articleBody-2" data-analytics="RegularArticle-articleBody-6-2"><div id="ArticleBody-InlineImage-107349817" data-test="InlineImage"><p>A Daihatsu Motor Co. Boon CILQ vehicle, right, and a Toyota Motor Corp. Passo vehicle are displayed during a press conference in Tokyo, Japan, on Monday, April 11, 2016.</p><p>Bloomberg | Bloomberg | Getty Images</p></div><div><p><span data-test="QuoteInBody" id="RegularArticle-QuoteInBody-1"><a href="https://www.cnbc.com/quotes/7203.T-JP/">Toyota Motor's</a><span><span id="-WatchlistDropdown" data-analytics-id="-WatchlistDropdown"></span></span></span>&nbsp;Daihatsu&nbsp;unit will&nbsp;halt&nbsp;shipments&nbsp;of&nbsp;all&nbsp;vehicles both overseas and in Japan, it said on Wednesday, after an investigation into a&nbsp;safety&nbsp;scandal&nbsp;found issues at some 64 models, including 22 sold under the Toyota brand.</p><p>An independent panel has been investigating&nbsp;Daihatsu&nbsp;after it&nbsp;<a href="https://www.reutersconnect.com/all?search=all%3AL1N36V0S6&amp;amp;linkedFromStory=true" target="_blank">said</a>&nbsp;in April it had rigged side-collision&nbsp;safety&nbsp;tests carried out for 88,000 small&nbsp;cars, most of which were sold under the Toyota brand.</p><p>The latest revelations suggest that the scope of the&nbsp;scandal&nbsp;is now far greater than previously thought and could potentially tarnish the automakers' reputation for quality and&nbsp;safety.</p><p>Toyota said in a statement "fundamental reform" was needed to revitalize&nbsp;Daihatsu&nbsp;as a company in addition to a review of certification operations.</p><p>"This will be an extremely significant task that cannot be accomplished overnight," it said. "It will require not only a review of management and business operations but also a review of the organization and structure."</p></div><div id="Placeholder-ArticleBody-Video-107335401" data-test="VideoPlaceHolder" role="region" tabindex="0" data-vilynx-id="7000322907" aria-labelledby="Placeholder-ArticleBody-Video-107335401"><p><img src="https://image.cnbcfm.com/api/v1/image/107335402-17001827621700182759-32057902065-1080pnbcnews.jpg?v=1700182762&amp;w=750&amp;h=422&amp;vtcrop=y" alt="Toyota Prius named 'Car of the Year' by MotorTrend"><span></span><span></span></p></div><div><p>The automaker, which makes small&nbsp;cars, was found to have cheated on&nbsp;safety&nbsp;tests of almost&nbsp;all&nbsp;models it currently has in production as well as some cars it made in the past, the Asahi newspaper previously reported.</p><p>Daihatsu&nbsp;said in April it had discovered the wrongly conducted tests after a whistleblower report. It also said it had reported the issue to regulatory agencies and&nbsp;halted shipment of affected models.</p><p>The following month,&nbsp;Daihatsu&nbsp;<a href="https://www.reutersconnect.com/all?search=all%3AL1N37G0UW&amp;amp;linkedFromStory=true" target="_blank">said</a>&nbsp;it had stopped sales of the Toyota Raize hybrid electric&nbsp;vehicle&nbsp;and its own Rocky model after also finding problems with testing for those two models.</p><p>Daihatsu&nbsp;produced 1.1 million&nbsp;vehicles over the first 10 months of the year, nearly 40% of those at overseas sites, according to Toyota data. It sold some 660,000&nbsp;vehicles worldwide over that period and accounted for 7% of&nbsp;Toyota's&nbsp;sales.</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Costs of running a macOS app studio business (626 pts)]]></title>
            <link>https://notes.alinpanaitiu.com/Costs-of-running-a-macOS-app-studio-business</link>
            <guid>38756029</guid>
            <pubDate>Sun, 24 Dec 2023 19:31:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://notes.alinpanaitiu.com/Costs-of-running-a-macOS-app-studio-business">https://notes.alinpanaitiu.com/Costs-of-running-a-macOS-app-studio-business</a>, See on <a href="https://news.ycombinator.com/item?id=38756029">Hacker News</a></p>
<div id="readability-page-1" class="page"><article>
<p>I created <a href="https://lowtechguys.com/">The low-tech guys</a>, a brand under which I develop macOS apps for a living.</p>
<p>I started this business with a good friend of mine, thinking I could help him stop working long hours at his consulting job and ease into more creative work.</p>
<p>However, getting to a state where you earn enough to live off the app sales takes time, and he did not have that time. So it's just one "low-tech guy" doing all this, and that is me.</p>
<p>So what are the largest costs of running such a business?</p>
<p>Well to be honest, that is <strong>time</strong>. Time I could have spent with my wife, my brother, my dog, instead of answering support emails from my first waking moment to right before sleeping. Time I could have walked outside, do some handy work in natural light, instead of sit on my butt and wreck my spine 6-12h a day.</p>
<p>But time is hard to quantify, so let's talk about money instead.</p>
<h2 id="app-store"><a href="#app-store">#</a> App Store</h2>
<p>I sell 3 apps on the App Store:</p>
<ul>
<li><a href="https://lowtechguys.com/rcmd">rcmd - App switcher using the ⌘ Right Command key</a></li>
<li><a href="https://lowtechguys.com/grila/">Grila - Keyboard-centric calendar</a></li>
<li><a href="https://lowtechguys.com/gammadimmer/">Gamma Dimmer - Basic screen brightness dimmer</a></li>
</ul>
<p>rcmd makes the bulk of the sales, but mostly because I didn't have time to further develop and act on feedback for the other two.</p>
<p>Here are the numbers for 2023:</p>
<ul>
<li>Sales (how much people paid in total): <code>$14.9k</code></li>
<li>Proceeds (how much I get from the sales): <code>$11.5k</code></li>
<li>Costs: <code>$3.4k</code>
<ul>
<li>App Store commission fee (small business 15%): <code>$2.3k</code></li>
<li>VAT, Sales Tax, foreign currency exchange fees: <code>$1.1k</code></li>
</ul>
</li>
</ul>
<p><a href="https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png"><picture> <source sizes="(min-width: 60em) 630px, 90vw" srcset="https://img.panaitiu.com/_/1920/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1920w,https://img.panaitiu.com/_/1620/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1620w,https://img.panaitiu.com/_/1400/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1400w,https://img.panaitiu.com/_/1280/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1280w,https://img.panaitiu.com/_/1200/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1200w,https://img.panaitiu.com/_/1080/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1080w,https://img.panaitiu.com/_/1024/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 1024w,https://img.panaitiu.com/_/992/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 992w,https://img.panaitiu.com/_/768/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 768w,https://img.panaitiu.com/_/640/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 640w,https://img.panaitiu.com/_/576/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 576w,https://img.panaitiu.com/_/320/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 320w,https://img.panaitiu.com/_/64/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@avif 64w" type="image/avif"> <source sizes="(min-width: 60em) 630px, 90vw" srcset="https://img.panaitiu.com/_/1920/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1920w,https://img.panaitiu.com/_/1620/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1620w,https://img.panaitiu.com/_/1400/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1400w,https://img.panaitiu.com/_/1280/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1280w,https://img.panaitiu.com/_/1200/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1200w,https://img.panaitiu.com/_/1080/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1080w,https://img.panaitiu.com/_/1024/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 1024w,https://img.panaitiu.com/_/992/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 992w,https://img.panaitiu.com/_/768/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 768w,https://img.panaitiu.com/_/640/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 640w,https://img.panaitiu.com/_/576/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 576w,https://img.panaitiu.com/_/320/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 320w,https://img.panaitiu.com/_/64/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png@webp 64w" type="image/webp"> <source sizes="(min-width: 60em) 630px, 90vw" srcset="https://img.panaitiu.com/_/1920/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1920w,https://img.panaitiu.com/_/1620/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1620w,https://img.panaitiu.com/_/1400/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1400w,https://img.panaitiu.com/_/1280/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1280w,https://img.panaitiu.com/_/1200/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1200w,https://img.panaitiu.com/_/1080/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1080w,https://img.panaitiu.com/_/1024/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 1024w,https://img.panaitiu.com/_/992/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 992w,https://img.panaitiu.com/_/768/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 768w,https://img.panaitiu.com/_/640/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 640w,https://img.panaitiu.com/_/576/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 576w,https://img.panaitiu.com/_/320/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 320w,https://img.panaitiu.com/_/64/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png 64w"> <img src="https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/app-store-revenue-2023.png" alt=""> </picture></a></p>
<h2 id="paddle"><a href="#paddle">#</a> Paddle</h2>
<p>I publish apps independently as well because the App Store has some strict restrictions regarding what you can do in an app <em>(no private APIs allowed, no IOKit for talking to hardware directly etc.)</em>.</p>
<p>So the apps where I can use code to tickle my curiosity and experiment more are not on the App Store.</p>
<p>I use <a href="https://paddle.com/">paddle.com</a> for selling these apps because they handle all tax work for me (calculate VAT and sales tax, send it to the relevant authority, handle reverse charge and chargebacks etc.). They also provide a useful Mac SDK for licensing and checkout.</p>
<p>For most year, I only sold <a href="https://lunar.fyi/">Lunar</a> there, an app for adaptive monitor brightness. Just recently I also started selling <a href="https://lowtechguys.com/clop">Clop</a> (an image, video and PDF optimizer), but most numbers will be relative to Lunar's price.</p>
<p>Here are the numbers for 2023:</p>
<ul>
<li>Sales (how much people paid in total): <code>$93.5k</code></li>
<li>Proceeds (how much I get from the sales): <code>$73.3k</code></li>
<li>Costs: <code>$20.2k</code>
<ul>
<li>Paddle commission fee (5%): <code>$4.7k</code></li>
<li>VAT, Sales Tax, foreign currency exchange fees: <code>$15.5k</code></li>
</ul>
</li>
</ul>
<p><a href="https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png"><picture> <source sizes="(min-width: 60em) 630px, 90vw" srcset="https://img.panaitiu.com/_/1920/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1920w,https://img.panaitiu.com/_/1620/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1620w,https://img.panaitiu.com/_/1400/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1400w,https://img.panaitiu.com/_/1280/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1280w,https://img.panaitiu.com/_/1200/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1200w,https://img.panaitiu.com/_/1080/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1080w,https://img.panaitiu.com/_/1024/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 1024w,https://img.panaitiu.com/_/992/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 992w,https://img.panaitiu.com/_/768/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 768w,https://img.panaitiu.com/_/640/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 640w,https://img.panaitiu.com/_/576/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 576w,https://img.panaitiu.com/_/320/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 320w,https://img.panaitiu.com/_/64/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@avif 64w" type="image/avif"> <source sizes="(min-width: 60em) 630px, 90vw" srcset="https://img.panaitiu.com/_/1920/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1920w,https://img.panaitiu.com/_/1620/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1620w,https://img.panaitiu.com/_/1400/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1400w,https://img.panaitiu.com/_/1280/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1280w,https://img.panaitiu.com/_/1200/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1200w,https://img.panaitiu.com/_/1080/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1080w,https://img.panaitiu.com/_/1024/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 1024w,https://img.panaitiu.com/_/992/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 992w,https://img.panaitiu.com/_/768/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 768w,https://img.panaitiu.com/_/640/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 640w,https://img.panaitiu.com/_/576/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 576w,https://img.panaitiu.com/_/320/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 320w,https://img.panaitiu.com/_/64/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png@webp 64w" type="image/webp"> <source sizes="(min-width: 60em) 630px, 90vw" srcset="https://img.panaitiu.com/_/1920/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1920w,https://img.panaitiu.com/_/1620/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1620w,https://img.panaitiu.com/_/1400/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1400w,https://img.panaitiu.com/_/1280/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1280w,https://img.panaitiu.com/_/1200/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1200w,https://img.panaitiu.com/_/1080/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1080w,https://img.panaitiu.com/_/1024/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 1024w,https://img.panaitiu.com/_/992/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 992w,https://img.panaitiu.com/_/768/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 768w,https://img.panaitiu.com/_/640/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 640w,https://img.panaitiu.com/_/576/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 576w,https://img.panaitiu.com/_/320/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 320w,https://img.panaitiu.com/_/64/plain/https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png 64w"> <img src="https://notes.alinpanaitiu.com/md/Costs%20of%20running%20a%20macOS%20app%20studio%20business_attachments/paddle-revenue-2023.png" alt=""> </picture></a></p>
<p>The disadvantage of using a Merchant of Record like Paddle is that I don't get to reclaim the VAT at the end of the year. That's because it's some kind of B2B relation: I sell them my app in gross with 0% VAT, and then they resell it and collect taxes themselves.</p>
<p>Oh well, the price of convenience and peace of mind...</p>
<h2 id="romanian-corporate-income-tax"><a href="#romanian-corporate-income-tax">#</a> Romanian corporate income tax</h2>
<p>So in 2023, people paid a total of <code>$108.4k</code> <em>(wow.. 108400 US dollars.. I’m amazed to see that number myself, thank you good people for helping me keep doing this)</em> and after paying fees to a bunch of states and platforms, I’m left with <code>$84.8k</code>.</p>
<p>Before taxes. Yep, it doesn’t stop here, you didn't think I'd get to spend eighty-five thousand dollars, did you?</p>
<p><strong>THE LOW-TECH GUYS S.R.L.</strong> is a business incorporated in Romania so it has to pay taxes on the income. Calculating that final tax needs applying such a chaotic and stupidly complex formula that I think I’ll spare you the details.</p>
<blockquote>
<p>If you really want to know, it’s something like: I have to pay myself a minimum salary of about $1k/month on which I pay half as taxes, then I pay 3% from the remaining sum as income tax, then I pay 8% as dividend tax, then I pay 10% of 24 minimum monthly salaries for mandatory health insurance, then I have to pay a mandatory accountant and a mandatory billing software, and a mandatory business bank account... I most surely forgot something and I'll also have to pay a mandatory fine next year</p>
</blockquote>
<p>In short, another <code>$13k</code> flies out the window to Romanian corrupt politicians to line up their greasy pockets. A small amount of those might end up in healthcare and education, so that corrupt hospital managers and inspectors can get their part as well.</p>
<p>I'm left with <code>$71.8k</code>. Before expenses.</p>
<p>Thankfully, a macOS app business doesn't have many of those. Here's what I currently have to pay:</p>
<ul>
<li>A bare metal Hetzner server: <code>$600</code>
<ul>
<li>This is where I host all my DMGs, websites, APIs, analytics, experiments etc.</li>
</ul>
</li>
<li>An IPStack subscription as a fallback for Lunar's <a href="https://lunar.fyi/#location">Location Mode</a>: <code>$140</code></li>
<li>Apple Developer Membership: <code>$100</code></li>
</ul>
<p>Depending on the app features, I might also need to buy the latest MacBook or iPhone to develop and test hardware-related features <em>(like <a href="https://alinpanaitiu.com/blog/journey-to-ddc-on-m1-macs/">DDC support for M1</a> or <a href="https://alinpanaitiu.com/blog/over-500nits-failed/">XDR Brightness for MacBook HDR screens</a>)</em>, or for example I needed to buy a bunch of varying light sensors and ESP32/ESP8266 boards to develop adaptive monitor brightness using <a href="https://lunar.fyi/sensor">wireless light sensors</a>.</p>
<p>These are not recurring so I can't count them in, just thought I'd note them here for whoever's interested.</p>
<p>I'm also a Romanian, living in Romania, earning USD but spending RON so I'll also lose a significant amount on foreign currency exchange. I calculated that to be at least <code>$1k</code></p>
<h2 id="end-result"><a href="#end-result">#</a> End result</h2>
<pre><code><span><span>    <span>$108</span> <span>400</span>
</span></span><span><span>   -  <span>$3</span> <span>400</span>  <span>(</span>App Store<span>)</span>
</span></span><span><span>   - <span>$20</span> <span>200</span>  <span>(</span>Paddle<span>)</span>
</span></span><span><span>   - <span>$13</span> <span>000</span>  <span>(</span>Romanian CIT<span>)</span>
</span></span><span><span>   -    <span>$600</span>  <span>(</span>Hetzner server<span>)</span>
</span></span><span><span>   -    <span>$140</span>  <span>(</span>IPStack API<span>)</span>
</span></span><span><span>   -    <span>$100</span>  <span>(</span>Apple Developer Program<span>)</span>
</span></span><span><span>   -  <span>$1</span> <span>000</span>  <span>(</span>Foreign exchange<span>)</span>
</span></span><span><span>   ---------
</span></span><span><span>     <span>$69</span> <span>960</span>  <span>(</span>Net profit<span>)</span>
</span></span><span><span>
</span></span><span><span>￼
</span></span><span><span>
</span></span><span><span>     <span>$108</span> <span>400</span>  <span>(</span>What people paid<span>)</span> <span>[</span>100%<span>]</span>
</span></span><span><span>    - <span>$69</span> <span>960</span>  <span>(</span>What I get<span>)</span>       <span>[</span>64%<span>]</span>
</span></span><span><span>    ---------
</span></span><span><span>      <span>$38</span> <span>440</span>  <span>(</span>What God knows how many intermediaries get just so that I am allowed to ask money <span>for</span> my work<span>)</span>
</span></span><span><span>                                  <span>[</span>36%<span>]</span>
</span></span></code></pre><p>In the end, I get the equivalent of a <code>$5800/month</code> net salary. Not bad, but very far from what I could earn as a consultant.</p>
<p>To put it in perspective, this summer I took a <code>$120/hour</code> consulting gig for an MDM company because they said they need a few days worth of work for a macOS app and I said <em>why not, it's just a few days</em>. It turned out they needed a lot more and were happy to continue paying that amount because macOS skills are not easy to find.</p>
<p>But I could not fit into the same old <em>Slack chat + Zoom meetings + SCRUM + daily report + doing something that you feel it has no purpose in the real world for 8 hours a day</em> madness that consulting work needs. So I said "no, I'm sorry, I'd like to continue building my apps".</p>
<p>At <code>$120/hour</code>, one would get <code>$120 * 8 hours * 21 days - ~12% taxes</code> → <code>$18k/month</code> after taxes. Which is a mind boggling amount of money for a Romanian. And it's 3x more than my app revenue.</p>
<p>But I like to believe that with that difference of <code>$12k</code> I'm buying time.</p>
<p>Time that I can spend as late mornings, drinking coffee quietly while playing with my dog. Time that I can spend eating a quiet meal with my wife without being in a hurry for a meeting, and then taking time after to talk about our house projects. Time for taking weeks off from being in front of a laptop without having to ask someone for my own time back.</p>
</article></div>]]></description>
        </item>
    </channel>
</rss>