<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Sun, 07 Jul 2024 22:30:02 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[I'm funding Ladybird because I can't fund Firefox (146 pts)]]></title>
            <link>http://jackkelly.name/blog/archives/2024/07/06/im_funding_ladybird_because_i_cant_fund_firefox/</link>
            <guid>40900648</guid>
            <pubDate>Sun, 07 Jul 2024 21:38:52 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="http://jackkelly.name/blog/archives/2024/07/06/im_funding_ladybird_because_i_cant_fund_firefox/">http://jackkelly.name/blog/archives/2024/07/06/im_funding_ladybird_because_i_cant_fund_firefox/</a>, See on <a href="https://news.ycombinator.com/item?id=40900648">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
  
  <div><p>
  Posted on July  6, 2024
  
    by Jack Kelly
  

  
    </p>
  
</div>

  <p>I’ve been meaning to write this one for a while, but the <a href="https://ladybird.org/announcement.html">announcement of the
Ladybird Browser Initiative</a> makes now a particularly good time.</p>
<p><strong>TL;DR:</strong> Chrome is eating the web. I have wanted to
help fund a serious alternative browser for quite some time, and while
Firefox remains the largest potential alternative, Mozilla has never let
me. Since I can’t fund Firefox, I’m going to show there’s money in
user-funded web browsers by <a href="https://donorbox.org/ladybird">funding Ladybird instead</a>. You
should too.</p>
<!--more-->
<h2 id="why-browser-diversity-matters">Why Browser Diversity
Matters</h2>
<p>An open web requires a healthy ecosystem of several competing
browsers, where each has enough market share that no one vendor has de
facto control over web standards. That’s the world we used to have,
after Firefox cracked the dominance of Microsoft’s Internet Explorer
(IE) in the 1990s. IE’s poor support for internet standards held back
web development all through the late 1990s and early 2000s, and
competition from Firefox allowed developers to build “for the web”
instead of “for IE6”, forcing browser vendors to catch up.</p>
<p>Unfortunately, we are back in a world without healthy browser
competition. <a href="https://gs.statcounter.com/browser-market-share/">statcounter.com</a>
claims that Chrome, Google’s browser, has over 65% market share. Add
Edge (which uses Blink, Chrome’s browser engine, under the hood) and
you’re over 70%. This market dominance allows Google to push through
changes like its “Manifest V3” format for browser extensions, which
coincidentally cripples <a href="https://arstechnica.com/gadgets/2024/05/google-starts-deprecating-older-more-capable-chrome-extensions-next-week/">ad
blockers</a>.</p>
<details>
<summary>
Sidebar: Ad companies had their chance
</summary>
<p>While a discussion of the economics of ad-supported sites is outside
the scope of this post, someone will ask “don’t you like free things on
the internet?” if I don’t address it first.</p>
<p>Online advertising has become so obnoxious that ad blockers are
all-but-necessary for users to get anything done online. More than that,
I feel obliged to install ad blockers on family computers that I
support: skipping all those megabytes of random advertising JavaScript
significantly extends the lifespan of older computers and stops my
less-technical family members from being tricked into installing fake
malware versions of software. <a href="https://www.tomsguide.com/news/the-fbi-now-recommends-using-an-ad-blocker-heres-why">Even
the FBI recommends ad blockers</a>.</p>
Sorry, the online advertising industry had its chance, and they blew it.
</details>
<p>This is also the case for other user-hostile features like “Encrypted
Media Extensions” (aka “DRM for the web”). A healthy browser ecosystem
would have been able to vigorously push against features that take
control from the users; instead, <a href="https://www.jwz.org/blog/2024/06/mozillas-original-sin/">Mozilla
caved</a> in the hopes of maintaining Firefox market share but didn’t
even get that.</p>
<h2 id="why-wont-mozilla-let-me-fund-firefox">Why won’t Mozilla let me
Fund Firefox?</h2>
<p>According to the Mozilla Foundation’s <a href="https://foundation.mozilla.org/en/donate/help/#frequently-asked-questions">Donation
FAQ</a>, “Firefox is maintained by the Mozilla Corporation, a
wholly-owned subsidiary of the Mozilla Foundation. While Firefox does
produce revenue — chiefly through search partnerships — this earned
income is largely reinvested back into the Corporation”. “Search
partnerships” means “Google”, who made up <a href="https://en.wikipedia.org/wiki/Mozilla_Corporation#Google">81% of
Mozilla Corporation’s revenue in 2022</a>. This means Firefox’s primary
revenue source is also their direct competitor, and they seem to have
little ability to change that.</p>
<p>Mozilla has backed themselves into a very poor position. In recent
years, Mozilla Corporation has made several controversial moves in
pursuit of revenue. Off the top of my head, there was the <a href="https://www.theverge.com/2017/12/16/16784628/mozilla-mr-robot-arg-plugin-firefox-looking-glass">Mr.&nbsp;Robot
addon</a>, automatically loaded into people’s browsers to advertise a TV
show; <a href="https://www.makeuseof.com/firefox-stop-address-bar-sponsored-links/">sponsored
links in the address bar</a>; <a href="https://www.ghacks.net/2020/11/22/how-to-disable-sponsored-top-sites-in-the-firefox-web-browser/">sponsored
“top sites” on the “new tab” page</a> a reading list startup called
“Pocket”, <a href="https://venturebeat.com/mobile/mozilla-responds-to-firefox-user-backlash-over-pocket-integration/">integrated
into Firefox without warning</a>; and a Mozilla VPN service, complete
with <a href="https://www.theregister.com/2023/05/26/mozilla_apologizes_for_intrusive_vpn_ad/">in-browser
pop-up ads</a>. Cal Paterson has <a href="https://calpaterson.com/mozilla.html">another good list</a>.
Meanwhile, Firefox market share falls and the <a href="https://www.theregister.com/2024/02/09/mozilla_ceo_mitchell_baker_departs/">outgoing
Mozilla Corporation CEO</a> gets paid millions (<a href="https://assets.mozilla.net/annualreport/2022/mozilla-fdn-990-ty22-public-disclosure.pdf">6.9
million USD in 2022</a> — see page 8).</p>
<p>The problem is that many people specifically use Firefox because
they’re sick of advertising and cross-promotion everywhere and want a
browser that’s “just a browser”. On top of that, silently installing
addons like the Mr.&nbsp;Robot extension undermine user trust in one of the
most sensitive software projects people use.</p>
<p>Despite desperately trying to find more revenue sources, Mozilla
Corporation stubbornly refuses to <em>just let users fund Firefox</em>.
Mozilla Foundation even has a specific donation form for Thunderbird
(Mozilla’s mail client), but not Firefox. I’m sure they could have found
some way of making it work with their corporate structure, and it
baffles me that they haven’t.</p>
<h2 id="ladybird">Ladybird</h2>
<p>Ladybird used to be the web browser for <a href="https://serenityos.org/">SerenityOS</a>, a from-scratch hobby
operating system written by Andreas Kling (and community). On 2024-06-03
(about a month ago), he forked Ladybird into a <a href="https://github.com/LadybirdBrowser/ladybird">separate project</a>
and <a href="https://awesomekling.substack.com/p/forking-ladybird-and-stepping-down-serenityos">stepped
away from SerenityOS</a>. Presumably this was prep-work to launch the <a href="https://ladybird.org/">Ladybird Browser Initiative</a>, a
non-profit dedicated to building the rest of the browser.</p>
<p>They are very open that the browser is unfinished — the first alpha
release is planned for 2026. But they have running code, and I can
<em>actually help fund them</em>. Wesley Moore <a href="https://www.wezm.net/v2/posts/2024/how-much-is-a-browser-worth/">runs
some numbers</a> in a similar post to this one, and concludes that 15
USD/month (~22.50 AUD in July 2024) is a good amount for a recurring
donation. I’m in; are you?</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A modern Jupyter client for macOS (202 pts)]]></title>
            <link>https://satyrn.app/</link>
            <guid>40899242</guid>
            <pubDate>Sun, 07 Jul 2024 17:59:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://satyrn.app/">https://satyrn.app/</a>, See on <a href="https://news.ycombinator.com/item?id=40899242">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-astro-cid-j7pv25f6=""> <section data-astro-cid-j7pv25f6=""> <div data-astro-cid-j7pv25f6=""> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fsatyrn-logo-cutout.DS2NSG70.png" alt="Satyrn App Logo" data-astro-cid-j7pv25f6="" width="467" height="297" loading="lazy" decoding="async"></p> <!-- <h1 class="text-6xl sm:text-8xl pb-4 font-extrabold ml-4 bg-clip-text text-transparent bg-gradient-to-b from-neutral-400 to-neutral-700">Satyrn</h1> --> <!-- <h1 class="text-6xl sm:text-8xl pb-4 font-extrabold ml-4 bg-clip-text text-transparent bg-gradient-to-b from-pink-500 to-violet-500 opacity-75">Satyrn</h1> --> </div> <h2 data-astro-cid-j7pv25f6="">A modern Jupyter client for Mac</h2> <!-- <h2 class={h2Class}>Jupyter made easy</h2> --> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fscreenshot-noborder.Db7C7PI4.png" alt="Satyrn App Screenshot" data-astro-cid-j7pv25f6="" width="1800" height="1340" loading="lazy" decoding="async"> </p> </section> <div data-astro-cid-j7pv25f6=""> <a href="https://discord.gg/JKS7fMAwfr" data-astro-cid-j7pv25f6=""> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fjoin-the-discord.DluEW6vl.png&amp;h=64" alt="Join discord" data-astro-cid-j7pv25f6="" width="205" height="64" loading="lazy" decoding="async"> </p> </a> </div> <div data-astro-cid-j7pv25f6=""> <section data-astro-cid-j7pv25f6=""> <h2 data-astro-cid-j7pv25f6="">Get coding faster</h2> <p data-astro-cid-j7pv25f6="">Faster startup times<br data-astro-cid-j7pv25f6=""> than VS Code and JupyterLab</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fstartup-time-noborder.MoHgGeh0.png" alt="Satyrn Startup Time Screenshot" data-astro-cid-j7pv25f6="" width="1800" height="1340" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Generate code inline with<br data-astro-cid-j7pv25f6=""> context aware prompt cells</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fsatyrn-ai.CTGkVtr4.gif" alt="Satyrn AI Screenshot" data-astro-cid-j7pv25f6="" width="800" height="608" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Stay in flow<br data-astro-cid-j7pv25f6=""> with a minimalist design</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fminimal-noborder.Blswq2X5.png" alt="Satyrn Command Pallet Screenshot" data-astro-cid-j7pv25f6="" width="1800" height="1340" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Get stuff done with a<br data-astro-cid-j7pv25f6=""> modern command palette</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fcommand-palette.Cv7bLbT3.gif" alt="Satyrn Command Pallet Screenshot" data-astro-cid-j7pv25f6="" width="800" height="613" loading="lazy" decoding="async"> </p> </section> <section data-astro-cid-j7pv25f6=""> <h2 data-astro-cid-j7pv25f6="">Simple and powerful</h2> <p data-astro-cid-j7pv25f6="">Stay organized with<br data-astro-cid-j7pv25f6=""> Black code formatting</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fcode-formatting.BpzbNjvi.gif" alt="Satyrn Code Formatting Screenshot" data-astro-cid-j7pv25f6="" width="800" height="608" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Copy your graphs and<br data-astro-cid-j7pv25f6=""> tables at the click of a button</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fcopy-stuff.59GJc-B1.gif" alt="Satyrn Copy Stuff Screenshot" data-astro-cid-j7pv25f6="" width="800" height="473" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Add new virtual environments<br data-astro-cid-j7pv25f6=""> with Satyrn's kernel manager</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fadd-kernels.Dsa552Br.gif" alt="Satyrn Add Kernels Screenshot" data-astro-cid-j7pv25f6="" width="600" height="495" loading="lazy" decoding="async"> </p> </section> <section data-astro-cid-j7pv25f6=""> <h2 data-astro-cid-j7pv25f6="">Easy setup</h2> <p data-astro-cid-j7pv25f6="">Works with all ipynb files,<br data-astro-cid-j7pv25f6=""> launched directly from your Finder</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fopen-from-finder.CrByVg2E.png" alt="Satyrn Open From Finder Screenshot" data-astro-cid-j7pv25f6="" width="2450" height="1738" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">Automatically detects <br data-astro-cid-j7pv25f6="">existing kernels</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fkernel-manager.DS3CPmzt.png" alt="Satyrn Kernel Manager Screenshot" data-astro-cid-j7pv25f6="" width="2114" height="1602" loading="lazy" decoding="async"> </p> <p data-astro-cid-j7pv25f6="">No setup needed. Download<br data-astro-cid-j7pv25f6=""> the app and start coding.</p> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fsatyrn-dock-icon.BceNcK8L.png" alt="Satyrn Dock Screenshot" data-astro-cid-j7pv25f6="" width="2346" height="274" loading="lazy" decoding="async"> <img src="https://satyrn.app/.netlify/images?url=_astro%2Fsmall-dock.pEF5cv7l.png" alt="Satyrn App Logo" data-astro-cid-j7pv25f6="" width="1268" height="281" loading="lazy" decoding="async"> </p> </section> </div> <div data-astro-cid-j7pv25f6=""> <a href="https://discord.gg/JKS7fMAwfr" data-astro-cid-j7pv25f6=""> <p><img src="https://satyrn.app/.netlify/images?url=_astro%2Fjoin-the-discord.DluEW6vl.png&amp;h=64" alt="Join discord" data-astro-cid-j7pv25f6="" width="205" height="64" loading="lazy" decoding="async"> </p> </a> </div> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mongo but on Postgres and with strong consistency benefits (149 pts)]]></title>
            <link>https://github.com/event-driven-io/Pongo</link>
            <guid>40897518</guid>
            <pubDate>Sun, 07 Jul 2024 13:22:12 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/event-driven-io/Pongo">https://github.com/event-driven-io/Pongo</a>, See on <a href="https://news.ycombinator.com/item?id=40897518">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><a href="https://discord.gg/fTpqUTMmVa" rel="nofollow"><img src="https://camo.githubusercontent.com/646fa91165592cb9152c3df012422574419e266e42dee5d3e2599569172af16d/68747470733a2f2f646362616467652e76657263656c2e6170702f6170692f7365727665722f6654707155544d6d56613f7374796c653d666c6174" alt="" data-canonical-src="https://dcbadge.vercel.app/api/server/fTpqUTMmVa?style=flat"></a> <a href="https://www.linkedin.com/in/oskardudycz/" rel="nofollow"><img src="https://camo.githubusercontent.com/591c02e8ff595d43e0b35b1b29aed639a7154b959cd8f8c854b9e176d885b094/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c696e6b6564496e2d3030373742353f7374796c653d666f722d7468652d6261646765266c6f676f3d6c696e6b6564696e266c6f676f436f6c6f723d7768697465" height="20px" data-canonical-src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&amp;logo=linkedin&amp;logoColor=white"></a> <a href="https://github.com/sponsors/oskardudycz/"><img src="https://camo.githubusercontent.com/8b2204667b446edec758f665f5bcf3d40cb42a774d0e3a21ad68ac5822a18528/68747470733a2f2f696d672e736869656c64732e696f2f7374617469632f76313f6c6162656c3d53706f6e736f72266d6573736167653d254532253944254134266c6f676f3d476974487562266c696e6b3d68747470733a2f2f6769746875622e636f6d2f73706f6e736f72732f6f736b617264756479637a2f" alt="Github Sponsors" data-canonical-src="https://img.shields.io/static/v1?label=Sponsor&amp;message=%E2%9D%A4&amp;logo=GitHub&amp;link=https://github.com/sponsors/oskardudycz/"></a> <a href="https://event-driven.io/?utm_source=event_sourcing_nodejs" rel="nofollow"><img src="https://camo.githubusercontent.com/153af52926fe6b9f4a97a1899114ef2930e98819cbb1cc732e2fac27da6868c2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f626c6f672d6576656e742d2d64726976656e2e696f2d627269676874677265656e" alt="blog" data-canonical-src="https://img.shields.io/badge/blog-event--driven.io-brightgreen"></a> <a href="https://www.architecture-weekly.com/?utm_source=event_sourcing_nodejs" rel="nofollow"><img src="https://camo.githubusercontent.com/04c8da2e235a701f536522fd6693685986877d9c4022f80986423e718d24cc16/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f2546302539462539412538302d4172636869746563747572652532305765656b6c792d696d706f7274616e74" alt="blog" data-canonical-src="https://img.shields.io/badge/%F0%9F%9A%80-Architecture%20Weekly-important"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/event-driven-io/Pongo/blob/main/src/docs/public/social.png"><img src="https://github.com/event-driven-io/Pongo/raw/main/src/docs/public/social.png" alt=""></a></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Pongo</h2><a id="user-content-pongo" aria-label="Permalink: Pongo" href="#pongo"></a></p>
<p dir="auto">Pongo - Mongo but on Postgres and with strong consistency benefits.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Getting Started</h2><a id="user-content-getting-started" aria-label="Permalink: Getting Started" href="#getting-started"></a></p>
<p dir="auto">Install Pongo as an npm module and save it to your package.json:</p>
<div dir="auto" data-snippet-clipboard-copy-content="npm install @event-driven-io/pongo"><pre>npm install @event-driven-io/pongo</pre></div>
<p dir="auto">Read also <a href="https://event-driven.io/en/introducting_pongo/" rel="nofollow">introduction article on my blog</a> for more context.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Example</h2><a id="user-content-example" aria-label="Permalink: Example" href="#example"></a></p>
<p dir="auto">You can use Pongo syntax with explicit typing about supported syntax:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { pongoClient } from &quot;@event-driven-io/pongo&quot;;
import { v4 as uuid } from &quot;uuid&quot;;

type User = { name: string; age: number };

const connectionString =
  &quot;postgresql://dbuser:secretpassword@database.server.com:3211/mydb&quot;;

const pongoClient = pongoClient(connectionString);
const pongoDb = pongoClient.db();

const users = pongoDb.collection<User>(&quot;users&quot;);
const roger = { name: &quot;Roger&quot;, age: 30 };
const anita = { name: &quot;Anita&quot;, age: 25 };
const cruella = { _id: uuid(), name: &quot;Cruella&quot;, age: 40 };

// Inserting
await pongoCollection.insertOne(roger);
await pongoCollection.insertOne(cruella);

const { insertedId } = await pongoCollection.insertOne(anita);
const anitaId = insertedId;

// Updating
await users.updateOne({ _id: anitaId }, { $set: { age: 31 } });

// Deleting
await pongoCollection.deleteOne({ _id: cruella._id });

// Finding by Id
const anitaFromDb = await pongoCollection.findOne({ _id: anitaId });

// Finding more
const users = await pongoCollection.find({ age: { $lt: 40 } });"><pre><span>import</span> <span>{</span> <span>pongoClient</span> <span>}</span> <span>from</span> <span>"@event-driven-io/pongo"</span><span>;</span>
<span>import</span> <span>{</span> <span>v4</span> <span>as</span> <span>uuid</span> <span>}</span> <span>from</span> <span>"uuid"</span><span>;</span>

<span>type</span> <span>User</span> <span>=</span> <span>{</span> <span>name</span>: <span>string</span><span>;</span> <span>age</span>: <span>number</span> <span>}</span><span>;</span>

<span>const</span> <span>connectionString</span> <span>=</span>
  <span>"postgresql://dbuser:secretpassword@database.server.com:3211/mydb"</span><span>;</span>

<span>const</span> <span>pongoClient</span> <span>=</span> <span>pongoClient</span><span>(</span><span>connectionString</span><span>)</span><span>;</span>
<span>const</span> <span>pongoDb</span> <span>=</span> <span>pongoClient</span><span>.</span><span>db</span><span>(</span><span>)</span><span>;</span>

<span>const</span> <span>users</span> <span>=</span> <span>pongoDb</span><span>.</span><span>collection</span><span>&lt;</span><span>User</span><span>&gt;</span><span>(</span><span>"users"</span><span>)</span><span>;</span>
<span>const</span> <span>roger</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Roger"</span><span>,</span> <span>age</span>: <span>30</span> <span>}</span><span>;</span>
<span>const</span> <span>anita</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Anita"</span><span>,</span> <span>age</span>: <span>25</span> <span>}</span><span>;</span>
<span>const</span> <span>cruella</span> <span>=</span> <span>{</span> <span>_id</span>: <span>uuid</span><span>(</span><span>)</span><span>,</span> <span>name</span>: <span>"Cruella"</span><span>,</span> <span>age</span>: <span>40</span> <span>}</span><span>;</span>

<span>// Inserting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>roger</span><span>)</span><span>;</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>cruella</span><span>)</span><span>;</span>

<span>const</span> <span>{</span> insertedId <span>}</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>anita</span><span>)</span><span>;</span>
<span>const</span> <span>anitaId</span> <span>=</span> <span>insertedId</span><span>;</span>

<span>// Updating</span>
<span>await</span> <span>users</span><span>.</span><span>updateOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>,</span> <span>{</span> <span>$set</span>: <span>{</span> <span>age</span>: <span>31</span> <span>}</span> <span>}</span><span>)</span><span>;</span>

<span>// Deleting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>deleteOne</span><span>(</span><span>{</span> <span>_id</span>: <span>cruella</span><span>.</span><span>_id</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding by Id</span>
<span>const</span> <span>anitaFromDb</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>findOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding more</span>
<span>const</span> <span>users</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>find</span><span>(</span><span>{</span> <span>age</span>: <span>{</span> <span>$lt</span>: <span>40</span> <span>}</span> <span>}</span><span>)</span><span>;</span></pre></div>
<p dir="auto">Or use MongoDB compliant shim:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { MongoClient } from &quot;@event-driven-io/pongo&quot;;
import { v4 as uuid } from &quot;uuid&quot;;

type User = { name: string; age: number };

const connectionString =
  &quot;postgresql://dbuser:secretpassword@database.server.com:3211/mydb&quot;;

const pongoClient = new MongoClient(postgresConnectionString);
const pongoDb = pongoClient.db();

const users = pongoDb.collection<User>(&quot;users&quot;);
const roger = { name: &quot;Roger&quot;, age: 30 };
const anita = { name: &quot;Anita&quot;, age: 25 };
const cruella = { _id: uuid(), name: &quot;Cruella&quot;, age: 40 };

// Inserting
await pongoCollection.insertOne(roger);
await pongoCollection.insertOne(cruella);

const { insertedId } = await pongoCollection.insertOne(anita);
const anitaId = insertedId;

// Updating
await users.updateOne({ _id: anitaId }, { $set: { age: 31 } });

// Deleting
await pongoCollection.deleteOne({ _id: cruella._id });

// Finding by Id
const anitaFromDb = await pongoCollection.findOne({ _id: anitaId });

// Finding more
const users = await pongoCollection.find({ age: { $lt: 40 } }).toArray();"><pre><span>import</span> <span>{</span> <span>MongoClient</span> <span>}</span> <span>from</span> <span>"@event-driven-io/pongo"</span><span>;</span>
<span>import</span> <span>{</span> <span>v4</span> <span>as</span> <span>uuid</span> <span>}</span> <span>from</span> <span>"uuid"</span><span>;</span>

<span>type</span> <span>User</span> <span>=</span> <span>{</span> <span>name</span>: <span>string</span><span>;</span> <span>age</span>: <span>number</span> <span>}</span><span>;</span>

<span>const</span> <span>connectionString</span> <span>=</span>
  <span>"postgresql://dbuser:secretpassword@database.server.com:3211/mydb"</span><span>;</span>

<span>const</span> <span>pongoClient</span> <span>=</span> <span>new</span> <span>MongoClient</span><span>(</span><span>postgresConnectionString</span><span>)</span><span>;</span>
<span>const</span> <span>pongoDb</span> <span>=</span> <span>pongoClient</span><span>.</span><span>db</span><span>(</span><span>)</span><span>;</span>

<span>const</span> <span>users</span> <span>=</span> <span>pongoDb</span><span>.</span><span>collection</span><span>&lt;</span><span>User</span><span>&gt;</span><span>(</span><span>"users"</span><span>)</span><span>;</span>
<span>const</span> <span>roger</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Roger"</span><span>,</span> <span>age</span>: <span>30</span> <span>}</span><span>;</span>
<span>const</span> <span>anita</span> <span>=</span> <span>{</span> <span>name</span>: <span>"Anita"</span><span>,</span> <span>age</span>: <span>25</span> <span>}</span><span>;</span>
<span>const</span> <span>cruella</span> <span>=</span> <span>{</span> <span>_id</span>: <span>uuid</span><span>(</span><span>)</span><span>,</span> <span>name</span>: <span>"Cruella"</span><span>,</span> <span>age</span>: <span>40</span> <span>}</span><span>;</span>

<span>// Inserting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>roger</span><span>)</span><span>;</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>cruella</span><span>)</span><span>;</span>

<span>const</span> <span>{</span> insertedId <span>}</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>insertOne</span><span>(</span><span>anita</span><span>)</span><span>;</span>
<span>const</span> <span>anitaId</span> <span>=</span> <span>insertedId</span><span>;</span>

<span>// Updating</span>
<span>await</span> <span>users</span><span>.</span><span>updateOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>,</span> <span>{</span> <span>$set</span>: <span>{</span> <span>age</span>: <span>31</span> <span>}</span> <span>}</span><span>)</span><span>;</span>

<span>// Deleting</span>
<span>await</span> <span>pongoCollection</span><span>.</span><span>deleteOne</span><span>(</span><span>{</span> <span>_id</span>: <span>cruella</span><span>.</span><span>_id</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding by Id</span>
<span>const</span> <span>anitaFromDb</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>findOne</span><span>(</span><span>{</span> <span>_id</span>: <span>anitaId</span> <span>}</span><span>)</span><span>;</span>

<span>// Finding more</span>
<span>const</span> <span>users</span> <span>=</span> <span>await</span> <span>pongoCollection</span><span>.</span><span>find</span><span>(</span><span>{</span> <span>age</span>: <span>{</span> <span>$lt</span>: <span>40</span> <span>}</span> <span>}</span><span>)</span><span>.</span><span>toArray</span><span>(</span><span>)</span><span>;</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">How does it work?</h2><a id="user-content-how-does-it-work" aria-label="Permalink: How does it work?" href="#how-does-it-work"></a></p>
<p dir="auto"><strong>Pongo treats PostgreSQL as a Document Database benefiting from JSONB support.</strong> Unlike the plain text storage of the traditional JSON type, JSONB stores JSON data in a binary format. This simple change brings significant advantages in terms of performance and storage efficiency.</p>
<p dir="auto">Pongo uses the following table structure for storing collections:</p>
<div dir="auto" data-snippet-clipboard-copy-content="CREATE TABLE IF NOT EXISTS &quot;YourCollectionName&quot; (
    _id UUID PRIMARY KEY,
    data JSONB
)"><pre><span>CREATE</span> <span>TABLE</span> <span>IF</span> NOT EXISTS <span><span>"</span>YourCollectionName<span>"</span></span> (
    _id UUID <span>PRIMARY KEY</span>,
    data JSONB
)</pre></div>
<p dir="auto"><strong>Essentially Pongo takes MongoDB api and translates it to the native PostgreSQL queries.</strong> It is a similar concept to <a href="https://martendb.io/" rel="nofollow">Marten</a> and AWS DocumentDB (see <a href="https://www.enterprisedb.com/blog/documentdb-really-postgresql" rel="nofollow">here</a> or <a href="https://news.ycombinator.com/item?id=18870397" rel="nofollow">there</a>, they seem to be using Mongo syntactic sugar on top of AuroraDB with Postgres).</p>
<p dir="auto"><strong>E.g. the MongoDB update syntax:</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="const pongoCollection = pongoDb.collection<User>(&quot;users&quot;);

await pongoCollection.updateOne(
  { _id: someId },
  { $push: { tags: &quot;character&quot; } }
);"><pre><span>const</span> <span>pongoCollection</span> <span>=</span> <span>pongoDb</span><span>.</span><span>collection</span><span>&lt;</span><span>User</span><span>&gt;</span><span>(</span><span>"users"</span><span>)</span><span>;</span>

<span>await</span> <span>pongoCollection</span><span>.</span><span>updateOne</span><span>(</span>
  <span>{</span> <span>_id</span>: <span>someId</span> <span>}</span><span>,</span>
  <span>{</span> <span>$push</span>: <span>{</span> <span>tags</span>: <span>"character"</span> <span>}</span> <span>}</span>
<span>)</span><span>;</span></pre></div>
<p dir="auto">will be translated to:</p>
<div dir="auto" data-snippet-clipboard-copy-content="UPDATE &quot;users&quot;
SET data = jsonb_set(data, '{tags}', (COALESCE(data->'tags', '[]'::jsonb) || to_jsonb('character')))
WHERE _id = '137ef052-e41c-428b-b606-1c8070a47eda';"><pre><span>UPDATE</span> <span><span>"</span>users<span>"</span></span>
<span>SET</span> data <span>=</span> jsonb_set(data, <span><span>'</span>{tags}<span>'</span></span>, (COALESCE(data<span>-</span><span>&gt;</span><span><span>'</span>tags<span>'</span></span>, <span><span>'</span>[]<span>'</span></span>::jsonb) <span>||</span> to_jsonb(<span><span>'</span>character<span>'</span></span>)))
<span>WHERE</span> _id <span>=</span> <span><span>'</span>137ef052-e41c-428b-b606-1c8070a47eda<span>'</span></span>;</pre></div>
<p dir="auto"><strong>Or for query:</strong></p>
<div dir="auto" data-snippet-clipboard-copy-content="const result = await pongoCollection
  .find({ &quot;address.history&quot;: { $elemMatch: { street: &quot;Elm St&quot; } } })
  .toArray();"><pre><span>const</span> <span>result</span> <span>=</span> <span>await</span> <span>pongoCollection</span>
  <span>.</span><span>find</span><span>(</span><span>{</span> <span>"address.history"</span>: <span>{</span> <span>$elemMatch</span>: <span>{</span> <span>street</span>: <span>"Elm St"</span> <span>}</span> <span>}</span> <span>}</span><span>)</span>
  <span>.</span><span>toArray</span><span>(</span><span>)</span><span>;</span></pre></div>
<p dir="auto">will result in:</p>
<div dir="auto" data-snippet-clipboard-copy-content="SELECT data
FROM &quot;users&quot;
WHERE jsonb_path_exists(
  data,
  '$.address.history[*] ? (@.street == &quot;Elm St&quot;)'
);"><pre><span>SELECT</span> data
<span>FROM</span> <span><span>"</span>users<span>"</span></span>
<span>WHERE</span> jsonb_path_exists(
  data,
  <span><span>'</span>$.address.history[*] ? (@.street == "Elm St")<span>'</span></span>
);</pre></div>
<p dir="auto"><h3 tabindex="-1" dir="auto">Storage</h3><a id="user-content-storage" aria-label="Permalink: Storage" href="#storage"></a></p>
<p dir="auto"><strong>The binary format of PostgreSQL JSONB means that data is pre-parsed, allowing faster read and write operations than text-based JSON.</strong> You don't have to re-parse the data every time you query it, which saves processing time and improves overall performance. Additionally, JSONB supports advanced indexing options like GIN and GiST indexes, making searches within JSONB documents much quicker and more efficient.</p>
<p dir="auto">Moreover, JSONB retains the flexibility of storing semi-structured data while allowing you to use PostgreSQL's robust querying capabilities. You can perform complex queries, joins, and transactions with JSONB data, just as you can with regular relational data.</p>
<p dir="auto"><strong>Contrary to common belief, JSON document data is structured.</strong> JSON has structure, but it is not enforced for each document. We can easily extend the schema for our documents, even for specific ones, by adding new fields. We should also not fail if the field we expect to exist, but doesn't.</p>
<p dir="auto">This flexibility, performance, and consistency combination makes PostgreSQL with JSONB a powerful tool. There are benchmarks showing that it can be even faster than MongoDB.</p>
<p dir="auto">Check more in:</p>
<ul dir="auto">
<li><a href="https://www.postgresql.org/docs/current/datatype-json.html" rel="nofollow">JSON Types Documentation</a></li>
<li><a href="https://www.postgresql.org/docs/current/functions-json.html" rel="nofollow">JSON Functions and Operators</a></li>
<li><a href="https://pganalyze.com/blog/gin-index#postgresql-jsonb-and-gin-indexes" rel="nofollow">PostgreSQL, JSONB and GIN Indexes by</a></li>
<li><a href="https://info.enterprisedb.com/rs/069-ALB-339/images/PostgreSQL_MongoDB_Benchmark-WhitepaperFinal.pdf" rel="nofollow">MongoDB vs PostgreSQL JSONB Benchmark</a></li>
<li><a href="https://ftisiot.net/postgresqljson/main/" rel="nofollow">How to JSON in PostgreSQL</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">Is Pongo an ORM?</h2><a id="user-content-is-pongo-an-orm" aria-label="Permalink: Is Pongo an ORM?" href="#is-pongo-an-orm"></a></p>
<p dir="auto">It's not. It's focused on effective handling of the document data specifics. Node.js ORMs have capabilites to handle JSONB, e.g. DrizzleORM has a good support for that for basic operations. Yet, they're all but limited to querying, usually for advanced ones you need to fallback to JSONPath or JSONB functions (so raw SQL). As you saw above, this syntax is not super pleasant to deal with. That's why Pongo aims to do it for you.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Is it production ready?</h2><a id="user-content-is-it-production-ready" aria-label="Permalink: Is it production ready?" href="#is-it-production-ready"></a></p>
<p dir="auto">What's there it's safe to use, but it's far from being 100% compliant with MongoDB. Pongo is a fresh project, so some stuff can be missing.</p>
<p dir="auto">Pongo is a community project, so once you find something, we encourage you to send us a GH issue or Pull Request extending the support or test coverage!</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[A reawakening of systems programming meetups (208 pts)]]></title>
            <link>https://notes.eatonphil.com/2024-07-07-systems-meetups.html</link>
            <guid>40897506</guid>
            <pubDate>Sun, 07 Jul 2024 13:20:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://notes.eatonphil.com/2024-07-07-systems-meetups.html">https://notes.eatonphil.com/2024-07-07-systems-meetups.html</a>, See on <a href="https://news.ycombinator.com/item?id=40897506">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
          <p>This year has seen a resurgence in really high quality systems
programming meetups. <a href="https://www.meetup.com/munich-database-meetup/">Munich Database
Meetup</a>, <a href="https://lu.ma/8ujc7st3?tk=DAAbmn">Berlin
Systems Group</a>, <a href="https://lu.ma/t6r4mi4v">SF Distributed
Systems Meetup</a>, <a href="https://nycsystems.xyz/">NYC
Systems</a>, <a href="https://twitter.com/BengaluruSys">Bengaluru
Systems</a>, to name a few.</p>
<p>This post summarizes a bit of disappointing recent tech meetup
history, the new trend of excellent systems programming meetups, and
ends with some encouragement and guidance for running your own systems
programming events.</p>
<p>I will be a little critical in this post but I want to preface by
saying: organizing meetups is really tough! It takes a lot of work and
I have a huge amount of respect for meetup organizers even when their
meetup style did not resonate with me.</p>
<p>Although much of this post talks about NYC Systems, the reason I think
this post is worth writing is because so many other meetups in a
similar vein popped up. I hope to encourage these other meetups and to
encourage folks in other major metros (London, for example) to start
similar meetups.</p>
<h3 id="meetups">Meetups</h3><p>I used to attend a bunch of meetups before the pandemic. But I quickly
got disillusioned. Almost every meetup was varying degrees of startups
pitching their product. The last straw for me was sitting through a talk
at a JavaScript meetup that was by a devrel employee of a startup who
literally gave a tutorial for their product.</p>
<p>There were also some pretty intelligent meetups like the New York
Haskell Users Group and the New York Emacs Meetup. But not being an
expert in either domain, and the attendees almost solely appearing to
be experts, I didn't particularly enjoy going.</p>
<p>There were a couple of meetups that felt inclusive for various
skill-levels of attendees yet still went into interesting
depth. Specifically, <a href="http://www.nylug.org/">New York Linux User
Group</a> and <a href="https://paperswelove.org/chapter/newyork/">Papers We Love
NYC</a>.</p>
<p>These meetups were exceptional because they were language- and
framework-agnostic, they would start broad to give you background, but
then go deep into a topic. Maybe you only understand 50% of what was
covered. But you get exposed to something new from an expert in a
domain.</p>
<p>Unfortunately, the pandemic happened and these two excellent meetups
basically have not come back.</p>
<h3 id="a-couple-of-students-in-munich">A couple of students in Munich</h3><p>The pandemic ended and I tried a couple of meetups I thought might be
better quality. Rust and Go. But they weren't much better than I
remembered. People would give a high level talk and brush over all the
interesting concepts.</p>
<p>I had been thinking of doing an in-person talk series since 2022.</p>
<blockquote><div lang="en" dir="ltr"><p>If I put together a systems/databases/distributed systems meetup in NYC (a physical meetup, not Zoom), who'd be interested (in attending, or presenting, or helping me organize, or donating space)?</p><p>No promises!</p></div>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1574875016067710976?ref_src=twsrc%5Etfw">September 27, 2022</a></blockquote> 
<p>But I was busy with TigerBeetle until December of 2023 when I was
messaged on LinkedIn by <a href="https://x.com/georg_kreuzmayr?lang=en">Georg
Kreuzmayr</a>, a graduate student
at Technical University of Munich (TUM).</p>
<p>Georg and his friends, fellow graduate students at TUM, started a
database club: <a href="https://www.tumuchdata.club/">TUMuchData</a>. We got to
talking about opportunities for collaboration and I started feeling a
bit embarrassed that a graduate student had more guts than I had to
get
<a href="https://notes.eatonphil.com/eight-years-of-tech-meetups.html">back</a>
onto the meetup organizer wagon.</p>
<p>A week later, with assurance from <a href="https://twitter.com/justinjaffray">Justin
Jaffray</a> that at least he would
show up with me if no one else did, I started the <a href="https://eatonphil.com/nyc-systems-coffee-club.html">NYC Systems Coffee
Club</a> to bring
together folks in NYC interested in any topic of systems programming
(e.g. compilers, databases, web browser internals, distributed
systems, formal methods, etc.). To bring them together in a completely
informal setting for coffee at 9am in the morning in a public space in
midtown Manhattan.</p>
<blockquote><div lang="en" dir="ltr"><p>Trying something new! If you're a dev in NYC working <br>on (or interested in) systems programming, grab a coffee and come hang out at 1 Bryant Park (indoor space) this Thursday 9AM - 9:30AM.</p><p>See post for details and fill out the Google Form or DM me!<a href="https://t.co/A4bzcPGy6x">https://t.co/A4bzcPGy6x</a> <a href="https://t.co/n1ECMd59ev">pic.twitter.com/n1ECMd59ev</a></p></div>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1734216183459512486?ref_src=twsrc%5Etfw">December 11, 2023</a></blockquote> 
<p>I set up that linked web page and started collecting subscribers to
the club via Google Form. Once a month I'd send an email out to the
list asking for RSVPs to this month's coffee club. The first 20 to
respond would get a calendar invite.</p>
<p><img src="https://notes.eatonphil.com/assets/coffee-club-invite.png" alt="/assets/coffee-club-invite.png"></p>
<p>And about the same time I started asking around on Twitter/LinkedIn if
someone would be interested in co-organizing a new systems programming
meetup in NYC. <a href="https://twitter.com/ngeloxyz">Angelo Saraceno</a>
immediately took me up on the idea and we met up.</p>
<h3 id="nyc-systems">NYC Systems</h3><p>We agreed on the premise: this would be a language- and
framework-agnostic meetup that was focused on engineering challenges,
not product pitches. It would be 100% for the sake of corporate
marketing, but corporate marketing of the <em>engineering team</em>, not the
product.</p>
<p><a href="https://nycsystems.xyz/">NYC Systems</a> was born!</p>
<p>We'd find speakers who could start broad and dive deep into some
interesting aspect of databases, programming languages, distributed
systems, and so on. Product pitches were necessary to establish a
context, but the focus of the talk would be about some interesting
recent technical challenge and how they dealt with it.</p>
<p>We'd schedule talks only every other month to ease our own burden in
organizing and finding great speakers.</p>
<p>Once Angelo and I had decided to go forward, the next two challenges
were finding speakers and finding a venue. Thanks to Twitter and
LinkedIn, finding speakers turned out to be the easy part.</p>
<p>It was harder to find a venue. It was surprisingly challenging to find
a company in NYC with a shared vision that the important thing about
being associated with a meetup like this is to be associated with the
quality of speakers and audience we can bring in by not allowing
transparent product pitches.</p>
<p>Almost every company in Manhattan with space we spoke with had a
requirement that they have their own speaker each night. That seemed
like a bad idea.</p>
<p>I think it was especially challenging to find a company willing to
relax about branding requirements like this because we were a new
meetup.</p>
<p>It was pretty frustrating not to find a sympathetic company with space
in Manhattan. And the only reason we didn't give up was because Angelo
was so adament that this kind of meetup actually happen. It's always
best to start something new with someone else for this exact
reason. You can keep each other going.</p>
<p>In the end we went with the only meetup that did not insist on their
own speaker or their own branding. A Brooklyn-based company whose CEO
immediately got in touch with me that they wanted to host us, <a href="https://trailofbits.com/">Trail
of Bits</a>.</p>
<h3 id="how-it-works">How it works</h3><p>To keep things easy, I set up a web page on my personal site with
information about the meetup. (Eventually we moved this to
<a href="https://nycsystems.xyz/">nycsystems.xyz</a>.) I set up a Google Form to
collect emails for a mailing list. And we started posting about the
group on Twitter and LinkedIn.</p>
<blockquote>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1758249063550447768?ref_src=twsrc%5Etfw">February 15, 2024</a></blockquote> 
<p>We published the event calendar in advance (an HTML table on the
website) and announced each event's speakers a week in advance of the
event. I'd send another Google Form to the mailing list taking RSVPs
for the night. The first 60 people to respond got a Google Calendar
invite.</p>
<p><img src="https://notes.eatonphil.com/assets/nyc-systems.png" alt="/assets/nyc-systems.png"></p>
<p>It's a bit of work, sure, but I'd do anything to avoid Meetup.com.</p>
<p>
  It is interesting to see every new systems programming meetup also
  not pick Meetup.com. The only one that went with it, Munich Database
  Meetup, is a revival of an existing group, the Munich NoSQL Meetup
  and presumably they didn't want to give up their subscribers. Though
  most others use lu.ma.
</p><p>The mailing list is now about 400+ people. And in each event RSVP we
have a wait list of 20-30 people. Of course although 60 people say Yes
initially, by the time of the event we have typically gotten about 50
people in attendance.</p>
<p>At each event, Trail of Bits provided screens, chairs, food, and
drink. Angelo had recording equipment so he took over audio/video
capturing (and later editing and publishing).</p>
<p>After each event we'd publish talk videos to our
<a href="https://www.youtube.com/@NYCSystems">@NYCSystems</a> Youtube.</p>
<h3 id="network-effects">Network effects</h3><p>In March 2024, the TUMuchData folks joined <a href="https://x.com/ifesdjeen">Alex
Petrov</a>'s Munich NoSQL Meetup to form the
Munich Database Meetup. In May, <a href="https://twitter.com/thegeeknarrator">Kaivalya
Apte</a> and <a href="https://twitter.com/mgill25">Manish
Gill</a> started the Berlin Systems Group,
inspired by Alex and the Munich Database Meetup.</p>
<blockquote>— Kaivalya Apte - The Geek Narrator (@thegeeknarrator) <a href="https://twitter.com/thegeeknarrator/status/1790782561515372676?ref_src=twsrc%5Etfw">May 15, 2024</a></blockquote> 
<p>In May 2024, two PhD students in the San Francisco Bay Area, <a href="https://x.com/ShadajL">Shadaj
Laddad</a> and <a href="https://x.com/conor_power23">Conor
Power</a>, started the SF Distributed
Systems meetup.</p>
<blockquote><p lang="en" dir="ltr">We’re super excited to be organizing a new SF Distributed Systems meetup NEXT WEEK! Our first meetup features <a href="https://twitter.com/julianhyde?ref_src=twsrc%5Etfw">@julianhyde</a> and <a href="https://twitter.com/conor_power23?ref_src=twsrc%5Etfw">@conor_power23</a> presenting work on extending SQL and applying algebraic properties, sign up at <a href="https://t.co/d2lLDaQ5iJ">https://t.co/d2lLDaQ5iJ</a></p>— Shadaj Laddad (@ShadajL) <a href="https://twitter.com/ShadajL/status/1790767187327889456?ref_src=twsrc%5Etfw">May 15, 2024</a></blockquote> 
<p>And in July 2024, <a href="https://twitter.com/shraddhaag">Shraddha Agrawal</a>,
<a href="https://twitter.com/anirudhRowjee">Anirudh Rowjee</a> and friends kicked
off the first Bengaluru Systems Meetup.</p>
<blockquote><div lang="en" dir="ltr"><p>Are you ready, Systems Enthusiasts of Bengaluru?</p><p>Speaking at our first-ever meetup on 6th July, we have:<a href="https://twitter.com/simsimsandy?ref_src=twsrc%5Etfw">@simsimsandy</a> with "Learn about the systems that power GenAI applications" and <a href="https://twitter.com/vivekgalatage?ref_src=twsrc%5Etfw">@vivekgalatage</a> with "The Browser Backstage: Performance vs Security" <br>(talks linked below!)</p></div>— Bengaluru Systems Meetup (@BengaluruSys) <a href="https://twitter.com/BengaluruSys/status/1808949578307183060?ref_src=twsrc%5Etfw">July 4, 2024</a></blockquote> 
<h3 id="suggestions">Suggestions</h3><p>First off, don't pay for anything yourself. Find a company who will
host. At the same time, don't feel the need to give in too much to the
demands of the company. I'd be happy to help you think through how to
talk about the event with companies. It is mutually beneficial for
them to get to give a 5-minute hiring/product pitch and not need to do
extensive branding nor to give a 30-minute product tutorial.</p>
<p>Second, keep a bit of pressure on speakers to not do an overview talk
and not to do a product pitch. Suggest that they tell the story of
some interesting recent bug or interesting recent feature. What
happened? Why was it hard? What did you learn?</p>
<p>Focusing on these types of talks will help you get a really
interesting audience.</p>
<p>I have been continuously surprised and impressed at the folks who show
up for NYC Systems. It's a mix of technical founders in the systems
space, pretty experienced developers in the systems space, graduate
students, and developers of all sorts.</p>
<p>I am certain we can only get these kinds of folks to show up because
we avoid product pitch-type talks.</p>
<p>Third, finding speakers is still hard! The best approach so far has
been to individually message folks in industry and academia who hang
out on Twitter. Sending out a public call is easy but doesn't often
pan out. So keep an eye on interesting companies in the area.</p>
<p>Another avenue I've been thinking about is messaging VC connections to
ask them if they know any engineers/technical founders/CTOs in the
area who could give an interesting technical talk.</p>
<p>Fourth, speak with other organizers! I finally met Alex Petrov in
person last month and we had a <a href="https://twitter.com/ifesdjeen/status/1806677549038063901">great
time</a>
talking about the challenges and joys of organizing really high
quality meetups.</p>
<p>I'm always happy to chat, DMs are open.</p>
<blockquote><p lang="en" dir="ltr">New post telling a bit of the history behind <a href="https://t.co/NEh1tm8v3Q">https://t.co/NEh1tm8v3Q</a>; why it only exists due to folks like <a href="https://twitter.com/georg_kreuzmayr?ref_src=twsrc%5Etfw">@georg_kreuzmayr</a> and <a href="https://twitter.com/ngeloxyz?ref_src=twsrc%5Etfw">@ngeloxyz</a>; the explosion of systems meetups around the world; and encouragement and suggestions for future organizers!<a href="https://t.co/dwe4TtmXKK">https://t.co/dwe4TtmXKK</a> <a href="https://t.co/ZMLkVYdZDJ">pic.twitter.com/ZMLkVYdZDJ</a></p>— Phil Eaton (@eatonphil) <a href="https://twitter.com/eatonphil/status/1809934997442498812?ref_src=twsrc%5Etfw">July 7, 2024</a></blockquote> 

	</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[YouTube embeds are bananas heavy and it’s fixable (266 pts)]]></title>
            <link>https://frontendmasters.com/blog/youtube-embeds-are-bananas-heavy-and-its-fixable/</link>
            <guid>40897205</guid>
            <pubDate>Sun, 07 Jul 2024 12:37:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://frontendmasters.com/blog/youtube-embeds-are-bananas-heavy-and-its-fixable/">https://frontendmasters.com/blog/youtube-embeds-are-bananas-heavy-and-its-fixable/</a>, See on <a href="https://news.ycombinator.com/item?id=40897205">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      
<p>TL;DR: YouTube Embeds are like 1.3MB in size with no shared resources between multiple embeds. Using a <a href="https://github.com/paulirish/lite-youtube-embed">&lt;lite-youtube&gt;</a> Web Component is more like 100k, <em>does</em> share resources, and sacrifices no functionality.  </p>



<p>You can put a YouTube video on any website. They help you do it. Under the <strong>Share </strong>menu right on youtube.com there is an option to <strong>&lt;&gt; Embed</strong> and you’ll see bit of HTML with an <code>&lt;iframe&gt;</code> in it. </p>



<figure><img fetchpriority="high" decoding="async" width="1024" height="429" src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=1024%2C429&amp;ssl=1" alt="" srcset="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=1024%2C429&amp;ssl=1 1024w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=300%2C126&amp;ssl=1 300w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=768%2C322&amp;ssl=1 768w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=1536%2C643&amp;ssl=1 1536w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/06/CleanShot-2024-06-30-at-09.12.30@2x.png?resize=2048%2C858&amp;ssl=1 2048w" sizes="(max-width: 1000px) 100vw, 1000px" data-recalc-dims="1"><figcaption>&lt;iframe&gt;s are never wonderful for performance, but they make sense for protected third-party content.</figcaption></figure>



<p>This is what I’m getting as I write:</p>


<pre aria-describedby="shcb-language-1" data-shcb-language-name="HTML, XML" data-shcb-language-slug="xml"><span><code><span>&lt;<span>iframe</span> 
  <span>width</span>=<span>"560"</span> 
  <span>height</span>=<span>"315"</span> 
  <span>src</span>=<span>"https://www.youtube.com/embed/LN1TQm942_U?si=EfW_M4bEHEO-idL3"</span>
  <span>title</span>=<span>"YouTube video player"</span>
  <span>frameborder</span>=<span>"0"</span>
  <span>allow</span>=<span>"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"</span>
  <span>referrerpolicy</span>=<span>"strict-origin-when-cross-origin"</span>
  <span>allowfullscreen</span>&gt;</span>
<span>&lt;/<span>iframe</span>&gt;</span></code></span><small id="shcb-language-1"><span>Code language:</span> <span>HTML, XML</span> <span>(</span><span>xml</span><span>)</span></small></pre>


<p>If I were Team YouTube, I’d get <code>loading="lazy"</code> on there to help with performance right away. No need for videos that aren’t even visible on the page to load right away. </p>


<pre aria-describedby="shcb-language-2" data-shcb-language-name="HTML, XML" data-shcb-language-slug="xml"><span><code><span><span><span>&lt;<span>iframe</span> </span>
</span></span><span><span><span>  <span>...</span></span>
</span></span><mark><span><span>  <span>loading</span>=<span>"lazy"</span></span>
</span></mark><span><span><span>  &gt;</span>
</span></span><span><span><span>&lt;/<span>iframe</span>&gt;</span>
</span></span></code></span><small id="shcb-language-2"><span>Code language:</span> <span>HTML, XML</span> <span>(</span><span>xml</span><span>)</span></small></pre>


<p>Plus I’d put some inline styles on there to keep the video fluid and maintain the original aspect ratio. Or you could target these and do that yourself in CSS. Here’s assuming the videos are the standard 16 / 9 aspect ratio:</p>


<pre aria-describedby="shcb-language-3" data-shcb-language-name="CSS" data-shcb-language-slug="css"><span><code><span>iframe</span><span>[src^=<span>"https://www.youtube.com/embed/"</span>]</span> {
  <span>inline-size</span>: <span>100%</span>;
  <span>block-size</span>: auto;
  <span>aspect-ratio</span>: <span>16</span> / <span>9</span>;
}</code></span><small id="shcb-language-3"><span>Code language:</span> <span>CSS</span> <span>(</span><span>css</span><span>)</span></small></pre>


<p>But… let’s not keep this HTML at all. I’m sure you read this blog post title, but let’s put a point on it:</p>



<figure><img decoding="async" width="952" height="1024" src="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=952%2C1024&amp;ssl=1" alt="" srcset="https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=952%2C1024&amp;ssl=1 952w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=279%2C300&amp;ssl=1 279w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?resize=768%2C826&amp;ssl=1 768w, https://i0.wp.com/frontendmasters.com/blog/wp-content/uploads/2024/07/CleanShot-2024-07-01-at-07.04.34@2x.png?w=1392&amp;ssl=1 1392w" sizes="(max-width: 952px) 100vw, 952px" data-recalc-dims="1"></figure>



<p>On a page with literally <em>nothing at all on it</em> other than a YouTube Embed, we’re looking at:</p>



<ul>
<li>32 requests</li>



<li>1.3 MB of data transfer</li>



<li>2.76s to load the page on my current WiFi connection</li>
</ul>



<p><a href="https://www.zachleat.com/web/youtube-embeds/">Zach Leatherman, equally exasperated by this</a>, noted:</p>



<blockquote>
<p>The weight also grows linearly with every embed—resources are&nbsp;<em>not</em>&nbsp;shared: two embeds weigh 2.4 MB; three embeds weigh 3.6 MB (you get the idea).</p>
</blockquote>



<p>Wow.</p>



<p>Looks like sizes are up a bit since Zach last looked as well.</p>



<h2 id="toc-1">The Appearance &amp; Functionality</h2>



<p>This is what you get from a YouTube Embed:</p>



<ul>
<li>You see a “poster” image of the video</li>



<li>You see the title of the video </li>



<li>You see a big play button — click it to play the video</li>
</ul>



<p>This is very little UI and functionality, which is fine! We can absolutely do all this without this many resources.</p>



<h2 id="toc-2">Why is it this way? 🤷‍♀️</h2>



<p>I don’t think we have any good answers here. In fact, I heard from a little birdie who ran it up the pole that they have tested lighter embeds and <em>found them to reduce engagement</em>. 😭</p>



<p>I’m just gonna straight up say I don’t believe it. It’s like when Google told us that taking up half the screen with AI generated answers led to people clicking on third-party results <em>more</em>, but then refused to show data or allow us to track those clicks ourselves.</p>



<p>And hey — sometimes there are unexpected results in testing. That’s why we test instead of guess. But because this is <em>so</em> counterintuitive and offtrack for so many other similar performance testing situations, this bears deeper scrutiny. It would benefit from an opening of the methodology and data. </p>



<p>Like if you tell me that if you hit people with a stick and they smile more, I’m gonna want you to stop until we can look at what’s going on there.</p>



<p>I <em>really</em> wish I could find a good link for this, but there is a famous story from YouTube engineers way-back-when who made a much lighter video page and put it into testing. They found, quite counterintuitively, that average page load times went <em>up.</em> But with a deeper look, they found that the lighter page was able to <em>reach more people, including people on low-power low-internet-speed devices</em> who were able to actually use YouTube for the first time, and them using it much more slowed those averages. That’s awesome! The speed of using the site was up <em>relatively</em> for everyone. The metric of the average page load speed was a red herring and ultimately not meaningful.</p>



<p>How do we know that’s not the same kind of thing happening here?</p>



<p>Remember the implications of all these resources isn’t just a little inconvenience. YouTube is so enormous we’re talking incredible amounts of wasted electricity and thus carbon output. Pulling a megabyte of data off every single YouTube Embed would be an incredible win all around. I might even say <em>not</em> improving this is environmentally negligent.</p>



<h2 id="toc-3">The Solution is to Replicate the Embed Experience Another Way. There are Open Source Web Components That Do It Well.</h2>



<p>With a little dab of irony, Google’s own performance champion Paul Irish has had a web component doing just this for years and years and years:</p>



<p><a href="https://github.com/paulirish/lite-youtube-embed">lite-youtube-embed</a></p>



<p>The pitch is solid:</p>



<blockquote>
<p>Provide videos with a supercharged focus on visual performance. This custom element renders just like the real thing but approximately 224× faster.</p>
</blockquote>



<p><strong>Two hundred and twenty four</strong> times faster. Which of course involves much less data transfer.</p>



<p>And I’d like to be very clear, also does the exact same thing as the default embed:</p>



<ul>
<li>You see a “poster” image of the video</li>



<li>You see the title of the video </li>



<li>You see a big play button — click it to play the video</li>
</ul>



<p>You lose nothing and gain tons of speed, efficiency, and default privacy.</p>



<h2 id="toc-4">Using Lite YouTube Embed</h2>



<ol>
<li>Link up the JavaScript to instantiate the Web Component</li>



<li>Use it</li>
</ol>



<p>You could install it from npm or copy and paste a copy into your own project or whatever. Or link it from a CDN:</p>


<pre aria-describedby="shcb-language-4" data-shcb-language-name="JavaScript" data-shcb-language-slug="javascript"><span><code><span>import</span> <span>"https://esm.sh/lite-youtube-embed"</span>;</code></span><small id="shcb-language-4"><span>Code language:</span> <span>JavaScript</span> <span>(</span><span>javascript</span><span>)</span></small></pre>


<p>That’s like this:</p>







<p>But the best way to use it is right in the README:</p>



<blockquote>
<p>Use this as your HTML, load the script asynchronously, and let the JS progressively enhance it.</p>
</blockquote>


<pre aria-describedby="shcb-language-5" data-shcb-language-name="HTML, XML" data-shcb-language-slug="xml"><span><code><span>&lt;<span>script</span> <span>defer</span> <span>src</span>=<span>"https://cdnjs.cloudflare.com/ajax/libs/lite-youtube-embed/0.3.2/lite-yt-embed.js"</span>&gt;</span><span>&lt;/<span>script</span>&gt;</span>

<span>&lt;<span>link</span> <span>rel</span>=<span>"stylesheet"</span> <span>href</span>=<span>"https://cdnjs.cloudflare.com/ajax/libs/lite-youtube-embed/0.3.2/lite-yt-embed.css"</span> <span>integrity</span>=<span>"sha512-utq8YFW0J2abvPCECXM0zfICnIVpbEpW4lI5gl01cdJu+Ct3W6GQMszVITXMtBLJunnaTp6bbzk5pheKX2XuXQ=="</span> <span>crossorigin</span>=<span>"anonymous"</span> <span>referrerpolicy</span>=<span>"no-referrer"</span> /&gt;</span>

<span>&lt;<span>lite-youtube</span> <span>videoid</span>=<span>"ogfYd705cRs"</span> <span>style</span>=<span>"background-image: url('https://i.ytimg.com/vi/ogfYd705cRs/hqdefault.jpg');"</span>&gt;</span>
  <span>&lt;<span>a</span> <span>href</span>=<span>"https://youtube.com/watch?v=ogfYd705cRs"</span> <span>class</span>=<span>"lty-playbtn"</span> <span>title</span>=<span>"Play Video"</span>&gt;</span>
    <span>&lt;<span>span</span> <span>class</span>=<span>"lyt-visually-hidden"</span>&gt;</span>Play Video: Keynote (Google I/O '18)<span>&lt;/<span>span</span>&gt;</span>
  <span>&lt;/<span>a</span>&gt;</span>
<span>&lt;/<span>lite-youtube</span>&gt;</span></code></span><small id="shcb-language-5"><span>Code language:</span> <span>HTML, XML</span> <span>(</span><span>xml</span><span>)</span></small></pre>


<p>With async loaded JavaScript, note the <code>background-image</code> is put into the HTML so it can all look right before the JavaScript loads. </p>







<h2 id="toc-5">Alternatives</h2>



<ul>
<li><a href="https://github.com/justinribeiro/lite-youtube">Shadow DOM version</a> (more protected styling, more annoying to style)</li>



<li>Do it yourself
<ul>
<li>Raymond Camden: <a href="https://www.raymondcamden.com/2022/11/17/building-a-youtube-embed-web-component-both-vanilla-and-webc-flavored">Building a YouTube Embed Web Component (both vanilla and WebC flavored)</a></li>



<li>Adrian Roselli: <a href="https://adrianroselli.com/2024/06/youtube-and-vimeo-web-component.html">YouTube and Vimeo Web Component</a></li>
</ul>
</li>



<li>Mux: <code><a href="https://github.com/muxinc/media-elements/tree/main/packages/youtube-video-element">&lt;youtube-video&gt;</a></code> (matches <code>&lt;video&gt;</code> DOM APIs)</li>



<li><a href="https://github.com/ibrahimcesar/react-lite-youtube-embed">React Port</a> &amp; <a href="https://github.com/vercel/next.js/tree/canary/packages/third-parties#youtube-embed">Next.js Official Version</a></li>
</ul>

    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Execute JavaScript in a WebAssembly QuickJS sandbox (126 pts)]]></title>
            <link>https://github.com/sebastianwessel/quickjs</link>
            <guid>40896873</guid>
            <pubDate>Sun, 07 Jul 2024 11:37:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/sebastianwessel/quickjs">https://github.com/sebastianwessel/quickjs</a>, See on <a href="https://news.ycombinator.com/item?id=40896873">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">QuickJS - Execute JavaScript in a WebAssembly QuickJS Sandbox</h2><a id="user-content-quickjs---execute-javascript-in-a-webassembly-quickjs-sandbox" aria-label="Permalink: QuickJS - Execute JavaScript in a WebAssembly QuickJS Sandbox" href="#quickjs---execute-javascript-in-a-webassembly-quickjs-sandbox"></a></p>
<p dir="auto">This TypeScript package allows you to safely execute JavaScript code within a WebAssembly sandbox using the QuickJS engine. Perfect for isolating and running untrusted code securely, it leverages the lightweight and fast QuickJS engine compiled to WebAssembly, providing a robust environment for code execution.</p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Features</h2><a id="user-content-features" aria-label="Permalink: Features" href="#features"></a></p>
<ul dir="auto">
<li><strong>Security</strong>: Run untrusted JavaScript code in a safe, isolated environment.</li>
<li><strong>File System</strong>: Can mount a virtual file system</li>
<li><strong>Custom Node Modules</strong>: Custom node modules are mountable</li>
<li><strong>Fetch Client</strong>: Can provide a fetch client to make http(s) calls</li>
<li><strong>Test-Runner</strong>: Includes a test runner and chai based <code>expect</code></li>
<li><strong>Performance</strong>: Benefit from the lightweight and efficient QuickJS engine.</li>
<li><strong>Versatility</strong>: Easily integrate with existing TypeScript projects.</li>
<li><strong>Simplicity</strong>: User-friendly API for executing and managing JavaScript code in the sandbox.</li>
</ul>
<p dir="auto"><strong><a href="https://sebastianwessel.github.io/quickjs/" rel="nofollow">View the full documentation</a></strong></p>
<p dir="auto"><strong><a href="https://github.com/sebastianwessel/quickjs/tree/main/example">Find examples in the repository</a></strong></p>
<p dir="auto"><h2 tabindex="-1" dir="auto">Basic Usage</h2><a id="user-content-basic-usage" aria-label="Permalink: Basic Usage" href="#basic-usage"></a></p>
<p dir="auto">Here's a simple example of how to use the package:</p>
<div dir="auto" data-snippet-clipboard-copy-content="import { quickJS } from '@sebastianwessel/quickjs'

// General setup like loading and init of the QuickJS wasm
// It is a ressource intensive job and should be done only once if possible 
const { createRuntime } = await quickJS()

// Create a runtime instance each time a js code should be executed
const { evalCode } = await createRuntime({
  allowFetch: true, // inject fetch and allow the code to fetch data
  allowFs: true, // mount a virtual file system and provide node:fs module
  env: {
    MY_ENV_VAR: 'env var value'
  },
})


const result = await evalCode(`
import { join } as path from 'path'

const fn = async ()=>{
  console.log(join('src','dist')) // logs &quot;src/dist&quot; on host system

  console.log(env.MY_ENV_VAR) // logs &quot;env var value&quot; on host system

  const url = new URL('https://example.com')

  const f = await fetch(url)

  return f.text()
}
  
export default await fn()
`)

console.log(result) // { ok: true, data: '<!doctype html>\n<html>\n[....]</html>\n' }"><pre><span>import</span> <span>{</span> <span>quickJS</span> <span>}</span> <span>from</span> <span>'@sebastianwessel/quickjs'</span>

<span>// General setup like loading and init of the QuickJS wasm</span>
<span>// It is a ressource intensive job and should be done only once if possible </span>
<span>const</span> <span>{</span> createRuntime <span>}</span> <span>=</span> <span>await</span> <span>quickJS</span><span>(</span><span>)</span>

<span>// Create a runtime instance each time a js code should be executed</span>
<span>const</span> <span>{</span> evalCode <span>}</span> <span>=</span> <span>await</span> <span>createRuntime</span><span>(</span><span>{</span>
  <span>allowFetch</span>: <span>true</span><span>,</span> <span>// inject fetch and allow the code to fetch data</span>
  <span>allowFs</span>: <span>true</span><span>,</span> <span>// mount a virtual file system and provide node:fs module</span>
  <span>env</span>: <span>{</span>
    <span>MY_ENV_VAR</span>: <span>'env var value'</span>
  <span>}</span><span>,</span>
<span>}</span><span>)</span>


<span>const</span> <span>result</span> <span>=</span> <span>await</span> <span>evalCode</span><span>(</span><span>`</span>
<span>import { join } as path from 'path'</span>
<span></span>
<span>const fn = async ()=&gt;{</span>
<span>  console.log(join('src','dist')) // logs "src/dist" on host system</span>
<span></span>
<span>  console.log(env.MY_ENV_VAR) // logs "env var value" on host system</span>
<span></span>
<span>  const url = new URL('https://example.com')</span>
<span></span>
<span>  const f = await fetch(url)</span>
<span></span>
<span>  return f.text()</span>
<span>}</span>
<span>  </span>
<span>export default await fn()</span>
<span>`</span><span>)</span>

<span>console</span><span>.</span><span>log</span><span>(</span><span>result</span><span>)</span> <span>// { ok: true, data: '&lt;!doctype html&gt;\n&lt;html&gt;\n[....]&lt;/html&gt;\n' }</span></pre></div>
<p dir="auto"><h2 tabindex="-1" dir="auto">Credits</h2><a id="user-content-credits" aria-label="Permalink: Credits" href="#credits"></a></p>
<p dir="auto">This lib is based on:</p>
<ul dir="auto">
<li><a href="https://github.com/justjake/quickjs-emscripten">quickjs-emscripten</a></li>
<li><a href="https://github.com/reearth/quickjs-emscripten-sync">quickjs-emscripten-sync</a></li>
<li><a href="https://github.com/streamich/memfs">memfs</a></li>
<li><a href="https://www.chaijs.com/" rel="nofollow">Chai</a></li>
</ul>
<p dir="auto">Tools used:</p>
<ul dir="auto">
<li><a href="https://bun.sh/" rel="nofollow">Bun</a></li>
<li><a href="https://biomejs.dev/" rel="nofollow">Biome</a></li>
<li><a href="https://hono.dev/" rel="nofollow">Hono</a></li>
<li><a href="https://github.com/poolifier/poolifier-web-worker">poolifier-web-worker</a></li>
<li><a href="https://github.com/isaacs/tshy">tshy</a></li>
<li><a href="https://github.com/mcollina/autocannon">autocannon</a></li>
</ul>
<p dir="auto"><h2 tabindex="-1" dir="auto">License</h2><a id="user-content-license" aria-label="Permalink: License" href="#license"></a></p>
<p dir="auto">This project is licensed under the MIT License.</p>
<hr>
<p dir="auto">This package is ideal for developers looking to execute JavaScript code securely within a TypeScript application, ensuring both performance and safety with the QuickJS WebAssembly sandbox.</p>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Malloc broke Serenity's JPGLoader, or: how to win the lottery (2021) (189 pts)]]></title>
            <link>https://sin-ack.github.io/posts/jpg-loader-bork/</link>
            <guid>40896102</guid>
            <pubDate>Sun, 07 Jul 2024 08:42:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://sin-ack.github.io/posts/jpg-loader-bork/">https://sin-ack.github.io/posts/jpg-loader-bork/</a>, See on <a href="https://news.ycombinator.com/item?id=40896102">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
        <p>I got the chance to investigate an interesting bug in
<a href="https://serenityos.org/">SerenityOS</a> this week. It was related to the decoding
of JPG images in the operating system. For some reason, when a JPG image is
viewed, it comes out like this:</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/lenna-broken.png" alt="Lenna,
showing up with incorrect colors."><figcaption>
            <p>Lenna,
showing up with incorrect colors.</p>
        </figcaption>
</figure>

<p>Weird, huh? Also seems like a simple confusion of RGB vs. BGR. And sure enough,
making the following change on <code>JPGLoader.cpp</code>:</p>
<div><pre tabindex="0"><code data-lang="diff"><span><span><span>-   const Color color { (u8)block.y[pixel_index], (u8)block.cb[pixel_index], (u8)block.cr[pixel_index] };
</span></span></span><span><span><span></span><span>+   const Color color { (u8)block.cr[pixel_index], (u8)block.cb[pixel_index], (u8)block.y[pixel_index] };
</span></span></span><span><span><span></span>    context.bitmap-&gt;set_pixel(x, y, color);
</span></span></code></pre></div><p>makes the image show up correctly. Case closed!</p>
<p>…not. Why did this even break in the first place?</p>
<p>The last non-reverted change
to <code>JPGLoader.cpp</code> is reported by Git to be over a month ago:</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/commitlog.png" alt="Commit log
at the time of JPGLoader being broken."><figcaption>
            <p>Commit log
at the time of JPGLoader being broken.</p>
        </figcaption>
</figure>

<p>And I remembered very well that JPG images worked just fine about a week or two
ago, as I had set a JPG image as my background and would’ve noticed if it looked
wrong.</p>
<p>Well, time to bisect! I didn’t know when to start, so I picked the last 1000
commits (where images showed up correctly), and started bisecting.</p>
<h2 id="bisect-hell">Bisect hell</h2>
<p>Please skip to the next section if you’d like to avoid C++ whining.</p>
<p>SerenityOS, being an operating system project that focuses on doing its own
thing, also has its own standard library called AK (which stands for
<span title="Andreas Kling">Agnostic Kit</span>).
This library is analogous to
C++’s STL, but is more readable due to not having to support a myriad of
different operating systems and not having to contort oneself to conform to
<a href="https://www.gnu.org/prep/standards/">hideous coding standards</a>.</p>
<p>One of the nice things about having the standard library in the same repository
as its users is that making changes is very easy as the change propagates to
everyone who pulls from master. However, this is a double edged sword when it
comes to C++; because <em>everyone</em> includes the standard library (even if you
don’t include it, your includes will), and because C++’s template system means
that everything that’s templated has to include the definitions in the header as
well, this means that <em>anytime</em> someone touches AK in a commit, the <em>entire</em>
operating system has to be rebuilt (~3400 files at the time of writing).
<code>ccache</code>, while being useful in many situations, cannot handle this case.
Additionally, due to the breakneck pace of the SerenityOS project, someone ends
up touching AK at least once every 100 commits or so.</p>
<p>As a result, during the 1000 commits I ended up bisecting for, I had to build
SerenityOS from scratch about 4-5 times on a 2011 laptop with Sandy Bridge
Mobile. While this isn’t the fault of the project, I’m still mad.</p>
<h2 id="bisect-results">Bisect results</h2>
<p>So, after bisecting 1000 commits, rebuilding the OS from scratch several times
and pulling my hair out because I didn’t understand how bisect worked, I
<em>finally</em> found the commit that broke JPG images. Drumroll please…</p>
<pre tabindex="0"><code>f89e8fb71a4893911ee5125f34bd5bbb99327d33
Author:     Gunnar Beutner
AuthorDate: Sat May 15 10:06:41 2021 +0200

AK+LibC: Implement malloc_good_size() and use it for Vector/HashTable

This implements the macOS API malloc_good_size() which returns the
true allocation size for a given requested allocation size. This
allows us to make use of all the available memory in a malloc chunk.

For example, for a malloc request of 35 bytes our malloc would
internally use a chunk of size 64, however the remaining 29 bytes
would be unused.

Knowing the true allocation size allows us to request more usable
memory that would otherwise be wasted and make that available for
Vector, HashTable and potentially other callers in the future.
</code></pre><p>Uh, sorry, what?</p>
<p>But it was. Building the commit right before this one showed the image
correctly:</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/lenna-beforebroken.png" alt="Lenna, before it was broken."><figcaption>
            <p>Lenna, before it was broken.</p>
        </figcaption>
</figure>

<p>Initial discussion with other developers made me think that either <code>JPGLoader</code>
or something else up the chain is depending on the capacity of a <code>Vector</code> and
writing directly into it when it really shouldn’t. So I began hunting down
possible causes.</p>
<h2 id="a-surprising-discovery">A surprising discovery</h2>
<p>The commit seemed to touch the two main container types: <code>HashTable</code> (which
<code>HashMap</code> depends on) and <code>Vector</code>. Both are used in the <code>JPGLoader</code> code, and
either could be the cause of the problem here.</p>
<p>I picked <code>HashTable</code> at random, removed the offending line:</p>
<div><pre tabindex="0"><code data-lang="diff"><span><span>         new_capacity = max(new_capacity, static_cast&lt;size_t&gt;(4));
</span></span><span><span><span>-        new_capacity = kmalloc_good_size(new_capacity * sizeof(Bucket)) / sizeof(Bucket);
</span></span></span><span><span><span></span>
</span></span><span><span>         auto* old_buckets = m_buckets;
</span></span></code></pre></div><p>and rebuilt the system, while joking around in chat about how this can’t
possibly be the problem.</p>
<p>…but then it fixed the issue.</p>
<p>What? How? Why does the <code>HashTable</code> capacity being different matter?! <code>HashTable</code>
isn’t even a contiguous stream of data you can write to, so you shouldn’t even
be able to assume its capacity!</p>
<p>Before I present the full story to you, I’ll have give a brief background on how
<code>JPGLoader</code> used to work.</p>
<h2 id="non-deterministic-serial-component-iteration">Non-deterministic serial component iteration</h2>
<p>That’s really the most appropriate title I can give this section.</p>
<p><code>JPGLoader</code> previously would read information about a JPG component from the
“Start of Frame” section of the JPG file into a struct called <code>Component</code>, and
then store that in a <code>HashTable</code>. Of course, the order in a JPG file for each
component should always be <code>Y</code>, <code>Cb</code> and <code>Cr</code>, so the <code>Component</code> struct would
idiosyncratically carry a <code>serial_id</code>, which was the position of the <code>Component</code>
within the file. The reason the <code>Component</code>s were in a hash table was that they
would then be checked against the component ordering in a “Start of Scan”
section to make sure all the components in the SOS section are in the expected
order. Why this code was written this way instead of just checking against the
ID by linearly iterating over the <code>Component</code>s, I have no idea.</p>
<p>Anyway, these components would then be iterated over during the different
decoding stages of <code>JPGLoader</code>, during which the component information would be
used to perform transforms on macroblocks.</p>
<h2 id="getting-close">Getting close</h2>
<p>When I added some debug prints to see how the components were read, I saw this
in the commit with the broken colors:</p>
<pre tabindex="0"><code>ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 2
ImageDecoder(33:33): Looking at component 1
ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 2
ImageDecoder(33:33): Looking at component 1
...
</code></pre><p>And when I checked out the previous commit, I saw this:</p>
<pre tabindex="0"><code>ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 1
ImageDecoder(33:33): Looking at component 2
ImageDecoder(33:33): Looking at component 0
ImageDecoder(33:33): Looking at component 1
ImageDecoder(33:33): Looking at component 2
...
</code></pre><p>The final piece of the puzzle: During the discussion of this bug with
<a href="https://twitter.com/the_semicolon_">CxByte</a> at my wit’s end, we ended up
manually messing with the order of the components to see what would happen, and
got this message:</p>
<pre tabindex="0"><code>ImageDecoder(32:32): Huffman stream exhausted. This could be an error!
ImageDecoder(32:32): Failed to build Macroblock 3277
</code></pre><p>…ah. Of course. It’s a stream.</p>
<h2 id="the-bug">The bug</h2>
<p>So, here’s a quick rundown of the bug:</p>
<ul>
<li>Someone used a <code>HashTable</code> to store objects that should be ordered, then
iterated over it using the basic <code>HashTable</code> iterator</li>
<li>The hash of the component IDs in the JPG files were passed into <code>int_hash</code>
for hash table bucket selection</li>
<li>Not only did they get <em>just the right value</em> to be in order, they got
inserted into a HashTable with <em>just the right amount</em> of buckets to be in
the correct order</li>
<li>This caused the Huffman stream to be read in the correct order for each
component, thereby masking the bug</li>
<li>This bug was masked since <code>JPGLoader</code>’s inception by sheer luck until someone
messed with the size of the <code>HashTable</code></li>
</ul>
<h2 id="the-fix">The fix</h2>
<p>And finally, at the end of about 10 hours of debugging, <a href="https://github.com/SerenityOS/Serenity/commit/a10ad24c760bfe713f1493e49dff7da16d14bf39">here is the
commit</a>
that fixed this monster of a bug:</p>
<pre tabindex="0"><code>a10ad24c760bfe713f1493e49dff7da16d14bf39
Author:     sin-ack
AuthorDate: Mon May 31 15:22:04 2021 +0000
Commit:     Linus Groh
CommitDate: Mon May 31 17:26:11 2021 +0100

LibGfx: Make JPGLoader iterate components deterministically

JPGLoader used to store component information in a HashTable, indexed
by the ID assigned by the JPEG file.  This was fine for most purposes,
however after f89e8fb7 this was revealed to be a flawed implementation
which causes non-deterministic iteration over components.

This issue was previously masked by a perfect storm of int_hash being
stable for the integer values 0, 1 and 2; and AK::HashTable having just
the right amount of buckets for the components to be ordered correctly
after being hashed with int_hash. However, after f89e8fb7,
malloc_good_size was used for determining the amount of space for
allocation; this caused the ordering of the components to change, and
images started showing up with the red and blue channels reversed. The
issue was finally determined to be inconsistent ordering after randomly
changing the order of the components caused Huffman decoding to fail.

This was the result of about 10 hours of hair-pulling and repeatedly
doing full rebuilds due to bisecting between commits that touched AK.
Gunnar, I like you, but please don't make me go through this again. :^)

Credits to Andrew Kaster, bgianf, CxByte and Gunnar for the debugging
help.
</code></pre><h2 id="final-thoughts">Final thoughts</h2>
<p>Sometimes the simplest problems might point at big mistakes within. I could’ve
probably fixed this by just swapping the order of the arguments right then and
there, and it would’ve worked; until someone else came along and changed the
order again. Thankfully, now we will be able to look at tubas with correct
colors in peace.</p>
<figure><img src="https://sin-ack.github.io/images/serenity-jpgloader/tuba.png" alt="A tuba with the
correct colors. Source: music123.com"><figcaption>
            <p>A tuba with the
correct colors. Source: music123.com</p>
        </figcaption>
</figure>

<h2 id="thanks">Thanks</h2>
<p>Thanks to CxByte, Gunnar, Andrew and Brian for their help with debugging this,
and their helpful tips. Gunnar in particular was the one who uncovered this bug,
and despite my satirical jab in the commit message helped uncover this very
interesting bug, so he’s the one who made this post possible.</p>
<p>Also, thanks to the person who introduced this bug (the commit log gets a little
fuzzy, so I’m not quite sure who did) and hope he buys a lottery ticket. :^)</p>
<p>And thank you for reading. I’ll probably post sometime in the future, but work’s
been keeping me busy. But maybe I’ll find another bug to suck me into a rabbit
hole. Stay tuned!</p>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[From the Transistor to the Web Browser, a rough outline for a 12 week course (104 pts)]]></title>
            <link>https://github.com/geohot/fromthetransistor</link>
            <guid>40895935</guid>
            <pubDate>Sun, 07 Jul 2024 07:54:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/geohot/fromthetransistor">https://github.com/geohot/fromthetransistor</a>, See on <a href="https://news.ycombinator.com/item?id=40895935">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-hpc="true"><article itemprop="text"><p dir="auto"><h2 tabindex="-1" dir="auto">From the Transistor to the Web Browser</h2><a id="user-content-from-the-transistor-to-the-web-browser" aria-label="Permalink: From the Transistor to the Web Browser" href="#from-the-transistor-to-the-web-browser"></a></p>
<p dir="auto">Hiring is hard, a lot of modern CS education is really bad, and it's hard to find people who understand the modern computer stack from first principles.</p>
<p dir="auto">Now cleaned up and going to be software only. Closer to being real.</p>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 1: Intro: Cheating our way past the transistor -- 0.5 weeks</h4><a id="user-content-section-1-intro-cheating-our-way-past-the-transistor----05-weeks" aria-label="Permalink: Section 1: Intro: Cheating our way past the transistor -- 0.5 weeks" href="#section-1-intro-cheating-our-way-past-the-transistor----05-weeks"></a></p>
<ul dir="auto">
<li>So about those transistors -- Course overview. Describe how FPGAs are buildable using transistors, and that ICs are just collections of transistors in a nice reliable package. Understand the LUTs and stuff. Talk briefly about the theory of transistors, but all projects must build on each other so we can’t build one.</li>
<li>Emulation -- Building on real hardware limits the reach of this course. Using something like Verilator will allow anyone with a computer to play.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 2: Bringup: What language is hardware coded in? -- 0.5 weeks</h4><a id="user-content-section-2-bringup-what-language-is-hardware-coded-in----05-weeks" aria-label="Permalink: Section 2: Bringup: What language is hardware coded in? -- 0.5 weeks" href="#section-2-bringup-what-language-is-hardware-coded-in----05-weeks"></a></p>
<ul dir="auto">
<li>Blinking an LED(Verilog, 10) -- Your first little program! Getting the simulator working. Learning Verilog.</li>
<li>Building a UART(Verilog, 100) -- An intro chapter to Verilog, copy a real UART, introducing the concept of MMIO, though the serial port may be semihosting. Serial test echo program and led control.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 3: Processor: What is a processor anyway? -- 3 weeks</h4><a id="user-content-section-3-processor-what-is-a-processor-anyway----3-weeks" aria-label="Permalink: Section 3: Processor: What is a processor anyway? -- 3 weeks" href="#section-3-processor-what-is-a-processor-anyway----3-weeks"></a></p>
<ul dir="auto">
<li>Coding an assembler(Python, 500) -- Straightforward and boring, write in python. Happens in parallel with the CPU building. Teaches you ARM assembly. Initially outputs just binary files, but changed when you write a linker.</li>
<li>Building a ARM7 CPU(Verilog, 1500) -- Break this into subchapters. A simple pipeline to start, decode, fetch, execute. How much BRAM do we have? We need at least 1MB, DDR would be hard I think, maybe an SRAM. Simulatable and synthesizable.</li>
<li>Coding a bootrom(Assembler, 40) -- This allows code download into RAM over the serial port, and is baked into the FPGA image. Cute test programs run on this.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 4: Compiler: A “high” level language -- 3 weeks</h4><a id="user-content-section-4-compiler-a-high-level-language----3-weeks" aria-label="Permalink: Section 4: Compiler: A “high” level language -- 3 weeks" href="#section-4-compiler-a-high-level-language----3-weeks"></a></p>
<ul dir="auto">
<li>Building a C compiler(Haskell, 2000) -- A bit more interesting, cover the basics of compiler design. Write in haskell. Write a parser. Break this into subchapters. Outputs ARM assembly.</li>
<li>Building a linker(Python, 300) -- If you are clever, this should take a day. Output elf files. Use for testing with QEMU, semihosting.</li>
<li>libc + malloc(C, 500) -- The gateway to more complicated programs. libc is only half here, things like memcpy and memset and printf, but no syscall wrappers.</li>
<li>Building an ethernet controller(Verilog, 200) -- Talk to a real PHY, consider carefully MMIO design.</li>
<li>Writing a bootloader(C, 300) -- Write ethernet program to boot kernel over UDP. First thing written in C. Maybe don’t redownload over serial each time and embed in FPGA image.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 5: Operating System: Software we take for granted -- 3 weeks</h4><a id="user-content-section-5-operating-system-software-we-take-for-granted----3-weeks" aria-label="Permalink: Section 5: Operating System: Software we take for granted -- 3 weeks" href="#section-5-operating-system-software-we-take-for-granted----3-weeks"></a></p>
<ul dir="auto">
<li>Building an MMU(Verilog, 1000) -- ARM9ish, explain TLBs and other fun things. Maybe also a memory controller, depending on how the FPGA is, then add the init code to your bootloader.</li>
<li>Building an operating system(C, 2500) -- UNIXish, only user space threads. (open, read, write, close), (fork, execve, wait, sleep, exit), (mmap, munmap, mprotect). Consider the debug interface you are using, ranging from printf to perhaps a gdbremote stub into kernel. Break into subchapters.</li>
<li>Talking to an SD card(Verilog, 150) -- The last hardware you have to do. And a driver</li>
<li>FAT(C, 300) -- A real filesystem, I think fat is the simplest</li>
<li>init, shell, download, cat, ls, rm(C, 250) -- Your first user space programs.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 6: Browser: Coming online -- 1 week</h4><a id="user-content-section-6-browser-coming-online----1-week" aria-label="Permalink: Section 6: Browser: Coming online -- 1 week" href="#section-6-browser-coming-online----1-week"></a></p>
<ul dir="auto">
<li>Building a TCP stack(C, 500) -- Probably coded in the kernel, integrate the ethernet driver into the kernel. Add support for networking syscalls to kernel. (send, recv, bind, connect)</li>
<li>telnetd, the power of being multiprocess(C, 50) --  Written in C, user can connect multiple times with telnet. Really just a bind shell.</li>
<li>Space saving dynamic linking(C, 300) -- Because we can, explain how dynamic linker is just a user space program. Changes to linker required.</li>
<li>So about that web(C, 500+) -- A “nice” text based web browser, using ANSI and terminal niceness. Dynamically linked and nice, nice as you want.</li>
</ul>
<p dir="auto"><h4 tabindex="-1" dir="auto">Section 7: Physical: Running on real hardware -- 1 week</h4><a id="user-content-section-7-physical-running-on-real-hardware----1-week" aria-label="Permalink: Section 7: Physical: Running on real hardware -- 1 week" href="#section-7-physical-running-on-real-hardware----1-week"></a></p>
<ul dir="auto">
<li>Talking to an FPGA(C, 200) -- A little code for the USB MCU to bitbang JTAG.</li>
<li>Building an FPGA board -- Board design, FPGA BGA reflow, FPGA flash, a 50mhz clock, a USB JTAG port and flasher(no special hardware, a little cypress usb mcu to do jtag), a few leds, a reset button, a serial port(USB-FTDI) also powering via USB, an sd card, expansion connector(ide cable?), and an ethernet port. Optional, expansion board, host USB port, NTSC TV out, an ISA port, and PS/2 connector on the board to taunt you. We provide a toaster oven and a multimeter thermometer to do reflow.</li>
<li>Bringup -- Compiling and downloading the Verilog for the board</li>
</ul>
</article></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: BeaconDB – An Alternative to Mozilla Location Services (181 pts)]]></title>
            <link>https://beacondb.net/</link>
            <guid>40895672</guid>
            <pubDate>Sun, 07 Jul 2024 06:25:50 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://beacondb.net/">https://beacondb.net/</a>, See on <a href="https://news.ycombinator.com/item?id=40895672">Hacker News</a></p>
<div id="readability-page-1" class="page"><div> <ul> <li><b>ethically sourced</b>: opt-in only data collection</li> <li><b>privacy friendly</b>: published information is obfuscated to protect transmitters and contributors</li> <li> <b>abuse resistant</b>: updating existing data requires information
          only available in physical range of a beacon
</li> </ul> <h2>contribute</h2> <p>
beaconDB has recently started to accept submissions. to add coverage for your area you
        can use the following apps on your phone:
</p> <ul> <li> <a href="https://github.com/mjaakko/NeoStumbler">NeoStumbler</a>:
          supports cell towers, wifi networks and bluetooth devices
<ul> <li> <a href="https://f-droid.org/packages/xyz.malkki.neostumbler.fdroid/">download on F-Droid</a> </li> <li>
in the Settings tab, set the endpoint to <code>https://beacondb.net</code> </li> </ul> </li> <li> <a href="https://github.com/zamojski/TowerCollector">Tower Collector</a>: only supports cell towers
<ul> <li> <a href="https://f-droid.org/packages/info.zamojski.soft.towercollector/">download on F-Droid</a>
or
<a href="https://play.google.com/store/apps/details?id=info.zamojski.soft.towercollector">Google Play</a> </li> <li>
in Upload Preferences, enable support for custom MLS services and
              set the address to <code>https://beacondb.net/v2/geosubmit</code> </li> </ul> </li> </ul> <p>
data you submit will be aggregated and shared under a public domain
        license. for more information on how your data is handled, see the
<a href="https://beacondb.net/privacy">privacy notice</a>.
</p> <h2>usage</h2> <p> <b>
beaconDB is experimental and should not be used by critical services
</b> </p> <p>
if you own an Android phone running the latest preview version of <a href="https://microg.org/">microG</a>, you can easily give beaconDB a spin without needing to install
        anything. in microG Settings on the Location page, pressing the three
        dots in the top right lets you set a custom service URL. you can set
        this to <code>https://beacondb.net/</code> to give beaconDB a try.
</p> <p>
as beaconDB is starting from scratch there is likely no wifi coverage
        for your area. if beaconDB can't estimate your location using wifi, it
        will fallback to an approximate cell tower location sourced from MLS'
        final data dump. note that submissions will take at least 5 minutes to
        become available in the beaconDB API.
</p> <h2>developers</h2> <p>
beaconDB hosts an endpoint at
<code>https://beacondb.net/v1/geolocate</code> which is compatible with <a href="https://ichnaea.readthedocs.io/en/latest/api/geolocate.html">Ichnaea's request format</a>. if your software has a large amount of users, please don't use this
        as a default location service. beaconDB infrastructure is not yet
        capable of handling a large amount of requests.
</p> <p>
data dumps are currently not available as I'm still researching the
        measures I need to take to protect the privacy of both contributors and
        AP owners.
</p> <hr> <ul> <li>
source code <a href="https://codeberg.org/beacondb/beacondb">on Codeberg</a> </li> <li>
chat <a href="https://matrix.to/#/#_oftc_#beacondb:matrix.org">on Matrix</a>
and <a href="irc://irc.oftc.net/#beacondb">IRC</a> </li> <li> <a href="https://codeberg.org/beacondb/beacondb/issues">bug tracker</a> </li> <li><a href="https://beacondb.net/privacy">privacy notice</a></li> <li>made by <a href="https://joel.net.au/">Joel Koen</a></li> </ul> </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Why Italy Fell Out of Love with Cilantro (120 pts)]]></title>
            <link>https://www.atlasobscura.com/articles/what-are-italian-herbs</link>
            <guid>40895441</guid>
            <pubDate>Sun, 07 Jul 2024 05:22:49 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.atlasobscura.com/articles/what-are-italian-herbs">https://www.atlasobscura.com/articles/what-are-italian-herbs</a>, See on <a href="https://news.ycombinator.com/item?id=40895441">Hacker News</a></p>
<div id="readability-page-1" class="page"><section id="article-body">
<p><span>When you think of Italian </span>herbs, cilantro (also known as coriander) is probably not the first one that comes to mind. Yet crack open the fifth-century Roman cookbook <em>Apicius</em>, and you’ll find it included in <a href="https://notjustdormice.wordpress.com/2014/10/07/coriander-the-nations-favourite-herb/">18 percent</a> of all recipes. Roman chefs prized both the citrusy seeds and pungent leaves of the plant they called <em>coriandrum</em> for sauces, salads, roasts, and flavored beverages, among other dishes.</p>
<p>Compare this with Pellegrino Artusi’s <em>Science in the Kitchen and the Art of Eating Well</em>, published in 1891 and often considered the foundational text of <a href="https://www.atlasobscura.com/articles/historical-italian-cookbook">modern Italian cuisine</a>. Coriander leaves are absent from the book’s nearly 800 recipes, and the seeds show up in just four desserts. Artusi also warned readers to beware of buying cinnamon powder from unscrupulous merchants who “throw in handfuls of coriander seeds to increase the volume with a cheap ingredient.” From this reference, we can infer that there was no lack of coriander in late 19th-century Italy. But at some point between <em>Apicius</em> and Artusi, Italians largely stopped cooking with it.</p>
<p>“In dishes, I would be surprised to ever find [coriander] in something from 1700 onwards,” says Karima Moyer-Nocchi, a culinary historian at the University of Siena in <a href="https://www.atlasobscura.com/things-to-do/italy">Italy</a>. Moyer-Nocchi explains that while coriander is not entirely absent from Italian cuisine today, its uses are far more limited than in past centuries. “Predominantly in central Italy, <em>porchetta</em> is going to be prepared with slightly crushed coriander seeds,” says Moyer-Nocchi. “Around the time when people are slaughtering their pigs, you’ll find big bags of coriander at the supermarket.” The leaves, on the other hand, “are absolutely not being used,” she adds. “I have to drive 45 minutes to a grocery store in another city to find it, or grow it myself.”</p>
<figure><img src="https://img.atlasobscura.com/Su_NMH3VLm2LvMVBnNpydvO57xpSu38TTyqdOKeDq5s/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9mOGJhMTdiOS1m/NzI1LTQwNDUtYjMx/MC0wMTBhOTkzZDIz/YjhmOGE5NDhhNTMy/ODg2OThmMzFfUG9y/Y2hldHRhXygzMTY4/MjA3OTQ2KS5qcGc.jpg" alt="The boneless rolled pork roast <em>porchetta</em> is seasoned with coriander seeds in some regions of Italy. " width="auto" data-kind="article-image" id="article-image-102585" data-src="https://img.atlasobscura.com/Su_NMH3VLm2LvMVBnNpydvO57xpSu38TTyqdOKeDq5s/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9mOGJhMTdiOS1m/NzI1LTQwNDUtYjMx/MC0wMTBhOTkzZDIz/YjhmOGE5NDhhNTMy/ODg2OThmMzFfUG9y/Y2hldHRhXygzMTY4/MjA3OTQ2KS5qcGc.jpg"><figcaption>The boneless rolled pork roast <em>porchetta</em> is seasoned with coriander seeds in some regions of Italy. <a target="_blank" href="https://commons.wikimedia.org/wiki/File:Porchetta_(3168207946).jpg">Pedro Angelini/CC BY 2.0</a></figcaption></figure>
<p>Native to Europe, Asia, and North Africa, coriander has a long and widespread history of human cultivation. Latin <em>coriandrum</em>, the source of many modern names for the plant, was borrowed from the Ancient Greek <em>koriandron</em> or <em>koriadnon</em>. The Romans developed a taste for the ingredient through the extensive Greek influence on their cuisine.</p>
<p>During the Roman era, Moyer-Nocchi says, “coriander is being grown locally in Italy, whereas other spices are coming in through the trade routes.” Coriander was also imported due to high demand. Pliny the Elder wrote in the first century that the herb was extensively grown in Roman Egypt. Archaeologists have found coriander seeds alongside those of other herbs like dill and fennel at Roman sites throughout Europe, <a href="https://www.researchgate.net/figure/The-Roman-distribution-of-coriander-waterlogged-records-only_fig2_225354890">including Britain</a>. The frequency with which these seeds are found, and the fact that they have been discovered in remote settlements far from centers of power, demonstrates that coriander was consumed by all levels of Roman society.</p>
<p>Aside from food, coriander was cultivated for medicinal purposes like soothing stomach aches, and for food preservation thanks to the seeds’ antibacterial properties, which is why they are still used in some of Italy’s regional salt-cured meats.</p>
<p>Moyer-Nocchi describes a combination of factors that contributed to coriander’s decline after the fall of Rome. One was that the former empire absorbed influences from Germanic tribes to the north like the Visigoths, “who don’t have that tradition” of cooking with coriander. Another was that coriander’s local availability made it less elite than other spices. “Culturally, it’s not an expression of anyone’s wealth,” says Moyer-Nocchi. Instead, Asian spices like cinnamon and cardamom, imported from afar at great cost, became medieval status symbols.</p>
<figure><img src="https://img.atlasobscura.com/XvJHzI2Hk4-gzxR-GCbBx_Nu-t3f_iiNuTUSXdCDPP4/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9hZmU2NTdjZC00/MTAxLTRiNWYtYTE3/Mi04MjE1ZGJkYjc1/MmI5OWVhN2Y5MzE0/YjA4YjNlMzhfUHVs/bHVtX051bWlkaWN1/bV8oTnVtaWRpYW5f/Q2hpY2tlbilfYWNj/b21wYW5pZWRfd2l0/aF9Db25jaGljbGFf/Q3VtX2ZhYmFfKEJl/YW5zX3dpdGhfQ3Vt/aW4pXygxNjM1NzYz/MzE1NSkuanBn.jpg" alt="&quot;Numidian chicken,&quot; named for a region in Roman North Africa, is one of many dishes in the ancient cookbook <em>Apicius</em> made with coriander." width="auto" data-kind="article-image" id="article-image-102587" data-src="https://img.atlasobscura.com/XvJHzI2Hk4-gzxR-GCbBx_Nu-t3f_iiNuTUSXdCDPP4/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9hZmU2NTdjZC00/MTAxLTRiNWYtYTE3/Mi04MjE1ZGJkYjc1/MmI5OWVhN2Y5MzE0/YjA4YjNlMzhfUHVs/bHVtX051bWlkaWN1/bV8oTnVtaWRpYW5f/Q2hpY2tlbilfYWNj/b21wYW5pZWRfd2l0/aF9Db25jaGljbGFf/Q3VtX2ZhYmFfKEJl/YW5zX3dpdGhfQ3Vt/aW4pXygxNjM1NzYz/MzE1NSkuanBn.jpg"><figcaption>“Numidian chicken,” named for a region in Roman North Africa, is one of many dishes in the ancient cookbook <em>Apicius</em> made with coriander. <a target="_blank" href="https://commons.wikimedia.org/wiki/File:Pullum_Numidicum_(Numidian_Chicken)_accompanied_with_Conchicla_Cum_faba_(Beans_with_Cumin)_(16357633155).jpg">Carole Raddato/CC BY-SA 2.0 </a></figcaption></figure>
<p>Moyer-Nocchi explains that medieval Italians divided spices into two categories: “sweet” and “strong.” Powdered blends of sweet spices—including sugar—were used in a majority of dishes, but “coriander is put over into the strong spices with pepper,” she says, “so it’s going to be used less.” Coriander leaves fell even further out of fashion than the seeds because their distinct flavor clashed with the trendy imported ingredients of the time, such as rosewater. In 1544, physician and botanist Pietro Andrea Mattioli described the leaves as smelling like <a href="https://www.google.com/books/edition/The_Oxford_Companion_to_Italian_Food/-HStec87HdcC?hl=en&amp;gbpv=1&amp;dq=mattioli+coriander&amp;pg=PT169&amp;printsec=frontcover">bed bugs or stink bugs</a>, a comparison <a href="https://www.foodpassages.com/jottings-by-joel/intowner-columns/saved-from-the-two-headed-serpent-the-curious-history-of-coriander-part-i/">echoed by later authors</a>.</p>
<p>Coriander leaf was already mostly absent from Italian cuisine by the Renaissance, but the seeds continued to be used as a spice. They were also coated in sugar to make <em>confetti</em>, or <a href="https://www.merriam-webster.com/dictionary/comfit">“comfits” in English</a>. These were chewed at banquets as an after-dinner mouth freshener and digestive, similar to <em>mukhwas</em>, the mixture of sweetened whole spices chewed in South Asia today <a href="https://www.thespruceeats.com/mukhwa-dessert-recipes-1957834">for the same purpose</a>. At festive celebrations, coriander comfits were thrown and scattered, giving rise to the English word “confetti” for the paper particles that <a href="https://italoamericano.org/italian-curiosities-coriandoli/">later replaced them</a>. In modern Italy, paper confetti is still called <em>coriandoli</em>, meaning “coriander seeds,” while <em>confetti</em> usually refers to a different kind of comfit, the sugared almonds given out <a href="https://www.google.com/books/edition/Italian_False_Friends/APs2DwAAQBAJ?hl=en&amp;gbpv=1&amp;dq=coriandolo+confetti&amp;pg=PT49&amp;printsec=frontcover">at weddings and communions</a>.</p>
<p>Italy enjoyed a reputation as a center of culinary innovation and refinement until the end of the 16th century, says Moyer-Nocchi, when France replaced it as Europe’s trend-setter. “And that’s where spices just fall by the wayside,” she says. French chefs of the 17th and 18th centuries deliberately set themselves apart from the earlier Italian tradition by focusing on fresh herbs instead of dried spices and specific ingredient pairings instead of sweet and strong spice blends.</p>
<p>As Italian chefs looked to the example of the French, “Italy frankly lost its culinary identity with the utter dominance of France for the next two centuries,” says Moyer-Nocchi. And when a distinct Italian culinary identity emerged with the unification of the modern nation in the 19th century, long-abandoned coriander was not revived, but left behind.</p>
<figure><img src="https://img.atlasobscura.com/QMnUfAhbffUcEktW4SAxFXuuGYHrM8ka-BqVxM9PaEw/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9kODdlY2EwZi00/N2RlLTRmMzktODZl/MS0yN2ZjNjM3Y2Y4/MDJmOGE5NDhhNTMy/ODg2OThmMzFfMjAx/Ny0wNi0yMl9TaWVu/YV8xNV8oY3JvcHBl/ZCkuanBn.jpg" alt="Coriander seed is sometimes used with other spices in <em>cavallucci</em>, a Christmas pastry from central Italy." width="auto" data-kind="article-image" id="article-image-102586" data-src="https://img.atlasobscura.com/QMnUfAhbffUcEktW4SAxFXuuGYHrM8ka-BqVxM9PaEw/rs:fill:12000:12000/q:81/sm:1/scp:1/ar:1/aHR0cHM6Ly9hdGxh/cy1kZXYuczMuYW1h/em9uYXdzLmNvbS91/cGxvYWRzL2Fzc2V0/cy9kODdlY2EwZi00/N2RlLTRmMzktODZl/MS0yN2ZjNjM3Y2Y4/MDJmOGE5NDhhNTMy/ODg2OThmMzFfMjAx/Ny0wNi0yMl9TaWVu/YV8xNV8oY3JvcHBl/ZCkuanBn.jpg"><figcaption>Coriander seed is sometimes used with other spices in <em>cavallucci</em>, a Christmas pastry from central Italy. <a target="_blank" href="https://upload.wikimedia.org/wikipedia/commons/c/c8/2017-06-22_Siena_15_%28cropped%29.jpg">Nemo bis/CC BY-SA 3.0</a></figcaption></figure>
<p>Modern Italians see coriander as a foreign ingredient that separates them from other groups of people; what Moyer-Nocchi calls a “culinary marker.” “That comes down to a very basic sort of [idea], ‘What are the flavors that are going to express my identity?” she says. These days, “coriander just doesn’t fit into the <a href="https://www.atlasobscura.com/articles/do-italians-eat-spaghetti-and-meatballs">culinary grammar</a> of how Italians choose to express themselves.”</p>
<p>Moyer-Nocchi points out that coriander is not the only herb whose popularity has ebbed and flowed in Italy over the centuries. Marjoram was once widely used, but “no one necessarily associates that with Italy anymore,” she says. On the other hand, some of the flavors modern Italians use to express themselves have not actually been “Italian” for very long. Basil, which originated in Asia, has only been part of Italian cuisine for a few hundred years. “It’s very young, and yet seems so Italian,” Moyer-Nocchi says.</p>
<p>From Thailand with chilies to Belgium with chocolate, many modern nations have embraced once-foreign ingredients, folding them into their culinary identity until their absence <a href="https://www.atlasobscura.com/articles/dan-pashman-anythings-pastable-carbonara">becomes unthinkable</a>. The curious history of cilantro in Italy shows that the reverse is also true. Sometimes, an ingredient becomes so unpopular that we forget it’s been there all along.</p>
<p><em>Gastro Obscura covers the world’s most wondrous food and drink.
<br>
<a href="https://www.atlasobscura.com/newsletters/gastro-obscura">Sign up for our email, delivered twice a week</a>.</em></p>
</section></div>]]></description>
        </item>
        <item>
            <title><![CDATA["Out of Band" network management is not trivial (109 pts)]]></title>
            <link>https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OutOfBandManagementNotTrivial</link>
            <guid>40895167</guid>
            <pubDate>Sun, 07 Jul 2024 04:00:41 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OutOfBandManagementNotTrivial">https://utcc.utoronto.ca/~cks/space/blog/sysadmin/OutOfBandManagementNotTrivial</a>, See on <a href="https://news.ycombinator.com/item?id=40895167">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>"Out of band" network management is not trivial</h2>

	<p><small>July  6, 2024</small></p>
</div><div><p>One of the Canadian news items of the time interval is that <a href="https://crtc.gc.ca/eng/publications/reports/xona2024.htm">a
summary of the official report on the 2022 Rogers Internet and phone
outage has been released</a> (see
also the <a href="https://www.cbc.ca/news/politics/rogers-outage-human-error-system-deficiencies-1.7255641">CBC summary of the summary</a>,
and the <a href="https://en.wikipedia.org/wiki/2022_Rogers_Communications_outage">Wikipedia page on the outage</a>). This
was an extremely major outage that took down both Internet and phone
service for a lot of people for roughly a day and caused a series
of failures in services and systems that turned out to rely on
Rogers for (enough of) their phone and Internet connectivity. In
the wake of the report, some people are (correctly) pointing to
Rogers not having any <a href="https://en.wikipedia.org/wiki/Out-of-band_management">"Out of Band" network management</a> capability
as one of the major contributing factors. Some people have gone so
far as to suggest that out of band network management is an obvious
thing that everyone should have. As it happens I have some opinions
on this, and the capsule summary is that out of band network
management is non-trivial.</p>

<p>(While the outage 'only' cut off an estimated 12 million people,
the total population of Canada is about 40 million people, so it
directly affected more than one in four Canadians.)</p>

<p>Obviously, doing out of band network management means that you need
a dedicated set of physical hardware for your OOB network; separate
switches, routers, local network cabling, and long distance fiber
runs between locations (whether that is nearby university buildings
or different cities). If you're serious, you probably want your OOB
fiber runs to have different physical paths than your regular network
fiber, so one backhoe accident can't cut both of them. This separate
network infrastructure has to run to everything you want to manage
and also to everywhere you want to manage your network from. This
is potentially a lot of physical hardware and networking, and as
they say it can get worse.</p>

<p>(This out of band network also absolutely has to be secure, because
it's a back door to your entire network.)</p>

<p>When you set up OOB network management, you have a choice to make;
is your OOB network the only way to manage equipment, or can you
manage equipment either 'in-band' through your regular network or
through the out of band network. If your OOB network is your only
way of managing things, you not only have to build a separate
network, you have to make sure it is fully redundant, because
otherwise you've created a single point of failure for (some)
management. If your OOB network is a backup, you don't necessarily
need as much redundancy (although you may want some), but now you
need to actively monitor and verify that both access paths work.
You also have two access paths to keep secure, instead of just one.</p>

<p>Security or rather access authentication is another complication
for out of band management networks. If you need your OOB network,
you have to assume that all other networks aren't working, which
means that everything your network routers, switches, and so on
need to authenticate your access has to be accessible through the
OOB management network (possibly in addition to through your regular
networks, if you also have in-band management). This may not be
trivial to arrange, depending on what sort of authentication system
you're using. You also need to make sure that your overall
authentication flow can complete using only OOB network information
and services (so, for example, your authentication server can't
reach out to a third party provider's MFA service to send push
notifications to <a href="https://utcc.utoronto.ca/~cks/space/blog/tech/MFABasicOptionsIn2023">authentication apps</a>
on people's phones).</p>

<p>Locally, <a href="https://support.cs.toronto.edu/">we</a> have what I would
describe as a discount out of band management network. It has a
completely separate set of switches, cabling, and building to
building fiber runs, and some things have their management interfaces
on it. It doesn't have any redundancy, which is acceptable in our
particular environment. Unfortunately, because it's a completely
isolated network, it can be a bit awkward to use, especially if you
want to put a device on it that would appreciate modern conveniences
like the ability to send alert emails if something happens (or even
send syslog messages to a remote server; currently <a href="https://utcc.utoronto.ca/~cks/space/blog/sysadmin/CentralizeSyslog">our central
syslog server</a> isn't on this network, although
we should probably fix that).</p>

<p>In many cases I think you're better off having redundant and and
hardened in-band management, especially with smaller networks.
Running an out of band network is effectively having two separate
networks to look after instead of just one; if you have limited
resources (including time and attention), I think you're further
ahead focusing on making a single network solid and redundant rather
than splitting your efforts.</p>
</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: A free minimalist daily habit tracker (122 pts)]]></title>
            <link>https://rdht.vercel.app/</link>
            <guid>40893866</guid>
            <pubDate>Sat, 06 Jul 2024 22:37:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://rdht.vercel.app/">https://rdht.vercel.app/</a>, See on <a href="https://news.ycombinator.com/item?id=40893866">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><div><div><p>Offline use</p></div><p>You can use this app fully offline for as long as you want!</p></div><div><div><p>Streaks</p></div><p>Track your streaks for each habit. Along with your completions and longest streaks</p></div><div><div><p>Pausing</p></div><p>Need a break? Pause the app and come back to pick up right where you left off</p></div><div><div><p>Visualize your progress</p></div><p>View your daily completions on a simple to use visual map</p></div></div><div><div><h3>Offline use</h3><p>This app can be fully used offline for however long you want! You can sign in with your email if you want to sync your data between devices</p></div><p><img alt="map" loading="lazy" width="578" height="279" decoding="async" data-nimg="1" srcset="https://rdht.vercel.app/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Foffline-dark.763094e9.png&amp;w=640&amp;q=75 1x, https://rdht.vercel.app/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Foffline-dark.763094e9.png&amp;w=1200&amp;q=75 2x" src="https://rdht.vercel.app/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Foffline-dark.763094e9.png&amp;w=1200&amp;q=75"><img alt="map" loading="lazy" width="542" height="273" decoding="async" data-nimg="1" srcset="https://rdht.vercel.app/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Foffline-light.7a3bb00f.png&amp;w=640&amp;q=75 1x, https://rdht.vercel.app/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Foffline-light.7a3bb00f.png&amp;w=1200&amp;q=75 2x" src="https://rdht.vercel.app/_next/image?url=%2F_next%2Fstatic%2Fmedia%2Foffline-light.7a3bb00f.png&amp;w=1200&amp;q=75"></p></div></div></div>]]></description>
        </item>
    </channel>
</rss>