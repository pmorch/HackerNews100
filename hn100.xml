(ignoring known css parsing error)
<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0">
    <channel>
        <title>HN100 - Readable Contents</title>
        <link>https://hn.algolia.com/api/v1/search_by_date?tags=%28story,poll%29&amp;numericFilters=points%3E100</link>
        <description>Uses Readability to add bodies to the RSS feed</description>
        <lastBuildDate>Fri, 13 Dec 2024 09:30:12 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[A new video captures a 1968 demo of IBM’s Executive Terminal (167 pts)]]></title>
            <link>https://spectrum.ieee.org/ibm-demo</link>
            <guid>42405462</guid>
            <pubDate>Fri, 13 Dec 2024 02:30:01 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://spectrum.ieee.org/ibm-demo">https://spectrum.ieee.org/ibm-demo</a>, See on <a href="https://news.ycombinator.com/item?id=42405462">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-headline="When IBM Built a War Room for Executives"><p>
	It seems to me that every item in the 
	<a href="https://computerhistory.org/" rel="noopener noreferrer" target="_blank">Computer History Museum</a>’s collection has a biography of sorts—a life before CHM, a tale about how it came to us, and a life within the museum. The chapters of that biography include the uses made of it, and the historical and interpretive stories it can be made to tell. This then is a biography of one item that recently entered the museum’s collection—an early Memorex videotape containing a recording from 1968—and the historical discovery it has afforded.
</p><p>
	Our biography begins in May 2020, with an email. Debra Dunlop, a 
	<a href="https://www.nec.edu/news/dr-debra-dunlop-is-honored-by-new-england-college" rel="noopener noreferrer" target="_blank">dean at New England College</a>, wrote to the museum about a large collection of documents, audiovisual materials, and a rare computer, a Xerox Star, in New Hampshire. These were the professional papers of Debra’s father, Robert Dunlop, and she knew how dearly he valued the collection. She was helping her father move to an assisted living facility, and she had to make a plan for this extensive collection. What did the museum think?</p><p><img alt="Black and white photo of a smiling man wearing glasses and a suit." data-rm-shortcode-id="985be946e0c9327ec3efbf8f9815408c" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/black-and-white-photo-of-a-smiling-man-wearing-glasses-and-a-suit.jpg?id=55267761&amp;width=980" height="625" id="091e7" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/black-and-white-photo-of-a-smiling-man-wearing-glasses-and-a-suit.jpg?id=55267761&amp;width=980" width="833"><small placeholder="Add Photo Caption...">Industrial psychologist Robert Dunlop spent his career at high-tech companies, including <a href="https://spectrum.ieee.org/tag/ibm">IBM</a>, RCA, and Xerox.</small><small placeholder="Add Photo Credit...">Computer History Museum</small></p><p>For me, the Dunlop collection was a light in the darkness. It was still early days in the pandemic, and the death toll in the United States from Covid-19 was nearing 100,000, with a vaccine shot for me still months in the future. I was working from home in Massachusetts but I was nervous because the museum—like all places that depend in part on ticket sales—faced <a href="https://spectrum.ieee.org/what-we-lose-when-we-lose-museums" target="_self">strong financial pressures</a>, and I didn’t know how long it could go on with its doors closed. The Dunlop collection sounded interesting. Robert Dunlop had been an industrial psychologist who spent his career at large, high-technology U.S. firms—first IBM, then RCA, and finally Xerox. The collection wasn’t far away, and perhaps there was a way I could safely go and have a look.</p><p>I learned more about Robert Dunlop’s career from Debra. She and her family moved the collection to a garage where, after we let it sit for a week, we felt it would be safe for me to review the materials alone, wearing a mask, with the garage doors open.</p><p>
	After the visit, I discussed what I had seen with my colleagues, and we agreed that I would return and select, pack, and ship out a substantial portion of it. Debra and her family very kindly made a financial donation to the museum to help with the shipping expenses in that difficult time for CHM. And as my colleagues and I would eventually discover, Dunlop’s collection offered an extraordinary glimpse into a transformative time in advanced computing, and a fascinating project that had been wholly unknown to the <a href="https://spectrum.ieee.org/tag/history-of-computing">history of computing</a> until now.
</p><h2>A Discovery</h2><p><img alt="Photo of a garage with stacks of boxes on a folding table." data-rm-shortcode-id="c8e2237d7202df4e4b6c1e7af5597dd5" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/photo-of-a-garage-with-stacks-of-boxes-on-a-folding-table.jpg?id=55269376&amp;width=980" height="4032" id="9543d" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/photo-of-a-garage-with-stacks-of-boxes-on-a-folding-table.jpg?id=55269376&amp;width=980" width="3024"><small placeholder="Add Photo Caption...">In May 2020, the author visited Dunlop’s home to go through documents, photos, and audiovisual recordings related to his work. Much of the material now resides at the Computer History Museum.</small><small placeholder="Add Photo Credit...">David C. Brock</small></p><p>
	As I went through the collection in that New Hampshire garage, one item intrigued me. It was an early video recording, made in 1968, that clearly had great meaning for Robert Dunlop. The 1-inch format tape on an open reel had been carefully packaged and included an explanatory note by Dunlop taped to the outside, along with a longer letter from him tucked inside. Both notes told of an inventive computer system at IBM headquarters that I’d never heard of. According to the notes, a demo of the system was captured on the long obsolete video.
</p><p>
	In 1995, when Dunlop wrote the notes, he had despaired of finding any working equipment to recover the recording. As the tape rested in my hands, I wondered the same thing—should I even collect this if it’s impossible to watch? But then I thought, “Perhaps we can figure something out. And if not us, maybe something could happen in the future.” I decided to take my chances and collect it.
</p><p><img alt="Photo of a reel of old recording tape and its packaging, with Memorex on the outside." data-rm-shortcode-id="deef6ca479999ee00e0c1c1d4b743593" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/photo-of-a-reel-of-old-recording-tape-and-its-packaging-with-memorex-on-the-outside.jpg?id=55269763&amp;width=980" height="2139" id="81d14" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/photo-of-a-reel-of-old-recording-tape-and-its-packaging-with-memorex-on-the-outside.jpg?id=55269763&amp;width=980" width="3422"><small placeholder="Add Photo Caption...">To recover the recording from the obsolete tape, the museum turned to George Blood LP, a company that specializes in archival audio and video. </small><small placeholder="Add Photo Credit...">Penny Ahlstrand</small></p><p>
	The Dunlop collection started its new life in the museum, carefully rehoused into archival storage boxes and added to our backlog for archival processing. In 2023, a grant to the museum from the 
	<a href="https://moore.org/" rel="noopener noreferrer" target="_blank">Gordon and Betty Moore Foundation</a> presented an opportunity to digitize some of the audiovisual materials in our collection. When I was consulted about priorities, one of the items I selected was Dunlop’s 1968 video recording. Could we give it a try?
</p><p><a href="https://www.linkedin.com/in/massimo-petrozzi-phd-573367102/" rel="noopener noreferrer" target="_blank">Massimo Petrozzi</a>, CHM’s Director of Archives and Digital Initiatives, reached out to his networks to see if there was someone who could help. A contact in Europe pointed back to the States, to George Blood and his firm <a href="https://www.georgeblood.com/" rel="noopener noreferrer" target="_blank">George Blood LP</a> outside of Philadelphia. The company is a major provider of audio and moving-picture preservation services, boasting an enormous collection of equipment—including, as it happens, an Ampex video unit capable of recovering video from Dunlop’s tape, which Blood called a “very early technology.” Blood and his colleagues made painstaking adjustments and experiments and were finally able to recover and digitize Dunlop’s silent video, fulfilling Robert Dunlop’s long hopes. Sadly, Dunlop did not live to see his recording again. He died in July 2020.
</p><h2>A Competing Vision of Computing</h2><p>
	The recording reveals a story as interesting as it is seemingly forgotten.
</p><p>
	You may already be aware of the “<a href="https://dougengelbart.org/content/view/209/" rel="noopener noreferrer" target="_blank">Mother of All Demos</a>” presented by Doug Engelbart and the members of his Stanford Research Institute center at the close of 1968. This presentation, with Engelbart on stage at a major computing conference in San Francisco, displayed the features and capabilities of his group’s “oN-Line System,” known as NLS. The system included many elements that were extraordinarily novel, even for the assembled computing professionals: networked computers, video conferencing, graphical interfaces, hypertext, collaborative word processing, and even a new input device, the computer mouse.
</p><p>
	This remarkable 1968 demonstration of the NLS was, much to our benefit, recorded on videotape. Although relatively early in video technology, the quality of the surviving recording is excellent and readily available online today.
</p><p><span data-rm-shortcode-id="c9384988d9582a867826ea2003b8696c"><iframe frameborder="0" height="auto" type="lazy-iframe" scrolling="no" data-runner-src="https://www.youtube.com/embed/UhpTiWyVa6k?rel=0&amp;start=1" width="100%"></iframe></span></p><p>
	The NLS was driven by a particular vision for the future use and practice of computing: a vision that centered on the notion of alliance. In this vision, individuals would join together into teams and organizations, directly using new computing tools and approaches for creating and using knowledge, and in doing so, “augmenting human intellect” to better solve complex problems.
</p><p>
	Dunlop’s video recording, it turned out, also contained a demonstration of another advanced computing system that also took place in 1968. This second demo occurred on the East Coast, at IBM’s corporate headquarters in Armonk, N.Y., and was motivated by a far different—perhaps one could go so far as to say an opposite—vision for the future of computing. This vision centered not on alliance, but rather on the concept of rank. The system was known as the IBM Corporate Headquarters Information Center, and it was the culmination of Dunlop’s experiments with executive-computer interaction at the company.
</p><p>
	Dunlop’s career at IBM across the 1960s coincided with a truly remarkable period of growth for the firm. From 1964—the year IBM announced its 
	<a href="https://spectrum.ieee.org/building-the-system360-mainframe-nearly-destroyed-ibm" target="_self">new System/360 line of digital computers</a>—to 1970, the firm’s headcount and revenues both doubled.
</p><p>
	To contend with this extraordinary growth, Dunlop worked on what he and others there called “management information systems”—computer systems serving the informational needs of IBM managers.
</p><p>
	As Dunlop noted in an unpublished talk, IBM managers were increasingly embracing information processing in the form of the company’s own timesharing computer products. Several internal IBM systems gave users remote access to timesharing computers, with modified electric typewriters serving as the user “terminals.” A sophisticated messaging system allowed employees to send one another telegram-like messages from one terminal to another, at the rate of 25,000 messages per day. A mathematical utility, QUIKTRAN, let users perform simple as well as sophisticated calculations from their terminals. There was a proliferation of systems for storing documents and formatting them in complex ways, with a single computer supporting up to 40 typewriter terminal users. Lastly, there were what today we would call database systems, containing information about the business and the organization, with a query language and financial models, again available from the users’ typewriter terminals.
</p><h2>IBM’s Executive War Room</h2><p>
	As these systems were increasingly adopted by what Dunlop called “operational and middle managers,” he led a series of projects to see if IBM could create terminals and management information systems that could be productively used by IBM’s “top executives.” The systems would allow the executives to make strategic decisions for the company in new ways afforded by the computer. His initial efforts all failed.
</p><p>
	First, Dunlop experimented with providing high-ranking executives—VPs and the like— with typewriter terminals directly linked to real-time data, financial models, and summary documents about the firm. The terminals went untouched, quickly migrating to the desks of the executives’ secretaries.
</p><p>
	Dunlop then tried using IBM’s new CRT-based terminal, the 2250, with a simplified keypad for input. The result was unchanged. Through interviews and surveys, he concluded that the failure was due to the executives’ “self-role concept.” They held themselves to be “very high status” decision-makers who got information from subordinates; any direct use of a typewriter or keyboard would “demean” them.
</p><p>
	From his failed experiments, Dunlop concluded that the state-of-the-art in computing technology was inadequate for creating a terminal-based management system for top management. However, those same top managers had noticed that middle managers around the firm had established “war rooms,” in which staff integrated information from all the various terminal-based systems: messaging, text, and database. At IBM corporate headquarters, the top executives wanted a war room of their own.
</p><p>
	This desire led Dunlop and others to create the IBM Headquarters Information Center. Here, “information specialists” would respond to inquiries by high-ranking executives. The specialists had access to messaging, text, database, and financial modeling systems accessed through typewriter and CRT terminals, as well as an array of printed materials, microform holdings, and audiovisual materials. In short, the information center was a reference library, staffed with reference librarians, of the sort that would become commonplace in the 1980s.
</p><p><img alt="Photo of a battered square cardboard package with typewritten notes taped to the front." data-rm-shortcode-id="3c72236f1d0f3539dfd67bf18adcaa4c" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/photo-of-a-battered-square-cardboard-package-with-typewritten-notes-taped-to-the-front.jpg?id=55269718&amp;width=980" height="2913" id="50058" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/photo-of-a-battered-square-cardboard-package-with-typewritten-notes-taped-to-the-front.jpg?id=55269718&amp;width=980" width="2976"><small placeholder="Add Photo Caption...">An old recording with typed notes from Dunlop turned out to contain a previously unknown 1968 demonstration of an IBM system called the Executive Terminal. </small><small placeholder="Add Photo Credit...">Penny Ahlstrand</small></p><p>
	With the new IBM Headquarters Information Center in place, Dunlop saw the opportunity to run another experiment in 1967-68, which he called the “Executive Terminal.” The lead information specialist in the information center would sit at a video-mixing and control console, equipped with a video camera, microphone, and even lighting. Meanwhile, the executive user would be in their office with their Executive Terminal, a modified television set with an audio and video connection to the console in the information center.
</p><p>
	The executive pressed a button to summon the information specialist and their live video image to the screen. Remaining unseen, the executive could then place an inquiry. The information specialist would direct other staff in the information center to gather the appropriate information to answer the request: Models were run on CRT terminals, documents and data were gathered on typewriter terminals, microform could be loaded into a video reader, paper documents could be placed on a video capture unit. Once the results were assembled, the information specialist conveyed all this information to the executive, cutting from one video feed to another, guided by the executive’s interest and direction.
</p><p>
	Dunlop’s 1968 video demonstration of the Executive Terminal and the Information Center proceeds in three acts.
</p><p>
	The first 10 minutes of the video show the information specialist and other staff responding to an executive’s request, finding and preparing all the materials for video presentation, using the typewriter and CRT terminals, and even engaging in video conferencing with another employee:
</p><p><span data-rm-shortcode-id="d9d2a2051467f3b510f4f8dbb43ee21f"><iframe frameborder="0" height="auto" type="lazy-iframe" scrolling="no" data-runner-src="https://www.youtube.com/embed/EUZMWGoB-Ug?rel=0&amp;start=2" width="100%"></iframe></span></p><p>
	The next five minutes show the executive using the Executive Terminal to receive the results and directing the display and flow of the information:
</p><p><span data-rm-shortcode-id="8e6a3c38963a4e2263022b8d1f826891"><iframe frameborder="0" height="auto" type="lazy-iframe" scrolling="no" data-runner-src="https://www.youtube.com/embed/ZnH7blyDLRw?rel=0" width="100%"></iframe></span></p><p>
	The final few minutes show the information specialist working on an IBM 2260 video computer terminal, at the time still a novelty that was used for database and model access:
</p><p><span data-rm-shortcode-id="4a42a78a92508fec8f51d00e2098e6ff"><iframe frameborder="0" height="auto" type="lazy-iframe" scrolling="no" data-runner-src="https://www.youtube.com/embed/rH1rd6l8mbk?rel=0" width="100%"></iframe></span></p><h2>Restoring History</h2><p>
	It’s unclear what ultimately became of IBM’s Executive Terminal and the Information Center, as they appear to have left little to no historical traces beyond a few documents—including the unpublished talk—some photographs, and Dunlop’s 1968 video recording.
</p><p>
	With Engelbart’s and Dunlop’s 1968 demo videos, we now have a remarkable and contrasting snapshot of two very different directions in advanced computing. Engelbart’s Mother of All Demos showed how advanced computing could create a shared, collaborative environment of allied individuals, all direct users of the same system, befitting of a laboratory of computer enthusiasts in Menlo Park, Calif. Dunlop’s Executive Terminal demo showed how many of these same advanced technologies could be directed along another path, that of a strictly hierarchical organization, highly attuned to rank and defined roles and specialties. While these were very different and perhaps opposing directions, they shared a common commitment to the use of advanced computing for organizing and analyzing information, and taking action.
</p><p><img alt="Blurry photo of a room containing old-fashioned computer equipment, with two men standing at the back with their backs to the camera." data-rm-shortcode-id="42496d934cd18d2030264f5c5c2e0e52" data-rm-shortcode-name="rebelmouse-image" data-runner-src="https://spectrum.ieee.org/media-library/blurry-photo-of-a-room-containing-old-fashioned-computer-equipment-with-two-men-standing-at-the-back-with-their-backs-to-the-ca.jpg?id=55270168&amp;width=980" height="2224" id="2aa91" lazy-loadable="true" src="https://spectrum.ieee.org/media-library/blurry-photo-of-a-room-containing-old-fashioned-computer-equipment-with-two-men-standing-at-the-back-with-their-backs-to-the-ca.jpg?id=55270168&amp;width=980" width="2966"><small placeholder="Add Photo Caption...">In the Information Center at IBM Headquarters, in Armonk, N.Y., information specialists were on call to answer questions from users.</small><small placeholder="Add Photo Credit...">The Dunlop Collection</small></p><p>
	Engelbart held that his system was for the “augmentation of the human intellect,” so that users might better address complex problems. For Dunlop, the Executive Terminal was an answer to his question, “Can we make better decisions, at higher levels, through better information processes?”
</p><p>
	There are echoes of Engelbart’s Mother of All Demos around us every day—the hyperlinks of the Web, the scuttling of computer mice on desktops, the editing of online documents, and more. But just as evident are the echoes of Dunlop’s Executive Terminal demo, such as the video conferencing and screen-sharing practices so familiar in Zooms, Teams, and Meets today.</p><p>
	The Computer History Museum is pleased to make public the <a href="https://www.youtube.com/watch?v=DWhZ8ELDM8c&amp;t=2s" target="_blank">entire video recording</a> of Robert Dunlop’s 1968 demonstration, and with its release, to restore a forgotten chapter in the history of computing. <span></span></p><p><em><em>Editor’s note: This post originally appeared on the blog of the </em></em><a href="https://computerhistory.org/stories/the-biography-of-a-discovery/" rel="noopener noreferrer" target="_blank"><em>Computer History Museum</em></a><em><em>.</em></em></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: I designed an espresso machine and coffee grinder (172 pts)]]></title>
            <link>https://velofuso.com</link>
            <guid>42405046</guid>
            <pubDate>Fri, 13 Dec 2024 01:03:27 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://velofuso.com">https://velofuso.com</a>, See on <a href="https://news.ycombinator.com/item?id=42405046">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-fluid-engine="true"><div data-animation-role="image" data-test="image-block-fluid-outer-wrapper" data-aspect-ratio="41.37931034482759" data-block-type="5" id="block-4672c01ea1048caf2408">
                
            
            
            
            
            
            
            <p><img data-stretch="true" data-src="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png" data-image="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png" data-image-dimensions="5771x3847" data-image-focal-point="0.5,0.5" alt="" data-load="false" elementtiming="system-image-block" src="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png" width="5771" height="3847" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=100w 100w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=300w 300w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=500w 500w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=750w 750w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/59acc4cf-a57f-45eb-bc72-560fe271f8e9/Subtracted+Front.png?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs"></p>
          
              </div><div data-blend-mode="NORMAL" data-block-type="2" data-border-radii="{&quot;topLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;topRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0}}" id="block-07f50155ef0eb0539444">

<p>
  <h2>TREFOLO ESPRESSO MACHINE</h2>
</p>




















  
  



</div><div data-blend-mode="NORMAL" data-block-type="2" data-border-radii="{&quot;topLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;topRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0}}" id="block-yui_3_17_2_1_1715156589882_9946">

<p>
  <h3>A MINIMALIST REIMAGINING OF THE ESPRESSO MACHINE </h3>
</p>




















  
  



</div><div data-animation-role="button" data-alignment="center" data-button-size="medium" data-button-type="primary" data-block-type="53" id="block-7e94b02023c9ffdf5cc2">
  <p><a href="https://velofuso.com/trefolo" target="_blank">
    SEE TREFOLO
  </a>
</p></div><div data-animation-role="image" data-test="image-block-fluid-outer-wrapper" data-aspect-ratio="41.37931034482759" data-block-type="5" id="block-7a4c525688de104728e1">
                
            
            
            
            
            
            
            <p><img data-stretch="true" data-src="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg" data-image="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg" data-image-dimensions="3859x3898" data-image-focal-point="0.5,0.5" alt="" data-load="false" elementtiming="system-image-block" src="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg" width="3859" height="3898" sizes="100vw" srcset="https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=100w 100w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=300w 300w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=500w 500w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=750w 750w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=1000w 1000w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=1500w 1500w, https://images.squarespace-cdn.com/content/v1/642b16caa701311a34f57545/73a38f34-0386-47c8-8503-650534af114c/Cover+Front.jpg?format=2500w 2500w" loading="lazy" decoding="async" data-loader="sqs"></p>
          
              </div><div data-blend-mode="NORMAL" data-block-type="2" data-border-radii="{&quot;topLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;topRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0}}" id="block-2884aca7b72517f726f3">

<p>
  <h2><span>Turbina  COFFEE GRINDER</span></h2>
</p>




















  
  



</div><div data-blend-mode="NORMAL" data-block-type="2" data-border-radii="{&quot;topLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;topRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomLeft&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0},&quot;bottomRight&quot;:{&quot;unit&quot;:&quot;px&quot;,&quot;value&quot;:0.0}}" id="block-0589d937ef2c78a466f5">

<p>
  <h3><span>THE FIRST cylindrical burr coffee grinder</span></h3>
</p>




















  
  



</div><div data-animation-role="button" data-alignment="center" data-button-size="medium" data-button-type="primary" data-block-type="53" id="block-d3fb51620e3f89a6ca59">
  <p><a href="https://velofuso.com/turbina" target="_blank">
    SEE TURBINA
  </a>
</p></div></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Elixir/Erlang Hot Swapping Code (151 pts)]]></title>
            <link>https://kennyballou.com/blog/2016/12/elixir-hot-swapping/index.html</link>
            <guid>42404411</guid>
            <pubDate>Thu, 12 Dec 2024 23:16:20 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kennyballou.com/blog/2016/12/elixir-hot-swapping/index.html">https://kennyballou.com/blog/2016/12/elixir-hot-swapping/index.html</a>, See on <a href="https://news.ycombinator.com/item?id=42404411">Hacker News</a></p>
Couldn't get https://kennyballou.com/blog/2016/12/elixir-hot-swapping/index.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Taming LLMs – A Practical Guide to LLM Pitfalls with Open Source Software (111 pts)]]></title>
            <link>https://www.souzatharsis.com/tamingLLMs/markdown/toc.html</link>
            <guid>42404202</guid>
            <pubDate>Thu, 12 Dec 2024 22:45:57 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.souzatharsis.com/tamingLLMs/markdown/toc.html">https://www.souzatharsis.com/tamingLLMs/markdown/toc.html</a>, See on <a href="https://news.ycombinator.com/item?id=42404202">Hacker News</a></p>
Couldn't get https://www.souzatharsis.com/tamingLLMs/markdown/toc.html: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Carta is making it too difficult to cancel subscriptions, some founders say (188 pts)]]></title>
            <link>https://techcrunch.com/2024/12/12/carta-is-making-it-too-difficult-to-cancel-subscriptions-some-founders-say/</link>
            <guid>42404144</guid>
            <pubDate>Thu, 12 Dec 2024 22:37:32 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://techcrunch.com/2024/12/12/carta-is-making-it-too-difficult-to-cancel-subscriptions-some-founders-say/">https://techcrunch.com/2024/12/12/carta-is-making-it-too-difficult-to-cancel-subscriptions-some-founders-say/</a>, See on <a href="https://news.ycombinator.com/item?id=42404144">Hacker News</a></p>
Couldn't get https://techcrunch.com/2024/12/12/carta-is-making-it-too-difficult-to-cancel-subscriptions-some-founders-say/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA["Rules" that terminal programs follow (174 pts)]]></title>
            <link>https://jvns.ca/blog/2024/11/26/terminal-rules/</link>
            <guid>42401011</guid>
            <pubDate>Thu, 12 Dec 2024 17:09:25 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://jvns.ca/blog/2024/11/26/terminal-rules/">https://jvns.ca/blog/2024/11/26/terminal-rules/</a>, See on <a href="https://news.ycombinator.com/item?id=42401011">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
     <p>Recently I’ve been thinking about how everything that happens in the terminal
is some combination of:</p>
<ol>
<li>Your <strong>operating system</strong>’s job</li>
<li>Your <strong>shell</strong>’s job</li>
<li>Your <strong>terminal emulator</strong>’s job</li>
<li>The job of <strong>whatever program you happen to be running</strong> (like <code>top</code> or <code>vim</code> or <code>cat</code>)</li>
</ol>
<p>The first three (your operating system, shell, and terminal emulator) are all kind of
known quantities – if you’re using bash in GNOME Terminal on Linux, you can
more or less reason about how how all of those things interact, and some of
their behaviour is standardized by POSIX.</p>
<p>But the fourth one (“whatever program you happen to be running”) feels like it
could do ANYTHING. How are you supposed to know how a program is going to
behave?</p>
<p>This post is kind of long so here’s a quick table of contents:</p>
<ul>
<li><a href="#programs-behave-surprisingly-consistently">programs behave surprisingly consistently</a></li>
<li><a href="#these-are-meant-to-be-descriptive-not-prescriptive">these are meant to be descriptive, not prescriptive</a></li>
<li><a href="#it-s-not-always-obvious-which-rules-are-the-program-s-responsibility-to-implement">it’s not always obvious which “rules” are the program’s responsibility to implement</a></li>
<li><a href="#rule-1-noninteractive-programs-should-quit-when-you-press-ctrl-c">rule 1: noninteractive programs should quit when you press <code>Ctrl-C</code></a></li>
<li><a href="#rule-2-tuis-should-quit-when-you-press-q">rule 2: TUIs should quit when you press <code>q</code></a></li>
<li><a href="#rule-3-repls-should-quit-when-you-press-ctrl-d-on-an-empty-line">rule 3: REPLs should quit when you press <code>Ctrl-D</code> on an empty line</a></li>
<li><a href="#rule-4-don-t-use-more-than-16-colours">rule 4: don’t use more than 16 colours</a></li>
<li><a href="#rule-5-vaguely-support-readline-keybindings">rule 5: vaguely support readline keybindings</a></li>
<li><a href="#rule-5-1-ctrl-w-should-delete-the-last-word">rule 5.1: <code>Ctrl-W</code> should delete the last word</a></li>
<li><a href="#rule-6-disable-colours-when-writing-to-a-pipe">rule 6: disable colours when writing to a pipe</a></li>
<li><a href="#rule-7-means-stdin-stdout">rule 7: <code>-</code> means stdin/stdout</a></li>
<li><a href="#these-rules-take-a-long-time-to-learn">these “rules” take a long time to learn</a></li>
</ul>
<h3 id="programs-behave-surprisingly-consistently">programs behave surprisingly consistently</h3>
<p>As far as I know, there are no real standards for how programs in the terminal
should behave – the closest things I know of are:</p>
<ul>
<li>POSIX, which mostly dictates how your terminal emulator / OS / shell should
work together. I think it does specify a few things about how core utilities like
<code>cp</code> should work but AFAIK it doesn’t have anything to say about how for
example <code>htop</code> should behave.</li>
<li>these <a href="https://clig.dev/">command line interface guidelines</a></li>
</ul>
<p>But even though there are no standards, in my experience programs in the
terminal behave in a pretty consistent way. So I wanted to write down a list of
“rules” that in my experience programs mostly follow.</p>
<h3 id="these-are-meant-to-be-descriptive-not-prescriptive">these are meant to be descriptive, not prescriptive</h3>
<p>My goal here isn’t to convince authors of terminal programs that they <em>should</em>
follow any of these rules. There are lots of exceptions to these and often
there’s a good reason for those exceptions.</p>
<p>But it’s very useful for me to know what behaviour to expect from a random new
terminal program that I’m using. Instead of “uh, programs could do literally
anything”, it’s “ok, here are the basic rules I expect, and then I can keep a
short mental list of exceptions”.</p>
<p>So I’m just writing down what I’ve observed about how programs behave in my 20
years of using the terminal, why I think they behave that way, and some
examples of cases where that rule is “broken”.</p>
<h3 id="it-s-not-always-obvious-which-rules-are-the-program-s-responsibility-to-implement">it’s not always obvious which “rules” are the program’s responsibility to implement</h3>
<p>There are a bunch of common conventions that I think are pretty clearly the
program’s responsibility to implement, like:</p>
<ul>
<li>config files should go in <code>~/.BLAHrc</code> or <code>~/.config/BLAH/FILE</code> or <code>/etc/BLAH/</code> or something</li>
<li><code>--help</code> should print help text</li>
<li>programs should print “regular” output to stdout and errors to stderr</li>
</ul>
<p>But in this post I’m going to focus on things that it’s not 100% obvious are
the program’s responsibility. For example it feels to me like a “law of nature”
that pressing <code>Ctrl-D</code> should quit a REPL, but programs often
need to explicitly implement support for it – even though <code>cat</code> doesn’t need
to implement <code>Ctrl-D</code> support, <code>ipython</code> <a href="https://github.com/prompt-toolkit/python-prompt-toolkit/blob/a2a12300c635ab3c051566e363ed27d853af4b21/src/prompt_toolkit/shortcuts/prompt.py#L824-L837">does</a>. (more about that in “rule 3” below)</p>
<p>Understanding which things are the program’s responsibility makes it much less
surprising when different programs’ implementations are slightly different.</p>
<h3 id="rule-1-noninteractive-programs-should-quit-when-you-press-ctrl-c">rule 1: noninteractive programs should quit when you press <code>Ctrl-C</code></h3>
<p>The main reason for this rule is that noninteractive programs will quit by
default on <code>Ctrl-C</code> if they don’t set up a <code>SIGINT</code> signal handler, so this is
kind of a “you should act like the default” rule.</p>
<p>Something that trips a lot of people up is that this doesn’t apply to
<strong>interactive</strong> programs like <code>python3</code> or <code>bc</code> or <code>less</code>. This is because in
an interactive program, <code>Ctrl-C</code> has a different job – if the program is
running an operation (like for example a search in <code>less</code> or some Python code
in <code>python3</code>), then <code>Ctrl-C</code> will interrupt that operation but not stop the
program.</p>
<p>As an example of how this works in an interactive program: here’s the code <a href="https://github.com/prompt-toolkit/python-prompt-toolkit/blob/a2a12300c635ab3c051566e363ed27d853af4b21/src/prompt_toolkit/key_binding/bindings/vi.py#L2225">in prompt-toolkit</a> (the library that iPython uses for handling input)
that aborts a search when you press <code>Ctrl-C</code>.</p>
<h3 id="rule-2-tuis-should-quit-when-you-press-q">rule 2: TUIs should quit when you press <code>q</code></h3>
<p>TUI programs (like <code>less</code> or <code>htop</code>) will usually quit when you press <code>q</code>.</p>
<p>This rule doesn’t apply to any program where pressing <code>q</code> to quit wouldn’t make
sense, like <code>tmux</code> or text editors.</p>
<h3 id="rule-3-repls-should-quit-when-you-press-ctrl-d-on-an-empty-line">rule 3: REPLs should quit when you press <code>Ctrl-D</code> on an empty line</h3>
<p>REPLs (like <code>python3</code> or <code>ed</code>) will usually quit when you press <code>Ctrl-D</code> on an
empty line. This rule is similar to the <code>Ctrl-C</code> rule – the reason for this is
that by default if you’re running a program (like <code>cat</code>) in “cooked mode”, then
the operating system will return an <code>EOF</code> when you press <code>Ctrl-D</code> on an empty
line.</p>
<p>Most of the REPLs I use (sqlite3, python3, fish, bash, etc) don’t actually use
cooked mode, but they all implement this keyboard shortcut anyway to mimic the
default behaviour.</p>
<p>For example, here’s <a href="https://github.com/prompt-toolkit/python-prompt-toolkit/blob/a2a12300c635ab3c051566e363ed27d853af4b21/src/prompt_toolkit/shortcuts/prompt.py#L824-L837">the code in prompt-toolkit</a>
that quits when you press Ctrl-D, and here’s <a href="https://github.com/bminor/bash/blob/6794b5478f660256a1023712b5fc169196ed0a22/lib/readline/readline.c#L658-L672">the same code in readline</a>.</p>
<p>I actually thought that this one was a “Law of Terminal Physics” until very
recently because I’ve basically never seen it broken, but you can see that it’s
just something that each individual input library has to implement in the links
above.</p>
<p>Someone pointed out that the Erlang REPL does not quit when you press <code>Ctrl-D</code>,
so I guess not every REPL follows this “rule”.</p>
<h3 id="rule-4-don-t-use-more-than-16-colours">rule 4: don’t use more than 16 colours</h3>
<p>Terminal programs rarely use colours other than the base 16 ANSI colours. This
is because if you specify colours with a hex code, it’s very likely to clash
with some users’ background colour. For example if I print out some text as
<code>#EEEEEE</code>, it would be almost invisible on a white background, though it would
look fine on a dark background.</p>
<p>But if you stick to the default 16 base colours, you have a much better chance
that the user has configured those colours in their terminal emulator so that
they work reasonably well with their background color. Another reason to stick
to the default base 16 colours is that it makes less assumptions about what
colours the terminal emulator supports.</p>
<p>The only programs I usually see breaking this “rule” are text editors, for
example Helix by default will use a custom colorscheme with this very nice
purple background which is not a default ANSI colour. It seems fine for Helix
to break this rule since Helix isn’t a “core” program and I assume any Helix
user who doesn’t like that colorscheme will just change the theme.</p>
<h3 id="rule-5-vaguely-support-readline-keybindings">rule 5: vaguely support readline keybindings</h3>
<p>Almost every program I use supports <code>readline</code> keybindings if it would make
sense to do so. For example, here are a bunch of different programs and a link
to where they define <code>Ctrl-E</code> to go to the end of the line:</p>
<ul>
<li>ipython (<a href="https://github.com/prompt-toolkit/python-prompt-toolkit/blob/a2a12300c635ab3c051566e363ed27d853af4b21/src/prompt_toolkit/key_binding/bindings/emacs.py#L72">Ctrl-E defined here</a>)</li>
<li>atuin (<a href="https://github.com/atuinsh/atuin/blob/a67cfc82fe0dc907a01f07a0fd625701e062a33b/crates/atuin/src/command/client/search/interactive.rs#L407">Ctrl-E defined here</a>)</li>
<li>fzf (<a href="https://github.com/junegunn/fzf/blob/bb55045596d6d08445f3c6d320c3ec2b457462d1/src/terminal.go#L611">Ctrl-E defined here</a>)</li>
<li>zsh (<a href="https://github.com/zsh-users/zsh/blob/86d5f24a3d28541f242eb3807379301ea976de87/Src/Zle/zle_bindings.c#L94">Ctrl-E defined here</a>)</li>
<li>fish (<a href="https://github.com/fish-shell/fish-shell/blob/99fa8aaaa7956178973150a03ce4954ab17a197b/share/functions/fish_default_key_bindings.fish#L43">Ctrl-E defined here</a>)</li>
<li>tmux’s command prompt (<a href="https://github.com/tmux/tmux/blob/ae8f2208c98e3c2d6e3fe4cad2281dce8fd11f31/key-bindings.c#L490">Ctrl-E defined here</a>)</li>
</ul>
<p>None of those programs actually uses <code>readline</code> directly, they just sort of
mimic emacs/readline keybindings. They don’t always mimic them <em>exactly</em>: for
example atuin seems to use <code>Ctrl-A</code> as a prefix, so <code>Ctrl-A</code> doesn’t go to the
beginning of the line.</p>
<p>Also all of these programs seem to implement their own internal cut and paste
buffers so you can delete a line with <code>Ctrl-U</code> and then paste it with <code>Ctrl-Y</code>.</p>
<p>The exceptions to this are:</p>
<ul>
<li>some programs (like <code>git</code>, <code>cat</code>, and <code>nc</code>) don’t have any line editing support at all (except for backspace, <code>Ctrl-W</code>, and <code>Ctrl-U</code>)</li>
<li>as usual text editors are an exception, every text editor has its own
approach to editing text</li>
</ul>
<p>I wrote more about this “what keybindings does a program support?” question in
<a href="https://jvns.ca/blog/2024/07/08/readline/">entering text in the terminal is complicated</a>.</p>
<h3 id="rule-5-1-ctrl-w-should-delete-the-last-word">rule 5.1: Ctrl-W should delete the last word</h3>
<p>I’ve never seen a program (other than a text editor) where <code>Ctrl-W</code> <em>doesn’t</em>
delete the last word. This is similar to the <code>Ctrl-C</code> rule – by default if a
program is in “cooked mode”, the OS will delete the last word if you press
<code>Ctrl-W</code>, and delete the whole line if you press <code>Ctrl-U</code>. So usually programs
will imitate that behaviour.</p>
<p>I can’t think of any exceptions to this other than text editors but if there
are I’d love to hear about them!</p>
<h3 id="rule-6-disable-colours-when-writing-to-a-pipe">rule 6: disable colours when writing to a pipe</h3>
<p>Most programs will disable colours when writing to a pipe. For example:</p>
<ul>
<li><code>rg blah</code> will highlight all occurrences of <code>blah</code> in the output, but if the
output is to a pipe or a file, it’ll turn off the highlighting.</li>
<li><code>ls --color=auto</code> will use colour when writing to a terminal, but not when
writing to a pipe</li>
</ul>
<p>Both of those programs will also format their output differently when writing
to the terminal: <code>ls</code> will organize files into columns, and ripgrep will group
matches with headings.</p>
<p>If you want to force the program to use colour (for example because you want to
look at the colour), you can use <code>unbuffer</code> to force the program’s output to be
a tty like this:</p>
<pre><code>unbuffer rg blah |  less -R
</code></pre>
<p>I’m sure that there are some programs that “break” this rule but I can’t think
of any examples right now. Some programs have an <code>--color</code> flag that you can
use to force colour to be on, in the example above you could also do <code>rg --color=always | less -R</code>.</p>
<h3 id="rule-7-means-stdin-stdout">rule 7: <code>-</code> means stdin/stdout</h3>
<p>Usually if you pass <code>-</code> to a program instead of a filename, it’ll read from
stdin or write to stdout (whichever is appropriate). For example, if you want
to format the Python code that’s on your clipboard with <code>black</code> and then copy
it, you could run:</p>
<pre><code>pbpaste | black - | pbcopy
</code></pre>
<p>(<code>pbpaste</code> is a Mac program, you can do something similar on Linux with <code>xclip</code>)</p>
<p>My impression is that most programs implement this if it would make sense and I
can’t think of any exceptions right now, but I’m sure there are many
exceptions.</p>
<h3 id="these-rules-take-a-long-time-to-learn">these “rules” take a long time to learn</h3>
<p>These rules took me a long time for me to learn because I had to:</p>
<ol>
<li>learn that the rule applied anywhere at all ("<code>Ctrl-C</code> will exit programs")</li>
<li>notice some exceptions (“okay, <code>Ctrl-C</code> will exit <code>find</code> but not <code>less</code>”)</li>
<li>subconsciously figure out what the pattern is ("<code>Ctrl-C</code> will generally quit
noninteractive programs, but in interactive programs it might interrupt the
current operation instead of quitting the program")</li>
<li>eventually maybe formulate it into an explicit rule that I know</li>
</ol>
<p>A lot of my understanding of the terminal is honestly still in the
“subconscious pattern recognition” stage. The only reason I’ve been taking the
time to make things explicit at all is because I’ve been trying to explain how
it works to others. Hopefully writing down these “rules” explicitly will make
learning some of this stuff a little bit faster for others.</p>

</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Microsoft Recall still storing credit card, social security numbers (188 pts)]]></title>
            <link>https://www.tomshardware.com/software/windows/microsoft-recall-screenshots-credit-cards-and-social-security-numbers-even-with-the-sensitive-information-filter-enabled</link>
            <guid>42400935</guid>
            <pubDate>Thu, 12 Dec 2024 17:01:16 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.tomshardware.com/software/windows/microsoft-recall-screenshots-credit-cards-and-social-security-numbers-even-with-the-sensitive-information-filter-enabled">https://www.tomshardware.com/software/windows/microsoft-recall-screenshots-credit-cards-and-social-security-numbers-even-with-the-sensitive-information-filter-enabled</a>, See on <a href="https://news.ycombinator.com/item?id=42400935">Hacker News</a></p>
<div id="readability-page-1" class="page"><div data-widget-type="contentparsed" id="content">

<section>
<div itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject">
<div>
<picture data-new-v2-image="true">
<source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:320/975UqEyQpEE6RNxsQCVvXL.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:480/975UqEyQpEE6RNxsQCVvXL.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:650/975UqEyQpEE6RNxsQCVvXL.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:970/975UqEyQpEE6RNxsQCVvXL.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1024/975UqEyQpEE6RNxsQCVvXL.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1200/975UqEyQpEE6RNxsQCVvXL.jpg.webp 1200w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1920/975UqEyQpEE6RNxsQCVvXL.jpg.webp 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)">
<img src="https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:320/975UqEyQpEE6RNxsQCVvXL.jpg" alt="Computer with recall" srcset="https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:320/975UqEyQpEE6RNxsQCVvXL.jpg 320w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:480/975UqEyQpEE6RNxsQCVvXL.jpg 480w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:650/975UqEyQpEE6RNxsQCVvXL.jpg 650w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:970/975UqEyQpEE6RNxsQCVvXL.jpg 970w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1024/975UqEyQpEE6RNxsQCVvXL.jpg 1024w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1200/975UqEyQpEE6RNxsQCVvXL.jpg 1200w, https://cdn.mos.cms.futurecdn.net/v2/t:0,l:0,cw:0,ch:0,q:80,w:1920/975UqEyQpEE6RNxsQCVvXL.jpg 1920w" sizes="(min-width: 1000px) 600px, calc(100vw - 40px)" data-original-mos="https://cdn.mos.cms.futurecdn.net/975UqEyQpEE6RNxsQCVvXL.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/975UqEyQpEE6RNxsQCVvXL.jpg" data-pin-nopin="true" fetchpriority="high" crossorigin="anonymous">
</picture>
</div>
<meta itemprop="url" content="https://cdn.mos.cms.futurecdn.net/975UqEyQpEE6RNxsQCVvXL.jpg">
<meta itemprop="height" content="600">
<meta itemprop="width" content="338">
<figcaption itemprop="caption description">
<span itemprop="copyrightHolder">(Image credit: Shutterstock (1025458759))</span>
</figcaption>
</div>

<div id="article-body">
<p><a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/microsoft" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/microsoft">Microsoft</a>’s Recall feature recently made its way back to Windows Insiders after having been <a data-analytics-id="inline-link" href="https://www.tomshardware.com/software/windows/microsoft-recalls-recall-controversial-ai-feature-wont-be-in-copilot-windows-build-at-launch" data-before-rewrite-localise="https://www.tomshardware.com/software/windows/microsoft-recalls-recall-controversial-ai-feature-wont-be-in-copilot-windows-build-at-launch">pulled from test builds</a> back in June, due to security and privacy concerns. The new version of Recall encrypts the screens it captures and, by default, it has a “Filter sensitive information,” setting enabled, which is supposed to prevent it from recording any app or website that is showing credit card numbers, social security numbers, or other important financial / personal info. In my tests, however, this filter only worked in some situations (on two e-commerce sites), leaving a gaping hole in the protection it promises.</p><p>When I entered a credit card number and a random username / password into a Windows Notepad window, Recall captured it, despite the fact that I had text such as “Capital One Visa” right next to the numbers. Similarly, when I filled out a loan application PDF in Microsoft Edge, entering a social <a data-analytics-id="inline-link" href="https://www.tomshardware.com/tag/security" data-auto-tag-linker="true" data-before-rewrite-localise="https://www.tomshardware.com/tag/security">security</a> number, name and DOB, Recall captured that. (Note that all info in these screenshots is made up).</p><div aria-hidden="false" data-swipeable="true" data-hydrate="true" id="slice-container-imageGallery-tbEeKQ57ATUGUnUKRir5vA-6YUdnebfNx0BJVdkqJwiIKJ8I0O4LFxp"><figure data-bordeaux-image-check="false"><div><picture data-hydrate="true"><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5.png" data-pin-nopin="true" data-slice-image="true"><source type="image/png" srcset="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5.png" data-pin-nopin="true" data-slice-image="true"><img src="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" alt="Microsoft Recall captures social security number" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-normal="https://vanilla.futurecdn.net/cyclingnews/media/img/missing-image.svg" data-original-mos="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/NGaToUky43YpqH5hUZFud5.png" data-pin-nopin="true" data-slice-image="true"></picture></div><figcaption><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure></div><p>I also created my own HTML page with a web form that said, explicitly, “enter your credit card number below.” The form had fields for Credit card type, number, CVC and expiration date. I thought this might trigger Recall to block it, but the software captured an image of my form filled out, complete with the credit card data.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-320-80.png" alt="Microsoft Recall captures credit card number from web page" srcset="https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/wh3ciFL8EPHHxqAch39dAC.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>On the bright side, Recall refused to capture the credit card fields when I went to the payment pages of two online stores – Pimoroni and Adafruit. In both cases, it only captured either the screens before and after the credit card entry form or a blank form.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-320-80.png" alt="Pimoroni Checkout page" srcset="https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/fY3PK77NpFXTdxAUC35STF.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>So, when it came to real-world commerce sites that I visited, Recall got it right. However, what my experiment proves is that it’s pretty much impossible for Microsoft’s AI filter to identify every situation where sensitive information is on screen and avoid capturing it. My examples were designed to test the filter, but they’re not fringe cases. Real people do put sensitive personal information into PDF forms. They write things down or copy and paste them into text files and then key them into websites that don’t look like typical shopping sites.</p><p>I asked Microsoft for a comment and the company responded by pointing me to part of its <a data-analytics-id="inline-link" href="https://www.google.com/url?q=https://blogs.windows.com/windows-insider/2024/11/22/previewing-recall-with-click-to-do-on-copilot-pcs-with-windows-insiders-in-the-dev-channel/&amp;sa=D&amp;source=editors&amp;ust=1734023528877028&amp;usg=AOvVaw0YCoKJWhOGP5TcUKiKYE97" data-url="https://www.google.com/url?q=https://blogs.windows.com/windows-insider/2024/11/22/previewing-recall-with-click-to-do-on-copilot-pcs-with-windows-insiders-in-the-dev-channel/&amp;sa=D&amp;source=editors&amp;ust=1734023528877028&amp;usg=AOvVaw0YCoKJWhOGP5TcUKiKYE97" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none"><u>blog post on the Preview Recall</u></a>, which states:</p><p><em>“We’ve updated Recall to detect sensitive information like credit card details, passwords, and personal identification numbers. When detected, Recall won’t save or store those snapshots. We’ll continue to improve this functionality, and if you find sensitive information that should be filtered out, for your context, language, or geography, please let us know through Feedback Hub. We’ve also provided an option in Settings that we encourage you to enable that will anonymously share the apps and sites you prefer to be excluded from Recall to help us improve the product.”</em></p><div data-hydrate="true" id="slice-container-newsletterForm-articleInbodyContent-tbEeKQ57ATUGUnUKRir5vA"><section><p>Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.</p></section></div><p>So the company is promising that Recall will get better at filtering out sensitive information over time. But how much better it will get and how many holes will still remain is an open question.</p><h2 id="how-recall-works-3">How Recall Works</h2><p>Recall’s purpose is to provide searchable memory of all your computer activity, to become your one-stop digital memory. So the feature, which is only available on Copilot+ PCs, takes screenshots of everything you do on your PC, arranges those pictures in a timeline, and makes them searchable using natural language search. If you forgot what website you were visiting when you were considering buying a red sofa, you can search “sofa” and it should pull up a picture of the exact page you were on. Because it’s AI-powered, it also reads the text within images and lets you copy it.</p><p>The concern with Recall is that it’s keeping a digital record of everything you do and, no matter how secure, the record is there for bad actors to find. When Recall first appeared in Insider Builds last spring, researchers noticed that it wasn’t encrypting the screenshots it captured and was storing its database as plain text. The company responded to the negative press attention by pulling Recall from Insider builds and promising to bring it back only after some security upgrades.</p><p>The new version of Recall is now opt-in rather than opt-out – I got prompted to enable Recall immediately after installing the Insider Build. The pop-up prompt appeared as soon as my laptop rebooted after the updated.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-320-80.jpg.webp 320w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-480-80.jpg.webp 480w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-650-80.jpg.webp 650w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-970-80.jpg.webp 970w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-1024-80.jpg.webp 1024w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-1200-80.jpg.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-320-80.jpg" alt="Windows prompts you to enable recall at boot" srcset="https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-320-80.jpg 320w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-480-80.jpg 480w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-650-80.jpg 650w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-970-80.jpg 970w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-1024-80.jpg 1024w, https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP-1200-80.jpg 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP.jpg" data-pin-media="https://cdn.mos.cms.futurecdn.net/QaSQYn27Fwd3tzXfyT2wHP.jpg"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>Recall has a “sensitive information filter,” which is enabled by default and it appears to actually be encrypting the data it captures. It also requires you to use a Windows Hello login every time you open the timeline-like Recall app.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-320-80.png" alt="Recall's sensitive information filter" srcset="https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/PXYYhL9hjdNcp5ExufNbQS.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>While I couldn’t immediately tell how good the encryption was, I did try and fail to open both the database file and what appeared to be the screenshot files. The database file appears to be called ukg.db (this is what it <a data-analytics-id="inline-link" href="https://github.com/xaitax/TotalRecall?tab=readme-ov-file#technical-details" data-url="https://github.com/xaitax/TotalRecall?tab=readme-ov-file#technical-details" target="_blank" referrerpolicy="no-referrer-when-downgrade" data-hl-processed="none">was called in the spring Recall release</a>) and it’s located in the C:\users\[your username]\AppData\Local\CoreAIPlatform.00\UKP\{some number} folder. In the spring, when it was unencrypted, researchers were able to open this file and read the data inside, using an app called DB Browser (SQLite). However, now I couldn’t open it.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-320-80.png" alt="ukg db file" srcset="https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/fBmH6aCQeXHQ6L8wkSaAkZ.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>The screenshots appear to be files in a subfolder called AsymStore. I couldn’t open those either and I tried to open them as PNGs, BMPs or JPGs. Perhaps hackers will figure out how to open these files, but as far as I could tell, a typical user can’t open them outside of the Recall app.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-320-80.png" alt="Recall screenshot folder" srcset="https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/Y2WPFD82ZpYE9HqoypDWBc.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>The only way I could view Recall screenshots was by using the Recall app to either search my timeline or browse it. Every time I opened the Recall app, I was asked to use a Windows Hello facial login. And the first time I opened the app, it insisted that I set up a Windows Hello biometric login using either my face or fingerprint. However, Windows Hello also allowed me to log in with a 4-digit PIN.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-320-80.png" alt="Windows Hello PIN login" srcset="https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/tZP4WMw7Xafwc2xwbaJT2f.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>So, if a bad actor has access to your computer and knows your PIN, they could view Recall bypassing the biometric security checks. They don’t even need physical access to the PC. I was able to access the Recall app and view the timeline on a remote computer by using TeamViewer, a popular remote access application.</p><figure data-bordeaux-image-check=""><div><p><picture><source type="image/webp" srcset="https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-320-80.png.webp 320w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-480-80.png.webp 480w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-650-80.png.webp 650w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-970-80.png.webp 970w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-1024-80.png.webp 1024w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-1200-80.png.webp 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)"><img src="https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-320-80.png" alt="Using TeamViewer to access recall" srcset="https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-320-80.png 320w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-480-80.png 480w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-650-80.png 650w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-970-80.png 970w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-1024-80.png 1024w, https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi-1200-80.png 1200w" sizes="(min-width: 1000px) 970px, calc(100vw - 40px)" loading="lazy" data-original-mos="https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi.png" data-pin-media="https://cdn.mos.cms.futurecdn.net/wsU7dAsCnWSzbPdwwPyKSi.png"></picture></p></div><figcaption itemprop="caption description"><span itemprop="copyrightHolder">(Image credit: Future)</span></figcaption></figure><p>You could argue that chances are someone won’t be remotely accessing your desktop without your permission. You could also take solace in the fact that Recall seems to filter out shopping pages from its captures (at least in the instances that I tested). But all you need is the right confluence of events and your personal data, anything from your Social Security number to the username and password you use for your email, could be available to a hacker.</p>
</div>



<!-- Drop in a standard article here maybe? -->


<div id="slice-container-authorBio-tbEeKQ57ATUGUnUKRir5vA"><p>Avram Piltch is Tom's Hardware's editor-in-chief. When he's not playing with the latest gadgets at work or putting on VR helmets at trade shows, you'll find him rooting his phone, taking apart his PC or coding plugins. With his technical knowledge and passion for testing, Avram developed many real-world benchmarks, including our laptop battery test.</p></div>
</section>





<div id="slice-container-relatedArticles"><p><h5>Most Popular</h5></p></div>








</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Android XR (309 pts)]]></title>
            <link>https://blog.google/products/android/android-xr/</link>
            <guid>42400556</guid>
            <pubDate>Thu, 12 Dec 2024 16:26:31 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://blog.google/products/android/android-xr/">https://blog.google/products/android/android-xr/</a>, See on <a href="https://news.ycombinator.com/item?id=42400556">Hacker News</a></p>
Couldn't get https://blog.google/products/android/android-xr/: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[A simple math error sparked a panic about black plastic kitchen utensils (121 pts)]]></title>
            <link>https://nationalpost.com/news/canada/black-plastic</link>
            <guid>42400008</guid>
            <pubDate>Thu, 12 Dec 2024 15:34:38 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://nationalpost.com/news/canada/black-plastic">https://nationalpost.com/news/canada/black-plastic</a>, See on <a href="https://news.ycombinator.com/item?id=42400008">Hacker News</a></p>
Couldn't get https://nationalpost.com/news/canada/black-plastic: Error: Request failed with status code 403]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Kubernetes Spec Explorer (173 pts)]]></title>
            <link>https://kubespec.dev/</link>
            <guid>42399701</guid>
            <pubDate>Thu, 12 Dec 2024 15:02:14 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://kubespec.dev/">https://kubespec.dev/</a>, See on <a href="https://news.ycombinator.com/item?id=42399701">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>  <div>  <h2>
Kubernetes Spec Explorer  <span>
v1.32 </span> </h2> <p>
Find the documentation for all builtin resources, properties, types, and
    examples.
</p> <p>
Select a kind from the list below to get started.
</p> </div> <div> <div> <h3> Workloads </h3> <ul> <a href="https://kubespec.dev/batch/v1/CronJob"> <div> <p> batch/v1 </p><p> CronJob </p></div> </a><a href="https://kubespec.dev/apps/v1/DaemonSet"> <div> <p> apps/v1 </p><p> DaemonSet </p></div> </a><a href="https://kubespec.dev/apps/v1/Deployment"> <div> <p> apps/v1 </p><p> Deployment </p></div> </a><a href="https://kubespec.dev/batch/v1/Job"> <div> <p> batch/v1 </p><p> Job </p></div> </a><a href="https://kubespec.dev/v1/Pod"> <div> <p> v1 </p><p> Pod </p></div> </a><a href="https://kubespec.dev/apps/v1/ReplicaSet"> <div> <p> apps/v1 </p><p> ReplicaSet </p></div> </a><a href="https://kubespec.dev/v1/ReplicationController"> <div> <p> v1 </p><p> ReplicationController </p></div> </a><a href="https://kubespec.dev/apps/v1/StatefulSet"> <div> <p> apps/v1 </p><p> StatefulSet </p></div> </a> </ul> </div><div> <h3> Cluster </h3> <ul> <a href="https://kubespec.dev/v1/Event"> <div> <p> v1 </p><p> Event </p></div> </a><a href="https://kubespec.dev/events.k8s.io/v1/Event"> <div> <p> events.k8s.io/v1 </p><p> Event </p></div> </a><a href="https://kubespec.dev/v1/Namespace"> <div> <p> v1 </p><p> Namespace </p></div> </a><a href="https://kubespec.dev/v1/Node"> <div> <p> v1 </p><p> Node </p></div> </a> </ul> </div><div> <h3> Networking </h3> <ul> <a href="https://kubespec.dev/v1/Endpoints"> <div> <p> v1 </p><p> Endpoints </p></div> </a><a href="https://kubespec.dev/discovery.k8s.io/v1/EndpointSlice"> <div> <p> discovery.k8s.io/v1 </p><p> EndpointSlice </p></div> </a><a href="https://kubespec.dev/networking.k8s.io/v1/Ingress"> <div> <p> networking.k8s.io/v1 </p><p> Ingress </p></div> </a><a href="https://kubespec.dev/networking.k8s.io/v1/IngressClass"> <div> <p> networking.k8s.io/v1 </p><p> IngressClass </p></div> </a><a href="https://kubespec.dev/networking.k8s.io/v1/NetworkPolicy"> <div> <p> networking.k8s.io/v1 </p><p> NetworkPolicy </p></div> </a><a href="https://kubespec.dev/v1/Service"> <div> <p> v1 </p><p> Service </p></div> </a> </ul> </div><div> <h3> Configuration </h3> <ul> <a href="https://kubespec.dev/v1/ConfigMap"> <div> <p> v1 </p><p> ConfigMap </p></div> </a><a href="https://kubespec.dev/autoscaling/v1/HorizontalPodAutoscaler"> <div> <p> autoscaling/v1 </p><p> HorizontalPodAutoscaler </p></div> </a><a href="https://kubespec.dev/autoscaling/v2/HorizontalPodAutoscaler"> <div> <p> autoscaling/v2 </p><p> HorizontalPodAutoscaler </p></div> </a><a href="https://kubespec.dev/coordination.k8s.io/v1/Lease"> <div> <p> coordination.k8s.io/v1 </p><p> Lease </p></div> </a><a href="https://kubespec.dev/v1/LimitRange"> <div> <p> v1 </p><p> LimitRange </p></div> </a><a href="https://kubespec.dev/policy/v1/PodDisruptionBudget"> <div> <p> policy/v1 </p><p> PodDisruptionBudget </p></div> </a><a href="https://kubespec.dev/v1/ResourceQuota"> <div> <p> v1 </p><p> ResourceQuota </p></div> </a><a href="https://kubespec.dev/v1/Secret"> <div> <p> v1 </p><p> Secret </p></div> </a> </ul> </div><div> <h3> Storage </h3> <ul> <a href="https://kubespec.dev/storage.k8s.io/v1/CSIDriver"> <div> <p> storage.k8s.io/v1 </p><p> CSIDriver </p></div> </a><a href="https://kubespec.dev/storage.k8s.io/v1/CSINode"> <div> <p> storage.k8s.io/v1 </p><p> CSINode </p></div> </a><a href="https://kubespec.dev/storage.k8s.io/v1/CSIStorageCapacity"> <div> <p> storage.k8s.io/v1 </p><p> CSIStorageCapacity </p></div> </a><a href="https://kubespec.dev/v1/PersistentVolume"> <div> <p> v1 </p><p> PersistentVolume </p></div> </a><a href="https://kubespec.dev/v1/PersistentVolumeClaim"> <div> <p> v1 </p><p> PersistentVolumeClaim </p></div> </a><a href="https://kubespec.dev/storage.k8s.io/v1/StorageClass"> <div> <p> storage.k8s.io/v1 </p><p> StorageClass </p></div> </a><a href="https://kubespec.dev/storage.k8s.io/v1/VolumeAttachment"> <div> <p> storage.k8s.io/v1 </p><p> VolumeAttachment </p></div> </a> </ul> </div><div> <h3> Administration </h3> <ul> <a href="https://kubespec.dev/admissionregistration.k8s.io/v1/MutatingWebhookConfiguration"> <div> <p> admissionregistration.k8s.io/v1 </p><p> MutatingWebhookConfiguration </p></div> </a><a href="https://kubespec.dev/scheduling.k8s.io/v1/PriorityClass"> <div> <p> scheduling.k8s.io/v1 </p><p> PriorityClass </p></div> </a><a href="https://kubespec.dev/node.k8s.io/v1/RuntimeClass"> <div> <p> node.k8s.io/v1 </p><p> RuntimeClass </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1/ValidatingAdmissionPolicy"> <div> <p> admissionregistration.k8s.io/v1 </p><p> ValidatingAdmissionPolicy </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1beta1/ValidatingAdmissionPolicy"> <div> <p> admissionregistration.k8s.io/v1beta1 </p><p> ValidatingAdmissionPolicy </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1/ValidatingAdmissionPolicyBinding"> <div> <p> admissionregistration.k8s.io/v1 </p><p> ValidatingAdmissionPolicyBinding </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1beta1/ValidatingAdmissionPolicyBinding"> <div> <p> admissionregistration.k8s.io/v1beta1 </p><p> ValidatingAdmissionPolicyBinding </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1/ValidatingWebhookConfiguration"> <div> <p> admissionregistration.k8s.io/v1 </p><p> ValidatingWebhookConfiguration </p></div> </a> </ul> </div><div> <h3> Access Control </h3> <ul> <a href="https://kubespec.dev/rbac.authorization.k8s.io/v1/ClusterRole"> <div> <p> rbac.authorization.k8s.io/v1 </p><p> ClusterRole </p></div> </a><a href="https://kubespec.dev/rbac.authorization.k8s.io/v1/ClusterRoleBinding"> <div> <p> rbac.authorization.k8s.io/v1 </p><p> ClusterRoleBinding </p></div> </a><a href="https://kubespec.dev/rbac.authorization.k8s.io/v1/Role"> <div> <p> rbac.authorization.k8s.io/v1 </p><p> Role </p></div> </a><a href="https://kubespec.dev/rbac.authorization.k8s.io/v1/RoleBinding"> <div> <p> rbac.authorization.k8s.io/v1 </p><p> RoleBinding </p></div> </a><a href="https://kubespec.dev/v1/ServiceAccount"> <div> <p> v1 </p><p> ServiceAccount </p></div> </a> </ul> </div><div> <h3> Other </h3> <ul> <a href="https://kubespec.dev/apiregistration.k8s.io/v1/APIService"> <div> <p> apiregistration.k8s.io/v1 </p><p> APIService </p></div> </a><a href="https://kubespec.dev/certificates.k8s.io/v1/CertificateSigningRequest"> <div> <p> certificates.k8s.io/v1 </p><p> CertificateSigningRequest </p></div> </a><a href="https://kubespec.dev/certificates.k8s.io/v1alpha1/ClusterTrustBundle"> <div> <p> certificates.k8s.io/v1alpha1 </p><p> ClusterTrustBundle </p></div> </a><a href="https://kubespec.dev/v1/ComponentStatus"> <div> <p> v1 </p><p> ComponentStatus </p></div> </a><a href="https://kubespec.dev/apps/v1/ControllerRevision"> <div> <p> apps/v1 </p><p> ControllerRevision </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1alpha3/DeviceClass"> <div> <p> resource.k8s.io/v1alpha3 </p><p> DeviceClass </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1beta1/DeviceClass"> <div> <p> resource.k8s.io/v1beta1 </p><p> DeviceClass </p></div> </a><a href="https://kubespec.dev/flowcontrol.apiserver.k8s.io/v1/FlowSchema"> <div> <p> flowcontrol.apiserver.k8s.io/v1 </p><p> FlowSchema </p></div> </a><a href="https://kubespec.dev/networking.k8s.io/v1beta1/IPAddress"> <div> <p> networking.k8s.io/v1beta1 </p><p> IPAddress </p></div> </a><a href="https://kubespec.dev/coordination.k8s.io/v1alpha2/LeaseCandidate"> <div> <p> coordination.k8s.io/v1alpha2 </p><p> LeaseCandidate </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1alpha1/MutatingAdmissionPolicy"> <div> <p> admissionregistration.k8s.io/v1alpha1 </p><p> MutatingAdmissionPolicy </p></div> </a><a href="https://kubespec.dev/admissionregistration.k8s.io/v1alpha1/MutatingAdmissionPolicyBinding"> <div> <p> admissionregistration.k8s.io/v1alpha1 </p><p> MutatingAdmissionPolicyBinding </p></div> </a><a href="https://kubespec.dev/v1/PodTemplate"> <div> <p> v1 </p><p> PodTemplate </p></div> </a><a href="https://kubespec.dev/flowcontrol.apiserver.k8s.io/v1/PriorityLevelConfiguration"> <div> <p> flowcontrol.apiserver.k8s.io/v1 </p><p> PriorityLevelConfiguration </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1alpha3/ResourceClaim"> <div> <p> resource.k8s.io/v1alpha3 </p><p> ResourceClaim </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1beta1/ResourceClaim"> <div> <p> resource.k8s.io/v1beta1 </p><p> ResourceClaim </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1alpha3/ResourceClaimTemplate"> <div> <p> resource.k8s.io/v1alpha3 </p><p> ResourceClaimTemplate </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1beta1/ResourceClaimTemplate"> <div> <p> resource.k8s.io/v1beta1 </p><p> ResourceClaimTemplate </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1alpha3/ResourceSlice"> <div> <p> resource.k8s.io/v1alpha3 </p><p> ResourceSlice </p></div> </a><a href="https://kubespec.dev/resource.k8s.io/v1beta1/ResourceSlice"> <div> <p> resource.k8s.io/v1beta1 </p><p> ResourceSlice </p></div> </a><a href="https://kubespec.dev/networking.k8s.io/v1beta1/ServiceCIDR"> <div> <p> networking.k8s.io/v1beta1 </p><p> ServiceCIDR </p></div> </a><a href="https://kubespec.dev/internal.apiserver.k8s.io/v1alpha1/StorageVersion"> <div> <p> internal.apiserver.k8s.io/v1alpha1 </p><p> StorageVersion </p></div> </a><a href="https://kubespec.dev/storagemigration.k8s.io/v1alpha1/StorageVersionMigration"> <div> <p> storagemigration.k8s.io/v1alpha1 </p><p> StorageVersionMigration </p></div> </a><a href="https://kubespec.dev/storage.k8s.io/v1alpha1/VolumeAttributesClass"> <div> <p> storage.k8s.io/v1alpha1 </p><p> VolumeAttributesClass </p></div> </a><a href="https://kubespec.dev/storage.k8s.io/v1beta1/VolumeAttributesClass"> <div> <p> storage.k8s.io/v1beta1 </p><p> VolumeAttributesClass </p></div> </a> </ul> </div> </div>  </div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[The FDA Hasn't Inspected This Drug Factory After 7 Recalls for the Same Flaw (147 pts)]]></title>
            <link>https://www.propublica.org/article/glenmark-pharmaceuticals-recalls-fda-oversight</link>
            <guid>42399530</guid>
            <pubDate>Thu, 12 Dec 2024 14:45:36 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.propublica.org/article/glenmark-pharmaceuticals-recalls-fda-oversight">https://www.propublica.org/article/glenmark-pharmaceuticals-recalls-fda-oversight</a>, See on <a href="https://news.ycombinator.com/item?id=42399530">Hacker News</a></p>
Couldn't get https://www.propublica.org/article/glenmark-pharmaceuticals-recalls-fda-oversight: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Fermat's Last Theorem – how it's going (313 pts)]]></title>
            <link>https://xenaproject.wordpress.com/2024/12/11/fermats-last-theorem-how-its-going/</link>
            <guid>42399397</guid>
            <pubDate>Thu, 12 Dec 2024 14:30:37 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://xenaproject.wordpress.com/2024/12/11/fermats-last-theorem-how-its-going/">https://xenaproject.wordpress.com/2024/12/11/fermats-last-theorem-how-its-going/</a>, See on <a href="https://news.ycombinator.com/item?id=42399397">Hacker News</a></p>
<div id="readability-page-1" class="page"><div>
						
<p>So I’m two months into trying to teach a proof of Fermat’s Last Theorem (FLT) to a computer. Most of “how it’s going” is quite tedious and technical to explain: to cut a long story short, Wiles proved an “R=T” theorem and much of the work so far has gone into teaching the computer what R and T are; we still have not finished either definition. However my PhD student Andrew Yang has already proved the abstract commutative algebra result which we need (“if abstract rings R and T satisfy lots of technical conditions then they’re equal”), and this is an exciting first step. The current state of the write-up is <a href="https://imperialcollegelondon.github.io/FLT/blueprint/">here</a>, and the system we are using is <a href="https://lean-fro.org/">Lean</a> and its mathematical library <a href="https://github.com/leanprover-community/mathlib4">mathlib</a>, maintained by the <a href="https://leanprover-community.github.io/">Lean prover community</a>. If you know a bit of Lean and a bit of number theory then feel free to read the <a href="https://github.com/ImperialCollegeLondon/FLT/blob/main/CONTRIBUTING.md">contribution guidelines</a>, checkout the <a href="https://github.com/orgs/ImperialCollegeLondon/projects/102">project dashboard</a> and claim an <a href="https://github.com/ImperialCollegeLondon/FLT/issues">issue</a>. As I say, we’re two months in. However we already have one interesting story, which I felt was worth sharing. Who knows if it’s an indication of what is to come.</p>



<p>We’re not formalising the old-fashioned 1990s proof of FLT. Since then, work of many people (Diamond/Fujiwara, Kisin, Taylor, Scholze and several others) led to the proof being generalised and simplified, and part of the motivation of my work is not to just get FLT over the line but to prove these more general and powerful results. Why? Because if the AI mathematics revolution actually happens (which it might) and if Lean turns out to be an important component (which it might) then computers will be in a better position to start helping humans to push back the boundaries of modern number theory because of this formalization work, as they’ll have access to key modern definitions in a form which they understand. One concept which was not used in Wiles’ original proof but which is being used in the proof we’re formalizing, is crystalline cohomology, a theory developed in the 60s and 70s in Paris, with the foundations laid down by Berthelot following ideas of Grothendieck. The basic idea here is that the classical exponential and logarithm functions play a key role in differential geometry (relating Lie algebras and Lie groups, for example), and in particular in understanding de Rham cohomology, but they do not work in more arithmetic situations (for example in characteristic p); the theory of “divided power structures”, developed in the 1960s in a series of beautiful papers by Roby, play a crucial role in constructing an analogue of these functions which can be used in the arithmetic case. tl;dr: we need to teach the computer crystalline cohomology, so first we need to teach it divided powers.</p>



<p>Antoine Chambert-Loir and Maria Ines de Frutos Fernandez have been teaching the theory of divided powers to Lean, and over the summer Lean did that irritating thing which it sometimes does: it complained about the human presentation of an argument in the standard literature, and on closer inspection it turned out that the human argument left something to be desired. In particular a key lemma in Roby’s work seems to be incorrect. When Antoine told me this in a DM, he remarked that he would suppose I thought this was funny, and indeed the very long string of laughing emojis which he got back as a response to his message confirmed this. However Antoine, being rather more professional than me, argued that instead of me tweeting about the issue (which I can’t do anyway because I left Twitter and joined <a href="https://bsky.app/profile/xenaproject.bsky.social">bluesky</a> yesterday), we should in fact attempt to fix the problem. We went about this in rather different ways. Antoine put it on his job list to look at, and I completely ignored the problem and just started occasionally mentioning to people that the proof was in trouble, in a weak sense. I say “in a weak sense” because this observation has to be put into some context. According to the way I currently view mathematics (as a formalist), the entire theory of crystalline cohomology vanished from the literature at the moment Antoine discovered the issue, with massive collateral damage (for example huge chunks of Scholze’s work just disappeared, entire books and papers vaporised etc). But this disappearance is only <em>temporary</em>. Crystalline cohomology is in no practical sense “wrong”. The theorems were still undoubtedly <em>correct</em>, it’s just that the proofs were as far as I am concerned <em>incomplete</em> (or at least, the ones Antoine and Maria Ines were following were), and unfortunately it is now our job to fix them. The thing I want to stress is that it was absolutely clear to both me and Antoine that the proofs of the main results were of course going to be <em>fixable</em>, even if an intermediate lemma was false, because crystalline cohomology has been used so much since the 1970s that if there were a problem with it, it would have come to light a long time ago. Every expert I’ve spoken to is in complete agreement on this point (and several even went so far as to claim that I’m making a fuss about nothing, but perhaps they don’t understand what formalization actually means in practice: you can’t just say “I’m sure it’s fixable” — you have to <strong>actually fix it</strong>). One added twist is that Roby, Grothendieck and Berthelot have all died, so we could not go back to the original experts and ask directly for help.</p>



<p>[For those that are interested in more technical details, here they are: Berthelot’s thesis does not develop the theory of divided powers from scratch, he uses Roby’s “Les algebres a puissances divisees”, published in Bull Sci Math, 2ieme serie, 89, 1965, pages 75-91. Lemme 8 (on p86) of that paper seems to be false and it’s not obvious how to repair the proof; the proof of the lemma misquotes another lemma of Roby from his 1963 Ann Sci ENS paper; the correct statement is Gamma_A(M) tensor_A R = Gamma_R(M tensor_A R) but one of the tensor products accidentally falls off in the application. This breaks Roby’s proof that the divided power algebra of a module has divided powers, and thus stops us from defining the ring A_{cris}.]</p>



<p>So as I say, Antoine worked on fixing the problem, whereas I just worked on gossiping about it to the experts, and I made the mistake of telling Tadashi Tokieda about it in a <a href="https://www.instagram.com/coffeezeeholloway/">coffeeshop in Islington</a>, he duly went back to Stanford and mentioned it to Brian Conrad, and the next thing I knew Conrad was in my inbox asking me what was all this about crystalline cohomology being wrong. I explained the technical details of the issue, Conrad agreed that there seemed to be a problem and he went off to think about it. Several hours later he got back to me and pointed out that another, different, proof of the claim that the universal divided power algebra of a module had divided powers was in the appendix to the Berthelot-Ogus book on crystalline cohomology, and that as far as Conrad was concerned this approach should be fine. The proof was back on! </p>



<p>And that is pretty much the end of the story, other than the fact that last month I visited Berkeley and I had lunch with Arthur Ogus, who I’ve known since I was a post-doc there in the 90s. I’d promised Arthur a story of how he’d saved Fermat’s Last Theorem, and over the meal I told him about how his appendix had dug me out of a hole. His response was “Oh! That appendix has several errors in it! But it’s OK, I think I know how to fix them.”</p>



<p>This story really highlights, to me, the poor job which humans do of documenting modern mathematics. There appear to be so many things which are “known to the experts” but not correctly documented. The experts are in agreement that the important ideas are robust enough to withstand knocks like this, but the <em>details</em> of what is actually going on might not actually be where you expect them to be. For me, this is just one of many reasons why humans might want to consider getting mathematics written down <em>properly</em>, i.e. in a formal system, where the chances of error are orders of magnitude smaller. However most mathematicians are not formalists, and for those people I need to justify my work in a different way. For those mathematicians, I argue that teaching machines our arguments is a crucial step towards getting machines to do it themselves. Until then, we seemed to be doomed to fix up human errors manually.</p>



<p>The story does have a happy ending though — two weeks ago Maria Ines gave <a href="https://talks.cam.ac.uk/talk/index/222778">a talk</a> about formalization of divided powers in the Cambridge Formalization of Mathematics seminar (which was started by Angeliki Koutsoukou-Argyraki a couple of years ago — thanks Angeliki!), and my understanding of Maria Ines’ talk is that these issues have now been sorted out. So we are actually back on track. Until the next time the literature lets us down…</p>

			
														</div><div id="entry-author-info">
						<p><img alt="" src="https://2.gravatar.com/avatar/e7ccfd42722fdb89c0fdea2f473152c14ab978bc1974acc4d67944906653f36e?s=60&amp;d=identicon&amp;r=G" srcset="https://2.gravatar.com/avatar/e7ccfd42722fdb89c0fdea2f473152c14ab978bc1974acc4d67944906653f36e?s=60&amp;d=identicon&amp;r=G 1x, https://2.gravatar.com/avatar/e7ccfd42722fdb89c0fdea2f473152c14ab978bc1974acc4d67944906653f36e?s=90&amp;d=identicon&amp;r=G 1.5x, https://2.gravatar.com/avatar/e7ccfd42722fdb89c0fdea2f473152c14ab978bc1974acc4d67944906653f36e?s=120&amp;d=identicon&amp;r=G 2x, https://2.gravatar.com/avatar/e7ccfd42722fdb89c0fdea2f473152c14ab978bc1974acc4d67944906653f36e?s=180&amp;d=identicon&amp;r=G 3x, https://2.gravatar.com/avatar/e7ccfd42722fdb89c0fdea2f473152c14ab978bc1974acc4d67944906653f36e?s=240&amp;d=identicon&amp;r=G 4x" height="60" width="60" loading="lazy" decoding="async">						</p><!-- #author-avatar -->
						<div id="author-description">
							<h2>
							About xenaproject							</h2><p>
							The Xena Project aims to get mathematics undergraduates (at Imperial College and beyond) trained in the art of formalising mathematics on a computer. Why? Because I have this feeling that digitising mathematics will be really important one day.							</p><!-- #author-link	-->
						</div><!-- #author-description -->
					</div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Gukesh becomes the youngest chess world champion in history (964 pts)]]></title>
            <link>https://lichess.org/@/Lichess/blog/wcc-2024-round-14-gukesh-becomes-the-youngest-world-champion-in-history/cDggdNZw</link>
            <guid>42398952</guid>
            <pubDate>Thu, 12 Dec 2024 13:29:23 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://lichess.org/@/Lichess/blog/wcc-2024-round-14-gukesh-becomes-the-youngest-world-champion-in-history/cDggdNZw">https://lichess.org/@/Lichess/blog/wcc-2024-round-14-gukesh-becomes-the-youngest-world-champion-in-history/cDggdNZw</a>, See on <a href="https://news.ycombinator.com/item?id=42398952">Hacker News</a></p>
Couldn't get https://lichess.org/@/Lichess/blog/wcc-2024-round-14-gukesh-becomes-the-youngest-world-champion-in-history/cDggdNZw: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[BlenderGPT (394 pts)]]></title>
            <link>https://www.blendergpt.org/</link>
            <guid>42398913</guid>
            <pubDate>Thu, 12 Dec 2024 13:23:21 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://www.blendergpt.org/">https://www.blendergpt.org/</a>, See on <a href="https://news.ycombinator.com/item?id=42398913">Hacker News</a></p>
<div id="readability-page-1" class="page"><div><h2>BLENDERGPT<span>®</span></h2><p>is an advanced artificial intelligence program that creates 3D models from text or image prompts in ~20 seconds.</p><p>It lets you synthesise fully textured meshes, then import directly to Blender with a shortcut or download the source files for use in any compatible software.</p><p>we think its really good, try it out for free now.</p><p><img src="https://www.blendergpt.org/supercharging.jpg" alt="Supercharging Artists"></p></div></div>]]></description>
        </item>
        <item>
            <title><![CDATA[Show HN: Quantus – LeetCode for Financial Modeling (243 pts)]]></title>
            <link>https://quantus.finance/</link>
            <guid>42398471</guid>
            <pubDate>Thu, 12 Dec 2024 12:04:59 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://quantus.finance/">https://quantus.finance/</a>, See on <a href="https://news.ycombinator.com/item?id=42398471">Hacker News</a></p>
&lt;Unparsable&gt;]]></description>
        </item>
        <item>
            <title><![CDATA[Parkinson's Law: It’s real, so use it (179 pts)]]></title>
            <link>https://theengineeringmanager.substack.com/p/parkinsons-law-its-real-so-use-it</link>
            <guid>42397781</guid>
            <pubDate>Thu, 12 Dec 2024 09:48:47 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://theengineeringmanager.substack.com/p/parkinsons-law-its-real-so-use-it">https://theengineeringmanager.substack.com/p/parkinsons-law-its-real-so-use-it</a>, See on <a href="https://news.ycombinator.com/item?id=42397781">Hacker News</a></p>
Couldn't get https://theengineeringmanager.substack.com/p/parkinsons-law-its-real-so-use-it: Error: timeout of 10000ms exceeded]]></description>
        </item>
        <item>
            <title><![CDATA[Programming Language Memory Models (2021) (102 pts)]]></title>
            <link>https://research.swtch.com/plmm</link>
            <guid>42397737</guid>
            <pubDate>Thu, 12 Dec 2024 09:42:02 GMT</pubDate>
            <description><![CDATA[<p>URL: <a href="https://research.swtch.com/plmm">https://research.swtch.com/plmm</a>, See on <a href="https://news.ycombinator.com/item?id=42397737">Hacker News</a></p>
Couldn't get https://research.swtch.com/plmm: Error: timeout of 10000ms exceeded]]></description>
        </item>
    </channel>
</rss>